Ah the wonderful 'I think i grasp a thing, lets blog it' article full of half-knowledge and bad advice. Also senior dev confusing
[https://i.imgur.com/k9AqNd9.png](https://i.imgur.com/k9AqNd9.png)
And also min/max is standard lib functions and should probably not be implemented by you at all in the real world. 
You talk about performance, but don't have any numbers. Boo.
Yeah, now contribute to an open source project that has funding, and your licence is invalidated. Like, say, you want to update an HTML file for Linux... Linux gets funding, you can't do it now. Like I keep saying, I went through this with Support and Legal for months, stop being a wanker about how you did "Hello World" in high school and therefore I'm wrong.
I'm a convert. It's a joy to debug with. VS Code feels Spartan in comparison. Only negative for me is the lack of webdav support. Paying was worth it. 
Yes, you probably should use the built-ins for that. However, one should keep in mind that it would iterate 3 times over the array. `Math.max(...numbers)` is still a loop.
&gt;free educational licenses can be used strictly for educational, non-commercial purposes (including academic research). If you're employed at a commercial company, you may consider asking your employer to purchase a business subscription for the JetBrains products you need. If you're doing freelance work, you can purchase a separate personal subscription for commercial projects (monthly or annual). It sounds like you were equating 'open source' with 'non-commercial'. Which was wrong. Wanker. 
Yea but it's just not as good
Do you mean to say why am I not loading the content directly from DOM rather than code? Thanks.
Currently I'm working with the old Angular and Laravel stack, I've been using PHPStorm for a while and I'm loving it, because it have a basic DB IDE inside and works well with the PHP inheritance. Soon I'll be starting a new position as Frontend Engineer (React, Vanilla JS, CSS, SCSS, HTML). I wonder if WebStorm its better for this case, I know about VS Code, but I really like the IntelliJ IDE and I don't mind paying for the software, its stable and with great support from the company. I would like to hear from people who worked with both (WebStorm, VS Code), maybe I'm missing something by not using the popular one... 
Webstorm all day, though I also have VS Code for making quick edits ala command line via *code &lt;file path&gt;*
I prefer webstorm over vs code. Mostly because the features that I use the mode (run mocha tests and run tests with coverage) are built in and I don’t need a plugin. But I’m not gonna lie, sometimes I use VS code because I need a change on my routine and it is really great that I don’t really miss webstorm. Also this release seems great. So why don’t you give it a 30 day trial? 
Yes. I suppose the context matters. But I'm curious why you took this approach rather than the alternative. 
Hey! You can get all the Jetbrains products for free via Github Students. Just to let you know.
I've been using Sublime Text for quick text edits, its lighter to run... 
Believe me when I say I'm very familiar with this talk. I will try not to just promote my own library in this context but there are other ways to solve this issue that exist today (have existed for years). React is far from the pinnacle of performance even with their recent updates. They don't have to be. It's performant enough. But they are far from the gold standard. Not even close. There are libraries out there statistically significantly more performant than React in pretty much any conceivable benchmark even in the VDOM space. Concurrent mode solves an interesting performance problem React has that other approaches don't. To put it in perspective there are declarative libraries that can perform in the range of only 5-7% slower than the most optimally targeted and implemented vanilla JS code. React falls in the 80-90% slower. React could get 30-40% more performant and still be slower than Inferno or lit-html. And it's not like others won't do the same thing when Concurrent mode lands.
I almost added a comment about the tech being dated. The core ideas are still relevant though. 
Yeeeeep, and guess what if you want to contribute to Linux... it's funded, if you want to work on KDE, it's funded, the definition of "non-commercial" is that it has no funding. So you're a student and you're working on a project like, say, React... it's funded, you can't use WebStorm for that. Starting to understand now? You can't work on any open source project that has funding from anywhere.
/r/ChoosingBeggars
What are you missing in particular? There's usually an equivalent code marketplace extension for most things.
Webstorm is hard to configure with a modern stack. Tooling is updated all the time in JS. Webstorm predates things like TS, eslint, and prettier. It took them waaaaaaaaaaaaaaay too long to support these thing out of the box. Semi-annual releases kind of suck compared to plugins that can be updated all the time. Works great for legacy stacks though.
I'm on VSCode now.
One of the selling arguments for me is simply not having to set everything up myself. I don't have to install an ESLint extension and a Vue extension and everything else, I just install WebStorm and it works. And even though I have tried, I've never gotten VSCode to have IntelliSense quite as good as WebStorms, which is a must-have for me, especially when refactoring code. But that might have just been me not setting it up correctly.
Buy a domain.
is the repo public? can you share?
I'm in the same camp as you. Have a portfolio website up but not much else. :-(
I'm sorry
My code snippet above is an example of *writable code* and how reduce functions are not readable. :) It is from a homework assignment in college, that I was rushing to finish in the midnight hours 
The repo isn't public, but I'd like to open source some of the supporting coding at some point if it makes sense. Happy to answer any questions about how it's built.
Just switched to webstorm from atom and my productivity is 📈📈📈📈.
 Released the second part of the series. As I mentioned at the bottom of the article, I'd appreciate if you could come up with ideas that might be included in the next part!
This looks like a SCADA recipe manager. Have a look at WonderWare. 
I think we’re talking about slightly different things here. Suspense helps with IO expensive work, where you can prefetch work and suspend on that workload from within a component boundary. This leads to performance wins when it comes to layout thrashing - as you can wait for several things to load before showing content (I.e. images to load and decode). With CPU bound work, scheduling can help with time slicing. Say a component tree takes 12ms to render. This would cause a frame to drop, and would cause jank because of the points you made (single threaded JS). React can yield on each component and ensure after 7ms that the browser can continue to operate without jank. It will wait for the next frame to continue to work and commit the work to the DOM.
Yeah there has been huge progress in the past couple years. Some libraries now have almost indistinguishable performance with optimized Vanilla JS. Second decimal digit was needed to even differentiate. Some of the fastest libraries from a couple years ago are much nearer to middle of the pack these days.
Even nicer with spread operator: `Math.max(...list)` and `Math.min(...list)`
I should have been clearer here. I was taking about expensive work in relation to virtual DOM vs other implementations.
Hi /u/codingkorra, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It would be interesting to see this applied to pull requests. How long will this PR take to review based on number of characters changed, number of files edited
This should be a VS code extension 
Just use VSCode...
how are you doing the scrapping?
I highly recommend you to specialize on one language in the beginning. Once you are familiar with it, you can add new skills. Also, before applying for freelance jobs, you better go with participating in open source projects or unpaid projects. 
Also better and easier setup for things like Prettier with File Watchers, better run system, the interface is smaller and makes more sense for larger projects, and the vim emulator is **amazing**. Also the shortcuts for folding are a lot easier, support for languages is included automatically, and switching projects is much easier.
nice video, as someone who uses inheritance a lot this really helped sell composition.
Why a GUI? This makes me want to puke a little.
When things get messy, a GUI is actually pretty helpful. CMAKE-gui for example helped me many times
It helps with IO expensive work when application is designed in a way that it starts pulling data when component is executed, but it is not the most efficient way to build data dependency graph, because it depends on the UI relationships, instead of relationships between data. And if application has cpu expensive components, we can start seeing increased IO delays because of time slicing. But from the composition model perspective I think that it is the best way to solve this problem for the majority of use cases. &amp;#x200B; With CPU bound work, it depends on what use cases we are trying to solve. Since time slicing doesn't solve problems with actually cpu-bound expensive work in components, this work is moved to webworkers, the rest is just managing couple thousands nodes in a scene graph and reconciliation algo. There are probably use cases when it makes sense to add time slicing overhead and reduce jank, but there are also many use cases when it would be better to reduce overall library overhead and just perform all work in one frame. &amp;#x200B; Different tradeoffs, it is not a silver bullet.
Sorry, but big parts of what you write are wrong. WebStorm has first-class support for many important tools like ESLint and many more, the plugins are maintained by themselves, and are pretty much always up-to-date (since it uses your installed binaries it will be current anyways as long as the CLI of the tool doesn't change). The integration with React, Vue and Angular is simply amazing. A lot of WebStorm will feel like bloat **if you don't use it**. Which is fine, many people don't need all of the features. But that doesn't mean that it's bloat. And if nobody were using WebStorm in professional shops, I doubt they'd continue producing it. :)
There is basically a pipeline of queues from content ingestion to parsing/mapping to clustering to scoring to classification to publishing. Once one stage is finished, it will hand off its work to the next stage. Some cleanup tasks run periodically to restart any failed jobs. &amp;#x200B; Specifically, since that part is built in Elixir I'm using [https://github.com/philss/floki](https://github.com/philss/floki) to parse and search the HTML. There's plenty of weird html that will cause errors in my parsing, but those are isolated and won't stop any other jobs.
What's so revolting about this? I think it looks pretty clean
This is one of the most useless libraries I have seen
I tried moving to WebStorm but it made my laptop temperature go through the roof. I'm back on Sublime 3 with a nice theme
Critiques/Feedback: 1. Your projects are very simple and can easily be from tutorials. As a recruiter, I want to see more complex projects that would be hard to replicate following a tutorial. 2. Your favicon is not noticeable. It's so dark, I can't make anything out. 3. Your photo is too pixelated and the oval shape is very outdated. Make it a circle and get a clearer photo. 4. Your portfolio is mundane and boiler plate. You literally just copied the Brad Traversy video instead of learning from it and changing it up a bit. Even the background image is the same. 5. Your portfolio website is simple enough that it can all just be in one page. Just have a navbar up top with anchor links. No need to be switching pages. 6. Get a domain name. It only costs 12 dollars a year to get a google domain. 7. Related to domain name, make sure it's some variation of YOUR own name. Dragonosman is unprofessional. Advice: Don't rush into things. Take your time and learn something well before jumping around. My suggestion would be to get a good grasp of js as a first step. 
I agree that there is no silver bullet. It will be interesting how we do things when async DOM and display locking land in browsers without a flag. In terms of IO expensive work, the key here is to prefetch as much as possible before rendering even begins. One avenue is to do this via SSR, as you'll be able to see on the server what assets are needed ahead of time and push them to the browser. It's all still very much exploratory work though and the suspense API will probably go through many more refinements as we find more use-cases that need supporting from real-world use.
Yeah, unfortunately it's not free even for Open Source projects
Bear in mind that you're going to get a disproportionate number of pro-WebStorm comments in a thread about a WebStorm update.
The project I'm working on is quite complex and is using custom module resolving in webpack and flow instead of TS, so the `go to definition`only rarely works. I used to use Webstorm and it is my understanding that it somehow uses the webpack config to resolve modules, so the internal code navigation worked almost perfectly. Also the built in test runner and debugger was really nice. However, getting a WS license in my company was a hassle and VS code is amazingly good in almost all other respects and for some things, like the grammar for syntax highlighting, I think it's even better.
A GUI for something so simple is revolting. Look at NuGet 🤢🤮
There's always [is-even](https://github.com/jonschlinkert/is-even)
... anyone care? 
What's so special about your project that you need "custom module resolving"? I would of course recommend moving to TS since Flow _sucks_, but different strokes for different folks. :) 
It is. :) https://www.jetbrains.com/buy/opensource/
The main reason and the issue that I face with parsing directly from the DOM is that sometimes some websites tend to use progressive image libraries i.e. - it renders multiple image tags for a particular image in the HTML but displays only the the one that is suitable for the particular screen. This means a substantial amount of increase in the read time which we don't want. For the second question, I'll be considering adding the background image support but currently it is not there yet.
I will be considering adding the markdown support in the future but it needs checking of the relevant tags and other stuff. 
Sucks indeed. Though, I can assure you it was th beat software I have ever bought. What you can do is buy a one-year license and then cancel the subscription which will give you a life-time license for that sole version. Put it up on the Xmas list ;)
&gt; When things get messy You mean like the "a dependency list so long you have to scroll" messy? Because [that's what this useless project got](https://github.com/q-nick/npm-gui/blob/master/package.json). And someone please explain the ws dependency to me. Is this GUI really reacting to all the 100000 updates that happen all the time to the package.json and then reporting it to the frontend? What on earth.
The reason there aren't many -- if any -- books like that is because once you get to large scale topics, then there is no single correct answer. There are numerous avenues and approaches you can take. Just by looking at the variety of frameworks that have come and gone, you can tell how much variety there is in large scale programming. And a particular framework, a particular approach to large scale programming, can fall out of fashion just as quickly as it arrived. So my only suggestion here would be to learn a framework, both how to use it and how its internals work. Then pick a different framework and learn that one too. Then pick a different framework and learn that one too. You'll start to get a sense of how large scale programming can be done, and which approaches you like and don't like. It's isn't a quick and easy answer, sorry about that, but you may be at a level now where there are fewer easy answers.
..Let me pack my stuff and follow me into Nirvana
First of all, I don't get to make the decisions. I'm just a monkey. I'd gradually move to Reason or Elm to get the _native_ type checking, but we're a huge team and with a staggeringly big and complex codebase, where most would probably not be up for such a change and recruiting would also be more difficult. I think some of the custom resolving is what's holding us back from switching to TS, but since VS code is built largely on the TS language server, it would be very convenient to switch. We need the custom module resolving, because we're using the same codebase for several similar, but still significantly different, products and there's a pattern where we sometimes want to import a module that's specific to that flavor, so we do something like `import * as selectors from ./selectors.[platform].js`.
I wouldn't bother with a library for this. Just make a div with position: relative. Then nest a div for each of the graph's components inside the relative div and give them position: absolute. Use js to determine their width and left css attributes
Honestly most list comprehensions in Python are easier to read than the reduce examples in the linked article.
Sometimes I have an array and want to get an array with data from some of their elements. I'd love to do array.filter().map() but that is not very efficient. Does anyone know a good way to do that? I declare a variable and do a map with an if inside. I don't love it.
If we consider Read Time to be 275 words per min, then estimate for 1st image would be 12 / 60 * 275 = 55 words per image.
Looks awesome! Totally gonna use this.
I'm not advocating for always use the functional solution, but if you code the reduce function better you can end up with something like: ``` javascript const getMma = (lst) =&gt; { const data = lst.reduce((acc, v) =&gt; ({ min: (acc.min &gt; v ? v : acc.min), max: (acc.max &lt; v ? v : acc.max), sum: acc.sum + v }), {min: Infinity, max: -Infinity, sum: 0}) return {max: data.max, min: data.min, avg: data.sum / lst.length} } ```
Your comment is why we can’t have nice things. Yes, that’s what ws is doing.
I think your markup is a bit wrong. I would be curious to see the correctly formatted version!
We programmers have such strong opinions about the weirdest things. “Light theme? Ugh, eaten any babies lately Mussohitler?” “A graphical interface for information? Die in a fire”
pretty sure the for loop is a lot easier to read and debug, and probably runs a lot faster.
Your markdown doesn't work (on old reddit at least). Fixed: const getMma = (lst) =&gt; { const data = lst.reduce((acc, v) =&gt; ({ min: (acc.min &gt; v ? v : acc.min), max: (acc.max &lt; v ? v : acc.max), sum: acc.sum + v }), { min: Infinity, max: -Infinity, sum: 0 }); return { max: data.max, min: data.min, avg: data.sum / lst.length }; }; 
I don't agree with you about readability and maintainability; probably about performances you are right
I don't agree with you about readability and maintainability; probably about performances you are right
Really awesome blog post, It's quite long though, could be cut down a lot. 
ITT: poor people with potato laptops. Do you guys even get paid for your job?
In my experience it is used by Java developers primarily, and there are a lot of those. 
As author and lonely maintainer of npm-gui I will try to answer some hate in comments. NPM-GUI isn't any revolutionary tool and **probably it will be useless for advanced javascript programmers**. Also it's totally free and open as any open source should be... I started doing this project few years ago for myself and it was my sandbox for testing new things like react, vue, angular, typescript etc... ...but finally this just works and me and many people are using it in work to maintains projects dependencies. This is just simple tool based on cli commands, now it supports also yarn and bower, maybe in future it will be a VSC extension - as someone mention, maybe it will be showing which dependencies are not imported in your project, maybe it will be electron-based application - who knows. In the end - **it's just side/hobby project ;)**
Dashboards are always an overwhelming task, love the idea, will definitely have to give it a try.
I've never understood this obsession with free vs paid, especially for so-called professionals. I'm all for saving money, but if a tool allows me great productivity gains, and those gains &gt; the amount spent on the tool, sounds like a no-brainer. I mean, I'm a software dev. I make a really good living. The cost for webstorm is like $129. I mean, that's not even close to a day's wages for me. If webstorm makes my life easier and allows me to focus on creating solutions, why not? AND I get to write it off my taxes at the end of the year. Heaven forbid someone make a living from creating a tool. Having said that, I use VS Code because I don't need the features of WebStorm. I'm happy JetBrains exists and wish them continued success.
I think a cookie based auth can be automatically handled by some middleware on the server. 
Thank you
I think everyone goes through the "functional hard-on" phase at least once. You tell yourself that your code extremely "readable, maintainable, eloquent, beautiful" even though no one else understands it.
Hi /u/normadominguez, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Lol Why can't people post on Reddit without being condescending? I hope you don't expect people with differing opinions to take you seriously.
This is just three divs with rounded corners, fixed heights and percentage widths. Make it with CSS, then manipulate the percentages with JavaScript.
Your imperative solution is shorter than the example you're comparing it to only because it's written in, like, the worst way possible. Here's my example from the previous thread: const result = { minimum: list.reduce((acc, x) =&gt; x &lt; acc ? x : acc), maximum: list.reduce(acc, x) =&gt; x &gt; acc ? x : acc), average: sum(list) / count(list), } &amp;#x200B;
How does it categorize content and is the content polled on some regular interval?
If 3 loops instead of 1 are acceptable, I definitely agree that this is a good example how it can be done well.
It isn't, I told you exactly how it isn't just a few hours ago, and now you're telling other people it is, like there's no history? Stop astroturfing and deal with the fact that it is NOT free for any Open Source project that is funded, which is basically ALL OF THEM!
This sounds like homework. 
Wrong sub. Javascript != Java
They are overwhelming because companies always just assume that every application will automatically have this comprehensive admin dashboard appear from nowhere while the devs have been busy coding the rest. It always seems to be an afterthought.
I feel the comparison isn’t fair, though. The original article is more about finding ways of ‘doing whatever’ with reduce, while your solution is ‘do one specific thing’. Like, if you need to calculate another value in addition to the three, you’ll have to *change* your code, while the original author can *add* to his code. In larger long-living applications, I would like to be able to extend my code without having to modify it. Actually, this is the O in SOLID = the Open / Closed principle. But sure: I’ve written reducers that I later changed to lesser effective, more lines of code, too make it easier to understand next week..
thank you
thank you &amp;#x200B;
I love all the crap newbie "developers" on here who down vote this - "I need a GUI because command line is hard wannnhh 😭"
Actually, when rereading the original article, I see that it wasn’t as smart as I remembered it... In the time since I originally read it, my mind changed it to use functional composition to generalize the callback... :-/
I find it quite unfortunate and disappointing that lost in the _comparison_ the author seems to have missed that his code is just incorrect and doesn't work as expected.
Yup, content sources are polled regularly for new content and to update existing content (ex: number of comments). Scheduled tasks power both of these. I actually spent a few weeks with some machine learning libraries in Python and a large (several GB) training set to get the classification down. However, I was getting better performance with a simpler "bag of words" approach. It was a fun experiment, though.
We've really come full circle. I think what we should really be complaining about here is nested ternary expressions
I’ve read this a couple times and I feel like they are skipping over the part where you denormalize the data. Otherwise it looks like an overbuilt api adapter unless I am missing something completely? 
User agent spoofing isn't really a problem if the library isn't concerned about security, right? I mean, a client that supplies a false user agent will just get different polyfills, which isn't exactly a big deal
My dude, how about you take a chill pill. I'm not astroturfing, I just really enjoy their products. It's not my fault that you had this occurrence, but it's wrong to say that it isn't free for OS projects - it is, with some stipulations. And most OS projects aren't funded. Most bigs ones are, but most aren't big.
I worked at a startup created just after Mint.com's huge success. My CEO always called us "the Mint.com of &lt;topic&gt;". The dashboard wasn't an afterthought, it was all he thought about. Everything cool we built was just (for him) money thrown down a well that, when the bucket was drawn up, would be filled with beautiful dashboard features.
nit: this solution does 3 iterations vs. 1 iteration on the looped solution.
Wouldn't it be nice if projects could just have a nice organized planning process that takes everything into account? sigh... 
Post your code.
Is there a transcript?
this is what i have so far &amp;#x200B; function formValidation() { var regForm = document.registration.register; var uemail = [document.registration.email](https://document.registration.email); if (register(regForm)){ if (emailValidation(uemail)){ } } return false; } &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; function register(regForm){ var password = document.forms\["RegForm"\]\["Password"\]; var email = document.forms\["RegForm"\] if (password.value == "") { window.alert("Please enter your password"); password.focus(); return false; } if (password.value length&lt;8){ window.alert("Password must be at least 8 characters long."); return false; } re = /\[0-9\]/; if (!re.test(password.value)){ window.alert("Password must contain at least one number (0-9)!"); password.focus(); return false; } } &amp;#x200B; function emailValidation(uemail) { var email = /\^\[\^\\s@\]+@\[\^\\s@\]+\\.\[\^\\s@\]+$/ if(inputtext.value.match(email)){ return true; }else{ document.getElementById('p3').innerText = alertMsg; inputtext.focus(); return false; } }
Actually, it sounds more like a job. I love how it starts out "simple html page" and ends up with fancy slide-in forms and password complexity validation.
It's commutative, so 3 reduces of 1 function call each is equivalent to 1 reduce of 3 function calls
i mainly need help with the javascript portion &amp;#x200B;
[https://github.com/mariusbalcytis/webpack-bundle](https://github.com/mariusbalcytis/webpack-bundle) It's not necessarily special. It's just way more convenient to have an easy to manage abstraction.
bootcamps also.
And here's a verison with one loop that looks tolerable to me and that only uses 1 loop: const result = list.reduce((acc, v, i, array) =&gt; ({ maximum: v &gt; acc.maximum ? v : acc.maximum, minimum: v &lt; acc.minimum ? v : acc.minimum, average: acc.average + (v / array.length) }), { maximum: -Infinity, minimum: Infinity, average: 0 })
"Wahhhhhhh someone followed their passion and contributed to open source software😭" -you
I'm all for creating some maybe-not-so-super-useful things for the sake of learning something. However, that project is just a complete overkill and the benefit is close to zero
I was using it for years before the stipulations were brought in. When you love your editor, why the fuck else do you think I spent months arguing? In the end, I had to move. Sure, I could have bought it, but then everyone else in the team would have to as well. And it's still our time donated to a project even if there's a bit of help from outside.
Hmm, what is wrong with dependencies in this project in your opinion?
Each iteration does 1/3 the work though.
 //"normalized" test cases. //returns ??? if no length const getMma = (lst) =&gt; { const data = lst.reduce((acc, v) =&gt; ({ min: (acc.min &gt; v ? v : acc.min), max: (acc.max &lt; v ? v : acc.max), sum: acc.sum + v }), {min: Infinity, max: -Infinity, sum: 0}) return {max: data.max, min: data.min, avg: data.sum / lst.length} } //what I would consider the most readable, and also probably the slowest const getMma2 = (lst) =&gt; { if (!lst.length) return {}; return { max: Math.max(lst), min: Math.min(lst), avg: lst.reduce((a, b) =&gt; a + b) / lst.length }; } //returns empty object if no length, and perfectly readable maintainable anyway, and fastest... const getMma2 = (lst) =&gt; { if (!lst.length) return {}; let max = min = lst[0], sum = 0; for(const v of lst) { if(v&gt;max) max = v; if(v&lt;min) min = v; sum += v; } return {max, min, avg:sum / lst.length}; } let cnt=20000; let t=[]; for(let x=0;x&lt;cnt;x++) t.push(Math.floor(Math.random()*cnt)) var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma2(t).sum; console.log("getMma" + (Date.now()-s)); var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma2(t).sum; console.log("getMma2" + (Date.now()-s)); var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma3(t).sum; console.log("getMma3" + (Date.now()-s)); /* RESULTS, ymmv "functional" took 9.566 seconds "easiest to read and most maintainable functional" took 46.470 seconds for loop, 2.688 seconds */ 
Hi stilloriginal! It's actually really great point. Denormalization is an approach to solve performance problems. And this article doesn't mention how to address performance issues in general as you noted. Cube.js solves performance problem using pre-aggregations and caching: [https://cube.dev/docs/pre-aggregations](https://cube.dev/docs/pre-aggregations). In fact denormalization is done under the hood when pre-aggregations are built.
 //"normalized" test cases. //returns ??? if no length const getMma = (lst) =&gt; { const data = lst.reduce((acc, v) =&gt; ({ min: (acc.min &gt; v ? v : acc.min), max: (acc.max &lt; v ? v : acc.max), sum: acc.sum + v }), {min: Infinity, max: -Infinity, sum: 0}) return {max: data.max, min: data.min, avg: data.sum / lst.length} } //what I would consider the most readable, most "functional", and also probably the slowest const getMma2 = (lst) =&gt; { if (!lst.length) return {}; return { max: Math.max(lst), min: Math.min(lst), avg: lst.reduce((a, b) =&gt; a + b) / lst.length }; } //returns empty object if no length, and perfectly readable maintainable anyway, and fastest... //as soon as performace becomes a concern, functional quickly becomes less comprehendable, while being //4x slower anyway. const getMma3 = (lst) =&gt; { if (!lst.length) return {}; let max = min = lst[0], sum = 0; for(const v of lst) { if(v&gt;max) max = v; if(v&lt;min) min = v; sum += v; } return {max, min, avg:sum / lst.length}; } let cnt=20000; let t=[]; for(let x=0;x&lt;cnt;x++) t.push(Math.floor(Math.random()*cnt)) var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma(t).sum; console.log("getMma " + (Date.now()-s)); var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma2(t).sum; console.log("getMma2 " + (Date.now()-s)); var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma3(t).sum; console.log("getMma3 " + (Date.now()-s)); /* RESULTS, ymmv "functional" proffered example took 9.566 seconds "easiest to read and most maintainable functional" took 46.470 seconds for loop, 2.688 seconds */ 
You're incorrect about the default accumulator. It has always been the first element of the list in practically every language, including JavaScript. I have no clue where you got that it defaults to 0, but that's definitely been causing you some confusion
I think it looks cool! Well done! Would be even cooler to add [https://github.com/pnpm/pnpm](https://github.com/pnpm/pnpm) and maybe combine some of the info from [https://www.pikapkg.com/](https://www.pikapkg.com/) which addresses [https://www.pikapkg.com/blog/pika-web-a-future-without-webpack/](https://www.pikapkg.com/blog/pika-web-a-future-without-webpack/)
[removed]
&gt; minimum: list.reduce((acc, x) =&gt; x &lt; acc ? x : acc), You can just use `Math.min(...list)`.
 /* "normalized" test cases. */ //returns ??? if no length, 4x slower than for loop const getMma = (lst) =&gt; { const data = lst.reduce((acc, v) =&gt; ({ min: (acc.min &gt; v ? v : acc.min), max: (acc.max &lt; v ? v : acc.max), sum: acc.sum + v }), {min: Infinity, max: -Infinity, sum: 0}) return {max: data.max, min: data.min, avg: data.sum / lst.length} } //what I would consider the most readable, most "functional", 3x slower than for loop const getMma2 = (lst) =&gt; { if (!lst.length) return {}; return { max: Math.max(...lst), min: Math.min(...lst), avg: lst.reduce((a, b) =&gt; a + b) / lst.length }; } //for loop example, not really that horrible, and fastest. const getMma3 = (lst) =&gt; { if (!lst.length) return {}; let max = min = lst[0], sum = 0; for(const v of lst) { if(v&gt;max) max = v; if(v&lt;min) min = v; sum += v; } return {max, min, avg:sum / lst.length}; } //for loop example, w/using built-ins for min/max 2x slower const getMma4 = (lst) =&gt; { if (!lst.length) return {}; let sum = 0; for(const v of lst) sum += v; return {max: Math.max(...lst), min: Math.min(...lst), avg:sum / lst.length}; } let cnt=20000; let t=[]; for(let x=0;x&lt;cnt;x++) t.push(Math.floor(Math.random()*cnt)) var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma(t).sum; console.log("getMma " + (Date.now()-s)); var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma2(t).sum; console.log("getMma2 " + (Date.now()-s)); var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma3(t).sum; console.log("getMma3 " + (Date.now()-s)); var sum=0; var s=Date.now(); for(var x=0;x&lt;cnt;x++) sum+=getMma4(t).sum; console.log("getMma4 " + (Date.now()-s)); /* RESULTS, ymmv "functional" proffered example took 10.271 seconds iterating multiple times w/reduce for sum 7.775 seconds for loop, 2.687 seconds for loop for sum, 4.477 seconds so in a for loop, using the built-ins min/max made it 2x slower but you already knew that and decided to compute everything in one loop in getMma3 but in the "functional" example, it was actually only 3x slower, and trying to "optimize" only makes it worse and far less comprehendable. I have heard that "functional" can make parallizing a tiny bit easier(debatable), i.e. using 4 cores, but if the code is 4x slower, and uses 4x the energy to do the same task in the same time... */ 
Well holy shit, you're right! I'll remove that part of my comment. Thanks! I don't know where I got that from.
Your comment doesn't make sense. Why use anything else "before" you use reduce? You use map to create an array that whose elements map 1:1 to the input array. You use filter to create an array shorter or equal to the input array. For anything else you use reduce. Some / Every are a completely different kettle of fish. 
The dependencies are fairly standard for a webpack project. Which ones upset you?
Hi /u/uxresearchAR, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Runescape except old again, eh?
You can access arrays with .&lt;index&gt;, like: posts.0.id
That's not how computers work.
You're conveniently ignoring the overhead of the actual iteration. Memory access isn't free.
I wanted to stay in the spirit of the original article by showing a different example, but I would argue that in most cases a straight up loop is desirable over high level functions. In my experience the `reduce()` function should not be the default tool. Even if their version of `reduce()` could be optimized, I would still argue that the more verbose loop version is easier to digest.
[https://github.com/planetoftheweb/seven](https://github.com/planetoftheweb/seven) &amp;#x200B; This is a template for Eleventy. I recently updated it to use more CDN links. It uses bootstrap, plus vue.js for a simple search. As time passes, I'll probably move more things towards Vue. I'm hoping the next Bootstrap is more componetized.. The demo is at [7ty.tech](https://7ty.tech). If you like it, give it some stars.
There's an overhead for each reduce call, especially since it's a higher order function so each iteration step requires a function call. But it works as a rough approximation.
That doesnt make much sense since IntelliJ, a java IDE, can do pretty much everything Webstorm can do.
The one downside of jetbrains IDE's is that they are relatively resource-intensive
Could you reduce it down to like a single gulp watch + gulp file move for a single file, then show how saving that file with changes doesn’t move the updated file to the output folder?
Thank you for your answer, but I have already found a solution 😅 I use Vagrant for managing this project. Gulp's watch function in Gulp 4 probably works in a different way and it does not detect changes because of Vagrant. So to solve this problem I had to add `{ usePolling: true}` config to every watch function.
 gulp.task('watch', () =&gt; { gulp.watch(['src/**/*.scss'], { interval: 1500 }, gulp.series(['css', 'hologram'])) gulp.watch(['src/**/*.js', 'src/**/*.jsx'], { interval: 1500 }, gulp.series(['js'])) gulp.watch(['*.html'], { interval: 1500 }, gulp.series(['htmlmin'])) }) &amp;#x200B; I might be wrong but you shouldn't be returning in your watch task. &amp;#x200B; This might be helpful - [https://gist.github.com/jeromecoupe/0b807b0c1050647eb340360902c3203a](https://gist.github.com/jeromecoupe/0b807b0c1050647eb340360902c3203a)
Actually it's not a problem. Look at my comment in the first comment. Anyway, thank you :)
Coming from .net, I’ll take ‘high level functions’ in the form of LINQ statements over for-loops any time. I also buy a little bit into the idea that once you get familiar with map, filter and reduce, you’ll always know what the intent with the code would be. Filter: get rid of items. Map: convert items. Reduce: aggregate items. A ‘straight up loop’ on the other hand - you’ll have to read through everything to get a hint of the intent. But the only truth you can really depend on, though, is the almighty ‘It Depends’. 
 `|| posts[0].id`
Hi /u/HonzsSedlomn, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Memovox, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RickTibbe_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
You could also replace [ with . and ] with blank and use the standard dot notation 
Just looks and feels wrong.
I'm a student and using webstorm over 1,5 years already.. what are you talking about?!
Hi /u/yizhuang1996, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Pretty much :P
I've been wanting something like this for ages! DOWN WITH CLI!!!!
Contribute to a project like React or Angular, bye bye WebStorm license. Because those projects are externally sponsored, you cannot contribute to them with your student licence.
web components and managing state/effects in webassembly 
sleazy :D
If your open source project has funding, surely you can put that cash towards your tooling? Jetbrains has no particular obligation to subsidise your student experience.
ternary expressions and then the need for comments; shouldn't that already alarm the author that this code is unreadable?
Functional-Lite-JS is good but it's not as much of an "overview" of broader patterns. If you start with functional programming, you can kind of solve many problems up front that create obstacles to "composing software". If you start trying to do OOP and don't have experience, you can easily get into the usual problems with that. Once you learn language specifics, the broader topics of software apply so you can look beyond only JS for guidance.
Isn't easier to just requiere the package.json file?
You can import your package.json directly as far as I'm aware. ```js const pkg = require ('package.json'); const name = pkg.name; const version = PKG.version; ```
Sure. :) But in huge script blocks you maybe don't want to bring the burden of config in your application code. Maybe you are folders deep -&gt; require('../../../../../package.json'). Which then breaks when you move the file around. :)
Jup. But this can be cumbersome when you move files around. :)
[removed]
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
I can't make a whole team move to a new editor just because the project got a donation. Half of them are still on vim even now.
What you fail to understand is the value of this feature to the user. It does not matter if it’s 2:30mins or 2:50. The takeaway here is that it’s a short article.
It's just that they told you what the license was for right there on the FAQ page, and yet you spent months on the problem...
And expensive
I used to use WebStorm, but VSCode is just as good and has a much better interface &amp; theme support.
[removed]
[removed]
If it was that simple, Support and Legal wouldn't have taken months to answer my specific questions. The precise terms you now see on the FAQ page are probably because of the time I, and Legal, spent on this issue. Do you think you're so much smarter that a little question that is so obvious to you wouldn't also be quite so clear to everyone else?
The point here is to demonstrate the use of reduce on a simple use case...
&gt; What do you do? 4.5 days of goofing off and playing video games. Then one solid night of cramming.
Its really REALLY dumb that a new file extension is necessary. The ECMAScript people really ckufed things up royally with ES6 modules.
If you use an IDE, your file paths should be refactored automatically. 
Hi ptiunov. This is exactly what I mean. My data has to be denormalized for it to even be queryable in this way. It isn’t a matter of performance it’s a matter of granularity. Unless I am missing something?
Yes. Use the best tool for the job..
Performing the division every iteration gives me a bad feeling but I'm not sure that it's worse (for accuracy) than adding everything and dividing once.
It's also in the [original license](http://web.archive.org/web/20150428191056/http://www.jetbrains.com/student/license.html) for the student program...
Learn to code.
No, that I understand. And for that purpose a very simple algorithm (words * X) is just as efficient.
Wouldn’t it be ArrayList variablename = new ArrayList()
jsfiddle
oh ok is that the only problem
It takes 2 seconds to install and extension. Or you can shell out a bunch of money. Your choice. 
Javascript.Info I believe is one of the best tutorials with exercises and solutions. 
Or people just like it. It's not exactly a niche IDE.
I flip flop between JSFiddle and Codepen. I find myself using Codepen more for CSS demos and JSFiddle more for JavaScript demos.
Too many iframes IMO, I prefer to test on something where the whole window is one website.
^(psst! Java is not javascript)
this has errors im still lost &amp;#x200B; public class quirks { public static void main(String\[\] args) { ArrayList quirks = new ArrayList("One for all", "Explosion", "Dark shadow", "Half hot half cold", "Eraser", "All for one", "Engine", "Decay", "Zero gravity", "Frog", "Giantifcation", "Eletrifacation", "Sugar rush", "Hardening", "Navel laser", "Sticky balls", "Acid", "Vine", "Copy"); &amp;#x200B; String quirk = obj.getRandomElement(quirks); System.out.println("Your quirk is " + quirk ); &amp;#x200B; } }
OH
What is the error the line number should be specified on the error. 
it was java it didn't not java == javascript
chrome dev console, or vscode if it is more than a couple lines. I have a scratch.js for that sort of thing.
Hi /u/JSdavisJS, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thank you. Sorry for the inconvenience caused. 
Ya, but in which website would you open the console, let's say you want to test something requiring an existing DOM?
I built my whole project, tunnelgram.com, with Svelte. It's a really nice framework.
any website... usually google.com is pretty clear. I mean if you need to test an existing dom, and it exists on a site, then why wouldn't you just go to that site? Or just stick it in an html file, and use dev console... 
Codepen's Full view
Make the arraylist like so: ArrayList &lt;String&gt; quirks = new &lt;ArrayList&gt; (); Then fill the array with each string like so : quirks.add("one for all") ; 
ok does that apply to java
I'm honestly really confused by this framework. It looks to me like a glorified query-builder, just another wrapper ontop of your database queries. The graphing capabilities look's like it comes from various different libraries not related to Cube.js at all. Maybe I'm just being really stupid but I fail to see how is this much different from just writing SQL and using graphing tools directly? It's great to see tools like this try to solve the "dashboard problem" - they have always been a bit of an afterthought and very fiddly to create, so I do wish there was a tool that just "did it" with minimal code, but the examples on the homepage pretty much just look like a regular React app, not much different to just doing a bespoke dashboard. https://cube.dev/
New tab/about:blank/google.com if it's just to play around in DevTools. I really like [https://codesandbox.io/](https://codesandbox.io/) for more involved experiments, and it makes it easy to share them with team mates.
jsbin
I came here to say the same lol
I’m glad you wrote code instead of a blog. 
You don’t need to explain yourself to anyone. Thanks for your work 
WebStorm is great and I used it as a student frequently. However, I have two criticisms: 1) It's not the most performant app out there and 2) I can get the vast majority of it's features with the totally free and awesome VS Code. After a little bit of manual setup (10 mins tops), I was ready to tickle the keys again. I really do love Webstorm though.
Yes, I thought the same thing when driving into work today. Thanks for reminding me. I figured it would transpile to about this verbosity. It's not too bad though! Straight forward.
Have a reducer that takes a predicate function and a mapping function. If `predicate(val)` is true, add `mapper(val)` to the accumulator array, otherwise return the accumulator as-is. const input = [1, 2, 3, 4, 5, 6] const isEven = (x) =&gt; x % 2 === 0 const double = (x) =&gt; x * 2 const reducer = (predicate) =&gt; (mapper) =&gt; (acc, val) =&gt; predicate(val) ? [...acc, mapper(val)] : acc const doubleEvens = reducer(isEven)(double) const result = input.reduce(doubleEvens, []) console.log(result) // [ 4, 8, 12 ] &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
Are you comparing current version to latest version via command line for dependencies for all projects, by eyeballing them?
Glitch!
👌
Here is a stackoverflow answer using JavaScript and an on scroll listener. https://stackoverflow.com/questions/15395920/play-html5-video-when-scrolled-to 
\`**Should I use Int or UUID as primary key in the database?\`** &amp;#x200B; Yes
I’ve always done id and never had a problem 
They can't be identified by any other attribute/combination?
Is it just me or do all Jetbrains products just look awful on macOS, especially on retina displays. The fonts are fuzzy, the themes are nasty and there’s just way too many squiggly lines and annotations. It’s a shame because I think their core tech is good, but their UI is hideous IMHO.
5 days of intensive study. Lot's of JavaScript interview questions googling
[removed]
[https://pbs.twimg.com/media/Cit9g75XAAAh1Wj.jpg](https://pbs.twimg.com/media/Cit9g75XAAAh1Wj.jpg)
It's the wrong tool for this use case, though. Also, GP didn't mention this more pragmatic solution. Furthermore, people who don't know that Math.min/max is variadic might not immediately make the connection. Pointing out that you can simply use these functions with spread will always be news to some. https://xkcd.com/1053/
Not sure what is more specific about this question than any of the similar ones, but - I would practice writing JavaScript. Unclear what “need to iterate on” or “web APIs may be involved” actually means. But I guess I’d at least make sure I was familiar with the ‘fetch’ api. 
Stackblitz is obviously the best these days
Thanks! I see what you mean, but... No thanks. That's much more complicated and hard to understand that just doing something like input.forEach(number =&gt; { if (number % 2 === 0) { results.push(number * 2); } } ); return results; I'll stick to this, but it's a shame that there's nothing better! Cheers!
if you are using opaque surrogate keys in a table you should always use UUID or some other unique identifier other than auto incremented ints. There are many reasons for doing so, first and foremost is importing/exporting to and from other databases instances and backups has no chance of duplicate keys. And if you ever need to move to a cluster or other distributed datastore you have no worries about clashing duplicate keys on each node. [This is a very concise and complete article that explains the pros and cons very well.](https://karwin.com/blog/index.php/2018/03/21/the-case-against-the-case-against-auto-increment-in-mysql/)
Eh, I don't think that's really easier to understand, but I've been all functional for a long time. You could also do something like this, which maybe you'd find simpler: const arrayFilterMap = (arr, filter, map) =&gt; arr.reduce((acc, val) =&gt; (filter(val) ? [...acc, map(val)] : acc), []) const result = arrayFilterMap(input, (x) =&gt; x % 2 === 0, (x) =&gt; x * 2) Less flexible, but still a lot cleaner than the imperative approach inside a forEach. That's about as close as you'll get to a .filteredMap without extending the prototype.
That's pretty cool, thanks. This could be kind of a good solution, but I still thinking the simplest one is better. Sometimes I want to get too JavaScripty and functional, when honestly, it just makes things less readable. Thanks!
Nothing special. General interview questions. If you don't get the job then you have a nice list of things to learn though.
https://repl.it/ Has basically every language, even less popular ones like crystal that don't have a terminal based REPL
I'm not really sure why using `in` for feature detection is somewhat popular. The feature in question most certainly isn't a falsy value. It's generally a function or some other object. You could simply check if the value is truthy (`if (foo.bar)`) instead of checking if the key exists in the prototype chain (`if ('bar' in foo)`). &gt; !!{}.toString true &gt; 'toString' in {} true &gt; !!Object.create(null).toString false &gt; 'toString' in Object.create(null) false (`Object.create(null)` creates an object with `null` as its prototype. You'd use one of these completely empty objects for things like word counting where one of the words could be "toString".)
It's not one extension, it's a whole slew of them. For every language I use and for every tool I'd have to install a plug-in, possibly configure it. I don't have to do that with Jetbrains products. And I don't depend on random people updating their plugins, instead I have a company that is paid to do it. For me, the time to keep up to date with plugins and installing everything and setting it up isn't worth as much as having a finished IDE for all of my environments. But that's of course something everyone must consider for themselves. :)
A demo would be nice.
Codepenem, but lately been having some problems so switched to stackblitz.
You are definitely not alone in that. This was my exact thought, I’m failing to see where the value of this framework rally comes from..
Or if you use a bundler like Webpack, you can set up an alias for your root directory. Webpack example [\[docs\]](https://webpack.js.org/configuration/resolve/): module.exports = { resolve: { alias: { '@': __dirname } } }; import { version } from '@/package.json'; (Assuming your `webpack.config.js` is located in your root directory.)
Can you add please some demos :) ?
I'am planning to, you can already have some examples at the moment inside the documentation
So let's blow some of the myths away. This is not a test you cram for (even over 5 days). Seeing the code you write will be only part of the purpose for this test. I use these tests to see how you, a developer who will be working on unknown projects over the next period of time in my company, deal with problems you don't immediately know the answer to. How do you break something down into parts that you can solve individually, and combine those parts into a working whole. Can you pick up someone else's code, reason through it and improve or extend it in a sensible, logical way? What do you think about when you need to go beyond the obvious and purely functional code (e.g. performance, maintainability, delivery platforms)? Even if the hour is not long enough to deliver a complete solution (which is probably going to be the case), where are you going with your solution? Can you explain your direction and intention? The threshold for success in those areas will be set by the company and the level they're hiring for. By all means, over the next 5 days, look over some theory of JS and know a little about why you might use certain features in certain circumstances. If you're in luck, you might get a chance to use something advanced in your coding test. But you'll have a problem to solve - that's not about your programming skill in JavaScript, it's about your mindset and experience. I would not expect an exam that you read the textbooks and ace with 100%. If it is, I apologise for misleading you but it's the wrong test and the company have the wrong approach.
sometimes checking a property invokes a getter which may or may not be an intensive operation that's like the only place i would do a "foo in bar"
Thanks for feedback. I'm working over shiny demo page. Hope it will be finished soon. You could watch pretty rough example here [https://rumkin.github.io/pill/](https://rumkin.github.io/pill/).
This is really nice, big thumbs up! Huge improvement over managing my [messy package.json](https://imgur.com/a/SBWXanl) manually or with yarn interactive. What does "missing" indicate though? See the picture linked above, it says that the @emotion packages are missing, but they are there. "yarn install" says everything is up to date and the project (which does rely on emotion) builds cleanly. One feature that would be nice to have would be ability to move packages between dev and prod. This is actually most of my manual edits of package.json package listings (I usually forget to add --dev when installing a package). And pls don't center the package name column...
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/tqatmly.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20ejn7g09) 
Yea, good point. I guess it makes sense for libraries like Modernizer which feature-detect a pile of features and you then end up using very few of them. For features you use right away it shouldn't make any difference whether the feature is lazily initialized when you look for its existence or when you start using it.
That would be nice, though I can see how would require a full rewrite. What would make sense would be to have this as an Electron app instead of a web page though.
One solution is to have different ways of loading your app during production and development. &amp;#x200B; For development you can set \`npm run develop\` to use concurrently and nodemon so that you can get live reloading going for both the create-react-app and express server. Your package.json scripts would look like this: &amp;#x200B; \`\`\` "client:dev": "NODE\_ENV=development react-scripts start", "server:dev": "NODE\_ENV=development nodemon --watch server ./server/index.js", "develop": "concurrently -n client,server \\"npm run client:dev\\" \\"npm run server:dev\\"", \`\`\` &amp;#x200B; Then for production you can set your \`npm run start\` to boot up your express server and server your build folder via the \`/\` path. &amp;#x200B; Your package.json scripts would look like this: &amp;#x200B; \`\`\` "start": "NODE\_ENV=production node ./server/index.js" \`\`\` &amp;#x200B; And your \` ./server/index.js\` file should have this route: &amp;#x200B; \`\`\`js app.get("/", (req, res) =&gt; { res.sendFile(path.join(\_\_dirname, "../build", "index.html")); }); \`\`\`
Yes, and it says exactly what you quoted a few messages ago. So what if it is educational, non-commercial purposes, like Linux, KDE, React, Angular or some other free and open source project? These meet the terms of the license as explicitly written. Then Support and Legal tell me that since the Linux, KDE, React, Angular projects get external funding, they qualify as commercial even though they're free and open source. Starting to see the problem now? This situation is not covered in the license. THAT'S WHY IT TOOK MONTHS!
That looks awesome ! Looking forward to try it !
very nice !
As a software engineer working in biomedical fields lemme tell you an unfortunate truth. When you go up pitching and requesting investments all those non tech people see is how beautiful the interface looks and how easy is for the end user to use your service. On the other side i can't showcase my complex backend routines to a bunch of wall street guys who think they can outsource everything.
Hi garrehsponges! You addressed a really great issue: how and when Cube.js overhead pays off. We should do a better job explaining it. Cube.js is in fact Relational OLAP implementation with its pros and cons. So in case you need just to put couple of static charts on a dashboard it's probably not a good fit for Cube.js. But in case if these couple of charts can grow into dozens across several dashboards where you should support filters, dimension changes and security -- its where Cube.js starts to pay off. Let's consider an example: We have Ecommerce dashboard with 2 charts: Sales (Revenue) and Cost of goods sold. These are showed as line charts by day. New requirement is ability to change date granularity by users: add week, month and year. In SQL we either copy paste SQL with each granularity which ends up in 8 different queries or most likely introduce 2 SQL string templates for each chart which has one parameter: date granularity. In Cube.js we just bind granularity value in UI to the state of Day, Week, Month, Year dropdown. Then new requirement comes in: being able to show segmentation of Sales and Cost of goods sold by Shop City and State. We realize that we need to join Shop table in order to show this segmentation. We're adding conditional join to our string template in case of City or State dimension is requested. Also as dimension count now varies we need to update our GROUP BY accordingly depending on what dimensions are requested which leads in another one variable in our SQL string template. So now we have 2 SQL string templates with 3 conditional variables and 1 SQL snippet for conditional join of Shop table. In Cube.js we just push either City or State dimension in query array and that's it to get these charts. Finally business owner realizes that they forgot to add Margin Profit to this dashboard. It's a point where we decide to build our own SQL generator which will be Relational OLAP by definition. This example also lacks discussion about backend issues like caching, background dashboard refresh as data come in, analytic workload concurrency, etc. 
Could you please provide some example when denormalization is required and why denormalization in this case isn't a matter of performance? 
They cost money - but they are not *expensive*. Pretty cheap actually, especially individual licenses. If you want to see "expensive" look at Oracle prices, or at any special software for businesses, where "hundreds of dollars" still is cheap.
Do you not normally build your server? I prefer to write in ES7 and then compile that down with Babel. Not that this is an unsurmountable problem, just that I reserve 'build' in my client and server folders to refer to those buids, so I can see you are not doing that here.
Water is wet 💦
Compile Node to... es5 node? If you use the last version of Node you don't need to "build" it... i guess.
One of my old bosses once set a coding interview challenge where you had to fetch data from an api and present it 3 formatted columns. There were no tricks or gotchas it was meant to be a jumping off point about how they coded in general. 20 people interviewed and not \*one\* came close.
[removed]
Hi /u/pret_a_porter, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This seems incredibly arbitrary. "Limited UX flexibility" and "Suitable for only simple, lightweight applications". What is this even based on? Imo react wins for ecosystem and targeting mobile (although vue does have tools for this, I just don't think they are as good), and vue wins for developer enjoyment (subjective) and onboarding. But they both fill the same space and a similar enough that I don't think anyone could possibly say one is objectively better, or I have yet to see a half-decent reason at least.
Node doesn't support ES6 modules. I guess it supports everything else now though.
When you go to prod, your build tools should minify and optimise server code, like client code
I think 11.50 or whatever the latest version is does natively support them now 
 It seems there is a project called 'esm' support ES6 modules in Node.
thanks, just implemented. looks like a godo solution. only think im concerned about is double loading the images. just to clarify, if you load images this way through javascript, when the html loads the image it won't be reloading the same image? 
Yes, but it imposes some restrictions that I'm not too fond of right now. Babel helps me not think about it.
ESM modules are different
Slow and shitty russian trash. Maybe will be good for Java lovers. 
Yeah, I'd bet 3x Atom editors with enabled IDE plugin consumes less electricity. 
I tend to stick them both in a [monorepo](https://danluu.com/monorepo/) using [Lerna](https://lernajs.io/) that way you can just do something like `lerna run dev` to run the dev command for all packages. This is the simplest setup IMO. Re: different ports, urls etc for your API you can just create a few different files. e.g. you might have | api | -- index.js | -- api.test.js | -- api.production.js | -- api.development.js Create React App will set `process.env.NODE_ENV` to `development`, `test`, or `production` depending on whether you use `npm start` `npm test` or `npm run build` see [here](https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables) This would allow you to export the appropriate API handler depending on your env from inside your index.js. e.g. (inside api/index.js) import devAPI from './api.development' import testAPI from './api.test' import prodAPI from './api.production' let api = devAPI if (process.env.NODE_ENV === 'test') { api = testAPI } if (process.env.NODE_ENV === 'production') { api = prodAPI } export default api That way you could just `import api from './path-to/api'` 
ahh TIL
https://jsbin.com/
If you don't have the front and back end in isolated folders, then your package.json has to have your front and back end packages. That alone sounds like a nightmare. The idea of plopping a 'views' folder right next to other folders in your server sounds kind of cool, but if you're not doing SSR (probably with something like Next.js, not vanilla React), it will cause headaches.
Razzle is perfect for what your looking for. [https://github.com/jaredpalmer/razzle](https://github.com/jaredpalmer/razzle)
I have got absolutely no idea what this does/solves. The demo site hasn't helped. Help a potato out?
What no demo? You don't expect me to evaluate the usefulness of a toolset, based on the reference manual alone?
The browser takes care of that. If you request the same resource multiple times, it will only be requested once ("deduplication"). It doesn't matter if HTML, CSS, or JS initiated those requests. You can verify this by checking the requests in the network panel of your browser's dev tools.
Thanks for feedback! Someone reported a bug about dependencies with @prefix probably your situation is similar. I will try to fix this in next release (centered names also ;)
I am using a Mariadb ColumnStore cluster (formerly InfiniDB and an engine that sits on top of MySQL) with billions of rows and a few years of history. It doesn’t have a strict relational schema with foreign keys and such, as a large part of our dataset comes from multiple sources and needs to be brought together via join tables or UUID matches (a lot of things like server hostnames are mapped to UUIDs from metadata during ETL so at least we have that). Almost no tables have primary keys (unless they are myisam tables). Might cube work in this scenario with this type of schema? For example, a typical query might look like this: select app.name, node.fqdn, perf.cpu from appservice app left join appnode /* join table */ on app.oid = appnode.app_oid left join node on appnode.node_oid = node.oid left join perfmon perf on node.oid = perf.node_oid where perf.collect_date = ‘2019-03-28’; Cube looks really great and would be a nice tool for us to use if we could integrate it in, as right now we have several dozen reports with pre written queries and a lot of query/filter manipulation that are getting re-written very soon. 
But it's usually 5 days, then start cramming at 1am on the night before 
Wow
That’s interesting, I’ve never heard of it before - I’ll check.
Simple and sweet. I like it!
Whoa holy crap, thanks for posting this! Ordering now
The GraphQL book alone is worth more than that.
nice
Is it actually worth it? I mean anything beyond what you could find in the docs or all over the internet? Not interested in anything else from that set.
Seems very similar to turbolinks? How does it compare?
[removed]
I suppose it's only digital books?
[removed]
If it is just dev tools, then whatever tab I have open. If I need a full page of HTML/JS/CSS, then jsfiddle. Anything more complicated than that I would just start a test project. 
I'd like to know as well :)
PDF, ePUB, and MOBI. These are not physical books. 
I prefer webstorm for react because everything is basically setup already. Theres also things that are basic that youd expect vscode to have like navigating to absolute paths that it cant do. Debugging jest directly in webstorm is great and worth the money alone.
Is this a troll post?
No, i managed to do that with authentication, but i don't know when the lambda function will start so i can authorize it from my phone
I thinks its loading pages using JS same like React 
That's not a good example of readable functional code. 
There's rarely any reason to use forEach
Wow. What a fucking library. Genius in simplicity. Module creators should take this as inspiration!
It looks like a slimmed down version of Pjax. Shameless plug: https://github.com/MoOx/pjax
 [https://github.com/surikov/webaudiofont](https://github.com/surikov/webaudiofont) &amp;#x200B; Big library of musical instruments. Examples of using \- [https://surikov.github.io/webaudiofont/examples/midiplayer.html](https://surikov.github.io/webaudiofont/examples/midiplayer.html) \- MIDI player \- [https://surikov.github.io/webaudiofont/examples/mixer.html](https://surikov.github.io/webaudiofont/examples/mixer.html) realtime music \- [https://surikov.github.io/webaudiofont/examples/strum.html](https://surikov.github.io/webaudiofont/examples/strum.html) strumming &amp;#x200B; [https://www.npmjs.com/package/midi-sounds-react](https://www.npmjs.com/package/midi-sounds-react) \- Implementation for ReactJS
Sure. On january 1 my favorite number is 9. On january 19 my gavoeite number changed to 72. What is my average favorite number for the month of january? This will require 2 separate transformations in order to be used in a cube. 
[flems](https://flems.io/)
True. For most projects i would question the reasons behind such a move. Sounds like a nightmare but is quite reasonable for a smaller project or the occasional microservice. Especially if your frontend/backend are tightly coupled. Don't go overboard with structure if all you need is a simple solution! &amp;#x200B;
It seems really weird to list Tween Manager as the first feature.
My preferred way of getting property values these days is with `Reflect`: &gt; const name = Refect.get(person, 'name') No need to check if object has the property. `Reflect.get` will return either the value or undefined.
Are you against starting with boilerplate? Because the basic structure shouldn't be something you don't have to worry about.
Why though? 
I'm sorry if I gave the impression that mdBook was limited by Rust. I love Rust - I'm trying to get my coworkers to use it. I don't think that mdBook is limited by Rust, but IMO it is limited by it's CommonMark processor - pulldown-cmark. It has no support for plugins/extensions, and it looked to me like it would be difficult to add support for them. Remark has an entire ecosystem of plugins, it's very easy to create new ones, and it features an entire formally-defined AST, instead of just transforming directly to HTML. 
This was absolute garbage. The author obviously has a bias against Vue. I don't use Vue, but I can tell BS when I see it. 1. Author says React uses JSX while Vue only has HTML templates. Wrong. You can use JSX with Vue as well. 2. Author claims React provides Flux architecture. Flux is not part of React but was a approach to state management in the time before Redux, Mobx, etc. Vuex is the recommended way of managing state in Vue inspired by Redux, so it's similar. But you could also use Mobx or any other means you care too. 3. Author claims React can make Web and mobile apps, whereas Vue is only suitable for Web apps. WTF??? Ionic offers full support for Vue for creating native apps. Similarly, if you want to writer you native mobile app with NativeScript, there's full Vue support as well: https://www.nativescript.org/vue. 4. The author claims that React is suitable for large scale enterprise apps but for some reason Vue is only suitable for small apps. WTF??? What did the author base that conclusion on? There are many enterprises that use Vue. In fact, Laravel, which is a PHP framework for creating enterprise apps, comes with Vue pre-installed: https://laravel.com.
Hi /u/XpPsych, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/karolis2017, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/iPaul95, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dotobird, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Our product has a number of different UIs for different user roles in the system. Our approach has: * The core "app", which has all the APIs and the database and such. It imports the UIs as modules. * Many UI projects, each of which implements a given UI. Because we do server side rendering, each UI project has a server side to it in src/server, and a client side in src/client which has all the react stuff. Our project also predates create-react-app (and, indeed, react) by quite a ways, so it's sort of evolved over time, but... In the "manager-ui" client, we'd do something like: ``` export function makeRouter() { const router = express.Router(); router.use('/manager/assets/', express.static(ASSETS_PATH)); router.get('/manager', renderMyApp()); return router; } ``` and then in the main project, we'd have a bit where we go: ``` import * as managerUi from '@benbria/manager-ui'; app = express(); app.use(managerUi.makeRouter()); app.use(customerUi.makeRouter()); // etc... ``` Now, one thing we want is nice stuff like hot module reloading and fun stuff like that in our UIs. But, we also want to make it so if you `npm install` in the main project and pull in these private modules, you get the "production" version without needing to have a copy of the git repo locally. Basically, we want these UI projects to behave one way if they're just `npm install`ed, but a different way if you `npm link` them. The secret sauce here is to use 'webpack-dev-middleware' as an optional dependency - if it's there, we use it to dynamically recompile stuff on the fly, and if it isn't, we don't. This code exists, in some form or another, in each of our ui projects: https://gist.github.com/jwalton/721e1643dbb262d44f7cc44b9fa9bef3 I'm sure there's less custom solutions out there, but this is what we've evolved over time. :)
Hi /u/howtomakeaturn, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
....what? &amp;#x200B; To avoid confusion, could you tell me what you consider to be a lambda function? 
Pretty interesting 
My coworker switched last week after he was on jetbrains for 4 years. We got him set up in 10 minutes and he's said he's never looking back. I'm not sure when you last worked with it, but it pretty much sets itself up these days and suggests extensions as you open file types for the first time.
I usually use Node REPL from the command line unless I need browser things. I guess I've never thought to use a specific site when I do want DOM access. I usually just use whatever site I'm looking at.
Just a heads up you can alias your now.sh deployments for free In your now config add: `{` ` alias: "plume.now.sh"` `}` Then after you deploy by running `now` run: `now alias`
It doesn’t work as a rough approximation. It will take 3 times longer. 
Terminal &gt; Node 
Array.reverse() is the solution. 
Why not? This is something which hasn’t been done before in such a lightweight package.
How so? The following loops are approximately the same in terms of performance: // Version 1 for (const x of [1,2,3]) { f(x); g(x); h(x); } // Version 2 for (const x of [1,2,3]) { f(x); } for (const x of [1,2,3]) { g(x); } for (const x of [1,2,3]) { h(x); } I say approximately because they may have different characteristics in terms of memory locality etc., but that matters less and less as the functions f/g/h get more expensive. The same principle applies to the `reduce` version.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Someone need to tell this guy about Array.pop and Array.shift...
Either `about:blank` or CodeRunner. 
Array.reverse() is one solution, but it modifies the array in-place. What if you want to iterate in reverse, but keep the array in the original order? &amp;#x200B; `let nums = [1,2,3]` `for (let i of nums.reverse()) {` `// ...` `}` `console.log(nums) // [3, 2, 1]`
Hi timedrepost! Yep. It's a great fit for Cube.js. In fact Cube.js was designed to work with columnar databases at the first place. Amount of joins shouldn't be a problem at all for columnar data store. In production some of our customers have queries with more than 13 joins that spans tables with more several billions of rows each and it works pretty well. It's BigQuery though.
What is the purpose of this repo? Just a demo of how to created a repeated unordered lists using different frameworks/vanilla JS?
These work although I'd argue they are less readable. Swapping the last two elements would look like this: &amp;#x200B; `let last1 = arr1.pop()` `arr1.push(arr2.pop())` `arr2.push(last1)` &amp;#x200B; They can't be combined with the ES6 syntax for swapping array elements either. &amp;#x200B; `[arr1[arr1.length-1], arr2[arr2.length-1]] = [arr2.pop(), arr1.pop()]` &amp;#x200B; Because of evaluation order, the last elements will be removed and the length on the left side changed.
Single line solution: ``` [a[a.length-1], b[b.length-1]] = [b[b.length-1], a[a.length-1]]; ```
Next step? Are you already feeling comfortable with es6+? 
The ES6 syntax for swapping array elements is much better than using a temporary variable! Though I think [Vlad's comment](https://medium.com/@ifrimvlad/there-is-a-way-to-swap-the-values-of-two-arrays-without-the-need-of-a-temporary-variable-abb5874886a2) shows how much clearer a named property is over indices.
somewhat comfortable, I just wish I could find a site where I could do some practice test or something that would let me know where I am in terms of my skills/knowledge
As above, so below &amp;#x200B; \^(also matthew)
I just finished up a bootcamp. Now, I can't really say for all of them, but the one I did expected you to be starting at absolute zero and then they give you around 40 hours of pre-work to do before first day of classes. And then it's 10 weeks of pretty high intensity and huge growth. It was also the best learning experience of my life so far, and I got a paid internship within a week of finishing. Basically what I'm saying is that I know bootcamps as a whole can be pretty divisive, but if you're planning on doing one at some point anyway I would say it sounds like you're ready now. I went into mine with a bit of coding background - I'd taught myself some Python, and knew a fair bit of HTML and CSS. The bootcamp I did was predominantly JS (and then also introduced us to Ruby and Ruby on Rails 3/4 of the way through) and having that Python behind me really helped me. With your JS learning you'll be absolutely fine. 
Depends on the project. It's quite feasible to ship a small express service in a few hours without any boilerplate. Often i just use prettier/eslint/nodemon and start from there. Typescript is also very easy to set up without boilerplate. Same goes for mall frontend applications. Devs often forget that vanilla JavaScript starts at 0 kb and zero build time. That's actually a huge benefit. Boilerplates are fine though. 
&gt; [arr1[arr1.length-1], arr2[arr2.length-1]] = [arr2.pop(), arr1.pop()] If I ever see code like this I'll rewrite your whole module. Don't dare me. What a stupid line of code. 
The biggest challenge I found when learning a new technology is coming up with a small project which requires the technology to build that you actually would enjoy building. Remember, it doesn't have to be new or special or unique -- you're building it to learn. &amp;#x200B; I'd recommend reading through various posts on here or perhaps browse GitHub and look for something that sounds interesting and try your best to replicate it. If that sounds too daunting, another suggestion would be to go through a utility library like Lodash and write each function yourself. This would be a decent test as to whether or not you have a firm understanding of the fundamentals of JavaScript.
&gt;I find -1 only marginally more readable than length — 1 Bye. 
Will you support typescript?
Each of the clicks to [Home] [Page A] [Page B] [Not existing page] are handled in-page in JavaScript instead of by the browser per 1993's &lt;a/&gt; specification ??
Yep. I haven't know much about PJAX. And pill wasn't inspired by it. But it has several differences: 1. Pill is compact 1.1 KiB vs 6.9 KiB (min, gzipped) 2. Pill is more robust. It realize convention over configuration principle. It prescribes site to has similar structure `layout(content)` where layout is shared between all pages and shouldn't contain visual elements. So you will always know how the site structured. Pjax (according to its' documentation) allows site to has several sources of data. 3. Pill has logo :)
Not sure we understand it in same way. To be clear watch at [Pjax](https://github.com/MoOx/pjax) and [Turbolinks](https://github.com/turbolinks/turbolinks) projects. Pill solves the same problem.
Please never do this.
Easy way to internationalize your React application [https://github.com/ibitcy/eo-locale](https://github.com/ibitcy/eo-locale)
As I wrote in intro paragraph it was inspired by twit idea and hasn't ever compared to other solutions. So it's hard to say about internal differences. But what I see now: 1. Smaller size 1.1 KiB vs 9.3 KiB. 2. Turbolinks prone to leak into your HTML with custom attributes. And HTML of site pages becomes some kind of Turbolinks' DSL. Pill doesn't do it.
The point was just that you *can't* do that even if you wan't do. It's definitely not an approach I would recommend... unless you want an intentionally unreadable way to remove the second to last element and swap last elements.
So why not just use react?
Iteration is not free https://jsperf.com/3-loops
Notice how when you click any of the links, the content and the url just changes. There's no flash or loading icon on the browser tab like there would be without the library.
Yes. It gives you ability to show loading indicator and prevent site from FOUC. What, as i believe, is good UX.
Nice!
I didn't say it was, I just said that each loop does 1/nth the work. So it's not as simple as saying 1 loop = X amount time, 3 loops = 3X amount of time. There's a cost for splitting it up, but the computation within each iteration step is divided. So this: &gt; It doesn’t work as a rough approximation. It will take 3 times longer. Isn't true.
Build projects that you’re into, and stick with it. Hit a road block? Find the solution, ask around the community, the answer doesn’t have to be the most optimal solution. Once, project is to your liking or at least mvp, refactor. DO NOT, I REPEAT DO NOT GET STUCK IN TUTORIAL HELL!
Really nice library, and love the size will be using this on some of my smaller projects!
&gt; I didn't say it was, I just said that each loop does 1/nth the work. The majority of the work **IS** the iteration. 
It’s so rare I have to subscribe inside a component these days.
Has anybody used this library before? Anything anybody like/dislike about Precise? (I've not heard of this library before)
Hm, I might’ve considered removing debugging console.log’s and code you’ve commented out. But that’s just me. Also - a demo might be a good idea.
Awesome name!
Or just get postgraphile
Hi /u/TheRussianCollusion, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
This looks so awesome. Pumped about the linux support!
... who the hell has to swap the last two elements of an array frequently? 
Nice
Solutions are being created where no problem exists
How about being nondestructive about it? [arr[arr.length - 1], ...arr.slice(1, arr.length - 1), arr[0]]
Big oof
File size is kind of meaningless if the functionality isn't the same, and looking closely I can see quite a few features that turbolinks offers that pill doesn't. I'll keep it in mind if I ever need anything more lightweight, though!
That depends on the body of the loop. If all you're doing is a simple comparison then maybe, but if you're doing an expensive operation then the iteration overhead becomes negligible.
thanks
This works, but as pointed out [SO](https://stackoverflow.com/questions/9050345/selecting-last-element-in-javascript-array#comment36009964_20957854) it's [very slow](http://jsperf.com/last-array-element2). I also don't find it very readable.
That's a good point to clarify specific use cases. Swapping last elements is admittedly trivial and contrived, though I've actually had to do this as a way of transforming legacy APIs to confirm to a consistent spec. More commonly an array might contain objects sorted by date, and the last element might be presented in a UI as being in "edit mode" or something similar.
Speed on this scale is only relevant when you do something many times over like in a tight loop. Otherwise it is a micro optimization and not a problem. Yes it isn't very readable, but that happens when you try for one-liners sometimes. I actively avoid nesting operations like this. Here is a readable version: const arr = [1,2,3,4,5]; const first = arr[0]; const last = arr[arr.length - 1]; const middle = arr.slice(1, arr.length - 1); [last, ...middle, first]
it seems that it's a utility to load a page from remote via fetch() instead of standard link, then insert the results into the page at the given id. 
We're talking about OP's example. Generating summary stats. 
I agree, that reminds me very much of Elixir. Does this actually work? If I try destructuring to get the last array element, I get a SyntaxError "Rest element must be last element," which [seems to be the case](https://medium.com/front-end-weekly/es6-cool-stuffs-destructuring-me-plz-b8f1335d241a).
I don’t think they’re less readable at all. 
Interesting. I see references to that being a syntax error, but I tested it in Chrome, Firefox and Edge and it works for me. [Here is a screenshot.](https://i.imgur.com/FIEmLTh.png)
It's just an electron app...
Ok, I see the discrepancy. In you're example you've already defined first, middle, and last and you're *restructuring* them into a new array. I want to do the opposite, i.e. &amp;#x200B; `const arr = [1, 2, 3, 4, 5]` `[first, ...middle, last] = arr` &amp;#x200B; This isn't allowed because the rest operator has to be the last element in destructuring.
Many SPAs work with way. This isn’t new.
Yeah, but I’m not sure when I’d use this instead of vue, and I’m a fan of Angular since 2009
Sorry for the delay, you can now try demos
&gt;level 1 I understand you concerns, it was just a matter of time, you can now try demos
I see. I probably got your point. So the approach of Cube.js is to use SQL to do all necessary transformations before data can be consumed. So in fact Cube.js can work with normalized as well as denormalized data as soon you can provide SQL for fact table of interest. In your case it'll be something like ``` cube(`FavoriteNumbers`, { sql: `SELECT dt, COALESCE(num, LAG(num) OVER (ORDER BY dt)) as cur_num FROM ( SELECT date_trunc('day', dd)::date as dt, numbers.num FROM generate_series('2019-01-01'::timestamp , '2019-01-31'::timestamp , '1 day'::interval) dd LEFT JOIN numbers ON numbers.dt = date_trunc('day', dd)::date ) ORDER BY dt ` measures: { avgNum: { sql: `cur_num`, type: `avg` } }, dimensions: { date: { sql: `dt`, type: `time` } } }); ``` Dialect is Postgres.
Oh, yes, I'm [spreading](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax) the array. I only find destructing to have much use with objects. In C# I use it with [Tuples](https://docs.microsoft.com/en-us/dotnet/csharp/tuples) frequently. I use the spread syntax when I'm trying to be immutable.
Trying to get that i variable into the $cars loop
This isn’t going to be possible since the php will execute before it is sent to the browser when the js will execute. What you could do is: var cars = &lt;php echo json_encode($cars,true); ?&gt;; Or something like that. Echo the php array into a js variable. That way that variable holds the info when the js is run.
How is this different from obj.key (or obj[key] for dynamic keys)?
Still works on linux doesn't it?
That was quick. You do have to understand: for new people, the first question is "what can you do with this, and what does the code of a typical project look like", and not "how do I use this?"
If speed is an issue (which it often won't be, this type of use case in particular), then use something like the below. To be honest I'd favor it even if speed is not an issue. Added benefit of this syntax in my opinion, is that its purpose is more obvious due to how the left and right sides are mirrored. [arr[0], arr[arr.length - 1]] = [arr[arr.length - 1], arr[0]]; 
\_Love\_ Gabriela Britto's refactor work to convert existing functions to use the “named parameters” pattern. That is something super useful I've always wanted! Best feature of this release. Tell her great job for me! :)
Didn't say it does, point was electron runs anywhere node can. With effort you could probably run it on Solaris.
I'd love to see more context or some examples. I can't remember ever having this use case come up before, and even if such a case comes up I just feel like there would be other more favorable options to avoid the problem entirely. Also regarding your 'more common' use case. If I imagine implementing that myself, for example using Vue, I'd probably create a computed property that returns the last array element for me. That way I'm essentially creating the `.lastItem` getter, keeping all the potential benefits (and more like a custom name that fits better), but only for this specific array. It'd also use `arr.length - 1` only once, namely inside of that computed property, which is perfectly fine. So I don't see that as a legitimate use case for `arr.lastItem`. You also posted another example in the article about getting the last login. There are so many ways to improve this that don't require a property like `.lastItem`. For starters, if you have a use case requiring the most recent login, then you should have a data endpoint to provide you with this. Fetching all logins and then returning the last is just as redundant as using `slice` for the last element swapping example. If that's not an option and you have to work with the whole list, it may still be possible to have it reverse sorted by the database, letting you return the first element. Incase all else fails (or is not possible), you also mentioned `Array.slice(-1)[0]`, which I would consider a proper alternative with a slight ES6 twist: `let [lastLogin] = await getLogins().slice(-1);`. Don't get me wrong, I like the proposal that's been in the works for a while now, but I just don't see the impact being that big. At the end of the day it's just a nice little bit of syntactic sugar (it won't even be faster at all) to make our lives that tiny bit easier.
I like the new `readonly` array syntax. Much cleaner. // instead of arr: ReadonlyArray&lt;string&gt; function foo(arr: readonly string[]) { arr.slice(); // okay arr.push("hello!"); // error! }
Doesn't really seem related to the article and `Array.prototype.lastItem`, but iterating an array in reverse can be done perfectly fine: const nums = [1, 2, 3]; for (let i = nums.length - 1; i &gt;= 0; i -= 1) { console.log(nums[i]); } Or a more functional approach that returns a new array (works very well if you don't want to immediately consume the array items): const reverse = arr =&gt; arr.map((n, i) =&gt; arr[arr.length - i - 1]); const nums = [1, 2, 3]; console.log(reverse(nums));
Codesandbox because it auto refreshes
I know you said book and this is a book, but if you prefer to work from documentation, why not just work from this: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference Here is a good-seeming overview of books for different programmer backgrounds: https://wsvincent.com/best-javascript-books/ Also, if you're from an OO background, I'd look into something like this as well: https://www.manning.com/books/functional-programming-in-javascript 
I am going to try this and thanks for the Linux Support :)
Why styled-components 2? They're currently at major version 4?
I know what I'm doing on Monday
We can't do your homework for you. If you want some general guidance, think of how you will represent what lowercase letter maps to what uppercase letter. What data structures could you use? 
Good points, thanks for raising them. I completely agree it's largely syntactic sugar. But precisely because of that this is a very small, well-constrained addition to the language that could provide a utility many libraries currently handle. There's another example using Lodash that show's for the last login example, it's just as easy and concise with a functional approach. The discrepancies arise in setting the last element. I prefer one approach that works everywhere. Computed properties in Vue are great! I last used them as a wrapper around [URL.createObjectURL](https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL). Vue handled underlying state changes with two-way data binding, and a simple function responded to those changes with a new download URL. It just feels like overkill to use such a solution for something like getting the last array element. With a property like `Array.lastItem`, binding the property should auto-update without the need for a computer property. A small win, but still a win.
The functional approach is great, and there's even more ways to go about that. [Symbol.iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator) can do this without even needing to create a clone of the array. It's definitely a powerful protocol, I want to better understand it's use cases.
Generally speaking people don't want to do homework for you. It really doesn't help you if have someone do it and I'm sure your professor wouldn't like it if he knew you asked for it at this level. Your professor basically gave you 1 answer. He said, you can't use anything on that list. So figure out what is on the list that would work, and write your own function that does that manually. Step through the problem and think about how that built-in function would likely work. My guess is also the professor probably has recently spoken about some of the basic functionality of javascript that would help you do this. 
The best thing you could do is find a strong Udemy course and do the whole thing. Most of them build a whole site and test you throughout. 
Google
Golang 
My profession is not your hobby, if you don't like, find another one.
This is so tiny and lightweight, and it does one thing really well. I don't think it's even in the same space as Angular.
Then you stay dumb, if you cannot understand the newer ecmascript standard than get out of the kitchen or learn it.
&gt; I haven't tried to learn any new JS features, but I'm mad they are there because Arrow functions are not hard to learn to read, and they aren't just about "elegance". They offer actual advantages that make then useful in hobbyist level code. I write a lot of throwaway scripts, and almost always reach for arrow functions. And promises? Spend 10 minutes reading about the (promise based) Fetch API, and then explain how you'd rather build xmlhttprequests. Spend a little time with async/await and tell me again how promises are bad. It's obvious the author finds it easier to complain about not understanding language features than learning them, but both his examples are so useful and bring so much MORE flexibility and utility to the language.
It's 2019. If you have the grit, you can just learn it entirely online. There is so much documentation from Google, Moz, etc., that you shouldn't really ever *need* a book. Book would only be a supplement, but not the place where you should be doing the majority of your learning.
What's in your webpack config?
Hi /u/pawlisko, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
What are you doing?
You can also implement map, reduce and filter using a for-loop. I'm not sure I get your point.
You don't know JavaScript by Kyle Simpson. The books are free to download and read. Or if you want physical copies you can get them on Amazon. Eloquent JavaScript is another decent JS book. 
Sounds really cool. Commenting so I can remember to take a look at it in more detail when I get the chance
This guy has a bad take even for a hobbyist. 
Working
Upgrading is codebase to 3.4 I assume
Any equivalent for React?
[removed]
Quick and easy way of doing responsive single page web applications without lots of framework guffins.
Upvoted for Sakamoto 
Maybe I should completely take out the background image. I like #5, but at least the My Work page needs to be kept separate I believe, so I'll keep the website as separate pages. "DragonOsman" does have my own name in it: Osman. 
Awesome, thanks for the reply. I’ll check it out on Monday. 
If you were to try to access a property and it doesn't exist you'll get an error that the property doesn't exist. Using Reflect.get, if the property doesn't exist on the object it returns undefined.
Hi /u/xLearno, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This post pisses me off. \&gt; If you’re a hobbyist who enjoys programming for the logic of it, the new stuff in JS hides that logic on behalf of things I happen not to care about like elegance, consistency, and concision. If you program to produce shitty code on purpose than your hardly a programmer.
If all you're looking for is stuff enclosed in script tags, don't bother with something so complex as an HTML parser - since script tags can't contain any nested tags, regex or something similar is fine in this case (when it isn't usually). As for parsing js, that's a more difficult issue, so pick whatever js parser works for you. Esprima looks like a very respectable choice. My piece of (unwarranted) advice is not to reach for the most complex thing first, just get something that works.
Seems to me some people miss the point. There simply need to be a easy-to-use light weight programming language for hobbyists. We have not been there we are today if people back in the old days not could have grabbed their local version of BASIC (or the like) and start simple scripting. JS is evolving really rapid, it is a completely different paradigm than just 10 years back, an increasingly set of features are so complex or require so much knowledge that they simply is not an option for hobbyists or curious people ( I have meet extremely bright people on dr / professor level that have really hard by doing their simple scripting themselves) They just need a scripting tool, not the need of reading 100 pages about async or immutable objects. JS is evolving, and that is a very, very great thing - it just leaves a lot of people back in the harbour. It simply gets harder. What if we all should have started out with learning classes, prototyping, streaming, "weird" stuff likes promises and so on - before we made our first AUTOEXEC.BAT or `alert(a+'+'+b+'='+(a+b))` ...? The browser-makers should consider introducing a script language for the masses, like GW Basic, Poly Pascal or similar, and then just lift off the JS-rocket. The absolutely most import part of the ecosystem is newcomers and hobbyists eventually turning into professionels. We are literally now demanding people to be "C++ programmers" just to be able to do simple stuff. That is in the long term a very bad idea. 
Honestly if you're _just_ a hobbyist, _and_ you're too lazy to learn the new language features, then what makes you qualified to write a 5 page blog post on shit you don't understand? Your opinion means absolutely nothing to this discourse. Good job, you spread a useless, piece of shit opinion piece article on the internet advocating an ignorant position. Thanks, noone asked for it.
Nope, I need to refactor and save the HMTL too, not only the script contents, so I will need a proper DOM (or equivalent model).
&gt; The browser-makers should consider introducing a script language for the masses, like GW Basic, Poly Pascal or similar, and then just lift off the JS-rocket. That's what JavaScript was designed to be. Java was the language of the web for programmers. Things just didn't work out as planned.
Awesome! I'm excited for the [higher-order-type-inference-from-generic-functions](https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#higher-order-type-inference-from-generic-functions)!
Are you sure you're talking about JavaScript? The fact that you can access any property and have it not throw an error is a main feature
Risky so soon
A for loop is imperative. A fold (aka reduce) is declarative. But either way, the point is it's an example. How is map implemented? That's useful to know, especially if you run into a case where you need a different kind of map than what JS provides out of the box. What if you needed to map a tree or another sort of graph that isn't just a linear list?
Wow nice timing, i just moved into AI and Neural Networks so this should be pretty useful
It only took 5 years? There is still so much more potential in the type inference. And people ask me why I think Flow (or Reason or PureScript) is better than TypeScript. People just don't know what they are missing until it arrives in TypeScript.
How so? One of the most important features distinguishing creative devs from engineers is in my opinion tweening values, timelines and animations in general. What feature would you list first?
TypeScript solves a different problem than ReasonML or PureScript. It’s job is to bolt on an effective type system _onto_ JavaScript, and many of it’s designs follow from that. Types are merely a compiler mirage, and do not exist at runtime. Flow is in this neck of the woods, but ime it’s not as well fleshed out as TS and in practice, structural typing tends to be more ergonomic and forgiving.
Personally, I’m most comfortable with using an Express server with either MySQL or PostgreSQL for the database. Express is really easy to use, and will leverage your JavaScript knowledge, since it’s a JS server library on top of NodeJS. They’ve basically handled all the hard parts of building out the middleware for handling GET/POST requests. If you’re actually going to deploy for production, don’t take my advice. I’m not the expert you’re looking for. But for ease of deployment, that’s the route I would take just to get something working quickly.
I remember one of the devs discussing how they used iframes in order to properly sandbox the scripting environment, to prevent arbitrary code from running directly inside their client-side application. I suppose that’s good for security reasons.
In the beginning you may have to. As you get more comfortable with the code you can make larger changes before building.
Many projects will have 'watch' commands or something similar that more quickly compile individual changes as you make them rather than having to explicitly rebuild the entire project. You also don't have to review your changes line by line and could make a series of edits before rebuilding to reduce the pain. That being said, if the project has a complicated build process and no watch feature or incremental compilation then yes, you may just have to deal with that. Be thankful you are in web development where developers are still demanding when it comes to build times and not working on some massive backend project where 5-10 minute or longer build times are standard. 
ES5 would be perfect
Thank you. Yes, I will deploy for production but I will still be the only one working on it. &amp;#x200B; I need to talk with someone who really knows this stuff. There are so many options it's impossible to even consider them all, let alone pick the right one. &amp;#x200B; Do you know whom I could contact to ask for advice? Maybe a paid consultant of some sort?
&gt;text should be red you mean that the text should be "red"? or that the text displayed must be colored red? &amp;#x200B;
If this solves the same problems, why should we use it instead of those projects?
array.map(object =&gt; { const color = object.redOrBlue ? \`rbg(${object.hue}, 0, 0)\` : \`rgb(0, 0, ${object.hue})\` return &lt;div style={{backgroundColor: color}}&gt;{object.name}&lt;/div&gt; })
i think what my professor wants is the text displayed to be colored red
displayed where? is it JSX? 
Hmmm, I happen to know a thing or two about small-sized projects, where you might only need 1-2 servers. But I’m honestly at a loss when it comes to scaling up to a truly large user base. I think you might be interested in looking at “serverless” options with a cloud service like AWS or Azure. That would allow you to scale up seamlessly. I have very little knowledge on serverless backends, but it seems like a good solution at any scale. Basically you won’t have to worry about the impact of a rapidly growing user base over time. You also won’t have to worry about the server itself. You just write small functions that get “spun up” in their own processes on a collection of cloud servers. You’d have to do your own research on the specifics. A few basic questions you will have to think about are: 1. How will my server-side resources scale up over time? (This is a non-issue for client-side code, but for server-side, it’s a huge deal). 2. What do you know? Is JS your primary/only known programming language? Do you know any common database-oriented languages like SQL? Leverage what you know. 3. How will your data need to be stored and structure? Can you just throw an entire page-worth of data into a static file? Do you need a complex set of tables to organize your data? That’s going to make a big difference in which type of database you want to use. 4. No matter which language you use for server-side code, you will might need to handle common things like user authentication, input sanitization (so users can’t upload and execute arbitrary code on your server, such as a SQL injection attack), payment system integration, server-side rendering, etc... Do you have a game plan for those things? Do you know which libraries you will use? As far as experts or consultants go, I don’t really know... but hopefully that gets you thinking in the right direction. 
i forgot to mention, this should be a p5 file. I'm just so confused by what to do
go step by step. Find out how to output a p5 file from a js execution. I already sent you and algorithm. What it does is create a String with the rgb code color depending on the value of the redOrBlue flag. Next, it takes the String ("color") and inserts it in a div element (a div element is a html container element for texts, for example). In your case, instead or returning a div, do something like this: const result = array.map(object =&gt; { const color = object.redOrBlue ? `rbg(${object.hue}, 0, 0)` : `rgb(0, 0, ${object.hue})` return // (function to save the text in the corresponding "color") }) "result" will store the texts in their corresponding color in an array. You can output them in the p5 file.
Use lerna
okay awesome i'll give it a try. thank you!
Remember: what's important in my answer is the condition line. "condition ? doSomething() : doSomethingElse()" is a ES6 js format to shortens if conditions. Is equivalent to: if (condition) { doSomething() } else { }
Yes, thank you. That's helpful. &amp;#x200B; Takin into account what you're saying, I probably just need to stick to Firebase (backend as a service) for now for absolutely everything except the front end. The MVP won't have a huge code base anyway so even if it came to re-writing everything from scratch to migrate away from Firebase, it would probably be tolerable since that would likely happen only at "product market fit": the concept would have been proven to make sense and to be worth existing. Thinking it through, that's really the only concern to have now. &amp;#x200B; If I'm making an obvious mistake, please let me know. &amp;#x200B; I was hoping to hear a clear "use stack A with B with C and that's the obvious answer for any project like the one you describe at any scale being created today" but it seems the set of options is just too vast and complicated for an answer like that. 
neat!
Can't wait for \`--incremental\` flag to be added to ts-loader/awesome-typescript-loader. Pure \`tsc\` gives about 75% reduced compile time for our code base!
This isn’t rocket science. JavaScript is one of the easiest languages to learn. In fact, it’s so easy that even dummies who barely know the language can get jobs as “professionals.” If, like the op claims to be, you’re someone who has been a hobbyist programmer since 1984, you should definitely not have a problem picking it up. And if you do, after 35 years, you should maybe consider a different hobby.
I agree, steps I would take are: 1. Load all the html to a new element 2. Use querySelector() to pull out and reload the script tags. 3. Use the rest of the new element's html for whatever else you need it for.
Angular/Vue offer a lot more than this library does. If literally all you want is "dynamic loading" on your very vanilla JS site, then this library was probably built for you. For those of us who are already invested in the React/Vue/Angular/etc ecosystem, there's already plenty of established libraries that will play nice with your framework of choice, so you'd have no reason to use this library. 
I completely agree. However, it seems like longer build times tend to push teams into using good testing practices, so you can just pull the relevant unit tests to refactor anything, and reasonably expect it to work properly after building. Doing so circumvents a lot of the “waiting around” to test your code. It’s better if there is already a solid test suite available though.
Flow biggest problem is bugginess and performance. Between it randomly stopping or using 100% cpu and 2GB it drives me nuts on projects that we use it on. Whichever method it is using to infer more type information seems to come at a significant cost. And I haven't found the inference significantly better than TS despite that supposedly being one of flows strengths. I'd say at best it is a wash between the two. In contrast, I've never had an issue with TS running and compiling.
This is more of a "unknown unknowns" issue. A (good, thorough) book will introduce you to a wide range of concepts in an ordered meaningful way. Online tutorials tend to cover certain topics, so if you're not even aware of them you won't find them and consume them. Even when you do, they tend to be narrow in scope, and otherwise assume an intermediate grasp of unstated topics. Good books will point out requisite knowledge and cover related any related topics. 
Couldn't recommend "Secrets of the Javascript Ninja enough". One of the best books for any language I've ever read. If it helps, one of the contributors is the primary author of the jQuery library, which for a period of time was (perhaps notoriously) synonymous with Javascript itself. The exercises in that book were indispensable. Quite often I'd catch myself not truly getting it when faced with them, where otherwise I'd have carried on with a false sense of understanding. 
Wow. TypeScript is becoming one hell of a comprehensive piece of kit.
I wish it was just ro not readonly 
Nothing was planned :) Back in the start 00'es I personally was set to do Java EJB's to JSP that should communicate with both JS and VBScript on the same page, and we had 5 different JS implementations to serve :) Just an example, what JS has become today is actually surprising. When JS came out (Netscape) no one thought of Java as backend, it was still too slow and buggy, but many believed that Java1 applets could be a thing (like ActiveX, Flash etc) - just to mention a few other script languages used on the web. The popular choices were for years CGI and executeables that outputted HTML, then came perl, php and so on. JS has become stable and is actually a standard. Great! JS is ported to server, a new type safe version with "real programming language" features has seen the light, and the next revolution, WebAssembly, waits around the corner. But many hobbyists is left behind. If the commitees / big companies not do it themselves, I could Imagine we will see scripts languages "for the masses" made in javascript (there are ready to go JS projects for that, someone just have to agree about a dialect). Simply scripting for everybody. Besides that, I cannot stop noticing that a lot of those new fancy tools, hobby-projects, geek-things and so on we see announced for example here on reddit actually just is small hobby-like scripts in a few hundred lines (top). The rest is dependencies, frameworks, packages, polyfillers, scripts instructing other scripts about dependencies and packaging, transpiler info etc etc. Once, when "4 generation" programming tools came out we hitted "run" and out came an EXE with a size of 2.5mb that said "Hello world". We have a similar situation today, with JS and where the evolution is going. Well, enough. I must back to my beloved JS :)
You should look into a task runner and the live reload functionality. I use grunt due to familiarity however, there are newer technologies so maybe google around. This can help you with build process automation. 
Seriously... Webpack takes like two minutes but tsc is instantaneous basically 
If he can't avoid the new features because all he does is copy code from Stack Overflow answers then he's not much of a hobbyist even. If you want to muck about in a simple language, just do your own mucking about. I wrote random TI-BASIC programs all day in high school on my graphing calculator and it was fun because I could just throw some procedure called XYZ() together and figure out how to do stuff in a limited language on an incredibly slow platform. But also, the platform was simple enough that I didn't have to copy other peoples code. Wanna draw a line? No learning Canvas, just ":PxlLine x1,y1,x2,y2" Wanna draw a rectangle? Draw four lines. There was a time when JavaScript and the Web was a simple platform you could just play with. That time has gone. If you want that, go learn Basic or Scratch or maybe even Squeak.
Personal opinions do not matter in this subject. It is irrelevant how easy you or me think it is to learn JS. If the bus schedule in the city is so complicated that it prevents people from taking the bus, then we should make the schedule easier to comprehend. Or think about sports. It actually do matter how many people who support a sport as amateurs, youngsters, semi-pros, TV-viewers etc, if no one is able to participate, the sport dies out and vanishes from history. If an increasing amount of people think the only script language they have available has become overwhelming hard to understand and use, then we have a problem. It do matter if we have 10 mio people playing with JS and open source projects, or we have 200 mio or 300 mio. 
Hi /u/youngjiwen, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Can't it use WebGL for rendering?
I agree with what both of you say and still this is why I wrote the comment in the first place: Typescript is/was missing a lot of basic inference that everybody is now hyped about yet everybody claims that "inference is not that much worse". Maybe it does not matter to much in practice (esp. with the OOP style that TS seems to favor) but things like [type parameters for JSX](https://github.com/Microsoft/TypeScript/issues/6395), that are not needed in Flow simply because of decent type inference, tell me that this is an issue. And the syntax for the latter is just plain confusing and might be colliding with the future JSX spec. 
We all know that just answering RTFM is kind of rude, but... you know, sometimes, the answer **is** really [in the documentation](https://developers.google.com/blockly/guides/modify/web/advanced)
Yeah!!! Fuck those guys for trying!!
Thanks for the tip :)
As a creative developer I use animations all the time so yeah that's one of the main features
Yeah I'm planning to do more cleaning soon
You can use the framework in two ways, as a small utils library where you only use some bits like the audiomanager or the tweenmanager. Or, you can use it as your main framework which means you can use a router to make differents pages, Components to structure and create reusable views etc ...
Are these books worth reading? Aren't they obsolete because of the fact that there's a new JS framework/lib that changes minds daily?
I would highly recommend eloquent JavaScript by Marijn Haverbeke. There is a new edition released every 1-2 years and covers the current state of JS. There is an online PDF available but I would suggest buying the book, purely because I have found it to be such a great resource. https://eloquentjavascript.net
There's so much wrong with your nonsense that is hard to know where to start. The tl;dr is "see: find another hobby." Personal opinions are *absolutely* relevant. You're arguing that the personal opinion of someone who doesn't want to learn a programming language so therefore other people should make one that they don't have to learn had primacy over the opinions that this is ridiculous, and frankly stupid. Your opinion is nonsense. There are a whole lot of people who have figured out the "bus schedule," even if they're kind of shit at it and constantly get off at the wrong stop. This sub is full of them, but they're still getting along. They're are of course going to be people who just can't figure it out. They can walk or get that door-to-door shuttle (not be programmers and use the applications that others choose to write). Again, you're spouting nonsense. How good are kids and amateurs at the sports played by professionals? How many of them play the sports at very low levels, never interact with even mid-level strategies, and maybe don't even observe all of the rules? Again, just look in this sub for thousands of people who barely know javascript and get by making little things that they find useful (and sometimes even things that other people find useful). Pure nonsense. You can dumb programming down until it is so basic that there is no utility at all and the vast majority of people still won't get it or have the interest even if they are capable of figuring it out. That is not a failing of any particular language or even the field of programming. Just nonsense. OP's problem is that he never knew javascript in the first place, and when confronted with uses of fundamental language features used in a way he hadn't seen before, had no idea what to do. That's OK. Lots of people aren't cut out for programming, even at the most basic levels. If he was getting along fine with older javascript, without knowing what he was doing, guess what? He can still keep doing that, because javascript has this really annoying (but totally understandable) attachment to backward compatibility. 
[removed]
I like these nice and concise examples :)
JavaScript.info
This is conservative and reactionary. Progress is a pillar of IT. If they can't accept progress then IT is not for them.
I did start JavaScript with promises because the first time I had to use it, it was for Ajax. It is not that complexe. The concept of promises is pretty basic and not exclusive to JavaScript. What you are asking for already exists. It is called Web Assembly. You can use any language you want for frontend with it. You should check it out.
Nice idea! Didn't think about this, but I guess if I get a standard-compliant DOM out out the HTML parser, I'll have querySelector() available, indeed. Note that I don't need an in-browser solution but a nodejs one, so I'm not sure I'll get a full fledged DOM ([at least from htmlparser2](https://github.com/fb55/domhandler)).
I wanted to try it, but im not creative :/ Dear author, can you let non-creative person use it? Please...
Version 2.0 - add more dicks - replace water with graphic of a large paper sack 
Hi /u/yizhuang1996, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks. it made build time 2.5x faster . there was another part in documentation that contains instructions to link directly to some js files. i should tell "RTFM" to myself sometimes :) thanks.
It inspires me!
It speaks the language of gods
If you're already willing to go to then console, then this is easier than that. Select the textbox using document.querySelector and change its value to what you want to copy-paste. You should see the input field in the textbox change to the copy-pasted text. Once it's updated, there is a chance the JavaScript in the site hasn't run yet, so just type anything into the textbox and let it realize the value is now new. There's a chance this approach won't work, but if the site you're using can be thwarted by copy-pasting the function you wrote down into the console, then it's really not going to be hard to circumvent it.
Silicon Valley would like to have a word with you
@[NamTheBoy](https://www.reddit.com/user/NamTheBoy) Adding on comment by @[Hanlonsrazorburns](https://www.reddit.com/user/Hanlonsrazorburns) Good starting place: [https://chromium.googlesource.com/v8/v8/+/4.3.49/src/string.js?autodive=0%2F%2F](https://chromium.googlesource.com/v8/v8/+/4.3.49/src/string.js?autodive=0%2F%2F) 
Of course ahah
I've describe differences in comments below. Pill does the same things at a lower price.
Not bad, just don’t get too cocky
I laughed way too hard at this
haha, isn't this just a css animation, though? where's the javascript?
how did you build this ?
I... um. ..... well it works 
Wow, you could be a great front-end developer, that amazing design, unbeliveble
Bjarne stroustrup would like to know your location to design the next iteration of c++, dick++
javaScript and style.left , style.top 
you should package it jquery.dick.min.js
I wonder what this project will evolve into. [https://store.steampowered.com/app/469820/Genital\_Jousting/](https://store.steampowered.com/app/469820/Genital_Jousting/) ?
Did you just assume his implementation?
Hotdog
You’ve finally cracked it.
Scriptophobe!
CSS is just a social construct
oh hey, it's that one joke -\_-
I like how you think
I am SO glad I stumbled upon this, lol... my sides.
Can you share the code ?
Can you share the code ?
Useful advice. It’s important for both consistency and accessibility.
Hey, so I've read the first book. It was interesting, but what now? He didn't give any exercises to practice what I had learnt. It's all theory. 
Sure, write me a private and i'll send you 
I've got something in the early stages at the moment - it's a node-based (node like in a tree) editor for creating what are essentially custom scripts. The user creates these graphs of nodes, and the graph is converted into a text-like format (more specifically a bytecode file) which gets interpreted by a bytecode interpreter on the server. It essentially allows users to execute custom code against my database by exposing an interface of permitted functions, represented as node types in the ruleset editor. It's working great so far! [Here's a little demo of the prototype in action](https://drive.google.com/open?id=1HNLPa_vrmsbShQREAgr1maknG3sWz03H). I may open source some parts of the editor if people find it useful! 
Hi /u/hatsune_miku__, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I just got reported to HR
I made a free online tool for querying and bulk editing csv files. It is intended as a gui to allow non-technical people to perform sql style queries on csv data. https://www.csvhero.com Built with React, Redux and Dexie.js (IndexedDB wrapper)
I agree, there’s usually a cleaner way to do it. do-while would most likely confuse maintainers more than they would help.
I made a small JS library for expressively rendering text, like you see video game dialog. &amp;#x200B; [https://dlcnine.github.io/TypeWriter/](https://dlcnine.github.io/TypeWriter/)
/u/01123581321AhFuckIt Was the web server application for my first project on the My Work page running when you visited it? It's running at the time of typing this comment, so when you get the chance to (if you haven't already), please try it out and let me know what you think. Thanks.
This is because most times you know the iteration you want the loop to run for. 
[removed]
Exactly.
Usually endless loops with a break condition are frowned upon (similar to goto), since they hide the exit conditions somewhere in the program flow. Also, you don’t necessarily need a variable there if the whole condition can be written in the expression itself. I personally use do/while maybe once every 50 loops, so it’s not that common, but it does happen. I do think that it’s way too prominent in programming introductions, though.
The YDKJS series is hardly about learning about things to use in practice, as in creating web-apps or similar. It was very clear about this in the preface. Also, the first book doesn't really cover much, it's more of a formal summary so the rest of the books can get straight to the point -- and they are MUCH more detailed than the first one. To practice what you learnt, you need to... practice what you learnt. **Create something**. Something that's fun to you, that you'll have fun making and possibly fun using later. Share it, iterate and improve. Then just delete the whole thing because your first attempt will suck anyway. Then create another thing.
Howdy! My best tip for you, is to download a some like visual code studio , or brackets . Learn how to make a simple html boiler plate. Either install visual code studios extension “live server “ or use brackets built in one, link your html to JavaScript and enjoy! Then it’s up to you what you want to code TIP: F12 opens dev tools which has your console for console logs 
They technically work slightly differently. The do-while loop will fire once, no matter what. The while loop tests the condition before firing. It is possible for a while loop to not fire at all (if the condition returns false), while the do-while will fire always at least once before testing the condition. It’s rare to want a do-while, but technically possible for it to be a better fit. I’d use while unless do-while is a better fit for what you want. Basically: - Use while statements ONLY when you don’t know how many times you want the loop to run (otherwise use a for or foreach loop, for example). This is fairly rare, but it is used regularly enough. - Use do-while loops ONLY when you don’t know how many times you want the loop to run, BUT you know you want it to run at least once. This is very rare.
I haven't found a tree for my project that'd suit my needs so I made one myself. (Finding nearest items on both side for keys that are missing from the tree, and json serialization. It's also fully generic with several ways of insertion) https://github.com/AlexAegis/avl
I think the abstraction you’re creating, turning code logic into a visual interface, is really cool! If you ever were to open source it, I’d definitely take a look. 
 [https://github.com/ridhwaans/homehost/](https://github.com/ridhwaans/homehost/) 
I'm going to sound dumb but how do I select the textbox using document.querySelector? I type document.querySelector in the console and I get:ƒ querySelector() { \[native code\] } &amp;#x200B;
You could use recursion instead and avoid the while loop altogether.
Was gonna recommend this too and he also sells a physical book too 
I have to admit, that was a great read.
Using recursion is not a goal in and of itself.
I was about to paste an example but I found none in my code. Just like you I ended up replacing the with just 'while', and those were rare cases. So you sure do gotta a point, there's just one thing I'd like to point out: The 'while (true) ... break' pattern seems imho less readable than simply writing 'while (test())'. Sure it's does not work the same way but it's how I would write it. 
Isn't `while` faster than `for` ?
No. Maybe it's theoretically faster, or it could be faster for people trying their hardest to find a difference by measuring with special software. But no. They're equal.
Every step I’ve made in programming has been in response to a problem I wanted to solve. Started doing video work, needed a website and learned basic HTML. Wanted to make the site nicer, learned to install Wordpress and hack themes. Organizing a admin page for work, learned bootstrap. Wanted to take what programming I knew to manipulate API data for a fantasy sports team selector, learned React. Found out Code I wanted to update at work was in Angular, learning that to build a new web app. It uses Entity Framework, currently learning that. Theater where I do improv needs a scheduling tool, taking what I learned with Angular and practicing with Firebase to build that. If you don’t have something you want to build, try building something you know already exists to see how it’s done. Learn how it’s done and what you need to do it. If it’s too complex, find something less complicated and build that component. If you can’t build a blog because it needs to connect to a database, just hardcore the data onto a text file or something and learn other elements. Make a Button that opens a page or a prompt. Make a form that takes a username and password and submits it to the console. Keep breaking things down to tiny tasks until you learn what tiny tasks you can accomplish and then imagine something you could build with what little you know. And then imagine, “if I only knew X I could build Y!” And then go learn X to build Y. And when you build Y imagine how to improve it by learning Z.
You would first implode the PHP array to form the output for the JS array: &lt;?php # Construct JS array $carsJS = "let cars=['" . implode("','",$cars) . "']"; # Output to browser echo $carsJS; ?&gt; From there, any subsequent JS code can handle it as needed.
Fascinating! Thank you for sharing :)!
Back in the ‘dark ages’ of computing, there were compilers and linkers which produced executables which had the exact right transitive closure of code and data, down to the exact set of functions level. Javascript has been inching in this direction with the likes of npm, yarn and the like, but the granularity is at the *package* level, not the actually required function level. Sigh. Worse remains better, And back to the article — good lord &lt;label&gt; is the most underused long-standing element. Clicking on the labels for radio buttons is our God Given Right. Encountering big (or even little) forms which don’t use them is such a pisser.
Really interesting. For someone who has only been in web development for a few months, this is a good reminder to take a break from viciously learning all the modern frameworks and libraries and make sure you have a solid understanding of the bloat and drawbacks of using them as well. 
The problem I generally have with this thought process of it must be the most optimal is doing that takes time, time away from other things like building new features. Do I care that a portion of potential users has a slow experience or that functionality is missing from all users that they'd rather have. I've personally found that people spend WAY TO MUCH time trying to speed up sites and not enough time doing the other stuff like building missing functionality, ensuring the site is actually fully functional, etc. 
Hi /u/HolidayInternet, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/nowboarding, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mooshykid, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Direct96, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/oparisy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Old_Item, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mooshykid, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ya3ya6, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/monkeyguy2017, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/devperez, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dpm24, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/pawlisko, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/NamTheBoy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dimden, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sdfsg11, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I've been toying around with three.meshline in react-three-fiber: [https://codesandbox.io/s/kky7yk087v](https://codesandbox.io/s/kky7yk087v)
Hi /u/DiluvialHippo, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
&gt; length — 1 length... em dash 1?
Working on this, thing I have about in month left for first release for SQL Server and soon after that a version for posgresql, it will be free. [Changelog system, tool to manage complex development](http://goorep.se:1001/changelog/report/rSelect/PAGE_result.htm?alias=guest&amp;rows=1&amp;&amp;query=Book+pages&amp;$TArticleBook1.ArticleBookK=2061)
Pop and shift remove the items. First and last getters don't alter the array. Dart and Ruby, for example, do have first &amp; last getters: https://api.dartlang.org/stable/2.2.0/dart-core/List-class.html https://ruby-doc.org/core-2.2.0/Array.html It's nothing unusual.
Array = [...anotherArray] 
I don't know where you are that people spend too much time on performance and not on features, but that's the complete opposite of the article and of pretty much everything I've encountered since working in this field. People want to ship, great. However performance takes a plunge and not enough people care. As the article said, you gotta take into account who your audience is.
You need the variable in cases where the loop body is modifying the condition which is probably the typical case.
Well this resonates with me, I’ve been concerned with this topic for a long time. Years ago my company tried to standardize using the dojo framework (a less popular peer of jquery). It has a component library called dijit which allows you to create custom controls. The UI library guys came up with very heavy button widgets that used many nested span tags to make a round-cornered and multi-colored buttons. If you looked in a debugger at the DOM, you could see the tags to make one button took at least 30 lines of code, over 20 times more than needed for a native button. This wasn’t sent over the wire each time of course, it was rendered in js but still made work for the customer’s browser and complicated maintenance. This unnecessary complexity really bothered a coworker and me. He made some alternative widgets using just css rather than JavaScript, but the look wasn’t identical. For example the button had square corners (I think it wasn’t possible at that time to easily get round corners using just css). The UI group and management were not at all interested in this quest to make a more responsible library and we were stuck with the inefficient one for years. Most of the devs came to hate to hate dojo, which was just a misused tool.
It does. And the companies that practice this absolutely SHOULD be losing out on millions of dollars, get exploited and made fun of by people using their services.
 [https://www.youtube.com/watch?v=gkgA3-8z9wo](https://www.youtube.com/watch?v=gkgA3-8z9wo) 
Spread operator ^
Which compilers / linkers did that? When I started programming in C in the late 1980's, the *nix and Windows linkers could include/exclude entire translation units but I don't know of any that could split a translation unit. So if you had two functions in the same translation unit, if you needed one function you got both. To optimize that, it was up to the developer to split them into separate translation units.
Why? We already have the keyword readonly.
Unless you have end-tail recursion (which JavaScript does not, as far as I know), recursion doesn’t scale, since you run out of stack eventually. More than once I ran into this problem in the past and had to rewrite the algorithm as iteration.
Great article, but one of the frustrating parts is the piece relating to making layouts look the same, even on browsers that don't support more advanced/modern CSS features. Personally, I have not had the luck so far in my career of being able to argue this point. If something didn't look exactly the same in IE, that would be marked as a bug, even if it was progressively enhanced, and pushing that through either a Project Manager/Client or QA's head has not been successful for me so far.
Some of the newer built-in JS objects like `Set` and `Map` are sometimes underused and makes many tasks easier/more expressive. 
Very good article! One minor note: the default `type` of a button is `submit` for every browser I'm aware of. I'm still in favour of specifying it, though, just in case.
No offense taken!
1. README could be spruced up a bit (but I love fancy README's, so this isn't critical). 2. Adding automated linting/formatting via eslint + lint-staged + husky is always nice 3. If you care about tests, it's also great to have that set up in a boilerplate 4. Kinda trivial, but you have plugin set up to support SASS but don't use it in your example 5. For your \`npm run build\` command, you should just run \`webpack --mode=production\` 6. Your repo still has some gulp related tags 7. Looks like you import tslint without using it, but it's [being deprecated](https://medium.com/palantir/tslint-in-2019-1a144c2317a9) anyway so stick with eslint 8. I would consider adding in the following install instructions after the \`git clone\`: \`rm -rf .git &amp;&amp; git init\` and \` rm README.md &amp;&amp; touch README.md \` so you can start your project from scratch without the boilerplate git history &amp;#x200B; Hopefully some of that is useful, I love building boilerplate stuff myself so I've looked at a lot of the same issues. Nice work! &amp;#x200B;
There's lots of places that the spread operator makes things easier, I don't know about this example though. The same can be accomlished with Array = anotherArray.slice(); I do like using it for concatenation though, so this syntax marries that well I suppose. It's also great for extending objects newObj = { ...oldObj1, ...oldObj2, newProp: newVal }
The reverse and sort methods on Array are useful. Iterators and generators are also very powerful. 
I would guess it's width, overflow:hidden and absolute position. 
Whats the best documentation you've found on how generators work? I get the gist I think but don't really understand their use cases.
Like: it’s high level API makes things that are tricky and complicated feel very easy 
If you don't mind watching videos [MPJ has a very good playlist on iterators and generators](https://www.youtube.com/playlist?list=PL0zVEGEvSaeG2T5n8FuPGb11JHea7idb9). [MDN has a pretty decent overview](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators) If you want to see a very interesting library built using iterators and generators checkout [redux-saga](https://github.com/redux-saga/redux-saga)
What’s beneficial about Map? I always end up not trying it but find it unwieldy. 
When you want to go HA it doesn't scale easily 
Hi /u/hatsune_miku__, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Done
A Map can use anything as a key, whereas a plain object can only use strings (and will stringify non-string keys). Fairly niche but occasionally useful. const a = {}; const b = {}; // Map implementation works fine const m = new Map(); m.set(a, "a"); m.set(b, "b"); m.get(a); // "a" m.get(b); // "b" // Plain object implementation is broken // Both o[a] and o[b] are equivalent to o["Object object"] const o = { [a]: "a", [b]: "b" }; o[a]; // "b" o[b]; // "b"
[Inference over Trees as Stochastic Lindenmayer Systems](https://ameya98.github.io/WebPPL/generative_art/) I made something with WebPPL and d3.js! Constructs a statement by applying L-system rules, uses this statement as a guide to draw a tree by associating variables with actions, and then performs inference with WebPPL over the number of leaves to estimate the depth. [Source](https://github.com/ameya98/WebPPL)! &amp;#x200B;
I discover a thing, there exist a "unknowed" element, try: alert(document.body.parentElement)
Map can be very useful, let’s say you had an object array of users and wanted just the usernames in another array. const usernames = users.map(user =&gt; user.Username);
Perfect! Thanks! I will do some and come back again :)
What does it mean to go "HA"?
Context: I am working on an alternative , and I am still ready to make major changes before using it in production [https://www.npmjs.com/package/socketiyo](https://www.npmjs.com/package/socketiyo)
Sorry for my ignorance: What is HA ?
Hi /u/haby_habbes, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[https://github.com/MegaminxCode/BaBaisYouClone](https://github.com/MegaminxCode/BaBaisYouClone) First proper project. Interesting puzzle game I thought I could recreate. Open the flood gates of improvements.
[https://github.com/MegaminxCode/BaBaisYouClone](https://github.com/MegaminxCode/BaBaisYouClone) The beginnings of a puzzle game clone for educational purposes. Quite proud of it considering what little knowledge of javascript I have. Any suggestions for code improvements are welcomed. Thanks.
I keep checking the roadmap but sadly nominal and variadic types seem to remain a mirage.
Using tree shaking and minification dead code does get removed.
Take a look to scrimba. Pretty good for learning. And look at angular or react. 
High availability, ie more than one backend server
I created an app, which allows the user to save tweets using google's cloud vision api. You upload an image of a tweet you want saved. After that, its stored and able to be searched by text content. Here's the link: https://saveforlater.netlify.com/
That’s are developers want to talk about. The extra stuff like this and accessibility. Sure business people care about features. Devs though don’t.
Everytime I read an article like this I see a boat load of applause and praise. Yes, yes let's all talk about how we should just be treating websites as websites, yes yes let's talk about how much code ships these days to a browser using the most arcane devices no one uses. Cool. So often, I read these articles and think has any one actually gotten requirements for a project that is any sort of complicated? Anytime where the design is actually impossible to build using normal html/css patterns? Even in this article, they talk about validation and yet validation on the web really sucks and doesn't at all do what many design want/need. So you may so, oh the design should be more simple to accommodate. Yeah that'll never happen. People who use products want good experiences, your product can no longer really be minimal it needs to be exceptional to get usage. Instead of creating endless reams of articles every year on this subject why don't we just do what apple, windows and Android does and create an sdk that let's you build good experiences without tons of code shipped to a browser. Until that happens you can expect this eco-system to continue.
Again, that's a first...
element.setAttribute(attributeName, value) maybe?
I currently am used that and on the page it updates it but on page reload it just loads the old one back in 
This is actually very helpful. No need to think about keys. I wonder how it evaluates equivalence. 
I meant the class Mao. Const myMap = new Map() 
That's logical, after a page reload everything is resetted.
That's what I'm wondering is there anyway to get around that
Essential I want the same functionality as Reddit's night mode
Learn React. It’ll show you how to properly use JS
Don't really need its abstractions or browser backwards-compatibility any more so I just use `ws` and `WebSocket`.
Save something for to localStorage/cookies/Database and read from it and then apply your css
Boolean(anyValue) creates the Boolean representation of any value. I find it much better readible and less error prone than !!anyValue
it's kind of funny, because the original point of the web browser was that the client could render something however the client wanted to. we've totally perverted the web into what it is now, and i don't necessarily think we're better off for it, all the time. 
Array.reduceRight() is great for composing in certain situations. Used it in an RPG I’m building to apply effects to the players stats. 
What so you mean? Key equivalence or Map equivalence? The answer is the same as for any other equivalence. Primitives are equivalent if they are the same value. Objects are equivalent if they are literally the same object in memory. 
Yea definitely not a first. I’m no spring chicken when it comes to dev.
i think you're suffering from that same thing as when you like buy a red Volvo, so now you start noticing all the red Volvos on the road. 
You’re going to have to post a code snippet on how you’re “printing it” in your html
I think the browser isn't the problem, in the real world websockets often cannot penetrate corporate networks, are blocked at the router level, etc. In these cases your app will simply choke. Maybe this is less of an issue in the US, but in Europe the situation was terrible. There's a lot of outdated infrastructure here still standing. [socket.io](https://socket.io) switches to polling in such cases.
Use nested for loops, in the outer loop make a row, on the inner loop append cells to rows, once the inner loop completes append the rows
Edited
Have you tried JSON.stringify(arr) ?
Okay I’ll give it go thanks 
This worked... Please can you explain the logic behind this? 
Nice trick! Definitely prefer this over !!.
Thanks
How can make each nested array print on a separate line?
And what is your expected output?
Array.prototype.toString vs JSON.stringify is where the difference lies
MJ assignments help is services is the best option to get assignments done in time... they do help by assign a professional teacher to help you to make it done... If you need help in your assignments you can contact them via www.tutors-tuition.com They are also available on WhatsApp I get help with them for my university assignments.. and get to know with my friend about them ..
https://www.w3schools.com/code/tryit.asp?filename=G2LIF1R5FL2J
Didn't exactly create it this week, but I missed showing off before: [a library that allows you to add hooks to any function](https://github.com/michael-klein/hookuspocus) 
It’s really interesting I like it a lot we need as a developer..
Destructuring. let { objA, objB, objC } = allObj; vs. let objA = allObj.objA; let objB = allObj.objB; let objC = allObj.objC;
You can use cookies and set the css programmatically. Angular has ng-class to assist with this react most likely has a prebuilt solution. If you aren’t using a framework, you can still use the vanilla JavaScript templates and a transpiler to accomplish this. 
Hi /u/benthewooolf, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
As far as I know button type submit us the default type of a button, so it can be ommited.
I've been learning JS for 2 months now. I can do some coding challenges and have been slowly increasing the difficulty, are there any specific sites that introduce increasingly harder challenges or rather challenges that incorporate more complex ideas, but don't become totally overwhelming? I obviously would love to learn this stuff, but it seems like gobbledegook currently, then again so did arrays, functions, loops etc a few months ago. 
There is no \`slice\` in your code!?
Fixed
Maps are designed for when you have dynamic keys. It allows you to use keys that aren't strings, and scales a lot better for a large number of keys than an object. For example, if I have an array of names and I want to count how many times each appears: // Assume `names` is some array of strings const nameCounts = new Map(); for (const name of names) { nameCounts.set(name, (nameCounts.get(name) || 0) + 1); } for (const [name, count] of nameCounts) { console.log(name, count); } 
1. /r/LearnJavascript 2. Just try it. `[1, 2, 3, 2, 1, 1].slice(1)` produces `[2, 3, 2, 1, 1]`. Then it iterates through _that_ array; i.e. it gets an `item` from the second array, and its `i`ndex in that array, and compares `item &gt; [1,2,3,2,1,1][i]`. And so, it is comparing each item with the previous one, because, say, `3` is at position `1` in the sliced array and position `1` in the original array is `2`, the previous item. 3. All in all, it's a rather convoluted way to solve the problem. There are better ways no matter how you define _"better"_.
That is common when you don’t understand the syntax being explained..
JS is not like PHP where you have hundreds of reserved keywords and modules and a lot of useful functions are unknown even to experts... JS is relatively small, it's all there for you to see. Any mid to senior level JS dev will know most there is to know about core JS functionality. The real "hidden" gems are in npm modules - it would make more sense to rephrase the question as "What are some of the lesser known, powerful, well maintained, and trustworthy npm modules that make things easier?" (I have added "well maintained, and trustworthy" becase npm)
That is hardly "lesser known" ...
Again, hardly "lesser known" ...
That has been core ES6 functionality for a few years now...
Should be noted for anyone who doesn't know this only copies bool, strings and numbers. Objects will be shallow copied
If you return the promise in actionone, you can wait for it and then call actiontwo: export const actionOne = (value1, value2): ThunkAction =&gt; dispatch =&gt; return axios.post('/api/route', { // return added here params: { then when dispatching: const results = await dispatch( actionone ) dispatch( actiontwo )
Recursion does scale well depending on the branching factor of the recursive problem. We can imagine a recursive problem as a tree, and the stack space will never be more than the height of the tree. Thus our maximum stack space will be O(log_b(n)) where n is the number of recursive calls and b is the branching factor. If your tree grows without bounds, or the height of the tree is more than the maximum call stack length, that's when you run into problems. Otherwise O(log_b(n)) is a very good scaling factor. 
What would be the solution then?¿
Hi /u/odmygod, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I started to realize that the primary benefit of using these popular frameworks is encouraging good programming practices. They enforce an opinionated approach to building web applications, which means developers are less likely to write hacky, poorly planned code structures that could easily derail a project down the road. Their ease of use and built-in features are nice bonuses for productivity. But what makes those things so effective is that they abstract a lot of the patterns that people routinely get wrong when they try to build those same patterns themselves. And they tend to enforce the “single source of truth,” which can be critical in minimizing bugs. Building an event-driven state-management system for a large-scale front-end app is really hard to get right. What’s worse is having to build it from scratch, write the documentation for it, and train new team members to use it appropriately in their code, because nobody outside your organization has seen this precise implementation. The cognitive load can be daunting. Using a popular framework mitigates a lot of that.
I think you are correct. Any string that optionally starts with a + or - and then contains only digits is an integer string.
Also consider Const a = { "two" : 2 } 
But cleverness!
Thanks The strange thing is that I could google the quiz question, and allegedly the company considered as correct the parseInt("a2c").
I see what you mean, but I think it's out of the question's scope. But that's interesting. Looks like everyone has a different interpretation of "representing".
Nice tool but I really can't see any value in this right now, not in the current state &amp;#x200B; I would suggest adding some kind of parent-child hierarchy view in which I can clearly see which components acts as a child and what components act as parents. Styling would also be a must &amp;#x200B; Also, the front image is kinda misleading [https://raw.githubusercontent.com/teamprevue/PreVue/master/src/assets/prevue.png](https://raw.githubusercontent.com/teamprevue/PreVue/master/src/assets/prevue.png) Or I'm not able to obtain the result in the image? &amp;#x200B; &amp;#x200B;
The syntax isn't the issue, the choice of examples is
not sure where the discconect was there, perhaps there should have been a 0x in front of it so it looks like a hex number (also an integer). Without the 0x it is Nan though. parseInt("a2c") NaN parseInt("0xa2c") 2604 
"a2c" is just a random example of mine. could have been anything else. They seem to just have accepted parseInt(String). And now I wonder about hex... fuck
Simplest I can think of would be something like: copy = arr.map(x =&gt; JSON.parse(JSON.stringify(x))) Although not the most efficient and it won’t work with circular references. Otherwise you could look at something like the lodash libraries deep copy function to get an idea from that.
lodash `.cloneDeep`
Maps also preserve insertion order of the key/value pairs that you've added, so they can be used for things like an LRU cache, or really any time you want store some data in a dictionary but also care about the order in which the data was added. 
Hi /u/Linux_is_awesome, this post was removed because your title included a URL. Please use the `submit a new link` option with a descriptive title. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; alert(document.body.parentElement) What do you mean? It outputs `[object HTMLHtmlElement]` as expected.
Is your goal to just demo the game or let people play the full game? 
The game is a very basic text based game on python it's like a quiz based game
[xterm.js](https://xtermjs.org/)
I've come across this but don't understand how to implement would you know any videos that could help? 
I don't know of any videos, but essentially the client piece will stream the shell from the backend server to the browser(client) over websockets (or http if that fails). So the server piece needs to launch a shell process and stream the stdout, stdin, and stderr streams over websocket communication channel to the client. It's complicated. 
https://repl.it
Yes, but my experience with trees is that if you leave users the option to create nested data structures (wrapped by some UI where people can understand it), they will either don't use that at all, or create a much higher depth than I anticipated. You usually don't have defined bounds.
I wanted to play with React Hooks and web sockets, so I made [this demo project: RSVP](https://www.resistorsings.com/rsvp/). It renders data from [meetup.com](https://meetup.com) (comments, photos, and event RSVPs) live as it happens. [Here's the repo](https://github.com/stevengoldberg/rsvp).
Did anyone else find this video a little too similar to the one by fun fun function here https://youtu.be/wfMtDGfHWpA? It seems like almost a complete copy. 
I don't think you want to give them a full terminal... I would use pyramid or django so that you can include your game on the blackened and get input from an input filed pushing output to divs created for each input submission. 
That’s really cool, man. 
It’s most likely assuming the date is 12:00 midnight UTC. When you use new Date() it converts it to your computers local time. So if you’re 8 hours behind UTC, you’ll see this happen between 4pm and midnight. You’ll can add a timestamp to the date to the string to avoid this. Sorry, I’m on my phone so formatting and markdown might be missing but new Date(“2019-04-01”) will see this issue new Date(“2019-04-01T00:00”) will convert to midnight 4/1/19 local time for the user, regardless of time zone I recommend taking a deep dive into dates on mdn. It’s worth it and can save a lot time looking into future bugs https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date
If this works for OP, they could just parse/stringify the array itself, instead of doing it repeatedly in a map.
Now this is talent and hard work. Good job !!!!
Using something like - https://pusher.com
Yes that's it ... nothing else
This is the correct answer. JS Date object is based on UTC. You are passing in what is called a "Date String" instead of a "DateTime String". From the [Date.parse docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#Date_Time_String_Format): &gt;For example, "2011-10-10" (date-only form), "2011-10-10T14:48:00" (date-time form), or "2011-10-10T14:48:00.000+09:00" (date-time form with milliseconds and time zone) can be passed and will be parsed. When the time zone offset is absent, date-only forms are interpreted as a UTC time and date-time forms are interpreted as local time. &gt; &gt;While time zone specifiers are used during date string parsing to interpret the argument, the value returned is always the number of milliseconds between January 1, 1970 00:00:00 UTC and the point in time represented by the argument or NaN. &amp;#x200B; When creating a date you have several options for the input, I prefer working with and storing UTC timestamps (which JS stores in Milliseconds since Epoch). &amp;#x200B; Timezones are one of the hard things (IMO) about programming. &amp;#x200B;
done!
The best thing for you to do is ask. It shows that you with be proactive in clarifying anything that's ambiguous in feature specs that are given to you. Being unsure but carrying on regardless because you're worried what others will think if you ask is a mark of inexperience. Senior developers ask for clarifications all the time. Apart from anything else, for all you know they put a deliberately incorrect answer online for Google to pick up. For what it's worth, I agree with your interpretation and disagree that `"a2c"` is a string representing an integer. 
`JSON.parse(JSON.stringify(arrayOfObjects))`
Array = anotherArray.slice()
Very nice!
Nice, I can totally use this
Thanks, that's what I needed
Awesome! I will most likely use it in my next project
Good point, whoops 😬 
This is awesome The thing I love most about SVG is easy animation. So I always think about it. This made me wonder if it's possible to animate the movement of fingers between chords. I've never seen it, and I know chords don't exactly describe fingerings. But hmmc
Hi /u/dev_singh_kshiti, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
That `slice()` creates a new copy of the array without the first element, and use that with the `every()` method. So if the array is `[1,2,3,4,5]` in the `every()` callback, the element comparison would be like below. slice() original 2 1 3 2 4 3 5 4 
Hi /u/N4f1z, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Very nice! You should link up your GitHub link in the demo
Surely.. Will do.. thanks for the sugeestion :D
Hi /u/N4f1z, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
yes, and what is? Something between Window and body? it is the "document"?
The license says "Copyright (c) 2010 Mohit Muthanna Cheppudira". Did you forget to update it?
Your 'if' statement returns false, so your 'else' statement gets executed. I think you want to use an 'else if' instead of an 'else' with this '==' operator.
Hi /u/siddhi123, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Looks good!
Ya sure.. will do. Thanks
thanks
[https://github.com/ibitcy/eo-locale](https://github.com/ibitcy/eo-locale)
Really cool project! Nice work!
I should probably pay some more attention when posting here sorry, I meant `new [className][0]()` rather than without the `new` keyword. Anyways in PHP I would have used the string, or more specifically `Class::class` which returns a string, in JS I just used the import which I wasn't clear enough about I guess. What puzzles me is that the whole reason I went into this trouble was that this didn't actually work for me: ``` class User {} const classRef = User new classRef() // =&gt; User {} ``` I got rid of all the code around it since but I'd be curious what was the issue. I was passing the variable between classes and I wonder if it may have been an issue with import in the other class.. but then I guess it's not worth spending that much more time on it. If what you're saying works, my problem must have been somewhere else :)
Very nice and useful! I wonder why you went for this 2d array representation for chords though. Why `[[2, 3], [3, 3], [4, 3], [6, 'x']]` instead of i.e. `['-', 3, 3, 3, 'x', '-']` (`'-' could be null or anything else and would read nicely when written in a column)?
Open for enhancement and bug-fixes!
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Never use double equal
How else will he be able to come to a solution?
Excellent! 
it's pretty good. Fast(faster than mysql in my experience), simple(lets you run a javascript http server inside of the database) and easy(it has a built in gui). Whatever your using, it's worth a shot.
- 12kb of CSS - 40kb of JS - 80kb of fonts This is pretty resource heavy for what it is/does. Might be interesting to try and generate only what the site needs, instead of grabbing libraries and throwing them at the problem. Max I'd say this is a 10kb site - (1-2kb CSS, 2-4kb SVG, 1kb JS). 
I do not see why it would be impossible, so I would say go for it.
1st: There is NO ERROR at all in your message. 2nd: You need to review your logic since this is obviously wrong: IF (equalNumbers) log("identical") ELSE log("numbers are equal") &amp;#x200B;
Hi /u/lokendra15, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Nothing wrong with your codes. Anything that is not 'TRUE' will throw your else statement.
I’m assuming you need 2 values, fret, and string. I’d actually say having a third value in there (finger) might be a good idea. 
/r/iamverysmart
I'm guessing because of barre chords where you don't need to specify all six strings. E.g. F major could be something like: `{ chord: [[5, 3], [4, 3], [3, 2]], bars: { fromString: 6, toString: 1, fret: 1 } }` &amp;#x200B;
Yes, many of the features people are mentioning here have been in the ES spec for a while. But the question isn't asking specifically about new features, just useful ones... 
Objects aren't shallow copied, its the array that is shallow copied. All its elements remain the same. anotherArray = [{}, {}, {}] array = [...anotherArray] array[0] === anotherArray[0] // true
This also maintains species class CustomArray extends Array {} myArray = new CustomArray(); [...myArray] instanceof CustomArray; // false myArray.slice() instanceof CustomArray; // true
Labels aren't very well known outerLoop: for (let rows of tiles) { for (let tile of rows) { if (tile === findTile) { found = true; break outerLoop; // breaks to label (both loops) } } }
4u
Good morning! Wasn't expecting this to blow up :-)
Shucks :-)
That's really interesting. It's definitely doable, and I think an interesting problem would be automatically deriving fingerings.
Yeah, I agree that there's an easier way to write this out, however this was intentional. I have a higher level helper function in the works to write chords out easier. Something like: draw(sel, 'name:Am7:open') // open string variation of Am7 draw(sel, 'name:Am7:barre5') // barre chord in position 5 draw(sel, 'chord:-o222xx') // custom 
Yeah -- old project, newly revived.
Sure.. will compress and minimize resource usage.. didn't consider the size while releasing..
This is awesome. I’m actually working on a markdown-inspired tablature converter that takes a text tab and converts it to something nicely formatted, and this is perfect.
That's the way I prefer now, array.slice() doesn't look idiomatic to me. I've made a meaningless benchmark for the different ways to copy an array, 1M arrays of integer, random length, Node v11.12. The results (in ms) are: slice 551.3200989961624 slice(0) 566.1180011034012 ...spread 1428.5430999994278 copy fori 407.3138999938965 Array.from 7241.78679895401 So either way is good in terms of performance, maybe except Array.from, so I'd just use the cleaner way. 
Not exactly correct - objects as properties of objects or arrays containing objects or arrays, those deeper objects or arrays are shallow copied. e.g. [https://jsbin.com/tehicovose/1/edit?js,console](https://jsbin.com/tehicovose/1/edit?js,console) 
That's great -- maybe you can render it into [VexTab](http://vexflow.com/vextab/index.html) (it's my other baby.)
Throwing in my first ever NodeJS project. https://github.com/sggts04/thanosapi Express API which returns thanos quotes.
How do you get those sexy browser screenshots?
Not really showoff since this is my first node project https://github.com/sggts04/thanosapi An Express API which returns Thanos quotes
Yes but this is well known stuff, this is not r/learnjavascript...
No, _you_ are very dumb. This should be well known stuff, this is not r/learnjavascript
Here's a sneak peek of /r/learnjavascript using the [top posts](https://np.reddit.com/r/learnjavascript/top/?sort=top&amp;t=year) of the year! \#1: [All JavaScript concepts you should know in one single repository](https://github.com/leonardomso/33-js-concepts) | [22 comments](https://np.reddit.com/r/learnjavascript/comments/a17g4t/all_javascript_concepts_you_should_know_in_one/) \#2: [Microsoft has open sourced their Frontend Bootcamp training materials (including React and Redux exercises)](https://github.com/Microsoft/frontend-bootcamp) | [8 comments](https://np.reddit.com/r/learnjavascript/comments/auw1el/microsoft_has_open_sourced_their_frontend/) \#3: [To everyone currently enrolled at a college: don't forget to get your Github student developer pack. It contains a free domain name, digital ocean credit and much more.](https://education.github.com/pack) | [13 comments](https://np.reddit.com/r/learnjavascript/comments/8b81be/to_everyone_currently_enrolled_at_a_college_dont/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
...nor useful ;-P 
Most well know use case for generators is for iterating over lists of data that either wouldn't all fit in memory at once or are expensive to create. So the generator creates/loads the first list item and returns it, and then does nothing until the program actually asks for the second item, and so on. A concrete example, say your REST API returns paginated results 10 at a time; you could write a generator that returns the results one by one, calling the API every 10 results for the next page. The pagination is abstracted away and the rest of the program just treats the results as if they are a normal iterable. They're nice for managing long running processes too. Say you have a list of objects which need to be processed; instead of looping through them all at once, you can have a generator process one item at a time and return the list of completed and pending items. That way you can display a progress bar, process at intervals to keep the UI thread responsive, and even serialise and save the partially completed list and resume processing at another time.
Column way? Can you show what that means using your example please.
So an array of arrays, and each array is sorted? Do the arrays need to be in any order in relation to each other?
Oh, I see. You want each corresponding index of each array to sort.
You can just loop through the index numbers of a sub-array. For each of those, loop through the sub-arrays and check that index's item. If it's lower than the previous value, return false.
How can I do this?
Nested for loops. Do you want me to code the whole thing, or do you have more specific questions?
Code the whole thing
If you want to write JavaScript code, you should probably learn how to code in JavaScript. You won't learn anything if you just get poor saps like me to do work for you for free, right? What have you tried? Why do you need to do this? Why are you asking other people to code things for you?
Wait, it this homework? Well, you should really try it yourself. I’d look into iterating over each index in the first array. Reduce each column into true/false by &amp;&amp; that each matching index value is greater than the last. Finally reducing all column results by a similar &amp;&amp;.
You could use [RAF](https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame) to draw a row per frame, or batch a few together depending on the load. You will have to adjust your logic to continue where you left off on the next frame, of course.
Hello fellow Waterloo-ian! Looks cool! Any plans for a higher-level interface, like \`vexchords.drawChord('a♭')\`?
Hell yea bro 
I don't think you need to derive them. Many static chord charts notate which finger goes in which position. Include it in your dataset and concentrate on natural feeling movements between. 
This sounds like a school assignment 
Heres an article on this: Using generators to visualize the mandelbrot set http://elliot.website/a/?Visualizing%20Process%20with%20ES6%20Generators
Hi /u/neerajdana, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/PearllyO, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/N4f1z, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/knazim667, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/davelipus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/felix090915, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/PearllyO, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/PearllyO, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/bern4444, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Jackw1788, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/superstring-man, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/theQuirkyTurtl3, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/powerpuffboi98, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/gunberger, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/joWebDev, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dirtyring, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/bigchungusmode96, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
This is freaking amazing
Can you expand on this?
Cool glad I looked in the comments before suggesting a wrapper that maps named chords to the chord array.
Really nice. Not really related, I’ve been looking for a simple app to display chords and lyrics, without all the bloat of the major sites and that lets me add my own songs. Has anyone come across anything like that?
It points to the root `&lt;html&gt;` element.
❓❔
Hi /u/frontnetcoin, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hah. Obscure utilities are my jam. Here are a few off the top of my head: Dedupe array: const deduped = [...new Set(['a', 'b', 'a'])] // ['a', 'b'] toJSON override: const user = { first: 'John', last: 'Doe', toJSON() { return this.first + ' ' + this.last }, } JSON.stringify({user}) // '{user: "John Doe"}' Private/protected/friend fields: const secrets = new WeakMap() export class Foo { constructor(secret) { secrets.set(this, secret) } doSomethingWithSecret() { foo(secrets.get(this)) } } Named capture groups: const version = '1.2.3' const {major, minor, patch} = version.match(/(?&lt;major&gt;\d+)\.(?&lt;minor&gt;\d+)\.(?&lt;patch&gt;\d+)/).groups console.log({major, minor, patch}) // {major: 1, minor: 2, patch: 3} Sort list of strings alphabetically: ['b', 'a', 'c'].sort((a, b) =&gt; a.localeCompare(b)) // ['a', 'b', 'c'] Sparse spread: // if process.argv is ['node', 'index.js', 'dev', '--watch'], command is `dev` and args is `['--watch']` const [,, command, ...args] = process.argv Default fall-through: // defaults to T_FOO function getType(id) { switch (id) { default: case 'foo': return T_FOO; case 'bar': return T_BAR; } } getType('meh') // T_FOO 
I have been facing similar problem with their CDN. But I'm not sure if it is a CDN problem or my device problem. The CDN takes a lot of time to deliver on some Computers but works just fine on others. I'm not sure why it happens. If it's the same problem and if you find a solution please let me know.
I imagine [`classList.replace()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/classList) would work better for that last bit
Maybe provide an actual link?
I made [something similar](http://dumbmatter.com/csv-sql-live/). Yours looks awesome and has a lot more features, but one thing it's missing (unless I missed it!) is the ability to load multiple files and do joins. The amount of time non-programmers waste manually doing joins row by row when working with tabular data is crazy, I think that's the most important thing a tool like this could do for them.
Hi buddy , I'm still facing the problem with the CDN . Actually I'm working on django project and I solved it with installing the library locally on my machine ,
Hello! :-) Yes, for sure, take a look at my comment up thread about exactly that.
Because it's true it means it's the same value and not a copy. The array comparison, for example, is false because they're different array objects. They have the same elements, but are not the same arrays because otherArr was made as a copy of arr. The objects in the arrays are the same objects - object in otherArr is not a copy of the original. So the object is not copied (shallow or otherwise), only the array.
You can just pass it in your tsconfig can't you? 
Sorry i dont know what happened here is the article link: [https://frontnet.eu/babel-js-7-4-comes-with-upgrades-typescript-3-4-core-js-3-and-more/](https://frontnet.eu/babel-js-7-4-comes-with-upgrades-typescript-3-4-core-js-3-and-more/)
Hi /u/noubarhanno, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I wish Microsoft had better SVG support. Not that I or anyone I know actually uses the Edge browser, but still. I know it's not your fault though. :p
What ?
Or just learn to write good, discrete, server-side endpoints, and not bloat your client-side with weird queries.
I don't get what you are trying to achieve. Neither your example nor the code makes any sense. How can you get character 54 from that short string? The test in the if statement is not valid syntax. I don't think posting homework is generally accepted, if that is what this is. Think about how you would solve the problem by hand, then code that procedure
A few logistical things. This would be better posted in r/learningjavascript and you should use the code formatting and proper indentation so it's readable. On mobile, your code is being squished into one line. Consider writing your code in a Codepen so you can easily share it. &amp;#x200B; 1) Don't use `new` as a function name, that's a reserved keyword 2) &gt;example: "abcdxyz,54,6" return "cdxy" I don't understand why a start index of 54 and an end index of 6 would return 'cdxy'. The substring 'cdxy' would be index 2 to index 5. 3) if (indexEnd&gt;=i&gt;=indexStart){ This isn't a valid condition (can't compare 3 things at a time), but you don't need this comparison either because it's taken care of by the `for` loop. You should read up on how a [for loop works](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for). 4) else if (i&gt;indexEnd){ break; } Same here, you don't need it because of how `for` loops work.
Unpopular opinion, but I dislike the shorthand Type[], in the context of other types it an arbitrary syntax, and adding readonly to it inline only exacerbates that. If you were to detructure that arr variable, then good luck to any juniors understanding that 😂 
Don't spend a lot of time thinking or debating about this. It really doesn't matter if it's create or createUser. Either way the meaning is understood and is semantic so you're fine. You've got better things to do and more difficult decisions to make. Pick one and move on. That said I'm a big fan of the shorter names like "create" in this scenario. It's semantic due to being attached to some user based object, and is scoped to the object so you don't need to worry about naming conflicts. 
Can't read it because medium has paywalled it. Urgh. I'm pretty tired of how aggressive medium has become. I'm not paying £5 a month to read a bunch of PR and advertising 'content'.
Great, thanks! I didn't get that from the guidelines
It was a really cursory article. Any reason I would want to use this?
Use MobX (https://github.com/mobxjs/mobx) 
Sure, if you are made of time and money and exist in middle management bubbles
I wouldn't use the word model for a model as these (I assume) are your core business logic. So userController.createUser is fine (you are not creating a controller you are creating a user) whereas simplifying the model to user yields user.create which makes way more sense. Now whether you delegate from userController or end up with a more cross cutting model doesn't matter. From a unit test point of view it's even nicer.
[https://milligram.io/](https://milligram.io/) is pretty good for minimal static sites
Are these middle management bubbles the think tanks required to crack the riddle of a set of discrete endpoints that return predefined models? The concept of sensible nouns that you can verb on comes very naturally if you decompose the functionality into overlapping concepts. Which, if you have any sort of long term plans, is crucial. It's like a literacy that helps you write the application with ingrained organization. Dispensing with it all is giving into stream of consciousness programming, which just becomes spaghetti code. When you get there, you absolutely better be made of time and money, because development productivity devolves into pure churn.
Sweet
Very cool. Great work. It would be extra cool if the chords weren’t in the sideways layout that’s become so popular. Is it possible to have them in the easier rotated layout?
Nice.
Would it be fair to say this library is more of a localization focus than internationalization one? For example, how does it handle the issues raised here about pluralization of numbers in sentences? https://metacpan.org/pod/Locale::Maketext::TPJ13 On the dates side, how does this compare to libraries like date-fns, Luxon, or even `Intl.DateTimeFormat`? On the number side, how does it functionally differ from `Number.prototype.toLocaleString()`?
This is really great, well done!
All predictions are 0. iPhone8 
Thank you for your questions. &amp;#x200B; 1) It is ok with pluralization, see example [https://github.com/ibitcy/eo-locale#plural](https://github.com/ibitcy/eo-locale#plural) 2) No difference with Intl.DateTimeFormat, you can pass all props into component [EOLocale.Date](https://EOLocale.Date) 3) EOLocale.Number component uses all options of Intl.NumberFormat &amp;#x200B; Library provides easy way to save current language in context, format icu messages and use all abilities of Intl object.
Please feel free to open issue and offer suggestions for missing features 
Feel free to take a look at the source code: [https://github.com/jhonnyrogerb/angular-podcast-app](https://github.com/jhonnyrogerb/angular-podcast-app) Demo: [https://angular-podcast-app.firebaseapp.com/#/podcast/home](https://angular-podcast-app.firebaseapp.com/#/podcast/home)
Their code examples use decorators, but is decorator syntax standard JS yet? 
You need to remember that javascript is single threaded, in that only one thing can happen at a time. So looking at your sleep function, you have it looping over and over until the number of milliseconds has passed. While it's doing that - nothing else can be processed. Javascript is event based which means that if you need to wait for some type of event to happen, you listen for that event and tell it to run a function of your choosing when it gets triggered. In your case, you need to listen for when the sound has finished, and then set a timer to start it again. Something like... ~~~javascript sound.addEventListener('ended', function() { setTimeout(function() { sound.play(); }, 1000); }); ~~~
so now I have it loop forever not just 5 times with beep(5) The delay is working thanks to that setTimeout method though function beep(times) { for (i = 0; i &lt; times; i++) { const sound = new Audio("data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU="); sound.play(); sound.addEventListener('ended', function() { setTimeout(function() { sound.play(); }, 1000); }); } }
 No worries, I figured it out! Thanks for pointing me in the right direction i think i need to read more about eventlisteners function beep(times) { const sound = new Audio("data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU="); sound.play(); i = 1 sound.addEventListener('ended', function() { if (i &lt; times) { setTimeout(function() { sound.play(); }, 10); i++ } }); } 
In a setInterval "loop", check how much time elapsed. Play the sample if it's time to play it. You can adjust the delay to prevent drift. https://jsfiddle.net/dwy5xjbv/ (If it's late for more than an entire second, those beeps are skipped.) The Web Audio API can do this sort of thing more accurately. However, that API is quite difficult to use.
Hi /u/reverentgeek, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thank you for your answer. Obviously there are other stuff to think about. But as you know, good naming is very important and it's "the hardest thing in programming".
Thanks for sharing your opinion. But if we follow you logic, userModel.create would mean "create the model" too, wouldn't it? But it's not named factory so it seems obvious what is being created to me. 
I noticed this too. I was surprised to see a mistake like this on A List Apart. I guess that speaks to how high quality the posts usually are.
Occasionally some of the articles are good. I just throw the URL into an incognito window if it’s something I really want to read. I know that’s not good, but it’s better than paying a subscription for mediocre content.
Hi /u/genuine_smiles, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yes, but in fact \`usm-redux\` is still running with Redux, it's still immutable mode.
Awesome! I just started guitar and this would be useful for documenting stuff in my blog.
This occurs because you are only yielding one iteration. Proper engine implementations of generators, note: not use of, will return an object with a keys: value, and done. When. You initialize your generator with main(), none of the generator code is actually executed In your first next() the generator code is run and it will return {value:"hello world!", done:true} The second call to next() throws an exception because the generator has completed execution.
Also, the call to it.next(42) passes 42 as the return value of the yield in the generator. There is no target (left hand side) to assign the value of 42.
I dont follow what you are saying. The error it is giving is a TypeError: "TypeError: x.toLowerCase is not a function" . The 42 is being passed into the X variable. If I change it from 42 to "42", the error goes away and it returns: =&gt; { value: '42', done: false }
You are forgetting the basics of generator. A generator is a function whose execution can be stopped and resumed at any time. Let me walk you through the execution process in your example. When you do [`it.next`](https://it.next)`()` first time, it goes inside the main function and finds first yield which is `yield "Hello World"`. If you remember the way statements are executed it goes through right to left. So, when you yield you returned *"Hello World" .* Since generators stop execution when they find yield, main function pauses the execution process which means the yield hasn't returned anything to x yet ( assignment process is still pending ) and only the right side has been evaluated right now. Now when you do [`it.next`](https://it.next)`(42)` it will continue the execution process from where it stopped last, i.e just before assignment to x. Since you passed 42 as the parameter. x will now be 42, which is the reason you are getting exception during next yield. Hope that answers your question. One thing to remember is yield is not supposed to return value for assignment within that statement. It returns value to the [`iterator.next`](https://iterator.next)`()` call. Here is a example that might help you understand it better. function *main() { console.log(yield); // Hello World console.log(yield); // Hello Again } let it = main(); it.next() // value: undefined it.next('Hello World') // value: undefined it.next('Hello Again') // value: undefined Here when you first call [`it.next`](https://it.next)`()` it doesn't return anything so you get undefined as the result, but the console.log isn't executed yet because the execution is already stopped. But when you call [`it.next`](https://it.next)`()` again the execution resumes and it takes the argument you provided.
`yield` both gives and takes. In your example, it gives "Hello World" back to the caller of the first `next` and in return, it takes the value that was passed into the next `next`. The value passed into that `next` is then returned from the yield expression. In that respect you can see it as a function with a return value var x = yield("Hello World") // &lt;- pass in one value, returns another value Here, the value returned by the yield is `42`. That gets assigned to `x`. Then, when `x.toLowerCase()` is called later, an error occurs because that is not a method of Number, its a method of String.
I have it in my tsconfig but it doesn't seem to change anything speed-wise. At least not with ATL.
Of course, but at the moment decorators is already in Tc39/proposals Stage 2, and Babel is widely used, so there should be no problem with that.
One analogy is that `yield` is a reverse function call. So when you write `var x = foo("Hello World");` `x` does not get assigned `"Hello World"`; rather `"Hello World"` is assigned to the first parameter of the function and `x` is assigned the functions return value. Similarly, in `var x = yield "Hello World";'` `x` does not get assigned `"Hello World"` and instead `"Hello World"` become the return value of a call to `next()` and `x` is assigned the input from another call to `next()`.
Hi /u/-TURBOMAN-, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/kramit, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/NamTheBoy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Dorothy109zxy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SuspiciousCompote6, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MongeredRue, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dumildekok, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Buzut, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jhonnyrogerb, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/alexmesro, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Actual actual link: https://babeljs.io/blog/2019/03/19/7.4.0
I don't think this was "asking for help". I was rather asking for opinions because naming is a tough thing… But alright, that's your take.
I think it's less important for the model than the controller but creating a model doesn't necessarily persist. Again just imo that's why the domain models should be called what they are and not models e.g. user.create has different connotations to me than userModel.create. one creates a user the other creates a user model.
Here are some alternates &amp;#x200B; [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/eval#Do\_not\_ever\_use\_eval!](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#Do_not_ever_use_eval!)
split the string and get the components. If is not a number not a math operation symbol, must be an variable. Look for that variable on your input object, if it's there, do your calculations and return new object. Regex is your friend
 [https://www.dailymotion.com/video/x4ie1c7](https://www.dailymotion.com/video/x4ie1c7) &amp;#x200B;
From what I've read, if your site has inline CSS in the HTML and you have some unescaped user content which lets the attacker write inline CSS then they can use the `background-image: url()` style to load content and scripts from a remote source which get executed in the same context as your site. Not allowing unsafe inline styling in the CSP can prevent this. But it's pretty useless if you need to turn it off because the framework needs to do inline styles.
https://www.codeproject.com/articles/12116/javascript-mathematical-expression-evaluator
I have written a lexer and i am able to do that, so do i need a full fledged parser also? Or can it be done without such complicated solutions?
I agree with you on the domain models naming. Again, for the sake of consistency, I'd do the same for controllers. As both models and controllers are normally in directory of their own. Nevertheless, I decided a long time ago to always name them after what they are AND implement because in editors, the whole path is not always obvious and thus, it makes it harder to know what a file is at a glance (again, that's a matter of opinion). I really appreciate you shared your PoV.
It can get as complex as you want. Are you gonna deal with 3 variables only? Just add, sub, multiply and division? Are you expecting floating numbers? For the example you gave some simple string manipulations would do, I guess. If you want to take an academic approach you could take a look at context free grammar.
It can get as complex as you want. Are you gonna deal with 3 variables only? Just add, sub, multiply and division? Are you expecting floating numbers? For the example you gave some simple string manipulations would do, I guess. If you want to take an academic approach you could take a look at context free grammar. https://www.google.com/search?q=context+free+grammar&amp;oq=context+free+grammar&amp;aqs=chrome..69i57.4679j0j7&amp;client=ms-android-xiaomi-rev2&amp;sourceid=chrome-mobile&amp;ie=UTF-8#imgrc=8tVEa_xypqPtbM:
I have gone through all those and it was getting quite complicated. So was hoping to go for another approach which doesn’t involves writing your own parser. Thanks
As a quick hack: do a basic check on the string to see if it's a valid equation with regex, like: a number followed by *,+,-/ followed by a number or single letter... Then use eval
If you can sanitize input to make sure nothing wrong will happen, then, probably, eval still may be of help for you.
I've been using this babel macro lately and have found it to be super handy, especially for mapping/filtering values etc. From the readme: import it from 'param.macro' const people = [ { name: 'Jeff' }, { name: 'Karen' }, { name: 'Genevieve' } ] people.map(it.name) So it turns `people.map(it.name) ` to `people.map(person =&gt; person.name) `
Nice! A showcase website would have been nice tho.
You sure it's not serotonin?
&gt;Styled-comp Tested on iPhone 7 and it works :s Do you have some information to share about the issue you are facing? Is it possible to test on other devices? &amp;#x200B;
That's only for specific open source projects, hence the reason you have to apply.
tested on mbp, works fine on chrome. mobile safari iphone8 wasn't working. 
https://imgur.com/a/bj68p0u/ looks like it’s cropping properly etc but the value isn’t updating. Is it just how you’re parsing the answer? Tested mobile safari and mobile chrome and both same issue. 
What makes you think people even want to use decorators?
I experience a rush of melatonine when I completed anything. 
I think it looks cool
no demo? images? something?
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
&gt; the soon-to-be-keyword 'self' Where can we read more about this. I can't find anything concrete right now.
Done, thanks!
Not totally new - you will find this popping up time to time. Programming books have lost their charm - the pace of changes in today's world, practical learning offered (many times for free) on the Internet, the changed (friendly ) nature of documentation and many others contribute towards that decline. Don't quite see a lot of affiliate linking here- that was a surprise.
Was curious for this aswell..
*"Your scientists were so concerned with whether or not they could... they didn't stop to think if they should"*
this.
Actually been looking for something like this, will try it out. Great work!
Wrap it in span and give it `white-space: nowrap;`
There are various `self`s. None of them is a keyword or is expected to be one. The linked repo is, by the way, _empty_, which makes posting it here both premature and somewhat silly. In any case... There's [Window.self](https://html.spec.whatwg.org/multipage/window-object.html#dom-self), or just `self`, which simply "returns the window itself, as a `WindowProxy`". There's also the `self` in the `WorkerGlobalScope`, which workers can use to get a reference to the `WorkerGlobalScope` itself. These are already there; they exist already as object names -not keywords-. Finally, there is a _somewhat related_ proposal to standardize the name of the [global object](https://github.com/tc39/proposal-global). One of the names considered was indeed `self`, but right now it seems extremely unlikely that will be the chosen option, since they decided to go with `globalThis` *sigh*.
why use this instead of jQuery?
This is just a remake, just want to show to others :-)
In case of debug, you case use &lt;pre&gt;&lt;/pre&gt; entity to lock the formatted string you want to show. '\\n' and '\\t' are available for example.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/webdev] [I'd like to display a string with location, date &amp; time (of a pre-set timezone)](https://www.reddit.com/r/webdev/comments/b80jzj/id_like_to_display_a_string_with_location_date/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I daresay its an April fools joke. 
“Joke”
You could check the input with a regex to ensure it only includes numbers \[0-9\], mathematical operators \[+-/\*)(\] and probably spaces. That should reduce the attack surface greatly. DDos with really big numbers is probably still possible. Is this code running server side? If its client side, this probably isn't an issue. I once read somewhere that the original JSON parser also used eval and just checked the input with regex. So I guess this could work here as well. 
I’m not 100% sure / can’t check right now, but moment.js can probably do this for you.
eeem... it's a blog using issues to create entries? it's quite strange.
``` window.onload = function(){ $(p).text("Hello"); }; ``` What is `p` here? Should this have been a string `'p'`? It's also not really clear to me what problem this library solves.
Use a library tis the JavaScript way *warning: installing one package may come with 184,064 more packages*
If you've written a lexer, you can write a parser.
I would add that we should run a very restrictive linter on the expression to make sure we only run the things we want to run. 
The only reason I can find why you may want to use Babel with TypeScript is for some of Babel's minifying related plugins. Beyond that I just don't see the point in mixing TypeScript and Babel. If you try to add new syntax to your code via Babel plugins then you can't push the code through TS to type check it. So what is the point? 
When building a web app you may make use of a number of Babel plugins, for instance to handle asset imports such as images. Babel is a powerful ecosystem with a plugin for just about everything, and TypeScript is a powerful type system that allows you enforce contracts with less effort and provides a really great editor experience. &amp;#x200B; &gt;If you try to add new syntax to your code via Babel plugins then you can't push the code through TS to type check it. &amp;#x200B; Remember that if you're writing TypeScript then you are writing TypeScript not JavaScript, so you should really only be using TypeScript language features. I wouldn't expect the TypeScript compiler to understand none TypeScript syntax.
Just because we can transpile it doesn't mean we should if it uses a syntax that isn't finalized in the language yet.
&gt; Remember that if you're writing TypeScript then you are writing TypeScript not JavaScript, so you should really only be using TypeScript language features. That's true and also the reason why I posted. Not being able to extend the syntax seems to limit the appeal of Babel. I can see how asset import related plugins would also count as a reason for wanting TS+Babel though. 
People still use Jekyll?
Its a perfectly valid point 🙂 Whilst TypeScript moves quickly, Babel support for new language features is part of the TC39 spec process so Babel gets support for newly proposed language features \*very\* quickly. Luckily TypeScript is committed to adopting all new JS language features 🎉 
I didn't think either of those could be made less enjoyable, then you combined them, and added emojii to the commit statements...
I did not know that it removed the event listener. I'll look into it now, thanks
I'm not sure why you would need a function like that but regex and a lot of headaches trying to make the right regex combo would be your best bet :P 
More than nice, pretty much required. Show me why I should look at your code, don't expect me to start there.
Wow. That is TIL!
Can you describe an example of when you’d use this?
I'm struggling to think of one too. Usually event relationships are always true, I always want the button to register a click event.
maybe add "user-select:none" to the text. that way when you click rapidly to change colors you don't select the text! nice job
Load gallery data on first click. Have a once-off "do you want cookies" dialog, or an ad panel or some such. It happens.
Suppose you have some kind of popup element that you want to close by clicking anywhere. When the popup appears, you could register a listener on the body using "once" and it will only fire one time to close the popup and then deregister. It makes sense to deregister this listener after the popup closes since it is no longer valid.
Good to know. I've used the jQuery .once() function in the past but native is better.
There are lots of ways it could be very handy. Especially in web apps. One of them: there are a few directly related events. When fired you might want to add another event listener that only fires once. mousedown + mouseup, mouseover + mouseout, focus + blur, Keydown + keyup etc.. 
I haven't used the native implementation of this, but I've used the similar methods of jQuery and Backbone events over the years. One example is if you have a modal dialog and you want to close it when the user clicks outside it, so you add a click once event handler to the body itself - you definitely don't want an event handler at that level to remain indefinitely, and it's simpler than manually removing the event listener. There can be a lot of cases when you only want to listen to an event a single time.
Hi /u/NorthAstronaut, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/inzntbh, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/satnam_sandhu, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
He just needs to switch statements. BTW triple equal.
Hi /u/micheleriva, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
This is a discussion of a newer feature of JavaScript I was not asking for help. 
Hi /u/arddeth, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
It's not a new idea, it's [been around since jQuery 1.1](http://api.jquery.com/one/) which was released on 1/14/2007. Any discussion about its utility is a decade late.
That's a separate framework, this is javascript. It is new in the language. If you want to talk about jquery maybe you should head on over to /r/jquery
&gt; It's not a new idea 
Nice idea! 
Are you the enforcer of subreddit rules or your personal opinions? There is actually not a huge amount of *recent* discussion on this, since it has only been widely adopted fairly recently. Please restore this post, I want to discuss a new feature of Javascript with my fellow developers. 
Stop wasting my time, come back in a few days.
What’s against jekyll for lightweight low complexity static pages. I’ve been using it for all my projects in the past year and I’m having a ball.
I don't find Gatsby or CRA to be too complex to spin something up quickly. I'd be against using Jekyll because it's a second language, and it doesn't leverage my other knowledge. The one benefit of Jekyll, if you're a hobbyist, is that it has a big theme market, so you can find lots of premade sites for free or cheap.
This is pretty rad, thanks for sharing!
Thank you. That's great. The Maths definitions are awesome! &amp;#x200B; The angle calculation is not clean, because I likely got the math wrong somewhere. What I tried to do: 1. Turn ball direction by 180°. 2. Determine a range of 90° based on the direction of the ball. I use a linear function to determine that range with three important points. The steepest angles measured between the player panel and the ball direction should be 10° or respectively 170°. If the ball comes with a 90° angle, it should also go with a 90° angle. 3. Pick a degree from that range based on where the ball hit the panel. I also use a linear function for that. &amp;#x200B; Reasons for not having an accurate reflection algorithm: * The algorithm was designed for the player panel and flipping some signs unexpectedly made it also work for the AI panel. * While creating the algorithm I measured the angle from the panel to the ball's direction in a clockwise fashion. The algorithm rotates the in and out angle for this reason by 90°. It would have been easier, more space efficient and cleaner to directly design the algorithm with the angle you get from atan\_2(ball\_direction\_vector). * I do not input the actual spot where the ball hits the panel into the function, but the position from one frame before that. I guess that that causes the possibility for angles below 10° and above 170°. If the previous position was next to the panel and not on it, the linear function will deliver values outside of the 90° range. * I had a mess on the papers on which I designed the algorithm. * Rounding errors.
Hey, jistjoalal refactored the code with explaining comments and posted a \[jsfiddle\]([https://www.reddit.com/r/javascript/comments/b5geoa/pong\_in\_22\_lines\_of\_js/ejej50e?utm\_source=share&amp;utm\_medium=web2x](https://www.reddit.com/r/javascript/comments/b5geoa/pong_in_22_lines_of_js/ejej50e?utm_source=share&amp;utm_medium=web2x)). I also \[tried to explain\]([https://www.reddit.com/r/javascript/comments/b5geoa/pong\_in\_22\_lines\_of\_js/ejvlsgu?utm\_source=share&amp;utm\_medium=web2x](https://www.reddit.com/r/javascript/comments/b5geoa/pong_in_22_lines_of_js/ejvlsgu?utm_source=share&amp;utm_medium=web2x)) my abonimation of a reflection algorithm, which he couldn't figure out.
I wondered about that, too. I think characters would be a good indicator. Lines don't really tell you anything, because you could put everything into a single line.
Assuming it's your library: it would be very useful to see a **comparison** section in the readme against other popular choices like react-i18next, react-intl, etc. That is almost always what I look for first when evaluating a new library for an old problem.
Thank you! jistjoala did a "(somewhat) readable" version. [link to his comment](https://www.reddit.com/r/javascript/comments/b5geoa/pong_in_22_lines_of_js/ejej50e?utm_source=share&amp;utm_medium=web2x)
I use it because github has integration with it. Also, "people still use X" is a silly question, because of course people still use it. There's nothing wrong with it.
Goodnight!
yea you can swap libraries during buildtime. Don't have the link on webpack doc tho bc I'm on mobile. I can point you in the right direction if you want!
Thanks. I realize I should have said "Can't you use....". 
&gt;Assuming it's your library: it would be very useful to see a comparison section in the readme against other popular choices like react-i18next, react-intl, etc. That is almost always what I look for first when evaluating a new library for an old problem. Good point. I will do it.
ah okay
I still use for my blog, though considering a move to Gatsby mainly because I don't want to deal with gems and Ruby.
Oohhhh, I think I was tired! I got it, no the file names, but the vars. And yes I couldn't agree more. For the model \`user\` is what it \*\*is\*\* whereas the userController does not represent a user, it handles or controls the interactions with said user.
Could you tell the iOS version of your iphone 8? I will try to reproduce your environment.