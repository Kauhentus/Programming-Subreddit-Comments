Thah, I've been messing around with vexflow for a personal project of mine and here you are with a much easier solution!
Awesome, any idea why a few of these busts it? http://www.lotro-abc.com/
Hi u/infocamblog, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/Herr-Commander, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Sadly not seeing the removal of private class variables. TC39 should just implement ECMAScript 4.0 and be done with it.
Interesting. I wonder what would be the end result that you would be going for. It shouldn't be too difficult to extract a 3x3 grid around the said pixel and find a character to fit the context, if we know what is it that we want.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
You‚Äôre right, forgot to add MIT... in the next release then...
There is always a smart arse that brings up destructuring... var a = { b: { c: { j: 2 }}}; var a2 = { b: { c: { d: 2 }}}; var a3 = { b: { e: { f: 'fuck you' }}}; var {b:{c:{d}}} = a; console.log(d); // undefined var {b:{c:{d}}} = a2; console.log(d); // 2 var {b:{c:{d}}} = a3; Uncaught TypeError: Cannot destructure property `d` of 'undefined' go away
What's the issue with private class variables?
Quite the opposite - people use those proposal well before they are standardised. Spread operator for objects, for example
It is using a very ugly \#syntax to do the same job that "private" achieved in Flash and ES4.
Ugly... who cares? It's short and does the job, good enough for me
It was solved 10 years ago, it's a very clean "private" keyword and doesn't have extra syntax. Sure, you're brutally focussed on something you can work with, but at some point, when does a sequence of fuck up after fuck up lead to something that can't be worked with? The entirety of Computer Science is based on abstractions that fit within the human mind. Maybe you're smarter and can hold more in your mind, but the people you're working with can't do that. Your users can't do that. Your customers and sales targets can't do that.
What's more annoying that clickbaity articles with no content? Cynical sods constantly whinging about clickbait, without even reading the flipping article üôÑ In fact it's a legit post by someone who has released a design system based on vue. I have no use for it myself, but I don't see the point in all the negativity
Are you high?
Yeah, who needs speed on the internet üôÑ
Yeah cuz the 3 most popular frameworks are waaasy too slow. Gimme a break...
You mean like VueJS? I can never understand why python devs put so much energy into dissing JS...
I actually thought you might be a brusque PM rapidly sorting through deliverables, so yeah, I'm high enough to have thought you could have been more than you are.
&gt; always irritating Then stop doing that. Seriously, why are people writing so much code with deeply nested null checks?
What?
# You mean like VueJS? # I can never understand why python devs put so much energy into dissing JS...
So we are limited to the what the most popular frameworks can offer? We are not allowed to do even better? Do me a fucking favour...
Why am I a Python dev? I probably write more JS/TS in a week than you do.
LOL you have no idea how much JS/TS I write Just a wild guess judging by the amount of comments you write on r/django. Wrong? Doesn't matter - your OP was unnecessarily sarcastic and full of it
What are you even trying to say? Projects with hundreds of thousands of man hours are useless? Hand roll your own libraries then realize why people flock to these solutions.
Gosh are you really that dense not to understand what I am saying? The fact that those projects have thousands of person hours doesn't mean shit. AngularJS, JQuery and Backbone had thousands of person hours invested in them. So what? People are still going to come along and try different approaches and do better than the established projects. According to your point of view React shouldn't have been invented because AngularJS was popular and had thousands of person hours invested in them
I just clicked on your comment history. Weird how you roam around picking on newbies but you fade out when they get a point against you. You're just not in the game against people who know their stuff.
Yes sure... üôÑ Let's see some example, big mouth
So what was your point? I said a brand new framework that solves the same problem that's been solved 10,000 times over isn't worth learning on a whim. Their benchmarks are eye candy anyway, I've tried this library out and it's not the devil or anything. It's cool, but the original answer was to why should you learn it, maybe because of performance? Hello no. Benchmark measuring contests are all bullshit for people trying stay on the "cutting edge" anyway. Send me a use case you have that actually improves your development, testing and client side responsiveness. I highly doubt you have one. PS: Lurking my profile seems pretty full of it, bucko.
The way modules have been handled by eg Node vs browser has always been totally different, but is now converging: https://2ality.com/2018/12/nodejs-esm-phases.html There‚Äôs really a lot of great progress happening.
our.best.friend = 'cuntsack';
Woah woah woah, you must interact with a lot of salty JS devs, because that's not what I mean at all. You're also extrapolating a lot of what I'm "saying" and who "I am". I never said Svelte was bad, I said it solves nothing new and is just another way to waste development time. The benefits are minimal and the "super fast" examples are contrived use cases that don't reflect anything in a real latency critical application. Learn whatever you want, but why learn it besides learning? I'm not sure. Maybe your concerned I'm scaring people away, but if you base your opinions on a single reddit post you're probably an incompetent human being anyway.
I have never claimed to be a Svelte expert, but I am always interesting in trying out different approaches. Dismissive smartarses like you irritate me. Profiles are there to be clicked on, and what the fuck is "bucko"...?!
English do you speak it mother fucker?!
tell that to Apple
Because it is better than writing code that throws runtime errors?
And I'm interested in trying new things out to (hell its my job), I'm not sure why you're going crazy over defending something you didn't create. Get some help bud.
And I'm interested in trying new things out to (hell its my job), I'm not sure why you're going crazy over defending something you didn't create. Get some help bud.
&gt; bucko In what godforsaken shithole is that part of the common lingo??!
I created a small configurable "Robowatch" to observe files, and automate running shell commands when files change. It can insult you like Linus Torvalds if you do something stupid or it can build files and containers for you with no more effort than just saving the file. It also can debounce the effect few seconds to avoid excessive events, select the shell (bash etc.), ignore files and have comments. The motivation was that I wanted to do some automatic copying of files and running of utilites between different projects, but did not find a simple configurable utility for it. [https://www.npmjs.com/package/robowatch](https://www.npmjs.com/package/robowatch)
The problem is, why haven't you rejected `a` or `a.b` earlier in the code path before needing to test `a.b.c`? I've had to work with horrible ugly nullable data like that and never find myself needing to test more than one level deep.
That was oddly satisfying. Thanks for sharing.
My point exactly....minimal benefits and doesnt provide better, easier solutions. Not a big community around new libraries and frameworks and there were plenty super mega giga fast solutions before that dont see the light of the day. Waste of time.
Nah, there will be even more to polyfill standard lib. I'll call it... core-std-lib.
It sounds like `Promise.all(arr.map(asyncFoo))` doesn't process them all at the same time like I would expect a promise to do. Is that right?
glad you enjoyed it!
correct
If you have to deal with time in JS and you're not using moment, you're doing it wrong.
IDK if it's documented anywhere, but it seems to be a common theme amongst animation libraries. React-spring uses &lt;animated.div&gt;.
every framework claims it's either simpler, easier, better or more complete than anything else out there, I want to be told why this is a better choice.
I'd suggest [idx](https://github.com/facebookincubator/idx) if you're using Babel in the meantime. It'll be easy enough to codemod away when optional chaining gets the love it deserves.
That's definitely a fair point. If you are in a situation where you are able to use more modern tools then by all means take advantage of them. At some point I'd like to do a follow up post where I refactor the code to be a bit more modern. Until I get around to doing that I've added an update to the post telling people about improvements they could make on their own as an exercise.
I created a little library for cropping and previewing images in React, using the new hooks API: https://github.com/thegreatercurve/react-simple-crop
Hello /r/javascript'ians, Here's source code: [https://github.com/javascriptteacher/Tetris/blob/master/tetris.html](https://github.com/javascriptteacher/Tetris/blob/master/tetris.html) Note: I teach JavaScript, mostly to beginners, so when I make tutorials I avoid optimizations completely (no matter how tempting!). However, I do plan a second version in which I will attempt to shorten the code (as many have in the past) and explain how the optimizations work. It's just easier to understand the logic in plain jane vanilla form.
It‚Äôs exciting! Really getting modules right is so important for the ecosystem. I think that post is outdated however: https://github.com/nodejs/modules/blob/master/doc/plan-for-new-modules-implementation.md
It would start all the functions and the returned promise will resolve when all of async ones resolved, or when one of them rejects.
Hi /u/sfatihk, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; The wider developer community is barely using what‚Äôs available in es2016-2018 What's your source for that? How did you measure that?
It‚Äôs anecdata. There are a lot of legacy codebases stuck on babel-5/6 (what a huge pain). Also, have you seen anyone use `for await...of` in production code (I‚Äôd be very interested to know)? I wish more people would use it but there aren‚Äôt clear patterns for usage yet. Also, the larger point is even if people are using language features, it takes like 5 years to figure out if the feature is actually a good practice or not. We have to respect the fact that the wrong language features can be devastating and effectively ruin a language.
Nice project
Array.prototype.includes is from ES2016. Async/await and Array.prototype.padStart/padEnd is from ES2017. Rest/spread for objects is from ES2018.
If I‚Äôm reading their site correctly, Quark has to be installed on any computer you want to run the sketches (apps) you create with it on. That‚Äôs a huge ‚Äúno‚Äù for me in terms of using it to create distributable software.
Okay?
Okay, that fits how I thought it would work. Thanks for the tip. I'm working on a personal project where I'm trying to make everything async. Probably overkill but good practice.
Hi u/rootuser_, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I like that u should keep goin
Barely anyone is using these? Does it take 5 years to figure out if using some method is okay? How about things like async/await which have been in other languages for many years?
TIL... I‚Äôm older than Tetris. Good grief.
I can't take the bitmoji thumbmail seriously.
To be fair, AS3 (ES4) used namespaces for this, which JS doesn't support. AS2's typing and class system was compile time - like TypeScript - so privates there ultimately became public properties.
Yes? https://github.com/tc39/ecmascript-asyncawait &lt;- released five years ago. Since then we‚Äôve had to consider: - Safe semantics for unhandled promise rejections - avoiding usage of Promise Deferred - top-level await - `return await` in `try` blocks I love `async/await` but to say that you could just add it to a language without any period for gestation is wild.
&gt; released five years ago ES2017 wasn't released 5 years ago, though. &gt; I love async/await but to say that you could just add it to a language without any period for gestation is wild. I said that other languages had it before JS did. So wild! Also, you obviously didn't wait till 2022. Why's that?
If you had just said ‚Äúvanilla js‚Äù or ‚Äúwith no external dependencies‚Äù I‚Äôd be interested. The whole ‚Äú(a dying art?)‚Äù is just cringe.
Because not all data structures are flat?
What a stupid thing to be uninterested by.
Right? Especially considering all the Web APIs involved anyway.
The definition of getting ‚Äúreleased‚Äù in a ES release changes, but in ES2017, anything that was released just means it was upgraded to stage 3 (or 4? I can‚Äôt tell anymore). The async/await proposal has been around for way longer. Some other proposals get fast-tracked and are only around for shorter periods of time. Look at the commit history of the linked repo it literally says five years bud.
A dying art? Eek barba durkle, somebody's gonna get laid in college üòÖ
Great point üòÇ
Where's the link to actually just play it?
If you had just taken yourself less seriously you'd know reddit posts are not made just for you.
Interesting enough to have you comment on it.
What?
&gt; Look at the commit history of the linked repo it literally says five years bud. I'm aware of that. That's not the topic, though. You said no one uses ES2016-2018 features. And you added: "even if people are using language features, it takes like 5 years to figure out if the feature is actually a good practice or not". That's the kind of timeline you created.
Weirdly a lot of hate on here. I wonder why? Regardless, this looks fun, thnx for releasing it.
I enjoy Vanilla JS frameworks make you a cripple sometimes. This project is a demonstration of strong understanding of a language. It‚Äôs something to be proud of.
It‚Äôs definitely a code smell and I worry adding optional chaining is gonna make deeply-nested checks and json trees with massive amounts of optional branches more common. See https://en.wikipedia.org/wiki/Law_of_Demeter.
I have absolutely no problem with someone being proud of what they‚Äôve made. They should be proud of this! I bet it‚Äôs impressive. It‚Äôs just that Javascript is one of the most popular languages and not at all a ‚Äúdying art.‚Äù It was really just that single phrase that was bleh
I'm not even going to look at it, even though it must be great and you probably put a lot of effort into it, because of the title. What's this sudden VanillaJS religion? Stuff we call libraries and frameworks are all also written in "vanilla js". The code you have to debug in your browser is "vanilla js". Did you not create any functions or classes / methods and that's why you claim you used Vanilla JS? I really don't understand.
No you're not, there are now many other, more modern libraries, including a rewrite from moment authors. Not to mention native Date is still miles ahead in terms of speed, if that's a factor you have to consider.
TLDR:
Gosh who cares... üôÑ
There is a lot of aggro on r/javascript at weekends for some reasons. [insert quip about sad tekkies without a life]
There is nothing wrong with "a dying art" - jesus guys get a life. 10 years ago we used to whinge that people didn't learn Javascript, they learnt jQuery. Now it's the same with React. If you look at the top 100 post of the month or week - how many are vanilla-js related?
Looks like fun... but watch out for the wrath of the "don't hijack MY MOUSE!!" crowd
Hi u/amifrisken, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It's not about having flat data structures, it's about not sending `a` to functions that want to work with `c` or `d`. Are there cases where you might need to do several null checks? Sure, probably. But they should be very rare and code like `a &amp;&amp; a.b &amp;&amp; a.b.c` *should* stick out like a sore thumb.
People who don't do things are jealous of people who do things. The healthy action would be to do things so you can make your own posts. But that's hard, and requires doing things. So when they see other people doing things, they lash out. If the "doers" would stop doing things, then the "not doers" don't have to feel bad about themselves. If that doesn't work, then the "not doers" can decide "it wasn't any good anyway" to feel better about not having done a thing. This is why people who post prolifically, even if it's silly things, are almost universally perceived as more talented than people who don't. It's proof not just that they can do things, but that they can put up with the relentless harassment of people who hate everything.
You could always work part time during college(if you go that route). Building a portfolio will help you get a job like that. I got my first web dev job when I was 17 in high school, continued through freshman year of college. Now I know web dev isn't for me, but getting that experience helped me figure that out.
I made Tetris in binary in just 5000 hours! Plebs!
Disclaimer: before this gets ripped on because there are easier ways to do this, this was just a fun experiment with a desire to accomplish this goal without side effects. Explanation: Lots of times I see classes where a value is set to `null` in the constructor because the state it will take on is not available yet. Then, one method will set that value at a later time, and a bunch of other methods will access that value assuming that the state has been set by the other method, or do a bunch of `null` checking to see if the value has actually been set. If `null`, usually the logic just doesn't run. I've seen this pattern cause a lot of bugs. An alternative I have seen is where people create a Promise then save off the promise callbacks for later use so that they can resolve the state when it gets there, and logic can be deferred until the state is good: class Thing { constructor() { this._value = new Promise((resolve, reject) =&gt; { this.resolveValue = resolve; this.rejectValue = reject; }); } createState() { setTimeout( () =&gt; { this.resolveValue(42); }, 1000, ); } doLogic() { this._value.then(console.log); } } const a = new Thing(); a.doLogic(); a.createState(); The problem with this pattern is that you not only have to rely on side effects to save off the resolve and reject functions of the Promise, but you also have to keep track of them inside of your business logic. I wanted to see if I could make a version of this where all of that logic was abstracted away, and just for fun I wanted to do it with as few side effects as possible. This is what I came up with. The weirdest part is the use of the `setTimeout` which defers the resolution of the outer promise until the rvalue of `const promise = . . .` is computed, otherwise `handler({ promise, resolve, reject })` would throw a reference error for `promise`. In a weird sense, this is a side effect that makes use of JS' closure of scope and the event loop. Since the value doesn't exist before it is set though, I think we can still call it functionally pure. :) const eventual = () =&gt; ( _eventual =&gt; ({ then: (...args) =&gt; _eventual.then(({ promise }) =&gt; promise.then(...args)), resolve: val =&gt; ( _eventual.then(({ resolve }) =&gt; resolve(val)), undefined ), reject: val =&gt; ( _eventual.then(({ reject }) =&gt; reject(val)), undefined ) }) )( new Promise(handler =&gt; { const promise = new Promise((resolve, reject) =&gt; { setTimeout( () =&gt; handler({ promise, resolve, reject }), 0, ); }); }) ); const thing = eventual(); thing.then(x =&gt; x ** 2).then(console.log); thing.then(x =&gt; x ** 3).then(console.log); thing.then(x =&gt; x ** 4).then(console.log); thing.resolve(3); /** * Console output: * 9 * 27 * 81 */ See the link in the title for a commented version
I hope directly in machine code, and not in assembly? Because that would be L4M3
Hi u/MariluPena, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[https://www.youtube.com/watch?v=ygI-2F8ApUM](https://www.youtube.com/watch?v=ygI-2F8ApUM)
Hi u/HashFap, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I laughed out loud :D
thanks :) do you have any advice?
Nice tutorial, thanks for providing some reading material during my commute
INTERESTING ENOUGH TO HAVE YOU COMMENT ON IT
Guilty as charged. Here's my [jQuery tetris](https://marcoenri.co/archive/tetris.html).
Hi u/mohamedimy, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I don‚Äôt think it‚Äôs that deep man, it‚Äôs just a dumb title. Vanilla js is not a dying art.
I'm a little confused as to why you call this a "purely functional" promise? const thing = eventual(); thing.then(x =&gt; x \*\* 2); thing.resolve(3); Is a neat trick, but it's quite imperative/impure (not that there is anything wrong with that).
Hi u/ydennisy, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Jesus. Get over yourself.
Jesus did. He also knows you aren't going to do anything about it.
Personally, I prefer vanilla over libraries. Maybe because ive done mostly vanilla, but to me, its just easier to look back on.
.... so why don‚Äôt you do it? Lol
Hi /u/fallow64, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
The issue is that it changed the discussion. The dev made something cool and impressive, but instead of talking about that we are discussing the value of vanilla js vs libraries. The verbiage gives an inference of importance on how it was made, not what was made. If this was unintended then we should focus on the cool product of work, because making something cool and sharing it with the world should be applauded. If this topical shift was intended, then the past is basically a passive aggressive self-aggrandizement, and the responses are just.
Don't let the downvotes get you down. It is indeed a sick art, if not outright dying.
delete this nephew
"ugh Im not using any libraries, i'm so quirky and unique."
Of course it's important _how_ it was made... it's the whole point of the bloody sub üôÑ "passive aggressive self-aggrandizement" my foot
Nuxtjs is better because vue &gt; react
What do the "Web APIs" have to do with anything üôÑ
Yep, just the usual reddit kids being reddit kids
I mean, the reason I said what I did was because he said HE was uninterested in your work. I was defending you and you attacked me I‚Äôm so confused üòÇ
Thank you, /u/cunty_ball_flaps
My apologies for your foot.
Hi u/masudhossain, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
As a newbie web and JS game developer, I am in awe!
Dude if there is one thing I‚Äôve learned about this subreddit it‚Äôs that there‚Äôs no point defending yourself from someone being an unnecessary shit to you and trashing what you said or did because some arbitrary wording got their panties in a twist. Once the hate train starts, the downvotes come raining when you defend yourself, because the people who agree with you will read the comment, roll their eyes, and move on without reading the chain, whereas the generally hateful shits that thrive on being pedantic and pointing out how one small part of what you said so offended their principles that it spoiled their Mountain Dew will hang on every response, waiting to whip out their Cheeto encrusted fingers to smash the downvote button on anyone remotely trying to point out that perhaps they could save their aggression for someone who has actually done something more than remotely offensive. Ego investiture is a recursive function. Some guy who accidentally launched highhorse.js takes nothing away from your Tetris in JavaScript labor of love. Be proud and carry on.
You‚Äôll be downvoted to oblivion for this comment and so will I for supporting you, but you‚Äôre damn right. This place is so fucking toxic that almost no posts go by without someone trampling OP for violating whatever version of orthodoxy their vision of the community is or should be. And god forbid they attempt to defend themselves from someone being a little shit; the sharks instantly descend.
"I built this thing from scratch unlike those other heathens!!" (proceeds to ignore all of the technologies that "from scratch" project is being built on)
Nice
Looks effectively like a [Deferred](https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred), though deferreds still allow a separation of the promise and the fulfillment API by providing the promise as a separate `promise` property.
You are full of shit. What "technologies" is the project being built on which are not "vanilla"? [Here's the source code](https://github.com/javascriptteacher/Tetris/blob/master/tetris.html) - point me to the line numbers.
Vanilla IS built on technologies was my point. It's not a fucking majestic accomplishment to manage to write your own project in it instead of using existing pieces of technology other people made like you are already doing. It is crazy to thinks a move towards using a framework vs writing in VanilliaJS is something to be concerned about for anything other than specific performance reasons which don't affect every project. Ignoring that the VanillaJS engine is implemented in other languages, the VanillaJS DOM is provided by the different browser vendors and many other bits and pieces that are "VanillaJS" are more than simply the language. It's not honest to say that VanillaJS is somehow inherently better at all times to program in and using frameworks should be avoided. It's a sign to me that someone barely knows or understands the technology stack under their own parts.
1. builds a simple game without using third party frameworks / libraries 1. "It's a sign to me that someone barely knows or understands the technology stack" /facepalm
So this is the geek version of "my dick is bigger than yours"?
I swear this sub is getting worse and worse. If people are not complaning about too many emojis in the text they are complaining about clickbaity titles or using a framework that is too cutting edge or some other nonsense. It's like they feel they are obliged to read every article and are looking for excuses not to have to.
Vanilla gang
Yeah... I can see what you are saying. Promises do inherently have a side effect though, just like `thunk`s in Haskell. The value has to be mutated by `resolve` at some point, and this just ships off that functionality as a method rather than an argument to a callback. It's pure in the sense that no "side effects" are used during the creation or usage of this type that are not present in a normal promise.
That's neat, I didn't know that this used to be a part of the `Promise` API.
Yeah, that'd be nice. That's what I came here for.
I could give a shit about this vanilla vs JQuery vs React vs bumbleFuckJS, this man linked directly to the playable game, so he wins! I don't care if you coded it directly in binary, I'm not cloning a github repo of a single HTML file and spinning up a dummy HTTP server just to see a demo.
nice, will keep it in mind for a future project
Maybe no external dependencies is what he meant... regardless, I‚Äôd prefer we don‚Äôt suddenly consider a program bad just because u don‚Äôt have to install a hundreds packages to get it working. Something which just works, out of the box, isn‚Äôt impossible and in many cases it‚Äôs preferable, so no need to be so anti-vanilla.
How would you introduce this *without* saying you wrote it all from scratch?
Yes, sadly a dying art.
worked on my android
You're question is inherently based, as if his phrasing is the only way to describe the implementation. The reason for all the responses is the way it was said. Example of how it could have been said: "I wrote a vanilla JS implementation of tetris." That's cool, and even cooler that you created a tutorial for others that are interested to learn from. Thank you for giving back to the JS community! Instead, it was this: "No frameworks. No libraries. Just vanilla JavaScript (a dying art?)" This is a perfect balance between movie poster epicness and self-indulgent mustache twirling. Thanks for the braveness in being the lone savior of JS artistry? The dev did something cool, AND he made a tutorial to help others! That's super awesome! I just think the way he gloated about the vanilla JS aspect masks this.
A dying art? Get over yourself.
Hi u/CoderDot, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Calm down negatron, is only an idiom.
Since you're using the browser, and it's so much easier to use .js files, I would go that route. You can always change it later if need be. Often, in the early stages of development, it's best not to over-engineer things. Instead, go with the most obvious solution to get something working, and come back to it later. If you later find you're spending too much time changing or using those files, then that would be a good time to rethink the way you're doing it. If you overthink now, you may cause more work for yourself later in a way you didn't expect.
[https://rawcdn.githack.com/javascriptteacher/Tetris/9a2ff9749e2d93c11e92635b236f97aa49049eaa/tetris.html](https://rawcdn.githack.com/javascriptteacher/Tetris/9a2ff9749e2d93c11e92635b236f97aa49049eaa/tetris.html)
I absolutely love that you did `window.onload = function() ...`
Why did you choose not to store a reference to each square in an array instead of looking it up in every paste or erase function? https://github.com/javascriptteacher/Tetris/blob/master/tetris.html#L295 You probably could have done that in the `// Generate well` block
Made a very small library (&lt;1.5kb) for making components out of the HTML you already have. It's like stimulus.js except 1/5th the size and with lifecycle methods https://github.com/tamb/domponent
Hi u/BigglesWerth, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
ok, i'll fix the tutorial tomorrow. it turns out window.onclick works on Android touchscreens, but on iPhone you have to tie the event listener to a 'clickable' object (eg. the canvas)...
Poor guy that‚Äôs like the 20th time you had to post that. You could probably edit your post and link to the code
Why wouldn't they use requestAnimationFrame? What's the point of not ensuring you have a consistent framerate? It doesn't even violate the "no external deps" condition, as it's a browser feature.
Interesting, thanks for sharing
Hi u/MichaelPaulfv, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/iamqbm, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'd say _it's not in the RxJS lib_ because it doesn't really fit in any particular way with the rest of the library. In particular, you're doing a completely generic operation in your `squareIfOdd`, that is, you're both filtering and transforming. And RxJS prefers favouring _atomic_ operations and then composing them. It also seems to manipulate the observable in a rather _un-RxJS_ way. I mean, it really _feels_ like _going around RxJS_ to manipulate the stream instead of _using RxJS_. I can easily understand why this wouldn't be _in_ RxJS. In any case, you call this a "design pattern" and what's not clear to me at all is what is the original problem you're trying to solve with this? P.S. It would also be nice (it could make more sense or give people a better idea of what you're doing) if you posted the actual code for `generator`. Otherwise the code you posted is just a pretty picture but it can't be tested.
You ask and you shall receive export function generator(gen) { return original =&gt; new Observable(observer =&gt; { //push beginning yields from generator to observer //until generator asks for input with yeild undefined let itResult; while ((itResult = gen.next()).value !== undefined) { observer.next(itResult.value) if(itResult.done) break; } if(itResult.done) { observer.complete() } const originalSub = original.subscribe({ next(value) { let itResult; while ((itResult = gen.next(value)).value !== undefined) { observer.next(itResult.value) if(itResult.done) break; } if(itResult.done) { observer.complete() } }, error(err) { observer.error(err); }, complete() { observer.complete(); }, }); return () =&gt; { originalSub.unsubscribe(); }; }); }
No idea... that's actually valid criticism, not the stuff about "dying art"
I would've preferred getting an answer to this: &gt;what is the original problem you're trying to solve with this?
There is a bunch of operators that work well for a single operation, the map() operator transforms objects 1 to 1, and the filter() operator can discard some of them, and the buffer operator can create a list from some of them, etc. &amp;#x200B; But there are some transformations that would be very verbose to express with a chain of single generic operators. Usually you can just make a custom operator for that. However, there are some downsides to defining custom operators. Custom operators you have to deal with the code length overhead of writing the custom operator, it includes code for subscribing and unsubscribing, pushing values through to observer, etc. Writing custom operators also tends to be scattered code (like when some transformation logic is within the next() method of the original-observable-subscriber and some state is defined when the observable is subscribed to in that function scope, etc). Also, a custom operator can be complicated, perhaps even offloading the [observer.next](https://observer.next)() to some callback. And the more flexibility and complication, the harder it is to read. &amp;#x200B; With the generator method, it solves these problems. With generator code you know exactly what comes in and what comes out. The transformation code is all in one place. You know where the source data is coming from. You know when the data is being pushed to the observer. And you have asynchronous code in a nice sequential syntax, almost like what async/await did to promises, but still quite different.
Hi u/IonelLupu, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/99Kira, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/gerasim_vol, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/gerasim_vol, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hmmm ponzi money
Well, then don't and move on, who cares
Just sitting here wondering what a burst is and how much American freedoms it is.
I think 1 mil burst is around 8.5k usd from what I could google
Hi u/Coding_exe, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Very entertaining, bravo
Hi u/norther1990, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Definitely color! :-p It seems, there's no perfect way of going about it! Also, check out BookBaby. Very similar service and also publishes on Amazon. Thanks for sharing your knowledge :]
Thanks, I'll check out BookBaby! I agree that color is much nicer but just to please everybody I've also released a black and white version
Hi u/_jsdw, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hello! Angu is a small, well tested, zero-dependency library I've been working on for a short while now and thought it was about time to show the world. The main aim of Angu is to make it really easy for you to build small, safe DSLs and languages that can be evaluated in a browser or NodeJS. You define all of the operators, variables and functions that will be available, and then evaluate strings using these to get back some value. You even have control over evaluation order, so you can implement your own control flow. The simplest example of using this is to build a simple in-browser calculator. You start by defining the operations that are available: const ctx = { // We provide these operators: scope: { '-': (a, b) =&gt; a.eval() - b.eval(), '+': (a, b) =&gt; a.eval() + b.eval(), '/': (a, b) =&gt; a.eval() / b.eval(), '*': (a, b) =&gt; a.eval() * b.eval(), }, // And define the precedence to be as expected // (first in array =&gt; evaluated first) precedence: [ ['/', '*'], ['-', '+'] ] } And then, you can evaluate strings that make use of these operators: import { evaluate } from 'angu' const r1 = evaluate('2 + 10 * 4', ctx) assert.equal(r1.value, 42) Angu takes care of the parsing, and supports numeric literals, strings, bools, function and operator calls (supporting user defined operator precedence and associativity), leaving you to define what you want to be in scope when an expression is evaluated, and when to evaluate arguments passed to functions. You can go a step further if you like and define control flow operators/functions, and more. I look forward to seeing what sorts of things people can create with it! Thanks for reading, comments appreciated :) James
WHich one did you end up using? I'm using NEXTJS as well and was wondering which one to use.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
I think I ended up with semantic ui's component library. Since then I've tried to force more ui design on myself and rolling with styled components or emotion.
Very impressive looking.
This is SO cool. I can't think of a practical application right now, but I admire this.
Then again, it feels "more impure" because it _spreads_ what initially was internal state of the promise giving access to external agents. That is, while in... const p = new Promise(task); attachProcess(p); attachSomeOtherProcess(p); ...we _know_ that neither `attachProcess` nor `attachSomeOtherProcess` can affect the internal state of fulfilment of `p`, in your code... const e = eventual(); attachProcess(e); attachSomeOtherProcess(e); ...nothing prevents `attachProcess` from, say, rejecting `e`. With the original Promise, the fulfilment state of `p` was the sole responsibility of `task`. With _deferreds_, that state is exposed to anyone with access to the deferred itself.
so this is kind of like BISON/JISON, but much more lightweight? neat!
yep, adding the listener to the canvas instead of the window did the trick. the tutorial is now working on iphones as well
I don't think you can edit post's title on reddit.
That's fair. Do you think there is a more pure way to go about solving the problem?
Great project. I have to ask though, why use the scroll wheel for the demo UI? Wouldn't arrow keys have been a lot more natural (and would only have required like six more lines of code)?
Awesome!!!!! I love creating programming languages and I will definitely try Angu out!!!
The only other sure fire way to get down voted is to attempt to discuss literally anything in a JavaScript post in /r/programming. Even more if it's style related (tabs vs spaces? Semi or not?).
Wow growing up.
It's a cool little project.
Website seems to be veiled in Firefox mobile
&gt;zero-dependency Please let this become a thing
Hi u/Hades_01_, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
So zero dependency is nice, but would that not mean repeating code?
Why? It's fun trying to create something from scratch and it can be useful going without dependencies to have no overhead in specific situations, but in general, I think it's a good thing relying upon proven well tested libraries to save time and reduce likelihood of errors as much as possible. I'm open to counter arguments though, just having trouble thinking of any.
That's great man! A good next step would be going to the next pages. I just watched every video from /r/video and it was just the first ones. Still, would use it again.
Parsers don't strike me as things that need dependencies
It's more about being pragmatic about it. Of course if what you're trying to do is large or complicated and it's already solved, then use it. But javascript projects these days have taken this so far to the extreme that you end up with dependancies like isEven/isOdd/isWindow which are all simple one liners. &amp;#x200B; IMO there needs to be a huge shift in the other direction for a while just to show people that it's not needed and it in fact makes development easier in the long run when it comes to all the tools being used.
Hi u/Strykegro, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
First of all thanks for comment. I saw a lot of scroll animations and i was impressed. This demo just a challenge/exercise about scroll animations. like code kata. I build experimental features sometimes like this. there is no specific reason, maybe we can say for fun :) By the way, yes, could be more natural experience with arrow keys.
I see. I don't really agree, but I am kind of on edge about some super simple one/couple line libraries (which get lots of downloads on npm). Definitely at least a good learning experience trying to do without them. I appreciate you presenting your opinion.
When you're doing code for yourself (for fun or otherwise) you only need to make one person happy: yourself. But when you make a demo for the world though, in theory you're trying to make everyone who sees your demo "happy". And if that demo is for a side scrolling video game, I think the natural thing those people will expect is being able to use arrow keys ... which, again, would take like 6 lines (two `keypress` event handlers). I would never tell you how to write code *for yourself*, but when making demos for other people I think you should think about ... other people.
Hi /u/-Lupin-The-Third-, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/alliptv, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; GuPM in is a package manager written with the goal to unify the package management scene. https://xkcd.com/927/
[left-pad](https://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/) [event-stream](https://blog.npmjs.org/post/185397814280/plot-to-steal-cryptocurrency-foiled-by-the-npm) [Or this incident that removed 102 packages, breaking anything that depended on those](https://blog.npmjs.org/post/169582189317/incident-report-npm-inc-operations-incident-of) Yes, packages can be a good thing, but they also introduce a whole class of new problems by introducing a whole lot of code _you_ did not review, as more often than not (especially in the JS ecosystem) adding a dependency to your project isn't just adding a single code base, it likely has it's own dependencies it will bring in, and those their own, and so on and so forth until your `node_modules` folder contains 1000+ directories with 15,000+ files. What if one of those dependencies sub dependencies has a vulnerability found? Well, you better hope that the package using is being maintained so they can update their `package.json` so that you can update to the fixed version. Oh, and if any other of the packages depend on that vulnerable version, or any of their dependencies, you better hope they get updated to, because they'll all have be able to resolve to the updated version before `npm`/`yarn` can update your packages. And because this is JS (unless it's a node project), all that shit will have to get sent to the client. So, now you're sending a shit load of unused code to the client. Sure, tree shaking is a thing now, but that will only get rid of all the code that is tree-shakable, and I'm betting all those dependencies aren't. So, now in addition to all those new error vectors, the time it takes for you to install and updates those packages is longer, and the amount of code you have to send to the client is significantly larger. Why? Because you didn't want to save some time or DRY up your code and not write a function to the check if a number [is odd](https://github.com/jonschlinkert/is-odd/blob/master/index.js)? (Which by the way, the code for that package is bringing in 25 lines of JS to do `n % 2 !== 0`). If you're writing an app, go ahead use as many packages as you want. But, not seeing the benefit of a library package having zero dependecies? Seriously? Would you rather use the package that has 0 deps and does the same thing as the one that uses something like [is-odd-or-even](https://www.npmjs.com/package/is-odd-or-even) that will bring in and additional 3 packages and likely 100+ lines of code. Zero dependency libraries should be encouraged, sought after, not this micro package nonsense the JS community is seemingly so obsessed with.
Didn't work for me. I typed in JavaScript and clicked go and nothing happened.
I respect you. I want to hear comments like that. Feedback is so important for me.
Same for me. Dev tools show a missing CORS header on the subreddit JSON.
I do agree that the current system and package managers have their fair share of issues. Some of those issues can be fixed, some are perhaps even unresolvable if one wants to use packages. The shitshow around [uws](https://www.reddit.com/r/node/comments/91kgte/uws_has_been_deprecated/) comes to mind. Not to mention issues around npm inc. itself (GitHub's package manager which is in beta could help). With deployment of code with dependencies, one does need to be very careful and people often aren't. You can set your dependencies to fixed version, which comes with its own disadvantages. Usually packages use dependencies in such way that you can `npm update` your thing any time and any non-major version updates, so any bugfixes needed will get though to you. That is if developers use semver responsibly. That said I still think the current javascipt ecosystem around npm is awesome and dependencies, if used with a bit of caution, are a big advantage.
I thought about it ahah
Why?
And I have great respect for people who can take feedback constructively and not personally :) Best of luck to you!
*Iphone users
Hmm but if you make a DSL basd on this lib then this lib will be a dependency.
Why?
What is your motivation for creating this?
Most modern keyboards have `CTRL` key on both sides so you can just hold it and press the right arrow key single handed to navigate to actual line start. üôÉ
Neat project! I wrote a similar project called [redditv](http://redditv.ca)
Vexed by the \`this\` keyword? I created this little visual guide to help you figure out what the value of \`this\` will be. Note: this will not cover the case of using the \`bind\`, \`call\`, or \`apply\` function methods. &amp;#x200B; [https://docs.google.com/presentation/d/1KZMFEGh1uBeF\_gYxwKWquLyI0RjMiHtP-tUFTpI3M5E/edit?usp=sharing](https://docs.google.com/presentation/d/1KZMFEGh1uBeF_gYxwKWquLyI0RjMiHtP-tUFTpI3M5E/edit?usp=sharing)
lol me too, not mobile friendly though (https://clint.fm/play/reddit). Maybe reddit should make a first party version.
This is great, can you give me a simple of example of how one might use this to create a simple query language for JSON data?
Hi u/tomuho, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Very very interesting. I like the minimal look and how thoroughly you covered all components.
True.
Thanks. I learned something,
Hi u/stratton013, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
If the majority of repetition is small like the fact that it uses recursion in different places, it's not worth bringing in a dependency, when simply using the language will do.
it works only for /r/videos
Hi u/beluas, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; well that example is quite a stretch, whereas choosing tabs for future projects doesn't seem to cost anybody any exertion for the benefits Not really. You probably chose spaces for some reason. That means that using spaces over tabs have some value for you. You would be forcing yourself to forgo that for someone else's benefit. &gt;&gt; JetBrains IDEs for example allow you to convert whichever configuration of spaces to whatever you want visually. &gt; this isn't true, or at least, you can't do it safely or losslessly, so it won't fly with most teams You are right. I misunderstood how the settings work. Which is why I created this issue [https://youtrack.jetbrains.com/issue/WI-47459](https://youtrack.jetbrains.com/issue/WI-47459). Sorry about the misinformation. &gt; the dominant argument to continue with spaces, in this thread, has been an effort to imagine advanced editor tooling to trick spaces into acting just as if they were tabs ‚Äî this snake eats its tail Yes, that's what I think is the best approach to address the a11y issue. My argument is that there is tooling to use web as-is for people who are actually blind! And it does not stop whenever it finds something that is not easy to comprehend for blind person. It works around it. So that leads me to the result that it does not make sense to try to change anything globally, where it makes sense to create an assistive technology to do that for people who need it. &gt; spaces people are imagining that spaces can also be flexible enough, but that's actually the fundamental problem with spaces ‚Äî they are completely rigid and inflexible ‚Äî some perceive that "consistency" as a feature, but it's really a curse It's only a curse if you don't like spaces :) I've worked in teams using both tabs and spaces. And I only ever had problems in the "tabs" teams. The same value that code standards bring on one user level does visual consistency bring across the whole team. Having even the same code highlighting would be ideal. It may even be something I don't like - e.g. using tabs, but everyone's code should look the same visually.
Events don't decouple. They just couple you to events.
Was going to recommend any flavor of flux instead so data lives in one place. Flux, reduce, hooks with useReducer would all be better than an Event Emitter.
Thanks for the feedback! You're right, it only works for subreddits that are all/mostly YouTube videos (like /r/youtubehaiku)
Definitely a good point - it‚Äôs one thing to keep track of my events as a single developer and a whole other thing to do it on a team scale.
Thanks for finding an edge case! /r/JavaScript certainly doesn't have a lot of YouTube videos and those errors can be handled more graciously.
Yeah I definitely am not trying to say that my home brew library is better than the commercially developed ones or even something another person has put more thought into. I‚Äôm mainly trying to discuss the paradigm shift of focusing on responding to events over some other mental model. I wrote my own zero dependency version as I felt a bigger library would be overkill for what I need right now.
Thanks for reminding me of this issue! I already have a fix in mind, and am so happy this is a problem worth fixing.
Way more feature rich! Awesome job.
If you use Mozilla check if content blocking is enabled for Reddit *(it was for me)*. This blocks the requests for the JSON data with the videos. To remove content blocking for just this site click the "Site information button" left of the URL and click "remove content blocking for this site" if it is visible in the Content blocking section. After this it worked fine for me. PS! I love this, I was just today thinking of doing something like this for myself. I will check the code out.
I'm still hopeful I can make it as an 18 year old professional software developer one day. Unfortunately I'm now 37, so my chances are perhaps a little slim.
I used Chrome on my Android, but I bet your solution will help others. Thank you for sharing!
Nope. It works for at least these random subs I tried: * r/Magic * r/woodworking * r/filmmaking * r/indiefilm * r/diy
Hi u/BoringCulture4, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This seems so interesting, please re-post the HN article you write on this sub after release as well.
I'd love that, but I've had a different experience. But Windows 10 improved in this regard, so at this rate, maybe in 5-10 years it will be true. Can't wait!
That's an immensely important hotkey, but it does not help when you just want to change indentation level.
Sometimes we have to use different tools (either just in rare circumstances or worse, always) that do not support this convenience, sadly.
Dissect it
You were wise in your decision to use this pattern, it is an important pattern for games: [https://gameprogrammingpatterns.com/observer.html](https://gameprogrammingpatterns.com/observer.html)
Do you use Netlify as it's frontend code only?
Hi u/v4racing, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Huh that's super cool! &amp;#x200B; This is actually the first game I've ever written (aside from some tiny Java ones like 10\~ years ago when I was a kid) so it's super cool that it's a commonly used design pattern!
&gt; everyone's code should look the same visually. this is where we disagree fundamentally different people have different visual needs and preferences, and it's very easy for us to respect those differences by using tabs &gt; You probably chose spaces for some reason. That means that using spaces over tabs have some value for you. You would be forcing yourself to forgo that for someone else's benefit. i argue that the reasons for choosing spaces are actually bad, let alone outweighing the accessibility concern however i'd be interested to hear the reasons why you think there is any value at all in maintaining consistency between developers in terms of indentation width, and whether or not that outweighs the potential needs/preferences of others to preempt the most oft-cited misguided reason: it looks to me like most developers who prefer spaces for new projects are using them to maintain the integrity of their brittle horizontal spacebar alignments across workstations ‚Äî however as discussed elsewhere in this thread, horizontal alignments are an antipattern to be avoided for their own reasons, because they are bad for maintainability during codebase refactor operations such as renames it's often not worth much effort to upgrade legacy codebases, so for future projects, i advocate tabs and no horizontal alignments to avoid all the problems raised in this thread &gt; And I only ever had problems in the "tabs" teams. i'd be interested to understand what kinds of problems you experience on tabs codebases, and whether or not there are better workflows which mitigate those problems &gt; Which is why I created this issue https://youtrack.jetbrains.com/issue/WI-47459. i'm glad you opened that ticket with jetbrains, i think it will help you understand why this feature hasn't been, and shouldn't be, implemented into editors &gt; it makes sense to create an assistive technology to do that for people who need it. we must recognize that this technology doesn't exist, and probably won't anytime soon ‚Äî there is a fundamental problem with it it's because of the complications relating to how tabs-to-spaces conversions are fundamentally lossy, and so the feature becomes dangerous and risky, as it inevitably damages codebases (breaking alignments) you see, we cannot create a good language-agnostic algorithm to seamlessly convert between spaces and tabs, because we can't distinguish whether a group of spaces should be treated as an indentation, or part of a horizontal alignment ‚Äî so we cannot seamlessly transition back and forth without breaking alignments ‚Äî interestingly this means there's a loophole for codebases without any horizontal alignments, for which these conversions actually can be seamless (however horizontal alignments are the main reason to choose spaces, so this scenario is somewhat unlikely) so that's the real reason that spaces are a real accessibility problem, which can't be simply covered up with some fancy tooling ‚Äî and the problem isn't going away (barring some really cool deep learning stuff, but then we're ridiculously deep down the rabbit hole frantically trying to avoid tabs without good reasons) the best and most versatile solution is simple for everybody: use tabs in the codebase &gt; everyone's code should look the same visually. i have a proposal to that effect why not just use tabs, and a default editor config tab-width that the team agrees on? so then by default, everybody's indentation is visually consistent, however a teammate has the ability to override the tab-width privately during their own work? for new projects moving forward, i think that could be the best of both worlds, what do you think? &gt; Having even the same code highlighting would be ideal. okay now you're being cheeky: that's just authoritarian, and you even know it ;) i enjoy our discussion from different perspectives, cheers mate üëã Chase
MobX isn't flux, though
Yeah, the major advantages of those options being your app will scale, extend and when you inevitably run into trouble you'll have search results to help. And if you're dealing with something like React, Redux is a natural companion.
No reason to use a Map in this case where the keys are strings. Use a Map when the keys are objects.
Is it typed?
There's no reason not to use a map. That doesn't make any sense.
With objects, you run the risk of interacting with keys on the object prototype. Maps can be iterated on, allowing you to skip the Object.keys step. Maps also preserve insertion order, allowing you to add LRU functionality. Maps were created to solve this key/value store problem.
When objects are your keys, I'd suggest using a WeakMap or you run the risk a of memory leak. Map is fine for everything else.
You can‚Äôt do it with a bit of caution. When you add one dependency and end up hundreds of others there is no simple way to audit all of it. If you do and you update you get to repeat the monumental effort. We don‚Äôt live in a world of rainbows and unicorns, we live in a world of organized crime and government espionage where bad actors are itching to slip malicious code into a popular library and the attack surface with npm modules, as it stands today, is much larger than a bit of caution.
Browser compatibility is one reason. The polyfills are fairly slow, so I guess if you can live with slow Map operations for your use case, then sure, it makes sense.
Decided to revisit a small app I wrote a year ago. Cleaned up the design (within my own non-designer limits), reduced the code by hilarious amounts, and got a chance to test out a friend's new reactive library he's been working on. [JustWrite](https://just-write-app.herokuapp.com/) is a highly minimal notes/writing tool with dark/light mode and full screen as the primary features.
Came here to write this. Events are the quantum entanglement of programming: spooky action at a distance. Trying to figure out what is causing X to happen, or why X happens when something seemingly unrelated happens first, is debugging nightmare fuel. You have to figure out which events the thing that's happening is listening to, then you have to go figure out when and where that event listener is even registered (could be in some random-ass place), then you have to go find where the event is being triggered. If you *deliberately* wanted to make your code as convoluted, hard to debug, and hard to trace as possible, event-driven programming is bang-up way to achieve it.
This is a nodejs application, why are you optimizing for browsers?
Insertion order isn't LRU, though.
These could use some ‚Äòfitvids‚Äô magic to keep the video ratios.
Hi u/javalife2020, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/issac113, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It can be if you're okay with deleting and reinserting on update.
Argh. If you're thinking of implementing cache, do yourself a favor and use Redis instead. The implementation in the article can grow without constraints, meaning it can eventually crash the server with an out-of-memory error. Also, mind the old adage; "there are two hard things in computer science, naming things and _cache invalidation_". You shouldn't be reaching for caching as a bandaid for poor DB optimization chops, or soon you're going to end up having to maintain a terrible, painful, hacky frankenstein.
[removed]
Project Page (?): https://github.com/aleen42/PersonalWiki *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Ah yes, you‚Äôre right.
I know, already looking into it. PRs are more than welcome.
Thank you very much.
&gt; you're going to end up having to maintain a terrible, painful, hacky frankenstein. This somehow ends up being what every production I've ever had to deal with "just this once" or "just for now" and it never seems to end. I don't get why planning isn't a larger priority.
`Generator.protocol.next()` should be `Generator.prototype.next()`
Thanks for pointing out this glaring ommission; license added (MIT) :)
My main motivation was that I was creating an internal project at work for graphing things, and we wanted to be able to evaluate expressions to be graphed. Another use case I had is that a friend of mine is working on a statistics application for showing tables of data, and a way to compute column values was desired. Also, in my old job, the product manager always wanted the ability in our app to compute simple expressions in input boxes rather than entering in literal numbers. I also wanted to dig into parsing a little more and just like languages in general :)
I wasn't explicitly aiming for zero dependency here initially, but I wanted Angu to be fairly lightweight so that it could be used in browsers without too much concern, and I wanted complete control over the parsing process so that I could work on handing back decent errors (I think I have more to do here but it's coming along, and feedback on how good things are at present will definitely help!) and control the performance. The parser built here is basically the subset of what a full parser combinator library would provide that I actually need, with one or two bits that might not often be provided.
Interesting idea; I am always looking for more example use cases! I'll ponder adding something to the existing examples for this. Offhand, I suspect I would define the `.` operator so that you can write things like `foo.bar.0.lark` in the simplest case to define field/array acceses. I'd have to look at some of the abilities that something like `jq` provides to see where to go from there!
Awesome, tthanks! Please let me know what you manage to create with it (and whether you run into issues along the way!)
"sketch" and "sketchbook" used in the landing page - terms that that I'm familiar with, but the screenshots left me wondering whether the right language is being used to sell something.
Since my other comment got downvoted so much, I figured I would check to see the difference in performance between Map and Object backed caches would be. [Test for yourself on jsperf](https://jsperf.com/in-memory-cache/1) The code from the blog post has been cleaned up to this: const Expired = Symbol(); function validateCacheHit(itemPair, cacheTtl) { if(itemPair) { if(typeof cacheTtl === 'number' &amp;&amp; (Date.now() - itemPair[1] ) / 1000 &gt; cacheTtl) return Expired; return itemPair[0]; } return itemPair; } class MapCache extends Map { set(key, value) { return super.set(key, [value, Date.now()]); } get(key, cacheTtl) { return validateCacheHit(super.get(key), cacheTtl); } } The object cache is very similar: class ObjCache { constructor() { this.data = {}; } set(key, value) { this.data[key] = [value, Date.now()]; } get(key, cacheTtl) { return validateCacheHit(this.data[key], cacheTtl); } } On Firefox 67 on Ubuntu, I get 1,065,106 ops/sec with the `MapCache` and 1,609,645 ops/sec with the `ObjCache`. A big difference but it's unlikely that either cache lookup speed is going to be the bottleneck in your application. Redis has its place but it's not a panacea. Some cases may benefit from not having to pull in an extra dependency.
Hi u/Ghoster_One, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks for you comment! I've added a small paragraph at the beginning to ensure people are aware of this issue.
I love pub sub! So much so I wrote a library that does similar things a while back (http://msngrjs.com if you get bored and want to compare). Your library looks pretty straight forward but it's not very event-y. Everything is synchronous which is good for your game (you don't want to mess with the scheduler much in between calls to `requestAnimationFrame()` otherwise you might end up dropping frames) but in general you want events to be asynchronous otherwise you'll be pausing your current code every time you publish. I don't think most JS developers would expect events to work synchronously as that's not the typical pattern. Another item of note is your library simply forwards arguments to the subscriber. This is a tight coupling. Usually in event based patterns you decide what an event _looks like_ and then that object is sent. Sometimes that object has different properties populated but it's still an event object with some sort of contract.
How is this micro benchmark relevant? Either will blow away any IO for both the original work or a networked cache.
Ha it's funny that you bring this up - I left everything as synchronous for the exact reasons that you mentioned but you are quite right that this is a niche use case. Maybe I will rename my library to sync-pubsub or something to make this much more clear.
Hi u/scoutfreak, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
How many reposts mate.
In LAMP stack I used memcache for decades. Still works great, rock solid.
Hi u/shibainuisno1, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/Benuuts, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/webdev] [Offline downloadable web app ?](https://www.reddit.com/r/webdev/comments/cdfaz8/offline_downloadable_web_app/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Just a smidge off-topic, but on the subject of Tetris I recommend hunting out the BBC4 documentary "Tetris: From Russia With Love" from 2004, the story of how the game came to be and then came to the west is more complex and interesting that you might already know.
Yes please let me know, would be cool to implement the basics such as filter, averages etc
 there is new update in Microsoft's Visual Studio Code editor &amp;#x200B; I used to read the blog in coruscatesolution. that give the best information...
At an ExtJS-3 (pre-MVC) shop I worked at several years ago, I (re)introduced an event driven architecture to replace the existing spaghetti. Once in the morning me and my cohort were asked to modify something which in the past the same sort of thing apparently had taken a half week or more. We finished the task by lunch to the amazement of the requester. As with any paradigm, you can do it well or poorly. For instance we used an event registry with (pseudo) constants for names, instead of the "magic strings" some idiots sling around.
Is there a reason a [PWA](https://en.wikipedia.org/wiki/Progressive_web_applications) isn't suitable? You can create a web app that works online and caches itself on the user's browser to work offline, and which can be accessed through home screen shortcuts on mobile and desktop shortcuts on desktop. The downside is the storage limitations but nowadays those aren't too burdensome. Firefox's limit for a group of origins is 2 GB or 10% of total free disk space.
Really good article
Safari and Edge don't have native support for it yet, so [here's a polyfill](https://www.npmjs.com/package/relative-time-format) that works nicely.
This could be extremely valuable, as state machines are a significant component of other languages. I hate to say though, I'd love an explanation of this line before I could put the rest to use: state = _next.apply(0, ({'E': [0, 1], ';': [1, 2], 'L': [2, 3], 'Œµ': [0, 3]})[action]);
&gt; there are two hard things in computer science, naming things and cache invalidation And off by one errors üòú
Nonsense, just find an employer willing to take a chance on you. Show them you are open minded and willing to learn, which is a bug chunk of the job. I would know, that's how I got into front end work myself without making a single html page before. I now create enterprise react applications and I'm on the way to becoming a full stack dev.
I guess I‚Äôm an old now. I remember when using pub/sub to ‚Äúdecouple‚Äù your is was the new hotness, then went out of style, then forgotten about, and now we‚Äôre back.
Ok!!! I will!!!!!
I think you missed the parts about the age.
This doesn't do justice to [https://nodejs.org/api/stream.html#stream\_stream\_pipeline\_streams\_callback](https://nodejs.org/api/stream.html#stream_stream_pipeline_streams_callback)
``` // This is an object whose keys reflect possible actions ({'E': [0, 1], ';': [1, 2], 'L': [2, 3], 'Œµ': [0, 3]}) ``` The value of key `[action]` (`'E'` or `';'` or `'Œµ'`) is extracted. If action is equal to `'E'` then `[0, 1]` will be accessed. ``` ({'E': [0, 1], ';': [1, 2], 'L': [2, 3], 'Œµ': [0, 3]})[action] ``` Then the array is passed as second argument to the `Function.prototype.apply` method. This method has the following signature: &gt; function apply(thisArgument, arrayOfArguments) {} So, this line invokes function `_next` in context of `0` and with arguments `prev=0` and `state=1`. That's my guess ;]
They CAN decouple. They dont decouple just because you use them. They, like most things, have to be used right as a minimum. At a certain point the "but if you do it wrong it doesnt work" statement can be made about everything and really should just go without saying.
Hi u/PersAlter12, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I use Firestoreter for a mobx react app and it is awesome. https://github.com/IjzerenHein/firestorter
Yes, it‚Äôs true that event-driven programming can lead to a mess if implemented poorly. You could say the same thing about every programming paradigm out there. There‚Äôs no good reason for anyone to register event listeners in ‚Äúrandom ass places‚Äù. This wouldn‚Äôt even come about naturally in an event-driven model. Even the DOM, which allows nodes to manage their own event listening for many reasons, provides a API that ensures you never have to do this. Even still, this can be solved by simply passing relevant information about the emitter along with your event emissions and actions. Event-based programming is sometimes referred to as message-based programming for a reason. You pass *all* of the relevant information along with your events, and your event handlers are responsible for what to do with that information. If you‚Äôre giving out bad or incomplete information, then that‚Äôs the result of writing bad code. Don‚Äôt write bad code. If you don‚Äôt *always* want to emit an event, then don‚Äôt always emit an event. Simple. If you only want to act on a message depending on the contents of its payload, then do that. How hard is that, really? And moreover, how would you get around having to depend conditional logic altogether using some other approach? You‚Äôd do better to just emit the right event in the first place, but apparently specificity is a bad thing, for reasons you‚Äôve failed to specify. If you want to design an app with an event-driven architecture without any consideration for how event-driven programming can benefit or impair you, then you‚Äôre probably going to get bad results. Obviously. Don‚Äôt write bad code. But if you take the effort to actually learn event-based programming before implementing it in an app intended for real-world usage (crazy, I know), you‚Äôll find that it can be a very powerful approach with some great benefits for debugging and organization of your code base. If your comment can be summarized as ‚Äúdon‚Äôt write bad code‚Äù, then it didn‚Äôt really need to be said. It‚Äôs tautological. No one is going to think to themselves ‚ÄúI don‚Äôt know anything about event-based programming, so I guess I‚Äôll just wing it‚Äù. It doesn‚Äôt need to be said.
What I don't like about this article is that it's about behaviors tracking and that it uses the Class keyword in javascript.
The difference is the spooky action at a distance. The *fundamental* difference between event-driven programming and any other paradigm is that it's harder to debug and trace code to understand what's happening. You can easily step from one function call to the next to see why some code path is executing. That is not as straight-forward with events because where listeners are registered is physically separate from where the events are being fired. Even bad procedural code is easy to trace and debug, but bad event-driven code is not. Even *good* event-driven code is harder to trace and debug than bad procedural code. I've never seen a real world, production code base that was so immaculately clean that you could always rely on event listeners to be registered in logical places, that listeners were disposed of in logical places, and that the business rules were so perfectly defined that events could easily map to them. Virtually every single *real* debugging headache I've ever had involved some variation of the pub/sub pattern. Consider this: public registerUser(data) { let user = // insert user into database this.emit('onUserRegistered', user); } Well good fucking luck knowing what's going to happen next. There could be a half dozen other side effects that occur as a result of that event being raised, each of which could cascade into more events being triggered.
Why do you dislike the \`class\` keyword?
Just read through and I would suggest looking into Makefiles to wrap the logic of those build stanzas. If you're looking to modernize I'd look at Gulp and/or Webpack - personally a fan of Gulp but I absolutely love both. Would also consider adding SASS to your workflow since you're bringing Bootstrap in. Working with Bootstrap via CSS really limits the functionality of what it's capable of. Solid rundown of your process! I wish more people would do this because I definitely learned a few small tidbits.
I usually make a custom build of bootstrap and put the result in css/bootstrap.css, the rest I use plain CSS in JS, I didn't cover that there because I think like state management it's a personal choice and it doesn't affect the core workflow.
&gt; Well good fucking luck knowing what's going to happen next. There could be a half dozen other side effects that occur as a result of that event being raised, each of which could cascade into more events being triggered. You act like it‚Äôs an unsolvable mystery lol. How hard do you think it is to determine what‚Äôs subscribed to your event? I think maybe the problem is less that debugging is more difficult with event-based programming and that you struggle with debugging non-procedural code.
Probably the frustration that Javascript doesn't have real *classes*, but the syntax is easier and looks fancier, and its even used a lot (React).
I haven't seen firestorter before but looks like a really good, clean library! It comes down to preference between Mobx &amp; Redux for state management.
&gt; I don't get why planning isn't a larger priority. IMO, because it's easier to hire someone to perpetually compensate for bad design.
Probably the frustration that Javascript doesn't have real *classes*, I think the syntax it's easier and looks fancier and it's even used a lot lately (React), so why not.
&gt; How hard do you think it is to determine what‚Äôs subscribed to your event? If you think it's as simple as just searching for `'onUserRegistered'`, you'd be wrong. What's subscribed to your event depends on a lot of things: 1. Is the event service a global singleton? Is it a local singleton in part of a module tree? If so, how deep in the tree is it (in otherwords, which ancestors will it apply to?) 2. Are you subscribing to it lazily vs eagerly? That is, subscribing when a module is loaded? 3. Is that subscription disposed of when the module is unloaded? If not, then visiting other modules first can affect what side effects will be present (this has happened to me many, many times in code *that I did not write*). 4. What conditions surround the subscription in those modules? Does visiting a module as one type of user affect whether the event is subscribed to? What about the listener itself? Is that conditionally executing? All of these things cause a massive debugging headache and yes, all of these things exist in real-world production code. "Well don't write code that way" is unicorn fantasyland bullshit.
&gt; but it's sometimes overkill I mean, if it's overkill, why cache at all? Beware of premature optimizations. If your entire dataset fits in memory, your DB query is going to be fast enough. If your access pattern is similar to a blog, you could just put your web server behind nginx or whatever and you'd get a comparable cache hit rate with zero changes to application code, and likely lessen the server load, to boot.
100% agreed. But &gt;And this isn't just a JS/NPM problem Well, I really have yet to see an ecosystem, where it is so widely accepted to depend on packages that do just basic stuff like left-pad. To be fair, it's probably also due to the fact that JS has (or had) very little to offer in terms of standard lib and back when npm was only used for node/server-side stuff, some of the disadvantages of having a bazillion deps were not as grave as when writing for the browser, but still. If you don't trust your skills enough to write a basic string manipulation that is not as "stable" as left-pad is, man I don't know. But then again I was also never a fan of lodash and the likes. It made people lazy and prevented them from understanding (or even knowing about) native API's.
Hi u/bencxiktheyounggod, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
LRU?
didn't found any books?
These are all old ways of tracking. A better way to automatically get tracking across your application would be to use the redux pattern and log actions
Hi u/Mike-Harper, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
**\[ Decline ? \]** *(click)*
What a fantastic in-depth article! Loved every word of it.
&gt; LRU stands for 'least recently used'. It is a computer algorithm/technique used to manage data in a cache. When a cache becomes full and you need space for new things - you discard the least recently used items first (things you haven't used for a while but are in the cache consuming space). https://asktom.oracle.com/pls/asktom/f?p=100:11:0::::P11_QUESTION_ID:7828371300346568672
Hi u/BlueDaBess, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; If you think it's as simple as just searching for _'onUserRegistered'_, you'd be wrong. /facepalm No, it‚Äôs a lot easier than that. The fact that this seemed like the logical first step for debugging an event-based system lends credence to my theory that your debugging skills are just shit. In a pub/sub setup, you‚Äôre already keeping track every subscriber, or you‚Äôd have no way to publish to them. If want to know what‚Äôs subscribed, just log your array of subscribers. In fact, pretty much every debugging-related headache in an event-based architecture can be solved by proper logging. That is one of the greatest strengths of this pattern, in my opinion. You can output a human readable response to every message that passes through your event bus, and you can log your complete state with every dispatch, too, if you feel so inclined. &gt; "Well don't write event-driven code that way" is unicorn fantasyland bullshit. No, it isn‚Äôt. Don‚Äôt write bad code. Just don‚Äôt do it. It‚Äôs that fucking simple.
&gt; No, it isn‚Äôt. Don‚Äôt write bad code. Just don‚Äôt do it. It‚Äôs that fucking simple. When you join us in the real world, let us know how all this goes for you.
&lt;3
Dammit I *just* finished learning ES6
I‚Äôm 32 and just learning. I haven‚Äôt started applying for jobs yet, and I still host on github. It‚Äôs simple and makes version control *that* much easier. Plus, it‚Äôs free.
The article that keeps on giving. This is the kind of content I like to see!
well, ES10 is not as significant as ES6 in terms of new language features but it does add several useful things.
Domain not found. Is this domain new?
Right. But good coding is writing code that's simple and readable (among other things). It doesn't matter if JS classes compile to regular JS prototypes, etc. Who cares? It's cleaner and easier to read (which I guess is what you implied?). Why not use classes?
Hi u/bhupender_88, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Old, inaccurate article https://www.reddit.com/r/javascript/comments/bs4r7r/the_complete_guide_to_es10_features/
Hi u/waterloo304, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Incorrect. With events you're communicating between your modules using a common interface, the events interface. Using a common interface vs importing is the definition of decoupling. "Coupling" to a common interface IS decoupling. That's the very definition of it.
Since its behavioral tracking, how do you track page scrolls or button clicks in an A/B testing scenario with log actions/redux pattern ?
I think someone should pin that one, I have seen this too many times now.
That's naive. With events you're replacing a set of dependencies on an object with properties with specific names, types and structure, to a pubsub with events with specific names, types and structure. The coupling isn't just to types, or objects, or methods. You can easily be coupled to "strings", when those strings represent categories within your code that affect behavior, transition application state etc. If it was as easy as "just have a common interface", then... I can replace all coupling with a common interface. I call it the eval() interface. No longer refer to anything at all, just pass strings to eval... You're decoupled now! Enjoy.
Actions are typically closely tied to behaviors when organized correctly. Also you could create actions for global events like clicks and page scrolls if you wanted without any extra work. A / B testing would be simple by having an action that contains the flights that are enabled so you can correlation with A / B when querying telemetry
Does it work in Chrome? Or is it somehow specific to iOS and not the browser?
Hi u/_TrundleTheGreat_, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It does have "real" classes. It just implements them via the prototype pattern, just like Ruby and Python.
This looks incredibly cool.
Thank you!!
Bruh
bruh ü§ôüò§üî•üî•üò´
Bruh
bruh ü§£üòéüò´üò´üëå
Bruh
Hey I was really interested in this but the link is dead. Know if I can find the article or code somewhere else?
Sorry about that. Hackernoon is currently migrating a lot of theirs content off of medium and a bunch of stuff is broken. You can find the original article here: https://medium.com/@mariotacke/building-a-real-time-ascii-camera-filter-in-plain-javascript-5b6e1f2f95f9
Sorry about that. Hackernoon is currently migrating a lot of theirs content off of medium and a bunch of stuff is broken. You can find the original article here: https://medium.com/@mariotacke/building-a-real-time-ascii-camera-filter-in-plain-javascript-5b6e1f2f95f9
What I mainly wanted to say is that adding a new tool to your toolchain could be overkill depending on your needs. If you control what your doing a simple in-memory abstraction could be sufficient. Maybe it's not enough clear in the post. Any idea about how I could rephrase it to make it clearer?
Just to add to this since I like to track mouse movements and scroll in some occasions which are much more frequent and would make no sense for them to be sent in different requests: When a user visits a web-app of mine a few events happens in the first seconds such as image loading, dom/libraries load, resize, some mouse movements, they are filtered and grouped in a single request with the event descriptors. When an event happens it is debounced at it's starting point, so that when the first event happens it will wait for a specific amount of seconds before sending the request, which will include all events that happened in this time frame. Since mouse movement / resizing / scrolling can be very constant (i.e. 30 calls a second), you will also want to debounce the event itself, so that when an event is called, it's update is 'postponed' for at least 1 seconds so that it doesn't flood the event pool with 200 mouse events in a single request, for example. Important events like outside navigation (links) and window.onerror events are never debounced and force the tracker to send the event array immediately. The event list is very simple, it's an array with objects constructed like the following: {eventType, ...eventData} I usually like to wait a minimum of 5 seconds between each request and 2 seconds between repetitive events depending on expected traffic. If you have a lot of visitors, make sure your web server connection closes before the request period so that the connections count doesn't bubble up to the millions.
I don't want to be too hard on you since you clearly went through some effort to write your article, but hand-rolling an app cache to avoid Redis feels to me similar to hand-rolling regexps to avoid using babel. In my experience, normally you either need a real cache (in which case, the industry standard is to use redis/memcached/nginx/etc) or you can do without one. To be clear, use cases for in-memory caching DO exist, BUT they're usually very specific/niche. For example, in import scripts, where you'd normally exit the program within a couple of hours at most and would likely never run into an OOM as a result. More generically, memoization is a thing that does come up from time to time, but again, typically within a "vertical" context (e.g. per request or per cron job) so one can use a WeakMap and have the JS engine GC. What you don't want to do is have a hand-rolled "horizontal" global app-wide cache that lives forever, because as I mentioned before, if you don't invalidate it properly, it may eventually result in a server mysteriously crashing every couple of days.
Hi u/boofpack123, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Love the tree-like structure- that seems super helpful to avoid repetition and keep context close to where it matters.
This article, somehow, is continually crashing medium for me. Others work fine. Just FYI. Can‚Äôt make it past the first section.
Optophone for marking private methods looks ..., I‚Äôm glad that TypeScript doesn‚Äôt use that or else I would be constantly puking.
Is there a quick TL;DR for those not wanting to read the whole article?
/r/whoosh although a nice message of encouragement.
Yeah, the first line of the article is &gt; No, not really. (It depends.)
A more explicit conclusion further down: &gt; According to RAIL, we have 100ms to react to user interactions, which means that even on the slowest devices, you can postMessage() objects up to 100KiB and stay within your budget.
Thanks for your typo checking
it should now work in all browsers (except lynx) with mouse or touchscreen
Pretty neat. Not sure if this is intentional, but trying to scale after rotation seems to require you to drag your mouse the original un-rotated direction. For example if you flip the box upside-down, then the left/right handles feel backwards. Dragging outwards shrinks, and dragging inwards grows.
Sick, thank you
Really cool. I noticed something, not related to the api or the library itself. The examples at [https://daybrush.com/moveable/](daybrush.com/moveable) show some copy/pasting going on in the site design. The "resizable" widget example has the same description as the "draggable" example. I'm sure it was supposed to have its own description like the other widgets.
I'm very interested in your CSS idea, but I wonder if it would need to 'totally redo' css or if being able to apply CSS as you describe with parent and child elements. &amp;#x200B; Could I have any really simple examples of how styles would be defined on the parent and child elements in ways which would help component interchangeability?
I have to agree with the others, you don't really seem to understand event-driven programming. You claim that you've never seen a real-world production code where you can always rely on events to be subscribed/unsubscribed in logical places, but what you've described is called an event bus, and it's used all over the place. Likely the reason why you've never come across it is because you've never bothered to look into it. Your whole argument is predicated on how it's difficult to tell what's going on between a publisher firing off an event, and a subscriber responding to an event, because you don't know who the subscribers are and it can set off a chain of behaviors that you can't easily debug. Putting aside that there's usually a way to enumerate all the subscribers to an event, what you've described is basically how event-driven programming works. If I have a button on a page and it fires the click event, all my subscribers should respond to that event, but none of them should know about the others. To figure out which subscribers listen to which events on the publishers, the hooks should all be centralized in the event bus. If you need to debug any events, the event bus is where you should start at. If your subscribers are stepping on each other's toes (touching a shared resource, relying on a certain order), then that's a huge code smell that you're not doing it properly. The payoff is that you can write self-contained components that only emit or respond to events, but is otherwise unaware and independent from the rest of the world, and your app is nothing more than a collection of independent "islands" that can only send messages to each other via boat, with one company (the event bus) controlling all incoming and outgoing boats. You're trying to form a mental map of a code base by trying to shove your understanding of procedural code into an event-driven architecture, which is why you're having such a hard time getting on with it. You're trying to find that "single code path" that only flows linearly from one function to another before ending, and then getting frustrated when it fans out. If you treat all components of the app as their own isolated islands and stop trying to think of it as a single code path only flows linearly from one function to another before ending, you'll have a much easier time understanding it.
Pretty neat. Rotation on mobile is a little janky. Beyond a certain size, if your finger is too far down the screen, page scrolling will happen simultaneously. Didn't seem to be an issue once resized to be smaller..
Thank you for reporting the bug. I'll check it and fix it right away. I'll comment again if I fix it.
Thank you for reporting the bug. I'll check it and fix it right away. I'll comment again if I fix it.
I'm sorry. I forgot to write descriptions because I was in a hurry.I'll fix it right away.
Hi u/mansodelvalle, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/rustproj, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Please i need recomendations
Really cool! Found a potential bug of mobile though. If I resize, then rotate about 45 degrees, when I try to resize again, it becomes bigger when I pinch instead of smaller.
Makes me wonder if serialization would be a lot faster then normal if using something like turbo-json-parse and a more well defined stringify. Still a really good article.
Interesting Can you please tell me more? What does happen when you scroll? What device are you viewing this article from? Do you see the embedded tweet and the embedded stackblitz code? Thank you
üßê
Wow this is perfect. I was actually working on similar feature for a project in my company. It was very difficult and tough. Imagine this being used in a table of records. It will prove very efficient. Good work!!!
Hi u/babuaaa, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; you don't really seem to understand event-driven programming Sorry mate, I fully understand event driven programming. I've worked with it in enough production code-bases that I know acutely how much more cognitive overhead it requires to trace the execution of code. &gt; If you treat all components of the app as their own isolated islands But they're not isolated islands, now are they? That's the entire point of it. X happens on island A, and then Y happens on island B. Well it turns out that when you *don't* want that to happen, it can be a massive chore to figure out why, and you actually end up with more tight coupling than you would have gotten with a simple procedural path. The extent of event-driven programming I use is when working with Angular components. They accept inputs, and they emit simple outputs. That's it. Their scope is limited to parent-child and from all practical standpoints, they behave the same as if I had simply passed in callbacks as arguments rather than emitted events. This keeps them easy to reason about and debug. But Angular code-bases that are pure Observable jungles are some of the most brittle, fragile, and convoluted applications I've ever worked on.
Thank you :) it was a demo problem. I fixed the demo right now. Please check again.
I fixed the description. Thank you :)
Thank you :)
How about now? The demo can be fixed so that the part can be fixed.
Thank you for using it :)
I think you should update the README in English first, so the visitors know what the repos does.
aw heck i literally just spent a decent bit making this in react last week for a project, wish i found this sooner!
Thank you :) If you need any functions, please report the issue. I'll add it.
yeah, the object will deform when you resize &amp; rotate it out of bounds: [looks like this](https://i.imgur.com/FmJAfMh.jpg)
Thank you SO much! I spent literally all day trying to implement this with onTouchMove and absolute positioning, and I have some hilariously janky branches of my code saved, and then tomorrow morning I‚Äôm going to have significantly less jank. Thank you!!
&gt;yeah, the object will deform when you resize &amp; rotate it out of bounds: Oh, thank you for reporting the bug. That's the case with the page enlarged. I'll fix the problem soon. If the Transform is distorted, it is a phenomenon that is caused by the accumulation of the Transform, although it should be considered a little more.
Hi u/infocamblog, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thank you :) If you need any functions, please report the issue. I'll add it
The Resizable and Scalable demos look like they're rotating back and forth on the horizontal plane like an optical illusion.
Works great now, thanks!
What the fuck is that thumbnail
As a user of programming language - someone who writes code - if I go with static typing I‚Äôll prefer the syntax which is more convenient as input and output. It is way easier to write and to read at code rather than have comments if any kind.
Hi u/GrouchyMachine, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Private variables do not add new functionality, they exist to prevent the programmer from making mistakes. Naming variables with underscores is already good enough of a deterrent to use them outside of the class, so adding a language level feature seems redundant. Especially if there is no additional support like 'friend' classes or 'protected' members.
Yes PWA seems to be suitable. I didn"t know they are now on dektop ! And yes storage could be a problem since the purpose of this app is to be standalone and offline (like when you download a movie on Netflix)
Triple chain is indeed a rare necessity, but double chains are very, very common.
Well technically you can do `{b:{c:{d}={}}={}} = a3`. Good luck passing that `d` into a function on the same line though :)
Right, and the reason using \`0\` rather than \`null\` in common is just because it can reduce the size of code.
Hi /u/ArystonWebsolution, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/rishabhshah123, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Actually, it is equal to the following snippet: ```js switch (action) { case 'E': state = _next(0, 1); break; case ';': state = _next(1, 2); break; case 'L': state = _next(2, 3); break; case ' Œµ ': state = _next(0, 3) break; } ```
Dunno what to say, based on what you've said so far, either you don't have much experience with it and you're pretending that you do, or you've been using it wrong all this time and just don't realize it. I use the event hub pattern all the time in Unity and on small to medium web projects and I don't run into any of the issues you mentioned, so either I'm a programming genius (I'm not), or you don't really have any idea what you're doing. So in other words...git gud?
Just some feedback on the site; its incredibly heavy and slow on resizing.
Is there any specific benefit in using an array to store the tetrominoes rather than just regular bytes?
Published an NPM library which allows you to create a [README.md](https://README.md) for your project using the command line. [https://github.com/thidasapankaja/ezreadme](https://github.com/thidasapankaja/ezreadme)
I've been down that track and I also do a lot of typescript development. Basically I think once the size of your code gets to the point where type annotations would be helpful, typescript is a better investment of your time
I think you have a bug with your resize vs rotate behavior. If you resize the box and then rotate it then the rotation appears that the resize is actually a skew operation and then rotating reveals the original box size. Is this intended? Video here: https://streamable.com/2emkl
Thank you for reporting the bug. I am fixing it now and I will reply if it is fixed.
Thank you for reporting the bug. I am fixing it now and I will reply if it is fixed.
Yeah I know. My hunch is browsers don't cope well with lots of masking. I have tried a bunch of ways to implement my design and this is the most compatible way it seems. It loads fast and renders fast, but resizing is slow. Apologies! But it seems this is the best trade-off currently.
I'd be surprised if any userland implementation beat `JSON.parse()` et al. They have been optimized quite heavily.
Hi u/jsther, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/jy0016053, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
damn amazing!!! found a bug, resize vertically then rotate it.
Hi u/iFunktion, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
If you implement trapezoid transformation that would be awesome for creative coding projection mapping stuff. Hit me up if you want some links to working examples, I implemented a janky version recently
Hi u/AlexHidanBR, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
some are cool!
Thank you. I just deployed 0.2.0 and I think I've fixed the problem. Can you check it again?
I deployed 0.2.0 and I've fixed the problem. Can you check it again?
I deployed 0.2.0 and I've fixed the problem. Can you check it again?
I deployed 0.2.0 and I've fixed the problem. Can you check it again?
Oh Thank you, that's an interesting comment. I want to apply any transform if it is a shape implemented by CSS.
it works! will bookmark this for sure
Check out fabric js!
This is very cool!
Hi u/TayDev, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
share this at /r/JAMstack_dev fro feedback ;-)
Project Page (?): https://github.com/d07riv/js3d *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/nikomuneveru, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I've been doing a lot of this kind of work over the past several years. We also used to use tools like Flash and Unity and now do most things with Node/Electron. This is a really great stack in a lot of ways, especially when you need network communication between clients, and WebGL provides more than enough performance for anything graphically ambitious. Anyway, my basic approach is to build the client side like an SPA, using a JS framework/library (React, Vue, etc. Personally I like Mithril) and build as much of it in a bog standard declarative manner. Animations are usually triggered by user input events with CSS so I stick with HTML as much as possible before resorting to canvas. It's amazing how much Flash-style stuff can be done just by toggling CSS classes, which lends itself really well to declarative GUI libs. A Node/Express server handles filesystem stuff, saving logs, data or whatever, and provides a socket server for socket communication between clients if needed. Also to talk to external API servers or to connect to custom hardware via serial, MIDI, Bluetooth, etc. Layouts we usually build by hand from designs. Not sure about tools but some people like things like Figma, XD or Sketch. Personally I don't see GUI layout tools adding much value to the workflow but I guess YMMV. I don't know what you need in the way of packaging but I usually just set up a typical node app with npm and install Electron. Then I'll set up some launcher shortcut (whether we're on Windows or Mac or Linux) that fires off an npm script to start everything up. If we need to update the kiosk remotely and there's network access, we provide them with a key for a git repo and make it easy for them to pull updates, rebuild and restart the app.
i wonder why you would prefer mithril?? ps i have worked with mithrill too
Hey ... how do I use this with React? Am I able to make a component moveable, or is this just for making html elements authored separately moveable? I've yarn added react-moveable and have an image with the className the queryselector in the example is looking for, but nothing is happening. What am I missing?
Just want to comment about how well you take feedback, even with saying you'll add future comments when it's fixed. And well done!
I just find it simpler to work with than any other library. [This article](https://www.reddit.com/r/programming/comments/ccb7fg/mithril_vs_hyperdom/) covers a number of points. Not having to wire up state to redraws or having to use some custom state management solution really simplifies things, especially for these kinds of jobs. You can also use it without a lot of extra tooling (eg, no proprietary template language.)
If you want to use the features of Typescript, you might as well just use Typescript. It's not like you have to use all of the language features at once... Javascript is still valid Typescript.
You're welcome. I like when people clue me in to little stuff like that. Your project looks good.
 don't know how you're using it. Can you show me the code? Write down the code on the issue. [https://github.com/daybrush/moveable/issues](https://github.com/daybrush/moveable/issues)
Thank you. I'll help you as far as I can. Most of the necessary functions can also be added immediately. Just say it. :)
&gt;fabric Thank you :)
Yes, surge was also considered
Thank you :)
Hi u/Dannick_Stark, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Can you de-select the handles so that just the object is visible?
Hi u/Dannick_Stark, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
If you're going to write code used be other people, use both. It's much more useful to have type safety through the generated .d.ts files, and have the accompanying JSDoc so you know what you're looking at.
And the crowd goes mild
Setting target to null can make it invisible. ```js moveable.target = null; // or &lt;Moveable target={null} /&gt; ```
man, I gotta say, I hate the lighting effect, you can't use the spacebar since you can't see the bottom
Hi u/joshua0308, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Agreed, although you can take it as a kind of 'advanced' mode, like when chess masters play without a chessboard!
Hi u/bgltracker, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; If I'm trying to build a mental map of a code base to understand what's going on, it absolutely is a logical first step. It's IDENTICAL to finding all references to a function. You went from arguing that tracking subscribers through the source code isn‚Äôt a great way to determine how they‚Äôll behave to arguing that it‚Äôs the most logical way to get a mental model of a code base. Which is it? Of course you‚Äôre going to struggle with debugging event-driven systems if you refuse to admit to yourself that you don‚Äôt know where to start. Of course you‚Äôre going to find it confusing to build a mental model of an event-driven app when you insist on modeling it at a much lower level than is necessary. &gt; And if you think logging the subscribers tells you sufficient information about their surrounding context in all cases, I have no idea what world you're living in. I‚Äôm living in a world where I develop and sell diagnostic solutions for a number of complex event-driven systems, such as CAN. Systems where you‚Äôre dealing with dozens of hardware-based modules, most of which are closed systems that know nothing of the existence of each other, and yet they still manage to work together with incredible precision thanks entirely to the fact that they‚Äôre able to send and receive messages over a common bus. If you‚Äôre still incredulous that events can provide adequate information about themselves to describe a complete and accurate picture of the context that their execution depends on, then I think it‚Äôs safe to say you don‚Äôt really know much of anything about event-driven programming, because that‚Äôs kind of the whole point of using an event-driven approach in the first place. &gt; When you join us in the real world, let us know how all this goes for you. It‚Äôs going amazingly well. I‚Äôve been self-employed for several years now and I wouldn‚Äôt trade it for anything. I‚Äôve got the freedom to explore my hobbies and the ambition to make a living off of doing what I love.
I'm an idiot, never mind! I'll message you with my use case when I'm further along!
The original post from a couple days ago featured tetris in the dark, I thought it was a cool idea. The light radius is meant to get lower the higher your score is. I could make an option to turn it off, but eh there's billions of Tetris games out there already.
You can do any trapezoid through matrix transforms. Here's the best resource I could find, including public domain example code franklinta.com/2014/09/08/computing-css-matrix3d-transforms
Project Page (?): https://github.com/eguneys/jsgames *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
LinkedIn.js
[removed]
Wow. I think this function will really be an amazing one. I'll add it to the next function.
Hi u/vkDeveloper85, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/bigmamapr0, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
No problems! I actually have used it in several projects. Takes a lot of time off of coding for canvas manipulation.
There is definitely a difference because fabric is canvas and moveable is css. Is there any function you want in moveable? &amp;#x200B; In fabric, group is a function that I want to add.
Handy tool. Love it. Showed it to a friend just an hour ago. Would recommend again. 10/10
Make the down arrow move the block down slightly faster instead of rotating the current piece
Reminds me of what deno is doing. Deno is TS and JS ready out of the box, this seems to be JS only. Both written in rust, so i assume they both use the same rust libs (tokio etc)
Yeah. Here at work we have a bad connection sometimes. This is helping me not missing the internet connection so much lol
Hi u/HolidayInternet, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
One recurring problem I find is people dropping silly amounts of useless hashtag shit into everything they write in some weird attempt at being more relevant or something.
Hi /u/bigmamapr0, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I got the idea from this post: https://www.reddit.com/r/javascript/comments/ccqn96/tetris_turns_35_to_celebrate_i_created_my_own/ I had a large pile of rendering and physics code that I've been working on from time to time, never had a good use for it. Not saying this thing makes much sense either, just wanted to see how much time it would take to make something playable from the code I had.
Hey. I was using mobile and the swipe made it difficult to play after the 4 block. I would suggest longer swipes moves the block more than one position.
You definitely get more fine-grained control in JS animations but the downside is that the animations are operating on the main thread and could cause UI slowdowns. CSS animations operate on a separate thread in most browsers now, freeing up the main thread for business logic. Also there are some rudimentary events that are fired by CSS animations now: [https://www.w3schools.com/jsref/event\_animationend.asp](https://www.w3schools.com/jsref/event_animationend.asp) Still, awesome work on the project!
Nice!
This is super useful. A great way to browse through APIs looking for features I don't know about yet.
Pretty cool tool!
Hi u/OdinHatesNickelback, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I suck at programming
When on earth was this written... First example could just be template literal strings which are a native API.
But you anyway have to recompose the template literal string, native "API", multiple times, right? Its not about writing it in a way which will produce less errors. One would realise the concern if one contributes in huge repositories
Not really `const MakeAString = (time, task) =&gt; \`cron-job-task-${time}-${task}\`` &amp;#x200B; Boom. Done.
Awesome, love it. Would be nice if I could disable the spacebar scrolling feature as it conflicts with actually writing spaces, but I think I'll get used to it. Gonna recommend this to my colleagues! Another thing would be to have Vuetify in there, but I think their docs are not as searchable as other docs. Again, nice tool! Thanks for making it.
Lodash has some functions that can greatly simply object/array traversal, but it's another library to pull in and has its own API that needs to be learned. It was great back in the day when the native Array/Object functions weren't as fleshed out, but nowadays it has limited appeal depending on what you want to do. In most standard cases, the native functions are enough and lodash is not needed. A good example is looking at the article you linked. I'll skip the first point about creating functions by using a template, because that's a really edge case and even then, I wouldn't do it that way. The second point about flattening nested arrays can now be done using the native [flatMap](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap) or [flat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat) functions. The third point about sorting is more succinct than the plain JS version, but it's not a world of difference: ``` list.sort((a, b) =&gt; a.name.localeCompare(b.name) || (a.age - b.age)) ```
Just today, unfortunately. The author is really behind the times.
I really, really like Kapeli's [Dash](https://kapeli.com/dash) for this if you're on OSX. I've encountered maybe two or three situations where a standard or custom Docset didn't exist for what I cared about in the last 4+ years, and I am a pretty eclectic developer.
Hi u/FungoGolf, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
You should post this on repl.it/talk/share!
If you want to learn about this I would look at open source projects that use JS. Just go to their GitHub pages and look at file structure and source code.
Some (minor) code review: Instead of counting up in the loop, you can count down from the smaller of the two numbers until you hit one to test the candidacy. The second thing that you can notice is that there is a built-in operator to check the remainder, the modulo operator. If it returns 0 then there's no remainder and your number divided cleanly. Instead of a for loop for this sort of a problem, I'd personally rather see a while loop since I think that simplifies down the overall code. However, this is really down to personal taste so I don't really think it matters all that much. However, there's really no need for your 'i' counter variable, since you can use your 'gcd' variable as the current candidate for testing. Third thing, it's generally bad practice to just log out an exception rather than throw the exception. Bad input is bad input, so I would personally `throw TypeError` rather than logging to the console and returning undefined. This could be especially bad in prod environments where you're trying to debug some issue but you're getting spammed with messages that you really don't want to see, and overall this gcd function will silently fail and lead to hard debugging in the future. For example: const curGCD = gcd(someString, someKnownValue); processResult(curGCD); .... curGCD.toExponential() // TypeError, undefined has no properties With all this in mind, here's a simplified version minus exception handling for bad input function gcd(val1, val2) { let gcd = Math.min(val1, val2); while (gcd &gt; 1) { if (val1 % gcd == 0 &amp;&amp; val2 % gcd == 0) { break; } gcd -= 1; } return gcd; }
Been going through the code for different frameworks to get a better idea of how things work, but somehow it didn't occur to me that I could also study their code organization approach. Solid tip. Thanks!
I've been to Kyle's course in person before. He is incredible. By far the most knowledgable person in the JavaScript community. I also pay the $40 a month myself. YDKJS isn't fully up to date though, This is PER Kyle.
Hi u/zalam001, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yes, Kyle's latest training materials are through Frontend Masters -- which are all up to date. Plus, this isn't public knowledge (yet), but we'll be sponsoring Kyle's efforts on the new, updated YDKJS books as well! :-)
Awesome! Should be reposted on appscope or another PWA aggregator.
Hi u/ravenrx7, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I agree, it would be far easier to play that way. I kept flipping by accident... This is a neat experiment, OP. Thanks for sharing.
Hi u/ravenrx7, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks for sharing this. It's pretty neat. On a related note, my biggest issue with the lighting is that it prevents me from seeing the all the blocks strewn out in front of the game board. That's a cool effect, but I can't really see it. Just food for thought in case you're interested in further tweaking down the road. Thanks again.
Well aware of the modulo operator. Practically the first thing I devised was the inner function "isPositiveInt" and after using "Number.isInteger" there, I automatically reached for the same again. I didn't think of this ahead of time, but I believe "Number.isInteger" better expresses the intent, though there may be performance issues to consider? Very interesting idea to count down backwards. Thanks for all the ideas.
Hi u/thejakesummers, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Coolest package I've seen posted in a while. I have no use cases at the moment but after seeing this I'm trying to think of reasons I need it.
I've done graphql courses by scott, full stack courses by jem young, testing by kent, hardcore functional programming by brian, designing and animations by sarah. So i can confidently say, the subscription is 1000% worth it. Courses are really really good and high quality.
Thank you :) Tell me if you have the necessary functions.
It's one of those minor things that could go either way in a PR. Personally, I go for the modulo not because of the performance reasons but because it's pretty recognizable for me from other languages and other algorithms, such as checking if a number is even or odd. Either way, it's whatever is easily understood by the reviewer and the submitter and minor nits like that will usually pass in my book because I can understand the code either way
Hi /u/Jaylon561, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/FateRiddle, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/pereVush, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Neat!
Checking changelog when upgrading npm packages used in my project. Had to go to all repos, look for md file or github release page and then scroll to specific version. Would hope for a tool that can parse package.json, filter to show all updated package, display release notes for newer releases
Points accepted. Will try to look at ways without using lodash.
In honesty, there was a time where I was searching and hungry for deeper materials in JS and frontend in general. At the time it fed the need being that there‚Äôs a ton of material, and hosted by a lot of great names (Kyle Simpson, Brian Holt, Douglas Crawford, etc.). In the end though, because they‚Äôre all kind of the same format in terms of sit-down video lectures, it got repetitive and dare I say ... even dull at times. I recently purchased a month again to get some feels, but ended up canceling (again) after I realized I would never really have the time to sit through any of the lessons. Overall, I would recommend trying to find a good personal mentor, creating some goals (check out some of their course outlines), and just using the general internet to hack through side projects of your own. *** Again, personal experience. And I understand that everyone learns differently.
Hi u/Prashant_acharya, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
##r/node --------------------------------------------- ^(For mobile and non-RES users) ^| [^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| ^(-1 to Remove) ^| [^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/bor133/ignore_list/)
Do you have a student email? you can get half off the subscription. Otherwise I really enjoy Will Sentance. He explained many concepts such as declaration, evaluation of functions and closures in 1/3 of the time compared to Kyle Simpson in Deep Javascript who can sometimes get a little too wordy when trying to explain closures.
Awesome tool!
Thanks a tonne for this, that makes perfect sense. I was wondering what you thought of the following: generator.next('E'); /* {value: 1, done: false} */ generator.next('L'); /* {value: 1, done: false} */ This is entirely reasonable. The state machine doesn't allow you to jump from E to L. Would an exception be more suited here? Perhaps that's just down to the implementer.
Thank you for this! I actually was planning on looking for scraping solutions outside of python.
Hi u/m_slobozhan, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Less spaces, more quotes
In the actual content? They've both got the exact same content.
 {"aString":"string","aBool":true,"aInt":6} {aString: "string", aBool: true, aInt: 6} mystery solved good job everyone
Works correctly for me: &amp;#x200B; `JSON.stringify({aString: "string", aBool: true, aInt: 6}).length` `42` `'{"aString":"string","aBool":true,"aInt":6}'.length` `42`
Hi u/Chubbyness, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I have a watched a ton. Definitely worth checking out.
Cool project. Thanks for sharing... A couple of years ago I made a multiplayer tetris with some "additions" to make it more fun (clearing lines send debuffs to other players, like the nintendo one, but made a lot earier :D) Made without any framework or library too, was fun and learnt a lot from it. &amp;#x200B; If you want to check it out [https://github.com/albertodeago/tetris-online](https://github.com/albertodeago/tetris-online)
Hi u/xLupinV, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/cryptdev-, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Valid JSON must have quotes around the keys. The ‚Äújson‚Äù he wrote by hand was invalid.
Hello there, I submitted this to r/codes, but thought it might interest you just as much. Enjoy !
That article only talks about the way Java understands OOP. Other languages have other ideas.
Excellent! Bookmarked
You can get better definition from Wikipedia.
Hi u/lal1212, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53
Not worth it imo, I bought a subscription and most of the videos are outdated and you have to follow along with the free open source github repo anyways.
This is some terrorists technology? ^(/s)
Just found \`monaco-editor\` which is the main editor from vscode, it might be close to what I need, but I am still looking into it.
Wow, that guy programs for decades and STILL SUCKS while attempting to organize his code. Worst thing is - he's not ashamed to write an article full of crap without ever considering that the issue lies in him, not in concepts that he misused.
For future visitors - the article doesn't explain what's object oriented programming. Don't click.
Other languages have better ideas.
he actually points out what some main issues with OOP can / will occur in larger projects - nothing more or less.The choosen examples should point out the ugly parts of OOP.
This totally removes the need for Dash, doesn't it?
Yeah, I loved that tool but stopped using it because of out-of-date documentations
Nope, you're good! I like the variety. I wouldn't be able to tell you if it's missing something unless I was aggravated on a project appending something to the prototype. lol
No, he points it out from HIS point of view and HIS projects where the assumption is that he's incapable of making mistakes and that the paradigm/tool are ENTIRELY faulty. It always boils down to the person behind the screen and not the tool. OOP is not for everyone's mental model, it takes practice not to shoot your own foot.
JavaScript had prototype-based OOP from day 1. This would be quite nice, but unfortunately the syntax is really bad and so most people don‚Äôt understand it. The `class` keyword was tacked on to let programmers used to class-based OOP use it.
Relevent: [https://www.youtube.com/watch?v=QM1iUe6IofM](https://www.youtube.com/watch?v=QM1iUe6IofM)
Hi u/piscoster, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I don't know if this is what you want but check out coder.com
I don't want to be rude, but I don't plan to watch a 44 minute video to tell me that the paradigm I'm using for past 20 or so years is bad. If I were to change my mind, tooling and career every time some guy with access to internet labels something bad - I'd be long gone, died from starvation. Also, I never use ONE tool, one software, one database vendor, one programming language - and thus, I really like to combine OO with functional. There's no rule, no law, nothing that prevents me to write my code using a combination of paradigms. People who create these articles and videos make themselves look infallible. I don't trust them. I trust my track record - that thingy where I've got programs I wrote 10 years ago and they are still maintainable, readable, clear and concise. And they make me money!
You can also self host it from their github page
That's amazing... Is not the best tetris for gameplay... but the animation for the breaking row is probably the best i've seen
I just released a small sequential task runner with spinner for terminal node applications: [https://github.com/rap2hpoutre/taskz](https://github.com/rap2hpoutre/taskz)
We've gone full cycle
That could be a problem specially if you're using a technology that have major changes often. You should open an issue on their github!
The spacebar thing confused me too. Why don't you open an issue about this and the Vuetify addition on github?
Dash is a cool tool as well. It's unfortunate it's only available for OSX.
Fuck no.
sounds kinda what [dependabot](https://github.com/marketplace/dependabot-preview) does if you are using github, it will automatically create PRs when a new version of the package is released and have release notes, commits and changelogs which are relevant in the version change.
Watch it or don't, no skin off my nose. Sure, changing every time someone brings out something new or someone says something is bad is madness but equally so is refusing to entertain the idea that a paradigm that's 20 years old may not be perfect. Paradigms evolve, are refined and eventually get super-ceded it's a constant cycle that exists and it exists in every facet of endeavour, not just programming.
Hi u/meceware, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
One of my ice breakers, when getting to know a new team, is to deadpan that I advocate using gitmoji, as I want to be taken seriously as a developer in the year 2019
This. I didn't want to sound preachy and offend the OP, I assume he's fairly new to all this.
Just a heads-up, the industry standard now is Puppeteer. Puppeteer is Google's own offering and AFAIK the only reason Nightmare exists is because it's much older. This probably doesn't matter for you but in case you care, you should know.
Nothing is perfect, things do evolve, but statements that are either black or white is what makes me roll my eyes. I'm not a purist, I'm the first guy who will use a paradigm / tool that helps me spend less time or that helps me make less mistakes, I'm not here to defend OO or to spit on functional programming. I believe we're talking about the same thing, just with different outlook on the current state. There's no way I'll drop OO and start using a different paradigm, but I will entertain the idea to try something different if my approach proves difficult in any area. Cheers man, have a nice day!
chart.js d3.js
They‚Äôre somewhat competing to solve the same problem, but in different ways. Dash‚Äôs offline support has nothing to do with my browser, and the global hotkeys and search profiles give Dash a serious edge, for me personally. I can look up docs in a few keystrokes from any context in a second or two.
So I need to search for the emoji I want to use and copy/paste it every single time I commit code so that I can have a totally non-descriptive message that nobody will understand? Sounds like a GREAT idea! What a time to live in...
Is there already any example available?
[https://github.com/carloscuesta/gitmoji-cli](https://github.com/carloscuesta/gitmoji-cli)
Pretty dope! Is there any use case using nightmarejs to automate tests?
I think it's worth it for this course alone https://frontendmasters.com/courses/javascript-hard-parts/, if you're a beginner this will help you truly understand what is actually happening under the hood when your javascript executes.
Is not Nightmare been discontinued? &amp;#x200B; I think Puppeter is the one to go
Agreed. For complex use cases Puppeteer works better. Took nightmare as example since it is much simpler and does the work.
I'm not sure whether its discontinued. I have mentioned Puppeteer as well. Used nightmare as example just for starters.
 Hi all, I would like to introduce iwideo, the library I created for displaying background videos on web pages. I looked for a small no-dependency library but almost each one depended on jQuery. So I created the library that can be used just for that. The library can be used with self-hosted videos as well as hosted at Youtube and Vimeo. Cheers,
I don't think improving accessibility for just a few people is a reasonable argument to use tabs. Can't they just use some plugin?
Are there widely used ways to generate WASM other than emscripten (which already provides glue code)? I tried to use webassembly.studio to get standalone modules, but it was too much pain to set it up locally (have to build the whole LLVM toolchain manually).
Very nice read and argument.
/r/programmingcirclejerk loves this
Hi, Im relatively new to Javascript (well this iteration of it, as I learned the old Javascript many decades ago and it's completely different now). I am trying to learn it as it applies to Web Dev (Front End). I haven't been looking into schools or institutions, etc. - just online resources, Youtube tutorials, for example. My issue is that it seems to be, at least from what I am seeing right now - a bit removed from the creative side. Everything I've seen so far isn't talking about how it integrates into website or webpage design. I just want some kind of reassurance that it fits, because the learning set seems huge and I have to focus in on what I need to do what I want to do. Can I get some kind of help as to which way to go here - or is it that I am just too early trying to determine what Javascript's relevance is in Front End Development? I felt creative throughout my HTML and CSS brush up - but so far I don't see or feel any creativity in these Javascript courses - feels like straight up math or mundane programming tasks. Is that what Javascript is in Front End Dev - just some extra duties to do that take you out of the creative process so you can process data? Or when can I look forward to it feeling like I am doing something creative? Im sorry if this seems rambling - I am very confused at my level.
Great points. Those additions are about as awful as the stupid `#` ‚Äúprivate‚Äù class syntax. Idk what these people are thinking.
it now makes sense, thank you for exlaining
&gt; In how many projects did you use the pattern *make several parallel requests to identical endpoints for the same data*? The Microsoft Azure Portal, for one. When running Log Analytics queries in the browser, the same request is sent to multiple API endpoints; whichever one returns first "wins." It's probably not useful for the majority, but that's not a good reason to not have it at all.
This tool helps a lot to create a "start code" to begin with Puppeter. [https://chrome.google.com/webstore/detail/puppeteer-recorder/djeegiggegleadkkbgopoonhjimgehda](https://chrome.google.com/webstore/detail/puppeteer-recorder/djeegiggegleadkkbgopoonhjimgehda) You just start recording, do the actions you want to auto and then stop.
Well, you can write actual bytecode in the textual format, although that‚Äôs obviously fairly low-level. &amp;#x200B; I‚Äôm not sure how widely used they are at this point, but there are more and more high-level languages getting WebAssembly backends. Rust and Go officially supports compiling to WebAssembly, and there are a lot of independent projects out there, including some that translates JVM bytecode to WASM. &amp;#x200B; I‚Äôm not sure what the glue code part of your comment was related to: if the compilers, then I personally prefer a compiler to let me write the code to include the module, it‚Äôs not that complicated; if the application, the JavaScript provided is not meant to be used in production (although nothing stops one to do so), only to let the user quickly open and test a module, without having to write code.
Nice article, I never heard of this proposal and agree with the conclusions. I like the ‚Äúlibrary-land‚Äù terminology. One thing, though, the Promise.any implementation example in 2 lines is a bit too compressed ‚Äî adding some lines might make it easier to read.
Thanks for this!
I think Nightmare's current stated purpose is essentially to offer an implementation that uses Electron, for whatever reason. Phantom might be what you're thinking of, as they notably discontinued themselves very quickly once Puppeteer was released.
In not sure about that. I have been using it just to scrape data. I'll have to dig about that a little.
Before anybody gets too worked up, these methods are still just proposals and may change significantly. https://github.com/tc39/proposal-promise-allSettled https://github.com/tc39/proposal-promise-any
Hmm I can‚Äôt find where it will take off half my subscription.
Yep, and if you anticipate the client having a spotty internet connection, sending a couple of parallel requests rather than the try-retry pattern may lead to a better experience for the user.
Perhaps consider that others have use cases that you don't. You're more than welcome to contribute to the TC39 discussion _in a meaningful way_.
I'm one of the DevDocs maintainers. We are currently working with freeCodeCamp to make sure all maintainers are able to deploy updates, because at the moment none of us can. After that is set up we'll update all outdated documentations. There is also a [PR](https://github.com/freeCodeCamp/devdocs/pull/986) by me to automatically check for updates periodically so in the future we'll be able to know which documentations are outdated without requiring users to tell us when a documentation is outdated.
fwiw, i'd say that race and any have the same basic problem, if you think it's a problem to have functions you're not likely to ever use for any reason whatsoever except very special cases
Are you disagreeing with having private members in JS at all? Or just the syntax? Do you think it should be a different symbol? Do you understand why it's an `#` and why we cannot use the `private` keyword? Here is a good read on why people decided on doing it this way: [https://jamie.build/javascripts-new-private-class-fields.html](https://jamie.build/javascripts-new-private-class-fields.html)
Cool! Always appreciate it when people try to make things easier for other devs.
Nah, stop looking, that's the one. You can enable workers for most languages. I use it to edit js and graphql in the browser.
Ah, yeah, that would explain it. I'd forgotten that point - the JS object is valid, but would be invalid in JSON. Thanks.
How would you replicate `Promise.all(...)` without it being part of the native API?
I‚Äôm not debating the validity of having private members. What I disagree with is the symbol. Yes I‚Äôve read the proposal and argument for ‚Äú#‚Äù, I still think it looks awful. Perhaps consider that others have opinions that you don‚Äôt.
Private members are valuable. It‚Äôs the syntax I disagree with. I read the long thread that lead them to ‚Äú#‚Äù but I just personally think it looks awful. An arbitrary keyword would have been better imo. How do you feel about it?
Hi u/nousernames2, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
You can chain them quite easily.
 I think this works. const PromsieAll = ([first, ...rest], acc = []) =&gt; rest.length === 0 ? first.then(val =&gt; [...acc, val]) : first.then(val =&gt; promiseAll(rest).then(vals =&gt; [...acc, val, ...vals])
I feel like it should be like proposed (to have distinct syntax to denote private members), or just not have private members at all (because it's Javascript - if you want stuff like that, just use Typescript). But like, it literally states in the article why keywords would not work in practice. To quote the TL;DR: &gt;We need to use a `#hashtag` for private properties because the alternative of using standard property accesses would create unexpected behavior and result in huge performance problems.
The big sticking point is the idea that ‚Äúto have truly private fields you must allow public fields by the same name‚Äù That‚Äôs really what pushed them into the corner. But why is that so important? It reads like we‚Äôre storing credentials in the code. It‚Äôs just a library API. If someone forces access to a private member and encounters an error why is that bad? The mere proof of existence seems inconsequential if usage of those private members are restricted. Anyone can open the source code and identify private members manually. Yet they are still restricted from using them. So why place such high importance on completely obscuring their existence? To the point of requiring a horrible new syntax? Sorry for being so opinionated on this but I find modern JS to actually look very clean. And this addition just makes it look messy and confusing.
Perhaps respectful would have been a better word than meaningful. Saying "Idk what these people are thinking" is rude at best.
Hi /u/ChronSyn, this post was removed. As stated in the [AskJS guidelines](https://www.reddit.com/r/javascript/wiki/index/askjs), AskJS is not for help or support. This is your only warning. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I understand the reasoning. But to me it comes across as trying to have their cake and eat it. I agree with you that it doesn‚Äôt belong in JS. essentially the hashtag boils down to: Because we don‚Äôt have a typed language we can‚Äôt be sure what property (private/pub) were accessing. But we want to simulate a typed language so we‚Äôll introduce this hashtag business. It just seems silly to me and imo leads to an ugly and cluttered syntax. If you want typing go to typescript. If you insist to allow private members (a relatively advanced language feature) then couple it with having the author have to perform type checking or deal with the consequences. Idk I‚Äôm not on the committee. It is what it is but I still find it ugly and distracting.
Hi u/maxmahesh, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Your Weekly /r/javascript Recap **Wednesday, July 10 - Tuesday, July 16** Top 10 Posts | score | link to comments | --|--|-- [Someone posted a video showing off their pseudo desktop UI on r/webdev and I tried to make my version of it as a self challenge.](https://gfycat.com/brokencreativelamb) | 1,007 | [77 comments](https://www.reddit.com/r/javascript/comments/cbizuk/someone_posted_a_video_showing_off_their_pseudo/) [Tetris turns 35. To celebrate, I created my own "Tetris in the dark" version and wrote a tutorial explaining the source code. No libraries. No frameworks. Just vanilla JavaScript &amp;#40;a dying art?&amp;#41;](https://medium.com/@js_tut/tetris-turns-35-cfcf04c4f2bb?source=friends_link&amp;amp;sk=f08589cc1c5387c29145cd8b80964112) | 323 | [65 comments](https://www.reddit.com/r/javascript/comments/ccqn96/tetris_turns_35_to_celebrate_i_created_my_own/) [Moveable! Draggable! Resizable! Scalable! Rotatable!](https://github.com/daybrush/moveable) | 263 | [53 comments](https://www.reddit.com/r/javascript/comments/cdq838/moveable_draggable_resizable_scalable_rotatable/) [All-in-one API documentation browser with offline mode and instant search](http://devdocs.io) | 240 | [17 comments](https://www.reddit.com/r/javascript/comments/cdzty6/allinone_api_documentation_browser_with_offline/) [abcjs - javascript for rendering abc music notation](https://abcjs.net/) | 222 | [12 comments](https://www.reddit.com/r/javascript/comments/ccg6no/abcjs_javascript_for_rendering_abc_music_notation/) [Hermes: a lightweight JavaScript engine optimized for React Native on Android](https://hermesengine.dev/) | 199 | [12 comments](https://www.reddit.com/r/javascript/comments/cbx8ah/hermes_a_lightweight_javascript_engine_optimized/) [üåü Announcing ‚ÄúQuark‚Äù ‚Äî A Software sketchbook for your projects ‚ö°](https://quarkjs.io) | 158 | [110 comments](https://www.reddit.com/r/javascript/comments/cc9dfe/announcing_quark_a_software_sketchbook_for_your/) [Angu: A small, zero-dependency library for implementing mini-languages in the browser or NodeJS](https://github.com/jsdw/angu) | 133 | [30 comments](https://www.reddit.com/r/javascript/comments/cd2iey/angu_a_small_zerodependency_library_for/) [Create a Simple Cache System](https://dev.to/romainlanz/create-a-simple-cache-system-47om) | 114 | [23 comments](https://www.reddit.com/r/javascript/comments/cd8605/create_a_simple_cache_system/) [Is postMessage slow?](https://dassur.ma/things/is-postmessage-slow/) | 110 | [10 comments](https://www.reddit.com/r/javascript/comments/cdhsze/is_postmessage_slow/) &amp;nbsp; Top 7 Discussions | score | link to comments | --|--|-- [TC39 July 2019 Agenda: Scroll to section 12 to see if your favorite proposal is getting any love &amp;#40;Optional Chaining for stage 3 discussion!&amp;#41;](https://github.com/tc39/agendas/blob/master/2019/07.md) | 24 | [48 comments](https://www.reddit.com/r/javascript/comments/cck8r9/tc39_july_2019_agenda_scroll_to_section_12_to_see/) [Decouple Your Javascript Using Event Driven Programming Tiny-Pubsub](https://lukewood.dev/posts/refactor_bulletz/) | 78 | [27 comments](https://www.reddit.com/r/javascript/comments/cd69fs/decouple_your_javascript_using_event_driven/) [ECMAScript 2019 and beyond...](https://areknawo.com/ecmascript-2019-and-beyond/) | 23 | [25 comments](https://www.reddit.com/r/javascript/comments/cbtbwd/ecmascript_2019_and_beyond/) [Framer Motion](https://framer.com/motion) | 47 | [25 comments](https://www.reddit.com/r/javascript/comments/cbs654/framer_motion/) [Object-Oriented Programming ‚Äî üíµ The Trillion Dollar Disaster ü§¶‚Äç‚ôÇÔ∏è](https://medium.com/@ilyasz/object-oriented-programming-the-trillion-dollar-disaster-%EF%B8%8F-92a4b666c7c7) | 2 | [22 comments](https://www.reddit.com/r/javascript/comments/cblooo/objectoriented_programming_the_trillion_dollar/) [A Minimal Router for Svelte](https://spiffy.tech/a-minimal-svelte-router/) | 2 | [20 comments](https://www.reddit.com/r/javascript/comments/ccgn8r/a_minimal_router_for_svelte/) [RedditTube ‚Äì An SPA I made for watching endless Youtube videos from any subreddit. Uses Vanilla JS, hosted on Netlify.](https://github.com/bcmdr/reddit-tube) | 63 | [18 comments](https://www.reddit.com/r/javascript/comments/cd42ue/reddittube_an_spa_i_made_for_watching_endless/) &amp;nbsp; Please let me know if you have suggestions to make this roundup better for /r/javascript. I can search for posts based off keywords in the title, URL and flair. And I can also search for comments. If you would like this roundup sent to your inbox every day send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you only want a weekly roundup, use the subject ['javascript weekly'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20weekly&amp;message=x) However, I can do more.. you can have me search for any keywords you want on any subreddit you want. Send a message with the subject ['set javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=set%20javascript&amp;message=200%0A25%2C%20keyword1%2C%20another keyphrase%2C%20last example) and in the message: specify a number of upvotes that must be reached, and then an optional list of keywords you want to search for, separated by commas. You can have as many lines as you'd like, as long as they follow this format: 200 50, keyword1, another keyphrase, last example You can also do ['set javascript weekly'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=set%20javascript%20weekly&amp;message=200%0A25%2C%20keyword1%2C%20another keyphrase%2C%20last example) And you can replace javascript with any subreddit. See my wiki to learn more: [click here](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)
Hi u/swapagarwal, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt;But we want to simulate a typed language so we‚Äôll introduce this hashtag business. It has nothing to do with typing, though ;) Just visibility. Anyway, I think it's ugly too, but I also believe that's just because it's so different. I probably will get used to it at some point if I see it being used a lot.
Hi /u/kenman The AskJS tag was only added recently and when I read it only a few days after it was announced, it didn't mention that it was for subjective topics but implied that it was to be used when a user had a question that wasn't about learning JS. Why is the tag not simply "Subjective" in square brackets? Why risk people seeing this subreddit as StackOverflow V2 because we have an unclear practice?
So we agree it's a usability problem and your solution is to add yet another tool to look up the gitmoji. But commit messages are written once and read many times. So every user now has to install gitmoji-cli or just assume. Instead of just writing BUG.
&gt;This page is unavailable when linked to from reddit.com. &gt; &gt; Please find a less toxic place to spend your time. What a lovely website
Wow, how clear and concise!
You need to email support
PhantomJS was discontinued, which Nightmare I believe used to use. Doesn't seem to be the case anymore.
ü§î "most videos are outdated"? Can you let me know what you ran into that was out-dated? We update our courses regularly. Fundamentals of JavaScript and CSS don't change as fast a frameworks do, so we redo those courses every 2 years or so vs the frameworks courses every 6-12 months. &amp;#x200B; Perhaps you joined before we had learning paths? [https://frontendmasters.com/learn/](https://frontendmasters.com/learn/) \-- this is where we recommend all the latest and updated courses based on topic. Also [https://frontendmasters.com/courses/](https://frontendmasters.com/courses/) lists the latest courses at the top.
Hi u/n8-dev, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Sorry, simulate features of typed languages*. We‚Äôll see. I believe it will be a wart that we can‚Äôt ever revert.
Weird I didn‚Äôt get that warning. I am using the narwhal app though.
Race and Any not Race and All.
Hi, Sorry by outdated I meant that the video is not "up to date" with the Github repo changes. https://btholt.github.io/complete-intro-to-react-v5/ - github repo https://frontendmasters.com/courses/complete-react-v5/introduction/ - video The code between these 2 sources is different the github repo is the one that has several errors that were in the video fixed up / logic made better. I'd say just follow along with the open source github repo since those are more recently updated then the videos.
Why not .all() and.any() OR .allSettled() and anySettled()?
I also prefer writing my own glue code, but with C++ it seems non-trivial if you also want to keep the standard library functionality. At least I couldn't figure out how to make emcc let me compile standalone wasm modules without glue (IIRC it ends up with tons of imports, and no straightforward way to figure out some constants like stack top, since emscripten gets that directly from LLVM when generating glue code). So I was wondering what the use cases for this would be, since it requires standalone modules.
They don't "break", they just look different. Configure those things correctly and reap all of the benefits.
&gt;except there are cases where you can‚Äôt control the indent width of a tab. Can you give an example?
Ah, I see. First of all, you should be able to serve the module files regardless, and simply open the HTML/JavaScript generated by the compiler in the browser directly from the file system. Also, you should still be able to inspect the compiled module object in the console (although not the instance, since the imports are missing). That is, if I‚Äôm not missing anything. I‚Äôm working with more low-level, standalone modules. I was also disheartened when I looked at the amount of JavaScript Emscripten generated, and I hope this will be simplified going forward.
Hi u/Snapstromegon, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; How sensitive we all are to differing opinions. It's one thing to have an opinion and entirely another thing to be a dick about it.
Hi u/oldbus2, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Middleware act as a general extensibility point for the Redux store. Middleware form a pipeline around the `dispatch` method, which allows them to do things like log actions, delay actions, modify actions, return values in response to actions, run other code in response to actions, or even look for non-action values passed to `dispatch` and convert them to plain actions. Some resources to learn more about middleware: - [Redux FAQ: Why use middleware for async?](https://redux.js.org/faq/actions#how-can-i-represent-side-effects-such-as-ajax-calls-why-do-we-need-things-like-action-creators-thunks-and-middleware-to-do-async-behavior) - [Redux Learning Resources: Middleware](https://redux.js.org/introduction/learning-resources#middleware) - My ["Redux Fundamentals" workshop slides](https://blog.isquaredsoftware.com/2018/06/redux-fundamentals-workshop-slides/) have sections on ["Extensibility and Middleware"](https://blog.isquaredsoftware.com/presentations/workshops/redux-fundamentals/extensibility-middleware.html) and ["Side Effects"](https://blog.isquaredsoftware.com/presentations/workshops/redux-fundamentals/side-effects.html) that explain how these are useful - My ReactBoston 2017 talk on ["You Might Need Redux (And Its Ecosystem)"](https://blog.isquaredsoftware.com/2017/09/presentation-might-need-redux-ecosystem/) goes in depth on how Redux can be extended and some of the more interesting addons in the ecosystem - The [React/Redux links list page on "Redux Middleware"](https://github.com/markerikson/react-redux-links/blob/master/redux-middleware.md) points to further articles describing how middleware work and how they can be used
And it‚Äôs one thing to debate with your own opinion. And another to break down and silently downvote over ‚Äúidk what they were thinking‚Äù as if I‚Äôve committed some heinous personal attack.
Or you could, you know, check out the reasoning that's behind the decision in a completely public forum over on es-discuss.
Does Puppeteer have a decent docker image these days? I remember at one point there were some issues...
Especially these days
Unfortunately due to the weak nature of sensitive redditors every single thing I‚Äôve said has been buried. If you want to look below you can see my discussion on the subject. I am well aware of the proposal and lengthy discussion that started last year.
It's great then that you don't have to use the additions. But when you're working with massive code bases, or cross department work, having everything be public quickly obfuscates what's actually useful.
So you downvote me and sass me on not reading the proposal / discussion (which I did, and participated in). Yet don‚Äôt have the decency to even read what I‚Äôve written? I am not opposed to private members. I‚Äôm opposed to the stupid syntax which is predicated on weak supporting reasoning.
The webpage is running "[block-sites.js](https://jamie.build/block-sites.js)" that checks [document.referrer](https://developer.mozilla.org/en-US/docs/Web/API/Document/referrer) for `reddit.com`. Embedded web browsers don't seem to set a [referer header](https://en.wikipedia.org/wiki/HTTP_referer). Funny that it's a javascript tutorial that would be visible if noscript was enabled. The author could have blocked based on the `referer` header to prevent even noscripters from viewing ---- Anyone else bothered by the spelling inconsistencies ([wikipedia](https://en.wikipedia.org/wiki/HTTP_referer)): &gt;"The misspelling was set in stone by the time of its incorporation into the Request for Comments standards document RFC 1945; document co-author Roy Fielding has remarked that neither "referrer" nor the misspelling "referer" were recognized by the standard Unix spell checker of the period." The remark ([public w3 lists archive](https://lists.w3.org/Archives/Public/ietf-http-wg-old/1995JanApr/0107.html)): &gt; &gt; Has anyone else noticed that the HTTP header "Referer:" is spelled wrong? &gt; &gt; That's okay, neither one (referer or referrer) is understood by "spell" &gt; anyway. I say we should just blame it on France. ;-) &gt; &gt; ........Roy
That depends. In Poland we don't have keyboards with Polish characters, we just use US-layout keyboards and if we want to type in Polish diacritic characters we just use ALT + the closest ASCII character. For example to get √≥ you combine ALT+o, to get ƒô you combine ALT+e, and so on. Both left and right ALTs are in use, though it doesn't matter which one (it's a matter of convenience).
i agree the reason for having the hashtag seems dumb
It‚Äôs a shame that because I‚Äôve been downvoted I‚Äôm now rate limited in responding to defend myself üòÇ I waited 5 mins to send this, maybe you could do 15 seconds of reading before blindly downvoting. The crux of the issue boils down to their unwavering insistence on obscuring the existence of private members. As if js is the first language to implement such a feature. Literally every other language with access modifiers throws errors when private members are accessed outside the context of a class. Yet the committee can‚Äôt possibly give into such reasonable standards. No, they must paint themselves into a hashtag colored corner instead. As I‚Äôve stated my opinion is irrelevant. I have discussed this on the public GitHub issue. And the decision has been made. There‚Äôs nothing I can do about it but I don‚Äôt see what is so rude of me to liken this new stupid proposed syntax to another.
It just hasn‚Äôt been specced yet. The default choice was to be restrictive. I believe everyone agrees with you so there‚Äôs nothing to discuss? If you‚Äôre curious why import is so restrictive in the success case, it‚Äôs because not allowing modules to be as dynamic as CommonJS makes a bunch of problems easier to solve, such as cyclic dependencies and static analysis of imports. You can read more at https://exploringjs.com/es6/ch_modules.html#sec_cyclic-dependencies
I know and support the idempotent way of the successpath. I was just wondering if there was a good reason for the failurepath acting the same other than "it's easier to implement". After this post I've got an answer to my github issue and they added it as a discussion to the next meeting. We'll see what comes out of this. Btw: Thx for that link
&gt; Can't they just use some plugin? unfortunately, no, they can't this has been discussed a lot elsewhere in this thread, but i'll try to summarize for fundamental technical reasons, it's not safely possible to convert most codebases back and forth between spaces and tabs -- any such algorithm is liable to damage the codebase by confusing spacebar alignments for indentation, and this problem is the reason that editors don't have this functionality, and these plugins do not exist also in this thread, there's been a lack of rationale supporting spaces after recognizing that there is real objective value to making code agnostic about visual preferences the primary argument for spaces has been to preserve horizontal spacebar alignments, which also in this thread, has been identified as an anti-pattern because of how brittle it is during refactor operations (eg, a rename could break hundreds of spacebar alignments throughout a large codebase, a complete maintenance nightmare) -- so following the best practice there negates the primary rationale for choosing spaces in future projects
They seem to like using symbols as syntax rather than words. That's why generators use \* and not 'gen'. The rationale behind it was that using \* made the syntax clear since you can't have fat arrow () =&gt; generators. And additionally, you can't simply call a generator but have to use the \`next\` and other api methods. Using a symbol made it clear that there were special circumstances around this function. Compare that to async which is just a regular function. &amp;#x200B; With private methods, they similarly went into it with the idea that they were 'special', thus needed special syntax. I would imagine that the JIT would be to optimize calls to a private method, since it can't be replaced outside of its actual object. Whereas if they didn't have the separation of private/public then any method replacement would first have to check if its permissible, and every private method call would still have to check if the method is the same as it was last time.
Cool, thanks for trying to improve the spec. I‚Äôve honestly never even thought about this before!
Sometimes it's really easy to change something like this. I just stumbled on this and tried to understand it so I asked the people that had to know. It's my first time interacting with the spec in this way and I encurrage everyone to join in and to give his/her opinion.
The largest win I see is the ability to separate the business logic of your async functionality from your UI layer. Basically with middleware you don't have to have api requests, real-time listeners, or logging in your components, instead that you just have to dispatch and action. This means your UI components can stay simple. Also that separation does wonders for testing your async functionality.
Because `.all` already exists.
This is more concise, but I'm assuming both have significant performance implications. list.reduce((x, y) =&gt; x.then(a =&gt; y.then(b =&gt; [...a, b])), Promise.resolve([]))
The types of maintenance that we do on the repos are in the package.json version numbers or in the README, but not the actual course code. In React v5 specifically, the only thing that's not in the videos is react-testing-library moved to @testing-library/react. Aside from that, the videos do match up. But agreed with you that we open source all our materials so that everyone can get most of the value by following the website without the videos. Then if you want the videos and chose to support our efforts, they are there for you as well. :-)
OK, I just released two things in the last days! (first time here) \- I would really apreciate a **doc** review for this lib: [https://react-elasticsearch.raph.site/](https://react-elasticsearch.raph.site/) \- And code review for this micro lib : [https://github.com/rap2hpoutre/taskz](https://github.com/rap2hpoutre/taskz)
Dude I didn't even downvote you -- why are you projecting such a persecution complex? &gt; I‚Äôm opposed to the stupid syntax which is predicated on weak supporting reasoning. There are [multiple](https://github.com/tc39/proposal-private-fields/issues/107) [issues](https://github.com/tc39/proposal-private-fields/issues/32) and a [well detailed FAQ](https://github.com/tc39/proposal-private-fields/blob/master/FAQ.md#why-arent-declarations-private-x) on the choices. Becasue JS isn't other languages, and because the discussions has been beaten to the earth, they weren't "backed into the # corner" -- more so that was the most reasonable place given the class syntax as a whole. You're allowed to hate the syntax -- I'm not upset about you not liking something. I'm frustrated that you're purpotrating an idea that better alternateives [weren't](https://github.com/tc39/proposal-private-fields/issues/18) [discussed](https://github.com/tc39/proposal-private-fields/issues/61). You also don't provide any reason why your opinion is even worth a discussion other than "mmnnnnyyeeeeee I don't like it!" And when it's pointed out, you resort back to the line of "Sorry for being so opinionated" -- no one is mad at you for being opinionated. If anything they're mad because you're an ass about the discussion and you're pretending as if you have some other magic answer.
Hi Marc, I might be wrong but: https://btholt.github.io/complete-intro-to-react-v5/async is different from what Brian holt shows on the videos for this same section from what I can remember {!pets.length ? ( &lt;h1&gt;No Pets Found&lt;/h1&gt; ) : ( This part in specific was different in the repo and the video which caused me some confusion.
And there is no .any()? What's the hell going on frontend nowadays.
first of all im not a dude. secondly im not projecting anything - i am pointing out that every single comment i make is instantly buried without affording me a chance to explain my opinion. if that wasnt you then im sorry for accusing you. i have provided reasoning beyond "i dont like it", here it is a 4th time: -- -- The big sticking point is the idea that ‚Äúto have truly private fields you must allow public fields by the same name‚Äù That‚Äôs really what pushed them into the corner. But why is that so important? It reads like we‚Äôre storing credentials in the code. It‚Äôs just a library API. If someone forces access to a private member and encounters an error why is that bad? The mere proof of existence seems inconsequential if usage of those private members are restricted. Anyone can open the source code and identify private members manually. Yet they are still restricted from using them. So why place such high importance on completely obscuring their existence? To the point of requiring a horrible new syntax? Sorry for being so opinionated on this but I find modern JS to actually look very clean. And this addition just makes it look messy and confusing. -- -- i am not claiming to have a magic answer. what i am pointing out is that a predicate of the reasoning behind the chosen syntax is weak. here is the tldr of my question: &gt; why is it so important that a private members **existence** be obfuscated? throughout the entiretry of the public discussion this point is brought up several times. and i dont understand why its so important. you can have private members whos access is restricted and results in an error. in much the same way that a `const` will throw an error if you attempt to reassign it. or accessing a property of an `undefined` object results in one as well. if the purpose of the syntax is hinged on the reasoning that "we must allow public members of the same name in order to hide the existance of private members" then i find it fallacious. what are your thoughts on that point?
The current `.all` is essentially `.allResolved`, and `.race` is `.anySettled`. The new functions would be `.allSettled` and `.anyResolved` if the names were to convey their function more precisely. Either way, `.all` is used all the time, while `.race` and the new functions are rarely ever needed.
I use Digital Ocean for my big site and a web server on a Beagle Bone Black for my small, stupid sites.
I've been using iPage VPX for a several years, though I have no idea what the standards are in the hosting industry so I have nothing to compare it to. I have very little server side, just serving mostly static files and basic database operations. I did run into serious bandwidth issues recently due to large user flow, after setting up cloudflare it seems to be working nicely.
Doesn't Promise.race() solve that?
I'm beginning to think someone will soon suggest multi-threading and fully synchronous execution.
Moving this to the top, since it's the interesting part: A lot has to do with larger codebases, teams, a separation of concerns, and tooling. There are a lot of applications to truly private members and methods, as they are the "nitty gritty details" of how something works, and even DEPENDING on them can introduce bugs and errors. There are loads of literature on why not even showing "oh there's this internal X" is valuable. Here are a couple specific use cases: * Exposing the existence of privates even for read opens up dependent code. You personally may not see problems in this, but when the language can guarantee that cannot happen, you squash a large swath of future problems without having to dedicate some specialized semantic (_doNotTouch style) or forcing developers to jump through hoops (closures, etc). * For tooling -- having auto-generated docs or otherwise from comments and class definitions is a useful and desired feature. Without a dedicated syntax for something, these would be inconsistent across codebases or introduce shenanigans like tools coupled with specific formats. * When reading source! If you don't care about certain properties, you can just skim past any line starting with a `#`. Otherwise you need to grok the entire codebase to understand if you should or shouldn't poke at something. * When using any of JS's enumeration tools -- like `for...in` and `Object.keys`. You would either need to adjust the spec of those, or do some black magic * I really REALLY need to stress the **existence** part -- when you develop code that depends on the inner workings of a class, specifically private members/methods, you're inherently coupling code to implementation and not to purpose or function. If I give a class that is backed by some internal counter state, for example, and you base code off that by reading it, or reflecting it, or any of the sort, then when I make changes to my code, your implementation is depending on undefined behavior. Across library bounds and stuff, this is whatever, but on larger teams and larger codebases, the ability for this to even happen makes changes MUCH harder to detect their effects on the codebase as a whole. Putting all that together, and you start to see + and - to different approaches to private. --- I use dude as a non-gendered term if that's what you mean by you're not a dude, but I respect that Every comment has "sorry for being so opinionated" and "jeeze reddit is so sensitive" -- that's what I refer to when I mention projecting a persecution complex. If I'm misreading that, then sorry. What I understand the "to truly have private..." line to mean is that JS as it currently is would expose through reflection any property that is visible on an object. I don't think the argument of "if you touch private and get an error" is what's at play here -- that's something that you keep bringing up but doesn't seem to be in the discussion of visibility.
Hi u/ovvn23, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; The big sticking point is the idea that ‚Äúto have truly private fields you must allow public fields by the same name‚Äù I think that article doesn't explain it well. &gt; Further, to be truly private, you shouldn't be able to even detect that a private field exists. &gt; &gt; In order to make sure that you can't detect a private field, we need to allow public fields with the same name. &gt; &gt; If private fields didn't allow for public fields with the same name, you could detect the private fields existence by trying to write to a property of the same name It frames it as a matter of secrecy: my class's private fields must be secret because I'm a secret squirrel doing secret things, and if you can guess the name of a private field, then my secrets are revealed and you can steal my secret squirrel acorns. That is wrong. JavaScript is an interpreted language. Private fields cannot be secret in the way the author implies, no matter what syntax we use. I don't have to guess what your private fields are called, because if I have an instance of your object, it means I have your source code, so I can just go look at it if I'm curious. It's about information hiding to make sure nobody else has to worry about your private fields. I have an object with an internal implementation that includes some private fields. You create an instance of this object and you want to add some fields to it. The `this.#foo` syntax means that you don't have to worry about your field names clashing with my private field names. You only have to worry about the object's public API. Encapsulation is preserved. In a word, it's about *namespacing*, not secrecy. Someone's going to come along and tell me that I'm misinterpreting it and "namespacing" and "secrecy" are obviously identical concerns in this context and I'm a bad programmer for thinking otherwise. I understand where you're coming from. But this is far from the first time I've seen confusion because people read explanations like this and think it means *literal* secrecy, in a security sense, not "secrecy as in my code doesn't know what your code is doing, even though obviously I myself can go look at your code and see what it's doing". If we keep describing private fields with the terminology of secrecy and security, some dolt is going to think private fields are actually secret and write `if (userPassword === this.#adminPassword) { showAllTheCreditCardNumbers() }`. ------------- You can already have private fields that are *almost* the same as the proposal, by using a non-exported `Symbol` as a field's key. The key will still show up with `Object.getOwnPropertySymbols(obj)`, but that's a fairly edge case behavior unless your design requires both private properties and allowing clients to assign and enumerate `Symbol`-keyed fields.
Wouldn't it be better to send HTML response *before* starting to clean up memory?
Right, Promise all/race does not affect the outcome of the promises you provide to them. They are simply wrappers that create a new promise and forward along the result(s) of the promise(s) given if/when they (or one) get(s) fulfilled.
Check out Zeal for other OS's
Stage 3 for `Promise.allSettled` is really far along. Acceptance to stage 3 signifies ‚ÄúThe committee expects the feature to be developed and eventually included in the standard‚Äù (https://tc39.es/process-document/). I think the reasoning for why this has been moved along so quickly is that it‚Äôs just a static method on the global Promise class so getting it wrong isn‚Äôt that big a deal, but I agree with all the points the author makes.
From this article someone might think that incapsulation has anything to do with security.
Yea check out puppeteer and apify of you want to have some more sophisticated crawling features built in
&gt; If we keep describing private fields with the terminology of secrecy and security, some dolt is going to think private fields are actually secret and write if (userPassword === this.#adminPassword) { showAllTheCreditCardNumbers() }. People already do this though so ü§∑‚Äç‚ôÇÔ∏è
I use `Promise.race` all the time for adding a maximum timeout for things like API/database calls. Is this not a thing? It‚Äôs kinda important to do if you want to build reliable node.js services.
DO or Netlify.
Hi /u/SpecificGeneral, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Maybe you could use a Gantt chart for this?
GCP
ü§î ‚Ä¶shouldn't be, but we'll look into it, thanks!
Hi u/Ipecactus, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I don't know about anyone else, but I use the desired timeout for the request, it's not like a promise just gets cancelled because you're not paying attention to it anymore.
I have had success (albeit for short term projects) following the instructions at https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker
I discover netlify today. Do they offer unlimited uptime or is there a shared uptime like heroku? Other gotchas for the free plan? Cheers
Firebase
A lot of hate in here, but it was probably a fun project to build and you probably learned a lot doing it. I can‚Äôt imagine a work environment where i would want this/enforce this on my team but that being said, nicely done. Looks cool, and I‚Äôd hire/work with ya.
Amazon AWS
I made exactly this argument, and even wrote a Babel plug-in to convert private variables to public: https://github.com/jwalton/babel-plugin-private-class-fields-to-public The one good thing about private variables in JS is that, if you subclass someone else's class, you don't have to worry about accidentally recycling one of their private member names and breaking everything. Like, if you inherit from Node.js's EventHandler, what private members does it use that you shouldn't assign stuff to? Hard to know. I would argue, though, that at it's heart JS uses prototype inheritance, and while TC39 has done a lot to make prototype inheritance looks like classes to make life easier for OO developers from other languages, here is where we're "stretching the abstraction too far". It seems weird and strange because private members like this are just not a concept that fits well into a prototype based language.
i'd look into developing tooling for emerging ecosystems i'm interested in web components, lit-element, lit-html, lighterhtml, htm, and the other framework-agnostic component systems more specifically, there's a lot of hubbub in the area surrounding upcoming **import maps** browser feature, which i think will become extremely important in the coming years, and will change the way we do package management i strongly suggest you investigate this discussion in an ["import maps" github issue about tooling](https://github.com/WICG/import-maps/issues/146) i've created an import map generator called ["importly"](https://github.com/chase-moskal/importly), it works today, but i have big plans to refactor it some others have taken different directions for new tooling for import maps i'd certainly look into these areas for new tooling opportunities cheers! üëã Chase
Targeting S3 static for my next deployment.
It‚Äôs for static assets only AFAIK. You still need a server for your backend unless you have a simple use case and pay netlify for one of their premade solutions.
What OS do you use on your BBB?
If it's front end, GitHub Pages. If it's back end, I host the code on GitHub, auto-build to Docker Hub, then pull to Digital Ocean and run a Docker container for it.
Netlify everyday. Free HTTPS and hosting for static assets. CI/CD hookup to GitHub and competitive pricing for CMS and Analytics. Oh also can‚Äôt forget Netlify Forms. Just add Netlify attribute to a &lt;Form&gt; tag and you don‚Äôt need to set up a server for simple form data collection.
Yeah this
Won't this execute them in order instead of all at once? (I think you can solve that by possibly resolving after every callback, if the number of pending promises is zero)
AWS S3 for static frontend, AWS Lambda API interactions, and DynamoDB for database.
Me too. Firebase has a free tier and a bunch of integrated services.
&gt; It‚Äôs a shame that because I‚Äôve been downvoted I‚Äôm now rate limited in responding to defend myself Pro-tip: whining about your downvotes is a great way to find yourself downvoted some more. Nobody cares that your imaginary Internet points aren't as high as you want.
Doesn't get any easier than Heroku. It's not the cheapest option, but it's phenomenal for a 1-man DevOps team. I use it for all of my personal projects.
You could also use [`chunk`](https://lodash.com/docs/4.17.14#chunk): ``` const results = []; for(const items of chunk(array, 10)) { results.push(...await Promise.all(items.map(asyncFn))); } ```
Ooo, interesting. I'm gonna add block-sites.js to my ad-blocker blacklist, so that won't happen in the future.
Hi u/OverDoughnut, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
https://now.sh is king
pro-tip i dont care about the votes - i care about being able to respond to people. being downvoted means you can only send one reply every 5 minutes.
Netlify
Hi u/RSnyderman, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
The only difference is that race will return as soon as one promise resolves. Whenever you work with promises, once they're created, they're already being executed and (generally) can't be stopped. So yeah, you're spot on. Just keep in mind that promise.all and race are not the ones tasked with starting the execution of said promises; they're just convenience methods for controlling the results.
I don't think anyone else is running this
Same for Cosmos DB's portal experience (and client libs). It does fan out queries and has the ability to speculatively retry/failover.
Well, if they are, I'll never know now.
We host our site on a cubernetes cluster in Google cloud.
On Digital Ocean. Using Ubuntu OS.
You can use static assets + client side rendering + lambdas for some very simple API calls, I think you can get a small amount of lambda usage for free.
Github Pages or Netlify.
Hi u/dominic_l, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Didn't find a good solution for my use case - converting an html containing a bunch of svg charts and texts into a printable pdf so decided to write it myself. [Link to source on github](https://github.com/ovvn/dom-to-pdf)
ATM Machine
I host it on a virtual private server. As I have a pretty solid background in Linux administration I set up NGINX just for the reverse proxy. That way I can create my website using Docker and expose a port that will be proxied to some sub domain of my liking. This also let me use Let's encrypt to get free and virtually unlimited SSL certificates. I requires a bit of knowledge but it is really a cool way to learn other thing than web languages and let you in control with more flexibility than a dedicated hosting provider that will not always let you set up docker environments for instance or will charge you for added subdomains.
It depends on the project. I‚Äôve used Netlify for a few personal projects that had really small footprints. If any project I‚Äôm building has need of a database and API, I go for AWS every time. It can get expensive but I can set up a wonderful pipeline that is completely in tune with the way I want to work. Usually, I‚Äôll do an Elastic Beanstalk application with a couple environments (staging and production). I‚Äôve got CodePipelines set up to build from the repositories and deploy to the appropriate environments. If the domain is bought the Route 53 then you get HTTPS for free, and it can be used directly on the EB environments. It takes a couple days to set it all up usually but it saves me a ton of time down the line with deployments. When I‚Äôm doing anything more than a static landing page and a couple forms, I opt for AWS EB
Hey there. Just wanted to say: It's your Reddit Cake Day! üç∞üôåüôå Your account is now 1 year old! *** ^^^u/swiftypat&amp;#32;can&amp;#32;remove&amp;#32;this&amp;#32;post&amp;#32;by&amp;#32;replying&amp;#32;with&amp;#32;'!delete'&amp;#32;|&amp;#32;View&amp;#32;my&amp;#32;profile&amp;#32;for&amp;#32;more&amp;#32;info&amp;#32;or&amp;#32;PM&amp;#32;to&amp;#32;provide&amp;#32;feedback
S3 for almost any static. My backend smacks up DB2 on a goddam AS/400 so that's at the colo. I did briefly run a few "Function Apps" in Azure that VPNed back to our colo. That lasted a whole 48 hours before all of Azure shit the bed in a nasty outage. After that my Function Apps shit the bed and I couldn't figure out why. I didn't want to wait for strike three so I migrated all of that garbage over to AWS Lambdas and used an AWS Storage Gateway to move relevant files between our colo and the cloud. It's been quite ever since. I think I might have IIS serving an internal frontend SPA but I really can't remember. If so, it's pretty minimal and was intended only for the intranet. Though I may have just shoved that in to S3 as well. At `jobs[jobs.length - 1 ]` they used Joyent when I arrived, but our big project ended up on Elastic Beanstalk after I discovered enough wacky fucking bullshit in their Linux-but-really-Solaris Frankenstein thing that I flat refused to deal with the infrastructure if we stayed on Joyent. Elastic Beanstalk was better but not by much. It fell short of the cobbled-together scripts they had previously used pretty quickly, though we never addressed it since development was way more important than deploy time (though I came close after the lead managed to shitfuck a deploy and subsequently fuck up the cancellation of said deploy that somehow resulted in 5 minutes of downtime before I managed to walk through the damn door). Oh, we also used MongoDB's cloud garbage -- not Atlas whatever it was before Atlas -- and that was a total fucking dumpster fire. I think _\*ideally\*_ I would host my own DB on EC2 instances and have someone who actually knows what the fuck they're doing set it up and maintain it. From there I'd probably consider Lambda, more EC2 instances, or some sort of container setup for web services, and then S3 and CloudFront for all the static garbage. I realize that's pretty all-in for AWS but honestly it's the only thing that hasn't made me *completely* hate life so far...
I concur on the modulo. Most of the times, we don't define being a divider by the fact that it produces an integer but by the fact that the remainder is zero. There is a reason for it. Division does not necessarily imply "full division". In fact, when we talk about dividers and MCD we are talking about "integer division", otherwise it wouldn't make sense. And so, we almost always speak about a division producing a zero remainder, not about it producing an integer result.
DigitalOcean, managed by Cloudways. No CDN.
Hi u/thiliniperera, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
For pet projects: Netilify for static sites and fast deploy, Now for monorepos &amp;#x200B; At work, GCP (already used AWS) &amp;#x200B; but never that somewhat I'm directly involved on budgets
Vultr for VPS, Netlify for static
Took me a second even though I was thinking the same thing.
What does the overlay serve? Also I think this code base could really be improved with a class or two or at least some more functions.
What does it do better/different compared to using the print media query?
`Promise.race()` performs what you expect `Promise.anySettled()` to do. Look it up [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race).
&gt; you can have private members whos access is restricted and results in an error Sounds like a good way to force consuming code to use try/catch any time it wants to check a property, yuck.
`Promise.allSettled()` is necessary in my view, as to create the same functionality we might need to compromise on a promise we are defining.
Hi u/StolenFace777, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It handles nightmare clients that are scared of technology. The guys that refuse to use the native browser print and want a button on the site instead that downloads a (heavily edited) pdf of whatever report they want. I just spent two weeks pulling my hair out with `html2canvas` for one of them, now I'm trying with `pdfMake` because html2canvas is broken on Firefox :(
!remindme 8 hours
I will be messaging you on [**2019-07-18 16:37:35 UTC**](http://www.wolframalpha.com/input/?i=2019-07-18%2016:37:35%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/javascript/comments/ceoda2/created_an_npm_module_for_downloading_a_printable/eu4588b/) [**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fjavascript%2Fcomments%2Fceoda2%2Fcreated_an_npm_module_for_downloading_a_printable%2Feu4588b%2F%5D%0A%0ARemindMe%21%202019-07-18%2016%3A37%3A35) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20ceoda2) ***** |[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/c5l9ie/remindmebot_info_v20/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=Feedback)| |-|-|-|-|
I can't provide any information on how to achieve that architecture wise. But recently, i am researching and prototyping a web component based Design System for my company to improve our overall style sharing principles. Maybe you can achieve something similar with web components and standardize some parts of your frontend architecture to become framework agnostic.
Do you mean using window.print()? It didn't fit our users on production. First, some of them didn't like an additional dialog requiring them to make additional actions. Second, window.print is browser dependant, hence produced different, often unsatisfying results. Even in the latest version of chrome I had issues with window.print() trying to convert d3 generated charts into pdf, in particular width issues and some svg styles were missing. Using my package it worked good and presentable most of the time.
Without drilling in to much to individual set ups, consider the following: &amp;#x200B; \- A design library with reusable components to cut down older apps looking dated \- Would a mono-repo \- Imposing a mandatory test coverage % to ensure everythings highly testable. \- We have tests run across the mono-repo when you pushed, this become a 25 minute process - we moved this to the PR and used jenkins to block broken builds being merged \- If your apps are becoming a black box consider a standard framework for building, next for example, so projects become easier to jump into &amp;#x200B; It sounds like it might be helpful to have a technical architect on your team to help guide the standards more, I'm all for typescript and angular, but someone should try and standardise your code.
Page counter is broken for chrome as well (issue open since 2017)...
Hi u/octod, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Looks good now!
Man, I had to do this myself 2 years ago. It took me like 6 weeks to figure out. I should have uploaded it then.
&gt;Zeal Yes! And the VS Code extension [https://github.com/deerawan/vscode-dash](https://github.com/deerawan/vscode-dash) works with Zeal too.
Does this generate an image or does it actually create a searchable pdf? Do you have an example pdf?
It creates a printable paginated pdf. Uploaded an example at [https://docdro.id/JAcqvmu](https://docdro.id/JAcqvmu). It's not searchable though. To make it searchable would require an additional layer of a heavy software for optical character recognition (OCR).
[removed]
Just the one that comes in it, I think.
You're generating the image from HTML that already contains text, there's no need for OCR. But you'd have to use something other than dom to image that preserves text.
Yep, it generates an image from HTML along the way, but to make it searchable we would need to recognize the image further. For instance, Adobe Acrobat can make a pdf searchable/editable. What exactly do you mean by "something other than dom to image that preserves text", any examples?
Hi u/fbidu, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I just really don't like their databases. What do they have against relational dbs?
Heroku
Agreed. I have several clients on it and am paying less than $6.00/mo. It‚Äôs almost pure profit.
PDF's can hold structured rendered text instead of just images. So there are 3 flavors: 1) PDF that's just images in a package 2) PDF that's images + text indexing so you can highlight (doesn't always overlap right) 3) PDF that's rendered text (more like a Markdown or pure text Word document) Turning 3 into 1 is a sin.
Hi /u/limenleap, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/AhlemSchool, this post was removed. Well, this is awkward. This subreddit is for **javascript**, which is different than **Java**. In other words, `javascript !== java`. Maybe try one of these instead: * /r/Java * /r/JavaHelp * /r/LearnJava Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I see that you are using jspdf and Dom to image. Wondering how is the memory footprint for a deeply needed Dom tree for a several screen scroll app.
You need to create the PDFs that contain text in the first place. I don't know if there are any existing tools that generate PDF from HTML markup (at least ones available in JS), but in theory the html-to-canvas library could be modified to output text markup instead of rendering everything into a single image.
I use a client + server side approach for this with the help of [https://wkhtmltopdf.org/](https://wkhtmltopdf.org/). I just extract the HTML from the dom, send it to the server, run the HTML through wkhtmltopdf, and then send it back to the client.
Hi u/harry_powell, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Cheap VPS off lowendbox for simple/test/play apps.
Use an IDE with a built-in terminal. VSCode is a good option.
I'm working on a project that used both those libs. Maybe this will help you: pdfMake is pretty easy to use but our webpack was complaining about it using too much memory, so we switched to [jsPDF](https://github.com/MrRio/jsPDF) which is pretty great.
Does it handle pagination well? I tried the same approach couple years ago using different tools on the server, including wkhtmltopdf and phantomjs. It didn't work well with custom d3 visualizations and pagination. Maybe the server tools were improved, but I find a client-side only pdf generation pretty interesting and convenient.
Node's REPL does have a form of autocomplete if you hit tab. Granted its not the best, but it does help a little. Browser consoles are actually pretty good as far as this kind of stuff goes, with both highlighting and autocomplete (and inspection, etc). You can even edit files directly on the filesystem (at least in chrome). Otherwise there are a few alternatives out there, for example [Janeway](https://github.com/skerit/janeway). With some digging around you might find something better. But I don't think I've heard of anything's been so great that its supplanted the built-in Node REPL as a standard (though I may also just be out of the loop on that one?).
Just curiosity about the coding, but why do you use var?
Hi u/rahulthewall, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Gross, like every single other language that offers access modifiers. I don‚Äôt know how programmers have dealt with these ‚Äúarbitrary property checks‚Äù for decades. Must be a bunch of saints.
[homing.space](https://homing.space) It is a simple secure, private, authentication and authorisation that allows entry into websites with just one password. It works on open source crypto in Javascript. I wrote this not just because I got tired of usernames and passwords -- but I also needed a strong method for authentic collaboration. My code can also be examined (Artistic License 2.0) -- view source via the documentation. I would appreciate if people give feedback on the way it works and what edge issues I should consider. Kindly take a bit of time to read the Docs+Faq Technical docs (actually just half an hour or so) on how to implement this way of authenticating people for your website is also given. It is under testing till Aug 15, 2019 when I hope to launch. It works on mobile browsers; but for now you can use your regular computer browsers. Thanks!
AWS now has auto-scaling RDS for Lambda. So it's basically now a Firebase but has a relational DB.
Why to not just use [https://github.com/GoogleChrome/puppeteer](https://github.com/GoogleChrome/puppeteer)
Just got used to the old es5.
Looking forward to those changes! Are you guys in need of new contributors too?
[Documentation](https://pankod.github.io/next-boilerplate/) can be found here. &amp;#x200B; I want to point that Built-in CLI is huge timesaver! It can generate page, functional or class component, connect to redux, add style files and stuff. It saves a lot of time during the development.
Good ole VPS, it's cheap.
What AWS services do you use?
First, this would be a server side solution and I prefer pdf generation entirely on a client-side. Second, I'm not sure it'll work well with d3 visualizations as I tried using similar solutions (wkhtmltopdf, phantom) in the past without success, see [my answer above](https://www.reddit.com/r/javascript/comments/ceoda2/created_an_npm_module_for_downloading_a_printable/eu4jydx?utm_source=share&amp;utm_medium=web2x). Also, having an entire browser as a project dependency just for creating a pdf doesn't sound like a good idea to me.
Nah, AWS doesn't have user auth, push notifications, analytics, etc all built in to the same sdk.
[https://github.com/pankod/next-boilerplate](https://github.com/pankod/next-boilerplate)
I like the idea of client side generation, never used it before though. Does it work on all major browsers without issues?
I'm also thinking to move to Web Components for some parts at least.
So, I think a mono-repo could help, but I'm very concerned about our organisation's ability to manage it. &amp;#x200B; Your thoughts and ideas make a lot of sense. &amp;#x200B; And we do have technical people capable of leading this, but it's a matter of authority to make change... we're in the middle of working that out.
GCP has Cloud SQL and Spanner. Firebase's angle is the client libraries with db-level security rules. That model doesn't fit with relational because security rules can't cascade across joins. Also, Firebase focuses on Realtime, which requires fast queries. Relational DBs allow too much query flexibility to guarantee performant queries.
Hi /u/cutcopy, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Tested on latest Chrome and Firefox, works fine.
Hi u/Olumyco, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/thiswassupposedlyfun, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Spooky. I was just looking for something like this today for a client i'm working with. So many Thanks!
Works only on Firefox and Chrome. No IE and Safari support. Limitations of [dom-to-image](https://github.com/tsayen/dom-to-image#browsers) which is used by this library.
What does it smell like?
Server side generation has a strong point here
Server side generation has a strong point here (for safari I mean)
Hi u/Albyzai, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
New contributors are always welcome, although we currently have quite a big PR backlog caused by the inability of maintainers to run deployments. This should be solved in a couple of weeks, after which we can review, merge and deploy new PR's at a much faster rate than we currently can (we can't merge and/or deploy at the moment). If you want to stay up-to-date or got any development-related questions, feel free to pass by our [Gitter room](https://gitter.im/FreeCodeCamp/DevDocs).
We are doing a micro-frontend approach where each individual app is wrapped in a web component to allow a framework agnostic import into the parent project. I'm on the go on mobile right now so I don't feel like writing an essay on it but feel free to PM me if you want to chat.
RIP in peace
We have a custom ui framework and use material ui for prototyping. We‚Äôre fully react based, with typescript for node level apis. Otherwise everything‚Äôs fairly streamlined and samey, which helps when on boarding new developers to a mono repo with 30 packages :)
I'm not sure about pagination... the approach i use is for a specific purpose, i.e., generating a report from a financial model run, and the results are formatted so that they always fit onto the page before being sent to the server. Not sure about d3, but it does work well with highcharts.js graphs.
Good article. Wonder how many more ways are out there that no one has mentioned...
if used carelessly, twit can also reduce your twitter followers to zero :D pro tip: wait until you've successfully used your bot on a **test account** for at least a week without having it banned
Not sure I understand. If temporary storage for an incognito window is 10% of device memory (I'm assuming this is RAM), then you only need more than 1200MB in RAM for this value to be greater than 120MB and bypass incognito window detection.
Yep ...it can also happen,I have included it in the post but still thanks for a heads up
When wiring up the provider ``` const ContrivedServiceProvider: Provider = { provide: 'IContrived',//it's an injectable interface useClass: ContrivedService, }; ``` It is better to use a symbol i.e. `Symbol('IContrived')` to make sure that you have uniqueness of contracts interface across the entire application.
Bypassing storage-based private browsing in chrome 76 with a TamperMonkey script: // ==UserScript== // @name Disable incognito detection c76 // @match *://*/* // @run-at document-body // ==/UserScript== (() =&gt; { 'use strict'; if (GM_info.isIncognito) { const { navigator: { storage } = {} } = unsafeWindow; if ('estimate' in storage) { const est = storage.estimate; storage.estimate = async () =&gt; Object.assign({}, await est.call(storage), { quota: 2**30 }); } } })();
Hi u/MisterJK2, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It's a horrible post about a horrible idea and I wish I could downvote the whole thing more than once.
Hi, I work on monorepo stuff at Uber. Monorepos _can_ help manage consistency, BUT they are a very big commitment in terms of tooling and manpower. Some OSS tooling exists (e.g. lerna, rush) but YMMV a lot with them. Given that you said you have low test coverage, I actually wouldn't recommend a monorepo. What you want instead is focus on education. Setup lunch-n-learns and workshops and focus on testing basics: how to setup tests using your template/scaffold, how to write the first test, how to setup CI, how to do code reviews, etc. Record these sessions and/or have someone take notes in a google doc for posterity. Some key points: - don't obsess over coverage percentage, it's only meaningful if the tests are good (Remember: `import './index'; assert(true);` gives you pretty high coverage but doesn't increase confidence one bit!) - prioritize. In many orgs, tests are just never high enough priority. If that's you, set aside sprints throughout the year _exclusively_ for fixing bugs and writing tests. - test regressions. Bug fixes should always have accompanying tests. - set up configuration to prevent landing to master without code review approvals. Another type of meeting that can help are deep dives: basically have the core devs of an app show what the app does, how the code is structured, where the pain points are. This can be followed up with architecture discussions among teams.
Want to downvote more than once? Create a personalized bot in just 15 minutes...
Azure
Why. ...it works and it's great to create something and see it making a real change
Got it, I guess along with fitting everything on one page you also needed to set viewport-size, page-size, orientation etc for wkhtmltopdf. Also highcharts.js has a good export built-in feature [https://www.highcharts.com/docs/export-module/export-module-overview](https://www.highcharts.com/docs/export-module/export-module-overview).
let him = be();
Yep ...maybe Reddit has API service too ..I can maybe make a. Bot about that too
Haha. Defeated myself. (async () =&gt; { const i = document.createElement('iframe'); i.style.opacity = 0; document.body.appendChild(i); const est = await i.contentWindow.navigator.storage.estimate(); if (est.quota &lt; 1.2e8) { console.log('Incognito'); } else { console.log('Regular browsing'); } })();
I think you have to pass in an array of already created promises. that's why the .then method is available on them. If you wanted to pass in a bunch of functions you could change it to first().then(val =&gt; .... I think.
The code snippet in the article is just a basic POC and covers the lowest bound for non-incognito window (120 MB, if the device storage is 2.4 GB). In a much more practical scenario, if you look at the table even for a device with 64 GB of storage (Note: 64 GB of total storage, not just available storage), the quota in a non-incognito window reaches Gigabytes, but for incognito with your protection it will still remain in Megabytes which makes it very easy to detect. Even if you fuzz it to reach in Gigabytes, the detection script could attempt to actually write instead of just querying for quota, if it fails to write anything after 120MB, then you are using incognito. &amp;#x200B; Bonus: In such a case where you have this kind of protection, its actually counter-productive from a privacy stand-point as you're still detectable if you're browsing in incognito but now you give some extra information, the fact that you have this kind of a fuzzy protection. &amp;#x200B; P.S. I'm the author of the article
Really beating myself up. This tampermonkey script defeats the above defeat of the top tampermonkey script: // ==UserScript== // @name Disable incognito detection c76 // @match *://*/* // @run-at document-start, document-body, document-end // ==/UserScript== (() =&gt; { 'use strict'; // Pretend we have 120M + a random little, to evade detection of this userscript. const quota = 1.21e8 + Math.floor(Math.random()*1.2e8); const hide = (fake, real) =&gt; { fake.toString = () =&gt; real.toString(); fake.toString.toString = fake.toString; }; const makeEstimate = storage =&gt; { const est = storage.estimate; const fn = async () =&gt; Object.assign({}, await est.call(storage), { quota }); // Prevent duckpunch-detection. hide(fn, est); return fn; }; const makeAppend = Type =&gt; { const append = Type.prototype.appendChild; Type.prototype.appendChild = function (child) { const ret = append.call(this, child); if (child.nodeName.toLowerCase() === 'iframe') { console.log("Cleaning child window"); clean(child.contentWindow); } return ret; }; }; const clean = win =&gt; { const { navigator: { storage } = {} } = win; if ('estimate' in storage) { storage.estimate = makeEstimate(storage); } makeAppend(win.HTMLDocument); makeAppend(win.HTMLElement); if (!win.document.readyState !== 'interactive') { win.document.addEventListener('readystatechange', () =&gt; { clean(win); }); } }; if (GM_info.isIncognito) { clean(unsafeWindow); } })();
I also bet on browsers. Yes, you can use *Console* as REPL, but if you want more you can use *Snippets* in *Sources* tab (talking Chrome's DevTools). It's really handy for quick testing/checking stuff.
Post doesn't even say who exactly resigned. I know Isaac was one of them, but I think he already left. Can someone clarify?
&gt; if it fails to write anything after 120MB At which point, you're harming your own performance, no?
Hi u/Guru4777, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Let‚Äôs keep it goin‚Äô!
@Seldo aka Laurie Voss, co-founder of NPM
Like Fight Club, but with code \^\_\^
Netlify for frontend, Heroku for backend (Node.js).
Like cat-n-mouse? https://twitter.com/paul\_irish/status/1151893114681843712
That's if there's two or more entities involved. Self-punching is definitely Fight Club.
What advantages does Netlify have over GitHub pages?
I had a webapp that I was hosting in AWS using elastic beanstalk. But I switched to node-chef and cut my hosting costs by a lot. For static apps I use github pages.
Hi u/BlueGo32, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/everdimension, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I was surprised when the post said npm started in 2014. But that is npm inc. npm the package manager started in 2010.
I thought this was Dead!
You're right, it is *too* simple. One of the requirements of private fields is that they don't interfere with the namespace of public properties, which can still contain leading underscores.
\&gt;At which point you're giving false positives on mobile. But hey. Fuzzed up to 1-2G. wait, is it possible to use tampermonkey in Android Chrome? &amp;#x200B; \&gt;At which point, you're harming your own performance, no? In both cases, making a percentage of regular-&gt;browsing users walk from your site to prevent private browsing seems counter-productive. I agree this is not an ideal solution, but I suspect there's an easier way to detect without even having to write 120MB by exploiting the key difference i.e incognito mode stores in memory Vs non-incognito mode stores in disk. I'll try to come with a more advanced POC and maybe an update to the article in the near future. \&gt;Not sure what you mean? What's the extra information? Also, tampermonkey scripts are going to be a &gt;narrower target; not as many users will have them, so circumvention efforts will be lower. Might get bigger if &gt;an adblocker elects to do something similar. &amp;#x200B; The fact that it's a narrower target and not many users will have them, makes people who have them even more unique! &amp;#x200B; BTW Thank you for taking time to write these defences which has motivated me to work on part 2 of this :p
Hi u/mehmetegemen, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/vonwao, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Page made my browser unresponsive (Brave iOS).
What about compiling it into webassembly?
Hi u/bat_rangeer, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; wait, is it possible to use tampermonkey in Android Chrome? No, but on devices with 4-8G disk (mobile), if you're saying "less than a gig is incog", you're going to hit a problem if you're detecting more than 120MB. &gt; The fact that it's a narrower target and not many users will have them, makes people who have them even more unique! Right, but you'd have to catch 'em first. Can you detect the more advanced userscript from a page script?
Hi u/jrm3270, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Side question, what is the use case for blocking an incognito user? Tracking cookies?
\&gt;No, but on devices with 4-8G disk (mobile), if you're saying "less than a gig is incog", you're going to hit a problem if you're detecting more than 120MB. OK the way I see it, the only time 'less than a gig is incog' doesn't work is when the device has a disk smaller than 64 GB. It's fair to assume that almost all such devices would be mobile, where any such userscripts are not supported. What if I have two rules one for mobile devices and one for non-mobile? If it's mobile check for 120MB else check for less than a gig. Of course there's always a possibility of a false positive but what are the chances of that happening? What's the percentage of non-mobile devices with disk less than 64GB in use these days? \&gt;Right, but you'd have to catch 'em first. Can you detect the more advanced userscript from a page script? I haven't used TamperMonkey so can't give you concrete examples but my intuition is, its almost always possible to detect any modifications by extensions. I'll give it a try if you can give me some examples of any such scripts :) This conversation reminds me of [cat-n-mouse](https://github.com/paulirish/headless-cat-n-mouse), even if I come up with a way to detect any such userscript, you can always find a way to bypass that detection, its a never ending cycle!
Great article, thanks!
Ever been on a news site that only gives you 3 free articles month? It works because of cookies. You used to be able to get around it by turning on incognito, but they wised up to that and started blocking incognito users by deducing some information about your browser to detect it. Google is trying to stop people being able to check when incognito is used, as it kind of defeats the purpose of anonymous browsing. It looks like they have not yet succeeded.
Well, this is result when i'm using puppeteer with Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36 user agent on linux: [image](https://imgur.com/2zW946E)
Thanks
Thanks
Read the blog post but there‚Äôs no byline and the author never identified themselves....
I legit thought this was a reference to Mock The Week :')
Strange to make a personal blog post without specifying the author
A new chapter for npm: where the tide has shifted and people are receptive to new competition, and in 5 years time we'll all be like 'member npm, and left-pad?
I really don't get this. Incognito is "broken" from a privacy standpoint, and it's sometimes a pain in the ass to use for other reasons as well. There has always been a built-in solution that has none of these problems -- profiles. I really want to ask the Google engineers why incognito mode doesn't just use a different internal profile that is rolled back to your base settings, including clearing storage and cookies, on exit.
They are two very different things. `null` represents an empty object. `undefined` means that something is not defined. A null object is defined.
 null // exists but has no valid value undefined // does not exist Examples: document.body.lastChild.nextSibling // .nextSibling is null because the property exists in the Element class (new class NotElement {}).nextSibling //.nextSibling is undefined because it does not exist in the NotElement class
I don't know whether it was added later, but that's Laurie Voss, his Tubmler handle is at the bottom
CJ commented on Boss leaving and one of thing comments was that npm's new CEO wanted to drop the public registry. He seems like just such a swell guy. So in terms of migrating to Entropic.. what to do if a package I need isn't in there?
Except for the Tumbler handle link at the bottom ... üôÑ
I think it's more config thing than boilerplate/bootstrap thing, making it easier for publishing non-jekyll sites... plus it can do deploy previews for each Pull Request, multiple branches... &amp;#x200B; Never used anything advanced from them but I know they support functions (lambda), have some integrations like forms that are a lot easier to implement on code (just adding a web component) and saw that they have a headless CMS that can be integrated with some static site generators.
If you're serializing/deserializing JSON (which is extremely common), having a difference between null and undefined is pretty handy. A property being null implies it might have a value at some point. A property being undefined means it probably doesn't belong to the schema.
Not on mobile.
Yeah but who is he? What was his role?
Hi u/awalmubarak, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
\`import { get } from 'lodash'\` is your friend. :)
&gt; Yeah but who is he? What was his role? I literally answered both of your questions lol :) If you're curious to read more, there's a bunch of news articles floating around the web on him.
Co-founder is not a role in a company. It doesn‚Äôt tell you anything about what he did at npm inc. But yeah I ended up just googling it
All of them.
It is if we talk about new apps. But theres still old apps
You can serve a highly available website on AWS for cents per month using S3 and CloudFront. You can also use lambda for the backend for free until you reach 1m requests per month. It really can be significantly cheaper than hosting on a VPS, although it might be slightly more complicated, but not by much.
I dont understand why someone would use this over the top 3. It does not bring anything new to the table.
Not true.
"Chief Data Officer" doesn't really say much either IMHO. Shrug.
@SELDO aka Laurie Voss - Chief Data Officer &amp; co-founder at npm, Inc.
Hi u/BensonandEdgar, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
But you can just delete the cookie...
https://imgur.com/a/4ddnDUS
&gt;I look forward to seeing my friends and colleagues continue to grow and change the JavaScript ecosystem for the better. So they're shutting down npm?
Lodash is my friend, but Ramda is my copilot.
A good convention is to think of `undefined` as accidental accidental/left-out, whereas `null` can be thought of as deliberate/not-yet-initialized.
So many Javascript proposals are things that are better left to libraries or a li E or two of code. Or, just as often, utilizing better coding patterns. It's almost like they think Javascript has gotten past too many of its "bad parts" and want to fill that void.
You put in code, and it shows you the code you put in?
S3, CloudFront, Certificate Manager, Route 53, EC2, Lightsail
If you like overweight dependencies, sure...
I don‚Äôt think it defeats the purpose. It‚Äôs like using a VPN. Yeah they know you‚Äôre on a VPN but no more.
What about Web Accessibility?
Hi u/vendiaphrams, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/mynadestukonu, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
 Function.prototype.toString.call(navigator.storage.estimate); // "async () =&gt; Object.assign({}, await est.call(storage), { quota })"
This is exactly what I‚Äôm seeing. Going back twice I can‚Äôt find any indication of who wrote this on mobile.
Harder on mobile
dude, why?
It's extremely easy, at least not in an embedded browser. Click the lock top left lock. Click the trash can next to storage usage. Actually...I'm just assuming that would delete cookies, so don't quote me on that. While not harder, I do agree it's more of a pain in the ass if that's what you meant
doesnt show up for me either. And what good is a tumbler handle... does he lack a human name ?
This is just for tackling statefulness, when it comes to privacy incognito is even more useless, all the big ad networks are already falling back to ip, user agent, and other meta information for creating tracking fingerprints
Omg...I totally forgot there were profiles (called people). Well...no more Russian roulette for me when I screen share and have to type in a url and the world gets to see my history. And actually, if you click browse as guest it does exactly as you say. It's not an actual incognito window but it says when you close the window, all traces are gone. So if you map a keyboard shortcut to browse as guest, that would work. Though...can't use extensions. You probably already knew ^^ but yeah, frustrating
Actually no, I completely forgot that existed -- but I don't use Chrome any more anyway, for unrelated reasons.
Just curious, what do you use?
But map() does change the contents of the array... It's not returning a copy, the example is just storing a reference to the modified array.
Just curious, what do you use?
Thanks, this is great feedback and aligns with a lot of my thinking. I feel the first step is education, and you've given some great examples of how that can be achieved. Some of this is in place already (approvals, test standards), but only on the projects I led. There's a lot to do this year and it's an exciting road ahead.
Firefox. I was a long time FF user who switched to Chrome maybe 5 or 6 years ago, but I've recently switched back to FF (and reduced/eliminated using other google products) due to Google's policies towards and treatment of indy app developers publishing on the play store.
I remember there was one problem in school (for Programming Languages class, when we were covering functional programming) that I solved with map().reduce(). Oh, found it, and it is in Ruby: # analogous to Scheme's (apply + (map square lst)) sum_of_catheti_squares = catheti.map do |cathetus| cathetus**2 end.reduce(:+)
Hi u/BigglesWerth, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Ah you going with monorepo? Or single repos? We're considering this too.
Sometimes it's easier to reason about a function when you do it like that. When I'm writing solutions for Advent of Code, I frequently end up with multiple chained map/filter/reduce statements, just because it is easier to think about small sequential changes than about one large reduce statement.
Hi u/sirluiss, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This is a good way to ease into types with javascript. I have found that typescript makes dealing with types much cleaner and feels more natural then forcing yourself to document every function.
This isn‚Äôt functional, it just uses functions. Functional programming avoids mutable data and so `train` could be written so that it returns a trained model.
This is not correct. Map is an immutable method. You may be thinking of slice.
We also moved to a mono repo at work. I highly suggest you look into Storybook if you haven‚Äôt. It‚Äôs made development for us a lot easier especially since we share so many components. We then host the storybook so our designers/product team can look at individual components and give feedback without need to look at the full app.
I'm actually a contributor to Storybook! And Create React App. Thanks for the recommendation though, it's awesome to hear that it's making a difference. Why did you move to monorepo? Do you have multiple you frameworks?)
We had several core apps that had a lot of common elements. We wanted to build a strong foundation (next,Apollo,typescript, etc) that could be shared without worrying about constantly having to keep multiple repos up to date. The entire project was built largely from scratch on this foundation. We dramatically boosted our performance because we agreed to a common way of doing things. Obviously not all teams will be as lucky. I want to thank you for working on storybook. As a new dev (6months) it really has been an awesome tool. I do want to give back to an OS project and storybook is on my list. üôÇ
*Beep boop* I am a bot that sniffs out spammers, and this smells like spam. At least 66.67% out of the 9 submissions from /u/awalmubarak appear to be for courses, coupons, and things like affiliate marketing links. Don't let spam take over Reddit! Throw it out! *Bee bop*
Map does, in fact, return a copy.
Can‚Äôt you run each element through a callback and return a different array?
I mean, the MDN for it tells you straight off the back what it does. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
I'm a bad contributor, I focus on React and Create React App compat, but I'll pass that along to the better contributors üòâ That information is great, thanks. I think that the biggest issue we have is that we have a lot of important legacy code. Monorepo means working out how to manage that...
Hi u/taylanthony, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Cool idea but the animations are a bit confusing imo.
Firefox containers are great for exactly that. I just wish they would improve the oob experience so you don‚Äôt have to rely on 3rd-party extensions for basic functionality.
Hi u/Ynjxsjmh, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Great idea for tutorials keep it going! I'd suggest to add what happens to values as well to make it even more clear!
Brains are weird, I prefer reduce over map/filter as I find them easier to reason about.
That‚Äôs literally what map() is
Hi u/neutral24, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/neutral24, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/neutral24, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I don't get why you are downvoted.
smdh how you gonna post this when u fuked it up bruh
No, only one co founder resign. He fought for lgbt rights and call Trump a racist.
If you use a type system like Typescript or Flow, you lose all type safety using the Lodash get method.
 This is not correct. Slice is an immutable method. You may be thinking of splice.
Animations are the easiest way to understand. Got it picture perfect.
Soon as I try to view the site it redirects too trying to open in it's own app ... medium://p/7fe391a35a47?link_click_id=654387968215851253 Which this device doesn't have (or need)
&gt;The correct answer is: 61% of packages on npm did not publish a release in the last 12 months. But I'd argue that this isn't a great measure of abandonment. Small, tightly targetted, well-formed, well tested, securely written packages might not need any updates in 12 months - they just sit there doing a job without need for new features or other regular patches.
Hi u/shafikshaon, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Or you could explain them with a simple picture. https://imgur.com/E3wmVa3
You know more something interesting about javascript that are not included in [https://dev.to/shafikshaon/interesting-facts-in-javascript-22nk](https://dev.to/shafikshaon/interesting-facts-in-javascript-22nk)?
The only good thing about this article is that it's on [dev.to](https://dev.to), right in the trash where it belongs
It's nice that the article covers schemas. Most people ignore this completely.
What is OOP? Hyped. That's what it is.
Oh, nice one. I've been migrating from vim to VSCode recently so I might as well try using its console for JS
Oh, thanks! I'll take a look on Janeway. I found out about [this prototype](https://github.com/nodejs/repl) for a newer Node REPL but it's still bleeding edge. Seems promising, though.
You're welcome. Consider [supporting](https://github.com/ovvn/dom-to-pdf#support) my work.
What do you mean you prefer reduce over map/filter? All three do entirely different things and have different use cases.
You can define map and filter in terms of reduce, for example filter could be Array.prototype.filter = function(fn = Boolean) { return this.reduce((arr, el) =&gt; [...arr, fn(el) &amp;&amp; el], [])
Map filter, flatMap etc can all be implemented via reduce.
There were 2 things I could think of that would make the animations less confusing. 1) Keep the initial array at the top so that viewers can more easily see how the array was transformed 2) Keep the array elements in the same order during the animation. In the filter example, it should be the last 3 elements of the array that get returned but based on the animation, it seems that the first 3 are going to be returned.
I am on mobile and I see it Hyperlinks. The secret sauce that makes the web happen. You click on it and you can read the name.
Are you using the reddit app??? Use a proper browser
Is it me or is this the most covered topic on medium pretty much ever?
Hi u/A68AGAMING_YT, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Labels in JavaScript are a variation on the very ancient GOTO statement. The GOTO statement was an early attempt to make programming code more reusable. With the creation of procedures / functions, the GOTO statement became considered an anti-pattern because the code created with it was typically a lot less readable than code that achieved the same goal, using procedures / functions. From [Wikipedia](https://en.wikipedia.org/wiki/Goto) : &gt; In the past there was considerable debate in academia and industry on the merits of the use of goto statements. Use of goto was formerly common, but since the advent of structured programming in the 1960s and 1970s its use has declined significantly. The primary criticism is that code that uses goto statements is harder to understand than alternative constructions. Goto remains in use in certain common usage patterns, but alternatives are generally used if available. Debates over its (more limited) uses continue in academia and software industry circles.