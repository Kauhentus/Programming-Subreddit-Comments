&gt; otherwise the first err, trailed off there. I meant "the first element [of the array passed in]", should've completed my thought there, and said the "0th". Sometimes I still call it the "1st" element of the array, even though it is technically the 0th.
I'm a big believer in servant leadership, so I'd see the situation a little differently. The promotion would give me the opportunity to build on my professional relationship with my teammate and friend (or "work friend" as it were) by finding ways to enable his work, professional development, and work-life balance. You may even have a good head start with this approach, because you're already somewhat familiar with his strengths, weaknesses, work style, and goals, and you already seem to have a good working relationship!
Quit being a wanker. You’re just a team lead. Shouldn’t be that big of a deal.
Leading involves a switch and tact. You shouldn't be telling anyone what to do. That's not leading. That's being bossy. You should still be "requesting" things. But, use a lot of "we" terminology. "Hey, we need to get this code refactored. Do you think you could handle that before the end of today? Thanks" It's also kind of a good idea to not give them too much room for discussion after you make a request so it's understood that the request part is politeness and they've been delegated a task. You're a team lead. Make them feel like they're on a team. If you find yourself having to give ultimatums or saying "just do it" then there's bigger problems and your boss needs to be aware. There's no need to sever relationships until you identify them as a problem. Being friendly is part of being a leader too. You should be able to switch in and out of being team lead as needed. Joking around is great. But at a certain point, you might need to say "alright guys, even though we're all hilarious we gotta move forward. There's a lot on the board still" Leading isn't being a boss. Leading is having the ability to make people want to follow. Being a "boss" is mostly just admin work, organization and planning. Leadership is the hard part. 
Just focus on the responsibilities for your respective roles rather than skills or anything else.
I'm curious to see if you get anybody willing to look at obfuscated code for you.
To start out, I would say change your mindset. Don't think of yourself as "over" them. Team leads are more about being first among equals rather than supervising the team. You have more responsibilities, yes, but you're working for the team, they're not working for you. Do what you need to do to help your team work better, but you can generally leave the actual supervising to the managers. Unless I misunderstood and you're actually their manager now.
I agree with others: are you managing the team or leading the team? If you are managing then it is clear that you are the decision maker for the team. If you are the leader then you are more guiding the team in terms of teach, learn, do. If you are managing the team, then as someone who managed a team of 7 engineers, the single most valuable management tool was hosting weekly 1-on-1s. Meet with all your direct-reports for 30 minutes 1-on-1 once a week. This podcast was extremely valuable to me when managing a team: https://www.manager-tools.com/2005/07/the-single-most-effective-management-tool-part-1
Great advice. You lead by listening and enabling the team to work well together. 
Indeed. &amp;#x200B; Managers are in charge. Leaders are responsible for the people in their charge. Laughing and sharing together is a symbol of trust and trust is essential for cooperation to emerge in a team. When you trust your teammate, you know that they have your back and so will you, when the time comes.
Empower them. You know their strengths so put them in a position to succeed and hold them accountable to that success.
かわいいですよ〜
Thanks for your comment, I would love for you to comment more on your management role. Any challenges you had when you transitioned from Team Lead -&gt; Manager? Something that you didn't realize you were doing wrong / inefficiently until it was brought up with you?
Equality can mean many things and has different contexts. Everyone is equal in terms of their basic humanity, nobody is more or less deserving of respect and compassion, etc. However, when it comes to decisions about how the team functions, the lead is certainly not equal to the other contributors. That's why they are called a lead. So I really don't think it's useful to go around saying everyone is equal without qualification, otherwise why are we talking about "lead" roles at all? Why isn't it a flat org where everyone has the same duties? TLDR: Equality of role in the team is different from equality as a person.
I led a lot of teams of people the same level as me (and some of a higher level). Leadership isn’t all about that though. You’re responsibilities as a leader or organizing your team and communicating both up and down the hierarchy of your organization Remember not to make it a you vs. them, I was friends with my “subordinates”, but effective communication let’s people know that you’re not giving orders to people for the hell of it, but as part of a plan in which the team needs to execute. Everyone is doing there job, and communicating the team’s mission is part of yours. Make sure to fight for your team, do the right thing for your people and the company, push back when you need, and your team shouldn’t haven’t a problem with you. You can still be someone’s buddy and be their team leader, don’t get that confused.
You’re over thinking it; you’re a lead, not a manager. Your job is to ensure high quality code and not much more. Work the hardest on the team and reinforce the standards of your engineering department in PRs. Most of this can be done by reviewing and creating PRs. 
I'm a lead at work and it never got in the way to how I have to work with the team. 
This type of situation happened a lot in my previous workplace. I have been "promoted" to a team lead at least twice, with members who possessed better development experience than I did. I was, and still am, great friends with these guys, and we all talk every day even though we don't work together anymore. The best approach to this transition is to always view your team as your equal, even if you're "leading" them or you're told by management that they are "under" you. If you were already friends before getting promoted, make sure to treat them the same way (joke around, etc.), albeit still getting things done and always making it clear that you all need to work together to the best of your abilities in order to achieve your project's goal. This keeps/improves the amount of respect between you and your team members and how they see you as both a leader and a friend. The best part in your experience as a lead is you get to appreciate everyone's skills and expertise. You get to see which one is a good developer and a great developer, who gets the job done, and who gets the job done well. You see, some developers would prefer not to plan requirements, go to more meetings, talk to clients, etc. This is when they get to appreciate your development skills and application knowledge, paired with your communication, interpersonal, and time management skills. TLDR; Treat your colleagues the same way, but make objectives and tasks very clear - treating everyone equally and with respect, and still getting shit done. Also, this experience will make you and your members appreciate each other's skills a lot more.
How would you say the dynamic changes with the manager role? Sounds like you view the team lead as less of a power shift than manager. Which I'm not sure I fully agree with but these things are subjective. In my view a team lead is the technical navigator, who makes the final decisions about which way to go in terms of the code itself - should we use this or that library/framework/dependency, assessing what code is in good or bad shape, etc etc. So a team lead still has to contend with making decisions that "have teeth" and that may not please everyone. So I would hesitate to say nothing has changed in terms of "equality" there. Whereas a manager need not be technical in order to do their job well as the manager can rely on the team lead for technical judgement, and the manager's purview is the overall team's health. Keeping each individual on a positive career track within the org, making hiring decisions, advocating for the team to upper management, ensuring the product management, design, and other related teams are getting their requirements met and coordinating well, etc etc - essentially making sure the work gets done and done on schedule, on budget, more or less happily by all involved.
Exactly
As a team lead you are not equal to your peers. Your responsibilities are not equal. Your influence should not be equal. If these things were equal everyone would have the lead title. I’m not saying that leads should be authoritarian: servant leadership is ideal. But I don’t think it’s good advice for OP to not embrace the good and the bad of hierarchy that came with his title. 
If you take your responsibility seriously, and work hard to ensure the success of the team at delivering the on the goals, then your leadership will naturally be respected and welcome without much friction. However, if you wield authority for the sake of itself, for your own benefit or in ways that are not defensible or genuinely in the team's interest, naturally your leadership will start to smell bad. Simply do your altruistic best, and the team will generally cohere around you. Those that don't should be moved to other teams or be handled by your manager at least at first, until your start to get a handle on how to navigate conflict, and you should have discussions with your manager regularly about any such dynamics.
Hey mate! Writing code is a skill. But leadership is another skill. And one thing I know about leadership is a good leader will get those that follow them to have a purpose driven mandate. And through that, those under your leadership grow. Your primary responsibility is yes to get things done for your manager, but also to raise a distinct team in your workplace. And that should be a milestone for you. If your team has a reason to follow your leadership even before your appointment, it's because you inspire growth in them. People follow or submit to leadership voluntarily because they see a character in the leader that they want to see in themselves. About your friend, there's really no need to push him away... Let him be comfortable under your leadership. You should be able to trust and be honest with your team. These are what will make your team members trust and be open with you. Be decisively open about things that are pertinent to work, but also kind to your team. You don't need to be any less of yourself than you are now because you're a team lead. But allow yourself to be more accommodating and also to grow. Don't be afraid to ask. A leaders greatest trait is humility, and willingness to learn. If you get these few things down, soon enough your friend will not be a problem. And you'll still have him as your true friend. Character, Trust, Honesty, Accountability and Kindness. Hope this gives some insight! Cheers and hacky new year! 🌟⚡❤️🎉
The team lead thing doesn't have to compromise anything as long as the other people in the team work well with you. As a leader you only have to state facts. Its actually a simple job. Never exaggerate. Never generalize. Follow these 4 steps: 1. State exactly what you noticed 2. State what you noticed will cause 3. State what you would prefer to happen and why it helps the entire team 4. Ask an open ended conversation to get a back a forth going about the topic. This works for criticism, praise, communicating your needs, communicating team needs. &amp;#x200B; Remember only state facts. You will be fine.
Package lock? Hasn't let me down yet. Or is it github modules?
Your friend should respect you enough to know that if he puts you in a situation where you need to reprimand him it is bad for the both of you, the company, and your friendship. If they cant understand this then tell them to kick rocks B. They arent worth having around in either personal or professional life.
This is excellent advice; I've gone through the developer -&gt; team lead transition too, with one on my team being much more experienced and more of a veteran of the company than myself. A team lead's role is about empowering your team, making sure they're not blocked, and making sure they're working on something valuable.
Look at arrow functions and the array map function and you can reduce this down a lot. Also the array.join() function in the first one.
Laughing too much makes it hard to discipline them for taking advantage of their relationship with you.
1\. const theArray= ["Doc", "Dopey", "Bashful", const mapping= (name,index)=&gt; `${index+1}. ${name}`; const mapFn= arr=&gt; arr.map(mapping).join(' ');"Grumpy"]; const result= mapFn(theArray); console.log(result); 2\. const mapping= ele=&gt; ele.toUpperCase()+"!" const planeteerCalls = ["earth", "wind", "fire", "water", "heart"] const mapFn= arr=&gt; arr.map(mapping); const result= mapFn(planeteerCalls); console.log(result); 
Love this 😁 I’m redesigning a site at the moment and going to use one of these on my 404 page 🙌
Thanks and sure! I could go on and on forever about management stuff. I know in my heart I’m an engineer but something about team dynamics really interests me. If I had to pick just one thing I would say the hardest part is stepping back and trusting my teams to do their best. One of the teams I managed was the team I worked on for 5+ years so I naturally want to lead that team since I was their technical leader. Nothing terrible, but we use agile/scrum so I found myself attending stand ups and unintentionally suggesting plans for the day. This does no promote team and personal growth so right away this was my first challenge(I knew this was going to be tough right out the gate). I needed to stop leading and start worrying about helping the junior guys grow as engineers. This could include allowing them to fail and help them understand why. Mainly I needed to stop trying to organize the day to day activities like I did when I was the lead. This could be unique to my case, but I really want my teams to be self sufficient and allow a new tech lead to bubble up as the leader. They need to learn and grow, which they will not do if I tell them how to operate on a day to day basis. Again, just my opinion and from some consulting/training I have had. Granted I kind of knew this was going to be tough I just didn’t realize how tough. Thank goodness I have a wonderful and perceptive scrum master that I can chat with about the team and observations she has! Super helpful to get an outside opinion on progress of my own. Especially someone with the team all the time. The other thing I constantly work on is motivating people. I am far from an expert but there are tons of resources out there about motivating technical people. It’s a super interesting topic and everyone is different. I am fortunate that the company I work for likes to send us through training for things like this, like MBTI and what it means and how to motivate them. Like just knowing if someone in introverted vs extroverted and being conscious of that is huge, in my experience. I guess in a nutshell I find just trying to reflect on my actions and think about how they might affect team members moral is really important to me. Motivation is huge and not everyone is motivated by pressure or authority so thinking about what motivates your employees is HUGE and simple changes to how you address them can have a large impact. Disclaimer, all just my opinion and I’m far from an expert but happy to share 😃
I went through something similar. The best advice I can give is to act as if you are in charge, and will be obeyed. If he decides not to you can probably think of a half dozen ways to find out with out tipping him off that you don't trust him to do his job. Beyond that, be yourself, let your team(yourself included) have time to bond and don't think that you can't have a solid work relationship with anyone on your team. You may be their boss, but show them respect and trust and they'll respect you in return. 
``` const buildNumberedString = (stringArr) =&gt; stringArr.map((n, i) =&gt; `${i + 1}.${n}`).join(' '); const buildUpperCaseExclamatedString = (stringArr) =&gt; stringArr.join('!,').toUpperCase().concat('!').split(','); console.log(buildNumberedString(["Doc", "Dopey", "Bashful", "Grumpy"])); console.log(buildUpperCaseString(["earth", "wind", "fire", "water", "heart"])); ```
You solution is to just be human man. Lighten up. 
The problem is, CSS isn't enough. Because of this, we got LESS and SASS. But they are no longer simple and no longer CSS. A lot of things that LESS and SASS do, can be done with Javascript (loops, conditionals, mixins, variables, helper functions like lighten/darken, % calculations, etc). So instead of having a web designer learn LESS or SASS, they can spend the time to learn how to do a bit of programming to generate their CSS using JS, which will serve them much better in the long term, should they accidentally encounter more Javascript.
Just keep practicing. Because you'll eventually need some of them and if you forgot, you'll be forced to read its documentation again and again until you no longer need to do so. And even if you've already remember them, if they become rarely needed in your work, you might eventually forgets about them. So, don't let your skill become dull. Keep coding.
As a team leader you'll need someone to second you. Do not take the leadership as a lone-wolf kind of task, you'll need the help of your team since them are more important than you by a lot (and a well-oiled team will work without a declared leadership anyways). I prefer TL as in "Technical Leader" more than "Team Leader". In my experience: - 3 years ago a friend of mine (I met him at work, we got along and it was a pair I considered same-level) got promoted to leader. He continued being the same with me and I was kinda the second in charge of the team (and also the one that had the most experience in the project, together with him). This worked wonders since he could focus on more team-management kind of deal and I was helping him on code reviewing and technical stuff. Project ended, we delivered, both moved on, different companies. I still have contact with him though only digital (different states). - Last year I joined this company via my friend's recommendation (another friend that I know from music and sports events, never worked with him before). I got promoted to leader after 2 months and I never changed how I treated him. He took the place I got on the previous experience and that went really well. After 8 months or so we performed so well that we got some place to "create" another team and he was selected as TL. Now it's kinda rough because I don't have that right hand always helpful on my team, but he deserves. TL;DR: Keep treating him as a buddy, you'll need him as much as the next guy. And a leader treats his team as pairs, a boss treats his employees as less valuable members.
Focus on enabling them to do the things they are trying to do and mentor, focus on ensuring code quality. A promotion for you doesnt make them a less competent person. As long as the hierarchy is known there wont be any issues. Just dont be a jerk.
TypeScript is a superset of Javascript and it compiles to JavaScript. 1. Definitely love TS and would never code in pure JS again. 2. PureJS feels bad in comparison. Developing applications is just sooo much easier with typescript, because it's closer to other proper structured languages. In addition typescript offers Interfaces, Namespaces, better approach to ES6 classes etc. It's just so much more powerful. 3. TS compiles to JS so there is no difference.
The `$` function is part of jQuery library. So, configure jsFiddle's JavaScript to use jQuery, instead of no-library. And do not remove the `#` if it's part of an argument for the `$` function call.
TypeScript is not a language. It's a way to code JavaScript. I like it in some cases, in other cases it's not needed, but keeps the code neat and helps VS Code. About its type system, it's probably the only I feel comfortable, when I use Java, C# and C. If it's good or bad, can't tell. TypeScript is just pure JS with types. When you get much used to TypeScript you code more organized JavaScript, as you won't repeat your TS errors. It's not slower than JS because, when you transpile it, it becomes JavaScript.
could you explain what the const **mapFn = arr=&gt;** part of your code is doing? this is the first time im coming across this. thanks
Exactly! Team lead ought to be the guy interfacing with whoever is upwards from the team. It isn't as much someone who tells me what to do as someone who to their best capability tries to communicate to me what someone out there wants me to do, with emphasis being that I could concentrate on doing the said things instead of having to figure out what I should be doing.
&gt;const mapping= (name,index)=&gt; \`${index+1}. ${name}\`; i really don't understand this part of the code either, but it seems to me your code works. Any explanation would be great, many thanks
Deleted because it hurts someone here lol
As a captain and then a chief in a career paid fire department, we spend considerable time on leadership and development. Try thinking the other direction. Your team does not work for you. Rather you work for your team. As a parent, we work for our kids. As a coach, you work for your players. As a manager, you must work to provide the path and tools for your team to succeed. 
&gt; Is it slower with Typescript ? Is what slower? You are aware typescript compiles into JS right?
I suggest you to learn about [ES6](http://es6-features.org/#ExpressionBodies), it includes some features,including Arrow function =&gt; Template Literals `abc${foo}def` Other than es6, [Function Expressions](https://www.w3schools.com/js/js_function_definition.asp), it can be just a coding style sometimes. and for map function,you can search on google to see what it does with array. Without es6,it's still fine,and will be written as var theArray= ["Doc", "Dopey", "Bashful", "Grumpy"]; function mapping(name,index){ return (index+1)+ "."+ name; } function mapFn(arr){ return arr.map(mapping).join(' ') } var result= mapFn(theArray); console.log(result); 
I've been working on some projects for my portfolio in hopes of landing my first Web Developer role! I've been in the construction industry for 10 years and I'm ready for something new. Do you think I'm job ready? &amp;nbsp; This is my budget web app. It has bare minimum functionality at the moment but I wanted an MVP. &amp;nbsp; https://warm-beyond-42872.herokuapp.com You can use guest@guest.com - pw: 123456 or register at https://warm-beyond-42872.herokuapp.com/register if you wish &amp;nbsp; I'm still working on: * Form validation * Password reset * Ability to select different currencies * Calculation debt pay-off plan * Show meter for amount of budget allotted. * Link up the 'See all' buttons * Landing page with register link, hiding navbar when not logged in. * Functionality for income or expense (right now they all calculate as expense) * Addition stats * Any ideas you fine folks have :) 
They are not under you. You are under them. It's your responsibility to represent team interests against the Business. Team should be able to trust you that you gonna stand up for them. Sure don't forget Business side, but team comes first. Fail this and you gonna start losing ppl.
I think it has a lot to do with the company's culture. I agree with many of the technical leadership responsibilities many others are mentioning in the comments: making decisions, reviewing code, defining the product. However, as a team lead at my company, I've been told my primary responsibility is to keep my team members productive. So while I do make technical and architectural decisions about our product, I also am the go-to for many of the issues that come up for my team members: problem analysis, solution design, story clarification, debugging help, mentoring and tutoring (via workshops and sometimes one-on-one). I additionally define lots of our life cycle process: peer review guidelines, testing, and documentation requirements. Many of these things are shared among other teams in the department, but we are allowed to choose what works best for our team. I probably am coding vs these other duties at a 20/80 split, which might not appeal to everyone holding a team lead role. I know I'd much rather just keep my head down and churn out stories. But, this is what I signed up for. I'd say my role is half growing our developers and half getting our product built. I tell my devs that my job is to help them do their job first and foremost. I think this approach helps build trust and morale on the team. I encourage them to come to me with any issues they have within the domain I mentioned above. If your peer thinks of you as an advocate for them, that you are there to make their life easier, it will be much less awkward. Hopefully, there was a significant pay increase that comes along with all the extra responsibility, otherwise, all the stuff I mentioned might not seem worth it.
if im learning ES6 right now, should i just drop it and learn typescript? 
Probably he isn't. He's looking for advise on what is TypeScript and if it's worth.
activate winblows man
I would advice you to always learn the basics first. Learn the core of javascript, then, typescript.
The image at the top of the README shows: /* eslint doesn't need to access http/s right! */ eslint: { http: false, so this aims to go beyond what running node inside a sandbox would. 
Too bad classes often are unneccesary bloatware. Can you type hint Structs?
Being a lead is not about being over everyone on the team, it's about being a facilitator and telling the way to take. The only real difference from your superiors is that you are now accountable for your colleagues work. Being accountable means you have to show them how to do it right so you can be proud of what they did. As a lead, you are also the first line of defense of the team against outside agressions. If a deadline is not fair, you are the one to debate to change it. Basically, make sure your team can always work (before you can even think of your work) and be sure that your team is not bothered by something exterior.
&gt;Team leads are more about being first among equals rather than supervising the team. I came here to say exactly this. Your team needs to keep feeling they are working with you, not for you.
will do! 
Write the first one as a reduce,as you're mapping a bunch of values to a single value.
Great girth eh? Someone downvoted you - I think you've picked up some crazies around the site that might be following all your posts....... 
resist! Install linux!
After seeing those responsibilities, I don't think at all that you have a team lead role. You have a management role. As soon as you take a leadership role, you must recognise that you're stepping away from wrangling code towards wrangling people. Were you specifically seeking a management position or were you just roped into the task by someone who didn't want to hire proper management from outside and recognised someone who worked for a long time in the team? If you've never had any relevant training / eduction, then **Congratulations, you've just been** [**promoted to incompetence**](https://en.wikipedia.org/wiki/Peter_principle)**!** I hope you realise that management is not a natural progression of any line worker job. I have a ton of development experience, but practically 0 experience in leadership roles. Further, there's almost no common features between being a good coder and a good leader. I'm pretty sure you can wave your work coding away - rejoice the thoughts of bureaucracy, meetings, office power drama and herding people, but maybe you'll enjoy it. Remember why a lot of people dread managers? Because they have not idea how to do it and are immediately given way too much responsibilities, like for you (entire team). That means that you either got to suddenly be a good manager without any prior experience and training (a natural!), become a unsuccessful manager where you can't quite do the job right, underdeliver projects, possibly bounce around different employers until you brute force the experience needed or finally, be an abusive manager who is too afraid of failure that he shifts the blame, tries to claim unjustified successes and rule with FUD. Maybe once you've climbed the ladder a few steps, you'll find some other mid-level coder who you could promote to get rid of those bloated responsibilities.
I don't see why I would voluntarily force a set of rules on my coding that's unneeded, because it compiles to JavaScript anyway. Might be a useful tool to level a team of developers with various skills.
Lol i saw this, but what i loved more is she found a way to uncover npm modules used by medium. I mean, who reviews all module updates when you run yarn upgrade right?
Your responsibilities has increased, their job or responsibilities aren't reduced. You're still co-workers and totally equal.
I would recommend watching [this talk](https://www.youtube.com/watch?v=vXjVFPosQHw) by [Nicholas C. Zakas](https://humanwhocodes.com/). ([slides here](https://www.slideshare.net/nzakas/scalable-javascript-application-architecture)) The goal is _scalability_ but the focus is exactly the approach you mention, designing an architecture that is built on the idea of complete modularity: a small "director" core, and plug-ins all around to provide the various functionalities. The talk is mostly theory, but the ideas are quite well explained and can be easily implemented. Also, I just remembered -while looking for the slides link- that someone actually went and [implemented such an architecture based on this](http://scaleapp.org/). I can't say how good or interesting ScaleApp is because, while I knew of it, I have never used it. But it might be interesting in any case to at least have a look at their documentation and ideas. Note also that, yes, both the code in the talk and ScaleApp are written in ES5. This means nothing, really. The _ideas_ and _approaches_ can be easily translated into more modern code without much effort.
While there are advantages with static typing, I think it removes much of the joy I find that pure JS offers. If you code enterprise class applications, TS is probably a good choice. If you code for fun, JS is the probably more productive.
useless article : they compare nodejs against front-end frameworks ...
I created a boilerplate for quickly setting up express + vue projects with automatic deploys on heroku. [https://github.com/Zyrica/boilerplate](https://github.com/Zyrica/boilerplate)
[removed]
I find that TS is much more fun to use than JS.
 ["a","b"].reduce((result,value,index) =&gt; result +", "+ (index+1) +". "+ value) this doesn't give "1. a, 2. b", it gives "a, 2. b" ["a","b"].reduce((sum,value,index) =&gt; sum +", "+ (index+1) +". "+ value,"") this gives ", 1. a, 2. b" ["a","b"].reduce((sum,value,index) =&gt; sum +", "+ (index+1) +". "+ value,"").substring(2) this works but I'd rather ["a","b"].map((value,index) =&gt; (index+1) +". "+ value).join(", ") 
I use Typescript in some bigger project or library, but I use ES6 for smaller ones. If you are familiar with ES6 and a static type language, you can learn it in a short time. However, I found that the most painful thing in Typescript is dealing with modules, because most of my time spent on learning Typescript is how to correctly import a module.
Lap it up. Big companies are the best places to make mistakes at. They can afford it. Don’t worry about that ‘imposter syndrome’ feeling either. Sounds like you’ll smash it tho, nice one and good luck. 
We tried to use pure JS in our company but when our app grew up everything started to be messy. Lack of static type system brings many issues if you try to create something more then Todo list. I stringly recomend TS and I would never use pure JS again. Since TS is superset of JS, you don't have to write classes and other OOP stuff which TS offers. We use plain functions with types and new ES6/7/... features. On the other hend if you want to use static type system and don't want to use TS, just check this out [https://flow.org/](https://flow.org/) It's a static type checker but TS has better supprort in code editors and third party libraries.
No need to be an asshole. Because that is what you're becoming. 
Exactly. "Algorithms" is just business speak for "get shit done". And professional programming is just coding with your pants on and talking about "elegant solutions" while stroking your moustache. What you do now is start tanking up on react native like you lost your mind. You will not learn everything and I doubt they expect it, but it's not rocket science either. you ought to have a todo-thingie ready by the time you read this post :). Learn some algorithm and datastructure terminology at least so you can talk about that stuff a bit. On the other hand, it's definitely not the new recruitees job to design big data structures etc. You want to show that you want to and you're going to learn what you don't know at the moment. Also keep in mind this was a HR lady, so it might well be you get the chance to work with the tools you happen to know best. At the end of the day they do want to get shit done, and you said you got that covered.
Do not take the team lead position that way, Just cordinate and work with them as usual. Just have the same relationship with your team members and make sure you get things moving. We all understands our scope of work and environment, They will of course help you to keep things inline.
As for React Native I'm thinking about building a fun app where you can change your status with sleeping/not sleeping and it will send "i'm sleeping" messages on Facebook whenever someone messages you. I think this should be something fun ( I got the idea from a friend of mine that complains people think she died whenever she's not answering her phone when sleeping). I also have a NPM Module that I made for fun, it generates some random youtube songs with a pretty funny romanian song genre, that got pretty viral here in my country and a lot of experienced developers from huge companies started using it as a joke within their companies. I'm not sure yet if I should just get better on DOM Manipulatino or just focus on React Native, because as I said I don't know what the interview will be about. God damn :( &amp;#x200B;
I prefer ctrl+/ to comment and un-comment 
The interview will be about if you're going to make them money and you sound like a dude who will. You can ask them if you should get better on DOM manipulation or focus on React native. Just make them understand that you can do either right now and will do both eventually.
&gt; I use Typescript in some bigger project or library, but I use ES6 for smaller ones. The main problem with that approach is that at the some point in time small project turns into bigger project and it's easy to miss that moment.
ya umm the dude is not 'under you' and you are not 'above him'. only forced leadership is awkward. if you truly deserve the lead position, especially in tech, it should feel organic. 
Give Phaser a shot: https://phaser.io/ If you want something with that level of complexity and it to not be a total disaster you’ll need to lean on a library such as that. Try googling some tutorials in your native language. 
My advice is "don't lie". When talking with HR you can say anything you want, but when will talk with programmer any lie you said is gonna break apart in matter of seconds. I'm saying it from perspective of interviewer, it's so painfully obvious when you ask a question and someone knows nothing about it but tries so hard to make anything up.
It could be coding or anything else, but never give up on interviews! They are so educational, and what's the worst thing that can happen? They won't hire you, and you didn't work for them to begin with so you've lost nothing. Another worst thing is they do hire you and you hate it, then you quit. But there is always the third option of they hire you AND you like it. 
I don't know we can do that.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
I did that on purpose, since I didn't want people to accidently copy the license for their project. I tried to keep everything as minimalistic as possible.
I would advise you to go for the interview. Very few people feel confident about these things. If they have contacted you, and you have secured a face to face interview then you are obviously doing something right. The fact that you are aware of C# frameworks despite it not being your speciality would be a good sign to the interviewer. The fact that you are young will probably work in your favour. They are aware that you don't have much experience. I would try and come across as enthusiastic, and willing to acquire new skills. Also try to treat the interview as a learning experience. Use the difficult questions to identify if you have any weak areas - and use as an opportunity to address these. No matter what you end up doing, this may end up being valuable practice. You won't be expected to compose your own algorithms, rather be aware of existing ones, and when it is appropriate to use them. As you only have a very short time and algorithms is a huge subject it doesn't leave you much time to swot up. Perhaps googling typical javascript and react interview questions would help. In my experience, a lot of questions are on the "gotcha" type corner cases, so reading up on these might help. Something else to remember - an interview is a two way process. Think in advance about the type of things you would want to know about the position - perhaps not money, or terms and conditions, which are typically negotiated after the interview, but the type of work they do, how it is organised, the level of experience and background of your peers and managers are all good questions, and can give an indication as to whether the work is the sort of thing that you would enjoy, and be good at. Good luck for the both this interview, and a successful and fulfilling career.
God damn, I just found the position on their website. The requirements are OVER me a lot. They're looking for a Senior Full Stack Cross Platform developer. They also ask for proficiency in JavaScript &amp; React. One of the requirements is the following: "Solid software and systems engineering skills with regards to designing, developing, testing, maintaining, and operating state-of-the-art software " I never did any testing in my life, and I have no idea what "operating-state-of-the-art" is lmao. I think I'll just quit this and try to apply for a job at a smaller startup. This is a huge corporation, a friend of mine told me that he has a friend that worked for them and now he's at Microsoft. Clearly way above my league.
Dude, fuck that. You know those position descriptions often ask for 15 years experience on a tech that's been around 10 years? You go to the interview and tell what you are good at etc. You know it's entirely possible they'll put you into some other position too?\`Or if they want to risk putting a new dude onto that position it means they are testing the waters. You trying to do something above your level doesn't reflect badly on you, but if you succeed the rewards are high. You got a shot with the bigger boys, you take it ffs. If nothing else you get to say "well, last week when I was being interviewed in X" on the future interviews. Go in there, put on a gangsta face, be truthful, don't grovel. But whatever you do, do not miss this. "Solid software and systems engineering skills with regards to designing, developing, testing, maintaining, and operating state-of-the-art software " &lt;- a solid copypaste from millions of other job requirements =). Operating state-of-the-art software basically means you can start up Excel on Windows 10.
You're very young, they know that. You're being interviewed for your potential, not so much what you know now. What you do know now is an indication of your potential and talent, not so much instantly cash-able knowledge.. So, first and most important thing... DON'T BE A DICK You want to sell yourself as a nice guy, who's enthusiastic, talented, fine to get along with, and eager to learn. Someone who'll be an asset to the company in the future and won't screw things up while they do learn. The \*worst\* possible thing you can do is come across as an arrogant git who thinks they know better than everyone else. IMHO experience the absolute worst kind of programmers are self taught and talented individuals who never work as part of a team and develop an arrogance that they know better than everyone else. Don't be that guy. OTOH the best kind of programmers are the same, but learn discipline and teamwork. This is a tremendous opportunity for you, best of luck!
Nice JS. Silly attitude.
"Servant leadership."
Honestly, that's also what I'd consider the ideal job description for a good manager. :)
Very good point here. You seem to make a distinction for manager role. I think the same applies, but at a larger scale: managers and non-managers work for a company, not for a single person. At least in sane and respectful environment.
That is some neat code. Do you have a GitHub repo? I'd like to read through that JavaScript file and see how you structure your code. I find that my code always get really messy.
[removed]
Sure, I will post that as a github website by no time. Just don't copy my code to your project. Mine might be messy too (15 years old student). My email is DezapinatorP16@gmail.com, email me and I will send you my js file.
I disagree with the other commenter. Switching over to TypeScript right now will give you almost no disadvantages. TypeScript is a very thin layer, so if you understand TypeScript, you understand es6. Classes, destructuring, new APIs, ... - all of them are there. Heck, it tells you exactly what to do with es6, which made learning for me so much quicker and easier. It might be harder if you never worked in a statically typed language tho, I can't speak for that.
You didn't mention this, but if you haven't already you should disclose your age. Being 17 is a huge factor and may change the circumstances significantly
Depending on how close you were you might have a discussion with your colleague about the new situation and how it might change the interaction between the two of you during office hours. Ask him to help you transition to the new position (eg: "I'm new to this and I will probably make mistakes. Feel free to tell me how to improve the ways I handle some situations"). 
btw i use arch
See this is the problem. I only told her I am 17 after she told me that she'll set up a technical interview on 3rd jan. And she said she doesn't mind. But I think it would be kinda weird from her to cancel everything when I told her I'm 17, so maybe she just went along with it.
Windows. Activate. Now
Interesting. Legally speaking, you can't sign a contract under the age of 18 (afaik in the UK at least) which will complicate things. It's different if you were working in an office but for remote work it's quite an issue. Not to sound like an ass, but I wouldn't be hiring a 17 y/o to work remotely and I'm unsure as to why somebody else would - especially for the position title you posted. To be honest with you the whole situation sounds a little bit sketchy.
Learning Typescript includes learning ES6, so you may as well learn the fundamentals of the language before learning the arguably more advanced features of Typescript.
What editor is that?
Hey Leonard. First off I want to say thank you so much for creating this repo to help junior devs study my article, thank you for crediting my original article, and thank you for tweeting at me when you first posted it. I really appreciate the effort you put in and your passion for helping others learn. I wrote the original article based on this sort of running checklist I'd been creating the last few years training and mentoring junior devs coming out of school and bootcamps, specifically geared towards bridging the gap between some of the computer science stuff and under the hood stuff I saw deficiencies in that affected their ability to produce code in production and ramp up to get over the intern level hurdle into being a production ready developer. It certainly doesn't cover everything you need to know. But at the time I was focusing on core Javascript concepts in my articles. I had planned and told many people that read the article I would follow it up with a series breaking down each concept, but life got in the way and I'm only now able to circle back to it. I am concerned though that some of your links miss the mark or don't really answer or understand that exact beats I was hitting on. This is my fault, not yours and your contributors. Now that your repo is being used by so many to study, I have some concerns it might lead to rabbit holes or misrepresent much tighter and more specific lessons I originally intended to get at. I was wondering if you'd be willing to make me a contributor to this repo. I'd like to replace your links section by section with study material, leaving some of the links in, replacing some with more targeted study material. I understand the spirit of the open source community, but since this is intended to be an study resource, I think contributors should be vetted. I am not really concerned about credit or anything, but since my article spawned this study repo and it's becoming so widely used I feel responsible to make sure I provide the best possible study material I can for it. Once again thank you so much for your efforts and enthusiasm and linking back to my original article and giving me credit. I would also encourage you to seek out other junior devs, specifically Erika Rita, who are building study repos breaking down this list, but include sometimes pages of their own content based on their studies. Anyone studying the list is free to ping me on Twitter and I'll answer questions as best I can. I am also open to opinions from other developers in this thread as to if they agree with my recommendation. I'm not a big reddit user, I don't know the etiquette of this subreddit, so forgive me if I'm overstepping.
I have yet to meet a TL in charge of disciplining in this industry, that's the PM's job. The TL guides the team and due to his capacity of seeing the bigger picture he's in charge of taking the technical decisions that will get the project to reach the deadline, it's not a boss
Just a tip, telling strangers on the internet you are 15 and inviting them to email you might not be the best idea!
VS Code.
&gt; the lead is certainly not equal to the other contributors. That's why they are called a lead. I'd say there's a significant margin between 'equal' and 'different' - one has a load of value-judgements wrapped up in it.
Because all work is a perfect meritocracy? :D My experience tells me vastly different things. Hierarchies only have value to the people near the top of them and they're absolutely the worst way to make decisions. If up to each of us how much we want to lean into that.
Don't stress too much because : 1 - Either way you are going to make some mistakes ... just like anybody else 2 - You are going to learn a lot out of it 3 - It's a big company and you feel like you are not a fit : there is nothing to lose then ? :-) 4 - A big company cares about the potential of a young employee : will he be able to work under pressure ? to understand what we ask ? to learn new things -hey, you've got some ammunition here !- ... and most importantly the social traits : humble ? distant ? fast to catch up ? knows to ask when he does not understand ? If you are relaxed and focus more on the conversation than your programming skills you may even enjoy it ! ^^ As a senior dev with many years of mistakes... ahem, experience, I would be rather impressed by what you know so far and I would try to make you comfortable and speak about what you like to do and what you kind of dev you want to become. Good luck and keep us updated ! 
what's the memory footprint like?
BTW, this is your repo, it's your call, this is just a suggestion and contribution offer I'm making.
Well, I don't know you, but this post reminds me of a team lead I once had. Great developer, fantastic as lead developer in a project, horrible team lead. But what do the team leads different, that we like to work with? Most important: I don't work "under them". They are just the guys that get their asses kicked if I fuck up, and we both know it. So they can help me do my job. If I have a problem I talk with them first, if there is a problem with the customer, they escalate it. If there is a bureaucratic issue that annoys me, they take care of it. In the matter of "getting work done" they more work for me than I for them. 
As an interviewer I can tell you that people much prefer a direct hire over an agency and that no matter what the description says my #1 criteria is always "is this person a learner?". If they are a learner it doesn't matter what they are a master of at the moment, because they can learn new stuff. So my advice is to lean on that skill. One area that demonstrates this is to learn about the company... you can normally find a lot of information about a company from their own site if you go to the footer and look for "investors" or "corporate", also look on their blog and twitter. It really helps to know the company and seem more interested, pretend you are investing your money in it and consider it from that point of view. Oh and lastly ask questions... It feels like a bad end to an interview when there are zero questions asked... but when there are questions asked it feels like a good conversation.
Salivates in the corner*
&gt; Too bad classes often are unneccesary bloatware. That's a really bad oversimplification. &gt; Can you type hint Structs? Interfaces in TS can define member properties, not only methods. So yes, basically.
&gt; Mine might be messy Don't worry about that. There's tons of messy code out there. I guarantee you that if you are into programming, and care about code quality, you will run into maaaaaaany projects that will make your skin itch. Don't be afraid to post code that you think is messy.
Haters, haters everywhere...
You can define structs with `interface`: interface Foo { id: string } Or as a type alias: type Foo = { id: string } There are some differences between them, but you can use those to avoid classes.
There is this awesome book "How to become a technical leader" by Gerald Weinberg. In the long term, I found it changed my mindset from "I should what and how to do every task" to "How can I make the team work better? , empowering my team mates to innovate, try new things and make sure knowledge is shared." 
I prefer gcc
And TS doesn't take away the dynamic typing from JS. TS allows you to add static types, but you can also let them stay dynamic. Also I agree that coding the types and interfaces first is much more fun for me at least, as it really helps with layouting your application, no matter if small or big.
So was it moved or just removed?
Super! thank you, one last question (sorry if this sounds very noob) how do I make the amount show two decimal places?
Pirated Windows copy, just use linux man :)
Hi Stephen, thanks for your support, it means a lot to me. About the contribution, send a PR to the repo or open an issue just exemplifying how you want to do that change and we can talk about that. Others contributors can talk too and we all can discuss about that.
[removed]
also good advice! 
I'm not gonna lie... You sound like you did great on the phone interview. Saying no to tech you don't want to work with, being honest about not knowing React/Native, etc. And I think it's because you didn't know it was an interview and didn't expect it so you didn't stress. Go in with the same attitude and just be honest about what you do and don't know, try to problem solve the best you can, answer AND ask questions when you need or want to, and just show genuine interest and you will do well. Your interviewers know you are young and green and don't expect you to know everything, they just want to see your energy and enthusiasm to learn. Plus, what's the downside? At the very least, even if it goes poorly, it'll be an extremely valuable experience for you. So just don't stress too much over it, lightly prep, and go in and kill em :)
[removed]
[removed]
Is that open source? Can we see it? 
Why do you AF16 prefix everything? That's what classes are for.
&gt; you will run into maaaaaaany projects that will make your skin itch Including ones you wrote yourself 2 weeks ago
Rebel, never activate windows.
i too am an arch user
Borg confirmed
Get a cheap key off of eBay.
Captured by Pax
They can even claim that chromium is their invetions, whatever, just take it.
I don't mean any offense, but as others pointed out, this isn't really an open source project. You took my original article, paraphrased the points often incorrectly or in a way that misses the point, and put together a collection of links under each point to study the fundamentals I put forth in my original article, with what seems like others who are also attempting to study those fundamentals. The link lists do just seem to be someone googling keywords from the paraphrasing you did of each fundamental. There's no original intellectual property here. You didn't create any of this or demonstrate any special skill to make it. You did do the work and make a good effort and all the links are good material in general. It's just no junior dev would ever be able to work through this huge list of disjointed links and come out with a cogent, cohesive, clear understanding of the concepts and how to apply them. It's just a huge information dump that 26k students are going to bookmark, and 90% wont ever make it 15% of the way through. I've been teaching this stuff and mentoring a very long time, trust me on this there is way to much overlapping and general and unfocused information in your repo. If you want to select a core team from your contributors of senior devs with 10+ years of production experience that mentor/train/teach this stuff for a living, I am more than willing to submit a PR and discuss it with them. Or maybe invite some of the authors of those articles to be on the core team. I can think of a few that might be willing to join that write really good educational Javascript content. They would be using their knowledge, experience, and name as trusted sources for curate the guide. Some of the MDN articles you link I contributed to I think, and I think a few other articles I wrote are linked. I was okay with it when it was your personal study guide you shared to help other students, and github just seemed to be the place you hosted it, even though you didn't ask me until after you published it for permission or if you wanted me on the core team or feedback or anything. But now that it's such a widely distributed and trusted study resource for learners, students, junior devs, etc., and you're even sharing it now using the title of my original article, it's something I'm concerned about. I'm really trying to tip toe around here and find the best way to convey this to you. I'm not a jerk, if you don't want to populate it with the content I'm offering, I'll just post it on Medium as I make it and you can pull from there what your team decides to use. It's going to be a big enough time sync to flush all this out, and a lot of the study material I have already from study guides I've made for classes, team members, mentorees. I'm really not going to jump through the extra hoop of opening up a discussion on every beat with 49 contributors that actually seem to be coming together to collaboratively study something I put together in the first place. Being a developer is a skill. And teaching/training/mentoring developers is a separate skill. Collaboration and community sourcing of efforts is great, but come on. You and your contributors are putting this study guide out there as authoritative based on it referencing my article as its source material. And authors of the articles and videos you link in that repo. Wouldn't the best source of content and curation of a guide studying articles be the author of said articles? You didn't post this as a blog article, you made it a git repo, and then started accepting PRs and taking contributors. People started forking it. If you're worried about one git handle showing up in the blame for too many lines in your readme I can just email it all to you and you can commit it, and just throw a link at the bottom to the corresponding medium articles or something. Like I said before. It's your repo. I wont make a stink and I'll drop it after this comment. But let's be real here. You ripped off my article, poorly, created a study resource that looks at its surface as solid but really isn't going to achieve it's intended purpose. And now you're on Reddit congradulating yourself. I applaud your effort and initiative. But I know of more than a few junior devs out there that put WAY more time an effort into doing exactly what you did. Wrote and produced original content, some even came back to me for feedback as they did it. Because they wanted to be sure they were learning and understanding it right. Erika alone put more time into her git repos on the first few concepts then your entire team did on this entire repo. And you know what, even though shes only a few items down on the list, her content is much more helpful I think to learners. And man, had her repo ended up in gits best of 2018, I very much doubt shed be on reddit talking about how proud of herself she was. This is reddit, and the internet, so who knows maybe I'll be lambasted for saying this. Anyway, your choice, offer stands, let me know.
HOW now brown cow
What?
Wat
#HATERS, HATERS EVERYWHERE...
Not yet. Here is the code if you want to have a go at it. https://drive.google.com/file/d/1nBvM4G9nbpff1ryIO54Mkl3imopz6fAn/view?usp=sharing And the test blog https://allnews8888.blogspot.com/ Meanwhile I will learn a little javascript
I've tried several times to force the swap to Linux, but the poor performance in multiple games I play keeps me away. I tried dual boot, but what ends up happening is I just stay in Windows because it's quicker to just hop in a game. I started looking at GPU passthrough as an alternative, and my machine supports Vt-d, but I would need to purchase something additional to allow my keyboard/mouse to work both in Linux and my virtual Windows. That and I'm not sure how that would actually work with dual monitors since the core of GPU passthrough seems to be having your monitor using your onboard video card for Linux and your actual video card for the Windows virtual.
A short blog post about the npm's predictions about JavaScript made during Node+JS Interactive 2018 event, what you think?
In my opinion someday React will be replaced by Web Components - it may happen in 2019
I just want to emphasize I don't care about credit, you can make all the changes all under your name, I just want to fix the study guide. To help learners. And since it's a study guide studying my article, I feel like it's a no brainer. That's just me.
As many others have pointed out, leadership and management are two different things, and it's actually vital that they are separated. I'm not sure about your team/project/company, but often times a leader is more of a mouthpiece and mediator: a few differences would be: * A team lead generally can't actually punish in any substantial way. Sure, you can assign someone a task they don't want, but that's not generally effective as discipline or getting the task done. You can't fire, dock pay, etc. * A team lead mediates discussions, like disagreements on priorities or technical direction, but should generally not decide by force, but merely tie-break if necessary (Example: If 3/4 of the team wants to use Angular-ng because they know it, but you think Vue is really nifty? You can spend a little bit of time discussing it, but there's a correct decision here that isn't Vue.) You can advocate and force some lesser decisions - for example, adding code standards or applying git-flow methodology - but you need team buy-in, or it won't work. * A team lead translates between management and workers - you explain schedule problems to management, and various needs to the workers. If because of a schedule slip, everyone needs to work 60 hour weeks? You may be the one saying it, but management needs to approve and enforce that. * A team lead is a facilitator: you are the person the team will go to with a blocker, and if you can't fix it yourself the team is going to expect you to find someone who can. The other big thing to keep in mind: you've been assigned to be team leader. At best, this is a formalization of what you already were (and that's ideal!); at worst, it's arbitrary or based solely on seniority or other meaningless criteria. Managers generally don't 'lead', and leaders generally don't manage. Both only have a problem when they don't perform in their lane: a manager who doesn't actually manage or a leader who doesn't actually lead is a far greater threat. I've been on teams where there's a assigned leader and that person doesn't lead; at that point, as a worker bee, you step up and lead from below, and that can have consequences - from getting things done to being assigned leader yourself. I'd also argue another thing: being assigned leader is not a promotion; it's a shift in job duties. It doesn't change the technical tasks you have, but adds a number of communication and planning tasks, generally without substantial reward. It also means you're the one both team members and management look at if there's a problem. This doesn't mean you shouldn't do it - it's an important role - but it's equally important to keep in mind that you are, at least in the majority of cases, NOT a manager. Finally, one other thing to recognize is that a good leader doesn't mind not leading. If someone on the team is really passionate about X? Let them lead it. Encourage them, help them time box it, but let them solve that class of problem - it's one less thing you have to handle. Ideally, half of your responsibilities you simply get out of the way of someone on your team.
I would sit up and get ready for it. I would hold my head high and walk as far down the process as I can. Maybe they wont hire you. Maybe they will. The worst that will happen is they will find out you aren't skilled at what they want and thank you for coming in. The best they can do is see that you are lacking and find a way to fill in those holes and help you start your life of programming.
WORDED WELL......ONE
Or use a loader
VS code. from what i have seen it is the most popular for JS right now. Kinda took the world by storm a year or so ago.
1) LOVE 2) Yes, cause well, types and powerful static analysis (strict null checks, etc.) 3) Mhm, no!?
Mhm I get what you mean. If I have an algo in mind and what to write it quickly, I probably use JS. But for everything else, TS.
[removed]
What sort of weirdo stylegudie are you using that dictates 5 line breaks between functions
&gt; Kinda took the world by storm a year or so ago. RIP webstorm 
Sounds like a good enough reason to buy another machine and have one dedicated machine for gaming and another for dev and day-to-day (but I'm always looking for ways to justify buying another computer to myself).
Im very opinionated and I cant stand the way you write functions with the curly braces underneath. Also... Happy new year.
Yeah, its lightning fast because you don't use a DB and you can't scale it past one node instance. Include some ways for it to scale and lightning goes away(depends on how you define lightning i guess). Its easy to have a socket publish. Node is single threaded and needs to scale for usability at larger scale and to be fault tolerant. Then you'd have to include some sort of security with some ways of authenticating your users and their messages. Use Json webtoken and you'll have larger headers, needs to validate user from DB, store message in DB, have the node instance watch for dbChanges, publish changes through sockets for specific users and BANG you got yourself latency!
Hi /u/P16_Programer, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
:o
What? Is it really order of magnitude faster? Something's afoot! And if not! Can't wait for someone to include it in some CRA style builder! To be honest I gave up on Webpack after 2 and went the easy way. 
&gt; this post was removed. 
I don't. Sorry. That's a full day's of effort. 
do you know openjscad?
Yes, why? 
It sounds like you're workshopping a lot of ideas, in which case I think the open sourced, collaborative, and resource rich environment of three.js would be a great place to start. Not to mention it's super easy to build procedural geometry in three.
I really want to make Linux my primary, but I am not willing to buy a second computer to swap between in order to use it.
Yeah I'm aware of this, but it's just a testing project, I have no intention of including a Database or a user authentication :) 
Thanks but that's not really an answer to my question. I just wanted to know in which conditions would be better to open source a project. You can forget I'm using Three.js, I said that just to give a little overview of what I'm doing 
In my opinion this is something people who don't know or understand react say.
1) Absolutely loving it! It’s a good static typing system that brings order into javascript code 2) Depends. On real projects I would always prefer to use typescript. Otherwise for small toy projects that took 1 day to make, I won’t bother with typescript. 
&gt; Knowingly or unknowingly putting barriers in place that disproportionately affect access for people with disabilities–or any other protected characteristic–is discrimination, and it’s definitely something to worry about. Calling lack of web accessibility discrimination is a gross exaggeration, what will you call it next, harassment? I'm sick of the newspeak crap, please don't do that, because it has the exact opposite effect on rational people. Truth is accessibility is cool and all, but it's disproportionally expensive and difficult to pull off right. Most businesses cannot afford to consider every disability out there and indulge every accessibility advocate, and it'll always be a subject of cold calculation. That being said, I don't necessarily think accessibility is something that should be advocated - the awareness is already there, what they're doing now is attempting to condemn everybody that refuses to comply, which is very, very wrong. To be honest only government institutions should be fully accessible, everything else is none of your business. Leave it to the owners to decide whether accessibility is an eligible cost.
&gt; effective communication let’s people know that you’re not giving orders to people for the hell of it, but as part of a plan in which the team needs to execute. Wish I had more than one upvote. OP: for a more in depth discussion of this, check out [Extreme Ownership: How U.S. Navy SEALs Lead and Win](https://www.amazon.com/Extreme-Ownership-U-S-Navy-SEALs/dp/B015TM0RM4).
It might be weird but.... It makes my code look more clear.
Those are just the ones that make you shake your head. I dare you to go back a year!
Literally the only difference is duty and pay. You work harder for more pay. It has less to do with ability than you think.
Not sure what's to oversimplify. Defining feature of classes over structs is that classes provide inheritance. And inheritance isn't exactly a healthy practice. Couple that with principle that you shouldn't expose more than you absolutely need to, you should not provide means to use your code in a way it was not ment to be used. That is, do not provide option of extending when it's not deliberately considered use case. Structs seem to convey intent more clearly as there is more options and variables to worry about and usually do not sacrifice any functionality. So that only leaves us with fields. A functionality which technically doesn't require a class to work, although people commonly associate that with classes due to implementations in Java and C#. I think Typescript goes that path, because it doesn't really think what actually makes sense from design point, but just to be more similar to C# (main microsoft language). However that means little in the world of javascript. Structs over classes. Composition over inheritance. I've seen a lot of classes which could have easily been expressed as Structs without sacrificing any functionality what so ever while also being a lot cleaner and easier to read / understand.
So this happened to me in my current position, came in to the job working with some already established devs and within 6 months moved up and they are now my direct reports. We built a good fun relationship during that 6 months and I think that is an important part of a successful relationship, I love working with the guys on my team and I've heard they are quite happy working with me. The trick for me was I didn't flip a switch to "boss-mode" or something, it was a slow progression. Here's some of the things I did. * Start building more lateral relationships within the organization, this will help establish yourself as someone "higher up". * Take interest in those who you lead and their goals and work with them to help them achieve those goals. This helps them to accept that you are now "higher up" than they are but you are going to use that power to take care of them * Transition your tone and behaviour. The things you say and do will be reflected in your team. Keep a neutral position on disagreements and bureaucracy, don't get involved in office rumours, dial in your natural responses to things you don't like, etc. As silly as it may sound in some aspects I consider managing a team like raising my kids, I behave the way I would want them to behave. * Think at a higher level. At the end of the day this is your career, think about how to move yourself up and what is above you, think about how you and your team can benefit other areas of the business, and think of who you need to please in your position. Use that to guide your team. Hope that helps somewhat, I'm sure this is poorly written but I wanted to get in a quick response since I'm busy and would probably forget. Feel free to DM me, Id gladly provide insight on how I would handle any specific situations. 
Thanks. As mentioned in my previous response, that's one feature which I really feel missing from vanilla js. Might as well give typescript a spin.
You've got nothing to lose and everything to gain. Study up, do the interview. Even if you don't get the job you'll have gained so much by learning a new framework and getting interview experience, because even if you get the job this won't be the last interview in your life, and it's a skill that will improve with experience. Also don't worry about getting nervous, they expect all candidates, especially young ones doing their first interview to be nervous. If you start feeling really nervous you can even tell them you're feeling nervous, it's a psychological trick that will reduce your nerves. I have no idea how or why it works, but I've been told it works, I don't have any studies to link to though. Also check the company is a real and the HR lady you've spoken to actually works there, look at their website, google the HR persons name, look for employee reviews on [glassdoor.com](https://glassdoor.com). I would do the interview even if you find out it's not the sort of place you want to work for just for the interview experience. 
a.) have the conversation b.) let them know you're both on the same page about you not being their boss, not being able to *make* them do anything, etc... you're just there to get status, and coordinate efforts... but when deciding on the work (if that's even done within the team) you need to do it as a team and get them to forward the ideas(and let your ideas take a back seat)... you just nudge them all towards compatible ideas so they're not pulling in opposite directions come work times, and get buyoff from each of them
Well I suppose we can all be happy that Typescript is superset and not different language which compiles to javascript.
What's the easy way?
That's [Allman style](https://en.m.wikipedia.org/wiki/Indentation_style#Allman_style). But in JavaScript, the more common [K&amp;R style](https://en.m.wikipedia.org/wiki/Indentation_style#K&amp;R_style) actually has a language quirk in its favor. Automatic Semicolon Insertion (ASI) will infer a semicolon after the `return` keyword if nothing but whitespace follows it on the same line. So if you had wanted to return an object in object literal syntax (as in `return { foo: bar }`), you would have to place the opening curly at least on the same line as `return` (or would be forced to have an opening parenthesis there). Because otherwise, ASI will interpret Allman style there as `return;` — which of course returns `undefined` — followed by (and here is where it gets interesting) a [block statement](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/block#Block_Statement) (rather than an object literal), containing a [labelled statement](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label) (rather than a property definition).
Team lead doesn’t necessarily mean making final decisions on behalf of your team. Lots of team leads will make proposals and invite the team to discuss. Also, you can invited discussion while still convincing everyone that your proposal is the right way to go. I truly believe that people are much less likely to follow your leadership if you say “we’re doing this because I say so”.
This. A good team lead, when it comes to decision making, is like the vice president’s rile in the Senate: tie breaking votes only. You foster communication and hopefully have a clear winning technique become apparent to all. If someone valuable’s idea gets rejected by the group, then it falls upon you to talk to them and make sure that they know they’re still valued, was a technical merit decision, etc. and try to see that over time they get some ideas passes through to implementation later on. If they’re good ideas, anyway. 
Programmers aren't high school students and adults don't get "disciplined" at work. They get written up and told to stop whatever they're doing, that's it... If they keep doing it they get fired. What the hell is with this industry? It's like all of you want work to be like a college or high school. 
For my part: get rid of flow, replace it with TypeScript. 
It looks like a great, useful tool
It’s eye opening for me to know that even Dan and lots of you guys struggle with algorithms. Recently I was taking lots of interviews and it was so frustrating when you got these timed hackerrank or in person algorithmic stuff. I am applying as a React dev. And I can deliver good quality production app. Yet not able to get past these algorithm tests. Now I am trying to learn all that CS and data structures stuff. But that’s just for passing the interviews. Instead I could spent my time learning newer and more relevant tech like graphql. Seems like evaluating web devs by cs standards is a very actual problem.
gotcha
100% right
const filteredJokesData = jokesData.filter(joke =&gt; joke.id &lt; 3);
I can't tell you if you're job-ready (I'll let someone else), but I actually really like this app. My observations: 1. The "See All" buttons on the dashboard don't take me anywhere. I'm assuming you were just waiting to do that later, so no big deal since it's still in development. 2. In the transactions tab, I marked an item as "Income" and it still counted as an expense in "Spent this Day" and "Spent this Month". I somewhat expected income to be have green highlighted text or something to distinguish it from an expense, but that may just be a personal expectation. 3. Having budgets is cool, but what happens when you exceed a budget? I would usually expect my budget page to show a red danger triangle or something to let me know that I've exceeded it. 4. I love the stats page - would be cool to see it for the Debt page, too
Create react app or next.js
What are you trying to do here? Run an actual production application? This will not accomplish that if that's your aim. You need to use a packaging system like webpack to resolve imports like this, if that's your aim.
You were asking when to publish, I thought you were asking when to participate, to which my usual answer is "always". I suppose my answer to when you should publish is "whenever you're ready".
Yep exactly :) what do you mean by ready? First public platform release? 
`npx npm-check -uE`... Update patch versions without too much concern. Check the changelog on minor version updates and make any small code adjustments as necessary. Ignore major version updates (perform those one at a time separate later). Run unit tests and ensure they pass (if you don't have unit tests you're already doing things wrong). Do some quick manual testing if you think it is merited. Deploy to Dev environment for some additional quick tests by others. Merge into master so other devs can pull into their branches. If anyone noticed bugs, open a bug branch. Once it's been deployed long enough to Dev and tested enough, promote to either test environment (if you have that luxury) or prod. For major dependency version updates, follow similar pattern but be much more thorough in your testing. Update only one dependency with a major version bump at a time in it's one branch. This process won't be the same for every project. Mission critical software should have much more strict testing and deployment steps with multiple levels of stakeholder signoff. 
502 Bad Gateway 🎉
In the indie world your product isn't defined or judged by how appropriately it was revealed to the world, but by how honest and fearless you were with your journey. Good luck!
I would focus on making the product and getting real users before you start worrying about competition. Frankly, if you get people interested in using it, contributing to the repo, AND people looking to steal your code, you will be in the extreme minority, and should be counting your lucky stars, no pun intended.
So I’ve always thought this is a great idea for a tool. But is it going to take into account css for other pages on the site, different screen sizes, css that might only be activated after some js runs (maybe after scrolling or something)? If it takes these factors into consideration then you have my attention... 
What's the advantage to using JS for this instead of Media queries?
Fireworks! [https://codepen.io/jayprado/full/PXOQqJ](https://codepen.io/jayprado/full/PXOQqJ)
I think even if you are a manager, you can be as equal with the team. My formal employer (leader of big project for our company) became one of my best friends. I believe that if you respect each other, you can be friends even if one is "The Boss". Example: When we had meetings he would tell me what I need to do and said what I have done something wrong. But even in office, when something was not work releated, I sometimes just had to tell him to f**k off.
Site's down right now, but Chrome Inspector has CSS (and JS!) coverage: https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage
Hi /u/JohnnySuburbs, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
It absolutely is discrimination: if you decide "accessibility is cool and all" but not worth it, you are making a choice to discriminate. That may be the same choice that the majority of the sites on the Internet makes, and it may be a sane and rational choice, but it's still 100% discrimination. When you make it so that your product is not accessible to X group of people, for whatever reason, then by the way the English language works you *are* discriminating against X.
His site loaded for me, but... this wouldn’t solve the issues I detailed in my post. 
&gt; When you make it so that your product is not accessible to X group of people, for whatever reason, then by the way the English language works you are discriminating against X. According to this framework, it is impossible not to discriminate as a developer.
You might wonder why the hell would someone do this? This is an attempt to bring HTML based interactive UIs to my WebXR engine. I'm using dat.GUI and send fake MouseEvents for interaction from the VR controllers. One minor thing that didn't work were Number Sliders (the blue thing) - dat.GUI slides them based on a relative mouse offset to the slider element. To fix this, I'm moving the original dat.GUI element behind the WebGL canvas. Sharing this because I thought this looks funny (and insane). //FIXED
Doesn't address a recursive mechanism to find coverage, but your other notes would be resolved. That's a dynamic value, so using Inspector on a page and stepping through your scenarios (screen sizes, JS timing) would present you with your expected value.
I like first comment too. You’re not over them you’re just the leader in the team. You should straight up tell your team that you have more responsibilities now and that you’re gonna be in the ass with the work ( as a joke). They’ll laugh but they know it’s kinda true. But still don’t change how you treat them. A good leader doesn’t tell you what to do, he/she shows you what to do. Good luck!
I was thinking it sounds very sketchy, an “HR lady” for a company contacted a 17 year old via Facebook, and offers him a fully remote position? They’re either looking to pay 30k salary or it’s a scam, right?
This article suggests that if a disabled user tries to use a site, and because of their disability they can't use te site properly, and then they sue you. Does someone really have grounds to sue you just because your UX is bad? What if you are a single developer working on a hobby project?
Sure but its important to note that discrimination does not always imply malicious intent. In that regard its similar to the word propaganda. Typically its used with a negative connotation, but the word itself does not mean something is bad or wrong
I’ll probably be downvoted to death, but here it goes: 1. Hate it. It’s not a bad language, I just don’t find it necessary. I’ve worked in a few massive JS codebases and I can only think of a handful of bugs that could’ve been sorted out by Typescript at compile time. Testing and error tracking add layers of safety without muddying up every other line of code I write. 2. Yes. Plain JS is very readable. Most documentation and tooling out there is in and for plain JS. The web has always been about immediacy: write code, see results, and it has lived a long life without the need for Typescript. 3. Yes, *development* is slower with Typescript. You write a lot more code. Goodbye 120-character line limit. I often find myself fighting Typescript instead of getting stuff done. I recently spent half the day making an interface for an npm package that didn’t provide one. Without Typescript, you can try things out with a lot less friction. And trust me, Typescript doesn’t save you from writing bad code. The codebase I currently work in is riddled with “any”, unnecessary type declarations, etc. If I’m going to put effort into writing good enterprise code, I’d rather write good JavaScript than good Typescript.
&gt; To account for the absence, one can always compare the result with index === -1, yet I find using the bitwise not ~ operator much more succinct and readable Succint? Yes. *readable*? I'd say that's objectively untrue. the tilde operator is read as "not" most of the time, so `~index` means "not index", and the check `if(~index){` would be read as "if not index", which is pretty confusing when you consider that you're actually checking that the index *is valid*. Checking with the `&gt;` operator is the best method IMHO, since you're objectively checking that the index is greater than the invalid value. &gt; !!(field &amp; notified.comment) //=&gt; true Honestly, at this point you're just trying to reduce lines while sacrificing readability. **Less lines does not translate to easier to read code**. Not to mention the implicit limitations of bitfields being 32-bits - which makes the code error prone. Bitfields are great when you *need* the optimization. Most often than not, they generate noise in the code and makes it far more complicated to read and reason than it should be. It's fine if you keep it at a low level and abstract it over other functions, but most of the time, applying it is trying to be "too clever" when you don't have to be.
Weird how relevant this article is to me right now, working on parsing diablo 2 save files and needed bitfields for stats. https://github.com/jkupcho/node-hero/blob/master/lib/readD2sStats.js
Yeah.. doesn't make any sense
I think it's awesome. Nice work.
From my understanding it’s similar to ADA compliance. Essentially having a website that is unusable for disabled users is seen the same as not having a wheelchair ramp (for example) to your storefront.
I’m just jealous you’re starting ten years younger
&gt; Bitfields are great when you need the optimization. Most often than not, they generate noise in the code and makes it far more complicated to read and reason than it should be. It's fine if you keep it at a low level and abstract it over other functions, but most of the time, applying it is trying to be "too clever" when you don't have to be. Couldn't have said it better myself. Bitfields needn't be exiled to the phantom zone, but are not appropriate for vanilla application code. If you have a deeply nested loop or some logic that is called a bazillion times, then they might be a good optimization but generally should not be a go-to feature for everyday coding. 
Yeah if you play games with any frequency then Linux is not a good fit.
200 IQ advertisement for him JS bot
Nope. It's legit. I'm a moderator in a programming group and we have a lot of HR people in that group that post jobs and all that kind of stuff. 
I think it's pretty bleeping awesome 
It's a real shame because I want to use Linux. Most basic Steam games run fine, but no Blizzard games at all, Rocket League runs like garbage. Also graphics are just kind of worse - Borderlands 2 runs super smooth, but all the snowy landscape is blown out super bright compared to Windows. 
I generally maintain a desktop for windows gaming and a linux laptop for everything else.
So I realized that "center" wasn't working because I had \` map.fitBounds(mapBounds); \` at the end of my code which I commented out and corrected. Now how do I make my map overlay only visible on a new button called "Marine"?
Yeah the dual machine setup seems common. This is why gpu passthrough seemed like a nice fit. I bought the piece today to allow me to swap my keyboard and mouse between my Windows VM and Linux OS, so going to take another crack at it today.
The answers others have put are fantastic, especially those about servant leadership. Consider the change as a change in role and responsibility, not position. You are now the mix of developer, project manager, analyst, SDET, and architect. The team will look to you to help make the right decisions and to encourage their growth. Congrats on becoming a lead. Few people have that in them. If you embrace it and can do the job well, it really can grow your career (supposing you are interested in the leadership track as a career) faster than being an individual contributor.
Awesome comment! Well said. 
And here I am reading that as _filter joke.id by heart_...
That is really really cool and I can see a lot of applications. Great job!
Honestly I don't see how open sourcing can benefit to your business. Do you already have clients? Does any of your client require it?
You're not wrong: deaf people *are* discriminating against non-sign-language-speaking people. Everyone seems to think discrimination always `===` bad; it doesn't. Well, that's not really true: it almost always is bad, on some level. It sucks that, as a speaking person, you are discriminated against and can't understand what sign language speakers are saying. That's clearly bad. It's just not a moral failing: the sign language speakers aren't bad people for discriminating against you. Getting back to the original point: it *is* discrimination when a site doesn't work for disabled people, and that always is bad on some level. It sucks for disabled people when they can't use a site. But at the same time, it doesn't mean every developer who isn't willing to spend countless hours making their site work for every possible disability is a horrible worthless excuse for a human being.
I just looked it up and apparently ADA only applies to companies that employ 15 or more employees so looks like small businesses and hobbyists are safe
So you're telling me that a reactive library that works in all modern(ish) browsers, and is performant in the same, would be better than one that's based on technology Safari supports partially and Edge not at all? YouTube is Polymer, and behold, it almost works!
Yeah that’s just not really worth it to me. Css is so insignificant for load speed. 
Totally. Nowhere in what I wrote did I ever say it was bad to discriminate. All the downvoters seem to think that's what I said, but it's not. All I said was the same thing dictionary.com would tell you: &gt;discriminate - to make a distinction in favor of or against a person or thing on the basis of the group, class, or category to which the person or thing belongs rather than according to actual merit When you "make a distinction" (make the site work for some people and not others) and the distinction is based on a group/class/category that someone belongs to (the group of disabled people) *you are discriminating*. People can downvote me all they want, but they're just disagreeing with the English language. But NONE OF THAT assigned any value judgement whatsoever. That was entirely the readers' bias.
I don't have any clients. My product didn't go live yet, but I was wondering whether open source could help making a better product 
&gt; implemented such an architecture based on this That was a fantastic talk, and most of what I was looking for. The separation of concerns between Application Base, Application Core, Sandbox, and Modules is enough for me to break down what I believe will be a well structured application, and translating his ideas from browser to server doesn't take much effort. Thank you so much for sending that over.
First, don't go with an expectation of landing the job. Approach it as a learning experience and a chance to meet interesting people that you may or may not get on with. Second, understand that HR people are like trawlers scouring the sea for fish they can sell on. You might not fit this job, but you might fit another and if they can't use you, get them to help you understand what you can do to develop your skills before they throw you back in the water. Third, you're really young and there's no such thing as a wrong move at your age. Grasp the opportunity to learn something and just enjoy the experience. Fourth, if you're already getting people to nibble at the bait you lay down at this time in your career, you're gonna go far. Patience is of supreme importance as a programmer core skill so just bear that in mind. Be patient and the right job will find you. Finally, don't make the mistake of thinking you can know everything. Knowing what you don't know and how to find the answers when you need them is far more useful and realistic than trying to understand it all without real-world frontline experience. Congratulations. You don't sound like you're seventeen and you obviously have the right attitude. You'll go far.
[removed]
good job, pretty cool
Good to know, thank you for clarifying that.
Agreed! It's not something I use in the interest of load speed. It helps cut down cruft, instead. Understanding when lines of CSS can be removed is tricky business. Coverage tools help.
I think people are downvoting you because it seems that you agree with the quoted excerpt from the article: &gt; is discrimination, and it’s definitely something to worry about. Your point about the technicalities of discrimination is out of context. The author of the article takes a more "judgy" tone. That being said, I understand where you're coming from, based purely on the definition, but its a moot point. 
Is this a bug?
If she contacted you, she saw something she wanted to recruit. Go for it and do what cramming you can to at least be able to hold a conversation. I have found that the statement "I have been exposed to it but need, and desire, further education to become an expert in/on [name a skillset]" is very powerful. Good luck, keep us updated! This is super exciting and you got this all day long!
Dude thanks for the info. No kidding. I really had no clue it worked like this!! I do sometimes return object literals and I guess I never experienced this because I returned the object in the same line as the retun keyword.
How would you use media queries?
It absolutely is. And u should watch ur mouth. No need for tha kinda language here;)
You'll open yourself to legal troubles, and obligation to manages public issues. Don't go open source if you cannot see a clear benefit from it, and you clearly don't. I see other people recommending you to open source but no one explained how it would help your business to grow.
wtf, what do they expect a 17 years old applying to dev job to know? 
Thanks for trying to explain. To me, the very fact that your quote makes a distinction between "is discrimination" and "and its definitely something to worry about" implies pretty strongly that the two are separate things.
No, what OP is showing is how he managed to display a 3D GUI while it's actually just a regular 2D GUI
CSS-Tricks has an article on it https://css-tricks.com/seamless-responsive-photo-grid/ They mention the Masonry JS plug-in but it isn't necessary to achieve the effect, just to pretty it up
&gt;&gt; !!(field &amp; notified.comment) //=&gt; true I agree with almost everything you said but I find that line to be the most readable out of the alternatives. 
This is the main reason why a couple years back I switched to omitting semicolons in my personal style. It forced me to familiarize myself with the way the JavaScript engine is actually interpreting what I write. There are only a couple of gotchas like this, and I find it better to write in a style which keeps me on my toes in this regard. I don't want to forget to think about the interpreter. 
While I agree with this, what if some business did a cost/benefit analysis and realized that they could actually make more money by refusing to serve black customers and intentionally pandering to the racist consumer demographic? The business owners themselves don't even necessarily have to be racist, they're just optimizing for profits.
It's the #1 best language if you consider it separate from JavaScript
Using vertical columns prevents items from showing up in order. i.e 1 2 3 4 5 Vs 1 4 2 5 3
If the interview goes well enough they will make a position for you. Don't let job postings intimidate you.
Get this shite out of JS
I’m no big guy in webdev (not even a small guy TBH) but I can see the future of web in VR. It won’t be as easy as writing a website in windows text-editor but it could one day be standardised as HTML and CSS. Just imagine 3D space around you: different panels, awesome parallaxes, interactive content, fixed HUD for navigation etc. For now, smartphones are taking lead but god damn technology rushes its way to our homes faster than ever!
In the ideal case, and hopefully in the most frequent cases, I agree: decisions made collectively are ideal. But a team lead is also the lead in part because of both their technical seniority as well as their good instincts. If the juniors in a team are angling for a direction that the team lead knows is a problem, at least the way I've managed teams before, I want that team lead to step up and make a decision with some teeth, and I also want those more junior contributors to have some patience and trust in the leadership. It doesn't always work out, and there's all kinds of ways the process can go sideways, but I do think it's important to point out that the ideal case is only just that, the ideal, and part of why we have hierarchy in organizations is to deal with situations in which unresolved conflicts arise and/or bad decisions would otherwise be made.
Thanks
&gt;error tracking add\[s\] layers of safety without muddying up every other line of code I write To be sure, adding parameter checks for null/undefined and wrong types muddies up your code as well.
Sure, I don’t think we are really disagreeing here. I suppose I tend to lean away from creating a perception that my decision takes precedent over my team’s input, even if that is true. At the end of the day, we want to pick the right strategies because they are the right choice, not because they were MY choice. I have also found that the way your junior teammates see you is as important as the opinion of your superiors. After all, people talk. Big believer in catching more bees with honey, and not a fan of authoritarian political structures for their own sake.
Congrats on this. The video looks sick, even though its such a simple idea (not easy to implement, however). Very cool. 
But if there’s a check for null or undefined, it should be because a value *can* be null or undefined, and Typescript code will have those checks also. In the case of something like (parent &amp;&amp; parent.child &amp;&amp; parent.child.value), there are tools like lodash’s get, and proposals like parent?.child?.value that may be coming to JS proper in the future. It doesn’t make sense to me to add so much cruft to the overall syntax in the name of “better null checks”. If you need an object to have an exact shape, there are provisions in JavaScript like constructor functions, or architectural tools like factories, etc.
&gt;it should be because a value *can* be null or undefined, and Typescript code will have those checks also They shouldn't. As long as you have strict mode turned on with your compiler (which I think is now the default), then null/undefined can't be assigned to other types. That means when you have a parameter *foo* of type *Foo* in your function you don't have to check that it is null or undefined (and in fact your shouldn't because it's redundant). &gt; If you need an object to have an exact shape, there are provisions in JavaScript like constructor functions, or architectural tools like factories, etc. They can't be statically verified, however, like they can when using Typescript.
Take an object DatePeriod that has startDate and endDate, where either can be null. You declare them as optional in the interface, so that null and undefined are fair game. If a function takes a DatePeriod as an argument, you might want to check if startDate or endDate are null. Maybe there’s an API somewhere that wouldn’t even return endDate if it’s null, or you derive startDate and endDate from some other object that the API returns. All that matters is that the function knows what to do when either date is null. Null checks show intention: “I know this can be null, and this is how you handle it”.
\&gt; “I know this can be null, and this is how you handle it” Typescript gives you two advantages in this scenario. 1) If a parameter *can* be null, then you *must* check that it is null and handle that situation. The compiler will catch it if the developer forgets. 2) If a parameter *cannot* be null, then you don't need to do the null check in the function. Anyone reading the code doesn't have to wonder the null check is missing or not. Further, if you attempt to pass null to the function, the compiler will complain.
/r/baduibattles
If a parameter *cannot* be null, use a constructor or a factory. I guess I just don’t run into enough situations that would warrant the extra hassle just to make sure I (or other people) don’t mess things up. I’m not saying my codebase is perfect - I’m just saying the vast majority of JS bugs I’ve run into in all my years of front-end development are not related to type safety.
Nobody's codebase is perfect (some extremely expensive fail-safe software excepted). Showing your intent, as you noted, is about the most important thing a codebase can do, more so than having as few bugs as possible. My point is that, if a function parameter is required, there is no way to declare that intent as succinctly as Typescript does.
A non-gpu machine learning library? Yeet! &amp;#x200B;
Not bad anyway :D
all done figured it out [https://allnews8888.blogspot.com/](https://allnews8888.blogspot.com/)
I agree. Using flags are pretty much the only time I'll be brave enough to dip into bitwise operators.
In theory, it should just be writing JS – there isn't really anything complicated to learn. Maybe AMD (asynchronous module definition)? It's a module system that doesn't require any compile-time stuff, it's the `define` calls you may see in UMD modules. [Here's a guide to requirejs, an implementation of the AMD standard](https://requirejs.org/docs/start.html).
Pretty high-tier jokes
Many of the top answers in this thread are very strange. Not entirely off-point, but for some reason railing against hierarchy in what is almost always a hierarchical situation. As for my 2c: continue to have respect for your co-workers, carry out your communications with professionalism, and you'll be fine. This is business, what is there to be awkward about?
You got a repo somewhere? Really curious to see this/the code
I fixed the "See all" and color coordinated the transactions. Thank you for the feedback!
solved
It's difficult to lead by fiat whether you're promoted to team lead or you've hired all the team yourself. In the worst case, you can piss people off to the point of quitting. That happened to me once and I regret it. &amp;#x200B; The best thing you can do is be proactive and clear in communicating about issues/decisions, present or upcoming. You don't need to make all the decisions yourself, but you do need to facilitate and make sure that a reasonable path is taken on time. Furthermore any decision your team takes (whether \*you\* like the decision or not) is never permanent. You can adjust in the future or next sprint. Explain this to your folks and most of the time they'll understand. Assume that everyone wants to do their best and that they're conscientious of pressures. Keep communication very open. &amp;#x200B; And if any of that falls apart, get advice from your boss or other team leads.
I create a folder, npm init, write some JavaScript and then run npm publish. Then I npm install it somewhere else, and use it. I'm poking fun a little, but what is the issue you are having? Because if you write vanilla nodejs that's all there is to it. 
Nice! I even signed up for an account. Looks like something I could use.
I hate it. Not readable, will convert to Javascript anyway. Useless for me. 
What would be better and more realistic would be to see some React-only components or widget libraries get ported to generic web components so they can be used in any framework. (Pending browsers actually supporting web components.)
I thought it will predict how much new js frameworks that we could use in 2019
imagine what kind of leader do you want when you are as below ? of course you want a leader that down to earth and know the problem in bottom area instead talking from top and never know the situation on bottom yeah start from that, start from removing the feeling of you being on top and they being on bottom you are walking on the same height the differences is you are in front of them.
You are misunderstanding the scope of Web Components. Web Components wont(and aren’t meant to) replace React - web components don’t offer state management, lifecycle methods etc... they are totally separate things. Web Components aren’t a ‘reactive library’, it is an addition to the HTML/DOM specifications.
You can more simpy couple data with functions via closures - you don't need classes for that. Classes are really only useful if you're practicing OOP.
Sorry I should have mentioned but I meant browser based libs.
Thank you, this is just what I was looking for.
Yeah, hence the "one [framework] based on [web component] technology" part. Web components don't have great support is what I'm saying, and it's my opinion that frameworks using them will suffer from that as well. The tech should mature a bit more before it can be used to its fullest potential.
My apologies I misread and thought you were saying the other way around
Escape those inputs
No. This is definitely a feature.
https://github.com/maierfelix/dat.gui.gl
Try teach it. Or write an article. I used to try explain things in writing to my prior self. This forces your brain to analyze any subject from another angle. 
https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
The lady is from HR. She has no fing clue about development. Don't get hyped. You'll probably gonna get ruined in any professional interview with a specialist. Your experience is close to non existant. However. Companies do not only look for people who can be productive right away. Don't lie. Do not even dare to attempt to claim you know something you do not. Express your interest. Tell how you learn. And they might hire you just because you show potential. Good luck.
That's very great! GJ
Very good point! If the images/text can be in a completely random order, than I'd still prefer Media Queries. However, I think most of the time you'd want them in at least \_some\_ sort of logical order. &amp;#x200B; I'll keep your library in mind the next time I'm looking to do images!
Keep up the good work!
Ideally, work out a schema for your DTOs. If you absolutely cannot do that for whatever crazy reason, I suppose the next best would be to count key names and display the N most frequent ones. I assume you are aware that dynamically generating tables has a bunch of downsides, like it not being obvious what kind of formatting to do (e.g. numbers vs money vs dates) and what order makes more sense from a business logic perspective.
👏
This looks like a great start. I have one question which is what are you using on the db side? In terms of feedback, I think that more charts would help for sure, maybe spending bar graphs indicating when you will dip over budget? I think it might be cool to have some custom themes too! Overall great job on this, it’s something to be proud of 
This would be a cool thing to read a medium article on how you could go about doing this, because I'm fascinated
&gt; a -1% negative impact on core business metrics including conversions Ummm many companies would gladly take that risk in comparison to the costs of bandwidth though. So unless compression of JPEGS to JPEG-XR saves less than 1%, I doubt anyone really cares.
Hey, thanks! I appreciate the feedback. I'm using mongoose and mlab for the database.
That's pretty cool what you have so far. But normally people assume they will know exactly what the data is and use a templating system or React or whatever to format it exactly the way they want. If you don't actually need some custom format then I think you should keep doing it the way you are unless you run into some performance issue or something. It seems pretty useful and convenient. Also there are a few libraries that exist already for formatting JSON data automatically if you google for 'JSON pretty' or 'JSON table etc'. Also you can just do a console.log(object) or console.table(data) and the browser will format the data. At some point you may well have a reason you need a custom format and in that case I would look into different types of templating. But until then I think your thing is cool. I don't see anything wrong with counting the number of properties in order to decide to format it other than a table. One thing you could do as an alternative to having custom templates for everything is like schema objects. Maybe include the 'type:' in the data and then you can look in schemas[type] for info about formatting that type. They could have properties for every field that say how to display them, or just hints for specific fields, or maybe a DisplayType: 'littleObject' / 'table' or whatever that indicates whether to use a table or what. 
&gt; Unlike its alternatives, x|0 never produces NaN and works much faster: &gt; &gt; “3.0” | 0 //=&gt; 3 &gt; {} | 0 //=&gt; 0 &gt; parseInt({}, 10) //=&gt; NaN &gt; Math.trunc({}) //=&gt; NaN How is this a good thing? Why would you want an ambiguous result like `0` when trying cast an object to an integer instead of NaN, which tells you exactly what you did wrong?
This is just based on my (limited) experience, but after building a few complete games in JavaScript and using JavaScript libraries, I've found that development is a lot easier just using a proper game engine like Unity and then exporting to web when I'm finished. Maybe there are some decent JS libraries for online game development that I haven't seen, but using a game engine also gives you the option to run it other platforms when finished.
Maybe take a look at A-frame by Mozilla 
&gt; Succint? Yes. readable? I'd say that's objectively untrue. the tilde operator is read as "not" most of the time, so ~index means "not index", and the check if(~index){ would be read as "if not index", which is pretty confusing when you consider that you're actually checking that the index is valid. That's a good point. Since I only use ~ in js for checking index, I got used to it meaning "valid index" rather than "not". I should have phrased that differently. &gt; Honestly, at this point you're just trying to reduce lines while sacrificing readability. Less lines does not translate to easier to read code. Not to mention the implicit limitations of bitfields being 32-bits - which makes the code error prone. This is a bit of a straw man--I have mentioned both the readability and 32 bits limitation as valid issues when using bitwise operators. And the line you're quoting comes from the code labeled for "those comfortable (and brave enough) with bitwise operators" emphasizing the readability issue. &gt; Bitfields are great when you need the optimization. Most often than not, they generate noise in the code and makes it far more complicated to read and reason than it should be. That's debatable. I see little room for confusion when helper functions are used to operate on bitfields, such as `Bits.set`/`Bits.get` used in the article. Is say `if (Bits.get(field))` all that more confusing than `if (somevalue)`? Sure, I wouldn't bother with bitfields when there are only a couple booleans, but that's not always the case. 
If I expect to get a non-zero number it does me no good to distinguish between 0 and NaN. E.g. if I expect user to type in a number but he writes in text, I might as well treat it as zero.
I was staring at it thinking... wth are you doing? what is ..th..is omg this is awesome!! pretty slick trick!
I thought WebP would save us from our JPEG dependency..
Just publish es modules. There is no actual need for build tools from your point of view. Bundling and minimizing are end user / front end responsibilities. I wouldn't even bother covering this into amd or using cjs require. Just plain standard esm.
You can and could always do this. There is no need to wrap it into an additional layer. Here's a React component in Vue: https://codesandbox.io/embed/p56vnm0kv0 it could be angular or vanilla just the same.
We've heard this for like 10 years now? I think it's rather safe to say it's a dead spec. And people tend to forget that WC merely expose a naked, raw dom node in isolation and nothing else. How is that dom node going to replace anything a framework does? And what do you think will your web component, that you load, contain to drive that dom node? A full blown framework. Not just that, given that you load 10 web components from 10 different sources you'll end up with 10 frameworks in your application. Do you think this is where the web should be heading?
To be honest, I don't even know how to do the interview question you are asking lol. 
Getting a 404. &amp;#x200B; Also what's the difference with [https://github.com/dataarts/dat.guiVR](https://github.com/dataarts/dat.guiVR) ?
What's the difference with [https://github.com/dataarts/dat.guiVR](https://github.com/dataarts/dat.guiVR) ?
For those getting exciting by WebXR few pointers : \- /r/webXR for VR and AR on the web here on reddit \- /r/WebVR \- [https://aframe.io/](https://aframe.io/) started by Mozilla and built on top of threejs thus quite extensible \- [https://github.com/dataarts/dat.guiVR](https://github.com/dataarts/dat.guiVR) dat.guiVR: A flexible graphical user interface for changing variables within WebVR. \- /r/exokit to use not just on VR HMDs but also AR HMDs e.g. MagicLeap \- specs [https://github.com/immersive-web/webxr](https://github.com/immersive-web/webxr) \- /r/learnVRDev 
Saved, thank you very much ShortSynapse!
one of the comments: &gt; I don’t know if the author is stupid or just out to smear. Yes, it may be twice the computational efforts required to unpack JPEG-XR compared to regular JPEG, but so what? It’s 2x of barely nothing, meaning the end result is still… wait for it… barely nothing! I have to agree with that one. The post does not make a good case about how bad it really is. what's the percentagd wise rate during the loading of average web pages? Also, it repeatedly mocks JPEG-XR for being software decoded. Isn't that true for all image formats that aren't directly supported by the GPU? Aren't JPEGs software decoded too? 
&gt;If you absolutely cannot do that for whatever crazy reason Hehe, about that. The core concept of the tool revolves around the idea that it can handle and be displayed for the user along side anything else that might be sent along with it that the user thinks is, or could be, relevant. I think, given your feedback and my need to make some forward progress, ill look at building some super classes for some of the data structures I know will show up a lot. Then later down the line I can extend them granularly as use cases come up. I am still looking for some more resources on the best ways structure the parsing functions so I don't bottleneck the server. One example I have at this stage, is that its been handling a fairly consistent stream of inbound data with sizes from a few kb's to 10MB(largest single one yet) without much cause for concern. But one of my lovely pilot users decided to point his departments left over AWS credits at it and the server(node, express, socket.io, mongoose) started hanging after receiving only 90 15kb objects over two minutes~. After that it just became a blatant DDoS, best part were the emails from the network infrastructure people asking us what the hell was going on. :D I am fairly new, this is my first javascript project beyond writing bookmarklets, but I don't think I am in over my head quite yet. Because this is mostly just a proof of concept or MVP that will hopefully get picked up by the team that wears the webDev hats in the office. I come from a IT Systems and Architecting background with lots of scripting (bash,powershell) and tool building experience, for context... and wow I just sort of went off on a tangent there. Apologies, but it was nice writing my position/situation out so I am leaving it. And still would greatly appreciate any related resources or ideas you can send my way. 
Analytics
Testings easy look into mocha.js or should.js its used for unit testing ie testing functions with expected data and secondly tdd to test driven development is when you write your tests first with what you expect then you build said function and when you're done the test passes. This is useful because when your coding you know your expected input and output.
Quicker loading, longer time on site, sometimes the comments are from another service (discus, Facebook comments etc)
Yep, also reduces the number of resources that have to load at the start
Analytics and more difficult to scrape
It seems to use 3D geometry, while this one uses HTML :)
Looks interesting. Seems pretty cool!
Poor planning. Comment systems are generally recursive data structures but hosted in relational databases. Those kinds of a DB calls are expensive at scale. 
dynamic loading means less the browser has to parse meaning faster initial page completion time.
graphql soars towards 0.005%, yah we better get on that... /s
Have you ever tried react VR?
Currently everyone is talking about the physical layout of the file. But why not consider virtual layout, like some editors already do with virtual line breaks. Just extend this to the whole file.
Why would you even consider a format that's only supported by two EOL browsers?
Right now, only Chrome supports WebP, which makes the format pretty unusable. It's unfortunate, since the files are much smaller…
I was told that momentjs is very bulky for a simple date and time formatting, so i was having a look around for alternatives and i came across human-date. not too sure how good it is..its worked so that is normally a positive sign for me.
Checkout date-fns [https://github.com/date-fns/date-fns](https://github.com/date-fns/date-fns)
So Google won't crawl those
Because their bosses told them to.
Since types are stable in TypeScript, the JavaScript engine can usually optimize the heck out of JS that has been transpiled from TS. 
Possibly 3 reasons, first is load time improves, second is the comments may be old (a few minutes could be old after reading a long article and is highly commented on), third is a little nitty, but saves bandwidth.
&gt; But I don't understand how it creates different lines each time? They key is this if((x+y) % 2 == 0) ... This statement is true if and only iff x+y is divisible by two. So, look at the first row: y is 0 and x is 0 (resulting in " ") then 1 (resulting in "#") then 2 ... Now look at the second row: y = 1. So if x is 0, we get a "#", if x is 1 we get " " ... this is exactly the opposite pattern as in row 0. This meta-pattern then repeats for all rows.
Exclude the localizations from your bundle, that's the bulk of it. 
I am not a javasacript person but I understand the logic, not sure if it starts with 0 or 1 but for my explanation it doesn't matter. The short answer is that you have two odd numbers next to each other with a newline betwen them: 8+1 \n 1+2 a more full explanation is here: I have reformatted it to make it easier to read and explain: 1 for (var y = 0; y &lt; size; y++) &lt;&lt;&lt; do this until y = 8 2 { 3 for (var x = 0; x &lt; size; x++) &lt;&lt;&lt; do this until x = 8 4 { 5 if ((x + y) % 2 == 0) &lt;&lt;&lt; if x+y is an even number 6 board += " "; 7 else 8 board += "#"; &lt;&lt;&lt; x+y is an odd number 9 } 10 board += "\n"; &lt;&lt;&lt; go to new line 11 } the value of y only changes when the outer for loop is used (line 1) the value of x changes everytime the inner for loop is used (line 3) This calculation on line 5 is then working out if x+y is odd or even when its even it displays " " (line 6) when its odd it displays "#" (line 8) line 10 put in a new line and returns to line 1 which adds 1 to y so originally x=1 and y=1, then x=2 and y=1 ... x=8 and y=1, then x=1 and y=2, x=2 and y=2 etc... it the maths looks like this: 1+1 = even 2+1 = odd 3+1 = even 4+1 = odd 5+1 = even 6+1 = odd 7+1 = even 8+1 = odd 1+2 = odd 2+2 = even which gives: # # # # # # # # 
&gt; (x + y) % 2 == 0 Is both very clever and actually not that clever. Black and white are alternating and also start with a different color on each row. Which is why only comparing the "rest of (x+y)/2" to determine the color. It is not so clever as it involves a division operation that is more costly then a simple &gt; ((x+y) &amp; 1) === 0 This might also clue in the JIT to optimize this for integer arithmetic. 
[removed]
Actually most likely nowadays the news section and comment section are in two independent microservices and news articles and media are hosted on a few content gateways or commercial CDNs while the comment sections are hosted on a different cloud cluster and doing so save a lot of bandwidth.
# This is awesome !
Thanks man, glad you liked it! Feel free to jump into contribution if you're interested.
I wish the paths would merge if they merged in the actual show, but other than that, good work!
Your second argument is good :) makes sense to want to wait for new comments. Although if you run your own comment app you can use sockets to keep up to date
When you’re referring to class you mean CSS classes right? I’m fairly certain you can do: ``` const Elements = document.querySelectorAll(“.” + mClass); ``` Then use the style attribute on each of the elements to update the css. You can also do this with jquery fairly easily, but no point adding a large dependency just for one feature.
It is two loops inside each other. The inner loop draws the tiles and the outer loop simply goes down by one line with the "\n" character. In case you don't know, "\n" means "new line" The inner loop then just alternates between white and black squares. Simple! The output is basically one long string with a bunch of "new lines" in it. 
Thanks
Sounds like [https://github.com/brillout/wildcard-api](https://github.com/brillout/wildcard-api) could be fit for you guys. What do you think? (I'm Wildcard's author.)
# "Random gibberish text in barely engrish, you know what I mean right? ;) OK sure" Trying to read and under stand WTF it means.... *....text goes poof!* &amp;#x200B; # "Some more random gibberish text in barely engrish, you know what I mean right? ;) OK sure" Trying to read and under stand WTF it means.... *....text goes poof!* &amp;#x200B; # "Evan more random gibberish text in barely engrish, you know what I mean right? ;) OK sure" Trying to read and under stand WTF it means.... *....text goes poof!* &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
I'm curious, what's your experience with TypeORM? (I'm building a web framework as well: [https://github.com/reframejs/reframe](https://github.com/reframejs/reframe))
Yep, expanding on this. It shows that the reader is engaged. The more a site can prove engagement the more it can charge it’s advertisers.
Creating endpoints isn’t a problem I’m aware of in any server framework.
Yep this is the reason. 
you should really improve the scrolling and auto-focus on new choices. the interface is really hard to use on desktop.
Hi /u/Jiraso, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Gh05t_97, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/proteinshaykh, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Frectus, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/KingAli1992, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/sephware, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Thanks for your understanding.
Hi /u/retrojorgen, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Thanks for your understanding.
Hi /u/Bennetto, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/fantastic1ftc, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
That's why you do it when they scroll. Accomplishes the same, better for user.
Hi /u/AmericanGeezus, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Tetrominos, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding.
Hi /u/Talisker875, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Why don't you guys go for a custom API? It doesn't sound like you need GraphQL nor a generic API in general
&gt;!Don't kill your dad.!&lt;
Wow! This is cool. I didn’t know you can use D3 to make branching nodes like that. I can use it for my next project.
FFV Bandersnatch == FFXIV Bandersnatch &gt; other Bandersnatches
We have a custom API? I’m not sure what you’re getting at.
Very nicely done! I would love to be able to zoom out, but I don’t know if D3 supports it
I thought you were using GraphQL already.
`date-fns` is really awesome. I actually find it much more intuitive than `moment` after using it for a while. Its fp-style api also makes it easier to use alongside fp libraries like `ramda`. It being more lightweight is just one of many reasons to pick it over `moment` imo. 
Nope I was curious if it would make any of my problems easier.
Use an object would be my suggestion https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects
But you need to add React libs to use the React component in Vue. If you could rely on native support for web components you don't need any extra libraries or polyfills (why I said "pending" browser support.) I'm also not saying it makes sense for everything, but widgets like custom selects/dropdowns which are already not easy to implement declaratively without a lot of direct DOM fiddling.
Did you want us to write it all for you? Or is there a specific part that confused you?
Static site generator for blogs using ghost [https://github.com/Fried-Chicken/ghost-static-site-generator](https://github.com/Fried-Chicken/ghost-static-site-generator)
Im super confused with the language, i have tried already to make the code on my own but theres a lot i dont understand. It would be perfect if you could build it and explain it to me. My goal is to understand the language, since i have to make a work around it. The list is the simpliest of the steps and im panicking cuz im getting stuck in it
I recall something I read a few years ago in a blog comment section. It was something along the lines of "Does anyone even program node without Coffescript anymore?". I'm glad I didn't make that investment. 
Not exactly what i was aiming, but that page has usefull information, tyvm
date-fns is awesome but for timezone-y things I've been using luxon (https://moment.github.io/luxon/) lately.
I will give an example. How could i iterate through a object and "print" it?
&amp;#x200B;
r/blackmirror
I really wish I could just "expand" everything so I didn't have to click a fair amount of small circles that keep moving away from my mouse.
Again, a web component is simply a masked dom node. Unless you plan to write your complex state bound components in vanilla, using queryselectors and pumping updates into the view via innerHtml, you need a framework. This is virtually what most web components will add up to, they'll just wrap a framework, no matter if it's polymer, stencil or react. If you wanted to re-use your components you could cook down react to a couple of kb, preact-compat or nervjs.
If you’re used to object orientated languages why not learn JavaScript using angular or react which structure JavaScript object orientated. 
Otherwise, declare a variable use “let” for a reusable variable or “const” for a non changing one, curly brackets declare objects and square declare arrays. So .... let recipes = [] ; declares an empty array. Then you can add to it with a push ... Let newObject = { milk: 2ml, sugar: 1}; recipes.push(newObject); 
I don’t think you have the ability to do what you are aiming, I am a web designer, currently taking an online web development course, this one to be exact https://www.udemy.com/the-web-developer-bootcamp/ and I think this should be your next step because I do not think you are capable of getting the results you need.
Are angular or react some kind of IDE's?
Angular is a framework and react is a library, I code in react, you set up a react project (loads of online guides) then when you build the project it translates it all through Babel to become vanilla JavaScript. 
First question: The 2ml and 1, do they need to be set? could i leave it like {milk: , sugar: }? Second, I need an Object inside a Object, and it cant be always the same values, does that invalidates the use of let? variable ={name: ; cost: ;Gluten: ;components: } Then inside components ={name: ;quantity: } I know what to do, i just dont know how. BTW what is the "Cannot set property 'textContent' of null" error?
Is this really something that needed to be posted here?
I see. Im taking a course on computer science in University. In six months i have learned, SQL, HTML, JAVA, C, working with CSS, and the last one is JavaScript which im kinda strugglin with. I do not have the ability to do what i need to do, thats why im asking for help in here, to be teached by people who understand JavaScript better than me
Ah, i cannot make use of any frameworks, but tyvm, i will try it when i have the option to use frameworks
hmm, it seems incomplete. I selected "don't talk to mom" and got a pop-up saying something like: "nah, I the website owner want you to talk to mom, no free will for you". I watched the show and selected "don't talk to mom" and so I know there are different pathways in that direction which aren't covered here.
This has already been linked.. many times ;)
No worries the above code still works in normal structured JavaScript. Maybe try structuring what you would have as your components into functions so ... Function getRecipies(){ Do stuff return stuff } Then call the function .. Let getRecipies() Sorry it’s so generic examples. 
There are some loops that would be a little difficult to flowchart this way as well. If you say you don't understand the game twice in a row it just continues as if you said yes.
\&gt; it is too hard to keep their data up to date because there is no tool for this Might be overkill but you could create a script to scrape the information from their public github repo. You could even check out their release branches to get docs from previous versions
What you are missing is that Javascript by itself could not store data as it is a client side language, you will need something else too, like mongodb and a knowledge of jQuery, that is aside from things like node.js and Express, although I could be completely wrong as I am just learning this area too, I am fairly certain pure javascript is not the only thing you need to learn and no one in their right mind can take you through everything unless it is a course of some kind
Lying can come back to bite you with a pink slip. You can certainly embellish, but don't ever lie.
My problem is, how do i call i function? I have to call JS functions in html and im having trouble doing so... var components ={nome:,quantidade:} var receita = {nome:,custo:,gluten:,components:} Would this be properly structured?
I don't know that lib but I would do most of that button customization with CSS personally. IMO that's part of the appeal, to be able to style a widget just with CSS. I definitely agree that lots of apps and components would not be suited to custom elements. But widget libraries, yes I think they could be.
Install via `npm install mocha@next`. Docs can be found at [next.mochajs.org](https://next.mochajs.org)
This is super awesome!!!
I agree they should, I make every effort to do so but find easier to look back at old code and knowing exactly where to edit 
I realized something thanks to you! Im not strugglin with JS, the language itself is similar to C. The part im having trouble with is to "connect" it to HTML
I was going to say interface needs to improve on mobile because scrolling and focus is difficult on it :/
d3 is a pretty low level library. you can do any graphics with it, you can even do plain html 
Ahh, then look up dom manipulation..
Hey, cool project. I can take Look at the code too, but I'm curious what library you use for diagramming the flowchart/decision tree
It is almost the same as the movie except for one that I decided to impose on the website users, which falls under the theme of the free will in the movie. Any specific missing point?
The thing with that is you won't be able to see all the story points that comes up as notifications. I think it is pretty cool to follow the story decision by decision - helps you fully absorb the movie's possible outcomes.
Yeah, but it is not just forcing you to continue the game, it is telling you: "I think you do understand, dont you? ;)". I mean, you clearly know how to play the game by making the decision of say yes or no, and as part of the "free will" theme of the movie, I think this falls really well! I agree with the cereal part, will edit that in the decisions tree. However, killing Colin does indeed change a lot of things in the timeline and I made sure they were pretty clear in the timeline.
It is taking me time to figure out how to deal with the tree overflow. There is an SVG for the tree that gets expanded - with its own horizontal bar - and it goes into the middle of that, which might seem like the right side of the screen if you don't scroll along the horizontal bar. I would love to hear tips on this, even better, fork it and try to help me with pull requests? Choices auto-focus will come afterwards.
Look at my comment to the parent child - hopefully will be fixed soon!
I agree :)
DOM manipulation, i think thats exactly what i need! Thank you very much!!
Ok thank you.
Not incomplete, just tricky. Netflix does not grant you the wish of not talking about the mom 100% of the time - it can force you to talk about her - which Is what I decided to go with. It is simply because imposing my own will on website users seemed to fall under the "free will" theme of the movie really well to me (and I think to Netflix too)! The difference from that path is just less decisions and possible outcomes later on, which are all included in the paths on the website as it is right now.
D3 is a must-learn library in my view - super cool! Feel free to use Bandersnatch Life as a kickstarter ;)
I see what you did there! Nope, all is good :)
Seems like this function should always have the same return value. Doesn't look to have any free variables.
It looks like a much more interesting post than I thought, but sadly it's explained quite badly and cannot follow. Shame
It is already there my friend: [https://www.reddit.com/r/blackmirror/comments/abalyq/i\_created\_bandersnatch\_life\_an\_interactive/](https://www.reddit.com/r/blackmirror/comments/abalyq/i_created_bandersnatch_life_an_interactive/)
Added to the to-do list. Glad you liked it!
Thanks man!
Thanks man! The library is D3.js - you would be looking at the play.js file to see the paths building functions.
This value is not always same :( 
use nested maps?
Neat, this seems really cool! There are a few other zero-config prerender solutions out there as well (Razzle, I think) – how is this different from these?
I edited my above code to show how to call a function that returns a value into a variable. Otherwise to just call a function that doesn’t return just users the function name and brackets .... myFunction() 
good stuff indeed, but just found a bug. the whole page got white after several choices. happened in Chrome mobile btw in case you need to reproduce the case. 
Is it really that hard to stick to working solutions? This SPA trends are killing performance... 
Thanks man! I am aware of that bug, mind try using Firefox? You can install it from [https://play.google.com/store/apps/details?id=org.mozilla.firefox&amp;hl=en\_US](https://play.google.com/store/apps/details?id=org.mozilla.firefox&amp;hl=en_US) I think this has to do with low device memory and Chrome being a little harsh on rams! Please let me know if it is still a problem. I will try to investigate why it breaks on some Android Chromes sometime soon.
just to mention that I've got 6 gigs of ram and at least half of it was free. hope it helps!
Appreciate the information! 
Soo from my experience, you are trying to trick some script that is preventing automation on website or this is some sort of js challenge. It’s obfuscated array which is 4 long. This is just creating array, doing some math and joining it to string. Error from node is just saying that syntax is wrong soo you replaced something that you shouldn’t. If valued are changing describe more details and background of source, maybe give other examples
You have to tell MutationObserver to observe children as well using the correct options object passed to `observe`.
You can replace `make2dArray`'s only loop by using `fill`. function make2dArray(cols, rows) { return new Array(cols).fill(new Array(rows)); } You can replace `draw`'s loops by using nested `forEach`s. function draw() { background(255); grid.forEach(cols =&gt; cols.forEach(item =&gt; tile.show())); }
I tried the following code on Twitter: ``` let mo = new MutationObserver(function(mutations){ console.log(mutations); }); mo.observe(document.body, { childList: true, attributes: true, characterData: true, subtree: true, attributeOldValue: true, characterDataOldValue: true }); ``` However, it's never called when I prompt new Tweets to load into the feed. Surely that's the right config (it has both childList and subtree set to true)? Am I missing something here?
Mutation observer is perfect for this. You have to tell it to listen for changes to the child list (insertions or deletions) as well as subtree. mutationObserverbser.observe(document.body, { childList: true, subtree: true })
You may be on a fools errand with this task here. As another commenter said, it's deliberately obfuscated and looks like some form submission validation or a captcha. What are you trying to accomplish here? 
good work!! this made the viewing experience way cooler on the second time around. 
Why not make it so I can hover over it and see it? Some popover or toolbox that has all that info in it. Plus after that modal happens I have no idea to reread it without reopening the website and clicking all the dots which got me there.
Y not just host as a static website on GitHub pages
Look into d3, it'll be super powerful visualization tool for this project.
Did you map these out manually?
As I’ve said, this exact code doesn’t react to changes Twitter’s news feed (at least in Safari); am I missing something?
Your code is fine. Twitter have overwritten `console.log` for some reason.
I was thinking about it but it is way too hard because rule docs do not have a single content structure what makes it is impossible to write a single scraper for scraping all data :(
Yeah, I completely agree for most small applications it's a bit overkill to use React (in terms of performance). Mostly I just like that the standard "create-react-app" boilerplate takes care of a lot of the peripheral stuff. I suppose I could use other helper libraries for that stuff, but it's just more to think about. But if you're creating hundreds of DOM nodes for an interface (like a table), React has its place there.
It does react to changes. You just aren't seeing them because console.log is overwritten by twitter. If you change your code to alert() rather than console.log(), you'll see it's working.
They haven’t, have they now? Not sure if serious, but can’t check until tomorrow, so... 😐
God, I hope not.
Wow. Seems I picked the worst possible site to start testing an API out for the first time on!
I'm serious. Try replacing `console.log` with `alert` in your code if you want a really annoying experience.
It's fine. Just use console.dir() or something instead.
No, of course not. React is better for a full-blown web application where you expect to see a lot of DOM nodes getting updated individually. And you can faster performance with pure JS on larget applications if you write your own virtual DOM. The downside is that if you're working with a team in a company, and you have new hires, it's much easier to use React in your codebase. It's just a bit easier to avoid writing 'hacky' code with React, which means more predictable performance. You can't just throw in a queryselector and change whatever you want anytime (well you could, but it may cause issues), so it forces a more logical flow for performant DOM updates across a large collection of DOM nodes.
Your first example `make2dArray` doesn't seem to work. Remember that `new Array(cols)` results in an array of length `cols` but with no entries; the `map` call will map over nothing, and the returned result is just an array of length `cols` with nothing in it.
I completely agree. It just really helps organize the code in a way that I'm (frankly) unlikely to do when left to my own devices in pure JS or even jQuery, lol...
`const array = Array.from({ length: rows }).map(() =&gt; Array.from({ length: columns }));`
Heh, you're right! Thanks! Fixed it.
A `range` function would be nice to have built-in to Array. There's one in lodash or you can roll your own pretty easily. Anyway then you could do things like range(16).map(row =&gt; range(16).map(col =&gt; ... 
Damn. Beat me to it. I've literally been working on a treemap of the whole show, not as pretty as yours. Just on bubble.us
Given what you have shown it seems questionable to put every tile in its own object because that is 160000 objects and apparently the only state for each tile is trivially derived from the column and row numbers.
So at the scrambled letter part, I found a "module keyword" but I don't really know what I'm supposed to do with it.
Okay so I dig it so far, but I'm at a point where I have no idea what I'm supposed to be looking for. I think it might be a little too cryptic. Either that or I'm an idiot, both are possible lol.
If you're at the paper puzzle, make sure you read the full document closely. Reading comprehension is very important in this game. The narrator tells you what to look for. :)
Glad you figured it out! Thank you for the feedback!
Yeah I've assembled the paper, I've found &gt;!waste.file, witchward.exe, dislocated.png and x.jpg.!&lt; Now I just don't know what to do with &gt;!waste.file !&lt; I've noticed the gobbledegook language, I've seen what looks like co-ordinates. I'm looking into everything thoroughly, but I don't know what to do with the information.
No utc support.
In the first button associate a function that will be called on button click &lt;button **onclick="myFunction()**"&gt;Try&lt;/button&gt; Add this as a JS script to be called if first button is clicked - this generates second button and adds it next to first button &lt;script&gt; function myFunction() { var btn = document.createElement("NewButton"); var t = document.createTextNode("Try Again"); btn.appendChild(t); document.body.appendChild(btn); } &lt;/script&gt;
Thank you!
i would add the button with html and css, and only change the display from none to block with js
I have a nice golang one I can point you to. I like the idea of making everything modular and promoting dependency injection when neccesary for best decoupling and testability. **Package oriented design** [https://www.youtube.com/watch?v=spKM5CyBwJA](https://www.youtube.com/watch?v=spKM5CyBwJA) (supporting blog)[https://www.ardanlabs.com/blog/2017/02/package-oriented-design.html](https://www.ardanlabs.com/blog/2017/02/package-oriented-design.html) This kind of style is all about pulling things into services and limiting dependencies. It's also reccomnded you make a "kit" repo that contains all reuseable bits of code. logging, http requests etc.. I also strongly reccomend learning and understading SOLID. Its a gread foundation to step off on and is pretty east to get your head around.
np, you will need to tweak the code if your are going to show these elements in another container
Ik
Depends on your usecase if you're looking for logic programming for data access check out [https://github.com/tonsky/datascript](https://github.com/tonsky/datascript)
To solve&gt;!waste.file!&lt;you need to&gt;!know the correct color.!&lt; There is a specific mention about &gt;!the witches not being able to see a certain color!&lt; in &gt;!witchward.exe!&lt; Thanks for playing!
I'm completely in the same boat and it's not working at all. Anyone having any luck? Really hate to have to do this manually...quite a pain. Thanks.
I'm currently learning and gaining a solid base for CSS, JS, HTML and React. Check out codecademy.com and find the topic you need and go through the lessons. First week of pro is free and it is a very nice resource. Good luck!
Isn't prerender.io already self hosted or is their github only client files?
Right okay, got to the end I'll just spoiler tag all of this in case someone else wants to play it. &gt;!I saw no mention of colours in witchward.exe, though the text is coloured pink so I had to glean it from that. In the morse code puzzle, the spaces in the morse code could be shown, I put it in as I saw it and got lightsouse.scrap. Also was the video at the end supposed to be all choppy? Besides that I have no other complaints, it was a pretty fun ride. The last puzzle was especially good, that "AHA!" moment when you realise the text at the bottom corresponds to the patterns given.!&lt; But yeah, good job man.
Just use Next.js – all this complexity of running headless browsers will kill you.
[removed]
I agree that your example is probably a simpler test to follow than one using the jest method you linked to. I my opinion, I think a better feature to use would be snapshots. (It probably depends, but something like this...) ``` describe('the function f', () =&gt; { const conditions = [/*...*/] expect(conditions.map(f)).toMatchSnapshot() }) ``` I find it easier to look at the computed snapshot than to look around for test data when a test fails usually. I imagine the `describe.each` method to be a lot nicer when working with several different functions, which their doc example doesn't really show. For example, something like this: ``` const dataTable = [/*...*/] const dataDescribe = describe.each(dataTable) dataDescribe('addition', (x, y, expected) =&gt; expect(add(x, y)).toEqual(expected)) dataDescribe('subtraction', (x, y, expected) =&gt; expect(minus(x, y)).toEqual(expected)) dataDescribe('multiplication', (x, y, expected) =&gt; expect(times(x, y)).toEqual(expected)) ```
How is that better than? ’’’ test.each([[someCondition, someExpectation]])( '...', (condition, expected) =&gt; { expect(condition).toBe(expected); }, );
&gt;I disagree with execution times, but perhaps I'm using it wrong! Saying I'm wrong then saying I'm right is a weird way to argue the point though! Are we talking the same thing here? there's transpile time for babel, which is a cost greater than zero, but also not a cost the end user must deal with. and also not considered execution time either. If you're suggesting babel adds execution time, and keep harping about it, i assume you're seeing execution times that are not negligable, as in some serious performance hit. tell me, what exactly is it? do you have code you can share which when run through babel creates definitively less performant code than if you simply wrote old school JS itself?
Here is a great comment [https://github.com/endlesssoftware/sqlite3/blob/master/os.h#L133](https://github.com/endlesssoftware/sqlite3/blob/master/os.h#L133)
The following message told you about the location: &gt;!Willow Witches are watching from the corners but you're safe here!&lt; And it was followed up by a clearer instruction too: &gt;!Look for a module in the dark places where the Witches watch you.!&lt; &amp;#x200B; Those are two good sets of attention that that was brought to that.
Ah yeah I wasn't interpreting the docs correctly. I didnt know that callback named the params. Thanks
No I just meant it should have been clear where to input modules. I assumed the x in the top left corner would close the game, not give a text prompt.
That overlay is pretty nifty. 
use object constructors //blue print for the recipe object function recipe(ingredients, name, cost, gluten){ this.ingredients = ingredients; this.name = name; this.cost = cost; this.gluten = gluten; } //new recipe var sandwich = new recipe(["chicken", "bread", "etc"], "Sandwich", 25, true); //you can add more recipes.... &amp;#x200B;
No problem, it’s easy to miss. They are passed as arguments so you can pretty much do with them whatever you want. Cheers.
wow, amazing work on drawing the pathways!
Could you explain why you used `createTextNode` vs just setting `innerText`?
You could do a harel statechart.
TL;DR; Yet another Backbone.Model-like store with `get`, `set` and `subscribe` methods. With Vue, if you don't want/need Vuex, the documentation suggests [a simple store pattern implementation](https://vuejs.org/v2/guide/state-management.html#Simple-State-Management-from-Scratch) (basically, a template-less shared instance of Vue for state storage and methods for state manipulation), which is functionally like the thing above, but without `get`/`set` and also reactive out of the box.
You should put a `.fill` on the end of `new Array(rows)` as well. Otherwise, anything trying to `.map` over the resulting 2D array - such as that `setup` call does with `grid` - will fail.
I think you should start with native JS without jumping into any frameworks. Here are some resources to get started [https://developer.mozilla.org/bm/docs/Web/JavaScript](https://developer.mozilla.org/bm/docs/Web/JavaScript) [https://github.com/getify/You-Dont-Know-JS](https://github.com/getify/You-Dont-Know-JS) [https://github.com/Airbnb/javascript](https://github.com/Airbnb/javascript) There are some good books also 1) [https://www.manning.com/books/secrets-of-the-javascript-ninja](https://www.manning.com/books/secrets-of-the-javascript-ninja) 2) [http://eloquentjavascript.net/](http://eloquentjavascript.net/) 3) [https://www.amazon.in/JavaScript-Definitive-Guide-6e-Guides/dp/0596805527](https://www.amazon.in/JavaScript-Definitive-Guide-6e-Guides/dp/0596805527) (bit old)
Professional JavaScript for Web Developers, 3rd Edition
You don't Know JS
You reeeeaaaally need to provide more information about what you're trying to accomplish here. What about the images are you trying to compare?
That's a fair critique. The decision for the "X' icon represents a trail of clues, similar to a treasure hunt. My understanding of Augmented Reality Games and cipher games is that they eschew common design and prefer experimentation over full clarity.
...is what the book is called: https://github.com/getify/You-Dont-Know-JS It's free and good.
If you haven't &gt;!found the credits relay!&lt;, you're missing part of the game. Specifically,&gt;!GO BACK! FIND THE RESET.!&lt; BUG FIXED:&gt;! Witchward.exe didn't mention color, thank you for making me aware.!&lt; I played myself, probably read that text hundreds of times and just forgot to add it in. &gt;!Morse Code is tricky and it's entirely possible I messed that up.!&lt; I'll look into it. The &gt;!video at the end!&lt; is supposed to be choppy to a point, if it was choppy, &gt;!like it was buffering and then pausing that may be poor preloading on my end.!&lt; Thank you so much for taking the time to look through all this and, tell me about your experience, and thank you for playing! &gt;!I hope you go back and find the keywords you're missing.!&lt; &amp;#x200B;
As a non-JS developer, I remember years ago Backbone suddenly being the hottest new thing, and equally quickly it vanished into obscurity. What happened?
You're completely ignoring common language. There's a very clear "active component" in the word "discriminate", as in, "doing nothing" should never translate to "discrimination". By assuming it is, you are basically saying EVERYONE discriminates at some level towards someone, which effectively reduces the word to nothing AND makes up for some very dangerous laws. &amp;#x200B; Being "technically correct" means nothing here, semantics matter, A LOT.
No the morse code was partly my fault, I was just saying how, due to it being on separate lines, it's a bit difficult to separate the words. So, a fix would be to introduce a / between each word to make the distinction clear.
No the morse code was partly my fault, I was just saying how, due to it being on separate lines, it's a bit difficult to separate the words. So, a fix would be to introduce a / between each word to make the distinction clear.
That is the most vague question I've seen in a while.
Checked. Colour me surprised. Have marked this post as solved, thank you!
Confirmed. Colour me surprised. Have marked this post as solved, thank you!
React
React (Facebook-released) and Angular (Google-released) happened, then Vue happened (ex-Google employee created). React has kind of taken over given its focus on dynamic UI and lack of opinion on architecture for everything else, whereas Angular is highly opinionated MVC used for larger enterprise apps. Vue is rapidly eating into React/Angular userbases because, well, it’s a lot easier, just as performant, and in many peoples’ opinion, a more straight-forward development workflow. 
Great suggestion! I'll implement that and credit your username for play testing if you'd like. I'm so glad you felt that Aha moment for the &gt;!forest !&lt;relay solution. If you end up playing through the &gt;!alternate "good "ending!&lt; let me know what you think! Cheers!
Could not have said it better
Here’s a visual representation: https://blog.graphqleditor.com/javascript-predictions-for-2019-by-npm/ Basically React took over. 
hey, sorry for late response * webrender is a new GPU rasterizer from firefox (it gets some low-level "scene" and turns it into shaders &amp; buffers for GPU) * it doesn't render HTML/CSS and so it will never be 100% alternative to electron (I have no intention to reimplement another web-browser) * but **it is** about doing cross-browser GUI applications with familiar technologies (node.js, react, flexbox, noncascading stylesheets) with hot-reload * it's not production-ready but it's almost usable for some very basic prototyping There is no documentation yet, so if you want to play with this, it's best to start with this sample repo: [https://github.com/cztomsik/brew-cleaner](https://github.com/cztomsik/brew-cleaner)
I did end up finishing it. I spent a while laboriously searching through the thing, thinking that there was some other code somewhere relating to&gt;! the forest relay!&lt;, until I noticed &gt;!the words "file" and "waste" were in italics, so therefore waste.file.!&lt; Then I had a bit of trouble figuring out what I'm supposed to find there. I tried to find &gt;!the letters that were in the colour the witches speak in, that being a yellowy green.!&lt; That didn't work though, so I ended up &gt;!going through colour by colour. Unless I missed something, the colour red could have been brought to attention to make the link.!&lt; Once I got to the &gt;!manual!&lt; it was easy from there. One thing I should say though is that giving people the means to access &gt;!credits.exe via the manual!&lt; before they get to &gt;!crkt 0018.reset!&lt; could lead to missing the ending message, or see them out of sequence anyway. While I'm flattered at the offer to add me to the playtest credits, please only do so if you want to. I feel like my involvement is minimal, I'm just a dude on the internet giving opinions. All in all, fun little game that had just the right amount of difficulty. Not so easy the solution's obvious, but it comes to you after thinking about it for a bit. Also the tumblr plug? Shame on you. Cheeky bugger.
https://github.com/ryanmcdermott/clean-code-javascript
Awesome, I'll check it out.
Still using backbone model and collection to populate my $ slickgrid dataview and json-editor components.
Can't wait to struggle with this!
Backbone’s quite primitive, for example the view layer doesn’t actually provide rendering functionality. It was a nice improvement over plain jquery but the tools that we have now are much more powerful 
Why not both #1 and #2? I would start with writing some Cypress tests for all the high-level features in your app to give myself *some* level of confidence that any new code added does not break the app.
You need to start by answering this question: What is the **goal** you are aiming for with your tests?
And people will fiercely fight each other on what the superior choice is like there was no tomorrow.
To prevent breaking existing features.
There's Amazon's Rekognition https://aws.amazon.com/es/rekognition/
This looks ok in the end but it looks like the kind of stuff that would put my co-worker in trouble just to read how i get province flag. I like the idea of writing function that reads like text but then the implementation has a bit too high of cognitive load which is a trade off I'm not sure I'm willing to take at this time. I guess I still like to have my good old conditions in a function abstracted away from the main routine but still readable for anybody that needs to dig in if need be. 
like any other neural network. Give it a bunch of data and define the goals, then hope it extends to the general case.
I could not see anything that just highlights the differences between this and the previous major release. When you already know and use mocha it's tedious to find those for yourself from the full docs.
It's more usable than you think! Microsoft Edge already supports WebP and Firefox 65 (out later this month) will also have support. MS is moving to Chromium too which should guarantee support in the future as well.
vue seems to allow a maybe more realistic work flow and organization of components.
unusable on this little pc. rendered but tooo slow
Thanks - what sort of spec is it?
By your logic and the way you're interpreting the meaning of "discrimination", then you're also discriminating all non-English speakers by not writing in every other language in each of your posts.
Can you elaborate?
Especially vue devs from what I see.
Congratulations! That was exactly the intention of the &gt;!bold waste and file at the end, a nice callback to the observant theme of the game.!&lt; Like you said it may be better to have the&gt;! witches speaking color be the one that corresponds with the second waste.file keyword. Or at least some kind of event to alter the keyword in the waste relay.!&lt; Great feedback, I may implement that! I'm not so worried about people &gt;!seeing the credits out of order!&lt; , since once a player has access to a &gt;!relay keyword they can navigate anywhere within the game at any time.!&lt; Thanks so much for playing the game through and providing input, this is exactly the player/developer interaction that makes a game better and more rewarding for both parties. I'll absolutely add your username &gt;!to the playtesting credits!&lt; you helped improve the experience and that's valuable to me! As for the tumblr link&gt;!I'm a big nerd and have absolutely no shame in plugging myself. I'm cheeky and proud! Haha!!&lt; Thanks so much u/WalkingGarbage , gold ARG star for you.
intel atom with integrated graphics
Thanks!
really enjoyed this! It reminds me of the really old Donnie Darko flash website. I really wish the web had more things like this.
 const allPositiveNumbers = /* somehow I fucked up my tutorial */; &amp;#x200B;
For language reference: https://javascript.info/ If you find yourself building a lot of DOM elements take a look at [hyperscript](https://github.com/hyperhype/hyperscript). This is a good stepping stone between plain JS and using a framework.
Haha well my intention was to show what the end result would be like as an API first and then show how to build it. Rest assured, there is further detail
If anyone is interested in jumping straight into the final code, the fleshed out project is available [on github.](https://github.com/francisrstokes/Lazy-Infinite-List).
I think they might be referring to naturally having templates, styles and component logic in one file with the ability to use pretty much whatever (supported) web-native technology you want for each. It does feel more like creating actual _web_ components than something like React does (which sort of prioritizes JS to the somewhat detriment of other two). I don't do much frontend these days, but I did find it really neat that you could write e.g. Handlebars, Sass and TypeScript _normally_ in a single file and have everything locally scoped.
Secrets of the JavaScript Ninja was excellent, minus the terrible title.
Every time that functions runs it seems to create a button, it then adds the event listener function to that specific button. That function that runs when a button is clicked calls the download function internally with the filename parameter, and it can access it because functions have access to variables declared in outer functions (You should read about Javascript closures to understand how this works in depth) However you shouldn't think of that filename variable as a single variable that is overwritten, a new filename variable is created every time you call \`displayFun\`
So to compose these transformations, you loop through the entire list of them for every element on execution? That seems to have a huge overhead. Why not just do functional composition? ``` Class Infinite { ... filter(fn) { this.filterer = x =&gt; this.filterer(x) &amp;&amp; fn(x) } map(fn) { this.mapper = x =&gt; fn(this.mapper(x)) } ... } ``` Also, it would have been nice to see some discussion of `reduce`.
So to compose these transformations, you loop through the entire list of them for every element on execution? That seems to have a huge overhead. Why not just do functional composition? ``` Class Infinite { ... filter(fn) { this.filterer = x =&gt; this.filterer(x) &amp;&amp; fn(x) } map(fn) { this.mapper = x =&gt; fn(this.mapper(x)) } ... } ``` Also, it would have been nice to see some discussion of `reduce`.
This is function composition, only executed in a loop. If a filter doesn't pass the loop breaks (short circuit). Also it wouldn't be possible to perform operations like `zip` and `filterDependent` using function composition, [because they need the context of the evaluation in order to run](https://github.com/francisrstokes/Lazy-Infinite-List/blob/master/index.js#L97). Don't get me wrong, I love FP (hence why this is a fantasy-land compatible library). As for `reduce`, it's not possible to write a reasonable or lawful reduce operation for an infinite list, but you can of course do this after you `.take(n)` some elements. 
Looks awesome! Worked fine on my phone as well
Cool! I should spend more time exploring it.
Sweet! I have a plan to do branching nodes for my apps too. I’ll probably look at your repo to get some ideas. I just watched Bandersnatch today and damn, it’s awesome. I’ll watch it again with your app to guide me. Do you need any help with your project? I’m a newbie programmer but I can try to contribute if my skill allows.
Micheal feathers has a book working effectively with legacy code that I recommend 
Great! Thanks for the feedback :)
Why aren't you just composing generator functions? No need for a class with a list of transforms. 
The point is to create a data structure that can be transformed though operations like map and filter. I don't think that would be possible by composing generators. 
I think you forgot to post the code...
Kent C. Dodds will be giving a webinar on Jan 10! I’m really looking forward to it. He’s such an expert in JavaScript testing. https://go.applitools.com/190101-KentCDodds-React-Frontend-webinar.html?utm\_term=ThisDot&amp;utm\_source=organic-social&amp;utm\_medium=reddit&amp;utm\_content=webinar&amp;utm\_campaign=190110-Dodds-Webinar&amp;webinar\_campaign\_utm=190110-Dodds-Webinar&amp;webinar\_medium\_utm=reddit&amp;webinar\_source\_utm=social
Well, that's a pretty generic answer, but ok, let's take that as a starting point. You want to prevent breaking existing features, so... it seems that you _already have_ existing features, right? I mean, you already have 60KLOCs. This sounds like a sizeable number of "existing features" to protect. Should they take precedence over new features? Well, according to your stated goal, yes, they should. Because _new features_ don't exist yet. So as a first idea you could decide to focus on existing code, because that's what you said you want. Now, there are two additional things to think about. One is a clarification: This does **not** mean that you should ignore new code; it's only about _priorities_. After all, new code, _once written_ will become "existing features". But that's just a warning, something to keep in mind. Let's stick to the idea or prioritizing. The second thing to think about is this: You _now_ have a number of features which you want to protect _when you make changes to code_. And you _might_ reason that "when you make changes" the parts that _may_ break are the parts that you update but, alas, this is generally not so and it would be a _risky_ assumption to make. You will know your code better, of course -I haven't even seen it, so whatever-, but no matter how "good" it is, if you've gotten to that size already without any kind of test whatsoever, you should not assume that. It is very likely that modifications in some parts may indeed produce effects in other separate parts. Not only is it likely but, if it does indeed happen it will very probably tend to be hard to track. Again, maybe your code is super-great, I do not know, but this is something that happens frequently under these same circumstances. With this in mind, then, how should you proceed? Well, it may make sense to start by identifying the most critical parts and features of the whole thing. These are the ones that you **need** to not break under any circumstances. Also the ones that you know that will be the **most** expensive (effort, complexity...) to fix if they do break. These are the ones that matter most. These should be the ones you start working on. You write tests to ensure that some things that you know to be true (to work) right now will continue being so. So you start by writing the most important truths you want to observe. And please notice that I have repeated, almost to boredom, the idea that these are the parts you **start** working on. That is, the plan is not working _only_ on these ones, but to start with these and then go on to work on others, while the effort is still worth it and until you are satisfied that your tests are covering enough of the application. There are a number of additional considerations to make. Such as these: - Do you currently have many bugs? Or maybe particular features with more bugs than the rest? If you do, then you might want to give this additional thought. On the one hand more bugs mean that the truths you think you know may not be as _correct_ as you think. This is typical when the bugs are repetitive and tend to occur over the same features or actions. On the other hand, if you're already fixing bugs in some parts, then it may be a good moment to write tests for those same things you're fixing or trying to fix. That is a good way to force yourself to produce less additional bugs when fixing old ones. So these areas also are, _generally_, good places to start focusing on with tests. - Actually, the most correct approach would be to keep continuous track of those priorities. So you start by evaluating and assigning all priorities to existing features. You order them and approach them in that order. And then, each time you introduce new features and code, you evaluate those new features, assign them their priority and put them into the track list in their place. Those new features may be more important than some existing ones but still less important than other existing ones. Also, you re-evaluate those priorities at regular intervals, say each week, or month or quarter. You re-evaluate them considering if they _now_ have enough tests, if you're getting more bugs on them now, etc. Probably things don't change too much, but do it anyway, even if not spending too much time. But do it at least every once in a while if anything just to check that you're doing it correctly.
Thanks
Hello KraZhtest. Await/Async is sugar syntax on top of promises. Promises allow you to represent a single and immutable transition from one state to an other (pending to resolved or pending to rejected). 
I see! Tyvm
This has nothing to do with being "technically correct", you're just only considering one perspective. If you're a user who can't use a site, you *absolutely* feel discriminated against, regardless of the motivations of the web developer.
Thank you so much! That's a great compliment! I think this type of content is unique because of the sheer scale of the project, there's so much coding that's just a little bit more difficult than intro level coding required in order to pull something like this off. The art side of these types of games is another beast as well and ***whew*** was it exhausting to learn both sides! Did you play all the way through? If you haven't found the end credits you still have relays to find! :) Thanks for playing!
Your variables are in different scopes. In JavaScript, functions create a new scope. If you were to not declare the variable inside the function, the engine would have used the one outside.
Looks sweet, would love to see the code, otherwise there is no much point in posting it here :-) 
Loved the effect. Btw the parallax effect is way too much on the phone. Drop a blob of water on your phone and replicate the parallax effect. :)
Oh man, if it could emulate the moire patterns produced by the RGB(G) matrix, that would be uncanny valley
Right! I'll put together a simplified demo to share and update the post when it's available.
wow it seems so intresting!
I don't entirely agree but I'm willing to guess that it's possible to get that impression because a lot of Vue devs (rightly IMO) see React not as technically superior but largely riding on name recognition and critical mass. Since a question like "What UI framework should I learn?" is often met with "React, everyone uses it, industry standard, blah blah" I think Vue.js devs feel a bit less passive and a bit more driven to speak up.
This seems better suited for r/learnJavaScript
Hi /u/esamcoding, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/viraj47, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/ayech0x2, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Maybe it's the way I hold my phone - I don't move it much, so wanted people to realise there was an effect going on...maybe it's worth toning it down a notch. Thanks for the feedback!
Hi /u/thrinz2, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
"that can idea"
The way we are doing is basically if you change it you test it. If you add a new feature, you write tests for it. If you change an exciting file you write a test for everything in that file. Eventually you have tests for everything that is affected and anything not tested is probably the least volatile. 
Wow. This was really great! The visuals and the puzzles too- even though it took me several tries and severe anger control because some of them were really cryptic or I was just too dumb to get them, for example,the first one I thought it was a nightingale,which then turned into pelican because of the sound of the crashing waves when I finally heard crickets chirping in the background. Probably the maze or the morse code puzzle was the easiest one whew..Anyways this was great and loved it. 
its been a while since i've messed with base64 images, but if you're loading the page over https you might be running into a cors issue. I remember it in the past, but it was specifically when i was using a canvas with base64 image strings
I am fairly new to Javascript. I wanted to make an animated maze generator, so I could watch the process. This is what I came up with: [https://codepen.io/anon/pen/PxboaK?editors=0010](https://codepen.io/anon/pen/PxboaK?editors=0010) (sorry, it's not github) Any feedback is appreciated, especially anything that makes the code better organized or easier to follow. &amp;#x200B; &amp;#x200B;
I love both React and vue but I can’t deny that both have their “random reasons” for preference. I see some prefer React simply cuz it’s backed by Facebook which is totally fair and reasonable as u want something that will have ongoing support on a large scale. Alternatively I’ve seen vue marked as preference just for that fact that it’s not controlled by a large entity as many see it as avoiding giving more time, effort and “control” to an entity such as Facebook. Either way I can’t say whether those reasons are good or not but I have seen them. Ultimately there’s too much infighting when it comes to people’s preferred framework/library. 
thats what I thought, but I figured it out. its been a week and it was as simple as ios will not parse spaces in base64 &amp;#x200B; my issue: var imageUrl = 'data: image/png; base64, ' + this._mapData.floorplanImg; will not parse, where as: var imageUrl = 'data:image/png;base64, ' + this._mapData.floorplanImg; will parse... &amp;#x200B; I wanna spike my ipad and do the ickey shuffle, and simultaneously take an 8 story dive out my office building. a week worth of research to find out its just a spacing issue.
Yay! Thank you so much! Certainly so much trouble is to be expected out of an ARG, haha :) If you've not seen the credits you're not finished! It's up to you to return though! Thanks for playing and for the feedback!
Looks cool, maybe consider some description at the top of the readme about what the project is/does.
This seems awesome - thank you!
I'm stuck at Lighthouse.Scrap, what am I supposed to do?
If u know c++, then you should have easy time learning JS. JS has syntax similar to it, but a baby version. You should like it. You can learn it in Freecodecamp.org
You’ll have to use what you’ve seen in the other relays. Revisit the old ones and compare what you know.
Yep, I really don’t like having to create a const before returning it
Are you allowed to use es2015? If so, you can use the `Array.prototype.some` function for the first. `some` returns true if any of the array items return true, false otherwise. ``` function longPlaneteerCalls(words) { return words.some(function(word) { return word.length &gt;== 4 } ); } ``` For the second function, you can use `Array.prototype.find`. It will return the first item in the array that matches some criteria. In this case, I'd use an `isCheese` function which checks a string against an array of known cheeses. ``` function isCheese(maybeCheese) { const knownCheeses = ['gouda', 'emmantaler', 'cheddar', ...]; return knownCheeses.includes(maybeCheese); } function findTheCheese(ingredients) { const foundCheese = ingredients.find(isCheese); if (foundCheese) { return foundCheese; } return 'no cheese!' } ``` Now, anyone else looking on might recommend a lot of additional optimizations with ES6, I just didn't want to make it too complicated lol
Wow ! This smell of pure bad ass’ness Can’t wait to get home to try it out 
what is the difference? 
The first one will just return the promise. If an error is thrown, it will be up to the calling function to catch it. 
Something cool that a friend showed me is that a regular `Array` is already a sort of poor mans Maybe monad. If you have a function that could return null, you instead return empty array, or an array of one item if the function is successful. const safeParse = json =&gt; { try { const p = JSON.parse(json); return [p]; } catch (e) { return []; } }; const getMaybeValue = (m, nothingFn, justFn) =&gt; { if (m.length &gt; 0) { return justFn(m[0]); } return nothingFn(); }; const parsed = safeParse('[1, 2, 3, 4, 5]').map(x =&gt; x * x); getMaybeValue(parsed, () =&gt; console.log('error'), console.log); // -&gt; [ 1, 4, 9, 16, 25 ] const badParsed = safeParse(`{ dkjsvb ]`).map(x =&gt; x * x); getMaybeValue(parsed, () =&gt; console.log('error'), console.log); // -&gt; "error" Without touching the prototype, chain can be implemented as a plain function: const chain = (fn, m) =&gt; { if (m.length &gt; 0) { return fn(m[0]); } return m; }; 
It only has high cognitive load the *first time*, like literally anything else you ever have to learn. After that you become a better developer and you have a new tool in your belt. I completely understand hesitance to FP, but I think the things it has to offer are really of a high value. A year ago I would have leaned towards what you're saying, but now I feel like FP keeps blowing me away with just how general it's abstractions are, and how highly applicable they are to just about any area you can think of.
In the first example try { return someAsync(); } catch (err) { console.error(`We caught an error ${err.message}`); } It will not get in to the catch as it has already returned. &amp;#x200B; The second example returns the whole promise chain so the catch will be fired if an error is thrown. return someAsync() .catch(err =&gt; { console.error(`We caught and error ${err.message}`); }); &amp;#x200B; Try running const tryAndCatchMe = () =&gt; { try { return new Promise((resolve, reject) =&gt; { setTimeout(() =&gt; { rej(new Error('This error never got to inner catch')); }, 2000); }) } catch (err) { console.error('Inner catch'); } } (async () =&gt; { try { await asd(); } catch (err) { console.error('Outer catch') } })(); &amp;#x200B; And you will see only outer catch.
If that’s your repo, what’s your terminal theme? :o 
Hi 👋🏻 you can find a repo on my github (the name should be “[dot files](https://github.com/rawnly/dot-files)” with all my term setup ✌🏻 WARN: The dotfiles repo is buggy, manual installation is recommended until fix 😅
Maybe a TL:DW
I didn't even know this and now I'm worrying whether this ended up anywhere in production code that I wrote over the past couple of months. I don't think it did, because most of my code looked something like this: try { const result = await someAsyncCall(); if (result.length === 0) throw("Empty result"); } catch (err) { handle(err); } So I got saved by poor API design I guess.
Sure! padStart/padEnd - you can specify how long you want a string to be and then add '-' for example till it reaches the character count. object.values allows you to extract array of all values from an object object.entries allows you to extract array of key/value pairs from an object, trailing commas adds the ability to leave a trailing coma (in an object for example: { a: 1, b: 2`,` }), Async functions are the best things that is brought into the javascript, basically allows you to write asynchronous code in a synchronous looking code, made a separate video about that :) Hope this answer covers your question! :)
Thanks!
What about try { return await someAsync(); } catch (err) { console.error(`We caught an error ${err.message}`); } ?, using await
!remindme in 3 hours
I will be messaging you on [**2019-01-02 23:45:50 UTC**](http://www.wolframalpha.com/input/?i=2019-01-02 23:45:50 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/abwpu9/video_explaining_all_the_new_features_of_es7_and/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/abwpu9/video_explaining_all_the_new_features_of_es7_and/]%0A%0ARemindMe! in 3 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I don't see a problem here. You clearly missed the \`await\` statement. But I agree, it sucks a little that \`return await someAsync();\` won't work (as far as I remember.
In your first example, you just need to "await" to get the expected behavior. try { return await someAsync(); } catch (err) { console.error(`We caught an error ${err.message}`); } Usually, `return await` is unnecessary, but this is one place where it makes a difference.
If you use `return await someAsync();` then you will end up in the `catch` branch.
Ah interesting, ok yes, that works, thanks. Are you not essentially returning a promise that is waiting for another promise to resolve?
One way to identify the difference is to look closely at the structure of the project. Professional javascript should be well commented and easy to navigate. For example, using MVC (model view controller) or for ReactJS, separating components and containers.
[Udemy](https://www.udemy.com) is the site I use the most, extremely cheap courses, very useful and in depth. 
Isn't this just a pub sub? 
Just \`await\` is all that's needed &amp;#x200B; \`\`\` async function foo() { throw new Error('bad!'); } &amp;#x200B; async function bar() { try { await foo(); } catch (e) { console.log('error:', e.message); } } &amp;#x200B; bar(); \`\`\` &amp;#x200B; That works fine. 
Why not mobx then? 
eww
This works great. It doesn't seem to take very much to make it go, I always thought it would be a lot more code. The guys and gals over at /r/HomeServer might be interested in this. Is there a reason you are creating a new SpeechRecognition for every query instead of reusing an existing one? 
Woops, you're right. I haven't really understood the `empty` value for arrays. At this point, would using [/u/mariotacke's answer](https://www.reddit.com/r/javascript/comments/abn2hi/how_can_i_fill_a_2darray_with_a_new_function/ed1sfi3/) be a better idea then?
enjoy [https://github.com/LeDDGroup/typescript-transform-jsx](https://github.com/LeDDGroup/typescript-transform-jsx)
Quick note on one of your code samples, to generate fibsEndingWith5, just use x =&gt; x%10 === 5
That works yup, but you are returning a promise that is waiting for another promise to resolve if I understand how await works.
!remindme in 1 day
Yep, I think so
Enjoy man!
Thanks! I had some issues getting some of the speech APIs working correctly, particularly with the onend callbacks not always wanting to trigger. But you're right, it should be more efficient to move the instance into the Voice class and start/stop when needed instead of recreating it. The main disappointment to me is that FireFox doesn't have a functional recognition API right now. I was really hoping to run the client on a Raspberry Pi but now I'll need to use a device that supports the official Chrome (maybe a LattePanda). I have a personal implementation that runs on the golang server in the repo and has commands for checking the weather (with DarkSky) and searching my recipe database. But the next step will definitely be making it more modular with some kind of easy addon system.
I am really glad to hear that man :)
Hi man, thanks for the ideas, will be adding them to future plans on Github. If you have time, it would be great to see you contribute to this :)
Have you tried visiting [http://bandersnatch.life](http://bandersnatch.life)? :D
Well, with the help of multiple flowcharts, I wrote the main decisions that'd lead to different paths and then wrote a script to make all the repetitive paths. Glad you liked it!
 function resolvePromiseTo(promise) { return promise.then(data =&gt; [ null, data ]) .catch(err =&gt; [ err, null ]); } let [err, result] = await resolvePromiseTo(asyncOperation); You now have two vars to use rather than a try/catch, as throwing is not usually the desired result in JS. Let's you avoid try/catching await blocks and code branching, resulting in cleaner code.
Hey man, would love to see your work :)
Did you try to store the query result in a variable and then do something like: `&lt;?php` `$color\_from\_query = SELECT color FROM blah blah blah` `&lt;script&gt; document.getElementById("myDiv").style.borderColor = $color\_from\_query &lt;/script&gt;` `?&gt;` 
Thanks man! :)
Hi /u/HolidayInternet, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding.
I found your presentation style relaxed and clear, and the examples worked well to illustrate the features. Some thoughts... * I prefer it when educational videos get to the point as quickly as humanly possible. I already knew from the title what you're gonna talk about, I'm here to understand what it means. * The commented-out section headers at the start was a clever way of giving me an overview, and much neater than a boring slide. Kudos. * You already used good examples, and I'd like to see them as quickly as you can. I'd expect you to *explain* what the feature does, not just *describe* what it does (e.g. "padStart makes your string fit a certain length" rather than "padStart pads the starts of the string..."). * I personally consider it a bit distracting to solicit subscriptions before the content, mostly because it's dead weight at the start of the video. * I noticed you're already editing the video, which is great. In my view, there are no points for doing a video in one shot. * This may seem incredibly nitpicky, but I prefer it when people edit out distracting mistakes, like when you said "HiHiHiHihi 10 times" when it's only five times. I'll spend the next three seconds thinking about that mistake rather than taking in what you're talking about. Again, this is somewhat unique to educational videos. * If you're still doing this in a few months, shop around for a nice podcast-style mic (anything in the €50-€100 range will do fine). The extra bass will help you sound even calmer.
Hi /u/hooplematt, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
Link to the asynchronous function video mentioned in the video and description: https://www.youtube.com/watch?v=mlb525FgU3k
Hi /u/Vincennes94, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
As a hack you could use a browserify/watchify on the vendor.js and load the output from browserify which would include all the dependencies in the bundle. That's what I did when I came up against this same issue some time ago. Regarding Halo's point, I didn't want to set up webpack as I was already using gulp for a legacy project.
Hi /u/Gh05t_97, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/misuseofmana, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
That was a really interesting read. Thanks for sharing!
Hi /u/UnknownName2018, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/ML-newb, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
I am going to add things to improve and fix to the readme file later tonight. Feel free to look at them and start working on any you think you can help with. I would really appreciate that :)
Hi /u/EpicMailMan653, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Trevor050, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
This is an impressive bit of work! I especially liked that you set up the concept of reifying infinite sequences, as that was something it took a while for me to recognize even after I had experience using lazy sequences.
Hi /u/delta_skelta, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Kuritzu, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/nostra53, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
It's also worth noting that it didn't happen immediately and there was a huge churn of in-between frameworks. Including the likes of KnockoutJS. And the likes of "frameworks" for Backbone itself.
Thank you! The best feedback I've got! Appreciate it. 
As long as the website requires my confirmation (like notifications, location and full-screen for example) I'm okay with it. 
Hi, thanks for your help. That sounds actually like a great idea. I'll try something on the spot. I'll let you know as soon as I get something tangible. Thanks
Since you guys seemed to like the last post, but it was removed because it wasn't posted as a link, here it is as a link :)
Post was removed since it wasn't posted as a link, here's the new version - cheers! [ES7 &amp; ES8](https://www.reddit.com/r/javascript/comments/abyysa/video_explaining_all_the_new_features_of_es7_and/)
Post was removed since it wasn't posted as a link, here's the new version - cheers! [ES7 &amp; ES8](https://www.reddit.com/r/javascript/comments/abyysa/video_explaining_all_the_new_features_of_es7_and/) &amp;#x200B;
an async method is essentially forming a promise, yes, but it's an outer promise around the entire function. When you await an inner promise it gets awaited by the outer promise. By not awaiting your async call, you're simply returning the promise as the result of the function, and so the outer promise never acts.
!remind me in 12 hours
Gosh I hope memory usage has been looked into, I feel Electron allows devs to disregard resources running Slack and Vscode eats ram alot. I miss Qt days 
I think you'd have to put the &lt;script&gt; tags in a Echo statement. Not sure, I don't do php
This is because Arrays are monadic. :) You can do this sort of thing with any container type so long as it has a \`unit\` value (which for arrays is empty array). You can also use promises in this way, only with promises, you could return the "reason" why something failed: Promise.resolve(2) .then(x =&gt; x * 2) .then(x =&gt; { throw new Error('I wanted a string!') }) .then( result =&gt; console.log(result), err =&gt; console.log(err) ); &amp;#x200B; Logs "Error: I wanted a string". Of course, you can't access the value synchronously (you can never leave the promise land), but that's why people have [result types](https://fsharpforfunandprofit.com/rop/).
What's not clean about try/catch?
Why would a scroll sideways change to the next article... I changed articles by scrolling the code box over by accident. 😑
You don't need to calculate the sequence to be able to calculate the constant. https://en.wikipedia.org/wiki/Look-and-say_sequence#Growth_in_length
So - no trap, just user error
Better make a new post, old ones get forgotten :-) 
That works in the sense that the catch is triggered, but it has different behavior since it's not returning the value from `foo`. OP's confusion seemed to stem from wanting to return the value from `foo`, but also wanting to catch errors in a `try/`catch` inside `bar`.
This was a really interesting experience, thanks for sharing it. I've told my puzzley friends about it. I have one question: &gt;!was the 1:7 5:7 8 9 12 13 (dislocated.png) a red herring!&lt;?
you can add a [data attribute](https://www.w3schools.com/tags/att_global_data.asp) 
So like &lt;input type="radio" name=“sports” value=“lakers” data-customProp=“1” data-customProp=“2”\&gt; And then find data-customprop in the Dom?
Ah ok, well in the case of wanting the value returned and wanting the catch, just `return` works. &gt; Since the return value of an async function is always wrapped in Promise.resolve, return await doesn’t actually do anything except add extra time before the overarching Promise resolves or rejects. ``` async function foo(shouldThrow) { if (shouldThrow) { throw new Error('bad!'); } return 'Foo'; } async function bar(shouldThrow) { try { return foo(shouldThrow); } catch (e) { console.log('error:', e.message); } } async function baz() { const value1 = await bar(); console.log('value1', value1); const value2 = await bar(true); console.log('value2', value2); } baz(); ```
I think internships are a thing for people who are studying CS at university only. What you want is 'professional experience', much the same as 'internships' but with a different angle. I'm getting started with freelancing on Upwork and through talking to owners of small businesses. Basically just get as much professional experience as you can, luckily you aren't being graded for it but you are looking to earn money instead as well as gain professional experience.
Well, then I guess the math is beyond me. Not sure how to calculate the constant to 1k places without getting the sample big enough. Then not sure how to get that many digits in javascript. This is probably beyond me but I hate not being able to figure something out. 
An internship typically involves making waves, a degree (or short path to it), or experience. If you’re not making waves (I.e. some sort of major project with lots of contributors), and you don’t have any degree, the next best thing is experience. You may not have any, but it’s easy to get. I’m not exactly sure what you mean by “coding” but there are ALWAYS lots of small business and 501c3’s looking for stuff. Offer free work in return for permission to use it in your portfolio. Show experience doing exactly what the company you want the internship at does and you’re a shoe-in over degree carrying individuals with no experience. In all honesty, most people can learn anything on their own. Anything aside from a licensed profession (doctor, lawyer, etc) and your degree basically just shows that you’re capable of learning and learning that subject specifically. Showing experience doing reflects the same ability with the added bonus of how it results for you. Good Luck!
Your example here actually has the same issue as the OP. Did you run it and see your `catch` block getting triggered? Without the `await`, `console.log('error:', e.message);` is never going to get triggered.
That’s exactly right.
data-custom-prop-one Access and use like [this with JavaScript ](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes) element.dataset.customPropOne 
Forget an internship, get a job. There is tons of need out there, even for entry level web developers.
Is it supposed to be slightly transparent? I can see the tail through the neck when the tail is supposed to be behind the rest of the duck... Anyways, I know this is old thread, but all this is really cool. I always thought 3d drawing is way too much math for me because I suck at geometry. Recently i stumbled upon this tutorial [https://www.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes](https://www.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes) and it sparked an interest, I'm building on that code now except in Python ( i dont know JS). Your examples also inspire me Right now I'm having problems on how to move the piece front and back. I can zoom it ok but once I bring another cube in the screen the zoom will just zoom both of them until they overlap. What I mean is that I can define the x,y position of the object, but not the z... because the tutorial I linked doesn't do it that way. Anyways, I will probably figure it out in couple days after some sleep.
I'd love to but I got a bazillion other side projects I'm working on. Good luck!
Those correspond with the paragraphs!
I'm guessing you're a fan of Go if you think that `if (err !== null) {}` is cleaner than `try {} catch {}`
Use arrays. Also, you're talking about tens of millions of characters here. Outputting that quantity of anything will take some time and bog down for a bit. var lookAndSay = digits =&gt; { var lastChar = digits[0]; var times = 0; var result = []; digits.forEach(function(s){ if (s==lastChar){ times++; } else{ result.push(lastChar); result.push(times); lastChar = s; times = 1; } }); result.push(lastChar); result.push(times); return result; } var output = (s, iterations) =&gt; { s=[s] for (i=0; i&lt;iterations; i++){ s = lookAndSay(s); } console.log(s.join()) } var seed = 1 output(seed, 11) &amp;#x200B;
Pub Sub doesn't keep state, it just has subscibers and emitters. The `get` method of `duix` is kinda the difference here.
Super cool! One minor nitpick for mobile friendliness: after a node is clicked on and expanded, the screen pans to a bit of a strange place (maybe the center of the whole diagram?) rather than zooming towards the node that was just activated... could be useful to have a smarter pan/focusing behavior!
Looks like Hyper running some variation of Agnoster ZSH theme or similar. Agnoster is easily my second favorite theme with Pure Prompt being the only skin I favor more. 
We are aware of "triangle overlapping". The triangles of the model are three vertices in a 3D space: [A,B,C]. You could write them down in any order: [B,C,A], [A,C,B] ... and it would still define the same triangle. The author of a duck did not make vertices of each triangle just in any random order. He (or she) ordered them in a way, such that A-B-C go clockwise when you look at the triangle from outside the duck. So we can say, that each triangle has an inner and an outer side. The JS program loops through all triangles (in a fixed order) and draws them all. There is a little trick: it skips the whole triangle, when it is facing the camera counter-clockwise. But when two triangles A,B are facing the camera clockwise (and B is after the A in a triangle list), B is drawn after A (on top of A), even when A is closer to the camera. The solution would be to sort all triangles in a list (according to their distance to the camera) in each frame. But there still would be problems, if triangles intersect one another.
Build something like a website for a fake dental office from scratch and put it in your portfolio. That is way more interesting that an internship where you just do intern work. 
I would suggest considering modifying `take()` to use iterators as well, instead of returning an array. That way `take()` doesn't have to be the last item in a chain, and can continue to be lazily evaluated. C# takes ^^^heh this approach with Linq. I suspect other languages do as well.
Its cool but I just dont really get why anyone would need Infinite Lists in JavaScript. Can someone give a real-world practical use case for this?
 let [err, result] = await resolvePromiseTo(asyncOperation) if(err) doThingWithErr(err) return result // vs try { return await asyncOperation() } catch(err) { doThingWithErr(err) } I do think it's more legible, but it's a matter of preference, I suppose.
Alright, I guess I understood that, thanks. 
But in this case, if you need to update a component or some view for example, you need to trigger a state change in the component (React). In this case, I don't see what is useful about keeping the state in the duix side vs. just passing the value that changed as part of the emit payload and using that to call setState in the component.
Don't get an internship, get $. Just spam out a bunch of quick applies on Indeed.
Stop, posting, click, bait. ;)
Get a paid internship at a company you would want to work for. Otherwise, an internship is worthless on a resume. [39% employment rate compared to 37%](https://universe.byu.edu/2017/02/22/interns-more-likely-to-be-hired-as-full-time-employees/)
you went wrong when you didn't use proper formatting for your post
Why not write your `mapStateToProps` function like this? ``` const mapState = _.identity ```
I’m new on reddit, but thanks for the help.
Are you adding ‘px’ to your value in your setTop method? It would be helpful if you put your code into something like codepen or stackblitz 
Very good and clear explanation. Deserves claps +1 Thanks for nice shared knowledge
&gt;But imagine a very long helper method that makes use of lots and lots of variables created inside the function. You really should not be writing those
Was the `deadlineDate` created with a different timezone maybe?
Can you confirm that both dates are in fact have same timezone ? Specifically "deadlineDate" considering ".diff" would consider timezone as well for calculations. In case "deadlineDate" is created in different timezone (which is possible 1 hour ahead of your current timezone) the difference of 3517945 seems logical.
hmmm, it might be. Perhaps I am being stupid, but why does it matter? either way it says its hour is the 23rd hour of the day and that the current time is the first hour of the day, so unless diff is treating its hour value as different behind the scenes, I don't see how that's messing it up. But perhaps I am misunderstanding something?
hmmm, it might be. Perhaps I am being stupid, but why does it matter? either way it says its hour is the 23rd hour of the day and that the current time is the first hour of the day, so unless diff is treating its hour value as different behind the scenes, I don't see how that's messing it up. But perhaps I am misunderstanding something?
So is this just a convoluted way to do lazy evaluation?
Take a look at the [introduction to events on MDN](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events). Down under [event handler properties](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_handler_properties), it mentions that handlers for keypress and keydown events must be registered to the window. So replacing line 22 with this statement will allow the space ship to move: `window.addEventListener('keydown', handleKeys)`
Think these should be document.addEventListener.. onKeydown=handleKeys; onready=startUp(); &amp;#x200B;
Websockets.
Good job! A glitch, on a magnet item `touchstart`, you probably want to do an `event.preventDefault()`, so the entire canvas won't move around as the magnet item is being `touchmove`ed. 
The ability to use Webpack to get a project going and knowledge of a testing framework like Mocha+chai or Jasmine are very helpful. Webpack is a very common tool but it’s not necessary to know the ins and outs of it. Getting something that transpiles modern JavaScript to whatever you can actually support is sufficient to start with.
There are “apprenticeship” for people who didn’t go to school as a CS major. Try that. 
It's not as important to have a broad understanding of a lot of different things, as it is to have a deep understanding of a core set of fundamental things: * Problem solving, thinking and planning, risk assessment, and level of effort estimation skills * Software architecture, design, and code quality principles (clean, maintainable, understandable, readable, robust code) * Automated tests (unit tests, at a minimum) * Competent version control skills (ideally in git) * Performance assessment and optimization (UI performance matters, and heavy frameworks like Angular can really do a number on performance if you're not staying on top of it!) * General debugging and troubleshooting skills Of course, you will likely need experience with setting up and maintaining a tech stack, how to build responsive, mobile-first, progressively enhanced sites. Probably some IE browser quirks etc. But everything else really just derives from those fundamental skills *when they are needed*.
Thanks for info about this one - I'm going to fix it ASAP. Sorry.😐
Midnight (00:00) in London (timezone GMT+0) happens 4 hours and 59 minutes (diff) before 23:59 in New York (timezone GMT-5).
Hey Trevor, this looks really cool. I love seeing people building things in vanilla JS these days. There is just some strange behavior happening on mobile. When I type 'App' and wait a second and continue with the 'l' it writes an 'A' instead of the 'l' resulting in 'AppA'. Also hitting backspace sometimes adds some strange combinations of parts of the word instead of deleting one letter for every keypress. Will checkout more when I am at the office.
You should know what these do and how to configure them: - Webpack - Babel - ESLint - (any test framework) All these are Node.js driven, so you should have a basic understanding of it. You should be able to use ES6 and ES7 features. You should choose one of the major frameworks (Angular, React, Vue.js) and become very good with it.
[removed]
Sorry I can’t help, but I did recently make a game with this rad framework https://phaser.io and if you are looking to get into this stuff, it might be helpful either way! The docs and examples are super helpful. Good luck!
I've never discussed IndexedDB nor PWAs at any of my jobs. It seems those are still just on the horizon for a lot of places. I think well rounded front end devs should know: 1. a bit about design and ux 2. css preprocessors like less/sass 3. a bit about accessability and how semantic html can help 4. straight up vanilla js 5. some node and maybe express (full stack never hurt anyone) 6. broad knowledge of frameworks, deep knowledge of 1 or 2 of them 7. a bundler of some sort (probably web pack) 8. project architecture 9. version control (probably git)
Sounds like addressSaver doesnt exist. Are you sure there’s a button with id ‘submit’? Also it’s probably ‘onclick’ and not ‘onClick’
Really interesting article and clear explanations ; thanks!
As in any language, you'll eventually need lists of computationally expensive resources. You can eagerly load everything and give up on performance, maybe with a loading thing if you're building something user-facing, or you can use abstractions such as these to represent a stream of future computations. A boring example would be a really long time-line on a website : you can load everything, or setup specific calls to maybe fetch the next 20 items based on the timestamp of the last loaded one, or use this kind of abstraction to reason about your remote resources as a generic stream, easily transformable. The goal is expressiveness and having a common way to reason about and treat lazy streams.
First and foremost, you need to learn how to listen. The job of a front-end developer is to understand who wants what. 1. What experience does the client need? 2. What does the designer want? Then translate. Learn when things are a priority vs when they are just talking through a hole in their head. After that, it's about 5 fundamental toolkits: 1. Web-accessible mockup services 2. Cross-browser compatability 3. Html5 4. Bootstrap 5. A front-end framework of choice i.e. React, Angular, Vue etc. Play with these tools a lot. Know what is possible. 
A night and day. try/catch wins by a mile.
I noticed that too. A cursory glance through the code says that the backspace issue could probably be fixed pretty easily by excluding subsequent backspace keystrokes from triggering the autocompletion step.
&gt; As in any language, you'll eventually need lists of computationally expensive resources. You can eagerly load everything and give up on performance Sure. I definitely see the reason to eagerly load computationally expensive resources instead of loading everything up front. But why are "infinite data structures" necessary to do it? there are already native JS APIs in browser to eagerly load lists with an indeterminate amount of resources. Your long timeline example, fetch using generators to eagerly load as the user scrolls down would accomplish much of what you need there.
Of course it *does* work, see the top responses here, what's your point?
It's hyper running \`spaceship-prompt\` with \`oh-my-zsh\` and some plugins like \`autocomplete\` and \`syntax-highlighting\` &amp;#x200B; The theme of the terminal is \`Verminal\`
Over 10 years experience programming in different languages isn't classed as senior? Maybe it's not senior in your JavaScript flavour-of-the-month library/framework wank fest.
Lol does anyone like generators? 
It doesn't need to be specifically webpack, my point was just that you need to somehow package that app in a way that resolves the imports. That's what browserify does right?
Hey! Good job! You can use Trie data structure to speed up your autocompletion greatly (I will be shady and will leave a [link](https://github.com/viktor-ku/triematch) to my implementation in pure js)
[removed]
Yup, that's the current behavior. I am actually adding this idea to the "Future Plans" section of the readme file, would you be interested in helping with that?
Thank you! I've come across a few little quirks around the autocomplete behavior myself that I haven't quite figured out yet. Do you mind me asking what mobile OS/browser you're using?
1. There are a number of subreddits that are focused on _learning_. In particular, you may find /r/LearnJavascript a more appropriate place to ask this type of question 2. You seem to be throwing yourself at code without much of plan or guide. This can work to some extent but you'll end up either having to ask a lot of similar "I did this but it doesn't work" questions, or being frstrated because you can't make something work. Instead, I would suggest you follow some more strict tutorials or guides that better explain the concepts _before_ you attempt to use them. Or if not "before" at least at the same time, but certainly not _after_ as you seem to be doing now. This is a question that has been asked already a number of times, so search the subreddit to find suggestions. (Some have been collected [here](https://www.reddit.com/r/javascript/wiki/faq); of those I would point out Eloquent JavaScript and/or going to [MDN](https://developer.mozilla.org/), that someone else already suggested, as they have many tutorials and guides for all levels, including beginners) 3. [Here](https://jsfiddle.net/fghnjdm1/) is your code, corrected. I only changed, as others proposed, using `addEventListener` to set up, well, _event listeners_. I also spearated HTML, CSS and JS and, as I didn't have your UFO and Atom images, used some generic UFO and Atom images. 
Thank you! Do you mean using the Trie structure in the search function rather than the super basic `string.startsWith()` filter I'm doing now? That's definitely a good call. In production I'd use something more robust than a basic filter, like your data structure, or Fuse.js, or maybe hitting a search API (although now that I think about it, an API call wouldn't work, because the autocomplete class expects the `searchFn` to be synchronous.)
thats actually quite fun when someone else joins
This is just essentially filtering an array of strings on key press, right?
That's right. Although your search function could (and probably should) be something more robust than a simple filter function.
This is what gives js such a bad name in the programming world. Just write your own pad function. It takes all of about 10 lines of code! In fact, it probably would take you longer to open up Google, search for this package, then run npm install than it would to just write it yourself. I understand having small building blocks of code that you re-use, but this is going a bit far. The same goes for those using isOdd, isEven, etc.
Generators are just a more straightforward way of creating iterables.
Ah, yes thanks, I've fixed the heading
Except this time we're not talking about a separate package but core JS functionality.
Thanks!! I haven’t tested this on mobile as much as I should have so this really helps.
I can't agree more
It's an interesting perspective. What should and shouldn't go into core. I tend to be of the opinion that, since JavaScript's primary job is DOM manipulation, it makes sense to have a rich and full String API.
I'm having the backspace issue (wherein it doesn't work) on Chrome on an Android device
Honestly, just about anything would work here, because this is just about reserving a name. When the app developer builds the full product, they can transition everyone to their system of choice without too much trouble (first make them log into the system you'll build, then once they're authenticated have them set a password for the system). Firebase would work, Amazon's cognito would work, any other user management system would work, or you could create a simple api with a single 'register' method that takes a username, email, and password, then stuffs it in a database if the email and username doen't already exist. If it does exist, then return that they need to pick a new one. Just make sure you don't save the password in cleartext - either salt and hash it, or just don't save it at all. Once the app is up and running, you could send them an email to inform them and to let them pick a password via a custom link. 
You're right, I didn't read. Shame on me
I didn't read, shame on me. This absolutely belongs in the core.
Good, but "are you sure -&gt; really sure" I should subscribe just to be able to see the full image? If it is more clear without "I want.." that leads to "I want" I could think about it. I understand you don't like `.forEach`, but when I am dealing with a problem I don not want your opinion on a problem that you do not event will see. Good start. Clean it up.
This is a bit of an off-shoot from your actual question, and inspired by /u/ugwe43to874nf4 's response. One thing I learned pretty early in programming is that often tutorials or guides leave out bits that leave you assuming that the language you are programming in does some sort of magic and just knows what you want to do. For instance, you may have come across some code/article that mentions to do things in your `handleKeys` function and maybe even gave you some example code on what should be in that function. But what you quickly discovered is that having that function doesn't actually mean anything to javascript. Don't be discouraged, this is part of the learning process. When I first starting learning programming on an IBM 5051 with basica (basic advanced), I came across this piece of code in one of the manuals: `draw tree$`. My first thought was _wow, basic just knows what a tree is, and maybe I can just do `draw person$` and it will just know_. Trying both `tree$` and `person$` did not work, and after a while, I realized that these were just variables with good names that described a string of drawing instructions. There are very few _"magic"_ functions/variables that _"just work"_ when you implement them (aside from languages like C with a `main()` or similar), and I don't think JS has any (but I could be wrong on that). That's to say that most programming languages don't have any concept on what you want to do, you will almost always have to connect the dots so your language interpreter/compiler knows what to do. Knowing the terms to search on google definitely helps to know how to connect these dots. For instance, searching [javascript key even handling](https://www.google.com/search?q=javascript+key+event+handling) finds some documentation and tutorials on what you want to do.
It looks like `browser.tabs.sendMessage` should be in a function so it's called only when `browser.tabs.executeScript` has resolved: browser.tabs.executeScript(itid, { file: "content-script.js" }).then(() =&gt; { browser.tabs.sendMessage( itid, { idx: toString(index), rst: toString(result) }) .then(response =&gt; { console.log("Sent"); }) .catch(onError); }); 
Thanks! :) 
The last thing you were learning or doing before you took a break? I'd start there. Then on to the next thing that builds off that, as you go you'll realise the things you don't understand anymore, then you can quickly go back and read about them and then continue. You'll catchup to where you were quick.
About frontend frameworks popularity, here a more precise sum-up: https://gist.github.com/tkrotoff/b1caa4c3a185629299ec234d2314e190
I just added `takeContinuous` [to the library.](https://github.com/francisrstokes/Lazy-Infinite-List) This can be used like: let [concrete, nextPrimes] = primes.takeContinuous(5); console.log(concrete); // -&gt; [ 2, 3, 5, 7, 11 ] [concrete, nextPrimes] = nextPrimes.takeContinuous(5); console.log(concrete); 
Yeah. Exactly.
A real senior developer can learn and use react effectively fairly quickly because react is a pretty simple tool. You are completely incapable of understanding react and how it works. I've taught college students who picked it up, but developer with 10 years experience like you can't? 
Thank you, I for taking time out of your day to help. I appreciate the advice. I been using KhanAcademy for most of my learning. 
Thank you guys for all the help. This is an awesome community.
I don't entirely understand what your question is. But please note that you could change \`foo({})\` to \`foo()\` and get the same results. The curly braces inside your function declaration's parentheses are, essentially, pointless.
Nice! I’ll look into it later.
I was trying to figure out why it's valid JS (ES6). I have since read about destructing, but have yet to see a good example as to why you would do this. Maybe a better example is: function foo({bar}){ console.log(`${bar}`); }; foo({bar : "ima bar"}); output: &gt; ima bar
Thanks for your response. &amp;#x200B; It doesn't seem to be receiving the message now - i.e. things in content-script.js that are outside of the listener callback work fine, but the callback isn't triggered
Here is a direct link to that [https://github.com/Ahmad-Magdy-Osman/Bandersnatch/#future-plans-soon](https://github.com/Ahmad-Magdy-Osman/Bandersnatch/#future-plans-soon)
nice!
Sweet!
Perhaps you have another object and you are trying to get its value using ? &amp;#x200B; Then again. No idea what you are trying to do. 
The way imports work. Really like ES6 imports / exports and how flexible it is. Like Python but far less confusing. 
You certainly can, but at this point I’m unable to think of a good application where storing an object in a variable and passing it in isn’t more sensible. If you’re trying to set object values when passing them to the function, see destructuring.
Promises can do three things after you call it: You can return the promise, or you can return the then()/next() or the catch() for error handling. Then or next will expect a function (callback), but returning a promise itself, it will expect you to "execute" it to resolve it.
Not a fan of it in general because it can get out of hand. but if you only need certain properties of an object you are passing through and you are going to be using them a lot within that method, it can help you avoid doing a lot of: function calculateSomething(position) { let x = position.x let y = position.y // use x and y a bunch and return something } &amp;#x200B; function calculateSomething({x , y}) { // use x and y a bunch and return something } &amp;#x200B; It's ultimately a stylistic choice, and I think it makes more sense sometimes, but I don't really see the point in using the latter example if you are only going to use x and y once, in that case I find just using position.y and position.x is clearer in intention, or simply passing x and y as two different parameters.
You've kind of answered your own question in a way here. Doing this without destructuring would mean creating a variable for the parameter and then only using that variable to get the value of its `bar` property. Destructuring allows you to skip that intermediate step and get the value you want in a variable without having to declare the variable explicitly (e.g. using `const`, `let` or `var`).
&gt; Do you mean using the Trie structure in the search function rather than the super basic `string.startsWith()` filter I'm doing now? Not quite. What you'd do is: instead of having a data array containing every possible match, you store each match as a leaf in a tree structure, where the root node of the tree is an empty string and each level you descend down the tree contains the prefix of the level above, plus a letter unique to that prefix and level. That way finding matches is a walk down an n-tree, which reduces the amount of time it takes to find them, as you eliminate half of all possible matches every step you take down the tree.
Thanks, it is based from an old flash game from my childhood called luchables. Wanted to modernise it 😊
Cheers :P
I don’t see where you call the function checkCookie()
nothing is directly calling checkCookie() You can add checkCookie(); right before document.getElementById("name").innerHTML = username; 
" document.getElementById("name").innerHTML = username; " underneath the checkCookie funtion.... username is not defined because username is outside the scope. if you declare var username = getCookie("username") outside of the checkCookie function it will be a global scope variable and then should be able to be accessed anywhere... &amp;#x200B; also you need a window.onload function and then inside of that make all the function calls in there. (this is a fat arrow function with ES6 syntax, might look a bit different if you've never seen it before but should work fine with older JS syntax) window.onload = () =&gt; { checkCookie(); getCookie(); } &amp;#x200B;
Take a look at cron for scheduled js tasks
Thank you very much for your time and response.
I'm curious how you would develop in Angular 6.x.x when your company blocks node package manager though.
The message you're sending to the Content Script is an Object with two String properties: { idx: toString(index), rst: toString(result) } But `prse()`'s first line is running `JSON.parse(message)` - this will fail, since `message` is an Object, not a String. Messages are JSON serialized, but it's an internal detail.
Hi /u/andreasvee, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/DlCE500, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/vospit, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Thaerious, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/sagarjethi, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (/r/javascript is not a job board). Thanks for your understanding.
Hi /u/Ijustwanttocode101, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Huh, it turns out detecting key presses in Chrome on Android [is a HUGE can of worms with no fix](https://bugs.chromium.org/p/chromium/issues/detail?id=118639). I think I'm going to need to look into an alternative to `keydown` and `keyup` events. Bummer.
Hi /u/yonatannn, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding.
Hi /u/Mystic_Owell, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/braca86, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/helloworld2244, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/DJPEPO, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/dimitoon, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/davidreed7021, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/gymshoos, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/gymshoos, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Hi. I don't know if I'm the first one to ever tell you this, but please, **never** post code as an image or screenshot. Not here and not in any other place. Don't even send a co-worker or a friend a piece of code as an image by email. Just don't do it.
Hi /u/adlabco, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Haven't looked at them all but here are three I could wholeheartedly recommend: - [JavaScript: Understanding the Weird Parts](https://www.udemy.com/understand-javascript/) - [The Modern JavaScript Bootcamp](https://www.udemy.com/modern-javascript/) - [Modern JavaScript from the Beginning](https://www.udemy.com/modern-javascript-from-the-beginning/) Bonus: - [Practical JavaScript](https://watchandcode.com/p/practical-javascript)
Thanks, this is exactly what I'm looking for.
Ah, I see what you’re saying. And you’re right, that’s a much better idea than a basic array of strings. 
I have one question. I'm trying to pass a string as a variable to the data attribute and it's throwing errors in my complier. Like if I do data-whatever="hi" That works. If I do var string = "hi" data-whatever=string It doesn't work. 
AddressSaver is assigned before the window is loaded, which means the submit element might not exist yet. So wrap it all in the onload function or get the element in the onload function. 
Hi /u/gooddev25, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
https://www.firsttimersonly.com/
Could not agree more! It's technologies and techniques like this one that remind us that JavaScript needs an article with `the` as the 5th word of the 2nd paragraph. Until that far-off time, JavaScript will remain a trash language.
&gt;TypeScript continued to grow in 2018, and it continues to be overrated because type safety does not appear to be a real thing (does not appear to reduce production bug density by much) Well, I guess Eric hasn't changed much after all this time still. :)
Easiest way to think about it: the actual "work" doesn't get done until something `awaits`. Since you didn't `await` the work doesn't start in the `try` block so the error doesn't get thrown until after the function has already returned.
[removed]
 let a = []; a.push(a);// is this infinite? a[0][0][0] === a
not op, but his function is not the identity function, it creates a new object with only the listed properties copied. It would be closer to ```js const mapState = s =&gt; _.pick(s, propNames) ``` 
Typescript interfaces can not be used to instantiate an object. They in fact completely disappear in compilation. Not sure what you're talking about.
You don't instantiate by using an interface. You instantiate with an object literal, as is typical with JavaScript. TypeScript then lets you annotate that variable with an interface. I personally use the `class` keyword in a lot of my TypeScript code, but I'll often use an annotated object literal for simple objects like DTOs.
Do you mean “using directly” as in: const i: MyInterface = {...}; Yes, you can do that. But that is not really instantiating the interface. You only tell tsc that the const “i” must adhere to the specified interface. After transpiling, all interfaces and types are completely removed. They don’t exist in js.
That's a pretty interesting structure. I'd describe it as more like recursively defined 
Doesn't open. Infinite refresh loop.
this isnt github but i dont know where else to turn &amp;#x200B; I am having an issue while learning basics. Probably very simple to everyone but I cannot get it on my own. I am doing a quiz to apply to the Lambda school and was wondering if someone could give me a few tips. // orderPizza takes in a boolean // if it is true return the string 'cheese pizza' // if not, return the string 'pepperoni pizza' // Example: orderPizza(true) returns 'cheese pizza' &amp;#x200B; function orderPizza(vegetarian) { if(vegetarian = true){ return 'cheese pizza'; }else{return 'pepperoni pizza'; } } orderPizza(true); &amp;#x200B; No matter what, the above function returns cheese pizza even if i type false when calling the function. One of my biggest issues is i cannot figure out how to get the function to recognize something besides vegetarian if you can grasp what I am trying to say. &amp;#x200B; I have the same input question for the question below: &amp;#x200B; // countDown takes in a number greater than 0 // it logs every number starting from the input down to 0 // there is no return value // Example: countDown(3) logs the following // 3 // 2 // 1 // 0 &amp;#x200B; function countDown(start) { for(let x = 'start'; x &gt;= 0; x--){ console.log(x); } } &amp;#x200B; countDown(4); &amp;#x200B; how do i make it so that in the start in parentheses represents the entered value and replaces it for what x equals in the for loop? &amp;#x200B; thank you for any help
Hi /u/dknx01, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
hello-bar is an open-source package which works like [hellobar.com](https://hellobar.com); it's a great way to capture leads, announce a sale or discount, etc. It supports targeting based on location, referrer, A/B testing, etc.
... if you don't mind your code looking *exactly* like the Prettier people say it should look.
Very nice tip!
&gt;function orderPizza(vegetarian) { &gt; &gt;if(vegetarian = true){ &gt; &gt;return 'cheese pizza'; &gt; &gt;}else{return 'pepperoni pizza'; &gt; &gt;} &gt; &gt;} &amp;#x200B; You're really close for both of these. For the **orderPizza** method, your conditional if statement is setting the vegetarian variable instead of checking against it. Make sure to use the == operator to check for equality or === operator to check for equality and type. For the **countDown** method, you're setting your x variable in your for loop to the string 'start'. If you remove the single quotes from **x = 'start'** in your for loop, you should get the result you're looking for. &amp;#x200B; &amp;#x200B;
I think you are right it is pretty code, except I have a default printWidth of 90 not 80, I think yes apart from that it is the same, which I am quite happy about. A company i used to work for made us set it to tabs with a 4 for width (which made me cry!)
Nice +1
Actually I expected help under a JavaScript sub, but to delete it instead of an request to move it into another sub is not very helpful and friendly. Think about such behaviour.
I mean the usage of an interface as described here https://www.typescriptlang.org/docs/handbook/interfaces.html in the he first example. It is used to for properties, some kind of DTO template, and not to ensure functions exists. I saw this usage a lot and people complain about use interfaces in its generic definition to ensure (only) functions exists and not about the properties. Do that the developer must take care of the functions implementation and not about properties.
amazing help thank you so much. Lifesaver. 99% of these problems they have you solve aren't that hard. It is just the research to try to get them finished that takes the most time
Are you using that method for pixel tracking? Just curious, glad you figured out a solution to that weird bug.
if you want to go _really_ deep end, you could always check out the javascript interfaces to [tensorflow](https://js.tensorflow.org/). might be worthwhile to try their examples and getting started instructions. fair warning, tensorflow is more oriented towards neural networks and machine learning in that end of the pool. but if you already understand concepts like models and features it might be a good place to explore. good luck!
Sounds like an infuriating bug to chase down. Thanks a lot for sharing your findings and solution.
How would you use this for pixel tracking?
Yeah, nobody except the author and those with enough time to devote to this functional extremist programming will get this. And yes it makes the code harder to maintain by an average JS layman.
Does this issue also occur for OfflineCanvas?
I'm sorry but could you try to rephrase that on a way I can understand? But just to be clear: the first interface merely describes the shape of the object that is passed as argument into the method. Which is exactly what interfaces are for.
Our jobs aren't really to have arbitrary opinions on code style, our jobs are to create valuable products and tools. By using a code formatter you prevent a plethora of debates in teams, and get to focus on the important stuff. Yes it occasionally does something I disagree with, but more often than not it's because I wrote some complex lines of code and simplifying them resolves the issue. We use prettier with eslint in my team, and a few people have tried to disagree with the code style and argue to remove it, to which I have one response: "if we can't agree to use a code style that none of us have a say in, how will we agree to use a code style that all of us want a say in?"
\&gt; You are completely incapable of understanding react and how it works. I already said I learned it mate. After learning it, I said it appears to be an over-complicated, over-engineered piece of crap and other methods would get the job done many times faster. So that left me wondering where it does actually become useful. &amp;#x200B; Some guy in this thread replied that the abstraction was useful when you work in a code base of hundreds of apps, with a team of hundreds of developers. Maybe that's true, but when I asked for an example of which company makes hundreds of useful apps he disappeared. Maybe a gaming company? Then again, the resulting games would probably be slow as hell. Maybe some other company which makes heaps of other generic apps and cross-compiles them to Android/iOS platforms? Maybe useful too. However this is isn't useful for *every* company. Especially some digital agency. Imagine maintaining many websites for clients, then you need to charge them to update React as well when you need to update the site. Or try maintaining their existing code with its React version using the old API documents. In my current company some guy built some part of the site in React v0.13 or thereabouts. Still building on it 3 years later and he can't upgrade it or doesn't have the time among all the other requirements. No-one else can work on it either and React has changed quite a bit since then. I think he must use the Wayback Machine archive to access the API reference docs. Good job security for him though as nobody else can maintain it.
&gt; In my current company some guy built some part of the site in React v0.13 or thereabouts. Still building on it 3 years later and he can't upgrade it or doesn't have the time among all the other feature requests and bug fixes. No-one else can work on it either and React has changed quite a bit since then. I think he must use the Wayback Machine archive to access the API reference docs. Good job security for him though as nobody else can maintain it. That is without a doubt one of the stupidest things I've ever read.
If you want to use Prettier, great! It will definitely help many teams avoid pointless arguments. But it is only one set of preferences out of many. No one should promote it as if it should be the default JS style rule. As its creators say, it's opinionated, and other opinions are valid, and if you're a team lead it's fine to choose something else. At least it's less egotistical than the egregiously named "Standard" tool.
I found Robin Wieruch's [tutorials](https://www.robinwieruch.de/categories/machine-learning/) on the subject to be highly informative, albeit a bit basic in my case as I have a strong background in statistics and mathematics, but everything he writes is well thought through and of good quality, so go take a look!
Loads fine if you don't comment out the script on line 10
/u/shiffman made some videos on his YouTube channel called The Coding Train. In some older videos he explains some low-level concepts and algorithms. In more recent ones, he creates networks using ml5, which is a high-level API for deep learning. That should get you started. If you want to learn more, I can recommend this online book: http://neuralnetworksanddeeplearning.com/ It gives a really good intro of the math and concepts. A lot of the math takes me ages to vaguely understand, but understanding concepts is very important. After that I quickly moved to node.js and TensorFlow. I started recreating networks, like the autoencoder found in the Keras docs, and never stopped playing with TensorFlow’s Layer API. I want to elaborate on this later in a blog post, but don’t expect that anytime soon. If you want a heads-up, let me know. Hope this helps!
This looks &amp; feels great! + love the use of the flashcards on the phone! Though no info about the pricing... and not 100% complete
You could potentially use template literals instead: ``` function renderInput(inputVal){ return `&lt;input type="text" data-thing="${inputVal}"/&gt;` } ``` Check out the MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals
Right, I should've been reading it more careful. Thanks!
Yeah I got it working. It was a stupid mistake and a syntixical error. That's what I get for sleeping 10 hours in 3 nights
I would look up REST for your NodeJS backend and MVVM (model–view–viewmodel) for your front-end. React/Vue are examples of MVVM. 
Thanks! What about MVP like backbone.js? Is it still widely used?
I think op refers to [Canvas fingerprinting](https://en.m.wikipedia.org/wiki/Canvas_fingerprinting)
Desktop link: https://en.wikipedia.org/wiki/Canvas_fingerprinting *** ^^/r/HelperBot_ ^^Downvote ^^to ^^remove. ^^Counter: ^^229497
Thanks for taking the time to try. I had the same problem when I was signed in to CodePen, but if I am not signed in it works fine (current Chrome on Ubuntu 18.04). I can open it fine in an incognito window. Here's a jsfiddle link, if you're still so inclined: [http://jsfiddle.net/mow813jx/](http://jsfiddle.net/mow813jx/)
Hiring somebody you don’t regret later is incredibly difficult. Finding a housemate you don’t regret later is even more difficult. I’m not sure it’s even possible to find multiple people that can be counted on to maintain high test coverage AND take out the trash when needed. If you can pull that off, more power to ya. 
You could create a serverless function which would only expose Babel API, then you would send a request with a payload containing the code and would receive the post processed code after.
Set your token on response headers. \`\`\`res.setHeader('token', req.user.getToken());\`\`\`
Do you mean MVC? The trend these days is MVVM. Angular 2, Vue, React, etc are all MVVM. Backbone would be MVC but I don't think that pattern is big on the front-end anymore. 
Yup, canvas finger printing provides a pretty good way for uniquely identifying a certain device. Especially when you are trying to handle users spoofing their User Agent. 1x1 pixels are used in analytics / tracking services such as those provided by [Facebook](https://www.facebook.com/business/help/1563508590530683) or Double Click. Thanks for providing a link /u/MrSlyPotato!
Just FYI, you should post these questions on /r/learnjavascript. 
Hi /u/nandoptg, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Yeah but how would I do that? I can't install Babel inside the system I'm using and I can't seem to find any Web APIs for doing this
I don't really think its any good to just suddenly start programming in a completely different style than your team, but if you're beginning a project and your team understands these kinds of design patterns or you have the time to discuss these patterns with your team in advance then I don't really see a problem. Sure, surprising someone with this would suck, but if you're all on the same page (or at least the contributors that matter) then you have an opportunity to stop having to enumerate every failure case you want to catch and instead let the code implicitly handle ALL failures and let you respond to them in whatever way is appropriate for the situation. If you're in a job that's so rushed that you don't have time to try new strategies with your coworkers sometimes then your job is too rushed and your whole team is missing out.
Look for Serverless, Firebase Functions, or Google Functions, for instance. You would deploy a function as an API endpoint. The rest would be configure that endpoint to have the behavior you need it to have.
Got it! one last thing, is **The Module** design pattern related to **MVVM/MVC?** I've been watching ([https://www.youtube.com/watch?v=HkFlM73G-hk&amp;list=PLoYCgNOIyGABs-wDaaxChu82q\_xQgUb4f&amp;index=1](https://www.youtube.com/watch?v=HkFlM73G-hk&amp;list=PLoYCgNOIyGABs-wDaaxChu82q_xQgUb4f&amp;index=1)) and I'm curious if I should keep watching it or jump straight to MVVM. If not,are there any situations where you would use a simple modular design 
Ah I see what you mean now
Sorry I'm not actually sure what you mean by "The Module" design pattern. 
It's something like this, here's a screenshot of it: [https://gyazo.com/eb81899ab30f6994091af7cc819ed1c9](https://gyazo.com/eb81899ab30f6994091af7cc819ed1c9) &amp;#x200B; And the video I'm trying to follow: &amp;#x200B; [https://www.youtube.com/watch?v=m-NYyst\_tiY&amp;list=PLoYCgNOIyGABs-wDaaxChu82q\_xQgUb4f&amp;index=2](https://www.youtube.com/watch?v=m-NYyst_tiY&amp;list=PLoYCgNOIyGABs-wDaaxChu82q_xQgUb4f&amp;index=2) &amp;#x200B;
Whether or not you get a job doesn't depend on the project. What it depends on is the skills you have developed after developing your projects. For example, one project will help you understand how a web page interacts with an API. Another will focus on DOM manipulation. Using a version control system, such as Git, comes as part of building projects as well. Also, your projects may also show your coding habits. Most importantly, when you work on projects, you get a deeper understanding of what your actual role is. You'll also learn many essential workflows. Another key is having a grasp of how the web actually works. So, use your projects as a way to get better. Learn, experiment, try new things. Here is a way you can use to approach creating your projects: https://www.reddit.com/r/javascript/comments/a3egay/how_to_start_your_very_first_portfolio_project/
When interviewing prospective candidates I will look at tech they have used that will be of some use in the job I am interviewing for. I’ll then ask them progressively harder questions in that tech based on their previous answers. I don’t look at specific skill sets but rather ability to learn new tech, and how that process went with with something they already know well. I don’t look at their GitHub or some link to a random project as you don’t always know how much code they copied but don’t understand. 
yep you are right haha. I adjusted it and everything works. thanks man!
yep you are right haha. I adjusted it and everything works. thanks man!
yep you are right haha. I adjusted it and everything works. thanks man!
it doesnt need to be big or unique but it could: - use several technologies to demonstrate competency. - easy to read/review code, comments only where necessary - write docs - write tests - use git with atomic changes and meaningful commit messages. - attention to detail, such as UI/ux/design, accessibility, i18n, performance, security, mobile-friendliness/responsive. - works well on slow devices - integrates with a third-party service, library or api. - deals with large amounts of data without running out of resources
+1 for posting it on reddit and not on medium.
It's helpful!
Sure, but he lists all the same props, and react-redux looks at the top level properties for you to prevent updates.
use **innerText** and use == as you are comparing values not assigning. `function login(` `btnName //in a separate file if that makes a difference` `) {` `console.log(btnName)` `if (btnName.innerText == "login") {` `btnName.innerText = "logout";` `} else if (btnName.innerText == "logout") {` `btnName.innerText = "login";` `}` `}` &amp;#x200B; [https://codepen.io/anon/pen/QzQxqQ?editors=1010](https://codepen.io/anon/pen/QzQxqQ?editors=1010) &amp;#x200B;
There is probably 10 websites written in jquery for each one written in react or vue. It is a very good tool when you don’t need a ton of interactivity. 
jQuery once performed a great task of normalizing functionality across stubborn non-standard browsers like IE6. What I find now is; a lot of devs are either lazy or don't understand they can do the same things in Vanilla JavaScript and don't have to import an entire lib to add an event listener on a button. 
The bug you linked uses horrible code… that's not how you should use a GPU. That extra copy can also cause a lot of performance degradation.
&gt; but how *big* or *complicated* those projects must be? both of these are undesirable traits in a program. everything you write should be a simple and as small as reasonably possible. complexity leads to bugs.
It loads a URL into an element with the ID “container”, then hides the loaded content, then fades that content in.
It the function at the top of the snippet. 
Because it’s like that girl you dated 10 years ago in high school that you swore was “the one that got away”. Some people can’t seem to let her go. In this example, she was also used by almost everybody at that high school because she was easy.
thank you very much, you've made my day. 
In my opinion, life is all about experiences and the connections you make. This sounds amazing, if only I wasn’t a full-time employee dev :/
How about “””new Date(event.start).toString()”””
Yeah man you gotta take care of yourself. This industry can be a grind, take care of you first! 
Ah yes, thanks I missed that. The jQuery way of creating functions is really over the top it seems - I'm so used to just &amp;#x200B; function funcstionName(arguments) { / code here } Thanks fo rthe help!
Umm performance degradation relative to what? The complete crawl he gets without doing it? 
Just copy the whole canvas into an arraybuffer and then pick it apart there pixel by pixel.
Ah, yeah that is tricky 
&gt; But imagine a very long helper method that makes use of lots and lots of variables created inside the function You got more important problems in your code than destructuring, bud
One of the main benefits/use cases is 'late subscription'. Imagine you have an app which needs to display a drop down list of users for selection. With a state manager, you cache this data once, and then just \`get\` it when needed. \`duix\` also provides the ability to get the latest value when subscribing (if one exists) without a specific/subsequent emission, or calling \`get\`. This is kind of like how a \`BehaviorSubject\` works in in RxJs. &amp;#x200B;
What do you think .getImageData() does? It’s what allows you to get the array buffer from the canvas.
I see, that makes sense. In this case, I would just use something like vanilla flux which is generally the same idea. Flux has the added advantage of preventing side effects in the dispatcher by only letting one action happen in the event loop.
Mdn? Google?
&gt;books that I think are worth recommending. A lot of them are written against Java because there is almost nothing to the language itself, it's a very bare set of syntactical features, which makes it well suited for teaching concepts and abstractions. isnt netflix written in node?
looking for more of a why answer than how. &amp;#x200B; who thought that such simplification of code would be beneficial to developers? I get that it's declarative, but to me it just seems excessive. Hoping someone could discuss as to why the spread operator next to a variable that matches one of the spreads attributes is thought to be useful. 
Np, glad I could help :)
I think you might be looking for an IDE (integrated development environment). Try these VSCode, atom, sublime 3. For tutorials Google JavaScript tutorial. And when you Google try to stick to mdn ( Mozilla developers network) although some people prefer we schools, I have been mislead a time or two. Hope this helps
Wow, no kidding. Well that was a frustrating read.
It does thanks
Yeah! Thank's OP, I'm getting quite good with the canvas now, so this is going to come in useful. Mah most recent canvas flamy thing: https://codepen.io/SarahC/pen/yGPQPJ
As far as I understand, `{...obj}` is just shorthand for `Object.assign({}, obj)` i.e. it's just cloning the object so of course the original isn't modified. It follows then that `{...obj, bar}` is shorthand for `Object.assign({}, obj, {bar: bar})`? The behaviour makes sense to me. You ask why and I ask why not? I'd argue it's very useful. Also, MDN would have been way quicker than us.
&gt;The bug you linked uses horrible code… that's not how you should use a GPU. Is it similar to what Windows WPF use of the GFX card? That behaviour is awful.
I hope you’ve been checked for STD’s.
Props, I would have pushed back on the PM before I had to discover anything like this...
Yea, its cool and all. &amp;#x200B; It just seems really abstract. Still learning new es6/7 features and am trying to learn everything correctly. 
using just react but using angularJS and vue.js in google search is a bit deceiving... 
Author here! Thanks for taking a look!
You'll get the hang of it!
There’s a shitload of jquery out there still. In both new and old codebases. Job descriptions are sales pitches. They’re only going to list the newest tech that the company is using to try and attract interest. 
Hmm. I mean, this is definitely interesting... that's for sure. I'll have to play with this concept myself, when it's not 5 AM.
Java now https://medium.com/netflix-techblog/netflix-oss-and-spring-boot-coming-full-circle-4855947713a0
Lol noted
Noted 👌
It's the same syntax, everything is also just wrapped in $() so that it executes after the DOM has loaded
It's the same syntax, everything is also just wrapped in $() so that it executes after the DOM has loaded
I'm getting CORS errors when loading both async and sync fetching of the wasm failed abort("both async and sync fetching of the wasm failed"). Build with -s ASSERTIONS=1 for more info.
That's what I was using as well: Chrome on a Mate 10 Pro and on a Galaxy Tab.
[Oh I made a quick setup thingy for this](https://github.com/alex-wilmer/prettieslint)
Looks good, thanks for sharing
It's not really the size, but quality. Show you understand a bit about how to write clean code. Show that you can make use of advanced concepts. For example some app on which you can order products. All in pretty ui, but it also renders pdf invoices with service worker implementation with web assembly module. This shows both crucial points: you can write clean code. You also learning new things on your own.
&gt;I noticed quite a few people are getting offended by the idea of working for free. Slap a hobby/fun project label when you're looking for people. No one wants to work for free, but I understand that there are people like you who enjoys doing fun projects during their free time so I'm not gonna take offence on that. &gt;can you think of what we can change to make it more appealing to you? Explain to them what you guys have in store for them learning and experience-wise. Emphasize that this is a collaborative hobby project and not meant to be monetized.
A short overview about Apollo GraphQL platform for those not convinced to GraphQL yet. Main components, libraries, services etc.
Why?
Yes, but what the code there does is getting a 1x1px subframe of the image, not the whole thing at once. Then it iterates over all pixels one by one.
This one: https://gist.github.com/448654b1cf01ce873f44d9bbe1d7c306
These are pretty cool!
&gt; The problem is, CSS isn't enough. This. A thousand times this. Trying to style modern pages in CSS is like tap dancing in a lead coffin. 
Took an hour to download, but actually works. 
Hey thanks for your feedback! I've got this feedback yesterday so I just pushed an update to make it clear that there's a free trial (previously it was only clear in the sidebar, now it's clear on the homepage, challenge pages and the sidebar). The price is $25, but because I'm registered in the Netherlands, I have to collect VAT so 30 depends on your location. So for people outside the EU it's $25
A short blog post about Apollo GraphQL platform, its services, libraries, features etc. If you havent jumped on a GraphQL train yet, Apollo Platform is a way to go !
Professional Javascript code? ha that's a good one. Javascript is the cockroach of software development. How do you tell a novice cockroach from a professional cockroach? I dunno, they are simply both cockroaches. The better question is: How do you tell a novice programmer from a professional programmer. If I see any programmer doing anything remotely akin to Javascript, I know they are not a professional programmer. This s\*\*\* should have died long ago, I have never seen such a mess as Javascript and all the crap that swirls around it. We have the great pacific garbage patch, Javascript and all that swirls with it is the equivalent in the software language world. A big pile of swirling shit bigger than any continent, and it keeps getting bigger. Google's script kiddies played a really big role in feeding this cockroach. If there were three brain cells among the bunch, they would have done something else. This year, seriously, I will be working on stripping anything and everything remotely related to Google from my life, including android, chrome everything, all services. I have setup a paid hosting service for email, no more free email and working steadily towards stripping Javascript from touching any moment of my day. Also, I hate to tell ya, Javascript is not the same as Java. Javascript's first bad start was for the idiot who invented it to think it was Java, or to call it Java. What a F\*\*ing moron. What story, please tell me was he telling himself when he named it Javascript?
Because it is small enough to be convenient as a simple post, without having to go to another site which may or may not be up or may change in future making the link invalid, consumes more bandwidth (admittedly that isn't going to be significant to most of us but some out there will be on nasty slow high latency connections) and has its own family of tracking &amp; advertising jiggery-pokery and other irritations for those of us easily irritated, ... Many reasons, potentially.
I personally did not have any projects when finding my first job. I think it's more important to develop the skills, and prepare to demonstrate some amount of knowledge in an interview. That said, if you have very little prior work experience, projects are a good thing to have, but it might be a little strange if it looks like you just did a few projects to beef up your resume. Find natural reasons to do some projects. For example, I like games and computational geometry, so I made a few games, and a few examples of computational geometry algorithms in JavaScript a long time ago (never added to resume or anything, but I could have). A MERN stack project is fundamentally interesting in it's own right, so if that interests you implement something that works, and add it to github and your resume.
I think Apollo stack is little bit too complicated right now. I would love to have schema as a source of truth not resolvers.
Try vscode with, useful extensions like Livereload, css intellisens, path intellisens, js snippets, brackets pair color, Or if you do integrated front end dev then try some angular or vue, Or react plugin. Hope this helps
Sweeeet, getting oldskool demo scene vibes 
look up the spread operator.
They are mostly used for arrays or they with objects as well? Let me check it out
i forget the exact syntax but its something like `const newObject = { ...object1, ...object2 };`
I just tried above syntax it just returns object2 properties
weird. i thought that would work. Have you looked at object.extend?