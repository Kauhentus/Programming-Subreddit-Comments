but but i love TDD and all my tests pass...
No you misunderstand - you specified the returned spy function `spyFoo` has a member function called `returned`, i.e. `spyFoo.returned`. What does that memeber function do???
[removed]
For anyone confused, this is the same update from 2 months ago.
Whole code for your understanding: [https://jsbin.com/kexequt/edit?html,js,output](https://jsbin.com/kexequt/edit?html,js,output)
I've tried adapting your examples to do some simple form handling, but have been unable to update the store from a `&lt;input&gt;` element's `oninput` event handler. Digging into the library code, I think it's because when you detect a function as the event handler, you don't do anything with the return value of the function. It would be intuitive to me that you evaluate the event handling function, and pass it's return value to your `dispatch`. https://github.com/concave-org/concave/blob/master/src/render.js#L13 localvoid's point about forms is that intelligent diffing is normally required to keep an `&lt;input&gt;` element focused while a user types. This gets especially tricky when you start conditionally rendering error labels above/below an input. Congrats on building this, though! It's always nice to see new ideas.
Thanks for your answer. I get your points and will have a look at the event handling and create an example especially for inputs/ forms! 
Hi /u/jakub-g, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding.
Hi /u/jakub-g, I'm letting this one stay since I missed it originally, but in the future, please use the "Submit a new link" option when posting a link. Thank you.
But why would you do this? What is the hard advantage to do something hidden from the user in a design perspective in such a way? I want to show the user what my program is currently doing and would not like to hide such important task from him. It has an positive effect if the user "knows" what happend, just say u do not tell the user that you sync data in background or something bad happend while you sync the data and need sort of merging strategy and if the user does not want to sync the items right now ... there are more questions and a behavior that "most" users dont understand if they dont see it. &amp;#x200B; my conclusion is: Dont try to be too intelligent. The more the app does "automatically" or in background without user notice or action, you create an environment that fits your expectation of whats a good behavior but not necessarily what the user expects. Users are simple: "i click a button and something happens". Only break this expectation if you are absolutely sure that this the best for the Program AND the user.
It should be pretty obvious what is wrong with the code just by looking at it and considering the specs of FizzBuzz. I would try not to mislead OP by suggesting that his code isn't what's wrong. 
Best advice in the thread, kudos to you. 
His solution removes all occurrences of the smallest number, yours assumes the number only appears once in the array. Which is best depends on the use case.
I would focus some effort on implementing things based on given requirements if you can, as that is really all FizzBuzz is (and I guess indirectly it's testing whether or not you know modulo exists)
...and it’s okay to break shit if it helps you understand why it works
https://medium.com/@addyosmani/the-cost-of-javascript-in-2018-7d8950fbb5d4 It matters
also moment-js doesn't support tree shaking..if you're into that
I am so confused by this rant. Coding isn't about money and companies and projects. It is a skill that is used in those contexts but that doesn't make those contexts the only lens through which to examine programming. I did like your list of reasons companies fail though, just don't really see why it's related to a technical discussion of JavaScript.
Oh, okay. Thanks for clarifying. Yeah, you're right. I will make adjustments to it then. Thanks.
If you're going to get all hot and bothered about being explicit instead of implicit, maybe it's time to consider TypeScript.
As a fellow seasoned developer.... I can see why you're still a developer. But seriously, everybody's got their molehill they're ready to die on. And musings like this, well almost totally useless for most organizations do push the General State of software development forward. While you're off having a beer this post is getting read by everyone at Mozilla. Granted, if he wrote this stuff up at the office it's one of the prettiest bike sheds I've ever seen, built in the middle of a jacuzzi
Moment.js
Yeah. I respects Zakas a lot, he's undoubtedly a JS master, but this feels like "niche interest developer opinion" that no one extremely tuned into the JS social and technical ecosystem is going to care about at all. And you know, for those people who do fall into that category, that's fine! It's great that they have strong opinions about named vs default exports or let and const vs var or fetch vs axios or whatever. That's the target audience here. The danger comes from getting way til caught up in this at the expense of productivity. "So and so said Redux is dead, we better refactoring our entire app!" And when less experienced people feel intimidated by all these little things that ultimately do not matter. So use named experts or don't. Your code is eventually going to be trashed and rewritten later anyway, assuming your company/product survives and grows.
&gt; i think i can defend "cognitive load" as an impactful thing over export default? really?
it's the same issue in that language too
Since you seem to have figured it out, the point fo0man was trying to get across is how the if-else-if conditions are arranged results in different output. for(let i = 1; i &lt;= 100; i++) { if (i % 3 === 0 &amp;&amp; i % 5 === 0) console.log("FizzBuzz"); else if (i % 3 === 0) console.log("Fizz"); else if (i % 5 === 0) console.log("Buzz"); else console.log(i); } Because of the if-else chain, if any conditional is found true, the code inside of it is evaluated and every other conditional is skipped, so conditionals that are more specific that shares commonality with less specific conditionals have to come first or else they'll never be evaluated (if that makes sense)
That makes perfect sense. Thank you very much.
Holy fuck! I deleted the post, it landed in one of the RSS grabbag feeds today so I assumed it was new without ever checking the clearly posted date -.-
In an interview, I wouldn't ask FizzBuzz exactly, but it would be a problem of similar difficulty. What I focus on is how you think of the problem. I want you to give several possible approaches, then tell me why each one might be good or bad. Performance, readability, maintainability, testability, and so on. Then you can write the code. Writing the code ought to take the least amount of time after all that.
Component based architectures are quite popular with the primary example being a \`React\` component. However, \`Angular\`, \`Vue\` and many others take this approach as well. I think you might be interested in \[these examples\]([https://coryrylan.com/blog/building-web-components-with-lit-html](https://coryrylan.com/blog/building-web-components-with-lit-html)) for \`LitElement\`. As for the methods, in your example I would just keep the \`clickHandler\`, and \`showPenguin\` methods with the view. And following that you might aswell put the code to load the data in the view (when it is init/load). Now this is looking like a more standard component. I think you may be abstracting too quickly. No need to separate concerns so drastically. &amp;#x200B;
The fact that something doesn't register on the big picture does not mean it doesn't matter. We as developers cannot determine pricing policy or change investors, but we can (usually) determine how our code is written, so it is worth discussing how to do that part of our job best.
The only way to fail is to give up 
I put `connectionID` and `id` there for a reason... Let's forget all about the sockets for a moment, ok? So, we have these things: // 1. An array where we store connections: let activeConnections = []; // 2. Some place where we want to add a new connection we get // (which is in your on('connection') handler but we don't really care for now: function addANewConnection(newConnection) { // ... } // 3. Some other place where we want to remove a connection from the array // (which is in the on('close') handler but again ignore that for now function removeAConnection() { // ... } The first thing to notice is this: `addANewConnection` get called on an event on the websocket and receives the new connection. This is fine, we could, as someone suggested, just push the connection into the array: function addANewConnection(newConnection) { activeConnections.push(newConnection); } This is fine. But notice also that `removeConnection` will be called on an event on the connection itself and it won't receive any parameters. This isn't _terribly_ important because we don't want to actually do anything _to_ the connection itself. We just want to mark in our array somehow that this connection is no longer valid... or better, simply remove it from the array. So, what we do is... function addANewConnection(newConnection) { activeConnections.push(newConnection); newConnection.on('close', function removeAConnection() { // Now, here I know newConnection is the connection I want to remove // But how do I know where is it in the array?? } } So we need to **somehow** keep track of where, in which position in the array we put this particular connection. We can do this in a number of ways. One of them, not particularly elegant but simple is the one I gave you. We introduce a global counter that is incremented each time we add a new connection. That is... let connectionCounter = 0; // or id or connectionID or whatever. And as I said we increment it each time. So _something like_ this, which is what you've done but doesn't work correctly: let connectionCounter = 0; function addANewConnection(newConnection) { activeConnections[connectionCounter] = newConnection; newConnection.on('close', function removeAConnection() { // now, we know we just added it in the 'connectionCounter' position, so... delete activeConnections[connectionCounter]; } connectionCounter++; } You did this, because, for some unknown reason you _wished to remove that line_. But I put that line you wanted to remove there for a reason. The problem now is this: At the moment you do the thing above, when a new connection is added, sure, it is stored in the position marked by the **current** value of `connectionCounter` (say `0` for the first one). But after setting those things up, we did... connectionCounter++; So now `connectionCounter` is `1`. And say we receive 8 new connections more. Then `connectionCounter` is `9`. Then you close a connection, doesn't matter which one. What happens? This: delete activeConnections[connectionCounter]; But, no, this does **not** mean to delete the element at the position `connectionCounter` indicated some time in the past. It means delete the element at position `9` which is the current value of `connectionCounter`. We have a problem. We're trying to remove a connection that isn't there and we're not removing the connection we did want to remove. (So the program will keep trying to use that closed connection and write to it and it will error out.) So, what is the solution? Well, obviously it's **not** removing that line because you didn't like it. That line does a very important thing. let connectionCounter = 0; function addANewConnection(newConnection) { let currentValueOfConnectionCounter = connectionCounter; activeConnections[connectionCounter] = newConnection; newConnection.on('close', function removeAConnection() { delete activeConnections[currentValueOfConnectionCounter]; } connectionCounter++; } What it does is create a **local** variable for each connection. It is local and so it is not the global counter that is shared for every connection. Each connection gets its own variable holding the right value for that connection. How does that happen? [Closures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures). Do read that and search _more_ explanations if needed or ask in /r/LearnJavascript for resources about _closures_, and about _scoping_ and _variables_. These are basic but fundamental concepts you need to understand. Otherwise you'll try to delete lines just because you don't like them which is, sincerely, rarely a good idea.
No prob, bob, it happens
Except... This isn't algorithm design. The algorithm was already designed and stated in the interview question. This is just algorithm implementation which is a first-year introductory course.
Quit without thinking twice. That's terrible. Actually makes me mad just thinking about it. 
Progress happens in steps, and compounds. Who knows what pointless piece of trivia will domino into something you might consider useful.
Sure 
In general. u/yojimbo_beta stated that trying to optimize cognitive load is overrated for real impact. Of course, export default alone is only small drop in the water. &amp;#x200B;
[Asks for source for details] [Gets it] I should probably hop off reddit for the day, it'll only be downhill from here. Thanks!
Hey, did you use a web app or something to create that screenshot? I remember someone posted it somewhere but I can't remember what it's called. Thx.
Eh. I'm a web perf engineer at a well known tech company so it's kinda my job
Set `data-value` on your `td` element, and then use `document.getElementById("rm1").dataset.value`.
You don't need to know the dom api, and it would be a waste of time to learn it. Javascript can function entirely on its own, for instance in node. And even in the web and especially in the professional world you barely touch the dom. Frameworks abstract it entirely and the dom becomes an implementation details and nothing more. Though i know it, and the web api, the only ever dom call i have made over the last 5 years was querySelector('#root') for mounting.
Go with .getAttribute(). In your case: document.querySelector("#rm1").getAttribute ('value'); For reference: https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute (Sorry, can't format because I'm on mobile)
Works like a charm! Thanks a lot! :D
Just throwing some ideas: - set min height and max height of the other component. - use js to check the height of other component and update the svg height. Im not realy a react developer so maybe those ideas are not suitable for this situation. 
Perfect answer.
While I don’t disagree this sounds like every agency
 &lt;OtherComponent style={{ ... }} class={...} /&gt; Most components at least let you do that. If that component seals styles you can still reach in with regular css. You can also measure out using react-measure or a plain ref, in case you need to support variable bounds.
Speaking as someone with decades of experience, I'm with him, actually I see that that's getting me downvoted though
Don’t tell me why! Just tell me what is right! ...and default it in the linter so I don’t have to remember all the changing rules. I’ll let the longer do my work. 
How? It’s a format of JavaScript that is designed to be strict - what is implicit about being more explicit, by using typescript?
The export of defaults issue is unchanged between JS and TS. Arguably, it's worse in TS.
JS having no standard library is the biggest offender here. For some reason some people are against it anyway, then get surprised tons of sites end up bloated with tons of libraries. ¯\\\_(ツ)\_/¯
Just wanted to point out that, if you use React and have to implement [lazy load](https://reactjs.org/docs/code-splitting.html#reactlazy), you will be forced to export your component as default. &amp;#x200B;
You don't really want to authenticate at that level. Think about it. If you do, then you'll need the credentials to such an authentication available on the client and so anyone can see them -anyone who looks at the source, at least. So if you're giving away those credentials, you might as well make the layers public. Instead, what you'd do if you really need to keep some layers private is you set up the geoserver calls to go through your web server -or a proxy-. You authenticate the user on your web server as you would for the rest of your application, with a login. Then, when making the requests to the Geoserver through the web server, it -the web server- will know if you're allowed to retrieve the private layers or not. And when it passes the request forward to the geoserver it can then make the request for the appropriate layers. The geoserver won't be directly accessible from outside so it doesn't matter that much if you set all the layers as public or if you set up authentication. In any case, the Geoserver docs have a number of pages on [authentication](https://docs.geoserver.org/stable/en/user/security/auth/providers.html) and different ways to achieve it, if you want.
I'm not sure what you mean by rust like semantics. Structs was a complex data type since C. Javascript object literals are struct like software entities. And has been utilized in javascript for years. And was a common module pattern in ES5. IIFE which returned an object consisted of behaviors and/or data. I'm curious what pushed javascript ecosystem to swap the paradigm. Prototypical inheritance wasn't really utilized all that much in ES5 modules. And it's not like it was a bad pattern, given the capability of the language, it was actually quite briliant.
`innerHTML` is usually used when you want to dynamically change your code. For example, you have a local list, and want to add a 'delete all elements' button. You can make just use `list.innerHTML = ""` to reset the list dynamically.
Interface is similar, by that I mean, behavior to the user, but from technical perspective they are fundamentally different. And that has to do how memory is being used by both concepts. You cannot shadow a property of a superclass, only overwrite it. You cannot overwrite parent prototype by inheriting it. That's why we have different names for these OO approaches, because they ment to point to two distinct things. &gt; Yes, composition should be preferred, and inheritence can be harmful if abused And that's pretty much every case. There hardly ever a reason to use inheritance over composition. The reason why inheritance is avoided, because you pay for code reuse with flexibility. And that tradeoff is simply not present in composition. It's still quicker to utilize generally. But any framework which is ment to be used for more complex applications will have composition alternative, rather than "extend this class". 
You should be able to set it to `''` to have it clear the 'none' and take on whatever display it would normally have if not explicitly set. If, however, it depends on some explicitly set display, you'd want to capture that before setting to `none` and restore that value when capturing your measurements.
I haven't tried it but maybe [getComputedStyle](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle) would do the trick?
This has been one of the best videos I've seen about the topic of dates and timezones. Thanks for sharing!
You _could_ do this: let getInheritedDisplayStyle = (e) =&gt; { let o = e.style.display; e.style.display = 'unset'; let w = window.getComputedStyle(e).display; e.style.display = o; return w; }; It doesn't only work with _hidden_, but it removes the _current applied value_. gets what the new computed value is, and then sets it back to whatever it was, and returns what you wanted. But beware this is an expensive operation so you may not want to do it in certain circumstances.
Thanks for answering. I checked the console and it said there's an unexpected token on line 60 (I think it was) with a highlighted open curly brace. Yours had that same brace in the same spot. I'm on mobile now, I'll send the html later today or maybe tomorrow. I know it's a more complex script for my first (after "hello, world," but I'm good with html and programming principles, and it's kinda fun. I'm thinking of trouble shooting /debugging by replacing half of your working code with mine and see if that works, then the other half, or half of half, etc.
Why not just set opacity to 0 and .getBoundingClientRect()
You _could_ do it under certain particular circumstances. In general you can't really. But if you constrain yourself to _always hide the elements by using a particular class_ such as... .hidden { display:hidden; } ...then it's actually very simple: just remove the class and that's it. Whatever would be applied will be applied. Otherwise, no, you can't really do it.
Unfortunately the display: none was not necessarily set with JS, so setting element.style.display = '' wont remove 'none'.
It's a good thought, but if the element is set to display none, then the computed style is none.
The use case is that you have something hidden by default with display: none. Then after some interaction, the element gets display: none removed. I want to get the size of the element before display none is removed. So, cloning it and setting the clone to opacity 0 and using .getBoundingClientRect() is going to return 0 for all values as long as the display is still set to none. If I set the display to block then I can get a size, but in the event that the element is actually going to have display: flex or grid or anything other than block, the size is going to be much different than if it was actually block.
Not sure I agree. There's a reason companies that succeeds often cultivate a developer culture where nitty gritty details like these are discussed and constantly challenged. I agree it's definitely not an indicator of a company's success, not even close. It helps the longevity, scalability, and maintainability of projects, and keeps good developers who care about their work happy.
You're absolutely right. I should have just took a break and came back to it later instead of getting so worked up. Thank you. On the plus side I got an enormous ammount of support and I feel better about myself. Plus I got the darn thing to work.
Yeah, that what I was thinking. I was hoping to make this helper function that my team could use to accurately get the size of any element hidden or otherwise. But I don't want to dictate that we have to use a specific helper class in every circumstance. Thanks though!
Reasons not to use export default: - cognitive overhead - possible mess with TS - named exports work better with the auto imports from VS code
I like being able to easily rename defaults during import, but he makes a valid point. Also he created ESLint, which my VS Code probably hits a 100 times an hour. Not rewriting old code to remove defaults, but will think of it moving forward. 
45% of staff is one thing, but what's their percentage on the engineering team? When I think of the tech industry, I don't count the secretaries, HR, or janitors employed by Facebook. And this is one giant company amongs dozens of others of similar size, and hundreds if not thousands of smaller ones that don't have nearly as diverse workforces. White guys certainly aren't suffering for choice. So if Facebook goes a little overboard with recruiting traditionally underrepresented talent, it's fine because they're a raindrop in a much larger sea. The tech world won't ever go fully "affirmative action is the only way to be" so one company overdoing it a little bit won't be harmful in the long run. 
[Untrue](https://old.reddit.com/r/javascript/comments/ah4vma/sophie_alpert_says_in_internal_post_she_quit/eedh56a/).
Asians also represent 45% of their workforce but are only 5% of the US population. They are so massively over represented at Facebook per capita discussing white peoples is lunacy.
On the other hand... it's not such a bad idea to have all hiding/showing done in one particular consistent way all across the project. I mean, even without this need you have, it's something I have established in some projects in the past. It makes the code more uniform and consistent and avoids having each developer creating their own helper CSS classes or JS functions or doing it inline or... But, yeah, I understand it's not something you can enforce in all projects and teams. Sorry.
Thank you very much! You clarified everything to me. Before your answer, was digging around and trying to override the imageLoadFunction from OpenLayers to send the password and the username via RequestHeader, and I felt so wrong due to the same reasons that you point out. Your solution is waaaay better. Thank you.
The Bay Area is also heavily populated by Asian people. Do you feel the need to shake down certain companies based in Atlanta and Detroit for having too many black people? It's a regional outlier that'll be smoothed out over a national average.
The Bay Area is 20% asian. So asians are 200% over-represented at Facebook. Why would you even bring up the local demographics without checking them?
Well, with TypeScript you always know if it's an object, a function, a class or something else, that's for sure.
Amen to that. My other pet peeve is discussing minor tech advancements that 'increase productivity' and reduce LOCs... Developers lose much more time in meaningless meetings, getting coffee, playing Farmville, discussing feature details or other mundane tasks than writing 20 more LOCs per day... Actually typing code is what I'm good at, let me type them and remove all other barriers even if I have to type more of them because of an old framework that I already know inside out. (of course one thing is doing all in assembly but besides crazy comparisons, RAD frameworks or anything like that usually aren't worth it, specially on the web ecosystem) The ulterior issue here is developers think programming is the most important thing ever and don't understand that for 99% of companies and projects, programming is a tool to actually build something. Building something is the goal. Clients don't care if your build system is so pretty you can do conferences about it. Overengineering is one of the worst qualities on a developer and he's something disqualifying on my team. Software 'architects' need to justify their paycheck with these kind of things. Please note I'm exaggerating a bit here. Of course there are standards that are needed and are important, but no, we don't need 15 different build systems for web projects because the newer one improves 1 tiny little bit detail. You'll see when you are at this for 10+ years :D
This is slightly tangential, but your post reminded me of: https://www.youtube.com/watch?v=BvYByDQq4gc
eslint tells you exactly why. Google the rules throwing errors / warnings and eslint has whole pages on it like \[this\]([https://eslint.org/docs/rules/no-return-await](https://eslint.org/docs/rules/no-return-await)). After reviewing the rules you can just modify the config to your liking.
Uh... Wai.... Ok
don't see the connection :) 
What problem are you trying to solve with this? Maybe explain that too and you might get additional ideas how to solve it?
Hahaha, agreed. I feel like there's a whole subculture of 'X considered harmful' blogspam in the dev world, especially JS. Just write the damned code.
I agree with you but this is /r/javascript and not /r/startups, /r/business, /r/smallbusiness
I'm crying, have an upvote
Nice! Would be cool to have some note visualization
You're not wrong about the details, but you are wrong about the big picture. If you and/or your peers adopt increasingly better practices, the entire world of software development becomes less of a fucking chore. As for this *particular* recommendation, I dunno. I like how default exports look, so I'm slightly conflicted. I guess I could go either way. `import autoBind from "react-autobind";` compared to `import { autoBind } from "react-autobind";`
Good catch of this being an XY problem. https://mywiki.wooledge.org/XyProblem
This looks really awesome but I click play and don't heard anything?
Are you looking for a library to parse the CSV files? Then take a look at PapaParse. 
*as long as you do it locally and test it locally and DO NOT BREAK PROD* seriously we had to deal with people commiting broken code to the master branch so many times already...
Ironically I find one of the biggest sources of actual cognitive overhead comes from an equally trivial-seeming component: naming. Projects with bad naming conventions make you reverse engineer everything to understand what anything is doing, and this is a serious waste of time.
Yer that would be a good upgrade.
yup
This looks great. Thank you.
&gt; pedanticness Wonderfully appropriately, "pedanticness" isn't really a word - you want either "pedantry" or its synonym "pedanticism" if you prefer.
Should have added /s
&gt; My personal experience has been that the phrase "cognitive load" has been essentially exclusively used to justify the use of helper libraries or whatever the hot new tool is Well, for me, term "cognitive load" is essentialy tied to the principles of the clean code. Tools for reducing "cognitive load", as understood by me, are principles as a good variable names, code co-location, DRY etc. Each of them helps to increasy clarity of what is going on in certain file. As much as i can see this can be used as an excuse, our results speak for themselves. When applying pcinciples mentioned above, we very objectively reduced time it takes to make some change in app, to introduce new people to project, and generally increased quality of our output, through several years. By quality and success, i mean measurable things like business success, people happines in work etc. As a byproduct, everyone got way better in programming in general, when discussing and solving how things should be done correctly, efficiently and understandable to other programmers. I cannot speak from authority of several decades, only a decade. But i can speak from authority working on projects of the size around 10 programmers working paralelly on projects around 100k LOC. Oh and from an authority being responsible for maintaining such a codebases. So, i will respectfully continue to take care about "cognitive load" and other practices and i am happy to know every small bit of this kind of information and people's own experiences, such as with default exports. If it sounds like it could help, and its verified with the people and experimented with, we will be doing it.
&gt; Well, for me, term "cognitive load" No. This phrase has an actual meaning.
Ok, tried to keep it short. Can we agree that clean code principles, or any (most of?) best programming practies, reduces cognitive load?
In this case (or like what I do with dynamic route imports) just create an index.ts that imports/re-exports it as default. 
You could look into [CytoscapeJS](http://js.cytoscape.org) I’ve used it for some small visualisations, but it’s very powerful and versatile. You could create your own layout as they call it. Best of luck! 
That's process though...shouldn't allow commits to protected branches without a code review
I think it's wrong to dismiss his post without any real technical counterpoints. I've personally ran into bugs due to default importing the wrong thing from a file which took me a few minutes to figure out. That type of bug would have never happened if I was only doing named imports. Presumably I'm not the only developer in the world who made that mistake. Maybe this one blog post will save many developer hours across the world. 
Look at this guy with *code reviewers* If you have time to review code you have time to create more code. Haven't you heard of the agile methodology [XtremeGoHorse](https://gist.github.com/banaslee/4147370)?
OOoh, I like this. very cool. I'll be playing with this sometime this weekend a bit! Great job! thanks for sharing.
that's.. very nice : \]
Ya in production this would be probably terrible haha. But maybe some kind of graphical URL (non-animated) could be cool!
Yay! Glad you enjoyed it !
I don't agree on anything without evidence. I also want to note that "best practices" are legally binding documents released with decades of experience by thousand-plus member engineering organizations, and that most of the trivial pieces of advice that programmers share under that name are anything but. (And usually wrong.) They're also sort of hilariously often in conflict, and are primarily derived from opinion. If someone builds a JS app from what Reddit thinks are best practices? god help them
Thanks, if you have any improvements, just fork and open a pr back into my repo so we can make news outlet the best ghost theme out there! :)
Will do! Excited to work with it! I love how clean and minimalist it is. :)
Awesome, I'm excited to see what you do with it :)
Zanmato reply
That's probably because this code exactly matches OP's book's solution.
&gt; I don't agree on anything without evidence. thats why i asked, if we have even some common ground. thanks for letting me know. &gt; I remember the last several times a skeptical academic measured what the randos in the industry held faith over, and the results were noise. My result does not stem from faith but from experimenting in field. Works for us well, as said, under conditions of projects around 10 people in parallel and around 100k of LOCs. I can reproduce it given different people/projects. Would it be good enough confidence and evidence to at least try if meeting in person? &gt; If someone builds a JS app from what Reddit thinks are best practices? god help them i dare you, are you able to go any lower?
Note that our new [`redux-starter-kit` package](https://redux-starter-kit.js.org/) includes a [`createReducer` function](https://redux-starter-kit.js.org/api/createreducer) that not only uses the "lookup table" approach for defining a reducer, but also uses the Immer library internally to let you write drastically simpler immutable updates. Please try it out and let us know how it works! Also, we've got [a PR that converts the project to TS](https://github.com/reduxjs/redux-starter-kit/pull/73) about ready to merge in. It's currently available on NPM as tag `ts-next`. I'll probably merge that in and release it as 0.4.0 in the next day or two if I don't hear about any issues.
Odi seems interesting. I'll try it out.
Thanks; English is not my first language. Indeed, the entry at https://en.wiktionary.org/wiki/pedanticness says: &gt; Some consider this term incorrect, and prefer the term pedantry.
&gt; My result does not stem from faith but from experimenting in field. So I'm not trying to be a dick when I say this, but I want you to understand that vaccine deniers say the same thing If legitimate research and personal experience say something different, personal experience loses . &gt; Would it be good enough confidence and evidence to at least try if meeting in person? I'm not against clean code practices, but also, I am habitually doubtful. The Clever Hans guy reproduced results for five years before someone told him what was really going on. . &gt; &gt; If someone builds a JS app from what Reddit thinks are best practices? god help them &gt; &gt; i dare you, are you able to go any lower? It's not clear what you mean by this
you're mixing two completely different languages / use-cases here. static html is exactly that: static. you build and load it once. the browser parses this markup and constructs the so called DOM. javascripts allows you to interact with this DOM on clientside. if you struggle with this concept take a step back and start with general web concepts.
This article is missing one thing: how do I write automated tests for this app? 
&gt; I've seen things you people wouldn't believe. Attack ships on fire off the shoulder of Orion. I watched C-beams glitter in the dark near the Tannhäuser Gate.
N. C. Zakas - you complete me. 
I’d say it’s 90%
IBM really pushing this now
shut the fuck up retard
Given that there's a wiktionary page for the term, I would say it's a valid word in English. It follows the grammatical for word formation in English, and languages continually change and absorb new words while dropping others as archaic.
Is there a reason why import { thatThing as somethingElse } from 'the-module' doesn't cut it? It's a few more characters, but it also documents the assignment. 
".sidebarMenu &gt; li
Doesn't work, it still applies that function to the sub-items
Are you sure it's being applied to the children as well? It might be that your CSS is not specific enough. When I run this code in a sandbox, I see it only apply the class to the clicked element.
Heres my codepen link: [https://codepen.io/DigitalDaddy/pen/JwzvwB](https://codepen.io/DigitalDaddy/pen/JwzvwB) &amp;#x200B; Please let me know, its driving me mad.. 
A true pedant.
$(this):not('.sub-items').addClass("sidebarActive");
no, it works, your css is what's incorrectly changing the color of the submenu (i assume that's the thing you're having issue with?)
&gt;$(this):not('.sub-items').addClass("sidebarActive"); That's giving me an error, it's unfortunately not working.
&gt; If legitimate research and personal experience say something different, personal experience loses So lets be clear about, what we are arguing about. I was against statement "cognitive load has an overestimated impact, you should focus (non trivial time) solely on things, which have direct impact on revenue". I was saying, that according to my experiences, it has and had impact in my envirment, as it directly impacts our revenue. Then i supplied conditions in which it applies and some (rough, yes) metrics i used to claim, i had impact (not exclusively of course). Moreover, i can reproduce theese results, and have done it few times in past. &gt; I'm not against clean code practices, but also, I am habitually doubtful. That we can agree upon. If anybody is using patterns and practices non-critically and wihtout understanding due to what resons and problems they were created (or - defined is a better word), he is a fool. And iam not actually speaking about reading things and using them, or moving to the next new technology, but about thinkig (experimenting) about how people and peoples brains reasons about code. From that knowledge, you try to structure, name and write code, which is easier to understand. Then, it frees people's mental capacity to solve important problems and create less bugs. Oh, and i didnt say that i use every pattern, best practice and technology i come upon. &gt; It's not clear what you mean by this Well, insulting without arguments is certaily low :) i didnt say that everything which is posted on reddit is a True Universe Truth Of Everything. 
That seems like a major annoyance and the worst of both methods combined into one with some extra complexity. I'm all for simple rules like this that can improve your codebase, but you can't be dogmatic about it. If there are cases where default exports are better or integrate with some system or tooling, just use them.
oh god thank you so much. simply changed my css to .sidebarActive &gt; a and all is well now. Thank you once again
&gt; I was against statement "cognitive load has an overestimated impact, you should focus (non trivial time) solely on things, which have direct impact on revenue". I don't believe anyone ever actually said anything even resembling this. . &gt; Moreover, i can reproduce theese results, and have done it few times in past. When I see that in a well controlled research setting, I'll be a lot more interested. . &gt; Can ve agree at least upon this? I don't agree on anything without evidence. . &gt; Well, insulting without arguments is certaily low :) That's nice. I didn't insult.
Just and idea and I didn't check the syntax - debug it and learn something! 
$("world.default") is trying to select a class ".world.default", if I'm not mistaken 
Never used cheerio and honestly been a while since using jquery, so sorry if I'm wrong. I see your \`cheerio.load\` does not actually "select" an html element. So how is it supposed to know: \`$('.world.default')\`? Can't perform the \`each\` method on an unknown element
You need to pass an HTML document into cheerio.load.
The reason would be lazyitis. Anyway 99% of the NPM modules have export defaults. It will be a while before this New Years Resolution takes effect. 
I almost exclusively use name exports because of auto-import. That and consistent naming save a lot of effort.
Probably tjey.meant to do `cheerio.load(body);`
it's long past time to get rid of jquery, friend
it's so far past time to get rid of libraries like cheerio and jquery [... document.querySelectorAll('.world.default')].map(item =&gt;
Unfortunately, you've chosen a blog host that wants to charge us to read your article
&gt; I don’t understand You should have that printed on your t-shirt
Post of the year
I just saw a presentation today about writing readable and understandable code and one part of the presentation that stood out to me was that at the end of the day your users are more important than how perfect your code is. You can write the most elegant code but if no one is using it then it doesn't really matter. That isn't an excuse for writing hard-to-understand code though. It does serve as a reminder that perfect can be the enemy of good. 
Export default is great to test exported method A that rely on another B exported method. If they are only exported individually, you may have trouble spying on B when testing A since module.B will not be the same instance of B that A uses. 
On the fence about this. There are more important concerns in a project, but for a developer, who's sole purpose is to to maintain the code, it's all part of the job, and the more the developer cares, the better. 
I will continue with the space environment, so if you are interested subscribe to my channel :3
No fizz buzz is testing algorithm design. Given a very small set of clear requirements how can you solve this. Fizz buzz is no longer really used though because it’s so well known and there a dozen different solutions you could memorise and implement. I’ve never done a technical interview and been asked to do fizz buzz
&gt; Javascript object literals are struct like software entities. In what way? I would say they are not like structs in any way.
Hi /u/crushialk9, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Hi /u/TN_on_wheels, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
It's seems to be a json with the content ("ct":) on base64. 
Hi /u/TN_on_wheels, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/fedesangueblu, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
This is such a dumb take... they didn't just disagree with her. They posted awful, transphobic stuff. And she didn't just get it from people in the company but from commenters on her React presentations. And if black women were severely historically overrepresented in power positions, of course there wouldn't be backlash to pointing it out. Context matters. Pointing out that the dominant group is overrepresented is not racism man.
&gt; Back in my day - and I'm only in my 30s - the idea I was brought up with was that you simply treated people as individuals. And yet, somehow this attitude didn't correct the fact that people of color are disproportionately shut out of powerful positions. Wonder why.
Hi /u/Fried---Chicken, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
How would I be able to decode it and be able to read it? 
Who were you, DenverCoder9? *What did you see?!*
Just dealt with this at work. Whatever system you're using to send notifications to will output a token or URL you use to send the notification to. You'll typically get this back from the client and store it somehow, then send the notification when need be
Hi /u/avxkim, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
[removed]
&gt; they didn't just disagree with her. They posted awful, transphobic stuff. Oh no, you mean there are people on the internet who are mean? SOMEONE CALL THE POLICE! &gt; And she didn't just get it from people in the company but from commenters on her React presentations. That's sort of my point. This has nothing to do with facebook. &gt; if black women were severely historically overrepresented in power positions, of course there wouldn't be backlash to pointing it out. Sorry, I've just forgotten, can you remind me -- what's it called when we treat one race differently from another race, based on things that *other people* besides the individual in question have done? I think it's called like... racism, or something like that. &gt; Pointing out that the dominant group is overrepresented is not racism So if I'm a member of the "dominant group" (which is arguable on its own), then anyone's allowed to treat me any way they like. Signs on storefronts that say "no white people" or "asians not allowed" are fine, because those are the "dominant groups"? It can't be racism if it's against a race that's "dominant", right? And presumably if I were a white person, and I went to China, I could do just about anything I wanted there on account of the Chinese are "dominant" in China, eh? I can call them any sort of thing I want because you "can't be racist against the """dominant""" group". IMAGINE being this hypocritical. 
&gt; Given that there's a wiktionary page for the term, I would say it's a valid word in English Wiktionary isn't really an authoritative source - it's a crowdsourced "dictionary", so all it means is that someone used the term in a book somewhere and someone on Wiktionary cited it. If you look in a reputable dictionary I don't think you'll find [any that list "pedanticness" as a word](https://www.google.com/search?q="pedanticness") - they all suggest either "pedantry" or "pedanticism" or both.
Hi /u/Joezillaaaaa, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/tessellator_space, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
Worse: authors on medium choose which articles are members only, because they get a percentage of the income from views by paying members. In other words the author knows you’ll be charged to read it. To be fair it’s not the authors’ fault; they have a right to monetize their work. The problem is medium’s monetization model, promoting high volume low quality work just to get views. It’s the reason I no longer read anything on medium. If I see that host I will just move on.
This is nice.
the plot thickens!
Hi /u/crushialk9, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/_He1senberg, this post has been removed. Memes and other low-effort content aren't allowed here. You might try in /r/ProgrammerHumor. It's also wrong. I can name around 10 projects off the top of my head from 2009. 
You're asking craft people to not discuss and debate the finer points of their craft. As an analogy think of people who do beautiful woodwork or interiors. If you take any one small habit or approach they use and isolate it, it would be easy to make fun of it as trivial. In fact a few of those practices might actually be trivial. But what makes a great woodworker is not something big we can point to. It's thousands of tiny habits and learned tricks that add up. An attention to detail and a refusal to to be happy with something that doesn't sit right. Yes it's sometimes pedantic and sometimes too perfectionist and for sure if you work for a business you need to make compromises. But if all we ever did is focus on shipping product and never take time out to discuss craft and try to share and build up the thousands of little tricks and approaches that a master carpenter or programmer uses, then it would just be yet another shitty assembly line job pumping out identical products. I do 99% of this kind of reading and learning on my own free time. Because this is far more than a job to me. It's a craft I love and want to always get better at. One tiny approach at a time.
Thank you, I got to the prettier part done but when it comes down to decoding the base64 it gives me this: "Salted\_\_hjg7B5R4LC!n\~8JXEin4fv%\~u zC(\~CL&lt;TBN|lօ5acFN{\~{v/RuJj#\_J\~lF\\ ܠo:cјKe,2C(E&amp;Х\]N\\\*r","
But can't you set opacity to 0, then remove display none, do your measurements, and then start your animation or whatever you need the measurement for?
But why not just use python and AJAX lol
The intention of this function is that it’s a helper function that can be used inside other functions. Since it’s not the JS adding the display none, and since I can’t guarantee that the display none is added by a class that only hides things, I need to know what to set the display to other than none. 
Wow. I feel like you just nailed about 80% of the devs out there. So many people waisting money (and more importantly time) on this superfluous bullshit. This shit makes me cringe.
No kidding a similar idea popped into my head at work today out of absolutely nowhere... So weird. (But I was just thinking of animating text left to right like a moving marquee - you took it so much farther and it's beautiful.)
Like my pp
You rock!!!!!! I love using jrnl but I’ve been wanting to have a desktop app as well. I have some ideas I would love to see added. If i code some features are you up for pull request? 
Sorry for the slow reply. Essentially, someone on my team had a hidden element. He asked me for a way to get the height of the element before he displays it. So I did the thing that you often see when you google this problem. I cloned it, set the clone to position absolute, display block, scooted it off the page with negative top and left values, injected it to the page, read the height and width, removed it from the page, and then returned the size to whatever function called my helper function for use there. That worked just fine for my coworker. But it got me thinking that if the element in question isn’t display block (when it’s not being hidden I mean) then setting it to block for testing height and width could return very very incorrect values. My goal was to write a independent function that I could give to me team that was context agnostic and reliably returned the height and width of a hidden element. Because the element isn’t necessarily hidden with a class like .hidden I can’t just remove the class. Because I was hoping to make a generic helper function I also can’t say for certain what the context of the element and how it will be displayed when it’s visible. So my thought was if I could somehow get the next display value in the cascade of styles, then that would be a good way to go about it. Does that make sense?
So it's not base64. Maybe is hashed, so it can't be decoded... 
You really don't want that. But it's what you're going to get. Enjoy your death via inflammation.
Former English and [ESL](https://en.wikipedia.org/wiki/English_as_a_second_or_foreign_language) teacher, married to someone with a doctorate in linguistics and a research focus on comparative grammar.
I do this. It's one of the few things that I enjoy doing in ES6. you should look into [ramdajs](https://ramdajs.com/docs/) as a utility library to help you manipulate your data output
Yea, very convoluted. Just use flask.
I loves me some Flask api projects 
I suppose this is gui programming so for less experienced/ casual users? Not really sure who it is for. If a junior dev brought something like this for review I would tell him to start over -- its way overenginnered to accomplish the very simple task of making a server perform a scripted action via an ajax request. Should not need to import extra libs much beyond the web server for that.
Replacing the global Date object with your custom-made object is worse than monkey patching.
Not in the context of unit testing.
The problem is that dictionaries are descriptive, not prescriptive, and unless the environment dictates formal speech, it doesn't really matter if "pedanticness" is in the dictionary. If it conveys the meaning it's meant to in a clear way, it's fine.
Agreed. Which is why I think less code is better. And why I like helper libraries: they help me write less code.
I’m curious who all these people are exporting more than one thing from a file. If it’s a class file, export the class. If it’s a function, one function per file keeps the files isolated in focus. Stitch them together later if you need more than one. If it’s a bag of constants, sure, export everything as named, but then there’s no default export anyway.
- unsubstantiated - what? - “editor doesn’t implement a tool properly” doesn’t mean one shouldn’t use a language feature
Glad you dig it! The marquee idea is a good one. Surprisingly I didn't try it. I guess I got caught up in the more exotic characters.
Really cool. Can you talk more about how you did it?
I'm deaf here. Know what I'm seeing here? A silent 12 minute youtube video of stars slowly going by with absolutely no change. This is the Javascript subreddit; so by logic, has to do with coding. So where's the code? Where's the live demo? A video doesn't count as a live demo, it's just a recording that could've been made by something else other than Javascript. A video, especially uncaptioned, is absolutely useless to me. Especially when it's just the exact same for the entire duration of the video showing absolutely nothing else. Sorry if I'm coming across as frustrated (which I definitely am). I'm sure you had positive intentions. &amp;#x200B;
Why not clone both the element and its applicable parents and stick them in an absolute position iframe with a negative offset? Then just wait for the iframe's load event before getting your values...
Very nice! What are the mobile controls? At some point I managed to move forward. How will you expand on this?
Are you suggesting I make an iframe and somehow clone the entire JavaScript file into the iframe? In any case the page load event is not necessarily the event that triggers the element I want the size of to become visible - it’s normally some user interaction. Plus I have no way to guarantee how many ancestors are effecting the styles of any given element, so I would essentially have to clone the entire ancestor tree all the way back to the body. 
tl;dr - Even the seemingly trivial can sometimes kill projects - we lost spent several developer-weeks due to a fixation with one particular export approach. To a fairly large extent I agree with you - I've seen teams argue for weeks about the most trivial of things, like tabs vs spaces. But there are times when the seemingly trivial - including module exports - do becomes important. I was working on a React project a couple of years ago where one of the devs decided that it was a good idea to structure the components in a particular nested way. Each component was default exported, and we'd then have an index.js at each folder level that re-exported every component in that folder. He liked it because he thought it made the imports look neater. Most of us didn't care too much so we started down this route and that was fine for weeks. But then we started getting strange errors around component failing to import - often ones that we'd gone nowhere near and that had been importing fine up until then. After probably days of investigation, we found that the es6 import logic didn't seem to handle nested imports particularly well - there was a lot of index.js's importing other index.js's going on. At some point, and for some reason, order of import and/or export became important. So we put the failing component at the top of the file and moved on. A couple of weeks later, it happened again. This time it took a bit longer to resolve the import order challenge and we started to question the approach. But we were some way into the project and the guy that cared really cared. So we soldiered on. Then other teams started getting the same issues and days would go by as someone juggled their imports around. Then more days would go by as we merged back into master and the changes clashed with other teams' rejigged imports. By the time we convinced the guy that this was really becoming a problem and we needed to change (I think when one of his own changes took about a week longer than it should have - he'd been convinced that it was just everyone else being incompetent until that point), we'd probably lost upwards of 2 man months of time across the various teams working on it.
Admittedly I've never found myself needing that type of information before so I'm just speculating on what might work. But I'd traverse the parents until you find the first one with display: block. Then get the computed style for each of its positional/offset/dimension properties. Now clone the parent into an iframe and apply those computed styles to it. Now do clonedTargetElement.style.removeProperty('display'), then do getComputedValue of your cloned target element. Seems quite tedious but this isn't exactly a problem most of us ever run into...
Here you go: https://www.reddit.com/r/expressjs+mongodb+node+reactjs/
Thanks!
How is this related to r/JavaScript? r/github, r/rant, or r/angry seems more appropriate. Maybe r/design or r/userexperience. I think your analogy is incorrect. It's not _your_ room that is altered, it's _theirs_. Have you seen their product backlog? Have you seen the feature requests they received? Can you read minds? I'm the kind of pessimist to believe that businesses generally don't invest in things they won't profit from, so I'm sure they have a reason. If this troubles you so badly, you could build a [Refined GitHub](https://github.com/sindresorhus/refined-github)-esque browser plugin that 'fixes' it for you.
There is no talking. Just music 
&amp;#x200B;
Normally I like to rip on Microsoft, but to me the new dashboard is much more functional. I never used the old dashboard. I felt like it was a mishmash of shit and poorly utilized space. This new one puts the two things I care about most front and center, in logical locations: the list of my repositories, and the activity on projects I care about. I think it's pretty good. 
[https://imgur.com/UFWggX3](https://imgur.com/UFWggX3)
&gt; I’ve never seen a real commercial project fail because of the wrong fucking module export convention. LOL
Why…
You didn’t declare the variables or close the statement. 
Nice work! Impressive
What?
&gt; I don't believe anyone ever actually said anything even resembling this. u/yojimbo_beta said: "if you are spending nontrivial time on this rather than actual revenue generating work you are probably wasting your employer’s money. Get the fuck out of here." Its also funny you use faith instead if evidence, if it supports your side...
You just tap in the direction you want to go in front of the car. 
let mongodb = “reddit.com/r/mongodb; let expressjs = “reddit.com/r/expressjs”; let reactjs = “reddit.com/r/reactjs”; let node = “reddit.com/r/node”; console.log(“Here you go: r/“+mongodb+expressjs+reactjs+node+”/“);
sell me your idea over something like JSX. performance, list rendering, etc. how do you tackle that?
What are you on about mate?
Shape which can hold data and behaviors. That's a struct.
It is bad. If there is better way to manage your code and you still opt for less better way, the whole practice is bad.
it's not replacing per se. It's just wrapping it with a simple proxy. Not the same thing.
Nice! What is still on your to do list? I see this is only version 0.2.
This
Just a funny question. Why js needs more frameworks more libraries?
Web development is like any other development apart from the link between the client and the server. However, this is mostly abstracted to function or method calls these days so doesn't present a huge barrier for newcomers. As it is client server based you have two places you can program logic and the choice would vary depending on application needs. The server is more secure for instance but the client has no network overhead. Other than these things you can apply all of the system design and creation principles and all of the logical problem solving skills from any other language still apply.
1. Networking, client/server model 2. The "stateless" web 3. Async/Concurrency vs Parallelism 
So you think that productivity of developers is never at fault? You want to suggest that each time you saw something fail, you as a developer, with clear consciousness could say, that developers of that company did perfect job? Nothing impede their ability to deliver what they had to, ever? It's like you suggest that developers aren't connected to the business problems. Like half the things you named have direct link to the everyday developer. Sure export syntax is just a detail. But code as a whole is bunch of details. Sometimes we are trying to iron one at the time. Sure it won't impact your cognitive load all that much, if that's just one detail, but it's never just one detail, is it? It's all bunch of them.
It is bad. If there is better way to manage your code and you still opt for less better way, the whole practice is bad. It's not just way of thinking. Inheritance ruins architecture. It ends up with god objects which exposes too much api. And you still need to use composition to "inherit" from multiple classes. Inheritance violates open close of solid. It can only be used where extention cases are definitive (you know exactly what and how much times you gonna extend) and limited to very few methods. And while that might have been true for software which was shipped as a finished product (CDs), that's no longer true in dynamic and ever changing environment of the web.
Thanks , both of you . Problem solved
Extjs ?
Don't understand what use cases this library tries to solve. And why you wrapping everything in try/catch? - https://github.com/EOussama/temmejs/blob/6c35c8b65aabc5c4f9d48a7d47da92d7c60c2631/src/modules/validator.ts#L114-L117 - https://github.com/EOussama/temmejs/blob/6c35c8b65aabc5c4f9d48a7d47da92d7c60c2631/src/modules/validator.ts#L147-L150 - https://github.com/EOussama/temmejs/blob/6c35c8b65aabc5c4f9d48a7d47da92d7c60c2631/src/modules/validator.ts#L207-L210
I did know about the webpack ignore plugin. Thank you, sir.
I finally finished my personal website using Three.js :-) The 3D model is inspired by the cover of Douglas Hofstadters book Gödel, Escher, Bach: [www.aidenbuis.com](https://www.aidenbuis.com)
There is no _fundamental_ difference. The principles and the thinking is the same. This doesn't mean there aren't _particularities_, of course, but those are derived from the particular problems you try to solve. "Web development" is only defined by what the name implies: that it is meant to work on this particular platform, "the web". This, in turn, only means there are a number of generic restrictions, such as having a particular client-server structure, based _mainly_ -but not exclusively- on a connection model of short lived connections, with some selected protocols, and with clients having to run inside these "sort of generic virtual environments" -browsers- where you have particular restrictions/unknowns on resources available. As you see, those are fairly particular details that only mean adding _certain concerns_ but they do not imply any **fundamental** difference to how you would approach development on other platforms.
I think it's a lot safer to rely on try-catch blocks to catch errors/exceptions. The library is mainly intended for converting a javascript object into an HTML tree. Having an entire section of your website created by this library can have you take advantage of the JSON conversion that obviously eases dom transfer via HTTP and of course, local storage.
1. wrong sub, has nothing to do with js 2. new dashboard is an improvement in terms of functionality and easy access to most used things 3. language
Thanks for your kind words! Next? Maybe connecting the build part with the game part so one could define a new race track and then race on it. Maybe some basic collisions. Also I hear that the controls are not working correctly on all devices/systems. That is quite hard to do, unless I buy every other laptop, tablet, desktop... So if you tell me where the mouse/touch controls misbehave, I would appreciate it. As for the current version number, it is just a number. The milestone realeases will be 1.000 and 3.142 of course ;-) 
Dude I this is fun!
Not my project :) just figured it out while messing around in the demo 
Beautiful work! And yay for ❤️ GEB ❤️!
Making steady progress towards the v2.0.0 release of **Video Hub App**: [https://github.com/whyboris/Video-Hub-App](https://github.com/whyboris/Video-Hub-App) Merged 5 PRs with my collaborator, including \- *sorting options* (sort by file size or duration - ascending or descending) \- *star rating* \- *manual tags 🎉* &amp;#x200B;
I like that you have an animation showing how fast the document generation is, but I'd love to see a link to an example of the documentation generated with the tool ❤️
&gt; I think it's a lot safer to rely on try-catch blocks to catch errors/exceptions. But what is the point of wrapping everything in try-catch blocks when you just rethrow exceptions? &gt; Having an entire section of your website created by this library can have you take advantage of the JSON conversion that obviously eases dom transfer via HTTP and of course, local storage. You can solve this use cases with a much simpler implementation. You can just throw away 90% of the code that you've written in this library.
There is a Help link that explains controls. I should probably make it more intuitive.
Actually most of the code in the library tackles a different aspect than simply converting JSON into HTML.
why not just not access Date directly in your code and instead use always a wrapper that you can overload or spy on during testing?
Thank you!
Yeah, well now I get it. The help was a bit small, but now I see it. Maybe an on screen gas pedal and break would help. The steering is perfect. Games like Real Racing do it really well on mobile. If you have this in a more mature state, please reach out to me erik'at'poki'dot'com, maybe we could discuss a license!
The tool is being built to support running third party libraries in multiple programming languages and with third party APIs. Wayscript can interconnect code being written in various languages from multiple server frameworks. Devs are trying to get their core products working and don’t necessarily want to deal with having to integrate all of these types of “side optimizations”. We are trying to make those tasks easy to build but also easy to patch into your existing code base. You can get some pretty neat use cases running quickly. For example, you can patch the data from a signup form submission and automate writing the data to google sheets for those on your team who aren’t technical, recording analytics, and sending welcome emails. I appreciate the feedback! 
If you mean client-side web development, then there are no "foundational principles" IMO. There are just web browsers, and you write for them, however they happen to work this year :P
At least for mobile, preventing highlights of text. 
How/why is this better than other client-side DOM rendering libraries? Or maybe I’m missing the problem you are trying to solve. Can you elaborate?
This is not something like JQuery or any other web component related library. It just allows you to render an HTML tree out of a javascript object, with some other features to speed up the process ([inheritance](https://github.com/EOussama/temmejs/wiki/Temme-inheritance)).
I am still working on Clockuvo, time managment server like desk-time to help Project Managers to track working time of employers. &amp;#x200B; Github: [https://github.com/nikolapavlovic994/Clockuvo](https://github.com/nikolapavlovic994/Clockuvo) &amp;#x200B;
♥️
I released a new version of my automatic protothread project which has Tail Call Optimization! &amp;#x200B; [https://github.com/Floofies/hertzscript-specification](https://github.com/Floofies/hertzscript-specification) [https://github.com/Floofies/hertzscript-compiler](https://github.com/Floofies/hertzscript-compiler) [https://github.com/Floofies/hertzscript-dispatcher](https://github.com/Floofies/hertzscript-dispatcher)
Two words: type safety. 
Will look into it - thanks!
Np very impressive. I've been mentally modeling how to do something like this for a top down 2d game. I intended to connect 4 rectangles as the wheels, then add a large drag coefficient to any velocity not in line with the long side of the rectangle. This would simulate the wheel rolling forwards and backwards, while also allowing some lateral sliding. Then I would see if I could control the vehicle by modifying the angles of the two "front" wheels. Any thoughts or suggestions come to mind from your experience with this? 
You might want to consider getting rid of the "Pi." It was disappointing to me that the link was not to a driving sim that uses a Raspberry Pi. I thought I was going to see some sick car sim build. Cool project, but the gap between "in-browser big-polygon driver" and "steering wheel and brakes with huge monitors powered by raspberry pi(s)" is too big not to affect my reception of the project. :/
Ok. But there are lots of different ways to generate HTML, and there are even existing libraries that allow you to generate HTML using JavaScript. I’m just genuinely asking what is the benefit of using this library? 
Kyle, thanks for your feedback. Here is a bit of background... In 2011 I was learning Python and came up with an online scientific calculator which went live as [calculatorpi.com](https://calculatorpi.com) in 2011. Raspberry Pi was not a (well known) thing at that time. So you can see why Simulator Pi. Plus the ever increasing difficultly to find an unoccupied domain name. I totally see your point though. Hm.
But does type safety actually result in less bugs or more maintainable code? There is no factual evidence that it does. It's just cargo culting.
I created a method registry system for ReactJS. I've already been told by the React sub that it's anti-React. Let's hope it catches on: [https://github.com/dexygen/withMethods](https://github.com/dexygen/withMethods)
Who is author of music! I like!
Because inner libraries don't care about your custom date object
Hey, thanks a lot! I'm definitely open for PRs! I'm not planning to add too many features though as I really want to keep this app as clean and simple as possible. Some things like formatting or images are intentionally not part of it. But if you have ideas, I'd love to hear them!
Javascript objects (what's this library operates on) can easily be stringified into JSON, that opens a lot of chances to sent entire HTML documents via HTTP requests and have this library parse them from the other end if needed, that's one way to look at it.
I got inspired by a phone background so I wrote a little generator: [https://tomgb.github.io/tile-gen/](https://tomgb.github.io/tile-gen/) It can be used on the web and via CLI.
Is there a scenario where doing that (sending all of that JSON with DOM info) is better then just having the logic to render on the client (a la Vue, JSX, handlebars, etc)? 
Uh there’s nothing here
You ARE leaving to the library to do the logic needed to render the HTML, after all, you're only sending a JSON that represents the blueprint of the HTML to be generated.
Don’t call `decrementNumber` when you pass it to `addEventListener`. 
Just pass the method without any arguments and don't call it (you can't), so... .addEventListener('click', decrementNumber)
I created an organization chart viewer/builder using Vue.JS and Nuxt.JS. It runs as a static website: no install or web server needed. Just copy to any location and you can use it right away! [https://github.com/Hoogkamer/vue-org-chart](https://github.com/Hoogkamer/vue-org-chart)
change it to {minus\[i\].addEventListener('click', decrementNumber);} //remove the (e) You don't specify e when assigning the event when using a non anonymous function. you would if you did {minus\[i\].addEventListener('click', decrementNumber(function(e){ ..... });} &amp;#x200B; The onclick even will pass in the event and you can reference is in your: function decrementNumber(e) //as e &amp;#x200B;
I'm just as confused as you. No idea why this shit is getting *any* upvotes.
Honestly if you are familiar with Haskell and Lisp, then JavaScript is going to feel like sculpting wet shit with your feet. I would suggest looking into transpiling to JavaScript instead. GHCJS + Miso/reflex works very well, there is also PureScript, or if you are willing to sacrifice language quality for something more mainstream consider TypeScript. 
Thx, works now. What I'm attempting to wrap my head around (that is different from PHP) is this code... function decrementNumber(e){ console.log(e); } How/when is e defined/assigned? Upon the calling of the function? And from where does it get its definition/assignment?
Back in the day we had this thing called `mod_cgi` for Apache...
I love typescript . what is your perspective? &amp;#x200B;
2d is, in a way, more complicated than 3d because you have to translate the Newtonian mechanics from a 3d system to a 2d screen yourself. On the other hand, there is a theory on 2d representation of a vehicle that could be used... I just randomly found this link but you will find it in any textbook on vehicle dynamics: http://code.eng.buffalo.edu/dat/sites/model/bicycle.html Good luck!
That's Java, not JavaScript. Try asking on /r/java
I get the confusion. Here, the argument `e` (event) is being passed automatically just by passing the function (as a variable) as the second argument to `addEventListener` ('click' being the first one). You could also just inline the function like so: [...].addEventListener('click', e =&gt; { console.log(e.target) })
-1 points lol
Hey, you'd probably get more help over here: /r/javahelp You're programming in Java, and this is the JavaScript subreddit. They are different languages. But at first glance I see you have a semicolon after (String[] args). A semicolon ends a statement, and "public static void main (String[] args) is the beginning of a function, which has statements contained within the { }. The semicolon basically separates them so the compiler doesn't know they are related in your code. It's expecting a { but sees a ;. So if you remove it your code may work.
Typescript is the best. Fuck the haters.
Function arguments take scope priority
lol
Care to elaborate?
`bob` inside the context of the `printIt` function refers to the function parameter, not the `bob` variable defined in the outer scope.
Okay thanks, but how even still how did bob ever get assigned charlie?
[removed]
In the function itself you dont use the parameters so when you call the function it wont matter what you set. It will still print out Charlies.
So the code thinks that the parameters are the things that are printed out. Type Gosho and Pesho and the output will be: Gosho Pesho Charlie. 
You're passing `alice` (which has been assigned the value of `charlie`) as the first parameter to the function. So, `bob` inside `printIt` is a reference to `alice` in the outer scope.
JSON file hosting as a CDN. https://app.dropconfig.com
What you pass in to the function are alice and charlie from the outer scope. They are equivalent in that both variables are set to 'charlie' when you pass them in. Inside the function it doesn't matter what you refer to them as, what matters is what was passed in for those variables. Then you print the charlie var which has no definition inside the function so the outer scope is checked, charlie is found and is of course set to 'charlie'. Use better variable names and I'm sure you'll understand
The function parameter names you choose (bob, alice) have the same names as the variables you declared above, and their values will be overridden with whatever you call the function with. As for Charlie it takes its value from the above declared var. if you want to use the values from the declaration code remove the parameters from the function declaration and just call it without passing anything
1. All three `console.log`(s) are printed with non `undefined` values because all three variables are accessible within the executing function's scope. 2. No, the second name should not be 'Doug' &amp;#x200B; Why? Because instead of referencing the outer scope of the function and looking for 'bob' within its closure, it finds it within its local scope. `bob` on line 4 is a completely different reference to `bob` on line 14. In this case bob is actually referencing the functions parameter variable 'bob' and the value coming from the first argument passed in, which in this case . Local scope will always overshadow outer/closure. &amp;#x200B; The following code produces the same behavior as the current behavior. Hopefully it clears things up a bit. &amp;#x200B; `var alice = 'alice';` `var bob = 'bob';` `var charlie = 'charlie';` &amp;#x200B; `function printIt() {` `console.log(arguments[1])` `console.log(arguments[0])` `console.log(charlie);` `}` &amp;#x200B; printIt(alice, charlie); &amp;#x200B; 
No phone control support :( but it does run and looks pretty cool!
Thanks! Yep sadly the phones are not considered for now
Sorry, what I said wasn’t accurate. I should have been asking... “Why would you want to send all of that extra JSON over the wire for every request?” I’m still not sure I understand what problem that exists for today’s developers that this library is solving. Maybe explain the current way people do things (with maybe Vue or React) and how this library is either superior or beneficial? 
&gt; &gt; I don't believe anyone ever actually said anything even resembling this. &gt; &gt; u/yojimbo_beta said: Oh, I see, you're trying to hold me responsible for something someone else said, then you're surprised I wasn't aware of it. Well good luck with that, slugger
Should you be passing i into the decrement function when you are setting up the click event?
Again, this is nothing like Vue, React or Angular, those are obviously much more superior because they don't do just one thing but also tackle a lot of other aspects.
I think static types have benefits, but that it can be tough to model complex behavior in dynamic languages with static types. I see a lot of potential benefit from a maintenance perspective ("what are the types for this function's arguments, where are they coming from, and how can I use them"). I also think a lot of people spend way too much time trying to get absolute perfect 100% type coverage for an entire app, and twisting themselves into knots trying to get the "correct" type declaration for some specific bit of behavior. In any case, there's been a bunch of requests for Redux Starter Kit to provide better types, preferably by writing it in TS, and some contributors offered to tackle the work.
You're printing nothing If you're printing an object you would System.out.println(r1.length )or whatever. You should download head first java and study it thoroughly and it will help you past the awkward beginner stage. 
Got a couple requests for folks. First, if you're using Redux, please try out Redux Starter Kit and let us know what you think! It's not intended to solve every potential use case, but I do want it to help simplify the most common scenarios for Redux usage. I've got a number of possible improvements in mind that we can consider adding, and I'd also appreciate any suggestions for functionality that you feel should be included. Second, the docs are still a work in progress, and I need to add both a "Usage Guide" and some example apps showing what it looks like to use Redux Starter Kit in practice. Ideally, I'd like to have a couple existing Redux apps that I could use as starting points, and show how to convert them to use Redux Starter Kit. If anyone has some suggestions on specific apps that I could use to demonstrate RSK, please let me know. I'm specifically interested in apps that have: - 3-5 different slice reducers - some complex reducer logic - some painful-looking nested immutable updates (lots of nested object spreads and array maps/slices, etc) - Somewhat complex store setup (middleware, Redux DevTools extension, maybe another enhancer or something)
It looks like it might be question on a quiz in a programming class. We probably did some kids home work basically. 
I think I’m doing a bad job at communicating. In many modern web apps, you only send data over the wire. Often, you would then use JavaScript, on the client, to generate HTML and update the DOM. This library’s opinion is that you should instead ALSO send information about the HTML over the wire. Why do you like this approach? Or if this is less about what goes over the wire and is a static HTML “markup” language. Why do you prefer it over something like Markdown? 
I think the problem people may run into here is the use of selectorator which uses stringly-typed paths. Stringly typing things undoes a lot of the benefit of TypeScript. If you change your state shape the compiler won't complain about your selectors and then you're in a situation where you might as well not be using TypeScript. I just tried out the following contrived example: interface State { foo: { bar: { baz: number } } } const mySel = createSelector&lt;State, number&gt;( ['fo.ba.ba'], (ba) =&gt; ba, ) function otherSel(s: State) { return s.fo.ba.ba; } The compiler knows _nothing_ about `ba`. Meanwhile, the compiler refuses to compile `otherSel` (which could be used as an input selector in `reselect`) because `Property 'fo' does not exist on type 'State'`.
Yeah, that came up as a potential issue in the earlier discussions around converting RSK to use TS. I do really like the idea of a shorthand form so that you don't have to keep writing little top-level selectors by hand (like `state =&gt; state.items`). That's why I opted to include Selectorator instead of just Reselect by itself. The other selector-related point of concern on my mind is dealing with components that look up items by ID. If you want this to memoize properly, [it takes some extra definition of "factory functions" to create per-component-instance selectors](https://blog.isquaredsoftware.com/2017/12/idiomatic-redux-using-reselect-selectors/#advanced-optimizations-with-react-redux), which is annoying. The [ReReselect library](https://github.com/toomuchdesign/re-reselect) addresses this by wrapping Reselect and using a larger cache internally. I'm open to suggestions on this topic, which is why the library is still only at 0.4.0 instead of 1.0+. Please feel free to file an issue on the repo for discussion.
addEventListener's second argument is a function that will be invoked when the event happens. If decrementNumber hypothetically returned the integer 3, then in your example, the second argument would be 3.
&gt; I do really like the idea of a shorthand form so that you don't have to keep writing little top-level selectors by hand (like state =&gt; state.items). As far as type safety is concerned I'd say that people who are on the TypeScript train definitely value safety over verbosity. I'd be curious to get your thoughts on my library, [`redux-ts-utils`](https://github.com/knpwrs/redux-ts-utils). The basic idea is type-safe action creators and type-inferred reducers. If the library name sounds familiar it's because you commented on [my issue over at the immer repo](https://github.com/mweststrate/immer/issues/289) (at least, I think that's you... ace**marke**/**marke**rikson 🤔). I've been thinking about writing a blog post and if I accumulate enough stars perhaps submitting to one of the awesome lists on Github.
That also applies to jetbrains. It is not the IDE. The pattern simply allows better tooling
Totally true.! There is a middle ground. If you reuse a data structure in many places then ya totally move it to a type. If the data you are working with only has a few props and little reuse then don’t
What you want to understand is how a callback function works.
You said, "Speaking as someone with decades of experience, I'm with him/her, actually" so i suppose, you actually read what are you reffering to? Sorry for misunderstood you in that case, what was your actual point if not this?
That's nice, but like most of the population, I have carcinogenic-induced ADHD and I'm done with the animations about 1/3 through. If you want to get deep in the weeds on the subject, here's a thread: [https://ux.stackexchange.com/questions/66604/optimal-duration-for-animating-transitions](https://ux.stackexchange.com/questions/66604/optimal-duration-for-animating-transitions)
Found it! As expected a minor typo. On line 60 I'd neglected to close the parentheses around the if statement, which is why the console reported that the next item (open curly brace) was unexpected. My trouble shooting process was to start with your code and paste in mine a few lines/a function at a time until it broke. Then it was easy to find! Thanks for the project and the offer of help in debugging. Happy new year!
&gt; As far as type safety is concerned I'd say that people who are on the TypeScript train definitely value safety over verbosity. Uh... yes. Yes, I've noticed this :) Your lib looks interesting, and there's a lot of overlap with what we've got in RSK atm. I'd be curious to get some comparisons on how the `createAction / createReducer` implementations differ between our libs. It'd be neat if we could collaborate in some way. Also, I was just reminded that `reduceReducers()` is definitely something we should add to RSK. (And yes, that's me - I'm `acemarke` in most places, `markerikson` on Github and SO.)
&gt; Shape which can hold data and behaviors. That's a struct. Oh, you're using essentially the C definition of a struct. In that case, what distinguishes a class from a struct to you in this discussion? The way you mixed both and bemoan JS moving from structs to classes (huh), I presumed by 'struct' you meant a more modern definition like a class with copy-by-value semantics.
If you can't see my point in the several times I've already written it clearly, doing so again won't change anything 
Neat! Does this use Babylon's built-in bullet physics library and the raycast vehicle object? I played around with [something similar](http://www.spacejack.ca/projects/drive/) using three.js and cannon.js. The hard part is achieving more fun/realistic driving physics - even just fun arcade-like driving physics. The raycast vehicle is a tad too simplistic but making improvements on it is a daunting task unless you're very comfortable with math/physics. I stumbled upon [this doc](http://docs.google.com/Doc?docid=0AXVUZ5xw6XpKZGNuZG56a3FfMzU0Z2NyZnF4Zmo&amp;hl=en) while doing some searching and it provides a good overview of what would be involved.
I have a [simple 2D experiment here](https://github.com/spacejack/carphysics2d). If you want a more complete solution take a look at p2.js which is a 2D physics engine with a vehicle object. It can handle collisions as well as the driving physics.
I think you're right. It's like the programming equivalent of r/atetheonion... is there a subreddit for that?
Here's a sneak peek of /r/AteTheOnion using the [top posts](https://np.reddit.com/r/AteTheOnion/top/?sort=top&amp;t=all) of all time! \#1: [Petition to make this the Subreddit Icon.](https://i.redd.it/mb868t95glm11.jpg) | [383 comments](https://np.reddit.com/r/AteTheOnion/comments/9ga660/petition_to_make_this_the_subreddit_icon/) \#2: [A fellow redditor has fallen.](https://i.redd.it/lhejgafh9wc11.jpg) | [346 comments](https://np.reddit.com/r/AteTheOnion/comments/92uzb6/a_fellow_redditor_has_fallen/) \#3: [Damn Liberals and their fake news about the sun! It's ruining the taste of my Onion!](https://i.redd.it/91k849xrrr711.jpg) | [773 comments](https://np.reddit.com/r/AteTheOnion/comments/8vu6cc/damn_liberals_and_their_fake_news_about_the_sun/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
Awesome! Happy New Year to you as well!
I've just finished AWESOME jsdoc theme: [https://github.com/SoftwareBrothers/better-docs](https://github.com/SoftwareBrothers/better-docs). Example documentation here: [https://softwarebrothers.github.io/admin-bro-dev/](https://softwarebrothers.github.io/admin-bro-dev/)
how do i upload new things to pop
Well, that's what my question is for. I'm wondering, why Javascript went towards trying to mimic classes rather than building on structs. Yeah, currently they are like C. I wonder they would have been something like Go's or Rusts implementation of given attention in language development. I suppose the main difference is that struct doesn't allow for inheritance and in a way enforces composition pattern. It also doesn't have to pretend to be something it's ain't. Classes in javascript aren't really classes, regardless what people like /u/codayus think. Another point I'm especially worried is how javascript through T39 is becoming inconsistent mess of a bloatwarish language, and classes seem to be one of the main contributing gateways for that mess. Take for example private fields proposal.
click the burger menu near the chat, then click "PopIt" then "Make your own" &amp;#x200B; From there you can add text, and images, and when ready click "Submit" ( or click "Preview" and click submit after you preview it). &amp;#x200B; After you submit it, you can go back to the home page, click the burge menu, then click "PopIt" then click "Pre-made" and click "My PopIts"
I have no problem helping but did he have to burn all the evidence? Maybe this thread could have helped someone else too. 
&gt; This library’s opinion is that you should instead ALSO send information about the HTML over the wire. Why do you like this approach? This is just another way to store and transfer the DOM as it is, it's not attempting to take the place of any other library. For example, if you don't want to manually write your UI's markup or not give a templating engine control over that, you can just put out a javascript object that describes your HTML tree and preserve it somewhere so as to reuse it whenever you want. For example (and this is something I plan to add); A collection of ready hierarchy objects that describe HTML trees implementing some CSS library classes (bootstrap, Bulma...), it would certainly save a lot of time. It would go somewhere like this: ```js // Where bootstrapCard is the hierarchy object that describes a bootstrap card element. Temme.parse(bootstrapCard, document.body); ``` You could always have your hierarchies stored somewhere in JSON files that can be loaded anytime and parse them again. Basically, do anything that JSON allows you to.
Thanks for the link, it may come useful. I use babylon.js for graphics but for me it is easier to do the physics myself. That way I know what it is doing. But if/when I consider collisions, I may need to employ one of those js libs.
I made this website for global warming information and up-to-date data: [IsEarthStillWarming.com](http://isearthstillwarming.com/). It's made with [react-static](https://github.com/nozzle/react-static) and it fetches climate data from NASA and Scripps Institution of Oceanography. I'm looking for feedback and contributors! Check out the [GitHub](https://github.com/rosslh/isearthstillwarming.com).
That 3D shadow thing is honestly so cool
Wow, very impressive!
Is it done all with a fragment shader or are the stars made from vertices?
holy cow... I didn't realize you can do this... this is going to save me so much time throughout the day... or add to it 
also on a side note are you making a new version of this https://github.com/markerikson/react-redux-links or would you want to suggest one according to all the new updates of npm and react after october 2018 especially. Thanks
I think this comes down to the individual. Sometimes when I can't quite see the full solution, to just start hacking and figure out all the details from there. Once I have a working hack, it's easy to see how the problem is solved and easy to refactor into something that would make Bob Martin cream his little pantaloons.
I've unfortunately had to stop actively maintaining that repo, [because it was too much of a drain on my time and mental health](https://blog.isquaredsoftware.com/2018/06/redux-writing-responsibilities-burnout-and-a-request-for-help/). I _want_ to keep it updated, especially with all the neat stuff going on in the React ecosystem, but I just don't have time to do that _and_ work on all the other stuff I'm doing as a Redux maintainer. I've repeatedly asked [for people from the community to volunteer to help maintain the list](https://github.com/markerikson/react-redux-links/issues/99). A few people have commented and expressed some interest in maybe helping, but nothing has come of it so far. Would really appreciate it if some folks from the community could step up and help with that :)
Heroku has a free option. Only problem is that it’ll go to sleep if inactive after 30 mins
You can execute command line statements with node so you can already do this. Looks like you require the scripts to run on your servers?
What is method registry exactly?
Build a two way data-binding https://stackoverflow.com/questions/13504906/what-is-two-way-binding
Great work, I like it a lot!
Hi. Thanks for your feedback! It's just music and slowly moving starts-like objects. I am sorry for your experience, I definitely could've added `[music]` caption. I will eventually make the code and live demo open, but I want to make it better (and more readable) first. Scene has 10k constantly moving objects in it. I will add 40-50k more objects for the next demo. So I am not sure that every mobile phone or even pc will handle that scene at 60 fps, hence the video. Initial intention was to make relaxation video, so one could watch it and go to sleep. It definitely helps me after long 8-14 hour workday. Hope I made you feel less frustrated.
Well, I guess there are folks who like that kind of *shit*. If you don't, then move on, no one forces you to watch it
Sure I will. In the next video I will make the scene more interesting and will also try to explain the thing.
`Ether Oar` by the `The Whole Other` from the free audio library on youtube
Stars are just objects. I've used `DodecahedronGeometry` now, but will mix all kinds of objects in the next demo
Azure has a free tier for hosting web apps as well. I would imagine the other major providers would have something similar (AWS/GCP).
Hi /u/harrison2020, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/OttoCorrected, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/kuroljov, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
Hi /u/Digital-Daddy, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
I think if 3 seconds had to mean something, it would be SLOW. This title is pointless.
ajv and json-schema are the best things that happened after DOM and nodejs.
Digital ocean has a $5 per month option. Linode I've heard, has one two? Both good options.
Built this game mostly in javascript with a bit of nodeJS and php server. 
Awesome. Thanks!
It's a way of placing references to components' methods in a central location, so that components can call one another's methods. Go to the linked github repo and have a quick look at the README that you will land on.
Any linux VPS is an option, I use contabo 5€ package, cpu is not the best but for the price its amazing. 
Very cool! Very fast load too!
A complete raspberry pi computer setup should be less than $50, then just use your home internet with a free or cheap DNNS service. (be warned, your upstream Internet speed might be a lot slower than your downstream is...)
Because imbalance takes time to correct.
Ok, maybe I get it a little more. I don’t know that I would prefer this over client-side templates, but others might. Thanks for hanging in there with me!
I like Amazon Lightsail. They have an 3.50$ per month option.
Any time 😊
what are you trying to test with your first if condition? what do you want to try after the password is equal to daniel123? because the statement you execute after that test succeeded will just evaluate to false as `amount + balance.innerHTML` never be equal to `balance.innerHTML` 
You should get used to using `===` for comparing values. Using a single `=` will only set the value, not compare it. (Also: your code looks horrible, do you have someone capable of mentoring you? Otherwise I'd recommend reading a bunch of tutorials online.)
Thanks! I kinda dislike the slow WebGL exports of the popular game engines such as Unity. That's why I wanted to make something lightweight and web-first.
Vultr has hosting starting at $2.50 per month. Check them out. They’re like a cheaper and faster digital ocean. 
Okay i changed it but it doesnt work...
why is schema validation on mongo not viable? somewhere between the Client and the Storage you have to validate the input otherwise you can get malicious data and maybe even cause ACE. For the main question would be either use existing form validation libraries or write your own switch case construct. 
Try assigning something to balance.innerhtml instead of amount + it.
isnt `==` working too for comparing values? And im just a beginner in javascript. I dont really mind if my code looks horrible if it works.. But thanks for the help!
Schema validation on mongo is viable but mongo doesn’t work well if you have validate schema for 1000 format. Basically each one becomes OR condition. I am looking to perform validation at UI layer. Want to know which framework is best suited. 
Im sorry could you explain it further? I cant follow :(
`==` will compare values, but `===` will also compare type. Try `'0'==0` and `'0'===0' one will result in `true`, and the other in `false` (which one?).
'0'===0 wont work because the first value is a string and the second is a number or something like that :D
Well, you can't assign a value to two other variables, this is not how assignments work. You want to assign a computed value to a variable or in the ui case to a field. something like: `balance.value = balance.value + amount;` I would recommend going into tutorials and or mozilla's developer network (short mdn) which is a reference for every javascript object/API and Html element that is currently supported.
I'm a beginner too, but I think it should be if (password == "daniel123") { balance.innerHTML = amount + balance.innerHTML; } Since you want to assign a new value to balance.innerHTML, balance.innerHTML should be on the LEFT side of the equals sign (assignment operator), not the right. The right side is meant for the value you want to assign. Also, in the future I would recommend putting your HTML+Javascript in a sandbox such as JSFiddle or Codepen to make it easier for people here to debug.
In most programming languages, you'd want whatever you want to change to be on the other side `balance.innerHTML = balance.innerHTML + amount`
wont work would imply that this is an error? 
&gt;balance.innerHTML = amount + balance.innerHTML; I will give it a shot. Thanks so far!
dont do: a+b = c do: c = a+b also try using parseInt() before adding your values
Let me know if it works!
yes
What is parseInt()? I will google it but what does it do?
if your string is a number it will change it to an integer
Hiding the main feature behind a hamburger menu is not very smart. It should stand out. Also the whole process to even begin adding anything to the board takes too much time for it to be engaging. Is the board shared across everyone that visits the website? I swear I saw a board with a couple of gifs, but after a refresh it's empty. Nice idea, but execution needs work.
yet it will work and returns false. You can compare anything with everything in JavaScript. that's why `'0' == 0` and `[] == 0` returns true (and as a quirk `[] == '0' will return false) even though in the first case you compare a `string` with a `number`and in the second case an `array` with a `number` which are totally different types. that is why using `===` is quite important as it will also check the types. 
console.log, console.assert,try..catch and not chaining everything together are your friends. Something in there is "undefined".
Firebase Cloud Functions use nodejs v8. They offer 125k invocations for free! I’m already using them for the same purpose.
Remember to use `parseInt (string, radix)` otherwise values like 'a' will result in a number of 10 (hexadecimal) instead of an parse error.
in that case you should probably validate other wise it uses base 10 by default
[removed]
I'd love to see an example with thunks (typescript)! I could never get redux-thunk to place nicely with typescript so I've been using redux-saga out of spite and it'd be great to not need all of the overhead involved with that.
I still haven't used TS meaningfully yet myself (note that this rewrite for RSK was written by contributors). I've seen issues discussing the complexity of typing thunks, but I haven't run into it yet. I definitely agree that sagas are overkill for most situations, and [recently wrote a Redux FAQ entry on how to choose which async middleware to use](https://redux.js.org/faq/actions#what-async-middleware-should-i-use-how-do-you-decide-between-thunks-sagas-observables-or-something-else). While I don't have a purpose-built example app to show yet, and definitely not one written in TS, a couple months ago [I converted someone else's "Redux is too complicated!" example app to use Redux Starter Kit](https://www.reddit.com/r/reactjs/comments/a0b1sa/frustrated_with_redux_so_i_created_abredux_vs/eagqit6/). I'd suggest looking at the PR that I put together as a general usage example until I can come up with a purpose-written docs page.
I'm quite amazed that you didn't manage to find anything nor get help on stackoverflow for such a rather simple question. Anyway, what you need is a simple check for where the current position (X/Y) is on the box and what the min/max dimensions of the canvas is and then just force the box's position to the min or max if it is about to exceed either. https://jsfiddle.net/0dfs9ynk/ function update() { context.clearRect(0, 0, canvas.width, canvas.height); //clear previously drawn rectangles context.strokeStyle = '#f00'; //set stroke color context.lineWidth = 2; if(mouseX &lt;= 0){ mouseX = 0; } if(mouseY &lt;= 0){ mouseY = 0; } if(mouseX + selectionX &gt;= canvas.width){ mouseX = canvas.width - selectionX; } if(mouseY + selectionY &gt;= canvas.height){ mouseY = canvas.width - selectionY; } context.strokeRect(mouseX, mouseY, selectionX, selectionY); //set selection size requestAnimationFrame(update); }
got it. thats probably the biggest criticism ive seen is that its not very clear how to use it. Ill work on making it more clear. There is only one canvas, yes and its for everyone who visits the site.
javascript is dying out in favor or react and typescript.
Fantastic piece
Remove the time limit or increase the amount of pops before the timeout starts. At least until you have a bigger user base
Create CSS classes: .border-image { border: 1px solid black; } .no-border-image { border: 0px; } Then you'll attach a javascript function to the onClick event of the button. The JS function will getElementById (Google this if you don't know it) for the image and toggle the class from one to the other. Google "javascript change css class".
Do you really need node.js for your portfolio? Because you could make it a static one and host it anywhere for free pretty much [now.sh](https://now.sh), netlify, ghub pages and so on
Where will I input the image url among the command you provided and the show and hide commands?
🤦‍♀️
😂
Google those items and do what you can. Post your code and I'll check back tomorrow morning to see if I can help. Fair enough?
You... Don't know what React is, do you
The image url will be in img tag in the HTML.
I'm guessing it's a confluence of factors, but one is that Java and Go may be more likely to be used in enterprise software, which probably pays a little better. &amp;#x200B; The main thing is probably just that there's a lot more JS devs than Java or Go. More competition, lower prices.
brew uninstall javascript
 if(mouseY + selectionY &gt;= canvas.height){ mouseY = canvas.width - selectionY; } is a copy/paste error. it should be `canvas.height`. in fact, it should be `canvas.clientHeight` and `canvas.clientWidth`. [Here's why](https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html)
Well... you can get paid more if you advertise yourself as a React Developer. Even more if you say "React Native". 
brew uninstall macos
nope. but i can sure as shit tell you it ain't javascript
&gt; The main thing is probably just that there's a lot more JS devs than Java or Go. I'd say it's more of the fact that JS is an incredibly popular second language, if you can do both JS and something else, you are more valuable than someone who can do just one of these. A lot of Java and Go jobs do involve JS/TS, but it doesn't have to reflect in the name of the position.
More developers, typically because it's the first language a junior developer will typically learn. The vast number of juniors writing JS will also lower the salary amount when taking an average.
I'm sorry but I don't think you have learned anything, I quickly wrote a fiddle. Does an example like this make it clear? // Define balance outside of the function. "balance" is not an input field, let us always treat balance as a number and when we increase it, let's write it to the &lt;span id="balance"&gt;&lt;/span&gt; field. var balance = 0; document.getElementById('balance').innerHTML = balance; // When we click on the Submit button, this function will be executed. function money() { // Reading a value from an input field will always be a string. var passwordAsString = document.getElementById('passwordinput').value; // Let us compare the string by reference. if (passwordAsString === 'daniel123') { // As explained earlier, reading a value from an input field will always be a string. var currentAmountAsString = document.getElementById('amountinput').value; // We'd like to add a number to this string, obviously this operation will not work, in order to do so, we will summate two numbers. 1 + 2 = 3 makes sense, 1 + "hi" = ? not so much. var currentAmountAsNumber = parseInt(currentAmountAsString, 10); // This is a safety check. If we did not fill in a number (isNaN means isNotANumber), use 0. if (isNaN(currentAmountAsNumber)) { currentAmountAsNumber = 0; } // Do the summation. balance = balance + currentAmountAsNumber; // Display the new balance in the span. document.getElementById('balance').innerHTML = balance; } } Look at the running example here: https://jsfiddle.net/matvp91/rvbx7zeg/25/ In all honesty, I think you should at least learn the basics at w3schools.com, don't try to run when you can't even walk. - You're assigning a variable as you would do in algebra, but something like `a = b + 1` doesn't make sense in algebra, it does in JS. A single equal sign is the "assignment" operator, and not the "equal" operator. - Study data types, text values are called strings, but we have numbers too. Operators (such as + &amp; -) behave differently according to the data type (and even the position within the expression of a particular variable with a specific data type matters). Goodluck &amp; never give up learning!
Not sure what your use case here is, but would css with an animation duration be a possibility?
Similarly, I can sure as shit tell you the sun rises in the west and sets in the east.
Here is the document: [Google Drive](https://drive.google.com/open?id=1m1W4JMO7zubjPlRoBM9x9V0MBH61oVFy)
do you ever call money() in the HTML or javascript? when does it get called? You're probabaly going to need to show the html as well in this case.. console.log(moneydisplay, balance, amount, password); do these values make sense? is amount a string or a number? write it like this: balance.innerHTML = amount + balance.innerHTML; amount + balance.innerHTML = balance.innerHTML; 
Also, it's not like GoDaddy couldn't easily MITM the headers to what they want. They could just take your CSP headers, modify them to allow their scripts through, and problem solved.
Where is the web audio api, the [Broadcast channel api](https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel), the animation api, the bluetooth api ...? :) \- Alarm API \- Archive API \- Audio Channels API \- Background Tasks \- Battery API \- Beacon \- Bluetooth API \- Bluetooth API (Firefox OS) \- Broadcast Channel API \- Browser API \- CSS Counter Styles \- CSS Font Loading API \- CSSOM \- CSSOM View \- Camera API \- Canvas API \- Channel Messaging API \- Clipboard API \- Console API \- Contacts API \- Credential Management API \- DOM \- DOM (Non-standard) \- DOM Events \- Data Store API \- Device Orientation Events \- Device Storage API \- Directory Upload API \- Download API \- Encoding API \- Encrypted Media Extensions \- Engineering Mode API \- FMRadio API \- Fetch API \- File API \- File System API \- Firefox OS \- Frame Timing API \- Fullscreen API \- Gamepad API \- Geolocation API \- Geometry Interfaces \- HTML DOM \- HTML Drag and Drop API \- HTML Microdata API \- HTML Undo Manager API \- High Resolution Time \- Identity \- Idle API \- Image Capture API \- IndexedDB \- Input Port API \- Inter-App Connection API \- Intersection Observer API \- Kill Switch API \- L10N API \- Long Tasks \- MSISDN Verification API \- Media Capabilities API \- Media Capture and Streams \- Media Session API \- Media Source Extensions \- MediaStream Recording \- Mobile Connection API \- Mobile Messaging API \- Mozilla Payment API \- NFC API \- Navigation Timing \- Network Information API \- Network Stats API P \- Page Visibility API \- Payment Request API \- Performance API \- Performance Timeline API \- Permissions API \- Permissions API (Firefox OS) \- Pointer Events \- Pointer Lock API \- Power Management API \- Presentation API \- Proximity Events \- Push API \- Request Sync API \- Resize Observer API \- Resource Statistics API \- Resource Timing API \- SVG \- Screen Capture API \- Screen Orientation API \- Selection API \- Server Sent Events \- Service Workers API \- Settings API \- Simple Push API \- Social API \- Speaker Manager API \- Storage \- Streams \- System Update API \- TCP Socket API \- TV API \- Time and Clock API \- Touch Events \- UDP Socket API \- URL API \- User Timing API \- Vibration API \- Voicemail API \- Wake Lock API \- Web Activities \- Web Animations \- Web Audio API \- Web Authentication API \- Web Components \- Web Crypto API \- Web MIDI API \- Web Manifest \- Web Notifications \- Web Speech API \- Web Storage API \- Web Telephony API \- Web Workers API \- WebGL \- WebRTC \- WebVR API \- WebVTT \- Websockets API \- WiFi Information API \- WiFi P2P API \- WiFi Tethering API [https://developer.mozilla.org/en-US/docs/Web/API](https://developer.mozilla.org/en-US/docs/Web/API)
Very interesting link, thank you for sharing!
Thank you!
Thanks!
Interesting thought. What makes you such a big fan of ajv and json-schema?
Is there a more simplified way of doing it? From what my class has been shown thus far, the commands aren't quite at this point.
DO 5$ droplet is solid.
not if you are in australia.
You could do it with some creative applications of map and reduce, but a far more straightforward way would be a good old nested `for` loop. Then you just track each number and it's count in an object.
Search for cheap vps.
Look into reduce. I’m on mobile but it would look something like this: whateverArray.reduce(function(previous, current){ If (previous[current]){ previous[current] += 1 } else { previous[current] = 1 } }, {} *this is the initial previous, an object* ) Syntax might be off but that’s the basic idea
It’s not an easy task, but I would do a foreach that maps to an empty object with a key from the first item in the array, then increments the value of that key. The method would then check the next value in the array and see if it matches that key. If it does increment the value again, if it doesn’t create a new key and increment like the first. Might be more elegant to foreach and create the object first with unique values then go again and do a count on each. Kind of a curious problem, I’ll be checking to see what others think.
 &gt; data = [1, 2, 3, 4, 1, 2, 1]; &gt; counts = {}; &gt; data.forEach(d =&gt; counts[d] = (counts[d] || 0) + 1); &gt; console.log(counts);
&gt;\&gt; data = \[1, 2, 3, 4, 1, 2, 1\]; \&gt; counts = {}; \&gt; data.forEach(d =&gt; counts\[d\] = (counts\[d\] || 0) + 1); \&gt; console.log(counts); Perfect.
You have a nested array. As long as it's only two levels deep you can.... &gt; data = [[1,2,3],[1,3,4],[1,4,5]] [ [ 1, 2, 3 ], [ 1, 3, 4 ], [ 1, 4, 5 ] ] &gt; counts = {} {} &gt; data.forEach(arr =&gt; arr.forEach(d =&gt; counts[d] = (counts[d] || 0) + 1)) undefined &gt; counts { '1': 3, '2': 1, '3': 2, '4': 2, '5': 1 } 
Dude, are you really that dumb? React is written in JavaScript
This was from before i realized it was a nested array. See my other answer for that solution.
Yeah I didn’t look at the image either for the nested array. Just wrapping another foreach around it took care of that. Nice solution.
```js items.reduce((sum, item) =&gt; sum + item.length, 0); ```
You should spend some time in Australia and test that theory. 
Kind of a dick comment but it did point out some APIs I was not aware of and will definitely be checking out so...there’s that. 
Try using css classes for how you want it to appear at various sizes that’s how “responsive” is typically done. Then use properties like overflow and word wrapping. After that truncate the string with a .., if needed
Also helps to have a codepen or jsfiddle to work with
Nice job! Looking really pleasing. Will the host of the site storing user typed texts? Just curious. 
I am getting "error during evaluation". Here is what I typed. The part at the top is what gets me that nested array [https://gyazo.com/f5a58dbd6539197f642bb65c5e90529e](https://gyazo.com/f5a58dbd6539197f642bb65c5e90529e)
Look at the projects with the most stars on GitHub and use the keyword "boilerplate." 9/10 times the most reusable code is already part of a popular library. Also, try finding the bits you're rewriting and reusing them yourself. If you can't use it, I certainly can't.
not if you live in antarctica.
react is written in millennial. won't touch that garbage with a 10 foot pole.
Knowing how to write maintainable code has more impact on you and your team's success than just about anything else. Unfortunately, it's not surprising you've had a tough time finding resources as its not emphasized nearly enough in academia/interviews at top tech companies relative to something like optimizing algorithms that deal with large amounts of data. Even at companies like Amazon and Google that are defined by scale, only a small portion of the code written is directly handling data that scales with the product's users, whereas every line of code you write has an impact on the maintainability of the software you're working on. Design patterns are a good place to start. There are lots of resources readily available (just google "javascript design patterns") and each one you learn will be atomic and potentially useful. However, by themselves they won't help you understand when they're needed. Although there's no cut and dry solution to cultivating this instinct, the fact that you "feel like you're doing something very wrong" is more than half the battle. Once you notice what you think might be a problem, here are a few heuristics to get you started: * What are some of the most likely ways the product could change or grow in the future and how much more code would need to be written to account for those? * If a new engineer needed to update part of the code I'm working on sometime in the future, how likely would they be to break things? Would they need to make changes in multiple places to avoid doing so, and if so how would they know they need to do that (failing unit tests, static types, etc.)? * Am I maintaining the same or similar logic in more than one place? Two similar looking blocks of code? Abstract them into a function. Two repositories each with their own copy of a source file? Abstract it into its own repository and depend on it. In the end it's mostly about pattern recognition and that gets easier and easier the more you do it. Once you've spent some time thinking about it, see if you can get feedback from other engineers you work with or in the online community (like you've done in this case). Although the number of technologies you're likely to work with over time (especially in a frontend environment) means you probably won't have time to become an expert on most of them, luckily this instinct will travel with you and probably has an even greater impact on the quality of your engineering decisions when you're working with unfamiliar tools. I really do believe the way you described the problem means it's very likely you're a lot closer to a solution than you might think. Good luck :-)
Looks very clean! If you ever need pan/zoom functionality - this may be (or may be not) handy: https://github.com/anvaka/panzoom
Not sure if you use react or some front end framework, but use one. Creating react components and separating into folders has saved me hundreds of hours. Just put the folder in, import the component, and you’re set. 
I didn't see you setting up the counts array anywhere. You need to do the following before you use it. let counts = {};
Pretty :)! You can integrate it with zazzle, and sell them as background designs. Just a thought.
&gt; Earth's average temperature has risen by 0.34°C. Is it by year? 
 let allCounts = {}; [[18, 17, 10, 8, 18], [4, 5, 1, 16, 12], [18, 11, 8, 12, 16]].map(inner =&gt; { inner.map(number =&gt; { console.log(number, inner); if (number in allCounts) { allCounts[number] += 1; } else { allCounts[number] = 1; } }) });
Now you're just deliberately being stupid. Hint: your latitude does not affect the rotation of the Earth in any way whatsoever. 
Your latitude does not affect the rotation of the Earth in any way whatsoever. What gave you the idea that it would? 
Yup... there are many.
This works. Thanks a lot. What exactly is going on in this part below? (counts\[d\] || 0) + 1
Your latitude does not affect the direction of Earth's rotation in any way whatsoever. What gave you the idea that it would? 
Yah but that's a tard market you're still writing js
everything is west.
`data.flat().reduce((acc, x) =&gt; ({ ...acc, [x]: (acc[x] ||0) + 1 }), {})`
If I'm understanding this correctly... You need a way to have a get request on every route regardless of the page? If so, you can just do app.get('/*', (req, res) =&gt; { ... });
Fantastic! I love it.
Lol- I never said it wasn’t tarded, it’s more of a recommendation to put on your resume.
|| is pretty useful when assigning values. You use it like this: A||B If A is defined, it'll give you A.* If A isn't defined yet, it'll return B. So, in this case, it trys to get the value of counts[d] but if you haven't added d to the keys for counts then it'll return 0. Whatever you get, you should now add one more to it which is where the +1 comes from. * I've never actually tried this (I've only been javascripting for a few months) but I believe that if A=false or 0 that A||B should also return B but I'm not 100% sure. Either way, in this scenario, this shouldn't have any effect on the code.
Well, I'm happy to see this submission has gotten a bunch of upvotes and been sitting at the top of the sub all day. Would be nice to get some more specific feedback from folks on what they think about it. I'm curious whether the interest is more from people who are seeing this for the first time and like the idea of Redux Starter Kit, or people who have seen it already and are just really excited that it's been converted to use TS. :) 
My dude why did you make every item on your list a spoiler? I'm on mobile so I have to tap each one to uncover it but if I miss and tap the background they all cover up again. I read like 4 items on your list before I gave up
Damn, that page loaded quickly
Your desc does make perfect sense, but still does not explain why your coworker wanted this functionality in the first place :)
&gt; I feel like I'm doing something very wrong and programming the same things over and over again. Thats what you need to fix. Writing simple import / exportn functions of something you do time and time again. Need to deep clone an object? Write a function for it, slap it in a file, and upload it to github. Now you have a singular place for all of your projects, that need to deep clone an object. I wouldn’t recommend using one giant library for everything, unless you’re using a bundler that can treeshake appropriately. Otherwise at that point, it’s kinda like bringing in the army when all you needed was to squash a cockroach. 
Ye old jaded developer. Notice how his family ran development business slowly starts to stagnate, unwilling to adapt to the world around him, he slowly morphs into the one he never thought he could relate to - Xerox. /s In all seriousness, if your argument is that the JS world is a mess of Frameworks with a new leader each week, React being one of them, I’d have to lightly agree with you - in 2017. It’s only been a year, but we’ve come a LONG way in terms of stability. People aren’t using React now because it’s “the latest fad”, or “written in millennial” - whatever that means. They’re using it because it makes their lives easier, and it’s better than the alternative. 
Stencil.js, create reusable javascript component that can be used regardless of framework, look stencil.js in udemy! &amp;#x200B; [https://stenciljs.com/](https://stenciljs.com/) &amp;#x200B; not an ad for the company!
This is an amazing reply and is helping me so much. Thank you! I will definitely have to read up on closures. Also, you mentioned a more elegant way to do this besides using a global counter. Can you give a hint as to what that might be. Thanks again! All of this is really appreciated.
it boils down to basic software development principles and your use cases. for a specific environment copy pasting things might be totally ok for example. in other cases you might want versioning and automation. other options are: - host them as separate files to load via &lt;script&gt; - build modules and publish to npm - build modules and publish to internal npm (jfrog artifactory) - use git to pull in packages how you structure your code is totally up to you. people tend to favour modules. so you'd write your code in CommonJS, AMD, ES6 Module syntax... you would then load them with the import / require statement (depending on syntax). note that this only works on NodeJS and NOT in browsers (yet). for frontend use, we need module bundlers like webpack, parcel, rollup, ... which handle module loading. you can read up on object oriented programming. especially in JavaScript this is super simple (because it doesn't have a ton of features). the concepts still apply.
Thanks! I indeed wanted to add a zoom to the selected/searched department. &amp;#x200B;
&gt;not an ad for the company! Thanks u/NobelFraud!! hey, wait a minute...
Hmmmmmmmmmmmmmmm
js software devs are diluted with "jQuery" juniors. so you'll get a wide range of very very different pays.
Do you want to make it html only? 
Imagine having 12 characters. And then there are 13 but the container doesnt have enough space of displaying 13 so whenever there is a 13th letter the font should get smaller. My example up works but its not really good because it works only in one case and not when there are 20 characters or numbers.
Backend development is more valuable.
Would you consider telling mobile users what's this about though? I am not familiar with the acronym.
A lot of Java and Go jobs have nothing to do with frontend web dev, and in the case of Java nothing to do with web dev at all. 
please elaborate
Well, for the most of the 3D shooter games you move your player using your keyboard and look around using your mouse. For mobile devices you need you implement mobile friendly ways to handle such cases since you have no keyboard and no mouse. I've not done this for this demo.
I didn't say there would be a more elegant way. But it -the same way- could be done a bit more elegantly: You could just make it more explicit that you're generating a key. Say... // let connectionCounter = 0; we remove this and instead: function generateKey() { // ... whatever return someKey; } // Then instead of: // let currentValueOfConnectionCounter = connectionCounter; // we'd do: let id = generateKey(); // and we remove this: // connectionCounter++; But still, the logic, that `// ... whatever` inside `getKey` can still be as simple as keeping a counter in the same way we were doing.
Have you heard about "Weapons of mass duplication"? This is how the software industry can be: all of us wrote too many registration features and password strength components and so on. So, we have duplicate features and duplicate functionality but not exactly duplicate flows and processes: that is what makes an app unique and valuable to its users. That being said, there will be things that you can and can not reuse: - entire flows - custom logic not following any standards - custom UI built for the task - ... And the ones you can and should: - standard UI components (e.g. a pie chart visualization, searchable drop-down box...) - standard transformations (parsers for instance) - ... However, most of the second list are already present on GitHub and npm... Especially if they are related to popular frameworks, such as react. So there your best course of action is to use these components, rather than writing your own, and the greatest contribution you can make is to fix their bugs or add new features. So, all-in-all code reusing is: - separate custom logic from abstract - don't expect the former to be reusable - search for existing solutions for the latter - if you don't find, implement your own, and make it an open source project
I am actually trying to use stencil in an existing project. But I don't know how to apply the host's/project's CSS to my component. It host already has a huge CSS file(over 10k lines) so adding it again to the component CSS is not something I want to do. Anybody know how to do this?
Not my experience. Or at least, not for senior devs and atchitects. I guess at junior level js devs are "diluited" with people who do HTML emails, implement WP templates, bits of "designy" stuff (for want of a better term) with jQuery, all that jazz. But for serious development I think the wages are comparable
Well, I can advice an approach called “**program to interfaces but not implementations**”. It may not sound that much convincing at first, but in fact, it’s almost the silver bullet if you do it right. What's more, this is applied almost for all abstraction levels of your project - function, class, module, entire projects. # Idea The idea is quite simple, you need to keep **implementation details** of "entities" (e.g. `TodoItem`) **apart** of code which defines their **integration** into an application's flows (once again - it's not about just `TodoItem` , same applies to that function or module which you want to be reusable as well). # Example Super simple, but, let's say you have this algorithm ("application's flow") in your app which "cooking" boiled eggs, descriptions in brackets below are "implementation details": 1. put a pan on a cooker (take a pan from a cupboard, fill with water, put on a cooker) 2. put eggs (take eggs from a fridge, put in a pan) 3. boil (turn on a cooker, boil for 5 mins) On the **first iteration** it becomes: `prepareThePan();` `addEggs()` `boilFor5mins()` On the **second iteration** it becomes: `prepareAPan(pan);` `add(eggs);` `boil(5*60*1000); // 5 mins` And you can keep iteration this, but not too far, to not **create too many abstractions**. In conclusion, you have all "implementations details of entities" separated and reusable, and "application's flow (scenario)" which uses that entities - also clean and **cheap for change**. # Summary Think about reusing **implementations details of entities** (this is quite easy if you define all abstractions right) as the first step. Reusing "a flow" (set of steps integrating entities together) is way more complex, and sometimes it makes more sense to have duplications between similar flows, instead of overcomplicating and generalizing them. &amp;#x200B; Also, it's quite easy to fall into [ravioli code trap](http://wiki.c2.com/?RavioliCode), so be careful with creating too many "reusable pieces". &amp;#x200B; &amp;#x200B;
You're right, thanks for pointing it out :)
Heh, very interesting. Where do you find your demographic sits? Is it more content authors, or devs? 
ROYGBIV is an acronym for each color of a rainbow. It is an open source game engine that works on your browser and this is a little 3D shooter demo made using this engine. Here's the github page for the engine: [https://github.com/oguzeroglu/ROYGBIV](https://github.com/oguzeroglu/ROYGBIV)
I second the gut-feeling litmus test that has already been shared here. Even early on in learning an unfamiliar framework or working with an inherited project, you'll have these moments of clarity. It's my assertion that this is what most folks mean by "code smell"; it stinks, even if you can't pinpoint why or exactly where the smell is coming from. As far as folder structure: keep it simple, above all else. While one programmer's idea of intuitive is another's idea of a dumpster fire, try not to over think it. You can find some " best" practices out there; they're a great starting point to understand the forethought that goes into organizing your code, but shouldnt be blindly followed without knowing why you're doing it. Ultimately as long as others can look at what you've put together and make reasonable assumptions about the code base and where components live, you're ahead of the curve. As for Udemy/Pluralsight lacking training in this specific subject, you may be missing the forest for the trees--or vice versa, in this case. Look at some of the JS-related videos you found useful, look at the exercise files, and try to understand why they're written the way they are. If you come up short, find some smaller Github repos and do the same thing. Most developers are somewhere on the spectrum of being where you are and having a pattern they'be found useful, so learn from their trial and error! Finally, keep it loose--stay adaptable. If you find yourself on a project where your teammates are naming their files or structuring their functions after an unusual conventional, even if it flies in the face of "your" way of doing things, learn the convention and follow suit so they're not trying to adapt to your personal style. The frustration saved on both sides will be worth it. 
I think libraries, modules, templates and boilerplate repositories are a great ways to get reusable code.
Thanks! But do you know if this is the 'right' way to do it? I'm not even sure if I'm thinking about it correctly
I didn't realize native crypto is a thing, can't wait to make my hash functions not rely on a bunch of JavaScript crypto code
Private npm packages might solve some of your cases. Despite the common things between needs you might also make uniq adoptions for each case you solve. 
The error is at the end of the 2 img tag. I put some s there to show
 onclick="zoom("in")" html attributes end on the first quote, so this is interpreted as onclick="zoom(" which is probably the error you're seeing. Using single quotes instead should fix this onclick="zoom('in')" 
Er, is this for .net, lol, you should mention this is an add on for .net since only a handful javascript devs use it. The majority just use a text editor with syntax highlighting.
Now i got the error: Uncaught TypeError: zoom is not a function Which is on the same spot
I changed the name of the function and it worked! thanks for the help so far!
Or use Number()?
Exactly. If the key does not exist it returns undefined. Adding 1 to undefined will give you a NaN and anything added to NaN yields another NaN. But undefined is also a ["falsy"](https://developer.mozilla.org/en-US/docs/Glossary/Falsy) value so it will behave like false in the || clause. And finally, just like RickCedWhat said, the || operator does short-circuit logic. See [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Logical_OR) 
Oh haha. He had a multilevel menu that and when you clicked on an item it slid from one panel to the next. The sub levels were position absolute and hidden, so their height didn’t effect the height of the menu. He wanted the sub menus height before he displayed it so he could adjust the overall height. 
How do you include a repo from Githib/Gitlab in another project?
I am not talking just about the frontend, node.js can be quite nice for the glue between services (for instance composing other services, like in bffs). Nowadays there are numerous relatively mature tools for doing that using reactor or multi-reactor patterns, but it wasn't the case a while back.
a) Not everything uses (micro)services. b) You're still arguing under the assumption that everything is web dev. It's not. c) There are tons of other "nice for glue code" languages and tools (including Go itself, which you didn't address), including Vert.x which reached stable release a mere couple of years after node.js really started making the news. JavaScript doesn't exactly have a monopoly on event-driven runtimes.
Disable shadow dom if you can. Then use global class names from that file. I played around with stencil before but not with your usecase. Following the spec, you don’t really want styles to penetrate the encapsulation of a web component.
I bet you are one of those people, who hate javascript without understanding it
Possibly because JS "developers" are often completely dependent on libraries, frameworks, and copypasta. You would expect a Java developer (though you might be disappointed) to be able to work without a net. 
oh man that's so generous of you. First of all I would say stay fit and god bless you good health. And yeah sure I will start helping to add articles and do reviews and stuff since my first job which is contract ending by this month I preparing again for interviews and job so I'm already going through a ton of stuff. Thank you so much for the update and whole thing I can't thank you enough
[removed]
Hi /u/grayfoxjls, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Hi /u/AnecD, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Hi /u/Skyrim_suchtiii, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/sallyrutzer, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Hi /u/NowVSFutureBalance, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Skyrim_suchtiii, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Champizard, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Skyrim_suchtiii, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/joshmarthaller, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
How does the array look like? There are different ways depending on how deep we have to go.
[Here's the MDN page on arrays](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)
Hey [**kenman**](https://www.reddit.com/user/kenman)**,** Thanks for the explanation!
Here's a few ways of iterating the array. [https://www.geeksforgeeks.org/ways-iterating-array-javascript/](https://www.geeksforgeeks.org/ways-iterating-array-javascript/) &amp;#x200B; Here's the string search method. [https://www.w3schools.com/jsref/jsref\_search.asp](https://www.w3schools.com/jsref/jsref_search.asp)
 Just with multiple more responses, but only one deeper in an object (will be using in JS file) { "responses" : { "ayy" : "lmao", } }
ヽ༼ ຈل͜ຈ༽ ﾉ Raise ur dongers! ^^Dongers ^^Raised: ^^41912 ^^Check ^^Out ^^/r/AyyLmao2DongerBot ^^For ^^More ^^Info
I love the goal of the project. Excited to see where it goes! Keep up the good work. 
I was in the same position in my current job, as we wanted to optimize reusability. For me the key factor that helped was: Developer experience. As soon an we handled our code the same way we would have handled code libraries. I took on speed. This means: - artifactory (npm) publishing - full fledged documentation - issues on component level - split up code (with the help of common patterns) For sure you need to keep clean code and tests, but this really jumpstarted reusability for us!
If any interest this is towards a new vector field component on d3-x3dom: https://github.com/jamesleesaunders/d3-x3dom
Hi. I tried disabling SD. But no luck. There has to be a way to accomplish this. I'll find it. 
&gt;expect a Java developer (though you might be disappointed) to be able to work without a net. sounds crazy to me. 
Because schema definition and validation is a corner stone of any application - not only for databases, also for validation of api methods arguments. And because JSON-schema (and hyper-schema) and ajv really went far to meet developers expectations. &amp;#x200B; &amp;#x200B;
1. boilerplate for most things 2. save your most used code 3. ????? 4. checkout cacher.io
This is a maths question, ultimately. You'll probably have better luck on a maths subreddit too!
Thanks, yes I have also cross posted it on r/Math 
[removed]
Yeah, thatd be fine
Move data in your RAM(short term memory) to a remote Disk(not your long term memory) by documenting things in your company’s wiki. You need knowledge management. Saves your time as well by referring these to other people when they have a ton of questions. Helps you remember new things now that the RAM has free space :)
Reusable code takes time, and most often we end up with code that will never be reused because most of the scenarios is not necessary. I've done some research and the best tip I can give; first focus on creating the functionality, then improve code quality and once you need the same functionality twice make it reusable. Last tip, review code with experience dev. 
Never heard of this but this bundle size and memory consumption compared to Electron claims to be a *huge* improvement https://github.com/neutralinojs/evaluation/blob/master/README.md
What is the problem that you're solving with this?
This sounds like a bad idea.
I think you should be able to create a singleton that both updates that from the event and handles the MutationObserver :)
no i've used javascript 20 years now.
Can it be used with react.
I'm not sure why I'm being down voted -- the average backend developer is working on components that are more vital to a business than their website. That doesn't mean that there isn't sophisticated, high-end frontend development that is compensated well, but there's a much broader range of FE dev, including a lot of untalented JS hacks who are building bullshit websites. The former doesn't pay very well for obvious reasons.
More importantly, can it run Crysis? 
You sound salty
Crabby old man confirmed. Impressed he knows about reddit though. Mad props
Your mutation callback needs to be able to reference a function that returns mouse coordinates
Salty about what? I make a ton of money doing mission critical backend development, but I started out building the aforementioned bullshit websites. If JS devs are concerned about how much money they're making, they should consider leveling up their skills and getting involved in fullstack development.
"model complex behaviour in dynamic languages" How is that any different to strongly typed languages? If you still try to use typescript as a dynamic language you're shooting yourself in the foot
Let's try Doom first eh?
how about nodejs? Are they paid well?
I agree wholeheartedly. But what makes ajv and JSON schema better than alternatives?
[Everything runs Doom.](https://m.imgur.com/gallery/Eq7UMZS)
You are missing a TODO app using React and Redux as demo! 
I'm not exactly which rotation angles you want. [There's two different kinds.](https://en.wikipedia.org/wiki/Euler_angles) They're not terribly hard to calculate. Also, if you're having trouble understanding dot products, here's my best description. You're looking at the product of the magnitudes of the vectors, except the vectors are pointing in different directions. You're only multiplying the parts that line up in the same direction as one of the vectors (vector projection). That's why the formula is |v1| * |v2| * cos(angle between them). The cosine of the angle between them shows what percentage of the vector will project on it. Two vectors pointing the same direction have a cos(A) of 1, while two vectors perpendicular have a cos(A) of 0, since they can't project on each other. [Here's a neat visualization.](https://www.falstad.com/dotproduct/) You can fiddle around to see how moving the different vectors will change the dot product. Every vector library is going to have a dot product function, so calculating it should be really simple.
But what that function would look like? How it can get mouse coordinates on its own? If there would be a way to connect that function to mouseEvent listener, then it would be a different deal.
Simple solution: learn Nuxt.js instead, haha
Released v0.1.0 which handles the events for dispatching actions!
It sounds like what you want is for your MutationObserver callback and your MouseEvent listener to be able to access some shared data structure that holds the current mouse coordinates. That shared data structure can be globally accessible (like the DOM, localStorage, etc), or it can be a local variable that the MutationObserver callback and the MouseEvent listener close over. I would personally go with the latter. Example: function main(targetElement) { let mouseCoords = { x: 0, y: 0 }; window.addEventListener('mousemove', event =&gt; { const { x, y } = event; mouseCoords = { x, y }; }); function mutationObserverCallback(mutationsList, observer) { // use mouseCoords for whatever reason } // finish MutationObserver setup } 
Sure, and highly dynamic behavior borders on impossible in strongly-typed languages :) For example, I can't do `{...state, value : someValue}` in C#. I'd have to manually write assignments for each field (or use some kind of an "object mapper" library to help). I noted yesterday that [the TS declarations for the `re-reselect` library](https://github.com/toomuchdesign/re-reselect/blob/f08de38294f3f7f10c3097ce425b4b25db379433/src/index.d.ts) are absurdly ugly, because it allows N arbitrary selector functions to be passed in, and those can be passed as either separate function arguments or an array of selectors. The result is 1500 lines of painfully repetitive and unreadable type declarations. But, the symptoms aren't limited to TS. The [C# Tuple class has multiple generic overloads](https://docs.microsoft.com/en-us/dotnet/api/system.tuple-8?view=netframework-4.7.2), and apparently [Scala's tuples are limited to 22 fields in some way](https://underscore.io/blog/posts/2016/10/11/twenty-two.html).
Over a 10 year period
Sounds dangerous to start a webserver locally for system access. Any compromised website could just call those apis for disk access. You don't have less memory consumption here as the thing stil runs in a browser window, doesn't it (just any of your choice)? And isn't the charm of electron that you ship a specific chromium version, so you don't have to deal with all the cross browser incompatiblity crap? You lose that here just for the sake of a smaller app?
I really hope this doesn't end up abandoned like the other minimal Electron-like projects ([Electrino](https://github.com/pojala/electrino), and at least one other that I forget). Sticking around and keeping updated might encourage significant Electron dependents to make a switch if it's basically a drop-in replacement.
Those really are some impressive claims. The one that was most impressive to me was the memory consumption &amp; application size. How exactly is Neutralino achieving these numbers? What's the catch? To run a browser app, you'd surely need, well, a browser - and I've been operating under the assumption that browsers are resource hungry monsters that have quite a footprint. 
the destructuring is not on the language being typed, but just on it missing that feature, rust kinda has it for example those `re-reselect` ts defs are literally what I was talking about, shooting yourself in the foot by writing a shitty api you basically never need the "highly dynamic behavior" you just think you do, it's a different mindset
Thanks. It is looks like the first variant where we are transferring the coordinates via a variable. I will test how good mutationObserver be able to grab the latest coordinates. This means that Javascript even in its latest iteration does not allow a universal messaging mechanism between objects which can be however detached from any scope and context other than knowing of each others' existence (meaning knowing reference or a pointer in C/++ sense).
When you want a place to store config without having to set up a lot of other infastructure. For instance if you have mostly static site but you want to have announcements etc at the top of the page. We have an easy to use data only editor as a form that even non technical people can use. 
The idea is to make it easy for devs to hand off things to content editors without a lot of setup. It has permissions and data only edit modes (that display as forms) so it's hard for a non technical person who knows no json to mess up. But the dev gets to consume json without worry. Maybe you have feature flags, and you want managers to be able to enable them and disable them. They can't mess up the json only update values.
Thanks for the explanations and links, I am afraid I am still confused, maths was never really my string point (although strangely in my later years I have taken more of an interest in it!) The rotation angles I am after are the `yaw`, `pitch` and `roll` angles, looking at this example from http://edutechwiki.unige.ch/en/X3D_grouping_and_transforms#Rotations I (think) I need to calculate 3 rotation angles (one for each axis). ``` &lt;Transform rotation='0 1 0 yaw'&gt; &lt;Transform rotation='0 0 1 pitch'&gt; &lt;Transform rotation='1 0 0 roll'&gt; &lt;!-- Shape (pointing along X axis, Y up) goes here --&gt; &lt;/Transform&gt; &lt;/Transform&gt; &lt;/Transform&gt; ``` But in examples such as this http://onedayitwillmake.com/blog/2011/09/getting-the-angle-between-two-3d-points/ it only ends up with one `theta` angle which I am not sure if/how this is relevant to the above. In my Observable example https://beta.observablehq.com/@jamesleesaunders/vector-fields#matrix it is the numbers in the last radians column I am trying to calculate. I don't know if anyone is willing to fork this notebook to figure it out? 
I'm not too sure. It depends on what your GET request does at the beginning 
It doesn’t ship with its own browser; rather it uses the default browser to load the given index page
Next.js is running express under the hood. Or fastify if you set it up that way.
What are you talking about it? You can implement an observer type pattern in any language.
Not everything has to be reusable. Some components may be reusable, but for more specialized methods keep them private and maintainable. 
Yes, you are correct. It all depends on where in your express application you put your \`next.getRequestHandler\` middleware. Anything that catches the request before this middleware and ends the response or doesn't call express' \`next()\` method will handle the request before NextJS gets a chance to.
I totally agree with you. Great text, keep it going! 👍
This is a good thing but for cases where you dont need the features which are only in chromium browsers or if you dont need nodejs. So this is for simple apps. It has its own place but cannot replace electron yet. 
Very cool, really like the idea! 
Correction, modules works in all major browsers [es6-modules](https://caniuse.com/#feat=es6-module)
well, how are they running it? And if it is some rando apk off the net, why are you still supporting it?
... which also uses lots of RAM. I'd like to see a benchmark that includes the resources use by the browser.
The oldest APK for Android that I could find is [v29](https://www.apkmirror.com/apk/google-inc/chrome/chrome-29-0-1547-72-3-release/). 
We have lots of older users. So they by device and never update it.
How do i install/user it. Never dealt with this before.
well you are crazy for enabling it, but maybe https://productforums.google.com/d/msg/chrome/JCXuvM7Dfcg/he2qUGkqJCUJ don't update your profile, whatever that means I've only had luck w/old versions of firefox when trying to repurpose old androids with somewhat newer javascript.
Why not spend some time playing around with the devtools to figure out how they did it? After a few seconds I was able to find that when you hover over the containing `a` tag that a `div` underneath gets it css `transform` property set to `scale(0.97) rotateX(-3deg)`, this combined with a `transition: transform 0.5s cubic-bezier(0.215, 0.61, 0.355, 1)` gives it a nice little tilt animation.
what an asshole comment. the article acknowledges from the start that there are many APIs beyond the ones discussed. This comment is also annoying as f on mobile/desktop because of its length. 
Consider whether having a domain name is really that important to your project. Even major projects have an unrelated domain name and then link to the Github source, let alone a personal project. Are you intending this to become a commercial product? If so, you'd really be concerned with finding a domain name for your company that you found, not the name of the product. Then you'd have the project at company.com/product. Good luck! The project is better than anything I can currently do.
I'm in the same boat as you. I strugle to design programs /app as well. I did build fair share of apps, and adopt certain style over last few years, so while reading keep in mind I'm not an expert. For example when I building bigger apps, I try to keep in context while making a certain feature/sector and trying to contain it in the same folder, so feature1(Accounts) is folder name, and depending what stack I'm using everything would be there. This means I don't have only one reducers, but many collocated inside their context/folder. This adds up to be little verbose, but I welcome this. My intention is, if someone down the line(this could be me) needs to update/change stuff it can do it all from one place, and not need to know how whole app is structured is working, and also not jump around looking where is this reducer, where is that route. I want any college engineer with minimum knowledge of stack to be able to change stuff when in context. This is 'feature' called Accounts, which is contained in folder. ├── CreateAccount.js # self explanatory ├── DeleteAccount.js # self explanatory ├── index.js # Accounts component/sector ├── messages.js # intl ├── queries.js # Graphql queries ├── shared.js # shared mini util components ├── SingleAccount.js # View └── UpdateAccount.js # update account screen Recently I did this with Nextjs + Apollo + intl(messages.js) I found inspiration from really grate [ReactBoilerplate](https://github.com/react-boilerplate/react-boilerplate) with some of my twists. There is also grate talk from Max Stoiber about [scaling react js](https://vimeo.com/168648012) \- react specific but principles are agnostic. This one I particularly liked [3 rules for structuring applications](https://jaysoo.ca/2016/02/28/organizing-redux-application/). &amp;#x200B; With library like React, this is super easy to do, what I really like to learn is how to design program without frameworks/libaries, to know the principles. To help me alleviate that I recently discovered book [How to Design Programs](https://htdp.org/2018-01-06/Book/) hevily influenced by SIP - Structuring and Interpretation of Computer Programs. &amp;#x200B; &amp;#x200B;
Click bait title for a very shallow article. Don’t event bother.
I made an npm package for managing scroll [scroll-utility](https://github.com/LeDDGroup/scroll-utility)
https://www.digitaltrends.com/mobile/how-to-sideload-an-apk/
So why not use Express and Mongo for this? If you didn't want to write all the registration logic yourself you could even use [PassportJS](http://www.passportjs.org/) to use any number of services.
I’m so glad I don’t have to log my time 
Mongo bad
You can't just say 'X technology is bad' and not back up your statement.
Could use sqlite.
sweet, thank you man yeah should have used devtools lol
Haha thanks for the laugh
not enough jQuery
One of my teachers in my school is obsessed with jQuery, I got in trouble for using fetch and a bunch of other es6 features instead of jQuery lol 😂 
is this high school?
I think there's a jQuery plugin to add more jQuery
College 
jesus. yeah your teacher doesn't seem to be very competent.
$.needsMore$
Don't forget your are paying them money for that...
Dumb. All you need to do is down 15 libraries totaling ~ 15GB and you can do this easy. Newbs. 
Looks cool and very promising, my only qualm (and possible deal breaker) is the weird callback-based API. I mean, it looks like work was started on this in June of last year (although maybe before then - 19,000 lines of code in the second commit!) and promises have been part of the standard for 3 years now. Is there some technical reason for not using promises? If so, why not the more standard `function(err, data) {}` callback style? I can't find anything in the GitHub repo about promises. Cool project otherwise, though, keep it up /u/shalithasuranga!
[Oh god oh frick](https://github.com/cbrandolino/jQuery-basic-arithmetic-plugin)
Timothy Goatse
So... Is there a plug for this or not? 😁
I took the bad grade and said that I’d like to do her assignments and I will, but I’m going to do them following what the industry is actively using 
'The long-awaited basic arithmetic plugin for jQuery' lol!
The poor guy answering it seriously and getting downvoted...
Are you even a developer if you’ve never seen this SO post? Straight gold
The related questions are gems. References [a famous don't try to parse HTML with regex SO answer](https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454) (meme?).
Perhaps it was a course on how to use jquery.
It depends on the course - because if her instructions say "use jQuery" then… use jQuery, because it shows you can follow directions. If it says "use JavaScript"… then contact the head of the department with your concerns. You are paying for that grade, and if you're better than the instructor, you need your money back.
I like how the correct answer gets downvoted. 
Jquery is still used a lot too.
only in places where it doesn't matter, *usually* not by people who take pride in their code (nowadays anyway), and certainly not at top places where you want to get a job.
All these answers are wrong, you clearly need redux for this
lmao "where are my legs" bottom right
it's not real, it's satirical. look at the questions in the "related questions" column if you want a *real* laugh
yeah that's the funniest part to me, "where are my legs"
Legacy apps exist. 
I think it is better to learn Machine Learning using Python. Just my two cents. 
Yes, of course that too. But I doubt anyone would support using COBOL in CS100..."but legacy support..."
Half the posts on the sub seem to be help-related. There's even flair designated for help. Not being combative, but I don't get it...
i sampled 90 notes on my guitar and wrote a program that lets you write and play tabs. &amp;#x200B; [https://pamblam.github.io/tab-composer/public\_html/](https://pamblam.github.io/tab-composer/public_html/) &amp;#x200B; just a weekend experiment, depending on how i feel later i may or may not ever work on it again. &amp;#x200B; feedback, contributors, etc welcome on any of my projects. https://github.com/pamblam
I love NVM. Node install across multiple platforms (Mac, Linux) wasn't always so great with the default installer, and homebrew gave me nightmares trying to update a whole bunch of crap and breaking a lot of my toys/tools. NVM worked perfectly though, and continues to do so now when running Ubuntu via UserLAnd on my crappy Android phone now that my PC is dead.
It’s a custom component. Find one for your framework don’t expect it to be called a drop down but a menu that opens from the top. 
In fairness, he didnt answer the question which was to add a number to an existing variable, where as in the answer he creates 2 new variables.
Fn is not supported according to the GitHub page; no indication if that's going to change that I saw, but I only gave it a quick read.
&gt;where are my legs?
It’s use JavaScript. The two classes I had her for were JavaScript programming and Full Stack Web Development 
That’s a very development-centric mind. In our company we have a website to lunch, no time to re do all the code for some plugins without using jQuery. Let’s use it then. Development should add value to the business not spending more money and time just because jQuery is not cool anymore.
A modern day course on Web Development should focus on at least one of the big three frameworks, and jQuery should only feature as a side note - it's only really useful for legacy projects in the present climate.
But should it be? Personally I avoid it religiously.
Still maintained, nice!
I agree completely, but there's no real reason to be using jQuery unless you have legacy code that's deeply tied to it. It slows things down and adds very little.
It’s a new website. We needed some features that were easily available with jQuery. We’re using jQuery then. How much does it slows down? Is not really that much. Specially now that more and more people have faster connections the. When jQuery was launched. Whatever makes us go to market faster and does not create too much of technical debt or prevents scalability.
Sounds like your devs are more familiar with JQuery than with anything else on the market. That’s not a benefit of the library though, and not a reason to forcefully teach it.
No... that’s not the case. We rarely use jQuery. My point is development only exists to grow the business, this aversion to jQuery just because it’s just lost efficiency, money and time to market. A lot of developers should stop thinking just about code and think about business too.
You'll be happy to know no packages depend on it: https://www.npmjs.com/package/jquery-basic-arithmetic-plugin
It includes hard-coded numbers up to 1000 wow.
Also a good point but don't confuse what is good and efficient during your work day VS discussing the craft on your free time :) 
I love this! The real gems are hidden under the Issues section
out of curiosity what features did you need that were easily available with jquery?
One of a them was a decent datepicker, the other was a good/flexible form builder.
yeah I realise it's satirical. I doubt that guy did though and just trying help. probably crying confused in his room 
I started trying out generative art. Must say that I find it satisfying and finally putting some of that high school math to use. &amp;#x200B; [https://i.imgur.com/ZsAKxTz.png](https://i.imgur.com/ZsAKxTz.png) &amp;#x200B;
The only practical way is to "Build in-depth projects" in vanilla JS itself. For e.g. (some of it are very easy and some challenging) - \- Build a simple ToDo app in vanilla JS (add a different interface ie. maybe build it as a Chrome Extension) \- Build a calculator \- Build the game of chess \- Build a simple platform game like Mario \- Use prototypal inheritance to build a ToDo app. \- Build a CLI tool (e.g. find info about a movie via CLI) There is just a ton you can learn via doing these. PS - I am the co-founder of AltCampus - [https://altcampus.io](https://altcampus.io) where we help people learn web development focused on JS and land jobs at really good companies.
Then I'd definitely send your concerns up the flagpole. You wrote JavaScript and she didn't like that you didn't use a crutch. That reflects badly on the school/program.
Anyway javascript pays my bills.
I'm of the opinion that anyone not using fetch for normal requests today should be given the death penalty since they clearly stopped living after 2016.
“I tried to divide by 0 and got an error...”. 🤣
great read
Well, sure, if your business is pushing out MVPs like there's no tomorrow, then it can give you some edge. Or maybe for prototyping purposes it can be useful. But otherwise, there are plenty of tools (including new standards) out there that can be used in place of JQuery with no extra cost except to learn them. That's why I assumed your deeper knowledge of JQuery as the reason. &amp;#x200B; Personally, I see no reason to ever use JQuery anymore, because all the main use cases are swallowed by either standard tools or far better libraries. As for UI components, there's a ton of them for each popular UI library out there. Hell, you can even soft-wrap JQuery plugins into this or that library's components. &amp;#x200B; In all honesty, I have no idea, how businesses around you formed your expectations of a codebase. What became obvious to me over the years, is that like your character is formed by your environment, so is your coding preference formed by the businesses you were privileged to work for. Some developers flourish in their creative nature, perfecting every single line, while others become cynical and "get-out-off-my-way-as-fast-as-possible"-oriented. Those are not the only too cases either. So, while disagreeing with you, I'm not attacking your POV.
reddit is new man. its not old. i was on here when aaron schwartz launched it.
Absolutely love fetch and promises 
I'm surprised my post got so many down votes. I'm just stating the truth about an app that serves over 1,000 people every week. 
Nah, it suck! So buggy, I tried $.oneThousandOne, it say property not defined.
I wouldn't recommend jQuery since it's a pretty outdated library, maybe give it a try at React.
One word: legacy As a new/solo developer, it can be hard to comprehend, but there is a vast world of existing code written over many years using many different languages/methodologies/frameworks that need active support and maintenance. jQuery was king of the hill for almost a decade (or more). Its footprint is still incredibly large even if it's shunned for new development in favor of sexier options.
What’s the big deal with jQeary, I’m just a freshman who just learned JavaScript and don’t have any knowledge of these fancy library’s everyone talks about 
COBOL is still very widely in demand. Businesses have needs beyond the new and flashy. Not everything needs to be a nailgun when a hammer will get it done quickly, cost effectively, and maintainable by those in your organization.
You know, it can be useful to have a function with varargs for basic operations sometimes. I am totally okay with the idea. What I am not really okay with is: &gt; “the performance is indistinguishable from the native version (tested for **10** operations)”
jQuery isn't even a framework.
You're misunderstanding. The entire thing is a shop. This never occurred.
Losing the consistency of always running in the same browser (version) seems like a big downside though.
You can definitely find a job where you will not need to write html/css, but still you should understand how it's working.
Quit a job because some dick who supervised me wanted me to quit Angular simply because HE personally didn't like it. Fuck No. 
Send him youmightnotneedjquery.com anonymously 
You need it if you plan to make apps. HTML isn't the problem, css is hard due to the box model mostly which I'd look at first, then flex and grid. React lessens the sting a little, you don't need to know semantic HTML, css-bem and some other practices that are antiquated.
The website appears to be dead atm, but from how you describe it it's probably very easy to do: https://codesandbox.io/embed/j1zol1nrq3 and here's a full tutorial: https://twitter.com/gabe_ragland/status/1065277110384656384
I could be wrong, but I think /u/CheeseFest was referring to React, Vue, and Angular when referencing the "big three frameworks", not jQuery.
Thanks!
I’ve brought it up to her and several other instructors teaching the same class, she says no not until es6 type features are used, the other instructor whole heartily agreeed and wants to put together an es6 react class lol 
Thanks for this. Do you recommend any particular ML Python course?
jQuery is from a time when native javascript was a lot more complicated to write. it's a collections of shortcuts for common tasks. It was so useful and popular that almost every javascript developer back then used it, and almost every project. As javascript developed and added new functionality and got more convenient, those shortcuts aren't all that short anymore. Nowadays you can do anything jQuery just as easily natively, and the general consensus is to not use it on new projects anymore, if possible, because now it's just unnecessary bloat - but jQuery still is everywhere because there's still a lot of JS devs who sort of "grew up" using it, and lots of old projects and libraries that still use it. 
Awesome! A beginners question: how do I obtain the types of the actions created by createSlice? export const counter = createSlice&lt;number&gt;({ slice: 'counter', initialState: 0, reducers: { increment: state =&gt; state + 1, decrement: state =&gt; state - 1, multiply: (state, action) =&gt; state * action.payload, }, }); counter.action = ok counter.action.increment() also works but there is no autocomplete for it thanks in advance!
My guess is you need to put the absolute url into the readme - e.g. https://github.com/tkwant/react-stepper-wizard/raw/master/example1.png instead of example1.png
Yet another asp.net developer 🤣
Don't build your final release on the destination server, build on a CI machine, and deploy from there
Just learn to understand the basics... which if you're already making websites/apps with React you probably do? You don't have to know everything off by heart, just keep in mind the stuff you deal with frequently, and notes on anything else that you stumbled/struggled with in the past to avoid going through that all over again(like 6-12 months+ time when it's no longer fresh in memory), other than that you know how to lookup what you don't know right?(eg, I wonder what that CSS was that let you do such and such, or is there CSS for doing X?, etc). If you're lucky to use modern techstack, you can enjoy things like CSS-in-JS vs raw CSS(or pre-processors like SCSS). That lets you avoid thinking about specificity issues among other traditional knowledge that becomes less of a problem(still good to have an understanding over). Use something like styled-components, enjoy. Combine with normalize.css(styled-modern-normalize with styled-components) to put in your header and you'll get nice defaults/normalization across browsers, alternatively reset.css or others if you have different needs for the base CSS. As mentioned, understanding how to do layout well is worthwhile, flexbox is great, so is css-grid, for most things flexbox will work well. You don't have to worry about the traditional/older layout woes of floats and clearfixes or class based rows/columns for responsiveness(but you should be aware of media-queries). Other things you can pick up as you go, like one I remember was when I had an img element, there was this extra bit of whitespace below it, I looked at the computed style and my other CSS that could affect it, but couldn't figure out what was causing that whitespace.. Google, read, problem solved, common issue. HTML stuff, well, you're React elements are all going to end up being turned into the usual kinds in the browser, so it can be helpful to have an understanding there too, especially if you care about semantics and accessibility.
"I used the jQuery diet plugin and I lost 10 kg in a week"
&gt; you don't need to know semantic HTML, css-bem and some other practices that are antiquated. Semantic HTML is still good for accessibility and SEO though. Not vital to get something going, but useful if you want to cater to machines and impaired individuals. While CSS organization / practices are less of an issue today, still good to keep organization of layout and styles separate(at least their properties grouped/neighbouring one another not necessarily in separate files) and sharing of variables/utils vs hardcoded CSS styles). I'd add that OP should also understand media-queries and probably use something like normalize.css(or if using styled-components, styled-modern-normalize).
Use any of these: [https://github.com/ligurio/awesome-ci](https://github.com/ligurio/awesome-ci) :D &lt;3
I know this is one way, but this required lots of setup and an extra server for the CI.
There's no silver bullet here. If you prefer express/mongo, please go ahead with express/mongo. You could do a registration form in any language and use any database, or even a flatfile
This is fairly simple to do if you use promises (which is what async/await uses behind the scenes anyway) You would effectively memoize the function and always return the same promise. Since the promise can have multiple things chained off it, it will "just work".
That damnvote, sorry, downvote!!! 😂
Though I don't think it's of any benefit to learn separately learn jQuery API. A good portion of the features are already in baseline javascript, so learning those techniques is enough. If joining a project where jQuery is used, it's more efficient to just open up the API documentation and find the syntax for the thing you already know how to do.
You shouldn't make front-end pages (web or native) with javascript, then. There are plenty of jobs out there where you can fully focus on javascript in the middle-layer or back-end. You won't EVER see HTML or CSS in those landscapes. From the perspective of someone who loves the entire world of web development (JS, CSS, HTML, and everything in between) I really don't want people like you in or near my team. I've worked with people who refuse to learn HTML and CSS. They produce endless amounts of `&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;` soups and everything looks janky as hell. Stick to Node.js. Specialise in that field and you'll be set with jobs for the next decade or so, easily. But honestly, HTML and CSS aren't THAT hard to learn how to deal with. You don't have to like it, you just need to understand it. You can always avoid doing it in future jobs, but at the very least know how things are supposed to be, how they should work. At the very least just KNOW when you're doing something wrong...
I’m impartial to the project, but from what it seems you’re sacrificing that consistency for an order of magnitude smaller build size, so it could be useful for some projects
There are hundreds, if not thousands of programming languages, and very few actually support that. And even in Javascript so far the description say that messaging is for "Workers", no a general thing. For general scope they offer messaging between windows, but it is exactly what is says it is, meaning you can not attach message listeners to random objects, you can only attach it to the whole window.
&gt; Usually when I code something into a project it ends up being used only in there Nothing wrong about that if it's not generic enough to be modularized. &gt; and I feel like I'm doing something very wrong and programming the same things over and over again. If you're reusing code in multiple projects(or within the same project), this is when it should be extracted to a single location/file to be re-used. Modularity is very useful :) &gt; The only idea I had so far was to make a git repository with the functions I use the most and have my personal code resource, but I don't know whether it's the most efficient solution. When that code spans multiple projects, it's a good idea to centralize it somewhere. Using version control and making it available on the internet(public or private) is pretty wise too. You can store a usable module/file, or snippets/templates(maybe integrate with your text editor/IDE). When it's a module/file, it's great that it's version controlled, but that's not too useful over time across your projects where that code used in them may have changed a bit, what versions of that code do each use? You don't want to manually compare and patch(if needed) to the newer version of your code with bugfixes/improvements. At that point it's useful to make it an actual package.... I take it you're familiar with NPM? You can add some extra files/metadata to the repo to make your code into an npm package, any unrelated modules should be separated into their own repositories ideally so they can grow/progress at their own paces with meaningful relations to their package version numbers. Getting a little bit more work and effort now to achieve that right? Pays off though vs sloppy copy/paste all code lives in one file. You don't have to publish your package to the NPM registry, although if it is generally useful to others, making it available to the wider public like that can help others as well as yourself if someone uses the package and decides to fix a bug or contribute elsewhere to your code. If you don't publish to the registry, you can just add your git repo to your projects package.json as a dependency(with all the nice features of git versioning, refer by branch, commit or tag), in your actual JS code, you'll just import it by the package name, not having to worry about the version. If you're not wanting to make an actual package, you may at least want to track the version of your JS script somewhere, iirc in the days before NPM was super popular, and you'd just link to a CDN in a script tag manually, you'd also have the scripts version in the filename. That works, but is less advisable. --- As others have pointed out, lots of the common kind of code we want to use has already been made available by someone else(or a community of contributors) online(Github, NPM, etc), you've probably used some yourself considering you've been doing web dev for some time(you say front-end only so not sure where your experience stands with what I've mentioned here). If there's a good chance that your common code is actually available as a library package elsewhere online achieving effectively the same work, might be worth using that instead, don't have to package and maintain your own code then and can benefit from others contributing their knowledge/experience to make that code better. Actual projects as a whole, beyond just single files for common code, you definitely want to have some organization and hierarchy going on, many others have already touched on that. Again if you're not too familiar with third-party libs/frameworks or boilerplate starters, they're excellent examples as mentioned. If you don't use any frameworks, they can be very useful at adopting their biases/opinionated way of doing things, saving you writing/maintaining code you shouldn't have to, and providing a good structure and patterns for you to stick to. My own approach, involves roughing out code to reach some functionality/goal, then tidying it up and splitting into files(which sometimes requires some re-factoring). React is great, takes away many hassles and will help you keep code more modular(with components). styled-components uses JS for CSS(but you can still write normal CSS/SCSS if you like), it also brings an improved workflow and compliments React well. 
Seriously? Where's the pre-increment/post-increment mentioned...
for any serious company you'll need to support IE11. meaning you cant use native es6 module loading. depends on whether you actually want people to use your application or not^^
I was going to suggest a global (or class) variable, but after reading your suggestion I 100% agree that memoizing the function and returning the promise is much better and is the way to do it.
There's a pull request for "added promise support"
College teachers are like 10 years behind everyone else
And perhaps learning an important lesson about legacy project requirements for that money! You will hit this sort of thing in your future professional career unless you are lucky. Sometimes you can convince people using the newer tech is right, sometimes you will be forced to use the old, especially if you are supporting legacy code for any length of time. It might not be jQuery, but (due to the speed of change ATM) a couple of years from now the current hot newness will likely be the new "legacy".
it's more sad than funny...
##r/web_dev --------------------------------------------- ^(For mobile and non-RES users) ^| [^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| ^(-1 to Remove) ^| [^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/9wy10w/ignore_list/)
NPM script that builds and deploys the code to production using rsync. Was easy to setup and is very quick to deploy (one command). Granted this setup would non necessarily work very well for a group project. But if you are a solo developer, it is faster, more cheap and way easier than a proper CI setup 
That's a basic sine wave graph. To draw one you can use [`Math.sin()`](https://devdocs.io/javascript/global_objects/math/sin) and a [Canvas](https://devdocs.io/dom-canvas/).
What sexier options do you have in mind?
Thx this works
I upvoted your comment, still i have to say, that it is sometimes easier to stay in one ecosystem, than using half of it and the other half not. For example the ajax method could make sense as other jquery stuff builds on top of it. Thats at least what a senior dev told me, when i said i wanted to use standard array methods instead of .each()
Can you show a C++ code example of the kind of thing you're trying to achieve in JavaScript?
The whole comment is a joke. You don’t need either for adding numbers.
When you do that, do you also zip your node\_modules or do you reinstall that on the deployment server?
It depends how you've got your CI set up, but most can be set to produce "build artefacts" which in this case would be your output built files. You could do something nifty, like push those to an internal npm server, and have your production machine just update its modules
 Finally I can write 567 as $.fiveHundredSixtySeven, what a time saver!
A google search reveals sadly that this legendary question was removed: [https://stackoverflow.com/questions/2694603/add-a-number-to-another-number-in-javascript](https://stackoverflow.com/questions/2694603/add-a-number-to-another-number-in-javascript) . Not even in wayback machine, rip.
No problem. ;)
You just wrote it can be done in any language, so, on the contrary, I am expecting you come up with a solution.
Seriously, though, what I would normally want to do is to take MutationObserver object's prototype and create a chimaera wrapper object by *extending* the prototype with a "port" property to where I would attach a message eventListener. However, as things are now, the eventListener can only be attached to an instance of DOM element object or a few other specific objects (https://developer.mozilla.org/en-US/docs/Web/API/EventTarget), not to just a random type of object wrapper or to MutationObserver object. I am not sure if it is possible to redefine/*extend* EventTarget API/ addEventListener method to work with MutationObserver or, even better, with a general object, but from the lack of replies that would discuss such possibility, I gather it is not quite possible, right?
It's hard to pinpoint where this code is slow. You could optimise the way the loops are handled, but I don't think that that will fix the substantial delay that you're looking for. &amp;#x200B; Instead, did you add logs or some other kind of debugging? The most basic kind of speed debugging would be to add many \`console.log()\` calls with timestamps enabled in the browser, or just also calling \`new Date()\` in the console.log, and then seeing what takes the longest. If it's long because there are 10000 items, there's a solution. If it's long because \`new Web.WebControls.SortableTreeView.TreeDataContext(jsObject\[prop\]\[child\], context, config)\` does a lot of work, then that's another solution.
Literally! 
&gt; Thats at least what a senior dev told me, when i said i wanted to use standard array methods instead of .each() You should have just punched him in the face without discussing it further.
The interesting comment is here: https://github.com/facebook/jest/pull/7554#issuecomment-454358729 &gt; We've decided to go for this, thanks a bunch for your feedback! 
[removed]
I think the problem may be that you are researching "javascript messaging" which will return stuff like `postMessage` which is unrelated to what you want to do. `addEventListener` is indeed for DOM objects, its part of the DOM API. There's no reason you couldn't define your own `addEventListener` on a custom object, but if you want it to raise mouse events that object will just be a proxy to the actual DOM events. I've carefully reread your posts a few times but I can't work out exactly what you're trying to do. This JSFiddle is in attempt to create a 'chimaera object' as you call it, maybe it will help you? https://jsfiddle.net/c02jktqp/
i figured out more what the problem is. this code is getting data that is displayed with numbers like so: 1 1.1 1.1.1 1.2 2 2.1 2.2 2.2.1 3 3.1 every time getNumber gets anumber it starts counting from the start instead of counting from where it is, so 3.1 goes all the way back to find out its 3.1 instead of just going back to its parent 3 parentDataContext is the fault in this i think. 
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
[removed]
Why Reddit show this as an animated gif? It's impossible to zoom in.. Really many things sucks in the Reddit app particularly for video media where it's impossible to download at all..
Always question your senior devs. Some of them are only there by virtue of having worked there too long.
Would you say it's still a good idea to use jquery when needing to support legacy browsers? 
well that depends on how "legacy". If you're still working with stuff like IE9 or something, I suppose so. But in that case my recommendation would be to find a new job, cause that's no fun...
Polyfills are what you want. 
There's two common ways to solve this now: Client Side Rendering or Server Side Rendering. You can handoff the rendering to the Client, in which case you would have something akin to ```javascript app.use(express.static(pathToBuildFolder)) ``` This is if you build via `webpack` into some `dist` folder. You can use `HtmlWebpackPlugin` in order to build the `index.html` file that gets served and connect all the pieces. That will try to serve all requests from the `pathToBuildFolder` and should handle all of your static files ( _css, js, img, etc_ ) _stuff_. The other option is to use Server Side Rendering where you create some `html` string _per request_ and send _that_ to the user. You still need the `dist` folder in order to server the other assets that are linked via `ssr`. There's plethora of tutorials on how to do it but each kinda just sucks at first.
Something something the best way to speed up jQuery is to not use jQuery....
I think the real gem is they set a variable for each number 0-1000
"The fastest code is no code"
I haven't checked if my code actually runs into the situation, I just thought that it was a possible issue that my existing memoization and async/await code didn't cover. I came across [this article](https://medium.com/@bluepnume/async-javascript-is-much-more-fun-when-you-spend-less-time-thinking-about-control-flow-8580ce9f73fc) and it seems to suggest that memoizing an async function is the same as memoizing a promise? I was under the understanding that async/await replaced Promises, but if that's not the case and there is something different here, that'd be good to know. Here is how I defined the method: // moize is the memoization library in use, max size could be higher but is there to avoid an infinite sized cache which probably isn't good for memory if caching lots of values const longComputation = moize({maxSize: 5})(async (data) =&gt; { // Is it ok to have some other logic in here, this whole function is the promise right? The await function below isn't necessary? //logic here that takes x time to complete before returning a value return await get_result(data) } // Later used in code like this const result = await longComputation(data) 
&gt; I 100% agree that memoizing the function and returning the promise is much better and is the way to do it. I think I might already have been doing that if async/await usage is like promises(is are promises still relevant in this case and different?). I gave more info in my response [here](https://www.reddit.com/r/javascript/comments/ai8nnd/how_to_avoid_running_a_long_running_async/eemg7o3/)
see map() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/Array/map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) reduce() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/Array/Reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)
I hope you understand the performance impact of fromJS? That thing can be very painful. 
You can call this method on a number and print it in a particular base. E.g. (6).toString(2) becomes "110" and (255).toString(16) becomes "FF". Is that what you mean?
Waiting for a YUI version
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString ?
I was going to say something like : String.fromCharCode(parseInt(someBinaryNumber,2)); is what I would use. But, this doesn't use the toString() conversion. &amp;#x200B; I guess it depends on if you interpret OP post as how to convert from binary to char to in your case decimal to binary / hex.
Had to google it out of curiosity and found the same repo. Someone actually made it haha
I think I knew that lol
Hi /u/Anubhav-Singh, this post was removed. Please see our rules, and do know that 'Java' !== 'JavaScript'. Thanks for your understanding.
Hi /u/rikosteo, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/rawreksdeetaken, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
You're dynamically including code, but you're doing this via an iframe. There's valid reasons for doing so, but it sounds like you're just caring about a changing server api. If so, why don't you just load javascript from your own server (instead of javascript in an iframe).
Iframes can be useful for libraries that will run on arbitrary third-party sites, but as far as I know not for the reasons your'e mentioning. Why not just use two layers of Javascript libraries? Have your clients include a very small script on their website, which in turn injects the "main", up-to-date script from a different URL. Using an iframe can be helpful, but primarily for adding cross-origin security &amp; making sure you have a clean environment for your script to run (no random modifications to global objects that your clients' websites may have). However, if you rely on cookies in the iframe, you could have problems with some web browsers / users blocking third-party cookies.
Anytime In the past i've tried communication between iframes I found it complicated and difficult to maintain. &amp;#x200B; I'd recommend you have a server side page \`site.com/jsWidget.aspx?preferredVersion=1.2\` which itself will decide which version of the JS to give to the clients. Especially if the preferredVersion is completely depreciated.
More than just the basics of JavaScript. Maybe read through you don't know js. Great book for learning how JavaScript works.
&lt;script src=“https://path.to/yourserversfile.js”&gt; Easy as that. You change the file on your servers, it updates on your client’s site. Sometimes the best solution is the simplest. 
yes this is what I meant to ask..
Useful, e.g. for writing cross-platform shell scripts!
First, what about a server API to redirect the script to the current version link and then installing it via `document.createElement("script")`? Second, even if you continue with this frame idea, how will you retrieve the "various data" your customer has? Eitherway I would structure the frontend code to be have a generic, command-oriented api that allows me to define at the server where my data is and how to get it, then the script runs, retrieves the data as my server needs it and returns it. No iframe needed, very straightforward implementation. So the script would decode something like "get element with parameter [xxx] being [yyy], grab its [zzz] parameter, return as [sss]" and then retrieve your information to the server.
thanks. I was searching on **toString()** method itself
First, since you can't/don't think CDN approach is best, what about a server API to redirect the script to the current version link and then installing it via `document.createElement("script")`? Second, even if you continue with this frame idea, how will you retrieve the "various data" your customer has? Eitherway I would structure the frontend code to be have a generic, command-oriented api that allows me to define at the server where my data is and how to get it, then the script runs, retrieves the data as my server needs it and returns it. No iframe needed, very straightforward implementation. So the script would decode something like "get element with parameter [xxx] being [yyy], grab its [zzz] parameter, return as [sss]" and then retrieve your information to the server.
I mean I know very basics + Events, higher order functions, and was in process of learning OOP (to be exact, I was trying to learn how prototypes are used, etc). I also use some of ES6 standards during coding challenges.
Abstract 'challenges' are unlikely to keep anyone motivated sufficiently to tackle hard stuff. The best thing to do is choose something she genuinely would like to build (I tend to nice interactive graphical toys/visualisations for this sort of thing as they give kickback and wow, but YMMV) and build that.
I think you can test if the memoize return the same promise object like this: let p1 = longComputation(data) let p2 = longComputation(data) console.log(p1 === p2) &amp;#x200B;
[https://developer.mozilla.org/en-US/docs/Web/API/Service\_Worker\_API](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API)
This. Don't make it harder than it has to be :D Maybe even add a old-school cache-invalidator to make sure you always get the latest. `&lt;script src=“`[`https://path.to/yourserversfile.js`](https://path.to/yourserversfile.js)`?&lt;?= md5(time()); ?&gt;”&gt;`
I was about to get in to this long reply on service workers and background fetches, but this one is just soooo much better :D
What you're shooting for sounds possible, but very complex. Why is this valuable to your company, if you choose Semantic UI vs Material UI (assuming you mean the React lib), you'll need to provide full implementations mapping your requirements and API. This sounds like a ton of maintenance for no obvious benefit. More information around why, would be helpful.
If she'd like to actually perform small tasks of code while reading along with how the fundamentals work, you could use a website like https://www.codecademy.com/learn. I have to warn that, while it's effective practice for a beginner, it is quite boring. If your wife is studious, something like this would be a fine start. If she'd prefer to have a little more fun along the way, I'd recommend the same as the other commenter here. Find a beginners project of an actual app, maybe even something simple video series on Youtube, and have her follow along. This method might not teach her the ends and outs of everything going on like a coding tutorial on codecademy, but it in exchange it could be more engaging and motivating. My recommendation? Do both. Do a bit of the boring but by the books work on codecademy type websites and do a bit of a follow along project stuff at the same time.
Angular... shit. that sucks for you :P Well, i'd say build a tiny app with angular just to learn the "$scope" of the framework, perhaps a ToDo-app or Notes-app or something that we all have done a million times &amp;#x200B; The point of this is just to get your head in to "the angular way" of doing shit, use bloatstrap with it so you also get a feel of it :D
Wes Bos' https://javascript30.com/ it's really fun
Also, check GitHub, go through other peoples code / other apps made with angular to see how they have solved the problems they have had. Reading other peoples code always gives you great input for your upcoming projects &lt;3
CodeWars.
Es6 is one of the better things to learn. Since you were already offered the position, and they know what your skills are, maybe ask them specifically what skills they would like to see.
Or send appropriate cache headers. 
A lot of college teachers are out of the loop from what’s current. Technically they aren’t in the industry. (They’re a teacher not a web/software dev/engineer). I had a handful of dev teachers in college and only one of them seemed competent with what was going on and current. He was also the only one that was currently in the industry rather than just teaching what they read in a book. I took about 4 courses from him. Thankfully he taught almost every dev course that was available at my JC. 
I'd suggest looking ahead a bit into Typescript Generics and Jasmine/Karma
For good reason too (most of the time). Imagine if the college accepted the newest flavor of the week and you graduated without anything applicable for the real world. jQuery is still used in many professional sites. And it will be seen for a handful of more years. If you disagree you likely haven’t worked on many legacy sites or for enterprise companies who aren’t interested in updating to a cooler package that simply achieves the same end result. Realistically tho, let’s be real and say that it’s safe to assume ES[6-9] JavaScript is a here to stay and would be better to learn than jQuery. When I was in college jQuery was very relevant and that’s what I learned in my first web class. I loved it and (at the time) could never understand why anyone would use vanilla JS. Lmao!
I'm not sure of the purpose of this response, but /u/qtheginger's suggesting still applies: learn more than the basics. If they're teaching you a framework, you'll want to know as much of the core language to help make that go easier. For Angular, this includes things like * classes * modules, import/export * decorators (not yet standard, but used heavily in Angular) And you'll probably want to go over Typescript at a high level and make sure you're comfortable using the terminal and working with async operations in JS... There's no shortage of things to learn ;)
You could. parseInt is actually one of the methods in the Number object. So its the same as saying Number.parseInt() There is also parseFloat and some other methods that handle numbers in different ways. Best practice though is to use parseInt
I love the original game, but there were a few things about it that I wanted to change. Code: [https://github.com/sdennett55/headsup](https://github.com/sdennett55/headsup)
There is a LOT wrong with this article. The biggest thing I want to point out is how disingenuous the the performance graphs are. Here is a JSPerf for the array looping https://jsperf.com/kljhiqweuropiqwuroi As you can see both for (var i = 0; i &lt; arr.length; i++){ arr[i] = i; } and var n = arr.length; for (var i = 0; i &lt; n; i++){ arr[i] = i; } Run at practically the exact same Ops/sec. The reason for this is that your javascript engine is smart enough to figure out that `arr.length` is going to be a static value within the loop, meaning they are both running essentially the same exact code. Onto the string concating and the tests are not written correctly. They give us var foo = ""; foo = foo + bar; foo += bar; [foo, bar].join(); foo.concat(bar); These lines are NOT the same. The first two are setting a variable while the last two are not. Also a side note `[foo, bar].join()'` will add a comma between `foo` and `bar`, the test should be `[foo, bar].join('')` which will concat the same way as the rest. Now on to the actual performance. I made a JSPerf which you can find here https://jsperf.com/jvlkzxjcvlkzxcjvlkzxcjvlkxzcjvlkjzxcvlkjxczv/1 Test | Ops/sec -|-: `foo = foo + bar;` | `9,848,906` `±3.35%` 99% *slower* `foo + bar;` | `834,514,171` `±0.70%` **fastest** `foo += bar;` | `12,241,322` `±5.25%` 99% slower `[foo, bar].join('');` | `5,730,416` `±0.86%` 99% slower `foo = [foo, bar].join('');` | `81,989` `±0.32%` 100% slower `foo.concat(bar);` | `833,137,088` `±0.55%` **fastest** `foo = foo.concat(bar);` | `12,739,393` `±3.60%` 99% slower \`${foo}${bar}\` | `202,727,306` `±0.65%` 76% slower foo = \`${foo}${bar}\`; | `9,901,872` `±8.97%` 99% slower You can easily see that their preferred method of `[foo, bar].join('')` is by far the slowest result we have. Especially when we are setting a variable. Most of these tests have such a negligible difference that you should always be using whatever makes the most sense and is the clearest in a given situation anyways. And I don't know about you but I refuse to ever write something like `[foo, bar].join('')` to add two strings. Also the tests show browsers like `Chrome 21` `IE 9``Safari 5` `FF 12`, when was this article written? It says 2019 but certainly doesn't seem like it. Combined with the fact that all of the article has horrible formating mistakes like for (var i=0;i&amp;lt;l; &amp;lt;span="" class="hiddenGrammarError" pre="" data-mce-bogus="1"&amp;gt;i++) {&amp;lt;/l;&amp;gt; array[i] = i; } Makes this look even more amateurish.
This seems like the better approach. You notice that this is how service like google analytics work. Generally you load an off-site script and get the most recent version within the desired api version (or major version in semver). As long as you follow normal practices and don’t change the api you provide them they won’t notice the change. Iframes will also sometimes be blocked by privacy and ad block extensions so you shouldn’t use them unless necessary imo.
[Codingame](https://www.codingame.com/). Start with puzzles in Easy section.
Yeah, actually I knew that before learning frameworks, I had to learn Vanilla JS as much as possible. But I've got this once-or-twice-in-a-lifetime chance (cause I live outside of the US and the EU) from a good company, so I accepted the offer. Now I am here, trying to prepare as best as possible.
Creative coding is super fun to learn, check out this youtube channel: [https://www.youtube.com/user/shiffman](https://www.youtube.com/user/shiffman)
Thanks, it does help. I was unsure if it is possible to make a chimaera object by making it both an observer and mouse coordinates getter simultaneously. Your test shows it is possible, though a bit differently since the mouse tracker gets attached to an outside *window*, not to the new object itself, but it works anyway as it stores the event to the object's property anyway. It will work for me, though. I merged the tracker and observer (with "super") for my purposes in the extended class. It is also convenient that MutationObserver object allows reference to itself along with mutations so I do not have to explicitly use the name of the const object (and "this" is not available): https://jsfiddle.net/cmb3Lep9/1/ Sending and receiving messages would be related to what I want to do if there was no way to attach mouse tracker to the chimaera object and hence I would have to think about ways to set up communication between standalone mouse tracker and standalone observer. Also, the messaging between objects in principle interests me. The reason you could not exactly see what I want is that besides the title of the root post, where I stated my question explaining what I want, I also expanded the scope to adjacent/related things like messaging. I think it would be fun to be able to set up message exchanges between arbitrary objects without any additional context/scope being necessary. I guess the messaging can be done, though not as abstract as I wanted, in a similar way you attached mouse eventListener, also with the use of a DOM element like *window*: https://jsfiddle.net/rudiedirkx/F4pXs/ 
Take a look at a project I developed some time ago called [PM.js](https://github.com/ajbogh/PM.js/tree/master).
it's not real, it's satirical. it was never really on stackoverflow. this was made in photoshop
yep
I just wrote a small library that does this. feel free to either use the library or check out the source code as an example. https://github.com/Pamblam/Universal-Encoder
If your doing a webpack build for a static site I’d check out Netlify. If you don’t want to do their service you can do something similar yourself. The basic idea is you setup a commit webhook to your build server that fires a build whenever you commit. That server has Node etc and builds your project and then sends the output (e.g. /dist) to your static host.
Zero weekly downloads :(
this is much more readable for must developed than bit shifting. pretty cool alternative for Doing rgb to hex.
¯\\_(ツ)_/¯
Woah woah, I used a lot of jQuery even in 2016. And I'm not a huge react/ framework of the week fan. But I've just done a "Data on the web" course where the lecturer mixed up Java and Javascript so I'm entitled to be ratty.
FreeCodeCamp
Using GraphQL and some type of ORM.
You'll want to make it a function var stripe = Stripe('pk_test_1234567890'); var elements = stripe.elements(); function createCard(cardId) { // take the id here var style = { base: { // #code here }, invalid: { // #code here } }; var card = elements.create('card', {style: style}); // ############---attention to line below this---######################### card.mount(cardId); // use the id here card.addEventListener('change', function(event) { var displayError = document.getElementById('card-errors'); if (event.error) { displayError.textContent = event.error.message; } else { displayError.textContent = ''; } }); var form = document.getElementById('payment_form'); form.addEventListener('submit', function(event) { event.preventDefault(); stripe.createToken(card).then(function(result) { if (result.error) { var errorElement = document.getElementById('card-errors'); errorElement.textContent = result.error.message; } else { stripeTokenHandler(result.token); } }); }); function stripeTokenHandler(token) { var form = document.getElementById('payment_form'); var hiddenInput = document.createElement('input'); hiddenInput.setAttribute('type', 'hidden'); hiddenInput.setAttribute('name', 'stripeToken'); hiddenInput.setAttribute('value', token.id); form.appendChild(hiddenInput); // Submit the form form.submit(); } } createCard('card-element'); createCard('card-element-2'); createCard('card-element-3');
No socket.io has nothing to do with authentication. As with everything you can choose between multiple viable options. Roll you own with passportjs, if you want to learn, or use a 3rd party service, if you need a secure system for production use.
Everything old is new again! Did you know that before jQuery, and before even XMLHttpRequest people did AJAX by using ... wait for it ... iframes?!? And now here you are, in 2019, trying to do AJAX just like they did, back then, in ... 2009? Probably several years before then actually. Where I'm going with this is that, while it's cool to see someone try using an old approach, that old approach was a terrible idea, and people only used it for lack of a better approach. We now have much better approaches (Comet, WebSockets, polled AJAX, and as the top point answer mentions, simply switching `&lt;script&gt;` tag src attributes). You should really use them, not a bad/10+-year-old approach.
I agree, if you are trying to provide an entire UI, maybe use an iFrame then(though you can do that with a JS include and a little code they put on their page). But for his case, don't use an iframe it sounds like. &amp;#x200B;
I was using iFrame communication for live updating a page back in 2001/2. Back then XMLHttpRequest was an IE only technology, and I wanted it to work in Netscape as well. So glad that technology moved on
It's hard to know exactly what they're expecting of you until you start. My advice would be to continue learning basics / fundamentals and during your internship do what you can to make yourself useful to the team. Be enthusiastic about whatever task you're assigned, listen to the feedback of your coworkers, and then take some time during off-hours (if you can) to dive deeper into some of the topics that came up that day. I wouldn't expect an intern to know the inner workings of Angular, but I would want someone who is willing to learn and is passionate about the work.
When you ask for help you shouldn't tell people that you already knew about their suggestions.
I just tried to elaborate what I know and what I don't, I said that I know a bit more than just syntax, so that they can easily give me some advice.
lol what the fuck
Hi /u/virkamqiq, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
A basic flow for auth would be: - User accesses Signup / Login view - User POSTs email &amp; password to endpoint on server via form or AJAX - if Signup, email &amp; password are validated, password is then hashed via salted hashing method, the standard is to use bcrypt: https://www.npmjs.com/package/bcrypt. Then the email and hashed password are stored in the Users table. Never store a plain-string password and always use a salt. Once the user is created you can initiate the post-login flow described below or redirect the user to a Login view and have them enter their info again. Typically, if you want to do your due-diligence, you would have some sort of email process and have the user validate the email they signed up with. - if Login, email is used to find user data via query, then the plain-string password in the POST request is hashed and compared to the stored hashed password string. If they are the same then the user is legit and you have a couple options. - Option 1: You can use server-side sessions to keep user state and the session-id gets sent to the client and stored in a cookie for later access. There are libraries for this: https://github.com/expressjs/session - Option 2: You implement a JWT workflow. The user signs in, a JWT is generated server-side which contains hashed user data, then the JWT is sent to the client and stored locally for re-use. - Either option has pitfalls and perks, it's up to you which to go with. - If you want to integrate OAuth such as Google, Facebook, etc. you can either build your own implementation for storing their tokens in your DB or utilize a prebuilt library to facilitate it such as PassportJS: http://www.passportjs.org/ - From there you can utilize either your session data or JWT to only allow authenticated users to access certain API endpoints. 
Ya definitely, I agree with you! Just wanted to give my 2 cents. Sorry, reading my comment: &gt; and if you disagree I should have rephrased that to “anyone who disagrees”. That was by no means meant as a disagreement. I wrote another comment ITT that speaks more about the divide you spoke about. 
Thanks for reply. Yeah, mapping is the bad part. If we migrate to another library we got a problem anyway because new library will have different API. Tight coupling seems to be inevitable here. Input wrappers that provide formating, validation messages, debouncing and so on make sense to me. The rest of UI components can be used directly.
Thanks for reply. Yeah, mapping is the bad part. If we migrate to another library we got a problem anyway because new library will have different API. Tight coupling seems to be inevitable here. Input wrappers that provide formating, validation messages, debouncing and so on make sense to me. The rest of UI components can be used directly.
Sweeeeeet
Can someone explain why and how you'd use an iframe for this? I thought whatever is in the iframe can't communicate with the parent page, and vice versa due to cross origin stuff.
Others have already posted some great resources, but other than that, here's what I started with: the ol' **Deck of Cards** journey (which I'm sure has existed in many forms). Start with the basics, then keep making it more advanced... • Using basic js vars (arrays, numbers, etc.) to represent a deck of cards • Rendering + Displaying the deck using js to instantiate DOM elements (w/o hard-coding 52 elements in HTML) • Shuffling the deck via array work and using random() • Dealing cards to N players, clearing hands, resetting the deal • Re-writing what I had just done in a way that is more organized and function based • Re-writing what I had just done in a way that is Object Oriented &amp;#x200B; Good luck!
I wonder why that link appears in google then, obviously something dumb like that has happened on that same question before.
Advent of code has nice "riddles"
BTW, turns out JSFiddle does not work the same way as extension environment where it forced me to explicitely create an additional property to avoid inserting checks if the property exists or not in MutationObserver callback: class mouseTrackingMutationObserver extends MutationObserver { constructor(...args) { super(...args); this.latestMouseEvent = ""; } trackMouseAndObserve(targetObserve, optionsObserve) { window.addEventListener('mousemove', e =&gt; this.latestMouseEvent = e); super.observe(targetObserve, optionsObserve); } }
A host page and an iframe can communicate through the postMessage API. https://developer.mozilla.org/fr/docs/Web/API/Window/postMessage
You should have just said thank you.
Depending what is the thing you are developing. Not everyone is working for company with such requirements.
when i put in the title of the question it does not come up in google for me. a different question with a similar title does, but it's not this one.
Do a basic Angular Hello World app if you haven't done one yet. It'll teach you the basics, your job will teach you the rest. Rely heavily on google and don't be afraid to admit when you don't know something and ask for help. Nobody expects you to be an expert. Look into various ES6 features to familiarize yourself with them. Try to use them in your Angular Hello World app. Again, you don't have to be an expert. If someone corrects you in a code review don't take it personally. Be objective about the code and accept that they might be thinking about future problems or scenarios. Also, you can defend your position but know when you should accept their advice. One of the things I hate is when a new developer doesn't defend their ideas, but it walks a fine line with being too defensive. Learn Git rebase. Utilize the git config `rerere` option. Learn how to create a branch and merge a branch. Learn how to amend a commit, and possibly how to squash commits. There are some tools that do these things for you like SourceGraph, but the experienced developers always use the command line.
A question: What is the need to hash the time?
#JavaScript: the good parts is great reading material from Douglas crockford
So I'm assuming the reason for using iframes (as already pointed out) is to ensure security, perhaps a little more context is needed. I worked on a similar project that did this for tokenization of data. Here's the scenario: The iframes could be used for transferring sensitive data between an input frame (which can be placed wherever the client wants it to appear in their form and just contains basic html input(s)) and a control frame which is used to tokenize the data and ensures through the same-origin policy that the sensitive data is never passed directly via the parent window. This ensures the client's JavaScript (even if it is compromised by XSS) cannot tamper with the data as the frames will validate the origin before accepting the data (see [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)) &amp;#x200B; I guess the question then is as they are already using this method to load iframes and JavaScript within these frames does this provide the added benefit of keeping the JavaScript the client has to keep up to date lightweight and keeping the implementation of the tokenization (or whatever the service is) separate from the client. I.e. are there any downsides to moving as much of the implementation into these frames as possible which in turn ensures that their API is kept up to date with the server side code used during tokenization. And if not then is there any reason not to move more of the implementation of the client JavaScript into these child frames. 
So the requested file name / url is always different and the browser downloads it every time instead of using a file it would consider to already have in its cache. That’s a hacky way of doing it but it does the job I guess 
Very interesting, though personally I only use Typescript, so lack of typing is a big deal for me. Have you made anything bigger than ToDo with it?
Thank you very much for your long answer. However, I have a few questions : - Can you please explain me simply what a sercer session is ? I can see lot of tutorials using it and I do not understand. - I am not excellent with Js and NodeJS. I have heard that oAuth is very hard to use in secure way for beginners. Is that true ? - What about Socket.io, is it a good practice to do with it ? Thank you 
Don't need ORM I know Sql
https://imgur.com/a/2x5BY4q
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/iDaOP9l.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
&gt; Your test shows it is possible, though a bit differently since the mouse tracker gets attached to an outside window, not to the new object itself, but it works anyway as it stores the event to the object's property. You will always have to bind to the DOM `mousemove` event _somewhere_. Ultimately that is your only interface to the mouse. If you want to make that binding in a custom 'mouse tracker' object and pass that around instead that's fine. RE storing the event data: that also has to be done and would have to be done in C++ as well. You have two discrete events that _do not_ happen at the same time. If you want to use the values from one event in the handler of the other, you have to store those values somewhere so you can access it the next time the other event happens. Something you might be interested in is the concept of streams. Using a library like [RxJS](https://github.com/ReactiveX/rxjs) you can create streams of events and compose them together using stream operators. Here's an example: https://jsfiddle.net/alexb/2Ludmnwa/
Good bot
I think about using it to send user login and password to server, then the server replies back by sending user's data.
Thank you, trellwut, for voting on imguralbumbot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
Eloquent Javascript - interactive online textbook. Examples start off small, build up cool projects as you progress through the material. Completely free and amazing
^(thank you) ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
https://medium.com/@johanna.fulghum/underbar-explained-f71ebb3fe006
I make a lot of money too, my homie! Super cool, right!!!
Interesting idea, but doesn't this couple components together? Ie. if a component needs access to another components methods, shouldn't one component above both of those be managing that interaction? 
I wouldn't recommend extending `MutationObserver` at all to be honest, that was me trying to decipher what you meant by 'chimera' object. This is somewhere you should favour [composition over inheritance](https://en.wikipedia.org/wiki/Composition_over_inheritance).
Take a look at Firebase Auth. 
Thanks for the response. This is exactly the use case. I appreciate there are other more elegant methods, but the iframes allow us to meet security compliance by not passing the data via the parent window. The main obstacle we have is ensuring that the developers who use our library on their websites keep getting the latest version. And because the iframes solution we have is already working for rendering input types, we’re considering extending it to also execute java script hosted within the frames on our servers.
Ah, I see. for some reason it doesn't come up when I type in the same thing. But you can navigate directly to questions on SO using the question id and the url, so it can be found [here](https://stackoverflow.com/questions/2694603/add-a-number-to-another-number-in-javascript). The question has been deleted; I think you can only see it if you have high enough rep. I can see it, so [here's a screenshot](https://imgur.com/a/JcgK2JQ). It's just people attempting to make a real post out of this satire, and it was closed and deleted. All the answers are people mimicking word-for-word the original joke image, but you can see all the account names are different because the original is made up.
Code academy and free code camp are awesome and free
Or you could just set your cache headers properly 
We used to use iframes for cross-origin Ajax requests back when there wasn’t good browser support for them. This plan is more trouble than it is worth. Do not go down that road. 
Don’t worry about these old bitches. They are everywhere and sadly don’t know shit. You go make what salary you want. Learn a skill. Get a job. Switch jobs for more money every two years or so so you don’t get stuck. Not that big of a deal. You can do it by only writing JS if you like. It’s not and never will be second class to anything running on a server. Just do you. If you find you want to get into software that runs severs or whatever, you can transition you problem solving skills. I recommend getting an algorithm solved a day on places like leetcode to keep fresh. If you worry about pigeon holding yourself, you can practice syntax in other languages. But the solutions all look the same at the end of the day. I have been making six figures since 2 years out of college. I only write JS. Have production code running for many fortune500 companies. I had a 2.9 GPA in business school. Self taught the rest. I work remote. I don’t live in California. I don’t pay state income tax. I have a reasonable mortgage with a low interest rate. All that to say I am not gifted and not special. Very average. You can too if those are things you value. Do whatever you want. A language won’t hold you back. 
GraphQL is in no way "best" for implementing authentication. It's not even in the same problem domain
I did this too! Great practice/challenge for beginners!
We are open for suggestions, feature/bug requests: [https://github.com/SQ-UI/ng-sq-ui](https://github.com/SQ-UI/ng-sq-ui)
Indeed
does your browser have hardware acceleration turned on?
because usually you want to do automated unit testing and if your code doesnt need a dom it's easier to test in node than to use a headless browser.
Can you expand on 'automated'? Wondering why a node script can be automated, but not client side code.
by automated i mean you can set up something like Travis CI that is triggered every time you commit to a git repo for example, and it runs a set of scripted tests that make sure you code works as expected. Look up Istanbul for example. Client side code can be tested automatically as well, but doing that requires opening a browser and loading a page and running the tests and closing the browser. 
Node is just an environment that runs JavaScript. Automated testing is writing a program that tests and validates your code’s behavior. Node can run these tests on its own with you needing to open a browser to run them manually. There are even Node libraries like Karma that can run your code within the browser with a human needing to be involved.
Hi /u/mavinter, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Also, `async` is preferred for any external JS code, unless it's required for their page to run. `&lt;script async src="https://path.to/yourserversfile.js"&gt;`
Hi /u/unohowdashigo, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
well it is, but chrome doesn't seem to like my gt710 on ubuntu based on some of the messages. As well as the original VGA doom ran on was dog snot next to a pcie gt710.
Because it's a lot faster to test your code when you don't have to spin up a browser and "drive" it programmatically just to check how a function behaves. Any pure logic functions _should_ execute the same in any JS environment, whether it be browser or Node. Even a lot of UI-oriented code can be reasonably tested in isolation under Node, assuming you set up a sufficient environment. For example, client-side code that interacts with the DOM can be tested under Node using a library like `jsdom`, which mimics the standard global DOM APIs. In general, unit tests should execute as fast as possible to give you feedback, and it's faster to run that code under Node than it is to load it into a browser.
Yes this is the best I could get my hands on.
_Client specific_ code, i.e. code that _needs_ to be run/tested on a browser, is indeed tested on a browser. Many tests do not need a browser. They don't run any specific logic that relies on the browser specific environment. Having to fire up a full browser to run them is a bad decision because it's more _expensive_ than running them on node -in the sense that bringing up the full browser to load the tests is slower and needs more resources. On the other hand, _some_ parts of the code do need to run on the browser because they actually interact with the browser environment. For these tests... it's pretty common to have a solution that it's _instrumented_ with Node.js but that actually executes one or more real browsers and runs the tests on them. In this case, the tests do run on the browser, but the set-up and loading of those tests is _instrumented_ with a tool that, usually, runs on Node.js. Still, there are some options (e.g. QUnit, Jasmine) that are actually not instrumented in that way, and they require _you_, as a developer, to fire up whatever browser you want and then load a page with your tests. These do exist and they are used in some places. Comparatively they may be used _less_ because lacking that _instrumentation_, they make automation _a bit_ more involved.
Passport.js
CTRL + F'd "euler" and am disappointed. (https://projecteuler.net/)[Project Euler] is a great little website that provides "mathy" challenges that you can complete in any language. It's not uncommon for people with a public git repo to have their solutions saved on there. From the website: &gt; Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve. Although mathematics will help you arrive at elegant and efficient methods, the use of a computer and programming skills will be required to solve most problems. &gt; The motivation for starting Project Euler, and its continuation, is to provide a platform for the inquiring mind to delve into unfamiliar areas and learn new concepts in a fun and recreational context.
True, of course we need to store the data. My question was whether we can attach listeners to objects without referencing outside objects like *window*, and we can not -- whether we talk about mouse event or about messaging. Re: streams: it is an interesting idea, thanks, but I must use pure Javascript (though it can be the newest version that is actually supported), not even things like JQuery or preprocessors like LESS etc.
It is viable to test browser-only with a library like https://github.com/jasmine/jasmine#installation. That said, there are solid reasons to do it in Node. * Many workflows use Node tools to transpile/transform/minify source code to the delivered product. It makes sense to incorporate testing into that same environment * It's faster. Many testing suites use jsDom a virtual environment without as much overhead. * For a browser-only solution to test all of your code, you would need to manually put in paths to all of the files that require tests. Testing libraries with file access can find your tests for you. Since the early 2000s (the JsUnit days)they were looking for ways around these problems. One of the JsUnit libraries even relied on RhinoJS. I personally like to recommend http://jestjs.io as it has batteries included and is fairly easy to setup. In spite of the Facebook affiliation, it is not necessary to use React with it. 
eww
A good thought, thanks. BTW, for the best practices sake it would be better to completely encapsulate/separate the core MutationObserver object for a purely theoretical case of it ever gaining "latestMouseEvent" property and "trackMouseAndObserve" method. Can a wrapper -- be it an inheritance extender object prototype/class or a new one (as in the composition approach) achieve this? For example, cad I add a new property name with "[property/methodNameX] is not in *args*" condition or add it as nameless and then call it with some core/root method for all objects like "lastProperty/Method()" or "object.prototype.properties/method[collection/array.length/size]" (I know it is gibberish, I am just making a point)? 
Checkout zoid, PayPal solution for cross browser communication https://medium.com/@bluepnume/introducing-paypals-open-source-cross-domain-javascript-suite-95f991b2731d I’ve been using it for a while and works great. It can be helpful for what you want to do.
Been in web dev for 8 years and have no idea what I'm looking at (that's not a compliment)
There are a lot of event emitter libraries for defining your own events. This is one of the more popular ones: [github.com/primus/eventemitter3](https://github.com/primus/eventemitter3) All of this is pure JavaScript. If you're making an extension you just need to bundle the appropriate libraries along with it. Alternatively you can roll your own events ([jsfiddle.net/alexb/4sw6xqp3](https://jsfiddle.net/alexb/4sw6xqp3/22/)) but you'd end up creating your own library to avoid retyping that listener boilerplate all over the place.
Yes you could abstract away the event that you're tracking. Instead of hardcoding `mousemove` in the tracker you could pass which event you want to track in the constructor. At that point you're creating something that looks a lot like functionality that streams/RxJS provides you with though so I'd probably use that.
leetcode or hackerrank are pretty popular for practicing for technical interviews I personally like codewars 
Wow that is a rough feedback but I am not sure what you mean exactly. It is not clear what this language is?
Thank you for this!
solving leetcode questions on a daily basis and learning the new concepts to solve a tough algorithm is the best thing you can do. If you want to improve you should do this. Check into github and try to have a green square everyday. This is like working out for athletes or scales for musicians. Super underrated.
Thanks. I did write the parser myself and it is all self contained within the repo. Performance for the parser was a goal as I wrote less performant one in the pat. I haven't done much more than what is the example folder no so the language is obviously quite rough around the edges.
CodeWars =&gt; sort by fundamentals. Be aware though the site now a days is extremely slow
Sorry, I got word at by an unpleasant person on StackOverflow today so I'm probably a bit touchy!
It was super clear to me. What were you expecting? I enjoyed the parser implementation the most. Seems very well done. 
Let her take a small example project from a different language and convert it to JavaScript. I think this is an awesome exercise to grasp the deeper concepts and that these concepts can be used throughout various languages. &amp;#x200B;
So if the objective is cache busting, I think the time would be enough or I'm wrong?
Love the downvote buttons. &amp;#x200B; \&gt; You can mix any statement, expressions, and HTML tags within the same function. &amp;#x200B; Pretty bad and ugly thing. Reminds me the old days of HTML inside PHP and vice-versa.
Project Euler is alot of fun. I remember doing a ton of them back in highschool when I was just getting into coding. If I recall correctly though, after the first 30 or so they become pretty fucking difficult and require more math skills than coding skills.
not a simple challenge but try to make something simple, complete and usable.
Interesting project that you seem to have done well on, but writing code that looks like this would be a nightmare for me.
At nodeschool (check if there's a local chapter) we often recommend trying out the "JavaScripting" workshop on nodeschool.io It does need node installed, but I've found it's pretty good to get people going
Full disclaimer - I got so frustrated with how hard it was to test code in the browser, have those tests work with hot module replacement (ie you modify a test, it should be-run without you having to do anything), that I wrote testing program myself last weekend. My work flow is basically edit the test/code, and see if my browser test reporter turns red. Works like a charm, with sync and async code, and was only a few hundred LOC. No assertion library, headless browser, test runner, fake DOM, or node scripts required. Curious to see if it had broader appeal and would be worth documenting and releasing, or I should just keep it an internal tool. It looks like people are mostly happy using node, though what I did solves most of the objections here (provided you already use hot module replacement in development).
It'd be good if the Previous and Next buttons were styled to be bottom left and right respectively rather than responsive to the container they're rendered in. This will provided a better UX in my opinion if someone is to use the Previous button multiple times to navigate back. It'll avoid the button shifting away from under their cursor. Looking at your code, I'm realizing this is more about how you implemented the stepper in an example and doesn't have anything to do with the stepper itself. For the stepper, since the steps are clickable, add styling to change the cursor to a pointer to aid the user in understanding that.
If she is learning javascript from a web development perspective, the following exercise can be good. &amp;#x200B; Beginner: **Build a plain to-do app**. Features to target are 1) Add tasks 2) Remove tasks 3) Rearrange tasks alphabetically, by deadline and order in which they are added. This app should reset when the web-page is closed. Intermediate: **Add some backend functionality**. Features to target 1) backend database with mongo 2) CRUD operations in database using server-side nodejs 3) Sending and receiving data between client and server. Now the app will remember the tasks even when the web-page is closed Advanced: **Add user management**. 1) Sign up and login 2) session management . Now you can have different users with different task list. Expert: **Make it real time**. When you add/change a task in one device it should reflect on all other devices in realtime. &amp;#x200B; This allows learning a lot of javascript concepts with good amount of flexibility (From Plainjs/JQuery/Angular/React etc) and at the same time results in an app which she can show to others. Trying to have that 'one more' feature in 'your' app is the best motivation for anyone to learn a language.
Two more options, code combat and solo learn
That's probably because PHP was bad.
It is always nice to see people working on new languages. /r/Compilers might appreciate this more.
- "Send" isn't trigger by 'Enter' (or 'Ctrl+Enter') on either phone or desktop. Normally not a huge problem but for a messaging app it makes it hard to use.
You could have 2 endpoints, one to get the semvar version, the second to get your script but pass the semvar version as a parameter. So when you have an update, just update the semvar version in option 1, option 2 will use it as a parameter and pull the new version 
Get used to it. Recruiters make good money on placing anyone. They scour for resumes with keywords and most don't even know how they are related. Ask a lot of questions up from to the recruiter before they try and get you into an interview with a client. Especially ask for the job description directly from the client, make sure you match up your skills and experience, and make them ask the client if your lack of certain requirements are ok. Also request rate/salary to what you want, and have them ask the client if this is in their range for YOUR skillset and experience. This will help weed out the ones wasting your time on pointless interviews if you aren't a good fit. In such a hot job market the recruiting competition is fierce so they look anywhere and everywhere for any potential recruits. 
How much time needs to be invested per day for this?
If you watch the intro for the series, you'll see that he says you can either just code along with the exercises or attempt to do it yourself and then compare afterwards. So pretty much from the length of the video to however long you want to spend on it.
YES, I forgot to add that, but I will put this feature in the next couple of days, thank you.
Pointless article. It could be that writing this took more time than migrating this boilerplate (which cant be big by definition) to TypeScript. Every new project should start with TypeScript, its not like its some fundamental change to language. Stop trying to be celebrity, its just boilerplate slapped with Babel preset TypeScript...
Why?
I think he's more concerned about the potential employer selling his resume to recruiters. I've never heard of that before, but we don't put up with that kind of nonsense here. 
Dang i thought this would work but same issue. Only the first `createCard()` will work. Everything after voids and won't work.
- A server session is merely the act of storing something in memory on the server. Typically when a user first logs in, data about the user and how they are interacting with the website is stored in the server's memory with a unique id. That unique id is given to the client and stored via cookies in the browser. Then when the user continues to use the website, all subsequent requests to the server have the session id added into the request headers so the server can access that particular session and data. - OAuth can be tricky since many auth providers utilize slightly different methods of authenticating and there are steps you must go through via those platforms to get it working right. Basic email and password auth is much easier. - Socket.io usually doesn't have much to do with an auth system. Socket.io is used entirely for real-time interactions between a server and a client so it's not specific to auth at all. It can compliment an auth system down the road once the rest of the system is in place if you wanted though.
I’ve been in a few interviews recently and been denied for not knowing things that aren’t on my resume. I always wonder if these people can read or extrapolate information properly. I generally chalk it up to wasted time, but at least I don’t work for them. Unfortunately, I think this is just the way things are now. You can’t ask every question to judge a candidate by, just like you can’t put everything on your resume. For now, I’ve settled on trudging forward with whatever interviews I get until I land one I know. (Obviously still doing solo study as well.)
It is normal for companies to outsource part of their hiring process to a 3rd party recruiter. You may have noticed this when you've submitted a resume online and saw the form submit to hiring service. It looks like Flexport uses greenhouse.io which has a privacy policy that states they will share your information with other 3rd parties. Ah, privacy.
Ah didn't watch it, am on mobile right now. Thanks for the answer, I'll check it out later!
Then he should have asked them what their privacy policy is and if they are allowed to sell/use his data before submitting. 
You can use the local() function of moment. &amp;#x200B; moment(String(foo)).local().format('DD/MM/YYYY')
Take a look at how this github page gets deployed: it basically force pushes to a seperate branch. I wouldn't recommend this for anything else than github pages though. 
I love referring people to [exercism](exercism.io). They have a lot of languages, and each language has a set of mentors that love helping and teaching people: Javascript being one of the most active community. 
JSONStream ?
this repo is pure JS gold, hope it helps https://github.com/leonardomso/33-js-concepts
https://stackoverflow.com/questions/159521/text-editor-to-open-big-giant-huge-large-text-files
I *hate* recruiters, 90% of them are straight out of college and can barely spell javascript let alone know what the tech is. Sadly, it really seems like you (or maybe it's just me) can't get a gig these days w/out one. I've applied for the exact same job thru the company's website and with a recruiter. Got the interview from the recruiter.
There is some options. First option is open it as a stream (you will not open per se, you will probably write something to extract a piece of this, like I want all names from a list of users). Another thing that you can do, if you want to explore this Json, is to write a smaller version of this file. If it is a list, take only the first three items, if it is a huge string, take only the first 100 characters, etc. You will probably use the same stream process and will get a smaller file, with luck you will be able to open that. If you have time you can write something to go through this file, already did this as a learn exercise. Be advised that may take time to understand all scenarios. Good luck
I've been employed by the same company for the last 5 years and I still have recruiters blasting my email and phone 
VIM
but then you have to talk to the ops guy ted. ted is fucking annoying
[CodeAbbey](https://www.codeabbey.com)
json is not meant to be used as a database. I would hand the file right back and tell them to get fucked until they can provide a reasonable file or database dump
or you could use something smaller and faster. github.com/pamblam/protodate
I'm curious about your motivation for writing this. Did it stem from an inefficiency in your workflow? Did it just seem like a cool idea? Also, while a todo list example does a good job of showcasing the different features of a particular system, it doesn't show how it will scale. I'd be interested to see a larger example with things like: - service calls, both retrieving and submitting data - multiple pages, including a page router - server-side rendering
Solo learn is not really.
There is an ancient test runner called Karma([https://karma-runner.github.io/3.0/intro/how-it-works.html](https://karma-runner.github.io/3.0/intro/how-it-works.html)) which executes your files directly in the browser. It should be pretty easy to set up. I wouldn't bother though. Nothing will beat Jest. Jest running in multiple workers is the fastest test framework I've ever used and I've used many.
If you want recruiters to go away, start telling them you need a $150K salary (or whatever pie in the sky number you want) and see what happens. If it's a low quality contact, like the noob stuff I've read about in this post, sure, junk mail that shit, but recruiters often get paid more for high-salary hires, so they have an interest in getting you the gig. Take advantage of there hunger to push for more money and a better gig.
zapatoada is right. I never submitted anything. Just your typical call from the company recruiter (not third party, not outsourced). To ask for privacy policy during an HR call sounds a little crazy, but maybe it's where we're heading in the industry.
That's a good catch. I never really check those privacy policies from those companies. But these recruiters contacted me out of the blue. They didn't even have my resume on hand. I'm guessing they found me through linkedin or something.
You can check this link as well. [CRUD with Node.js and MongoDB](https://www.zeptobook.com/how-to-create-restful-crud-api-with-node-js-mongodb-and-express-js/) 
Why-- &gt; Because someone in charge decided it should. Done.
YouTube.com/codingtrain
This. Just have them implement it pointing to your server and not on their own. Google does that, just like several others big ones.
Are you on a *nix system? If so, you can try viewing it with `less`.
Most of the tips (regardless of whether they're completely wrong) don't even involve jQuery. Are you using jQuery and JavaScript interchangeably?
Recruiters go almost purely for the volume play, it's 100x easier for them to just click a button and spam everyone on their lists, then let those people self-select and reply. They're expecting \_you\_ to look at the job posting and know that you're not qualified. Is this a great idea? Fuck no. Does anyone like it? Probably only the recruiters. Is there anything you can do to make the recruiters pay more attention? Not that I know of, but if you figure this you you'll probably be able to make money off the idea.
Nice nickname
/r/ProgrammingLanguages is active as well.
Which is usually how things get done — not that there is anything wrong with typescript, sometimes someone needs to make a call to create some team cohesion.
I guess we're just in the age where one has to virtue signal online about everything they do offline.
Leetcode has a bunch of programming challenges for a variety of languages, including JS. I like it, but I haven't tried the competition, so I'm not sure how it compares.
I would use a code formatter (like prettier). Be careful not to waste your time with deprecated lifecycle methods (like `componentWillReceiveProps`!), as React has more modern opinions about them (and hooks). Also, kind of unrelated (but I think it's funny), at my work our analytics always tells us that workflow steppers like this are largely unused by clients. It's always one of the first ideas put on the table and a pretty big engineering effort too.
[hackerrank.com](https://hackerrank.com) &amp;#x200B; Pair that with the book "Cracking The Coding Interview."
A list of coding games / challenges - [https://github.com/dakaraphi/development-resources#javascript-1](https://github.com/dakaraphi/development-resources#javascript-1) And also a list of interactive tutorials - [https://github.com/dakaraphi/development-resources#interactive-learning](https://github.com/dakaraphi/development-resources#interactive-learning)
Classic Schmosby.
It's really just the same as JSX or vue/angular templates taken to it's logical conclusion. Unlike PHP+HTML there's no (or there shouldn't be a) language gap - it's really all just JavaScript. I've been toying with something similar...
Why not challenge yourself and create projects that inspire you? I'm a beginner too; and for me, building stuff is a great way to learn.
The recruiters work for you as much as they work for the company that pays them. Remain professional, but use that fact to your advantage. Some things I have done the last 7 or 8 years Get a complete, detailed job description including the name of the actual company and group you would be working at. A lot of recruiters will try and hide this because they are worried you will somehow cut them out of the deal. If they are worth anything they should not be worried about this and instead should be confident they are bringing actual value to the table for both parties (you and the employer). Do not give your real resume until you are sure you’d take the job if the interview went your way. Once you give it to them you cant be sure what they are necessarily going to do with it — it is the chip you hold. Know what you want to make for salary and be direct about it early to save everyone time. I will relate this as soon as possible in the flow of talking about the job. If it is a contract job, make sure that there are as few layers between you and the employer as possible. Most large companies and probably many smaller ones have a Master Vendor List of recruiting companies they will work with. Those that aren’t on the list will often pass your billing through a company who is on the list — resulting a in a double dip cut on your rate. Also you become more expensive to the company. Try and use a local recruiter that you can meet face to face (The best firms I’ve worked with will insist on this). They know what’s going on much better than some body shop 1000 miles away. Those are the ones that actually care about their own rep and getting repeat business. I have one favorite and a couple backups. I’ll field random linked in requests from time to time but only if it seems very interesting. Interviewing is a skill, you can get good at it. I do contract work so I change jobs all the time and I have learned/ gotten better every time. Good luck 
&gt; if async/await usage is like promises Async/await syntax relies on promises under the hood. If a function doesn't return a Promise object, `await`-ing it won't do anything.
I dont think this is for beginner, just look at it today, but it seems tough
Grasshopper by Google is in the play store and it's excellent for learning JavaScript at beginner level!
[edabit. ](https://edabit.com/) My fave 
Do I understand correctly that the client is calling methods available in the library you provide from their own code? So if you were to serve the latest version of the JavaScript file from your own server, it could break the clients code if things change? If that's the case, you could still do this without iframes. Have your predefined interface as you described available in the file, and inform the client of this interface and how to use it. Then, hide all of the API calls and implementation details in private methods that your exposed interface calls. If the client is only including the file on their page and not calling methods in it, serving the latest version from your server is still a valid option, and you won't need to have a consistent interface available. If you're dealing with PCI compliance then I can understand the need to use iframes, stripe does this very thing so that customer data is always entered into a compliant stripe website. https://stripe.com/docs/security If compliance is not an issue, then iframes are really not the way to go.
Recruiters are stupid. They have no clue about what IT skills are, or how what the real skill that people like us have is the ability to figure out things we dont know how to do, and on a daily basis. Now they are selling your information around to each other and they are pestering you and telling you some bullshit line about how you are not strong in this or that. That is uncool. 
I would recommend [CodeSignal.com](https://CodeSignal.com). The cool thing about it is that it lets you rank yourself against developers that have jobs at companies that you want to work at. It is great for beginner algorithms and gets you started early on them. Truly though, as a beginner, I would just try learning some of the basic syntax and applying it to memory so larger concepts don't hurt so much. Anki works really well for doing this and allows you to do spaced repetition/practice on coding concepts (you take your own notes in it).
Most fun way to learn JS is by playing a game: [https://warriorjs.com/](https://warriorjs.com/)
Sadly that's how it works. Worse is when they're just spaming you with shit and weird jobs and ... like fuck man I don't need a bunch of noise from you guys....
Pop in over at r/recruitinghell as well, they'll offer some nice advice on that kind of stuff.
Saving