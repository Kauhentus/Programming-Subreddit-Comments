Maybe some base64 encoded images in there too?
Looks like a huge chunk of is CSS styling, and it seems it's in there because they're computed values: ``` l[_ngcontent-%COMP%] &gt; li[_ngcontent-%COMP%] ul[_ngcontent-%COMP%] &gt; li[_ngcontent-%COMP%] ``
"What if I told you there is an app on the market that tell you how sexy you are. It run by advanced machine learning algorithms. The AI is well trained. The system is based on a secure and efficient blockchain network. I am asking $100 million for 5℅ stake. Thank you."
Hi /u/jumping8jacks, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ericlesl, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ed-r-2087, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
It's a common pattern. It's to keep a consistent 'this' binding for object instances. For instance if you were to create a new 'Radio' object inside another function somewhere, using the 'this' keyword directly in a method would not produce the desired results. 'this' would resolve to the function that the object is being used. By creating the variable self, it essentially takes a copy of what 'this' is at object construction so later on it will always resolve to the Radio object itself. Sorry it's kind of hard to explain in this format. I'm not a huge fan of this pattern in general. But I'm not a huge fan of using OOP patterns in JS in general.
I just always found jQuery convenient since I thought the CSS selector syntax was pretty expressive. So maybe unnecessary in a strict sense but useful still. Is there something similarly expressive now with the standard DOM API? I have to say that I haven't really kept up with that.
Most selectors are supported now through document.querySelector / .querySelectorAll - check em out!
Hi /u/24hours7days, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
[https://nuxtjs.org/](https://nuxtjs.org/) Looks interesting!
Cool, thanks for the heads up!
Your point stands, but many of jQuery's common tasks can be done without jQuery. For the average website it probably doesn't mean much one way or another, but if you have a website with exceptionally high traffic dropping dependency for jQuery can have a decent impact on data transmitted/build systems/etc. If jQuery helps the dev produce the product more quickly, then it's arguably still the right tool for them for that job, but vanilla JS (esp when paired with CSS) is more than adequate these days. Eg, here's a quick pen I've just mocked up loosely based on the scenario in your comment: https://codepen.io/anon/pen/exoaOQ It could be more succinct than that of course (https://codepen.io/anon/pen/omORpL), but readability always scores points, and I wanted to highlight where it was similar to jQuery. 
“Know exactly what your Js is doing” ha! We got a junior dev here
BoOtStRaP 8 RePlAcEs PyThOn 
it already identifies pussies 
oh fuck yeah 
r/ratemyfinger
deer god... 
Any rough timeline/milestones? 
Hawt.
millenial: people reaching young adulthood in the early 21st century. do I have to do the math for you? and do I have to explain why the average isn't the same as the majority? you're a programmer, right? shouldn't you know how to math? just downvote me like a petty bitch and move on. you're just making yourself sound like a moron by continuing to argue.
rule 34 baby
Super normal for ES5 code. Some people use that.
well its not wrong
No library. Flexbox and CSS Grid is trivial to do, and you don’t need another library for them. 
&gt; As the legality of user-uploaded content gets thicker, we need bigger, better tools ... Har, har, very punny 
Now photoshop a hotdog being thrown down it.
[deer god](https://i.redd.it/pruz0wehzty01.jpg)
You can use arrow functions instead
My level 3 solution: var oldMap = map; map = { getWidth: () =&gt; oldMap.getWidth(), getHeight: () =&gt; oldMap.getHeight(), placeObject: (a, b, c) =&gt; { if (c === 'exit') oldMap.placeObject(10, 10, 'exit'); }, _endOfStartLevelReached: (...args) =&gt; oldMap._endOfStartLevelReached(...args), } Judging from the `_endOfStartLevelReached` error (and the yelling about not using bind), I'm guessing this is not the intended solution.
True but jQuery used to be so present and inevitable that some people considered they were programming in jQuery
Well ditching jQuery in favor or writing a helper function that calls document.querySelectorAll is ditching quite a lot of KB. If the selector is the sole reason you are using jQuery there's a lot wasted
Sorry, should be like this: moment.utc(String(utcDate)).local().format('DD/MM/YYYY'),
Nope, personal blogs from devs much preferred.
Does it actually work that well? I tried it out and maybe one or two functions moved up a slot, but I still had to scroll down.
Very actively developed, it's part of Wallaby.
Correct, their **bindings** are, they are in the temporal dead zone until **initialized** though. So yes, there is a part that is hoisted, but it's not the same part as if we were to create a block-scoped `var`.
Well hats off, cause it was pretty shocking :)
is there something to do in the level where the exit door doesn't work, or is that the end of the game?
Hi /u/Yomete, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I was being sarcastic. jQuery *IS* javascript. Not just behind the scenes. All you get are a bunch of utility functions. If you're proficient in jQuery, chances are you're also pretty knowledgable about the JS language (though maybe not it's APIs).
Yes. I know. That's what I was trying to poke at. But apparently I didn't do a good enough job about it.
Bootstrap 8 replaces humanity
`echo yarn-error.log &gt;&gt; .gitignore`
This is so silly. Vanilla Javascript replaced jQuery and vanilla CSS replaced Bootstrap last year.
Even he's mentioned how jQuery should be phased out.
Of course. The break up is mutual ;)
Yeah considering he didn't even get the method right (it's `document.querySelector()`), maybe he should actually try getting out of the jQuery comfort zone before coming to a conclusion.
&gt;I don't respect Flash either. Is that wrong too? The inadequacies of Flash led to the development of better tools. jQuery effectively pointed out the fact that native javascript was inadequate. It was an answer to a demand that led to better answers. So yeah, it is wrong.
You should definitely instead point to the libraries instead of pushing a version directly into your own code base. It'll make security updates from those libraries a nightmare to include and deploy. Use a package json and a registry.
You seem to be missing one little piece in your explanation: What does that produce? That is, with the code as you have shown what does the HTML you get in the browser say in the &lt;link&gt; tag? Have you opened your browser's console and looked at the network tab to see what is actually being requested? On a different light... Do you actually have a `/public` directory? Because what you wrote doesn't seem to show any `/public` directory.
You need this in your browser, otherwise the Reddit devs could, e.g., steal your private bank data or tinder profile, by doing an XHR when your browser has the necessary session cookies. If you want to violate the standard browser sandbox, it's your responsibility to figure out how to piece together and render the content you're aggregating in a way where your personal data is not compromised. It's nontrivial for sure.
Found the bot!
Omg, now small child's gonna learn js only for this😂😂
Well turn it off then. It's there for a reason. But you could manually run your browser without it if you so desire.
Bootstrap provide the SCSS files that make up each component of their framework. I just selected the grid SCSS and include it in my boilerplate. 
Thank you for replying and yes I have a public directory. It is above views, sorry for the confusion. 
&gt; What does that produce? That is, with the code as you have shown what does the HTML you get in the browser say in the &lt;link&gt; tag? Have you opened your browser's console and looked at the network tab to see what is actually being requested? 
Yu haked my refrigiratur an yu spel my naym wong?
This looks awesome
Are you the OP? If so: Why'd you delete it?
Interesting. Thanks for sharing this, especially for both "minified" and readability consideration.
Holy uncanny valley Batman
You can still go with "gorillas" wait
TES VII: Lint
Nice write up, but It's more like *How to start with Internationalization* ***API*** *in your browser*. Definitely not a *complete guide* so stop title that way, please. I18n is much more than using a few default methods. About node env - by default, all node binaries are compiled only with *en-US* support. If you want more you have to use polyfill for locales or install full ICU support (which is a bit tricky/complicated) - and even after that you can get wrong results, for example when you try to show long weekday format with Intl.DateTimeFormat. So we're not there, yet.
Do you really want bloatstraps "functionality" tho?
I think he knows that :P However, he could use `.bind(this)` which is still valid es5 Or he could start using arrow functions and don't ever have to do a `var that = this` again :D Well, we are all different, that's what makes it interesting, right? :D
All other guys are giving us hate for simply loving JS to much ;-)
I use Atom in the winter as it helps to warm the office.
If your game system already have an grid information array where each array element is an object describing the grid, you could simply add a new `items` property into it - which is an array of items. Otherwise, you can have an `itemsOnMap` array of item information where each is an object describing the item and location.
Hi /u/varsjs, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Just to add to what other users already mentioned. You should probably record all the important pieces of state. For example redux allows for time travel because the state changes can easily be tracked due to the action dispatching system. Also you don't need to record the whole state at every change. If you record only the diff you are then able to go back and forth, that will save bandwidth and memory. There's also a game called Braid you should check out. There's a talk somewhere where the author explains some of the issues and solutions to the problem of compressing the recorded data so it could be replayed backwards in time.
That's deer Jesus
usually these apis would prefer yo uto make requests from a server so you can cache stuff instead of your clients invoking the api directly, so they have no need to worry about CORS
it's made by Nvidia so...
Face is like a blow up doll probably. 
Great list, kinda wish I had it when I started out
&gt; JavaScript always assigns variables by value... However, when the assigned value is an Array, Function, or Object a reference to the object in memory is assigned. I like how this guy immediately contradicts himself on his first point. 
Worth a read, thanks for the article.
To be fair, it’s worded really poorly but the author definitely knows the difference between pass by value and pass by reference. They’re just thinking of passing a reference as passing the value of that reference, which isn’t wrong it’s just slightly misleading to say “everything is pass by value in JS.”
“if you don’t already know the basics of JavaScript”*
Apparently `var` bindings are immediately initialized to `undefined` upon instantiation of the corresponding variable environment. They are not uninitialized like I said in my previous comment, and attempting to get the value of an uninitialized binding normally always results in an error regardless of how its declared. If the `var` declaration contains an initalizer, it is used to reassign the binding value later when the declaration statement is evaluated. In contrast, `let` and `const` bindings remain uninitialized until the lexical binding statement is evaluated and the value is initialized to the value of the given initializer (or `undefined` if no initializer is given, which is why `let x; console.log(x);` outputs `undefined`).
This is false. 
Hi /u/bursttanalytics, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/fig966, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Majikarpp, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
You sound like millennial. When you grow some hair on your balls come talk to me bitch. Millennials are in their 20s. They don’t make up the majority of shit. Grow up son before I have to cock smack you like I did your mom last night.
Hi /u/Moep09, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Mydrax, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ipapop, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/survivorsheep, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I'll be honest, as a second language speaker, it didn't pop out as being that bad. Just changing "... However" with ", except" makes the sentence valid again. As far as writing mistakes on blog posts goes, this one's pretty damn mild...
I’m 47. Been at this for over 20 years. I was doing this while you were still a sparkle in your daddy’s eye son. Don’t believe me? Check the last 7 years of my post history. Moron.
Lol. No. Flash didn’t solve shot. It created problems. Not solved them. But go ahead and keep using that jQuery! It’s perfect for beginners.
This post deals a lot (rightfully) with the functional programming side of JS, but misses on mentioning concepts like object prototypes, and built-in objects like Object, Function, which are essential to understanding object oriented programming and the inner workings of JavaScript in general.
There are a lot of ways to solve the levels, that's imo the fun part about that game. For level 3, it does check that the correct amount of blocks are placed, but not where, so I think the most obvious solution would be to move a wall somewhere else. But my personal solution was to move the exit inside the cage and use a if statement to not execute the original placing of the exit: map.placeObject(map.getWidth() - 9, map.getHeight()- 5, 'exit'); if (false) // red code map.placeObject(7, 5, 'exit');
Ok ,thanks. I indeed have no issue with code in itself -Sorry for the misplacement of my post.
You mean level 21? Yes there is, check the Menu, there is now not only a *level* folder, but also a *scripts* one, which has a lot of files in it, but only three are editable! The biggest problem I had was that you can't use the search function of your browser to search for something in the files: everything that is not directly in the visible section of the editor window is ignored during the search. So if you want to search for something, you should copy it to another editor.
I invite _you_ to learn about floating point math. Search for IEEE-753 and go from there.
&gt;*In JavaScript all numbers are IEEE 754 floating point numbers. Due to the binary nature of their encoding, some decimal numbers cannot be represented with perfect accuracy.* You can also try \`0.1 + 0.2\`
Can't trust addition either! 0.1 + 0.2 == 0.30000000000000004; This is from expected rounding errors when dealing with the number type JavaScript uses under the hood. More info here: https://floating-point-gui.de/
Ok , fair enough and Selenium serves the purpose.Thanks for the reply.
Beat me to it. TLDR: CPU architecture limitations means they don't produce perfect results. "Kind of dangerous" is only a problem if you're looking for exact numbers to n decimal places and using those numbers to launch spacecraft (I'd question why you're using JS for such situations).
Especially important when dealing with a library that's entire premise is in the realm of security.
Maths is pretty fucky in almost all programming languages because of floating point precision. (0.1+0.2) == 0.3 is false in most languages. Check out: https://0.30000000000000004.com JavaScript is wild because of type coersion, and some bad design choices. Knock it where it's due
Awe. Lost your argument so resorting to name calling. What are you 2? Keep using that jQuery though. It’s perfect for beginners like you!
made another account cus you got banned.. ?
Huh? Uh no. I just now replied. WTF are you talking about? This account is older than you are lol.
You're not wrong but Apple is not happy about PWA becaute they gives developers the opportunity to create something a users could perceive as an app without using their store and so ignoring their strong policies
If you need precision just don’t use floats. I assume this is for currency so store your values in cents. 
Hi /u/KorgRue, please refrain from personal attacks. Thanks.
They're always 88% off...
if you need an integer after introducing floating points (either explicitly or by, say, division), look at some of the utilities, i.e. round/ceil/floor: Math.round(38.34*100)===3834
The hell you talking about? Where did I attack someone personally? You might want to check the person I am replying to here if personal attacks are an issue. Calling me a bitch? Really?
What is false, and why?
&gt; What are you 2? Is that supposed to be a compliment? /s I deleted both of your posts because you both were acting like children.
Not recommend it. Maybe good for newbies, but definitely not enough to make serious projects.
JQuery is not JavaScript. It’s an API. jQuery is written in JS but you are not writing JS when you use it. You are using the jQuery interface syntax, which jQuery uses to call internal JS methods.
Huh? None of my posts are deleted. Not sure what you are talking about. Are you talking to the right person? 
Visit with incognito.
Is the oldMap variable necessary? I think that while the object literal is being evaluated, 'map' is still is bound to the old value.
Check if char at position 0 is a. If yes, scan next position (n+1). Loop. If not, check if next character is b If yes check if next character is b If yes concatenate with next char and save at (n+1). Loop till a is encountered If not, continue at next position. Loop.
Wow. This. I don't even. You do know that the API is in javascript, right? You still call functions using parenthesis. You still assign values using `=`. You can still choose whether or not to include `;` at the end of statements. The only way jQuery could abstract away javascript is by implementing some kind of interpreter. It does however abstract away a good part of the DOM.
Do this. Remove jQuery from your project and try writing jQuery syntax and see if your browser can handle it? When it chokes, you will see that what you wrote is not JS. It is not JS syntax. $(“.someID”) is not the same as document.getElementById(“someID”) 
What if ab looks like this: ```const ab = [ 'a', 'a', 'a', 'b', 'b', 'b']```
 let i = 0, result = [] while(i &amp;lt; ab.length) { let str = "" do { str += ab[i] } while(ab[++i] == 'b') result.push(str) } 
B=\[\] streak=0 for k=1...A.length if A\[k\] == a if streak&gt;0 //create string with streak many b's and push it to B streak=0; } B.push('a') else streak++
That's because it's a Javascript bootcamp, not a web development bootcamp. It's great for people new to programming or new to JS as a language to learn without sifting through the decade of pre-ES6 documentation. My go-to recommendation for people trying to break into web development are Mead's bootcamp for rock solid JS foundation, then Stephen Grider's full stack courses for actual web app development.
Good work. Any reason why you used moment as a dependency instead of date-fns? The latter saves a lot of bytes. Is it because of locales? 
&gt; Always use semicolons Or just don't start lines with `[` `(` `+` `*` `/` `-` `,` `.`
 \['a', 'a', 'b', 'b', 'b', 'a', 'b', 'b', 'a'\].join('').split('a').map(e =&gt; e || "a")
An approach using regex const ab = ['a', 'a', 'b', 'b', 'b', 'a', 'b', 'b', 'a']; const abStr = ab.join(''); const grouped = abStr.match(/a|b+/g);
Marina Butina? That's an interesting choice for a profile picture.
 One liner ['a', 'a', 'b', 'b', 'b', 'a', 'b', 'b', 'a'].map(e =&gt; e === 'a' ? '|a|' : e).join('').split('|').filter(e=&gt;e) 
 for (let i, str, result = []; str = "", i &amp;lt; ab.length; result.push(str)) do str += ab[i++]; while(ab[i] == 'b' &amp;&amp; ab[i - 1] == 'b')
You can try nestjs.
Maybe loopback. I've used it, it works, but I'm not a fan.
Any frameworks or libraries allowed or just JavaScript?
Man, that's cool and all but I wish I knew how to build a todo app ^^/s
Common issue. Too many things picked by popularity only ( github stars). I try to not include a library unless necessary or really helpful. Then criteria varies based on if it’s still active etc. finding the list of ones to evaluate requires some knowledge of the keywords they use. For example pretty Json is what you need. I think you generally need to ask a network of people you trust on each use case. 
Your problem is the WAF, not the encoding. The only way you're going to stop false positives on the WAF is to either not send HTML or to encode, like you're doing. The way I see it, you have 3 choices. 1. Don't use HTML for the "rich text". Use something else and render to HTML server-side. 2. Filter the HTML server-side instead of relying on the WAF for security. This means whitelisting, *not* blacklisting. 3. Embrace the WAF and let it reject anything that it thinks could be bad. This means informing your users what's happening and helping them correct the issue.
Sounds like overtraining. You might have too many picture in a way that prevents your model from categorizing more novel images. But idk. 
allowed
Meteor.js maybe, otherwise you can try Adonis.js it's like Laravel 
Absolute quickest is to do a jquery click event that updates content. 
it seems that your bundle.js is looking for a file in line 1 which cannot find. can you post the first lines of the javascript file?
Of course, here you go: function injectScript() { const script = document.createElement('script'); script.src = chrome.extension.getURL('bundle.js'); (document.head || document.documentElement).appendChild(script); script.parentNode.removeChild(script); } &amp;#x200B;
and with normal js is it hard?
Not much. Just more verbose. 
You can use querydocument to get elements. Read and write innerhtml and tie them together with onclick function/ event
&gt;ok thx i guess
Of course, here you go: function injectScript() { const script = document.createElement('script'); script.src = chrome.extension.getURL('bundle.js'); (document.head || document.documentElement).appendChild(script); script.parentNode.removeChild(script); } 
Of course, here you go: function injectScript() { const script = document.createElement('script'); script.src = chrome.extension.getURL('bundle.js'); (document.head || document.documentElement).appendChild(script); script.parentNode.removeChild(script); } 
I wish there was a better alternative to Howler. I've used it in a handful of projects over the years, and I always end up writing a wrapper class to convert the event emitter flow to promises. 
Of course, here you go: function injectScript() { const script = document.createElement('script'); script.src = chrome.extension.getURL('bundle.js'); (document.head || document.documentElement).appendChild(script); script.parentNode.removeChild(script); } 
I you like TypeScript, go for NestJS
Thanks . Just for clarity I build an Html only for my own private personal benefit and I have luckily not to worry about clients. Really the Html is just intended as a gui .
Is that what you needed or are you still lost?
Yooo, yeah i get you but you are acting as a client. If its just you you could build a node server that makes the request and generates the html like that. Server makes api request, no problems with cors 
Why not just use regular React with something like Cordova / Ionic / PhoneGap for iOS / Android builds.
Then go run `document.getElementById('someId')` in node (which also runs javascript btw), and see how that blows up in your face. What you're talking about is not syntax, but libraries. Syntax means stuff like for loops, how you create functions, how you create variables etc., which jQuery can't change.
That looks like minified code for something like class extendsStatics extends d. It's not meant to be read by humans. 
Wrong again. Syntax defined: “ the way in which linguistic elements (such as words) are put together to form constituents (such as phrases or clauses)” Yawn... I’m getting bored with you.
Too bad. I'm having so much fun though. And since you like definitions so much, according to the oxford dictionary, syntax can mean &gt; The structure of statements in a computer language. &gt; - https://en.oxforddictionaries.com/definition/syntax You see, programming languages, and spoken languages tends to be built up quite differently, and one normally doesn't speak about the linguistics of a programming language.
Definitely this. JS compiled by stuff like Babel will regularly spit out absolute garbage looking JS. OP, try to find documentation or at least pre-minified code (Usually will be like `lib.js` instead of `lib.min.js`) for the code you're trying to take apart rather than go through that.
My company has a React App that we distribute on mobile via webviews. You can fairly easily have the web app call out to native code. It's straightforward and a good starting point. We've been thinking about react-native, but tbh the current setup works fine. 
Wtf is the purpose of the new `#` token?
I will try this! For the moment I solved my issue with python and headless selenium upon which I save the json output in a file for charting purpose. Thanks again. 
The unary `+` operator converts the value into a number using the standard javascript conversion mechanism.
Definitely minified code. Either ways, you can slowly google the syntax one by one if you are unsure what it means 🙃
There's a process by which non-primitive objects (like arrays) get converted into primitives (like numbers). Unary `+` does this converting to a number type. When converting, the following hierarchy is used to get a primitive value: * call `[Symbol.toPrimitive]()` (if exists) * call `valueOf()` * call `toString()` _Note: `toString` and `valueOf` may be reversed for some string conversions._ When one doesn't return a primitive, the next is checked (though toPrimitive should always return a primitive and will error when it does not). For arrays, there is no default toPrimitive so valueOf is checked first followed by toString. Arrays return the array object for valueOf, so it falls to toString which returns a string representation of the array. This is basically `array.join(',')`. In your first example, what you end up with is: +['10'] or +'10' or Number('10') -&gt; 10 The second example becomes +['10', '11'] or +'10,11' or Number('10,11') -&gt; NaN 
* https://www.ecma-international.org/ecma-262/9.0/index.html#sec-unary-plus-operator * `ToNumber(GetValue())` - `GetValue()` should just return array, `ToNumber()` is the interesting one here * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-tonumber * Should eventually call `ToPrimitive` * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-toprimitive * Should eventually call `OrdinaryToPrimitive` * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-ordinarytoprimitive * Should call `valueOf` then `toString` in order, and take the first result that is a primitive Since `valueOf` returns the array itself which is an object, it is basically doing `+n.toString()` You can also verify this by overriding `valueOf` or `toString` with your own duck type: let x = [10, 100] x.toString = function() { return '-1';} console.log(+x) // -1 
Curious why you made this. * It’s slower than both native and qim. * It uses almost the exact same stringly-typed syntax as seamless-immutable, which may be faster, there it wasn’t included in the benchmarks. * It doesn’t have any kind of property prediction or property misspelling detection like immer or native.
[removed]
I use [https://www.npmtrends.com](https://www.npmtrends.com/) when investigating a lib i like to bundle. Gives you an idea how common it is, how it stands against the competition, how often it's been updated, open issues, etc.
Kindalost
Encryption + Mobile apps would win me over
&amp;#x200B; &amp;#x200B; get used to selecting elements with this: [https://www.w3schools.com/jsref/met\_document\_queryselector.asp](https://www.w3schools.com/jsref/met_document_queryselector.asp) &amp;#x200B; you'll need to give it a click event with something like this: [https://www.w3schools.com/jsref/met\_element\_addeventlistener.asp](https://www.w3schools.com/jsref/met_element_addeventlistener.asp) &amp;#x200B; and update contents of elements with this: [https://www.w3schools.com/jsref/prop\_html\_innerhtml.asp](https://www.w3schools.com/jsref/prop_html_innerhtml.asp) &amp;#x200B; each of the above is a little easier with jQuery &amp;#x200B; if these dont help maybe watch some youtube tutorials to better understand the basics
For lazy devs: Its not published yet and it costs 4 something dollars in presale
ty man &amp;#x200B;
&gt; The less abstractions [...] The easier to maintain. No.
Hi /u/Migueldpd, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/JFedererJ, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dmac2600, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
A nice question to google.
That code is basically checking to see if s function called "\_\_extends" is defined. &amp;#x200B; If it is defined, use the existing definition and if not, define \_\_extends as a new function.
While the topic is very important in my opinion, article just scratched the surface.
[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/String/substring#The\_difference\_between\_substring()\_and\_substr()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring#The_difference_between_substring()_and_substr()) &amp;#x200B; Apart from that, `substr()` is considered a legacy function, and although not deprecated and generally available is not part of the standard.
Unnecessary or premature abstraction leads to more difficult maintenance.
Best solution for right now (in JavaScript) is to take note of the amount of decimals, then to multiply those individual numbers by 100 to get rid of the comma - for example; 100 becomes 10000, 38.34 becomes 3834. Multiply those numbers now. (3834 \* 10000 = 38340000). Take the 38340000 and divide it by 100, and you get 383400. Remember the amount of decimals you took note of? That's how many numbers to treat as decimals in the final result - so, since 38.34 has TWO decimals, so we treat the last TWO numbers of 383400 as decimals too. the final result is 3834.00, or 3834.
Sure, if you don't have any customers who use IE
why
This post comes from a recent talk I did on the internals of Apollo Client. I was frustrated that I did not understand what was actually going on when I was using it so I took some time to delve into the code.
&gt; /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish.
One is deprecated and you are forever cursed from here on to forget which one and have to Google it every time. 
Hi /u/TryingtoAutomate, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/throwmeout12496, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Valachio, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dangerousliterature8, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Neker, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/iceporter, this post was removed. Low-effort content such as listicles, memes, clickbait, etc. is prohibited. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/syntaxrob, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mynetsky, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
That's true, but the callbacks are called after the object literal is evaluated. I used `map` at first and got errors.
Try validating your regex here: Https://regexr.com 
The regex work but I believe it has to do with my function . Is my looping wrong? var rExpressions = /(\[A-Z\]{3})\\.+(\[0-9\]{3})\\#+(\[0-9\]{4})\\\_+(\[a-z\]{2})\\-+(\[0-9\]{4})/; var input = document.getElementById("userInput").value; var inputCheck = input.match(regex); function myFunction() { if( inputCheck){ document.getElementById("output").innerHTML = "Correct Format"; } else{ document.getElementById("output").innerHTML = "Incorrect Format"; } }
The article is conflating abstraction and indirection.
or `\``
Any help would really be appreciated ):
If what you want to do is validate the format \`(3 uppercase letters).(3 digits)#(4 digits)\_(2 lowercase letters)-(4 digits)\` then a possible regular expression is: \`/\^\[A-Z\]{3}\\.\[0-9\]{3}#\[0-9\]{4}\_\[a-z\]{2}-\[0-9\]{4}$/\`. &amp;#x200B; In your regular expression there are several problems, starting from the fact that you are escaping way too much with \`\\\`, but also you are not checking if the whole input matches, but only if it contains the given pattern (I fixed it with the initial \`\^\` and final \`$\`). &amp;#x200B; I would strongly recommend you take your time to learn and understand regular expressions before rushing to a solution to your task. They are a very powerful tool, but trying to brute force your way through them will only frustrate you.
Explanation: `^`: start of line `[A-Z]{3}`: exactly 3 uppercase letters `\.`: a literal dot (`.` means "any character", if you want the dot you have to escape it with `\`) `[0-9]{3}`: exactly 3 digits (`\d{3}` would work too) `#`: literal hash character `[0-9]{4}`: exactly 4 digits `_`: literal underscore `[a-z]{2}`: exactly 2 underscore letters `-`: literal hyphen `[0-9]{4}`: exactly 4 digits `$`: end of line The `g` at the end is a flag, 
Thanks alot and yea I am really new to regex. I actually subbed your regex for mine but my input still doesn't work. For example when I put WEB.110#4101\_sp-2019 it says incorrect format. I believe it has to do with my looping but I can't see what I did wrong. Am I using the .match method incorrectly? 
THis is my js var rExpressions = /\^\[A-Z\]{3}\\.\[0-9\]{3}#\[0-9\]{4}\_\[a-z\]{2}-\[0-9\]{4}$/; var input = document.getElementById("userInput").value; var inputCheck = input.match(regex); &amp;#x200B; function myFunction() { if( inputCheck){ document.getElementById("output").innerHTML = "Correct Format"; } else{ document.getElementById("output").innerHTML = "Incorrect Format"; } }
And my html &lt;body&gt; &lt;br&gt; &lt;form action="#"&gt; &lt;input type="text" id="userInput" size="25" placeholder="WEB.110#4101\_sp-2019"&gt; &lt;button onclick="myFunction()" &gt;Submit&lt;/button&gt; &lt;/form&gt; &lt;p id="output"&gt;&lt;/p&gt; &amp;#x200B; &lt;/body&gt; &lt;script type="text/javascript" src="validate.js"&gt;&lt;/script&gt;
In your example, find returns a number. 0 is also a number but it is falsy, so it will be removed everytime. You could use array.includes: const d = (arr, ...toRemove) =&gt; arr.filter(x =&gt; !toRemove.includes(x)) 
Oh, forgot about 0! Good point, thank you! 👍🏻 I later realized that I could use includes, so I have to update it! 😅
Hi /u/Asiantran98, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
https://jsfiddle.net/Lfz9hopc/ 
Interesting! I'll look into it. No issues with speed that way? 
Thanks for your response. My concern is performance, especially initial app load times. You haven't found this to be a problem?
after more research I'm leaning more towards just having a separate React Native app.
Please supply some context and proper formatting...my eyes are bleeding
Stackoverflow.com
I use React on my side projects mainly on the web and don't notice any significant overhead versus the other frontend frameworks, it's actually very snappy when configured well, and at work I use Aurelia with Cordova, and don't notice any performance hit on device vs on web, still fairly fast (Aurelia is slower than React though in general) so my intuition is React + Cordova should be just fine. But take all that with a grain of salt cause I really have no idea lol
"This post has been flagged for low quality"
[here](https://github.com/SimonItaly/iconping_gnome/blob/master/extension.js), condition line 175 im trying to add a 3rd condition if ping is more than 200 then display "iconko" thanks in advance
Good call, it's not overfitting though. I'm using L2, Augmentation, and Dropout on 300,000 images. I think it's just the subreddits that were in the original dataset. Currently getting other subreddits to bring balance to the force. The source for the model is open, too: https://github.com/GantMan/nsfw_model
[here](https://github.com/SimonItaly/iconping_gnome/blob/master/extension.js), condition line 175 im trying to add a 3rd condition if ping is more than 200 then display "iconko" can you tell me what to do?
You get a gold star. 
Woah. We aren’t in Nazi Germany dude.
Quokka.js has been my favorite thing of all time
Doesn’t load for me, maybe my data sucks
Same here doesn't load even on high speed WiFi 
Loads fine for me? 
Some things I don’t think I saw in the list: - Equity: how much equity is the company offering? Is that amount on par with market or above, given the position and the stage of the company? - Company funding and stage: Is the company well-funded? What’s the stage of the company? Does the stage of the company match my ideal work environment? - Interview process: - Are the people interviewing me the people I’ll be working with? - Do I get to meet the person I’ll be reporting to? What’s their track record? Are they experienced? Do I feel I can respect this person enough to be managed by them? Will I learn from my future teammates and manager?
Old article. Published in 2017. &amp;#x200B; Where's the source code? The simulation on the page is a graphic render and the code in the article defines specific section without showing how it works as a whole.
Hi /u/adriansky, this post was removed. If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Woosh
Woosh
Also not on the list: **javascript**. Which is kind of important for /r/javascript.
Have you tried something like document.getElementByTag(“script”).innerHTML?
Hi /u/pablooliva, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/foxyouu, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ibreathisweat, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
This "problem" will be rediscovered every 10 years or so.
jQuery being an underlying dependency in bootstrap doesn’t always mean that jQuery would be used in the app that uses bootstrap. It’s not being cool as much as a lot of what it was useful for has been factored in to ES6...DOM selection, ajax requests and animation are all handled by better frameworks, and people building their DOM out with React / Vue find less need for a swiss army knife like jQuery
Any codebase using Apollo will be a maintenance nightmare in a few years. I have no good experiences with this library and its ecosystem.
If you wanted to do some operations on the remaining elements, you could use a `.reduce()`like this: const dest = (arr, ...rest) =&gt; arr.reduce((acc, cur) =&gt; rest.includes(cur) ? acc : [...acc, cur], []); (No operations being done here, but they could be.)
No it runs fine on moderate Android devices. Biggest issue is Android webview requires handlers for file input and can't render pdf. They have new Trusted Web Activity that I think might help. I actually don't do the iOS but I feel their webview is better. 
So what if it's old? Super interesting either way
Hi /u/ag425, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Totally. And the simulation is in real-time... not sure about mobile, but definitely on desktop as you can interact with it with the mouse.
There is an app called as SoloLearn - check it out
Try codeacademy
Any reasons specifically for saying that? I was considering building my next side project with it just to learn it.
Constant breaking changes, poor documentation, idiosyncratic dev practices and a for-profit steward. If you decide to use Apollo, it will shape the entire architecture of your application, and you will never be able to get rid of it. I'm imagining a similar scenario to Angular.js where everyone moves to the new hotness and the library dies or they decide to rewrite the whole thing just because.
very useful reference thanks 
SoloLearn it's great! 
Geez, we're just starting it now. Already writing a bunch of wrappers to fix things like optimistic responses. Do you have an alternative graphql client you recommend?
True! Although with filter it feels more cleaner. ☺️
How do you think he could figure out is it -1 or -12 or -123?
The thumbnail looks like if Jim and Toby had a baby.
You're so right
But it seems to be done by inserting something before - sign, and then use split method to make an array Just use regex to achieve this
Hi /u/koby4, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Bruh.
On mobile you can see the interaction based on tilt of your screen, pretty awesome!
I don't think Jim or Toby would use JavaScript. Jim I think would use VB6. He has big dreams and many limitations but despite those limits he still continues to exist in his own happy bubble and succeed in a small way. Toby I think would program in Perl. Generally disliked by some and hated by others. Has a purpose but nobody really cares. 
For what it's worth, I haven't had too much trouble with Apollo. We started using it around version 1.0 and the only frustrating thing has been occasionally documentation has not kept up with the code.
Where do you define \`hashMap\`?
Hi /u/seedlio, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
&gt; That's because it's a Javascript bootcamp Nope, 'cause a lot of stuff isn't available. Maximilian Schwarzmüller has much better content for the same price. 
You can use Babel then
Always use `const`, unless you _really_ need to reassign to the variable, then use `let`. Never use `var`.
As a tip. If you use a linter with a sane preset like airnbnb it usually tells you.
I've tried Solo Learn, Programming Hub and Mimo. If you're looking for free alternative, Mimo is out of picture, they make your pay for almost everything. Solo Learn is great if you're looking to connect with developer community, perfect for advance code learners. Programming Hub is the best choice if you're just a beginner. Not useful for advanced code learners.
Pretty new to JavaScript, right? You coming from Java, or something else? Here's a protip: it's not a "struct," it's an "object literal." And \`if\` and \`while\` aren't really necessary. A few places where I might still use an \`if\`, but none that I can think of where I'd use \`while\`. Let's look at a sort of real-world example for a "compelling" reason to use a pattern like this over \`switch\` (which, like \`while\`, isn't really necessary, regardless of how "primal" it might be). Here's a basic Redux reducer (where a lot of people will reach for \`switch\`), for a counter app: const counterReducer = (state, { type, payload }) =&gt; { switch (type) { case 'ADD': return state + payload case 'SUB': return state - payload case 'RESET': return 0 } return state } Now a reusable function that can create any sort of reducer and plug into your store: const makeReducer = (actions) =&gt; (state, { type, payload }) =&gt; (actions[type] || (() =&gt; state))(state, payload) // or save a function call on the default case, if you're really into that sort of thing const makeReducer = (actions) =&gt; (state, { type, payload }) =&gt; actions[type] ? actions[type](state, payload) : state const counterReducer = makeReducer({ ADD: (state, payload) =&gt; state + payload, SUB: (state, payload) =&gt; state - payload, RESET: () =&gt; 0 }) Lots of reasons to do something like this, and not many reasons \*not\* to do it. Real-world performance (in both speed and memory utilization) are negligible, and worrying about either before you even know if you have a problem is just premature optimization, a common problem with inexperienced programmers. And if you are running into performance issues by passing around more functions, it's almost always a case where you need to rethink what you're doing rather than finding some way to write around a performance issue that you've created by doing something dumb. &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
What this guy said. var created some unwanted side effects. Always use const or let. 
In a perfect world you would use const for anything that you don’t need to reassign to. With const objects can still be modified after creation just not reassigned. Anything that doesn’t fall into this category should use let. However, this is assuming you are working with a transpiler. If for some reason you find yourself working on a project where a transpiler is disallowed then use var for backwards compatibility. Previous to let and const the only way to implement block scoping was through a failed try catch block. While this is what your transpiler is creating behind the scenes the performance difference is indistinguishable. Additionally, it’s worth mentioning that let and const do not “hoist” this can be important to know for function expressions. 
Can you recommend any alternatives?
[removed]
thank you kind friend
Ah wow, publish date is of. I wrote actually wrote the article at most a month ago. You can view the source code through the inspector, source maps are enabled.
Spatial hashmap implementation can be found here: [https://gist.github.com/peeke/e65e8c162a22b21ac9ac9de07a4afeac](https://gist.github.com/peeke/e65e8c162a22b21ac9ac9de07a4afeac)
CodeCademy. I see this slight error at least four times a day.
Wow, I had no idea :D
Perfect answer. 
Yes, the very tool that powered nearly every interactive website until the mid 2000s didn't solve shit. Ok. I'm not advocating for the use of jQuery *now*, but to write it off as a fad shows a lack of understanding of the climate that was happening around it and what led to industry standard practices today.
Try Enki!
Sorry if I missed something obvious - Why not just run the test and when the test is done remove the entry before the next test is fired? 
Love this Peeke, I saw your post on Hacker News some time ago! Have you thought about implementing it in WebAssembly via e.g. Rust? I have been thinking about experimenting with such fluid simulations myself, wondered if you had given the up- or downsides to such a route some thought? Dank, fijne dag! :-)
He can do that, but there are some general rules when it comes to TDD and one of them is that you shouldn't make a real call to your database, even if it is just for development. I'm not sure about Express and MongoDb yet, but the way I'd do it in .net core was to use interfaces and then mock responses, also applying DI would help make the controllers more testable, but since I did not try to apply TDD in NodeJS yet, I can't give you an answer of what is the best practices to do that in NodeJS
Oh shit, what have you done to me, that is some Bernstein Mandela effect shit
It sets properties and methods as private inside a class
is that actually enforced or just the way TypeScript does it (not actually)
I haven't used it. My guess would be that since it's native you'll get an exception if you try to access the value out if scope
If Family is an array, you can just do Family.push. Otherwise, if family is an object, you could do something like this: ``` function pushFamily() { const lastIndex = Object.entries(Family).length; Family = { ...Family, [lastIndex]: { // Mom Dad Son values } }; } ```
`&lt;script async="true"&gt;` being used as a low/high priority entity is _very_ interesting. Something I'm running up against tomorrow in production...
[removed]
Hi /u/ChuckChunky, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt;Rubber. Duck. Rubber. Duck. Penis.
Hi ! * That's true for the version 1.0.0 but we will improve performances in version 2.0.0 ([https://github.com/Zenika/immutadot/pull/332](https://github.com/Zenika/immutadot/pull/332)) * Our stringly-typed syntax supports some extra features like slice notation (to batch operations on arrays) * For the last point you are absolutely right it's hard to achieve it with a stringly-typed syntax
You need to set the Response Type to arraybuffer in your request from client. I think this should solve your issue
I tend to use `mongodb-memory-server` and wrap the creation/dropping of a db as util functions that are then used in test hooks. Something like: const mongo = new MemoryServer({ binary: { platform: "linux", arch: "x86-64" } }); const db = { open: (done) =&gt; { mongo.getConnectionString().then(uri =&gt; { mongoose.connect(uri, {}); done(); }).catch(done); }, close: (done) =&gt; { mongoose.connection.db.dropDatabase(done); }, }; Which can then be used in tests assuming you're returning the promise from your middleware. describe("User", () =&gt; { before(db.open); after(db.close); it("should create a user", done =&gt; { expect(userMiddleware(mockReq, mockRes, mockNext).then(() =&gt; { // test some stuff done(); }).catch(done); }); }); Otherwise you could use the db instance to verify data has been created in the correct way.
I'm pretty much of the same opinion. I've been building a personal project with it on and off for about the past 8 or 9 months and it's been painful from day one, but I'm now so far into it I'm pretty much bound to it despite hating it :( One of the biggest things I've struggled with is how in flux it is in. I've had to rewrite &amp; refactor big chunks of my app every time the latest "this is the Apollo way to do x" has been established. The most notable of which was Apollo link state, which has so much abstraction it requires a 30 minute, fast paced video just to show you how to update a property in your application state (https://www.youtube.com/watch?v=2RvRcnD8wHY). Invariably the docs are behind or very scant so it's hard to implement the stuff they're telling you to implement. I totally get what they're trying to achieve and, when you get it working, it works well, but the development cost is huge and it's so tightly bound into your app that there's (IMHO) very little prospect of migrating away should the need arise. I should add that I was relatively new to React (having come from 3 years with Angular.js) when I started my project, which undoubtedly didn't help, but Apollo has easily been the most painful part of the learning process.
I posted [https://www.reddit.com/r/javascript/comments/atg1vr/migrating\_gumroad\_from\_requirejs\_to\_webpack/](https://www.reddit.com/r/javascript/comments/atg1vr/migrating_gumroad_from_requirejs_to_webpack/). Hopefully, I got it right!
I'm pretty much of the same opinion. I've been building a personal project with it on and off for about the past 8 or 9 months and it's been painful from day one, but I'm now so far into it I'm pretty much bound to it despite hating it :( One of the biggest things I've struggled with is how in flux it is in. I've had to rewrite &amp; refactor big chunks of my app every time the latest "this is the Apollo way to do x" has been established. The most notable of which was Apollo link state, which has so much abstraction it requires a 30 minute, fast paced video just to show you how to update a property in your application state (https://www.youtube.com/watch?v=2RvRcnD8wHY). Invariably the docs are behind or very scant so it's hard to implement the stuff they're telling you to implement. I totally get what they're trying to achieve and, when you get it working, it works well, but the development cost is huge and it's so tightly bound into your app that there's (IMHO) very little prospect of migrating away should the need arise. I should add that I was relatively new to React (having come from 3 years with Angular.js) when I started my project, which undoubtedly didn't help, but Apollo has easily been the most painful part of the learning process.
This is the practical answer. It has to do with scope and consistency
Your code is clean enough to unit test. Why not write a small template that loads a few family items and run a few "for fam in family" style queries that you console.log until you figure out what you want? I use structures that look like what you have displayed quite a bit and even go an extra line var `thisfam = {Dad: "Steven", Mom: "Caitlyn", Son: "Harry"} ;` then `Family.push(thisfam);` \- usually dynamically built from other api calls or something tho...
Is this JS running in strict mode? You shouldn't assign to an undeclared variable.
&gt;Response Type @GamesMint hi, how to change it? [https://paste.ofcode.org/3a9hs46pmL8c57S9TnvfgHs](https://paste.ofcode.org/3a9hs46pmL8c57S9TnvfgHs)
[https://github.com/okeeffed/quizam](https://github.com/okeeffed/quizam) \- small one file basically but any thoughts on how to more effectively create CLI tools or get GitHub repos seen would be great!
You need to send this header from the client side request. https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data
Anything particular maybe?
Looks fine to me depending on what you are doing. Do you need an "identifier" key to make it easy to retrieve objects? Or would you just fetch last family you pushed? I.e. ```javascript const Family = []; Family.push({Dad: "Steven", Mom: "Caitlyn", Son: "Harry"}); Family.push({Dad: "Steven", Mom: "Tracy", Son: "Bob"}); const lastFam = Family.pop(); // {Dad: "Steven", Mom: "Tracy", Son: "Bob"} ``` It might not be that important pending what you are doing and restrictions (eg only one son allowed?) but in that above example where both families have a "Steven", it would mean that it's not as simple as filtering back key words. If you had an id key with unique values that might be easier if you need to filter out a result. If you need multiple sons and daughters then that could be another thing again.
Here’s a vote from someone that loves Apollo, especially over the alternative of Relay. Better docs, more predictable. Even though things change, most api changes aren’t breaking like the person above said. 
Thanks this gives me some ideas.
Yep my team generally is not enjoying the experience now that we have been using it a while and have started running into limits. It's fast more magic and difficult to deal with the cache over just having redux. I see many cases where do many failed attempts and bugs result in devs just forcing a query to always do a network call. 
What A toxic community this place is. No, i'm not new to JS, nor is it my first language. Is it yours? You can stow that hot shit attitude. Why even throw assumptions like that around here. Your example suffers from readability and maintainability. By that I mean it is readable, but it takes a moment. It is maintainable, but certainly will be requiring tests due to its inherent relative complexity. I mean, I see the point you're trying to make, but the task here is a simplified example, and as such, a simplified case statement handles it cleanly. If you're going to throw around hip phrases like "premature optimization", then throw around rule number one: readability. Anybody can write code a computer can parse, but the real skill is writing code that is understandable _with ease_ by your entire team. Self Documenting Code. Of course, if your entire team already writes in this bracket-heavy non-linear style, then that's what you have to work with. But you'll find difficulty transitioning away from Javascript one day to some other language. 
There are a few use cases for var. function someFunction () { if (process.env.dev === true) var ts = Date.now(), fname = 'someFunction' // Lots // of // code if (process.env.dev === true) console.log(`${ fname }: ${ Date.now() - ts } ms`) } 
"Never use `var`" is correct as a first approximation, but not entirely. It may be needed in older code bases that need to run on ES5 browsers without a transpiler step. That being said, that use case is vanishingly small.
How the hell can you say that with a straight face?
Brilliant, I'll be giving this a try soon. Like the look of the page, the circle works really well. 👍
onmessage is the event listener for the web worker so it is defined. if i use const onmessage = etc the web worker stops working
Great idea, but I'm stuck, will be back to solve this later :)
Then why don't you just `let ts;` at the beginning, assign it a value later on when required, and then use it when its properly initialised? Also what happens when you have multiple functions that reference `ts` as a variable name? Keep in mind var ignores scope.
That's just an advert for the app Programming Hub. The post is by Mark Nolan. He works for Programming Hub.
What variable is undefined in the example?
I don't like the fact that it shows the problem, and then on the same screen without scrolling also shows what causes it, it even taunts you to scroll to see it, but you actually don't need to scroll to see the cause, since the author of the website didn't bother to make the height between the sections high enough
You might looking at using [puppeteer](https://medium.com/@raphaelstaebler/advanced-pdf-generation-for-node-js-using-puppeteer-e168253e159c) to generate PDFs. It's fairly simple and you can use anything to generate your HTML. 
Usa chrome in headless mode to print to pdf. You are gonna have to do this on the server, but it works well enough. There are some node modules that already use chrome in headless mode for this exact purpose.
i setup arraybuffer: [https://paste.ofcode.org/34vdxjM4WEazJQXJ7j3a6Ed](https://paste.ofcode.org/34vdxjM4WEazJQXJ7j3a6Ed) but excel is downloaded with: &gt;PK\\u0003\\u0004\\u0014\\u0000\\b\\b\\b\\u0000%nVN\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u000b\\u0000\\u0000\\u0000\_rels/.relsďż˝ďż˝ďż˝jďż˝0\\fďż˝\_ďż˝ďż˝ďż˝8ďż˝\`ďż˝Qďż˝ďż˝2ďż˝mďż˝ďż˝\\u00014\[ILbďż˝ďż˝Ú–ďż˝ďż˝ďż˝.\[K\\n\\u001bďż˝($}ďż˝\\u0007ďż˝v?ďż˝Iďż˝Q.ďż˝ďż˝ďż˝uÓ‚ďż˝hďż˝ďż˝ďż˝\\u001bx&gt;=ďż˝ďż˝@\\u0015ďż˝ďż˝pďż˝H\\u0006\\ďż˝\~ďż˝}ďż˝\\tďż˝nďż˝ďż˝ďż˝ďż˝\*\\"\\u0016\\u0003ďż˝Hďż˝×şŘ\\u0002ďż˝ďż˝\\u0013ďż˝ďż˝ďż˝8\\u0007ďż˝Zďż˝\^'ďż˝#ďż˝ďż˝7m{ďż˝ďż˝O\\u0006ďż˝3ďż˝ďż˝\\u0019ďż˝Gďż˝\\u0006uďż˝Ü“\\u0018ďż˝'ďż˝ďż˝y|a\\u001eďż˝ďż˝ďż˝ďż˝ďż˝Dďż˝\\tďż˝ďż˝\\u000el\_\\u0003EYČľďż˝\\u0000ďż˝ďż˝ďż˝vql\\u001f3ďż˝MLďż˝eh\\u0016ďż˝ďż˝ďż˝\*ďż˝\\u0004ďż˝ďż˝\\\\3ďż˝Y0ďż˝ďż˝ďż˝oJ×Źďż˝\\u0003\\t:\\u0014ďż˝ďż˝\^\\bďż˝\\u001fďż˝}\\u0002PK\\u0007\\bďż˝ďż˝zďż˝ďż˝\\u0000\\u0000\\u0000I\\u0002\\u0000\\u0000PK\\u0003\\u0004\\u0014\\u0000\\b\\b\\b\\u0000%nVN\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0013\\u0000\\u0000\\u0000\[Content\_Types\].xmlďż˝Sďż˝nďż˝0\\u0010ďż˝ďż˝ďż˝ďż˝\*6ďż˝PU\\u0015ďż˝C\\u001fďż˝\\u0016ďż˝ďż˝\\u0003\\\\{ďż˝Xďż˝%ďż˝ďż˝ďż˝ďż˝\]\\u00078ďż˝Rďż˝\\nqďż˝cfgfWďż˝dďż˝qďż˝ZCB\\u0013|ďż˝ďż˝|ďż˝\*ďż˝\*hă»†},\^ďż˝{Vaďż˝\^K\\u001b&lt;4ďż˝\\u00076ďż˝N\\u0016ďż˝\\bXQďż˝Ç†ďż˝9ďż˝\\u0007!Pďż˝ďż˝$ďż˝\\u0010ďż˝\\u0013Ň†ďż˝dďż˝cďż˝Dďż˝j);\\u0010ďż˝ďż˝ŃťPďż˝gďż˝ďż˝Eďż˝M'Oďż˝Ę•ďż˝ďż˝ďż˝ďż˝H7Lďż˝hďż˝ďż˝ďż˝Rďż˝ďż˝ďż˝Gďż˝ďż˝\^ďż˝'ď &amp;#x200B;
&gt; vanishingly small Minuscule if you ask me: [0.43% of all users](https://caniuse.com/#feat=const). 
[removed]
[removed]
It said that onmessage was undefined but it was actually a method within the web worker. See the edited comment above for my solution
0.43% of the public Web. There may be more private apps deployed on intranets.
are you using a vertical monitor? i only designed it with standard horizontal ones in mind, I didn’t want the scroll to be too long for most screens. alternatively are you really zoomed out? 
Disclosure: self-post.
Hi /u/harunonsystem, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
There are several different ways to declare a variable in JavaScript: a = "Hello, world"; This declares a variable `a` and assigns the value `"Hello, world"`to it. There are several downsides to this method. Most importantly, the variable is created in the *global* scope, meaning it is accessible from anywhere at any time after creation. function f() { a = "Hello, world"; } f(); // calling the function creates the global variable console.log(a); // logs "Hello, world" While this looks convenient it is generally considered a bad practice because they can also be *changed* from anywhere at any time which can create unexpected behavior. The second method addresses this: var a = "Hello, world"; This declares a variable `a` and assigns the value `"Hello, world"`to it. But this time the variable has *function* scope: function f() { var a = "Hello, world"; } f(); // calling the function creates the variable console.log(a); // error, variable not accessible from outside the function This is better, but there's still something weird going on: function f() { if (false) { var a = "Hello, world"; } console.log(a); // a is undefined, but no error is thrown } While not necessarily bad, this behavior is not what most people coming from other c-like languages expect. They expect variables to be scoped to the *block* they're declared in. This is what `let`does: function f() { if (false) { let a = "Hello, world"; } console.log(a); // outside the if block, error } Finally, there is still one issue variables declared with `let` can have new values assigned: let a = "Hello, world"; a = "Goodbye"; While not necessarily bad, reassigning variables can make code harder to reason about. This is why most answers here (rightfully) advise to use `const` when you can because it blocks reassignment. const a = "Hello, world"; a = "Goodbye"; // error Please note that it does not *freeze* the assigned value. If you assign an array or object you can still add, delete or modify members contained within.
Very intriguing 
wkhtmltopdf -&gt; its a binary where you just give a url as param and it renders your site in PDF. preferable create a Print like stylesheet for it for better results
Javascript, slowing implementing lodash natively, one year at a time.
[I'm afraid not without a transpiler](https://caniuse.com/#feat=es6-class) But, I wouldn't be too worried about that. The `class` syntax is simply syntactical sugar around a normal function. You can run your code through something like `babel` and you'll get ES5 compatible code. Check out the [Babeljs](https://babeljs.io/) documentation on how to do the transpilation step you might need.
I always have problems using the `endWith` , I always seem to misspell or mis-remember some letter in its name, causing "undefined is not a function"
I'm using a 4k monitor without any display scaling, since my eyesight is very good, the size of 1 tab in my browser is 2009x3840 (Actual space used for 1 html page, not my display resolution)
gotcha, I’ll have to keep bigger / better monitors in mind in the future 
Here's some related self-promotion :-) [`compose-regexp`](https://github.com/pygy/compose-regexp.js/) lets one build complex regexps using a parser combinator API. This is much more maintainable, testable and reliable than passing concatenated strings to `new Regexp()`.
Hi /u/Splugen96, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/idevosm, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MarvinTheWise, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/vladimir-gorej, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/smartmaker, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I thought maybe [optional chaining](https://github.com/tc39/proposal-optional-chaining) might be in this but after looking it up I see that it's still in stage 1. Such a minor little addition to the spec but still very excited to have some cleaner code because of it. 
I wish it was.
Ah okay - in the past I’m pretty sure we’ve used some kind of package that “emulated” DB functions. You described the action with the inputs and passed it the DB schema. 
I'm still holding out for the [bind operator](https://github.com/tc39/proposal-bind-operator) 🙃
[removed]
I was sure flat was added in es2018
oooooh I have not heard of this before but it's pretty cool!! also looking forward to this now as well! Also waiting for [class fields](https://github.com/tc39/proposal-class-fields). They are in stage-3 so almost there!
I don't know how anyone can see a code sample like this: return casper .thenVisit('http://my-url.com/home') .thenScreenshot('body', 'home') ::thenClickInMySection(1, '.foo') ::thenScreenshotContainer('foo') .thenClick('.cancel') ::thenClickInMySection(2, '.bar') ::thenScreenshotContainer('bar'); And still think the operator is a good idea.
&gt; also looking forward to this now as well! Don't hold your breath, it's kind of a joke ;) If you'll notice &gt; Initial commit. 4 years ago And it's still at stage 0.
&gt; And [I] still think the operator is a good idea. FTFY ;)
Plain old http for your graphql calls. Only build abstractions over this when you've copy and pasted something 3 - 5 times.
Agreed. Follow the XP principal of don't refactor until you need to; otherwise, you just wasted time trying to over optimize your code that may never change.
This article is exactly a year old... Any particular reason it's getting attention?
Why would you need to bind a method when you're already invoking it? If you _invoke_ a method, then it will already have the correct context and shouldn't need any binding. This feels like someone used the bind operator where it didn't need to be used just to intentionally make it look ugly. You would only use the bind operator in places where you would have otherwise called bind. const log = console.log.bind(console); - vs - const log = ::console.log;
I guess its a security issue - as you may be unaware that obtaining that value will actually run javascript in your console - which would presumably be a none-sandboxed state? And could therefore be doing a lot of suspicious things?
Nice
Still waiting for pipeline operator - my favorite proposal so far. It's soooooo useful for composing functions. It makes my code looks a lot cleaner and more readable. 
ES2020, and now you won’t believe what you can do with this underscore!
A better example might be const { map } = Array.prototype; const str = 'Hello, world!'; const result = str .toUpperCase() ::map(char =&gt; char.charCodeAt(0)) .join(','); console.log(result); // "72,69,76,76,79,44,32,87,79,82,76,68,33" Array methods work on array-likes but you have to call them against the array-like with call/apply/bind. The bind operator does this automatically with a dot-like alternative
I purchased Wes Bos' course (Advanced React) which uses Apollo. I have yet to get started with it, but I feel like I should look into alternatives for Apollo. Thanks for raising my awareness. 
Haha cool cool, i appreciate your input just the same :)
Cool thanks for sharing. What tools do you use to do all of this? 
[removed]
That's coool, this is something I've had in the back of my mind for a while since there's really nothing accessible for Vue out there. I'm glad you made this! That said I ran into trouble in OSX + Voiceover + Chrome where it said I could display a list, but the keyboard combo did nothing 😅 [https://imgur.com/a/mNfq5CN](https://imgur.com/a/mNfq5CN)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/X9R9hpB.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Hmm. I wonder if it could be toggled off for localhost. 
Nothing revolutionary here, but both `flatMap` and `Object.fromEntries` are going to become bread and butter staples in my code. Super excited. 
I wish there were a proposal for something like lodash's [range](https://lodash.com/docs/#range).
Optional chaining would be transpiled into a massive mess in ES5. With ES6 Proxy it would be much easier to get the desired behaviour, so i guess we will most likely have to wait until IE11 is no longer supported by a majority of projects.
Works fine in Node.js with `isomorphic-fetch`. If you are trying to access their API from a non-NBA domain, you probably don't have access due to CORS. Will need to run your own service to proxy it. 
Nothing special, Android Studio and xcode to build the native apps. React with a node graphQL backend. Next is a great choice though and I would definitely consider using it if I had the opportunity. 
The title describes 90% of my job. I'll add that I've switched over to using the \`amqp-connection-manager\` package as it automatically handles retries/reconnects for the connection to RabbitMQ and the API is a smaller subset of the full \`amqplib\`. Also, if anyone is working on a platform centered around RabbitMQ it's really important to understand the concepts of persistent messages &amp; durables exchanges/queues and really think about whether or not your use case can tolerate lost messages because of the major performance hit incurred.
[Apparently](https://hg.mozilla.org/mozilla-central/rev/c586ab9cae6d139d5ce403b56f980be711e8c73c) there's no configuration for that. But if the code is to be trusted, then apparently you can also invoke the getter by pressing `tab` which is, at least, _closer_ because it's the same key used for autocomplete. I'm on 65 right now so I can't verify that this is indeed true.
&gt; React is actually the more esoteric of the two in terms of naming, but actually offers more powerful functionality (such as my particular favourite, shouldComponentUpdate). Maybe worth it to point out that Vue has less of a need for something like `shouldComponentUpdate`, as it tracks dependencies that are actually used for render and only re-renders when those change, anyway. :)
ES2020, and now ALL companies have finally announced minimum browser reqs that fully allow for ES2015 without the need of transpiling, so look for full support of that underscore ~10 years from now probably maybe!
No...my friend does and he makes a living off coding...If you use Vue for your work and get paid enough to get by and care for your loved ones, then don't worry about it...JS will always be around. 
Just curious, is there a reason JavaScript hasn’t added some of the nice functionsfrom lodash already? Is it to keep the APIs small or other reasons?
Yeah man! I'm sick of having to _.get() for unpredictable API responses all the time!
Right... Just install Node, NPM, Webpack, Babel, and hot reloading, and wait for your JavaScript to recompile after every little change instead of writing `var self = this;` Some people don't want to deal with that whole Node ecosystem.
yeah I don't use it because I looked at it on Babel's "try it out" REPL thing and I did not like the output. But yeah, I also like Proxy. I like using `lodash.get` so I can replace that with Proxies 
debugging is a pain in the ass and semi colons are mostly useless 
I'd log a bug if you haven't already. Like other code hints this shouldn't steal focus from the console but still allow you to hit enter to invoke (IMO) 
https://reasonml.github.io/
As a developer you also very rarely have the ability to pull in every single js library you want. Often times, you are on a team of other developers and sometimes working with legacy code. If you are restricted to vanilla js - as a lot of folks are - you can't depend on ES6 features if they aren't implemented in the browser.
If your question starts with "Am I the only one..." then the answer is always "no".
Proxies can't be fully replaced https://babeljs.io/docs/en/learn/#ecmascript-2015-features-proxies &gt; Due to the limitations of ES5, Proxies cannot be transpiled or polyfilled. See support in various JavaScript engines. But you can get pretty close
I feel you. As an Aurelia developer I tend to feel alone in that as well.
\&gt;I'm just not sure it needs to be blurred Don't you understand? We're witnessing the advent of Shariah-compliant AI. 
Hi /u/MarekTheWeeb, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/knock_on_wood_yall, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/snifty, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Mugendon, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/DaBaDaDee, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/bultack, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/rubizza, this post has been removed. We already have a weekly [Showoff Saturday](https://www.reddit.com/r/javascript/search?q=showoff&amp;restrict_sr=on&amp;sort=relevance&amp;t=all) post, please either review the past posts, or wait one whole day for this week's edition :)
Hi /u/Knox316, this post was removed. Low-effort content such as listicles, memes, clickbait, etc. is prohibited. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/brittlebonesbjj, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dfam02, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/quwer, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Good one. How do you come up with such witty quips?
Project Page (?): https://github.com/nosir/cleave.js *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Well... Yeah, that’s a good point, I have been dealing with a webpack configuration file for 3 days and it surely slows down the process but there is a bright side — once you’ve done all these configurations you don’t have worry about IE aaaaand about some other boring stuff. But it definitely slows down the process of real working. Shit. I’ve been fucking with webpack for 3 days what the hell am I doing with my life 😂
Just played with the demos. It's not only clean but semantically beautiful. Will be incorporating in my next project!
Eh, once IE11 does and Edge adopts Chromium, things will start moving a lot quicker. 
I'll be honest. As a Redux maintainer I'm very biased, but the snippets I've seen for `apollo-link-state` doesn't make it look like it's any less "boilerplate"-y than Redux usually is. I appreciate that the Apollo folks have come up with some useful-looking abstractions for working with GraphQL endpoints, REST endpoints, and arbitrary local client state all using the same syntax, but it doesn't look like `apollo-link-state` is really an improvement over other options for managing client-side state.
I'm deeply disappointed they didn't opt for \`Array.prototype.smoosh\`.
It's not particularly well named. Showoff is generally a term used for something you did. I wasn't asking for showing off. But you know, the hardest two things ~~in computer science~~ for computer scientists. Ever thought about how this kind of removal makes somebody with impostor syndrome feel? Just curious.
&gt; It's not particularly well named. Suggestions welcomed. &gt; Showoff is generally a term used for something you did. I wasn't asking for showing off. Did you read the text that accompanies those posts? Did you find or create something cool this week in javascript? Show us here! &gt; Ever thought about how this kind of removal makes somebody with impostor syndrome feel? Just curious. Huh? I'm not following your logic.
&gt; once IE11 dies Good luck with that. It would cost companies billions ot upgrade their intranets, and they have no intention of doing so. It will only happen once MS pulls a kill switch. 
Crazy stuff! I'm a little humbled to realize quite on how many shoulders of giants I'm standing. If that's even a real sentence.
Another article misrepresenting ES2019 (ES10) features. For a correct list see http://2ality.com/2018/02/ecmascript-2019.html
Feelings. They're inconvenient and illogical, but yeah, they happen. This was my first post in this community, and probably one of my first anywhere. I'm asking if the value you get from taking it down makes the fact that I feel chastened and unwelcome now worth it.
&gt;for &gt; &gt; is usually faster than forEach is always faster :-)
Show Me would be better than Showoff. It would encompass both types of posts. YW.
Plus, that 2^53 typo is hilarious. &gt;BigInt is a built-in object that provides a way to represent whole numbers larger than 253, which is the largest number JavaScript can reliably represent with the Number primitive.
hhhmmm, do you actually read post or you just jump into comment &amp;#x200B; You don't read where the post said some features?
&gt; Here, I am going to roll down some of the features added in ES10 Suggests that all of the features listed are in ES10 and that there may be additional features not listed. However, this list contains features that are not in ES10. 
I'm sorry, but if me removing your low-effort post hurt your feelings or triggered imposter syndrome, then I can't do anything about that. We have content guidelines because with 500k subscribers, this place would quickly devolve into a never-ending stream of beginner &amp; help posts -- posts that [our users wish not to see](https://www.reddit.com/r/javascript/comments/6waspe/do_we_need_a_javascripthelp_subreddit/). Like /r/jquery. Please, take just a minute to peruse /r/jquery, and tell me how much new &amp; exciting content you see there? That's what a low- (or un-) moderated experience is like. And before you take issue with the "low effort" comment, please realize that this entire subreddit is dedicated -- in part -- to showcasing new &amp; exciting things in the JS realm, so it comes across as you wanting us to give you an executive summary because you can't be bothered to browse the existing posts. If you need more content, keep hitting that `next` button at the bottom of the page.
That's a good suggestion!
So 2025
Examples in the Post?
this looks nice. I especially appreciate how unobtrusive it is. As soon as I saw the title, I was already feeling ragey because a lot of sites do this auto-formatting stuff in ways that feel awful, as if the app is performing an action you never told it do, even going so far as to change the style of the input element itself. This feels much nicer.
If you have to care about some corporate intranets, you're at the wrong place.
- BigInt - stage 3 - string.prototype.matchAll - stage 3 - globalThis - stage 3 - Hashbang Grammar - stage 3 - ES10 Classes: private, static &amp; public members - stage 3
I don't see what that has to do with my point that IE11 is sticking around for a while. 
I'll add couple of more advises: \* aldo asyncs and promises got recently faster, nothing beats classic callbacks (and will never do since promises are objects - it was so bad idea to use it for asyncs) \* var i = 0; for(; i &lt; 10; i++) {} is faster then for(var i = 0; i &lt; 10; i++) {} \* var i = 0, l = text.length; for(; i &lt; l; i++) {} is faster than var i = 0; for(; i &lt; text.length; i++) {} \* many of ES6 sugar is much slower then classic JS equivalent \* wrap your code in self executing function: (function() { /\* your code here \*/ })() \* use typed arrays if you can \* Class Something{ constructor(){} fun1() {}}; let a = new Something; is up to 100 times slower than function Something() {return { fun1(){} }}; let a = Something(); // let a = new Something() will also work here \* use inline regex instead of instantiating it with Regex method from string &amp;#x200B;
Hi /u/WebDevJourneyWDJ, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Like most devs I also stuck to the name ES6 and refused to use ES2015 - Eich's name change so late in the day was frankly ridiculous and assholish. But now enough water has passed under the water, I don't see any value in using names such as 'ES10', it's not official and will just confuse everyone. In fact, I find I am using ES2016, ES2018 etc to refer to the official releases, and ES6 as a generic 'everything that came after ES5'
great wonderful
Take a look at KotlinJs' output. Optional chaining gets transpiled just like you'd think. return (this.transitionIndex_0 + 1 | 0) &lt; ((tmp$_1 = (tmp$_0 = (tmp$ = this.currentState_0) != null ? tmp$.transitions : null) != null ? tmp$_0.length : null) != null ? tmp$_1 : 0); Beautiful.
Check library for developers and create your smart-contract on Credits in a few steps! - **https://developers.credits.com/**
All things have the potential to be used poorly. With great power comes great responsibility.
Thats fair. Sorry to have crossed any lines! 👍
Thanks. I will look for that talk about Braid.
Looks pretty slick! I think I found a bug. In the first input under "Date formatting" I'm unable to backspace on mobile (browser: Firefox Focus 8.0.8, phone: Samsung Galaxy S8) For some reason it doesn't do it every time, but to reproduce you can type "999999" then backspace all the way. The bug seems to happen pretty consistently on the second time.
Oh man, I remember when async vs defer script tag attributes were new, and everyone talked about it like it was a big deal you had to know. I totally forgot about them, and haven't heard mention of it for so long.
Awesome. Nice to see this spilling out from the blockchain dev world /r/ethdev etc into /r/javascript. Well done.
Hi /u/n8jadams, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yeah, in irrelevant for sane people corporate environments. 
Yeah, there was a lot of effort in that post. Venturing into a new community is not as easy for some as it is for others. But you go ahead feeling no responsibility for the way you treat people, because that seems to have gotten you this far. &amp;#x200B; I didn't expect an executive summary, but thanks for your assumption. It's a higher bar to post a new post than to comment on somebody's. So if you saw a cool little thing that was interesting, it probably wouldn't warrant a full post. But you might throw it up on a compilation post. I am very sorry for not already being part of your sub and knowing the rules. This kind of welcome, though. Keep it. Don't worry, I won't be back. Because rather than trying to understand what I'm saying, you have decided to further insult me. That tells me everything I need to know about your precious sub. See ya! &amp;#x200B;
Didn't know how much I needed this until now
most of your advice is wrong, or rather outdated. i recommend you re-run your benchmarks. for instance, length caching hasn't been beneficial for the past 5 years. declaring the var outside of the loop init has no benefit. you shouldn't use inline regex inside of loops, which re-creates them, too. if you're initializing them once, then inline vs new Regexp will have no measurable difference. V8 since years ago no longer de-opt try/catch blocks: https://v8.dev/blog/v8-release-56
How about Array.prototype.munge() ?
Been using cleave for almost 2 years. Best input mask I’ve found. 
Not at all. We have stable userbase and high conversion rates from IE11 in our online commerce company. Those weird XP users make us enough money to reason the upkeep.
Thanks for pointing that out. I'll look into it. There are still a couple accessibility things I want to hopefully iron out with different screen reader/browser combinations.
The demo 404s for me
And now, suddenly I'm hoping for a `Date.prototype.mooch`
Is this blog post a year old? The url includes `2018/02/`
Really? Dang. I’m considering moving the demo to a different host because Github pages has a hard time with SPAs.
Yeah but the default should be that if a site isn't supported on a modern browser to downgrade, not to use ie11 for all browsing. That way, you're only supporting legacy browsers for BAU
As round is rather difficult you could make a slightly smaller bounding box inside the coin graphic and test that one for collision. Read Box when you are doing it in a 3d space.
Circle or sphere distance tests are the easiest and often the best. If you have a player and coin object with `{x, y}` and `radius` properties: /** Distance between two 2D points */ function dist (p1, p2) { const dx = p2.x - p1.x const dy = p2.y - p1.y return Math.sqrt(dx * dx + dy * dy) } /** Returns true if the objects are colliding */ function hitTest (obj1, obj2) { const d = dist(obj1.position, obj2.position) return d &lt; obj1.radius + obj2.radius } 
It's an older post recently updated: &gt;Update 2019-01-29: The feature set of ECMAScript 2019 is now final (source) and described in this blog post.
*Wooo* It's your **13th Cakeday** snifty! ^(hug)
You’ve actually got it pointing to the wrong place, it should be pointing to github.io, not github.com http://n8jadams.github.io/smoothr-demo
Omg. You’re right, thanks for the catch!
Very well written! Definitely going to try this with a react app.
Riding with the recent technology is what every developers should learn to do, ES10 was introduced to add additional feature to the language, it doesn't stop you from combining both 
GTFO
Your asking a CSS question on a /r/rails subreddit and then cross-posting to a /r/javascript subreddit?
Indentation space should always be consistent. Idk how this is still such a debate for certain people, this has been considered best practice for years for almost every reputable large software company. Anyone who says tabs are better than spaces isnt holding an odd opinion -- they are wrong. Hell even all the Microsoft devs I've worked with dont even use tabs...
Yes, and even easier you can pull code, format it to your liking, and then checkin post-formatted code. 
Project Page (?): https://github.com/oguzeroglu/ROYGBIV *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
!RemindMe 1 day
I will be messaging you on [**2019-02-24 01:14:01 UTC**](http://www.wolframalpha.com/input/?i=2019-02-24 01:14:01 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/atlrg2/cleavejs_format_your_input_content_when_you_are/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/atlrg2/cleavejs_format_your_input_content_when_you_are/]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Can you try it with just a keyboard and not a mouse? When I tab into the phone number for example it isn't intuitive how to select the country because it's not clear that the country name is focused. 
Thanks. And thanks for the exact same link posted 3 days ago.
I like it for the most part, but I think that not expressing the grammar formally cheats the reader a bit. For example, balanced parentheses: S -&gt; ( S ) | S S | ε
No problem!
First, you're right. I considered getting into grammars and production rules, which would have dovetailed nicely with pattern matching, but it was already verging on a novella, so...
Out of interest, why are you super excited by `Object.fromEntries`? I took at look at the examples on: http://2ality.com/2019/01/object-from-entries.html but a lot of the examples there are more difficult to understand than just doing a basic loop. E.g. function findKey(object, callback, thisValue) { for (const [key, value] of Object.entries(object)) { if (callback.call(thisValue, value, key, object)) { return key; } } return undefined; } vs function findKey(object, callback, thisValue) { for (var attribute in object) { if (callback.call(thisValue, object[attribute], attribute, object)) { return attribute; } } return undefined; }
Hi /u/adik100, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Pretty drunk rn but this is beautiful
The sad thing is there's a good point in this article. It reminded me, for example, of this quote from Robert Martin's agile book: &gt; An XP team makes its designs as simple and expressive as they can be. Furthermore, the team narrows its focus to consider only the stories that are planned for the current iteration, not worrying about stories to come. Rather, the team migrates the design of the system from iteration to iteration to be the best design for the stories that the system currently implements. This means that an XP team will probably not start with infrastructure, probably won’t select the database first, and probably won’t select the middleware first. Rather, the team’s first act will be to **get the first batch of stories working in the _simplest way possible_. The team will add the infrastructure only when a story comes along that forces it to.** The reason that's a sad thing is because the article's title -- the over-the-top, cliche, and wildly inaccurate title -- immediately triggered a negative reaction for me.
Hi /u/iRelevant_, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Phaser would be better, also typescript supported
There's a bug in the numerical input. If you add a letter, it starts adding extra digits into your input. It looks like its copying the last digit you entered
Hi /u/MegaMadness, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/One-Reborn, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/skydivesanta, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
[removed]
Put it in GitHub.
No Array.prototype.prototypical() ?
If it's between bind and pipe, then I'm in on pipe 100%. I used to be really excited for `::`, especially when I wrote a lot of react code, but now I just want less usage of `this` in general. `::` would just make that worse.
I was just showing my GF that and she was like "oh...uh...neat?" I thought it was super cool. Might be old but it's new to me. 
Especially since the annual changes post-ES6 are so small it makes sense to go by year instead.
First you want your equality check to be == or === so day === ‘Sunday’ One = sign means you are assigning that value.
yeah, exactly
Holy crap, I had tried to fix that equals so many times, but I thought the GT or Equal to was fine, that may have had something to do with my issues earlier in the prep as well. Thank you so much, been losing my mind this week.
Why not just apply simple logic when the field loses focus or the current selection changes, check if the field.length &gt; 0. If not, alert, otherwise do nothing. 
! Remind me
That book is from 2014. Things have changed quite a bit since then. The biggest change was probably ES6/ES2015 in 2015. jQuery isn't that popular for new projects anymore.
I should have read the reports regarding these new developments. *facepalm*
This is really cool! Definitely starring it &amp; using it in my next project.
Can we include this angular (version 4)?
Hi /u/luisjalvizo, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; what I'm trying to do is to only action if the required field you were on is exited without entering any value. Listen to the `blur` event on the input field. Have the even handler check the value of the input. If it's empty or contains only spaces/tabs, determine the input field name/type then populate its value with the default value. PS) you should have the Adobe's JavaScript developer documentations. Get them from below if you don't have them yet. https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/AcrobatDC_js_developer_guide.pdf https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/AcrobatDC_js_api_reference.pdf
So am I, but I can't seem to replicate this issue
This almost made sense to me. I don't have enough knowledge of javascript. &amp;#x200B;
jQuery doesn't seems like a good idea in 2k19. I haven't read any kind of JS book, but in one of my course in uni, they used Secrets of Javascript Ninja. I didn't need it because I already knew js pretty well while I was taking the course, but my classmates told me it was pretty good. That should give you the bases for js development. Then, you can move forward into a JS framework/library. My recommendation is to learn the basics of Javascript, mostly ES6, then go with Vue, then to React. Regards
I looked into it. It has an open issue on GitHu. It has to do with the Samsung keyboard's predictive text 
*Hey just noticed..* It's your **1st Cakeday** exnikeboi! ^(hug)
All the path related code should make proper use of node APIs instead of splitting and joining on custom delimiters.
Thanks for the feedback! As in Node 'path'? I'll have a look after dinner and make the changes.
Ah yep found a good resource https://shapeshed.com/writing-cross-platform-node/#paths I'll check this and other CLI repos to see what everyone does.
perhaps Drawing could be renamed Artful?
[removed]
There’s a link to the angular plunkr in the playground section. 
Hi, that Looks good so far, can You disable dates in the Date Range Pickerl?
Yes you can! check disableDay props you can check it through the storybook. thank you
Sorry, I found so many questions when I searched this sub for an answer that I didn't think it was forbidden. I missed the guidelines link on the right panel :/
It works well with react. Been using it in apps for almost 2 years now. I don't use their pre-built component though. Just a simple ref and away we go!
I need n-pass for bad variable names. like idk if naming child workers as slaves is culturally appropriate
If you are only looking for number formatting, take a look at [autonumeric](http://autonumeric.org/). It's very powerful.
idk the way she grabs his chest with her fingers like that, and he seems to like it by sticking his tongue out of his mouth, also too much pink skin. I think it’s a grey area at best, I would have probably assumed it was at first glance.
What about hospitals? IE10... 
I cant use these js dom based editors bc the inertia scroll lags and triggers my ocd (at least it did on my old laptop) that’s why I stick to the (unregistered) version of sublime text. 😂
Yeah I saw that, but for the new angular there seems to be no support
Maybe try https://eloquentjavascript.net Its free
Hi /u/imfunniee, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Looks like a nice helper utility, but for what it's worth it's simple enough to write that you can drop the dependency. At the simplest level you can produce a range like this: ``` Array(5).fill(undefined).map((_, i) =&gt; i); // [0, 1, 2, 3, 4] ```
Hi /u/Yettt987, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hot damn, it even knows that Norwegian phone numbers have different formatting for cell phones and land lines. Cell phone: 900 00 000 Landline: 30 00 00 00
Yea, I created and released [GitPress.io](https://GitPress.io). Built with Koa.js and NodeJS.
You can thank [libphonenumber](https://github.com/googlei18n/libphonenumber) for that one.
Cool! I think it definitely wouldn't hurt :) I'm not fluent enough in any languages that compile to wasm though. Performance wise, I think the main win to be made would be to apply gpgpu (general purpose gpu) to move all the calculations to the video card. 
You are missing the point, I am talking abut the name. There is no 'ES10'
This looks amazing! Thank you for sharing 
Seems like this is perhaps a larger conversation. About why use more modern/more functional syntax in favor of more traditional patterns. Let me say first of all, this is all personal (or team) preference. If you can write readable code with for loops, go for it. But personally, I do see a lot of advantages in newer syntax. In the first example `pickKey`, you are comparing a traditional `for..in` loop to `for..of` with `Object.entries` and destructuring. There isn't a huge difference obviously, but the latter option seems plainly superior to me. The term `value` is simply more descriptive and readable than `object[key]`. The `pick` example is a better illustration of a scenario where I might use Array methods on an object (and therefore use `Object.entries` and Object.fromEntries`). It gets to the heart of _ declarative_ vs _imperative_ coding. The for loop is imperative. You are specifying _how_ you want the code to operate. A for loop is a process, it has no semantic meaning of its own. In order to understand that code, you essentially have to "compile" it in your head. But the filter example is much more declarative. What does filter do? It filters something. How? Who cares. Let the people writing the interpreter worry about that. Aside from abstracting away some unnecessary detail (and therefore removing some opportunities for typos), this has an immediate semantic meaning in your mind. The filter version literally says exactly what it does: "I'm going to filter an object down to key/value pairs that are included in this array of keys". If we had a better way to chain the three functions we're using (like the `|&gt;` pipeline operator), I could write the whole thing in one succinct statement: function pick(object, ...keys) { return Object.entries(object) .filter(([key]) =&gt; keys.includes(key)) |&gt; Object.fromEntries; } And that is how I prefer to write code whenever possible. Just a pipeline of declarative transformations to data. It's shorter yes, it's also less error prone, but most importantly I think it is much more readable. You may be really used to compiling for loops in your head to pull meaning out of them. That's a skill you've built up, and there is no reason to abandon it necessarily. But I think if you are starting from scratch, a declarative approach is plainly more readable.
VSCode isn’t JS Dom based 
[removed]
Interesting, thanks a lot for the detailed information. I considered it came down to personal preference over declarative vs imperative coding and, as you say, it's possibly just the fact that I've always generally reached for loops and stuff to iterate over data. Though I do try to use declarative style where it makes sense, but personally I often find that your essentially looping over data multiple times, in different closures, when you could of just kept a flat code structure and done multiple times inside of a loop. The loop also easily and visually gives you an idea of exactly how the output is going to be structured. In the pick example with `entries` and `fromEntries` for me, at least, it's visually harder to understand why you need to essentially pipe from one format to filter then back to the other, it seems like unnecessary operations and the complexity of it is hidden. Though I do totally understand that seeing the word `filter` alone is enough to describe what it's doing, for the most part. I don't even like shorthand functions, it's harder to understand a big block of code which lots of syntax `() =&gt;` complexity. Maybe I'm just a bit of a grandad. 
Hi /u/CommercialLunch20, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi. For the javascript language only, if you like interaction course, try [https://www.codecademy.com/catalog/language/javascript](https://www.codecademy.com/catalog/language/javascript), the free part is enough. &amp;#x200B; But for everything we need to know (at the time we need to use it in most cases), I have to recommend [MDN](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript). You will get everything you need there which help developing web/nodejs programs.
Mobile Firefox?
I teach an Introduction to Web Development with React class, and I use Duckett's book (and his HTML/CSS book) as textbooks for my class ... even though I taught the course for the first time last quarter ... and even though the book doesn't have React. Why? Because there are no good "Intro through React" books out there, and Duckett does by far the best job (I looked at *many* other books) of explaining the fundamentals of Javascript. His heavily visual style helps explore all of the concepts in a way that's *way* more accessible than any of the alternatives. Does it lack arrow functions and other ES 6 niceties? Yes, but so what, those are easy to learn. Does it teach jQuery? Yes, but A) you can skip those parts, and B) jQuery is still a very viable choice (arguably THE correct choice) for simpler/non-SPA sites. In other words, if you're trying to learn Javascript I won't say that a book is the best way, as there are tons of great online lessons and schools available. But if you're going with a book, I honestly think Duckett does the best job of explaining the fundamentals of any book out there.
First off, Vue then React? Huh? But more importantly, jQuery is absolutely still viable. Not every site is a crazy complex "Single Page Application". If you're building an SPA of course you want to use Angular/React/Vue, but if you're building a simpler site or even just a single web *page* jQuery is by far the easiest and best tool available ... even today.
Hey OP! You can try freecodecamp for some basics and if you wanna dive into it more there's a free online book called Eloquent JavaScript. Hope this helps!
The new developments are not a big deal. Yes it is cool that you can go from doing: function add (x, y) { return x + y; } to: const add = (x, y) =&gt; x + y; But there are like a trillion ES6 tutorials and articles out there, and you can learn that stuff easily and quickly (every web developer from before 2015 managed it just fine). What's hard is learning the fundamentals of programming and JS, and Duckett does an excellent job of explaining those. Learn everything Duckett teaches in his book and I guarantee you'll pick up the ES2015/ES6 stuff in under a week (*maybe* two if you count ES2017 async/await and you didn't fully grok promises before).
What you're missing is an alternative. Yes this book is from 2014, but it still does the best job of explaining JS fundamentals. I've looked at *a lot* of JS books out there, and none of the (few) that cover ES6 do half as good of a job of actually explaining the fundamentals. Now if you could suggest a magical book that includes ES6 AND is just as easy to grok asDuckett's I'll totally change my tune, but until then don't shoot down the best option when you don't have a replacement to suggest.
If you can afford to buy a course, then buy this course: https://www.udemy.com/the-complete-javascript-course/ Jonas is one of the best instructors on Udemy and that course will definitely help you a lot. If you can't afford to purchase the course, then pirate it from here: https://www.freetutorials.eu/the-complete-javascript-course-build-a-real-world-project-2/
After you get a basic understanding I recommend looking up Bitovi on YouTube and looking at their front-end training playlist. The first 11 or so take a deep dive into JS at a base level. I would post a link but I am on my phone and it is easy enough to find. Source: used to work for them
Also, once you understand a bit, putting it into practice is important. https://www.codewars.com/ Is good for this.
Are you sure everything is loaded ? You need to wrap it in a load event callback : https://developer.mozilla.org/en-US/docs/Web/Events/load When firing from the scroll callback, as scroll happens after load, it's working fine. 
Thanks for sharing! I don't really have any experience from his courses yet but will definitely look into his course as well. Again, thanks. 
Prototypal
Hi /u/Zaneta_Owusu, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Rakib-Bahadur, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/enmanuelduran, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Tyler_Potts_, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/erezson, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ForsakenM45, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/cagestrike, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
When I wrap everything in a load event callback it works, but still, when I move a getElementById line outside load event I still get error mentioned earlier
Hi /u/Particlexxx, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/stayw0kefam, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Sorry my bad. I thought this was the learnjavascript subreddits 😉
Out of curiousity wouldn't this make more sense as a generic input-&gt;output library: "5551212" -&gt; "555-1212" ; "555" -&gt; "555-" Or is there deeper integration with the input field, event capture and such?
Not having another book to recommend doesn't make that book not outdated.
Wrote an article on reducer organization [https://itnext.io/reducer-organization-taking-a-step-further-4aba7af755d6](https://itnext.io/reducer-organization-taking-a-step-further-4aba7af755d6)
Yes, I looked thru public APIs listed here, https://github.com/toddmotto/public-apis, and came across jService.io which has Jeopardy clues and answers. So I made a simple one page Jeopardy like which can be found here Http://Kreloc.github.io/trivia.html 
leeoniya just reruned my tests on nodejs (didn't check on browsers) and in that case you're right with 'for' loops, try-catch still slightly slower then no try-catch, and you shouldn't do any regex inside loops, not only inline ones
You should look into using the twitter API to pull in all of his tweets and convert them to quotes. 
There are technologies to create a kind of hash value for different types of media, like audio or video (not a simple md5 over the data of the file). Large video sites like YT do that already by using huge collections of hashes of copyrighted stuff. Not the EU will force every small site to do the same, at a enormous cost for a small site. So its likely that even more European web companies will die very soon, sadly. But that's just business as usual here in Europe. I've been doing "internet stuff" here since the mid-90s, and the laws have always been in a way to create uncertainty and unnecessary risk for web companies. The result is that there are hardly any large European sites on the net. Its all American, Russian, Chinese, etc.
Just published a post about how to separate config from code in client-side JS bundles, so you can promote the same exact bundle across environments. Draws upon 12-factor ideas but doesn't try to force the ones that don't make sense in a client-side context: [https://stuartsandine.com/js-bundle-across-envs/](https://stuartsandine.com/js-bundle-across-envs/) 
And it also doesn't prevent that book from being the best available option.
Yup that's it. The official docs are actually pretty good.
I just started using \`vue-cleave-component\` two days ago which is a port of Cleave.js into Vue JS. We are using it for credit card entry. It's amazing because it handles American Express and Diner's Club which have different formats than the standard CC template of XXXX XXXX XXXX XXXX. Took me like 15 minutes to bang the library in there and install a wrapper around it to get everything I need. It also has this baller on-change handler which runs when Cleave.js detects the card type, so it took me about 2 minutes to create a feature that adds an icon for whatever credit card type the user is entering in. For example, if the credit card starts with \`4\`, then the Mastercard icon appears instantly. Totally recommend/10 I also scoped out the code, and Cleave.js is well-written. Credit card formatting is a serious technical challenge that I gladly delegate to a library rather than dealing with backspace/editing and cursor position and mobile device nuances.
Alright, thanks
Hi /u/maximobelen, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It doesn't even cover basic stuff like classes or how scope works. I'm not sure why you're shilling that hard for that book.
I have thought about that however a lot of his tweets are not suitable to be quotes by themselves. They need context.
You could pull them in and then have some sort of voting system so if a tweet gets 5 upvotes then you would deem it relevant and have it added to the database. 
Please provide a codepen, stackblitz or whatever so we can better understand and diagnose your issue. 
Redis, Mongo &amp; MySQL? That's a bit overkill IMO. 
I think I found something that works with an anonymous function...I'll leave it here in case anyone else happens to find this thread: let zoomy = 1; setInterval(function(){ camera.zoom = zoomy; console.log(zoomy); zoomy -= 0.01; }, 10); 
Oh, my bad for not realizing I posted this as a post and not a link, thanks for realizing about this, won't happen again, fixed by posting as link [https://www.reddit.com/r/javascript/comments/atyzzo/a\_simple\_example\_on\_how\_to\_use\_dynamic\_imports/](https://www.reddit.com/r/javascript/comments/atyzzo/a_simple_example_on_how_to_use_dynamic_imports/)
[https://edge.alluremedia.com.au/m/l/2015/08/multihammer.jpg](https://edge.alluremedia.com.au/m/l/2015/08/multihammer.jpg)
Because it's a good book, like I keep saying. The fundamentals of JS don't just go out of fashion, nor does a book which does an excellent job of teaching those fundamentals. First off, modern JS developers should NOT be using classes, period. JS was not a language that was designed for classical inheritance (classical OOP was shoehorned into a Scheme-derived/prototype-based language at the last minute by Brendan Eich because everyone thought Java was going to take over the web ... and look how that turned out). And second, who cares about how `const` `let` scope works? It's *trivially* easy to learn both once you've mastered the basic concept of what a variable is and how `var` variables scope by function. You still haven't provided any alternative book, so basically you're screaming "this book is trash" ... while completely ignoring that it's *still* the best book on the market for teaching JS fundamentals.
Good idea. I made the comment on my lunch break, but I can do that now. 
Yes, but specifically an app called Firefox Focus. It's a light-weight Firefox that defaults to private mode. 
To everyone upvoting this I have a simple challenge; provide the name of one book that includes the ES6 changes and which teaches JS well. After all, if every book published from 2014 is inherently terrible and bad, it should be *easy* to provide the name of just one book that's come out since then, done at least half as good of a job of explaining things, AND includes ES6 ... right? Or maybe, just maybe, someone who teaches a University of California course on this topic has done exactly that, and looked at the options, and there are no good ones that teach ES6?
I liked this, just wanted to say thanks.
&gt; First off, modern JS developers should NOT be using classes, period. Most do. Note that this isn't an either/or situation. It's a multi paradigm language. You can freely mix and match things. This is one of the few things which are good about JS. &gt; a little old It's almost as old as IE11.
&gt; To everyone upvoting This thread was removed. It's just you and me down here, buddy.
I've been seeing this and similar examples of dynamic imports, almost all of which use component \_state\_ to store the dynamically imported component. While this might not cause a syntax error, isn't it clearly an anti-pattern? Shouldn't state be used exclusively for maintaining, you know, the \_state\_ of the component? I would expect that, for example, the state of a component would be the place you could look to see if the button is clicked or not, assuming it's not a momentary-style button? (I.e., it stays "clicked" once you click it. As in the example.) Storing a component in state produces fragrant code smell for me.
I guess the real problem I foresee with the pattern in the example is that it is completely useless for an application-size codebase. As in, you have more than two components. The second you get into front-end routing or SPA-style applications, this pattern would have components with state that has components whose state has components etc etc until no one anywhere can tell whether something will render or not.
Going OTT on the Super Ellipse example - [http://mjp.co/js/super-ellipse/](http://mjp.co/js/super-ellipse/) 
Is that not the purpose of the menu bar?
I'm starting to work on learning this kind of stuff so sure. I'll sign up.
What menu bar?
You are definitely right that `entries` and `fromEntries` are themselves imperative. They are an implementation detail that don't add any information about what the code is doing. The reason they're nice is because they make the whole suite of expressive declarative Array methods available for me to use when I am working with objects. You are also right that often the declarative approach is not the most performant. Even if you aren't looping over the same data multiple times, a for loop will almost always be faster. But the case for declarative coding is that you should optimize for developer time over CPU time, because developer time is almost always more expensive. Think about the mechanics behind a for-with-semicolons. How many opportunities are there for typos, little logic errors, miscommunicated intentions? If you can replace everything, including variable declarations, with one declarative pipeline of transformations, you reduce the surface area for bugs. So often, I'm not running one Array method, I'm doing a map, then a filter, then maybe another map. The idea of being able to smoothly plug key/value data into that sort of a pipeline is very exciting to me. I think a lot of it is just familiarity too. A few years ago I took a job where I had to write Clojure. At the time I had no experience with a LISP of any kind, and I saw code that looked like [this](https://en.wikipedia.org/wiki/Clojure#Software_transactional_memory) and it seemed completely nutty. After a month or two though, it mostly all made good sense. Different design philosophy, different stylistic heritage, but it was all well thought out, and I learned a lot about how I could improve my code in any language.
The task bar.
Maybe, but I'm giving a free tool and you can use it however you want. Perhaps someone prefers having apps in tabs.
No worries, I don't know where I'd start on fixing that one tbh 😅
The sign-up is not working?
Hi /u/MandMs05, this post was removed. Low-effort content such as listicles, memes, clickbait, etc. is prohibited. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/patrick_everLive, this post was removed. Whatever you did, it's not common enough that we have a canned response for it. Please see the guidelines linked below. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sharpserenity, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sammysounder, this post was removed. For help with your javascript, please post to /r/LearnJavascript instead of here. Likewise, for beginner content, please post to /r/LearnJavascript instead of here. ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I would disagree that asking about a library is against the terms of service. That's quite disappointing actually. 
Cool beans! Reading the title, though, I misread the idea behind it as organizing windows inside of the window of a *web browser tab*, as if there could be [an entire windowed operating system running as a website](https://linuxontheweb.org/desk.os), lol!
Awesome idea and great execution, dragging onto the window is a bit clunky (took me about 20 seconds to work out how to place the application in the window) however after initially working it out it works a charm. To think you're 16 and already making such technically impressive applications and software in term of design and functionality is more than impressive indeed. 
Yeah, I believe the dragging is a little bit problematic, because it's attaching the window when the corner of the window is in the tabbar area. I think it should get the mouse position instead. Will fix in the next release.
Well, I'm also planning to integrate Multrin with my web browser [Wexond](https://github.com/wexond/wexond), so you could have websites and also windows in tabs.
If you literally just want to remove the 'fix' class as soon as the 'complete' class is removed, you can just do `$('.preloader').addClass('complete').removeClass('fix')` You're adding 'fix' at almost the same time, though, so that doesn't seem terribly useful; if that's not what you're trying to do, you'll need to explain the context of what you're trying to achieve.
**If you have a repo and would like to sell stickers to help with your development let us know. Awesome Software Stickers** [https://softwarestickers.com](https://softwarestickers.com)
I need to add complete class and fix class, after a delay of 2 seconds I need the fix class to be removed
*Wooo* It's your **1st Cakeday** 424c414e4b! ^(hug)
No it isn't
Dawg no one's gonna do your homework for you.
Should be “tableHtml +=,”
I will. But i won't post the answer
https://eslint.org/demo/
The demo is not working... I would be interested to help you but I would like to get more info if possible
Go to my site: https://msos.midspike.com It is an "operating system" in a web browser.
Wow! It looks really good, I will play for it to know what I can do :)
Published an article about the qualities of great engineers: [https://medium.com/@caleb89taylor/qualities-of-great-software-engineers-621f4094f5ab](https://medium.com/@caleb89taylor/qualities-of-great-software-engineers-621f4094f5ab)
This link in the readme dose not work? My goal is to get people to help me develop the game a over all make it better.
Hi /u/PuzzleheadedVoice101, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hey, I would like to join. The link in the ReadMe appears to be broken. Can you please check it again? Krish
Are you guys on mobile?
I completed the URL Shortener project for FreeCodeCamp. https://smll-url.glitch.me/ Should work on IE, Edge, and will work if javascript is disabled. You can also preview the short link by appending a /p to the end of the link. The path for the shorturl could be shorter but it is the way it is to fulfill a user story in the instructions.
The link in the readme is not a sharable link, try opening in a different browser and you'll see it gets redirected to a welcome page. You need to publish the code then you'll be given a new link. Something like https://thimbleprojects.org/platypus123/140525/
Great article on matchMedia. Thanks! 
That's what I came up with. This is my second project in js. So I partly did my homework. But could not figure out the right answer. 
You're still missing the point on naming convention. It makes more sense to call it es2019 (what it's actually called). 
&gt; I will play for it to know what I can do : Thank you! I would appreciate it if you could use it and leave feedback as an Github issue.
at least give me some hints!!
what other errors?? !!
Yah ya did :)
We've gone full circle now electron apps are in a browser again
Try this link: https://thimbleprojects.org/platypus123/67111/
It's important if you can't find the right answer, to find a good question to ask
Should be fixed
Should be fixed
Hi /u/TheReyzer, this post was removed. # /r/LearnJavascript /r/javascript is not a help or support subreddit. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try one of the communities below; please note that they have their own rules and guidelines! * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/samreddittt, this post was removed. # /r/LearnJavascript /r/javascript is not a help or support subreddit. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try one of the communities below; please note that they have their own rules and guidelines! * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
The variables inside that string that you are composing (such as ‘description’) won’t be evaluated. They’ll just be included literally. 
Now it works, good!
Completed and published my very first chrome extension! Not super advanced coding, but learned a lot about front end development and excited to learn even more. Here is the link: [ToDo Notes](https://chrome.google.com/webstore/detail/todo-notes/lfjajlafflaljilpemdidlodijkdaggh?hl=en-US&amp;gl=US)
I'm literally the opposite of you, but I'd give anything for the time to learn advanced JS. Been hiring shit contractors for 10+ years...I just want to build sites myself and make a killing.
I can write CSS blindfolded and pretty much look at a design and tell you the code that made and get really close to exact pixels.....when it comes to JS and other languages, I can't seem to retain any of the syntax or steps to do anything.
I started working on an abstraction over web component using VDOM https://github.com/osdevisnot/supertag Primary focus for Supertag is to make authoring and shipping web components as painless as possible while still staying true to its minimalism promise.
Good read, thanks!
Feel free to completely skip over that jQuery section.
uhh what? https://github.com/Microsoft/vscode typescript 98 percent runs on electron, so viewport is dom/css unless I’m missing something.
Looks like you're learning front end. Based on your post, I'd say you basically don't know javascript. Keep learning 
Eh, there’s a lot of companies that unfortunately still use jquery. I think its worth learning for like a night and then learning why its no longer a part of a modern front end solution 
Ok thanks for pointing me in the right direction 
Nope. JavaScript was built only to run in the browser and was crippled to make it safe. Node is an attempt to use JavaScript outside of the browser and adds io and other things. 
Yes. JS is practical for almost all computing problems, with limited exceptions for very high speed operations and direct hardware communication. JS may not be the best solution for these things, however.
Yeah, because 8 hours a day for 5 days is "low effort"
The video is only 4 minutes, though, and doesn't attempt to explain or teach anything.
Hi /u/RyanKnoth, this post was removed. # Low-effort Content Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just go away. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
The rules say absolutely nothing about explaining or teaching things.
Majority of my googling leads to answers on stackoverflow in query. That alone makes it hard to give up and move on from
.gif's are prohibited because that format is not welcome here. You effectively submitted a .gif, but using YouTube. Anyways, I think perhaps the note I should've left you with is: # Showing off a Project To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Hopefully that clears it up. 
Hi /u/rabbie17, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Ehhh, I think you really need to google harder. I'm still a very novice programmer because of my lack of dedication and real-world experience, but I haven't found jQuery to be useful in at least 2-3 years...
Days 1-8 are HTML? That's rough. I mean I guess you could get really good at HTML in 8 days, but that's pretty dry. Also weird to call this a front-end development thing when Node and Nextjs are there. I'm not complaining though because I like them both.
As a storage medium. You should retrieve the jwt and send it as auth bearer in headers with your request.
How come?
Well, to be fair, at least node.js (webpack, grunt, linting, transpiling, etc.) is often a part of your development toolkit even if you‘re just working on the frontend, so at least an introduction on how node.js and npm works is a very good idea.
Definitely agree on this. JS answers for old, heavily search questions on Stack Overflow still requires sifting through jQuery and vanilla answers. Kinda reminds me of when Swift came out for iOS and answers became a mix of Swift and Objective-C . 
I built a JS doc generator https://github.com/okeeffed/doculatte and small quiz generator https://github.com/okeeffed/quizam While I'm moving cities/finding jobs, I'm trying to get into building more tools and contributing more to learn from others, so hopefully I will be here a bit more often! Mentioned in [this post](https://www.reddit.com/r/javascript/comments/atrhbl/javascripttomarkdown_cli_documentation_generator/) but technically weekend Australian time for me!
Rad! I'm no designer (as everyone reminds me) but sleek design. 
Do you know why vscode is lagging? 
My leptop is like 7yrs old
Yes there are. Jquery is nothing to focus on merely be familir with
Thank you. I am not a professional designer too. For GitPress I implemented it without even prototype or UI sketch.
Probably to help mitigate CSRF.
Can the windows be made child windows of the container window?
125+ upvotes and no comments...
I'm thinking that whoever made this assumes that 1 day = 1 hour, because the 100 days of code challenge has a minimum of 1 hour a day. 
This is how Multrin works...
If your goal is to just make a game, and not to learn more about gamedev, I suggest you to use some framework, it will save you A TON of time. Or at least integrate existing libraries into your game, like you can use physics from Box2d or Matter.js, rendering with Pixi or three.js, etc. 
You should use local storage actually. The problem with cookies is the token gets sent with every request (to the same domain by default). Local storage gives you the ability to control when you make authenticated requests and it fits better with how a non browser device (phone, curl, etc) would work. 
Well if you are ever given a wordpress project, and let's face it, chances are huge atm. jQuery is something you have to deal with. I try to avoid it at all cost, but I constantly get project offers from clients that wants Wordpress. Until that shifts i believe it's valid to learn. 
What is the preferred alternative to jQuery? 
Usually you will see React or VueJS.
&gt; still In our case, it's just not worth it to get rid of it, we mostly use it for DOM ops and ajax, so while the use-cases are narrow, there would be a lot of legacy refactoring. It is very difficult to justify rewriting tens of thousands lines of code just because a fully-supported and maintained library has become largely obsolete. Don't get me wrong, I will totally codemod the shit out of this repo the moment I get the chance. It's just not high on the priority list.
### Functionality * [BracketGuard](https://packagecontrol.io/packages/BracketGuard) - Highlights incorrect bracket pairs. * [BracketHighlighter](https://packagecontrol.io/packages/BracketHighlighter) - Displays icons for the enclosing brackets, tags and strings in the gutter. It's like the missing companion tool of the ST3 option `indent_guide_options`. * [Case Conversion](https://packagecontrol.io/packages/Case%20Conversion) - Convert selected text between PascalCase, camelCase, dash-case, snake_case, etc. * [DocBlockr](https://packagecontrol.io/packages/DocBlockr) * [EditorConfig](https://packagecontrol.io/packages/EditorConfig) * [Emmet](https://packagecontrol.io/packages/Emmet) * [JsPrettier](https://packagecontrol.io/packages/JsPrettier) - That's the [Prettier](https://prettier.io/) plugin * [MarkdownPreview](https://packagecontrol.io/packages/MarkdownPreview) ### Syntax Highlighting * [Sass](https://packagecontrol.io/packages/Sass) - SASS and SCSS syntax highlighter * [TypeScript](https://packagecontrol.io/packages/TypeScript) - Apart from the expected TypeScript language services it's JSX/TSX syntax highlighting is top notch (I use it as a syntax highlighter even in non-TS React projects). * [Vue Syntax Highlight](https://packagecontrol.io/packages/Vue%20Syntax%20Highlight) - Also seen in action in the screenshot below. ### Better UI * [A File Icon](https://packagecontrol.io/packages/A%20File%20Icon) * [Oceanic Next Color Scheme](https://packagecontrol.io/packages/Oceanic%20Next%20Color%20Scheme) * [Status Bar File Size](https://packagecontrol.io/packages/Status%20Bar%20File%20Size) There used to be a great theme called Boxy Theme ([Screenshot](https://image.prntscr.com/image/KOI5-xHlQdiE4njLRVcH6Q.png)), but it seems that the author moved on and deleted the GitHub repo leaving us in a weird state where the theme works fine for the people that already installed it, but new users will have to find something else. A File Icon, by the same author, was resurrected from the plugin graveyard since someone had an existing fork of the plugin before the GitHub repo removal. Bonus: here's my [Preferences file](https://gist.github.com/rkunev/481846eb9afddd7bf2d6e772f1a6f071). There's a lot of stuff in there (including macOS-only ST settings, custom font, ignored packages I don't ever use, Boxy theme config) and I encourage you to try them out one by one and see what works for you best. 
Thx bro. Truly appreciate it 
next step, you'll start using vim + tmux, getting rid of an editor all together and coding in a terminal window :P
Sorry for the late reply. I should have probably explained it more in-depth. Basically, from my experience, I way too often had to change the `export default` to an object export, because later in the development I had more to export (e.g. an additional TS `interface` or other properties). But I also have to admit, that maybe this does not often apply to pure JS React development so often. What I also often saw are npm libraries, which used `export default` to export their function or class, etc. And so often they had to refactor it because more functionality came to the package. Then they always need to change it up and introduce a breaking change. For me, you're just on the better side to use an object export rather than an export default. You will less likely introduce breaking changes or refactors because object exports are just way more modular. Therefore I decided to abandon the `export default` - I just don't see much of a benefit.
If u want to put JavaScript there, use tag &lt;script&gt; . If u want to make a dynamic website, learn react js and CRUDS (Create, Read, Update, Delete, Search)
I would like to know about the save feature as well
Is it really lagging, or just loading a lot after you modify a file? Because the auto-save setting made my VS Code slow too. So if you have it set to 'afterDelay', you should set it to 'off', and try it out again. 
Save your data into localStorage or use a server to save/retrieve data.
You tube Traversy Media he has a bunch of free videos on all this stuff.
Then I’m afraid you will need to continue practicing, or choose a tutorial project and tap away. Well to answer your questions... We capture keyboard inputs through events. Google “HTML events keyup keydown”. To store HTML inputs (which I presume to be HTML nodes), use document.getElementsById and reference to it through a variable. I am not sure what you mean by saved data. Do you mean data that persists on page until you refresh, or saved data like localStorage/cookies?
As fast as i can describe it for now: var element = document.getElementById("yourElement") // reference your element and store it in a JS variable console.log(element) // log your result element.addEventListener("click", function exampleFunction (){}) // add functionality, an event listener for example. this runs the function specified (exampleFunction) after the event specified (in this case, a mouse click) &amp;#x200B; this is just an tiny example, there are other ways to do things. and sorry for any grammar mistakes. I hope i could help a little bit!
very nice. All the existing datepickers suck in their own specific ways. Awesome that this one is in typescript. No other datepicker is in TS as far as I know.
- To get an HTML &lt;input/&gt; value, use `document.getElementById()` or `document.getElementsByName()` to retrieve the element. The value of the input can be accessed using `element.value`, where `element` is the element retrieved from one of the two functions I mentioned earlier. - To detect input from keys, you have to bind something called an event handler to the 'keypress' or 'keyup' browser events. In a nutshell, this just means creating a function that is made to be called by the browser whenever a key is pressed by the user. Read the docs on event handlers for more information on the syntax of how to do this: https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Event_handlers - I'm not sure I understand what you mean by "making canvas size and shapes proportional", but if you're referring to &lt;canvas&gt; elements, basically there's no easy solution. You have to check the `browser.innerWidth` and `browser.innerHeight`, derive whatever proportions you need from those two values, and also bind an event handler to the event of the user changing the window size in order to recalculate whatever proportions you need. - "Saving data" can also be described as "persisting data". There are many different ways to persist data, each with their own pros, cons, and usecases. Your choice will vary based on what you're doing and what environment you are running your code in. If you are running JS on a Node.js instance in the back end, then you need to save your data in a database like mongodb or MySQL. If you are running JS in the browser, then you need to retrieve persistent information from a backend or store data in the user's HTML LocalStorage. LocalStorage is appropriate for things like saving a game's progress, while a backend is more appropriate for saving something like a Reddit comment or user information.
You need to use the internet more, it has all the answers. If you put your first question to duckduckgo, it shows you a good answer on stackoverflow. https://duckduckgo.com/?q=+turn+a+HTML+input+into+a+JS+variable&amp;t=ffab&amp;atb=v146-3__&amp;ia=web 
Nice work dude
Thanks! 
Thanks for the compliment. &amp;#x200B;
I can't join you on this journey, but I have a suggestion for the catcher movement. Instead of having an event listener only on keyDown, you should have a keyUp listener too and store the currenty pushed down button if it's left or right. So when you push down the left/right button, the movement action should go till the keyUp listener deletes that stored button. This will prevent the movement delay after pressing down the button.
So the method I've tried for the nodes is the one that you said but it just didn't work, I will re try later. And yes I meant local storage, I will Google it right now, thanks! 
I will defiantly check him out
How do I do that? 
If it didn’t work, then how exactly did you use it? A code snippet of how you did it would help tremendously. 
var inp1 = document.getElementById("input1"); 
Thank you, this was useful
I’mma try my best to explain localStorage. LocalStorage is available in all browsers, and have a storage size limit. (E.g. 5KB?) localstorage is basically a big ass text storage. You store these text through a key-value pair. To set an item, use localstorage.setItem(key,value). To get an item, use localstorage.getItem(key,value). You must store your stuff in text/plain format. So if you want to store a ton of stuff, we usually make a JSON object, stringify it and store it that way. 
It looks good! I am looking to rebuild and redesign my personal page with Gatsby. Your website could serve as an inspiration :) 
Thank you
As a web developer myself I often find badly or over designed websites that look more annoying than they should do. Also I often have to create such websites despite the design is overkill or not thought through, I'm just doing what my coworkes from the graphics department give me. You're page looks clean, modern, doesn't hit me with annoying colors and still manages to bring animations into it. Normally, animations make me feel dizzy. I like it. Though one thing I noticed: The navi hangs in the middle of the screen if in landscape mode. Not like many people would use it, but it may happens on other devices too. :) Following screenshot shows the issue on Opera, but it also happens on Chrome 72.0.3626.105, Android 9 on my One Plus 6. http://imgur.com/a/9qDboY2 Great work! 
Thank you
Thank you for your kind words! I am happy you like the design. 😀 I wanted the navigation to be fixed on top of the viewport, and to hang more on the left side on wider screens. So this effect is intentional. I kinda like it, although i know that many people find it anoying when the navigation sticks out like that, over other content on the page.
Thanks for checking it out. I'm glad you liked it 😀
Thank you, this helped a lot, I finally understand the things. And now I know also why they weren't working, once again thank you! 
I see. On larger screens, like on desktop, it wouldn't block much content anyways. Mobile landscape is always ugly and I never saw anyone surf like this, but I always look at it before the customer complains. :D
All I wonder is what is D3?
The value is stored at input1.value &amp;#x200B; If you googled "get value of input javascript" in google, the first result is a StackOverflow post that says just that. [https://stackoverflow.com/questions/11563638/how-do-i-get-the-value-of-text-input-field-using-javascript](https://stackoverflow.com/questions/11563638/how-do-i-get-the-value-of-text-input-field-using-javascript)
Why not incorporate the existing project into meteor?
Thank you, and I think I might have to use Google more
The animations are nice on mobile, did you use native Angular animations ? Or is it CSS ?
Simple, clear, on point. Well done. Did you use any frameworks / libraries? Just wondering.
A discord bot, that posts a game from a lichess link in gif format https://github.com/ChrisPalko/lichess_discord
This is great! I really get a sense of your personality and I particularly like the favourite quote section. It’s much more humanised than some other portfolios and I think that’s a good thing. No doubt you’ll pick up a job soon!
i like the content, structure and the feel of the site except for the animations. i'm not the biggest fan on things sliding in on scroll because it's weird you have to scroll down and then have to wait for actual content to slide in. i get you want to show off on a portfolio site but you can show off more by knowing when to leave things out
Hello! If you intend to keep working with vanilla js, I would like to join. &amp;#x200B;
I love the simplicity. Good job. &amp;#x200B; Sidenote. Is it just me or is using a11y to mean "accessibility" not really that accessible? It always takes me a moment to realize it's meaning.
This is really great. I opened it from within an android Reddit app and it still worked great. Nice layout, good performance and even fun to read! It would be great to hear about the development process you followed / tools you used / etc. 
A lot more. I spend most of my time in Google.
Damn. That’s smooth
Really love the work! Pretty neat projects too! This inspired me to go redesign my own 
Pozdrav brate :P Simple and creative. Good job. :D
It’s nice and fast, visually pleasing! Good job! Areas to work on: The page transitions are nice and give a good illusion of progression, however there’s an overuse of arbitrary element animations. Which has a couple of problems. 1. It makes it look a little gimmicky with animating pretty much everything and can cheapen the overall experience. You should only really add animations when it “adds something” having a GitHub link fly in does not add any benefit to the user. 2. You claim you’ve focused on a11y - which you may have over stated, and by stating that it is your opening yourself to criticism. For example the voiceover mode on Apple products fail to read any of your animated content. Because it’s positioned off the screen and not visible the voice over doesn’t even try to read it so it doesn’t know it exists. Which can be solved by resolving issue 1 - not over doing it! Another usability issue which tends to be called “rage clicks” - you’ve not optimized hover states for touch devices - this means users have to double click your links to visit them as the first click activates the hover state. A technical user might realize this, but a other uses might just get annoyed that clicking things are not working as expected. —- Addressing these issues will help your a11y claims :) Keep up the good work!
When it says "I'm an Elec. Engineer from Zagreb.", the dot alone moves to the next line, meaning Zagreb and the dot are seperated. Should be an easy fix. I'm using a MBP 13" with Firefox. &amp;#x200B; Overall, looks really nice, as others have commented.
You're right. I don't know why, but people will misuse the "a11y" numeronym both for "accessibility" and "accessible." It's a personal pet peeve.
What are you basing your claim to be accessible on? Will take a closer look later, but the constantly updating content could be one or two issues.
Awesome work! A small hint: add a sitemap.xml! Does wonders when it comes to SEO.
I'm not a big fan of the white on dark for a front page, but I did really love the Portfolio page with a list of your projects. It looked modern, and easy to scroll through to get a glance of what you have done. Some people may think you got a little too mach animation happening, but the page was really snappy, and it's just a short and concise blog to show off your work, so I don't personally see a problem with that.
Just try to complete html test on upwork...
Hi /u/Eaglesfan371, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Amazing ; 3 
That news digest is awesome. Good work. Thanks for sharing.
 Hello Reacts devs :D This blog targets what JSX is, how is different from HTML, what are the features that it exhibits and finally how does it work behind the scenes. Enjoy!
Honestly hate it when so many elements are flying all over my screen
VueJS is a frontend library. Node is a backend runtime, not a library. Express is a backend framework. So none if those are comparable. 
So Express is running on NodeJS runtime? Is that right? 
"You claim you’ve focused on a11y - which you may have over stated, and by stating that it is your opening yourself to criticism. " - I agree with that statement 100%. I shouldn't have written that because it was premature. I am well aware that I haven't fully implemented all accessibility features. For example, I have a lot of dynamic content appearing on the page and screen readers cannot detect this because I haven't placed any aria-live attributes. I have been planning to do that next week. Regarding the animations, I appreciate your opinion but I don't think it's to much. It's a rather subjective experience, and I know that not everybody will like it. That is why I tried to make them super fast and smooth, so that the content is quickly available to the user, and yet not to static. Also, you shouldn't have to double click the links to open them. That is very strange. The only think I do know I have to fix is that the hover effect, which is turning the links to turquoise color, gets applied also on touch events which shouldn't happen. But this only affects the color, it doesn't result in needing to click the links two times. I've been planning to fix this bug as well. You have successfully identified some major issues I needed to address. :) Thank you for giving such a detailed feedback. I appreciate it.
I just didn't want to type that long word, that's it. Now having to comment on it resulted in even more typing, so lesson learned. :D I am not an English native speaker so I haven't really thought about the subtle difference between the words "accessibility" (or a11y) and "accessible", and how it is not semantically correct to use a11y in each sentence. It is just simpler, and I know people will understand it... 
Correct. 
Thanks for the comment and for checking out my website. I know that not everyone will like the animations I've used, but each of us has different preferences when it comes to UX, and pleasing everybody is an impossible task. I like using animations, even if it means adding 500ms delays to certain parts of content, because the website looks more dynamic and interesting. Especially if the transitions are fast and smooth, which I think I achieved. 
Thank you. Pozdrav :)
Finally got it. Nodejs is a runtime environment for the backend (server side) scripting framework such as Express. While VueJS is a front end Javascript library working with HTML CSS right? 
I can save you the trouble and say that the website is not (yet) fully accessible, especially for screen readers. I am planing to add support for the dynamic content in the upcoming days. I've already done it in the past by using aria attributes, and I know how to do it. Only, I shouldn't have said that it is "a11y optimized", because it was premature at this point in time. But since this post will be here in the future, and I plan to implement full accessibility in the upcoming days, then the statement will cease to be false very quickly. But I did learn a valuable lesson, and that is to never write claims which cannot be supported at the present moment, because there are very pedantic redditers out there who will immediately put my claims to the test :) And I appreciate that, I am open to constructive criticism. 
The app is developed with React and styled-components. I did not want to reinvent the wheel by manually implementing the animations, so I used the react-animate-on-scroll library, which uses animate.css under the hood.
Thanks for checking out my website. I used React, react-router and styled-components. I know that using React for a portfolio page might be overkill, but I don't care. I just love using it because it makes my life so much easier. And I also wanted to get some more experience with it.
Thank you for your kind review :) I am glad you liked it.
Thanks for the useful feedback. :) I'll fix that.
Thanks you. I'll check that out :)
Thanks, my thoughts exactly regarding the animation. I think that it is not to much, and that since it is really fast and snappy that it doesn't degrade the overall experience in any way. 
Thank you. I made that app a few months ago with pure CSS and jQuery. Today I think that I went a little overboard with the animations on that one. :)
Thanks for checking out the app :) I used create-react-app which eliminated the complications with setting up my build system. I styled the app using css-in-js approach with styled-components. The grid is setup using the SmoothUI library. Page separations and transitions are done with react-router. Animations are implemented with the react-animate-on-scroll library.
Thanks for checking out the app :) I used create-react-app which eliminated the complications with setting up my build system. I styled the app using css-in-js approach with styled-components. The grid is setup using the SmoothUI library. Page separations and transitions are done with react-router. Animations are implemented with the react-animate-on-scroll library.
I thought I was in the Angular subreddit, damn it. Sounds good anyway, thanks!
Correct. 
Thanks man! 
Congratulations, it looks amazing :)
Even when I have "Angular4" in my search half the answers are jQuery!
Thanks :)
You have define your goal before we can understand how to help you achieve it.
On the time picker I can pick an invalid date i.e. 30:500pm
Thank for your feedback! I 'will update it 
Yes, I still need to add support for screen readers. I have been planning to do that tomorrow. 
I'm sorry to hear that 😂
Thank you 
So, a few weeks ago, I discovered a way to make a text that uses Google Fonts render faster. In slow connections, that might give a boost of 1-3 seconds. Here’re more details: * When you use custom fonts (like Google Fonts), most modern browsers won’t render the text with that font immediately. Instead, the text will stay invisible until the font is downloaded – or until 3 seconds pass. You might’ve experienced this yourself if you have an Android phone. This is done to prevent a FOIT (flash of invisible text), but this hurts user experience. * A typical solution for this is to add a CSS rule like `font-display: swap` which tells the browser to avoid waiting for the custom font. However, Google Fonts don’t support this rule, and the only remaining solution becomes to a) self-host fonts (more hassle; impossible in some environments) or b) use JS libraries like Web Font Loader (hurts the initial font load time) * Recently, I found a solution for this. Turns out, you can fetch a Google Fonts stylesheet asynchronously, patch it to include `font-display`, and insert it into the page. So I composed a tool that does it! The tool generates an inline script that does the work + a few `&lt;link rel="preload/preconnect"&gt;` tags to avoid hurting the performance. The script also does some extra work to avoid unnecessary FOUTs. The total size of the generated code snippet is 550 bytes minified + gzipped. Here’s the source code of the generated script: https://github.com/iamakulov/googlefonts-font-display-helper/blob/master/src/script.js Would love your feedback on the tool :) 
&gt;“rage clicks” - you’ve not optimized hover states for touch devices - this means users have to double click your links to visit them as the first click activates the hover state. Interesting, I've never heard of or experienced this before, and the links work with one click for me (galaxy s8 w/ Chrome browser)
It’s a thing on mobile Safari sometimes. And can be super annoying. https://css-tricks.com/annoying-mobile-double-tap-link-issue/
Hi /u/peacefulfreak, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/yuotosaka12, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/couldbebimaybe, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/vick5821, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ender_51, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Nice
Super ti je, dal drzis instrukcije hahah
Ah, that's why I've never experienced it. XD good to know, thanks for explaining!
I ja pokušavam nesto slicno tvome napraviti tj.portfolio vlastiti, al stagnira heh.
I had no idea what 'a11y' meant. Why is it used as shorthand for 'accessibility'?
I've published my first ever npm package - Action-reducers for Redux - [drmzn-redux](https://www.npmjs.com/package/drmzn-redux)
Starred! ⭐️ 
Thanks! Haha
You'll want to implement this for your animations as well. https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
Just because it's a long word. Similar story with i18n and l11n.
Accessibility is a long word. When you work in the industry, it can be overwhelming typing it all the time, and there was also the old Twitter character limit. So a11y exists so you don't have to type it all the time. Similarly, there are other numeronyms like l10n, i18n, etc. https://whatisa11y.org/
Eh it’s a good way to learn about events and dim manipulation, and a lot of companies still use it. 
Hi /u/J0seF_, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Nice article. There is a way to use xstate with mobx? 
I also agree that there are too many animations. 
[D3 Data-Driven Documents](https://d3js.org) [D3 on github](https://github.com/d3) 
Ok I'll try.
Overall I liked your website. My only criticism was your favorite quote part, which you don't actually even quote in the section. Instead you link to a video, which I then didn't felt like watching, because I was listening to an interesting podcast. It made the experience feel like those click bait articles that throws you around because "you won't believe what she looks like now" or something. The website also feels overly animated. 
Looking nice, but I'm not sure claiming you are a Jedi Knight, Netflix binger and addicted to spotify is really relevant to your homepage. It may be nice interview and CV material but if you're going it on your own you 100% professional image. Not a kid in his mums basement image maybe? 
Am I meant to catch or dodge the bricks, either way I die after 10 seconds when the screen fills with bricks. But yes I'll help out where I can, looking to get some experience in the gihub collaboration thing. Let me know what you would like me to look at, so long as you keep it vanilla and no frameworks. &amp;#x200B;
In some cases, you can grab the content of the iframe’s url and display it inline instead of in the iframe. In that case, after you get the content, you can strip out the parts you need and display those. Of course, it all depends on the type of content and if you have permission to do something like that. 
Putting finishing touches &amp; fixing bugs on my **Video Hub App**: [github.com/whyboris/Video-Hub-App](https://github.com/whyboris/Video-Hub-App/pulls?q=is%3Apr+is%3Aclosed) Really want to finish it off by my birthday on March 21st 😅
Haha yes you played the unstable version play the stable one.
Okay just look at the code and see what can be in proved and create a pull request.
I plan on trying to keep it vanilla js
In this case check out this book: [http://gameprogrammingpatterns.com/contents.html](http://gameprogrammingpatterns.com/contents.html)
Too many animations and from too many directions. The experience feels janky instead of cohesive.
Nice, especially the portfolio animations were impressive
Of (answer is == ‘Guess’) Should that be an if? 
Clever stuff but imo it's a bit too try hard and too busy. There's animations all over the place, that take the focus of the user away from the content, and the nav and icon blend into the content when scrolling on mobile. Very good from a developer's perspective but I'm not sure employers would feel the same. I'd suggest trimming the animations down and having the nav snap to the top of the screen or not scrolling with the user. Just my harsh opinion; down vote me if you disagree! 
Hi /u/Theodore9619, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/wwwdeveveloper, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/anduser96, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I do plan on keeping to work with vanilla js.
Https://todo-list.cf My latest creation wanted to do it with vanilla js without jQuery but ended up writing 1 line that requires jQuery.
Very cool! A free quick pieces of feedback: 1. I have a Pixel 2 and the board doesn't quite fit on my screen in chrome. 2. After losing, a pop-up or button to play again would be great. 3. Holding down to tag as a bomb/uncertain is nice, but maybe holding down after you have switched from bomb to uncertain should clear it. 4. Occasionally had some key presses not register Overall very nice work!
Why doesn't Google font provided code do this by default?
Thanks a lot for feedback. As for third clause, I'm not sure, but it actually works, holding down cell three times will get it back to default state.
Sorry about that, you are right. I just verified. It might be tied to #4 or maybe I've just been fat fingering it.
That's okay. Thank you anyway🤗
Are you referring to Visual Studio Code or Visual Studio? It's the former you want. 
You can take a look at mine too! I made it with VueJS and Vuetify and it's open source: https://merwanedr.github.io
I agree to this but I think the reason for the length of time is cause of the time constraint but it’s more than enough to get the basics.
I'll also add some a11y criticism: most focus styles are either very hard to see (logo and icons on the start page) or completely invisible (buttons on the portfolio page). A general rule of thumb is to always add :focus whenever you use :hover, i.e. `.btn:hover, .btn:focus {[styles]}`. Also try to differentiate with something more than just color if possible, since a slight color shift can be unnoticeable by people with poor vision or color blindness. Also, depending on the browser the default focus style can be pretty lackluster. Firefox and Edge for instance just have that classic 1px dotted outline which is pretty subtle. I like to use a 2 or 3 px dotted outline with a contrasting color.
Fair question. I wonder if it has to do with browser compatibility in some way. 
Use Visual Studio Code, you can install extensions fir intellisense. 
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Viewing on a desktop. Looks great, personally love the style you've gone for; colour scheme and design. Nice landing page and good amount of work shown. Not sure how I feel about the amount of moving elements on the portfolio page, but all in all a really great portfolio website! (I'm just a game developer so not sure my opinion matters too much)
tacking on to the other two comments...the format is [first letter][number of letters between first &amp; last letter][last letter] ccessibilit is 11 letters, so it's a11y
I always wondered what is the most performant approach for detecting elements in viewport to make them do animations? Calling a function with every scroll eventlistener being triggered or using IntersectionObserver? 
Of you aren’t doing anything in “real time” with the values, why even bother keeping them in state? I see a lot of tutorials/libraries offer solutions to what’s already built into the DOM, and I don’t understand if I’m just missing something, or everyone is over engineering everything. 
thanks for comment.i try visual studio code .but can not debbuging and get error. do i need more setting for this? i already installed node js. [https://i.imgur.com/wfkEtt0.jpg](https://i.imgur.com/wfkEtt0.jpg)
Saying a site is accessible is a pretty big claim - and this site has a lot of accessibility issues (as others have pointed out). Don’t get me wrong - the site looks great. But the claim of accessibility is very misleading. 
In case you want to do something with them later? The example OP posted is basic but I could see it being expanded with validation, formatting, input masking, etc... 
Took a closer look at the accessibility. Here are my notes. # Animation In addition to allowing users to opt-out of the animations using the prefers-reduced-animation media query, you will also need to provide a method to either pause, stop, or hide the animation. Typically, this is done via a button that will toggle between pausing/playing the animation. # Links All your links with images has aria-labels. This is a good method for setting the accessible name since you're using images instead of text. However, the label for all of these is too verbose. Instead of "Link - open home page" just use "home page." The screen reader will already announce "link" because you're using an anchor element. So the accessible name just needs to describe the destination like you would if it were a text link. # Navigation links You'll want to use something in addition to the color to show which link in the primary navigation is the current page. Also, to communicate this programmatically, add aria-current="page" to whichever link is the current page. # Landmarks Putting your content into Landmarks will make site navigation easier for screen reader users. You will probably want a structure like this for the homepage. * header * nav * main * footer (for the "connect with me" links) For the About and Portfolio pages, just wrap the homepage and nav links inside a header. Here's a [good resource on Landmarks](https://w3c.github.io/aria-practices/examples/landmarks/HTML5.html). # Headings and Page Titles You'll want each of your pages to have unique titles. It's generally a good practice for these to closely match the top-level h1 on the page. The headings on your About and Portfolio pages are pretty good. Would suggest having the first heading on the About page, "Pozdrav," be an h1. On the Portfolio page, I would move the "I'm looking for work" content to the top and have the bold text be your h1. # Content Order On the Portfolio page, the content order is a little off. You have the screenshots for each app before the headings that describe them. You could probably use something like flexbox or grid to make sure the heading is the first thing in the content order for each project content block. # Alt text Generally good alt text on the site. I would change the alt text under Proud Father to be descriptive of the image. Instead of "my wife, son and myself" describe that it's your son on your shoulders with the lake in the background. The Portfolio page is missing alt text for the various technology images.
Right. That’s why I specified “real time”. Altho the dom has apis for validation now, it’s probably easier to do them in react, that part I get. But lots of people I see creating forms and things always keep all the values in state, and re-render everything on every key press for super basic forms. Seems a bit heavy handed. 
Don't get discouraged! Learning about a11y can be challenging, but every little bit can really add up and make a big difference. I think it's best to view a11y as a spectrum; there's so many different conditions which require varying tools and support that it can sometimes become impossible or impractical to fully support everyone. Of course, that doesn't mean we should throw our hands up and just give up on it entirely; even if we can only get 80% of the way there, that's still a huge improvement. 
This article is not much more than a glorified Bulma advertisement 
Wow the design looks so slick in mobile Well done!
I couldn't view any projects, links looked as if they were being clicked but nothing happened. Reddit app on iOS.
Loaded pretty fast on my phone 👌 Just a couple small nits: Personally not a fan of the portfolio items animating in. It doesn't really benefit the experience, and all it really achieves is it makes me sit and wait for them to be done so I can read the text. Also, since the portfolio images don't have a border or visual container, I initially thought the elements from the images were a part of your site design and was confused. Looks pretty solid otherwise
Looks great! I need to work on mine as well. Curious what you did for the email icon to link straight to an email function. 
Hi! To be SEO optimized you have to put at least 300 words per page. If you have any doubts about SEO just PM me. 
As a small tip; Setup gsuite because you own a domain. Using gsuite as a way to use mail with your domain shows that you're a professional. Dont use a "@gmail.com" acc if you can show much more by using your own domain. 
Should have recorded an "after" video to compare with the one you have!
So his email would be [xxxxxxxxx@domain.com](mailto:xxxxxxxxx@domain.com) with gsuite instead of @gmail.com?
In my professional opinion, you've got a solid foundation, but the animations are overkill. I would suggest you recognize the number of comments regarding the overuse of animations and not simply dismiss it. 
Wow this is quite impressive, since I'm a JS beginner, I was wondering, how much time did it take you to get this good at javascript and programming in general? Sorry for the dumb question.
One comment that haven't been made yet, your svg images (for heroku, github etc.) needs a title: [https://css-tricks.com/accessible-svgs/](https://css-tricks.com/accessible-svgs/)
Correct
First: Eff you for reminding me how much time I wasted playing that damn game. Second: Thanks for reminding me to show that damn game to my kids. I initially thought on hard it wasn't "expanding" appropriately--but after a few more plays and think it is correct. So, again damn you for doing this. Seriously though--it is a great re-creation. I actually love it--but I hate you for making me waste my time on this damn game again. ;-) &amp;#x200B;
It's not because it will always be the underlying API that you need to query/mutate it each time you're doing a little thing. VirtualDOM and MemoizedDOM are there because it's much faster to compare objects or query objects/array than to access the DOM.
Looks very good! The page does become a little clunky when you scroll quickly though! Just a heads up! 
Click the emoji face to start a new game
The design seems to be inspired by Google's (http://www.google.com/search?q=minesweeper). If so, should give credit where it's due 👍
I'd recommend keeping the popup open for picking an end date, if you've just picked a start date (unless I missed that as an option/default)
Thank for your feedback ! I 'will update it I'd appreciate it if you could leave it as an Github issue. &amp;#x200B;
Honestly, from a person that reviews resumes, I am shocked by the number that come to my email without a portfolio, and work samples/source code. Start there. Also, call around to a few places that you would like to work, and ask about their stack, and what they would want you to know to get in the door. Learning JS is one thing, but knowing a framework or two that employers in your area are using may be a huge advantage. Dont be afraid, they will gladly spend 10 minutes going over things, and as a bonus, will likely see you as self motivated. This industry wants two things; your ability to find your own answers quickly, and to not have to spend months bringing you up to speed on things. Good luck.
Hi /u/broomswerve, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'd suggest creating some kind of a project (Kanban, calculator, note app...) with e.g. React or Angular, or maybe a simple API with Node.js. I've found that practice is the best way to learn at least for me. You'd also create something you can show to a future employer. Coding alone involves pitfalls, though, but it's a tremendously efficient way of learning IMHO. As an example I recommend the Atomic React project base. https://arc.js.org The branches contain example projects as well.
[removed]
Thanks, might come handy. I (and probably quite a few folk) made something similar for use in my projects. As far as I can tell it uses exact matching (which is good for most purposes). For my solution I was using a fuzzy search library - I liked [https://fusejs.io](https://fusejs.io/) But I appreciate the point of your project is having all logic done 'in house'.
And developers that only work on proprietary projects and *can't* show sample code? Do you just pass them off?
Very cool. I wrote one myself. I took a different approach. I'll give yours a trial when I get a chance. Need to review your use of proxies. [https://bayareawebpro.github.io/laravel-micro.js/#/](https://bayareawebpro.github.io/laravel-micro.js/#/)
Read my words in a Morgan Freeman voice. I was in yours shoes once. I knew i needed to learn JS but life was hard. it was real hard. I decided to start small. 5 minutes a day. No more. No less. One year later I found myself in a good position able to learn JS with more time available to me. Now strap yourself up by your bootstrap or thongs and get to learning. But how? &amp;#x200B; 1. There are to many free resources. just choose one. Khan Academy, youtube, whatever. 2. stick with it for a minimum of a 2 months. 3. PS. I love you. 
I’m attending a boot camp. One thing I can recommend besides just going for it would be to look at the boot camps course layout if you can. General Assembly has different coursework depending on the city that the campus is in. They pay close attention to what skills employers in your area are looking for. Other than that. Start making stuff. Projects that show what you can do are very important if not required to land a job. 
It leaves the search logic up to the user. Most of the examples in the documentation use a simple filter function, but you could definitely use fuse.js, or hit a search API ([like this example that uses the Wikipedia API](https://codepen.io/trevoreyre/pen/RvBvRN)), or whatever you want.
Damn you. You suckered me into playing again. And yes the emoji face gets a new game. But that is non-obvious. Seriously though--great version. If I hadn't lost a thumb in 'nam I'd give it two thumbs up--but I only have one thumb left.
I can't tell you the answer to that; never had someone experienced, show up without a portfolio and samples before. Be prepared to show something. Also, hobby sites are my favourite. Seeing someone's work on something they are passionate about, tells me the most about them.
I think it's fine. Nothing wrong with giving life to your own portfolio. Too much in life needs a no-nonsense attitude, the internet and tech in general is made to counter that.
Member Only
Good article. How much are you able to use this stuff day to day (the obscure stuff not FP in general)? 
I won't argue that it's non-obvious, but it should be if you played the original. It had the same button :)
My client side coding journey over the last 10 years has taken me through the following environments. Firefox/Firebug: which I dropped because it became too slow. I am told things have vastly improved, but back in the day Chrome was lean and Firefox was noticeably slower. Chrome: which I dropped because of issues with selection colours (the selection hi-light disappeared and nothing could bring it back), loooong load times on the file system sources, and the dropping of context where I would lose saved code on refresh. Visual Studio Code: which I dropped because the debugging wasn't as rich as I had hoped and the whole hot key, config disposition. So kill me. Sometimes I like to have a GUI with buttons!! WebStorm: I bought this a couple of day ago after trialing it for a month. And so far I couldn't be happier. Oh man, the refactoring alone. &amp;#x200B; All the above have some intellisense pretty good console abilities. Hope this helps you to make up your mind.
Cool 
Sure. Sorry about that :( will follow 
what happened to just using 508?
It’s not just you. It’s an obnoxious trend.
Awesome ux I am inspired and in awe! 
the ux i just confusing overall, at least as a fellow dev. architect, but whatever. on the home page i was first expecting to be able to scroll. then i was at least expecting the list of skills to change on scroll. maybe add that? on your portfolio, why is part of the second card on run tracker visible? i was expecting some type of scroll interaction on that too. if there isn't any interaction, why not just get rid of that part? also, there isn't really enough content yet to justify the animation. it's only happening on one item. it works a little better on the about page, but the design feels... like something i've made before but look back on not liking. maybe that explains my response? try reading [this twitter thread from Refactoring UI](https://twitter.com/i/moments/994601867987619840). i made some changes to our style guide, showed it to designers *and* sales with everyone loving my tweaks.
Very well balanced... nice use of animations but maybe trim it back a little on the larger elements.
Let me guess, you’re a php developer? Nobody else cargocults so much about unnecessary shit like IoC.
Hi /u/northern_crypto, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/shibainuisno1, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Syphonex, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RRASTX, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
To me it just seems like you don't understand the problems it solves
Haha man if you don’t understand something, study it and don’t say shit like this that makes you incredible stupid.
It's cool, on mobile though some pieces overlap, like ur home button and other stuff.
That's great, I think a roadmap and a contributing file would be very helpful for anyone wanting to contribute. 
**It really works**! Thanks!
What's the purpose of this "singleton" pattern when you can just rely on JS's module evaluation to achieve the same thing?
Hi /u/LinkTimeTech, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/LinkTimeTech, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It just read its job title, indecent job checking ;) and that is truly an indecent photo
Section 508 is U.S.-specific. Also, it's been changed; it's now pointing to WCAG (Web Content Accessibility Guidelines).
Is it re-rendering though? React will figure out what has changed between old and new render and only push those changes.
It's absolutely re-rendering. And it re-renders the children unless you specifically create Memoized functional components, or PureComponents. https://codesandbox.io/s/py5m1k605x
Other languages like Java and C# have DI/IoC tools too.
Always wanted to dig a bit deeper in Iterator &amp; lazy approach. Guess now is the time
How is it different than other IoC libs and why would I use it?
i used Clickbait in 2019
It fast. Really. 
What is the point in Javascript? You can just use the dynamic nature of language to achieve this without the overhead and added complexity.
I used &lt;x&gt; in &lt;a&gt;&lt;b&gt;&lt;c&gt;&lt;d&gt;!
I don’t like this naming convention. 
I mean is the DOM being updated at all. Doing some quick diff comparisons isn't all that much work compared to actually causing a reflow/repaint of the screen.
Depending on what else up dates, it could reflow/repaint. Sure in these contrived examples nothing is happening, but if you just let the DOM handle form input, and scoop up all the values when you click submit, then the app just sits there idle while you type. You're right that lots of examples and 'convention' has all the data in state, but there are definitely more things you have to be aware of when doing it that way. I'm just wondering if there's a good reason to do it that way, or if everyone is just doing it that way because everyone is doing it that way.
I don't think that IoC containers fit the modern JS ecosystem. There are many issues but the most notable is that the explicit dependency still exists between classes as there are no abstract interfaces in JS, so the objective of DI is not really fulfilled as all concrete implementations are still coupled together. There is an additional import of the IoC container functions added to each file. Perhaps most people who think this is useful will be coming from a Laravel background where the IoC container is best practice. PHP has different language features which makes this sort of system more suitable. In PHP DI can be performed automatically without needing to interact with the IoC framework inside your classes. While this was a useful exercise for the author, this library will join the growing pile of unused JS IoC frameworks. It's just not a good idea for JS. Classes are still controversial
Here is a tip for you: did you know? Try using this nice destructering shorthand when [developing in JS](https://www.misterbit.co.il) ({ a, b } = { a: 10, b: 20 }); console.log(a); // 10 console.log(b); // 20
Those languages are notably different as they are Object-oriented and have static type systems with abstract interfaces that can be used to decouple concrete implementations. 
*Use a temporary font while your custom font is being downloaded. The script doesn't speed up anything.
Hm. It makes the text render sooner which really helps with user experience. I’d say it’s the most important thing 
This error TypeError: [document.getelementbyid(...) is null](http://net-informations.com/js/iq/error.htm) would seem to indicate that there is no such element with an ID passed to getElementById() exist. This can happen if the JavaScript code is executed before the page is fully loaded, so its not able to find the element. The solution is that you need to put your JavaScript code after the closure of the HTML element or more generally before &lt; /body &gt; tag. &amp;#x200B; &amp;#x200B;
**Vanilla javascript.** Most of the selections jQuery does with $ can be replaced with document.querySelectorAll(), hence the performance increase of not using an external library. Here's some more info if you're curious: [https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll)
What's even more appalling is that the Google pagespeed tool complains about the font-display directive missing on its Google Fonts
For my money there is also too many animations. Otherwise lookin' good! 
Congrats to the release of your project! What advantages do I get from doing ... ``` import myDependency from './myDependency' SomeProvider.register('myDependency') // somewhere else function Foo(myDependency) { return myDependency.call() } const foo = SomeProvider.provide(Foo, 'myDependency') ``` ... instead of ... ``` import myDependency from './myDependency' function foo(myDependency) { return myDependency.call() } const foo = new Foo(myDependency) ``` From my experience IoC container solutions almost always add huge cognitive complexity to a codebase and sacrifice readability and simplicity for some irrational feeling of being in control. Angular 1 is probably the best known attempt at IoC in Javascript and it got people confused and distracted more than it did help. Modules, functions, arguments - that's all you really need.
For a list like this it would be very helpful for those supporting legacy code, to include what standard (if any) the feature was added in, and links to more detailed compatibility information (i.e. sites like [caniuse.com](https://caniuse.com) or [https://kangax.github.io/compat-table/es6/](https://kangax.github.io/compat-table/es6/) and similar). We can look it up ourselves of course, but it would be nice to be able to be lazy and just click a link!
Also, I would recommend avoiding "tricks" with the post-/pre-increment and decrement operators. You will confuse future maintainers of your code, perhaps even yourself, with such cleverness and you won't help the compiler produce anything any faster like you would have been able to do in the early C days that these constructs descend from.
Not the OP - but there are always trade offs. IoC means you can move dependencies around the file-system without having to correct all your paths (yes, yes, your IDE does that, but we don't all use your IDE). It allows you to easily wrap registered stuff post-registration which helps with feature/access/a-b controls. It also makes mocking a whole bunch simpler than using &lt;insert mocking framework that messes with import/require here&gt;. It can also be used to auto inject dependencies by alias. That said, the latter is also a double-edged sword, and can lead you down a rabbit hole of re-implementing npm with some shoddy home-brew solution. Personally, I've enjoyed working with IoC on a few different projects.
Here’s a simple and powerful IoC Container: &gt; {}
Browsers dont have, and shouldn’t have acces to files on a disk. For security resons. You need a server to serve these files.
Writing tests
Thank you for fast reply. Appreciate it
Agree. And laugh from superb logical cont-arguments like 'you don't understand', 'makes you look incredible stupid'.
Yes, perhaps I should have made it more clear in my post. I'm not trying to serve real files. I want to recreate the files in the browser interface from "dummy data", as in a JSON file. I had thought about separating those interfaces with the back ends that come with those packages but still that may be too much work.
This would involve a web browser having access to files, which it does not.
Let me just copy my reply to another comment. &gt;Yes, perhaps I should have made it more clear in my post. I'm not trying to serve real files. I want to recreate the files in the browser interface from "dummy data", as in a JSON file. I had thought about separating those interfaces with the back ends that come with those packages but still that may be too much work. 
[OS.js](https://www.os-js.org/)?
It doesn't speed up the intended design, but it does speed up functionality, which is just as important.
Thanks, I will look into it. It looks promising but I'm just afraid that I can't separate out the single module I need. What is your experience in using this library?
ten years programming complex javascript frameworks and I do not understand what is this for. in which context does it help? Im familiar with IoC (I write game engines) but not in this context
Ah if you want only a file browser this is a pretty heavy. Havn't used it before, just got introduced to it recently.
Most people probably use at least some of these concepts very often, maybe without even realizing. This is just a more theoretical explanation. 
Too bad. But thank you anyway.
As stated by the other commenters, the browser can’t access the local file system for obvious security reasons. If you want to show dummy data without using any backend, you might have to mock a server response. To do that check the json format returned by the server side part, then modify the script/library to use your « dummy data » instead of calling a web server.
Cool, I haven't thought about it this way. It's a bit roundabout but it might just be the trick. Thank you for providing this insight.
To use commands from jquery.
Thanks, @sirluiss! Yes, you can, but, I prefer to use XState a full state management solution. For handling the things you would with MobX (non-enumerable state), XState have the concept of [context](https://xstate.js.org/docs/guides/context.html#initial-context) that is so powerfull.
Generally speaking, `$` is just a variable name like any other, with no special significance. However, jQuery is usually assigned to a shorthand variable by default; var $ = jQuery; ..so that this: jQuery('section.section--main') ...can be written as: $('section.section--main') Some people like to prefix their jQuery collections with a $, like so: $sections = $('section') ...here the point is to remind the programmer that this variable is a jQuery collection, on which jQuery methods can be called upon.
thnx
thnx
Glad to see your work. I have a project that will benefit from DI, and will look to see if nexus-di makes sense for it. Thanks!
I use the basic concepts almost every day in my code. You can read a lot more about those here &amp;#x200B; [https://www.matthewgerstman.com/functional-programming-fundamentals/](https://www.matthewgerstman.com/functional-programming-fundamentals/)
How about this which Google turned up https://github.com/streamich/memfs
I personally like both the composition and class pattern equally. I choose the composition pattern when there is risk for "this" confusion, for example when working with DOM elements or when one of the injected dependency of the factory is itself a class. I also use it for small objects because it's less verbose. &amp;#x200B; Most of the time if there's no this confusion and it's a big object with methods, I will always use an ES6 class. There's really only 2 reasons, I think it looks nice and clean, and the "this" prevents me from having random globals in the main scope of that file, which just looks cleaner in my opinion. And the second reason, which is not just subjective, is that I can easily extend Event Emitter (in node), which probably half of my modules end up needing.
I'm interested, how do you handle dependencies for game engines and do you have a JIT loader for them? Preload all? Preload some? I'm honestly asking.
Hi /u/wikipcsolved, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SagaanSoEpic, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/nikoto-, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Bokyja, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
You should learn Javascript, not A version of Javascript. A lot of features of newer versions are just syntactic sugar over old features, if you only learn the sweet version, chances are you'll never learn how things work on the inside.
I preload all on startup
I love the design, on another note, wouldnt it be better to use an email with your domain name instead of gmail?
Most people say it's because of the browser, and that's true, but nowadays even without the browser, there's another thing. The ease of use. Nodejs is super easy to install. NPM has a great website with modules for literally everything. It's so easy to open up the Chrome inspector and write some code. Also servers are so easy. It's one line of code and your server is running, doesn't require anything more than just node.
&gt; in which context does it help? To me, its only useful when used to provide objects unknown at runtime. Imagine a framework that loads, configures and starts an SQL connection, then injects it into some downstream code that just asked for "SQL". The downstream code only has to know that it needs an object registered as "SQL" and what its API is. Using a DI/IOC container to manage code you fully know about before hand is totally pointless. Coming from someone who has a 5 year old JS DI package in active development and a framework that uses it. 
Well if you want to put anxiety on most of the developers out there, this is the best graph ever
You should've posted this to /r/learnjavascript instead. Promise { &lt;state&gt;: "pending" } This happens because you never really await the result of the promise. Use \`const data = await fetch('chawki726');\` instead
They used to be more important pre-ES5.
It would be great if someone made an article about the architecture of an app in functional programming instead of basic/advanced theory. How functional programming handles state? How it handles events? How do you make different systems work together? What are some common design patterns? 
I used bind only with jQuery while it was the thing
i got asked about it at recent job interview and they where surprised how i have never used it 😁
Shouldn’t design patterns be way up above with JavaScript then at the bottom 
jQuery is still a thing tho
I like jquery but I dont use it with vue and react, and you dont need it
Lambdas made so much of that go away. 
Sometimes you don't have a say in what the Team should use, they just do. 
not sure what you mean :D
Why is this a self-post and not just a post to the link directly?
I think you'll find serious business owners see the internet and tech as something to increase productivity and profits. But if you want to go full millennial add some unicorns and rainbows 🌈🦄and it will be playtime forever. May the force be with you. 👍
They're not things you need often, but they're important tools you should have in your tool belt. "Bind" used to be crucial before we had arrow functions; less so now, but still useful now and then. "Call" and "Apply" might not get used much if you're using frameworks, but people _building_ those frameworks use them a lot. They're really important when making any kind of event system or managing complex callback behavior. Search the source code of your favorite frameworks, I guarantee you'll find call and apply in there somewhere. Or, if you use the "async" library, search the source of that - a ton of examples of "apply" used there.
makes sense, thanks
I got font-display: swap to work by defining the url inside the font-face.
What do you mean, sorry?
This is legitimately awesome. Thanks man! 
Why would JavaScript be on the bottom? I was thinking that design patterns would probably be higher up, but JS on the bottom doesn't make sense to me.
I said design patterns should be up above with JS...
Hello, thanks for the comment, One of the things that led me to develop nexus-di instead of using something else is that the other projects that I saw were using some sort of preprocessor like Typescript, while you can use nexus-di with decorators which need the addition of something like Babel, it can be used only with es6 classes which should be supported in all major browser. &amp;#x200B; About why you should use it, let's say you have the following classes: class A { constructor() { this.dependencyB = new B(); this.dependencyC = new C(); } } Class B {} ClassC { constructor(){ this.dependencyD = new D(); } } class D {} We can see that class A is coupled with the construction of class B and C and class C is coupled with class D, this is bad because any changes to the constructor of class B and C, for example, will impact on Class A, while in this small of a code base this might not seem like much, we can imagine the impact it will have on a large code base, in this case Dependency inversion principle will help with the decoupling this classes, and applying it might look like this: class A { constructor(dependencyB, dependencyC) { this.dependencyB = dependencyB; this.dependencyC = dependencyC; } } Class B {} ClassC { constructor(dependencyD){ this.dependencyD = dependencyD; } } class D {} Now class A don't know and don't care how to create class B and c, but you still have the job to instantiate class A that might look like this: let b = new B(); let d = new D(); let c = new C(d); let a = new A(b, c); and using a container like nexus-di you will declare the dependency graph on the class itself, and the container will be in charge of figuring out the dependencies, after that, getting an instance of class A will look like this: let a = container.getInstance(A); For small projects it will not have a big impact, but the bigger the project gets the bigger the benefit.
I said design patterns should be up above with JS...
Usage for these functions tanks when you dont use `this` in your code, or classes...
Nice glamour shot