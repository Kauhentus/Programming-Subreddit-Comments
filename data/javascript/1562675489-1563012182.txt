I would put variation on the click point and x value. Clicking dead center, moving right in a straight line is a clear indicator of a headless browser. If I was going to implement this I would definitely check for that. I also can’t see a slide to confirm being good for accessibility.
Hi u/femski, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
My experience hiring lots of front end devs is that candidates who breeze through the screening interview almost always succeed in the on-prem interview.
You move your arm all day every day though.
If you bomb any part, but still get an offer they will use that as an excuse to pay you a lot less.
Maybe [https://nestjs.com/](https://nestjs.com/) will inspire you?
According to some people in this thread, that's all they do at FAGMAN companies.
Fantastic \\o/
I think it really just depends on the organization. I only mention the OOP stuff as having just gone al the way through Amazons process recently, there was a large focus on it. That being said Amazon is comprised of multiple orgs and it could have just been the one I was applying to.
Ahh, that's annoying. Fixed it! Thanks for letting me know.
I think it just depends on the organization. My experience in enterprise systems, OOP is still dominant in the areas I have worked.
Out of curiosity Have you interviewed any Germans straight out of university? Because as far as i know most of the German CS Bachelor is mostly theoretical, hardly anything regarding specific algorithms, O(n)-or let alone any specifics for a language.
uh no mastering doens't do shit, if you dont use it you forget it. it's always been that simple.
Hi u/pilfton, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/ower89, this post was removed because your title included a URL. Please use the `submit a new link` option with a descriptive title. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/morgansennsei, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/ower89, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/ower89, this post was removed because your title included a URL. Please use the `submit a new link` option with a descriptive title. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/ower89, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
You need to wrap the implicit object return statement in parentheses so it is not interpreted as a block.
Hi /u/ower89, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
My wife was in charge of database marketing analytics for a bank and did an interview for a junior role and the candidate said she didn't want to work with anyone who didn't have a degree. My wife was very composed and told her calmly that she didn't have a degree. I don't know why people say such stupid things in interviews.
I like Javascript more than c because I don’t know the difference between float and double! ftfy Also I know you said you don’t know any C, but you can also set the -O3 flag to fully optimize the code at compile time.
Ha no those things are more brain teasers than anything, I work at a major tech company in nyc and had to do a bunch of those stupid things to get the job. However useless they are, it's the standard these days.
Especially these days
I'm not going to be able to provide quite what you're looking for but someone else may find it useful. I just turned 18, and while I was 17 went through Googles interview application process. I'm not sure about other countries but in England (not to be confused with the UK) Google, Facebook, Amazon etc all offer 2-5 year apprenticeship programs where your degree will be paid for. I didn't find the technical interview wasn't too hard, although it was designed to stretch you. It started off with questions related to code complexity, and was theory based on me making assumptions on which sorting algorithms could be faster and how I could improve the efficiency of code they showed me. It then went on to questions relating to tree diagrams and how I could sort(?) them or something, the final and main questions were having me write a decompression algorithm on paper, for example, I'd need to decompress He(2l)o into Hello, it also needed to accept nested statements. So for any other potential apprentices here, in-depth CS fundamentals aren't needed, however, the ability to break down the problem and constantly explain your thought processes are, as the interviewer gave me quite a few tips and prompts and wouldn't have been able to if I had that there in silence, I also wasn't worried to ask for help when and if I needed it, for example, I said "I can't remember what key/values the regex function would return" and he then said something along the lines of we can assume it provides x,y and z which helped me further down the line. I was also commended for explaining my thought processes afterwards. Someone else I remained in contact with didn't do as well as they may have hoped in the technical interview however he did really well in the project interview (we presented a project they asked us to code at home 1 week before). Messing up one interview doesn't necessarily mean you've failed, however you should make sure you've got extra brownie points in another interview as with Google I know for a fact it's point based, thus your overall points need to balance out to above other people.
Set your repo to public. ;)
Quick sort is what I consider "textbook CS". Stuff that comes up at work are things like "transform this deep data structure into this other one, accounting for cyclical dependencies", where blindly throwing lodash at the problem doesn't cut it. Really what the algo session is trying to probe for is that you are fluent with programming techniques and able to use them to attack a problem, rather than fumbling in the dark. I don't know the policies in other companies, but in mine, the general rule of thumb is that a hire should be able to move to different teams, so merely having learned how to crank out React+Redux from some bootcamp won't necessarily translate to the person being able to abstract logic into well-tested libraries. A successful engineer is one who is fearless at refactoring, and algo questions probe at the skills needed for that: ability to see big and small pictures and assemble/reassemble solutions.
Syntatical sugar for this.setState(state =&gt; { return { items: state.items.concat(newItem), text: '' }}); &amp;#x200B; My syntax might be slightly off.
Yeah, but even when removing the return statement, shouldn't it be `this.setState(state =&gt; { items: state.items.concat(newItem), text: '' }); ` Without round brackets
I have not. Generally we don't hire straight out of uni unless it's a PhD. They person needs some real world experience, but we do internships and have hired from that program. Regarding demographics, we have a lot of Chinese candidates because China has specific programming and machine learning colleges that people will refer their entire class from. We also get the gamut of other countries, including India, Australia, Iran, etc. Surprisingly, I've interviewed fewer natural born Americans in my current job.
No, this version would error. You need to include an explicit return statement or wrap the implicit return in parentheses.
Enthusiasm has to come organically. I had a candidate that showed enthusiasm that was forced. Every answer was "that sounds very interesting". We can tell when someone's faking enthusiasm/willingness to learn. It's not risky to admit technical weakness, it's honest. If you can supplement that weakness with another strength then the interviewer can adapt. For instance, if you're weak on CSS but strong on JS and HTML, then the interviewer can avoid a CSS question. Ideally we want it all, but we also realize that Google and StackOverflow exist. The best thing to do is say that you have attempted a few minor projects in the related languages, or have looked into it briefly. &gt; we can fairly assume that most people who wanted to work at any of these companies but failed the interviews also had a willingness to learn and interest in tech. You'd be surprised. One candidate I interviewed only wanted to interview for the practice of interviewing. He was technically sound, but the idea of wasting 6 people's time and an entire day of the company's time just for his own edification was upsetting.
Thanks! Lol how did i not see it
JS has Map and that's more likely to be similar to a Python dictionary than trying to twist an object into a map type object: [https://youtu.be/Wg1UtE4Dwis](https://youtu.be/Wg1UtE4Dwis) &amp;#x200B; So, with that said, whatever resource you find yourself turning to for learning JavaScript should teach you at least the ES6 version from a 2015 or so. If it doesn't then you're going to miss out on arrow functions, async/await, Map/Set/WeakMap/WeakSet, etc. etc. Be sure the newer stuff is well covered and good luck.
Be prepared to answer a lot of STAR Format questions about past experiences, and you have to go into detail.
Why would you avoid recursive calls?
This is from recent personal experience (&lt; 6 mos): Google - 45min per interview - Laptop if you want, but no syntax highlighting, execution, or debugging. - Leetcode on leetcode on leetcode. - No JS/web specifics. Honestly just leetcode. Facebook - 45min per interview - All whiteboard. - Real code samples from old FB javascript. - They want you to improve using leetcode-y optimization approach. ___ You WILL get bonus points for knowing language-specific optimizations (e.g. JS strings are immutable, [common V8 tips](https://www.html5rocks.com/en/tutorials/speed/v8/)), but what they're really looking for are web devs who have a good handle on the fundamentals. Both Google and FB have multiple-month-long onboarding processes designed to introduce you to their ungodly monorepos and specifics of their tech stacks. You will do A LOT of upfront learning after you join, so they test more for analytic/learning skills rather than web experience.
Hi u/Rakialtj, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
After decades of front end work, numerous apps, with a lot of complexity and large user bases...I've never once needed to go to that level. * Shrug * no idea why or what I'm missing, but I'm extremely good at what I do, and I just never ran across any 'leetcode-like' real world situations?
For apps, big O typically comes up in the form of database query optimization. In a previous job I jumped him to help a coworker optimize a data import script. He was going down a strategy of micro-optimizations. I looked at the log spew and realized the access pattern could go from quadratic to log n if we used a compound key. One line of code later, and the job was now running in seconds rather than hours. Moral: big O won't come up with loops much, but being able to identify areas where high complexity hides helps you ask the right questions to solve perf problems
I like that, the snakes are super tough though.
Realistically, how much effort is it to move from a CRA to next? My app has10 routes, w/ redux. Are the benefits that large?
Linux kernel docs say to use tabs (not spaces) of size 8 for indentation, but I don't think it's specifically for the vision impaired. &amp;#x200B; Running indent can switch out spaces, -ut for use tabs, and ts*n* to set tab size to *n.* `$ indent -ut -ts8 &lt;file(s)&gt;` Indent is nice because you can switch indentation to how you like it (there are roughly 10,000,000 options) for coding, then switch it back to the company's coding style before committing. the option `-nut` will use spaces instead of tabs for indentation.
I'd argue that someone who already understands big-o (and always has it in the back of their head) will be more likely to write more efficient solutions the first time, regardless of if it's necessarily warranted. It's usually more time consuming to go back to something you wrote a couple months ago and find ways to improve performance than it is to write it efficiently the first time
Seems cool, thank's for sharing and keep up the good work!
I must be the only idiot that doesn't understand what he's looking at. What is this? What animation is it talking about? The lil bash window scaling up/down?
Hi u/Sarting, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Is it broken? The demo link doesnt seem to work for me in FF or Chrome. [https://naver.github.io/egjs-flicking/](https://naver.github.io/egjs-flicking/) Scrolling the mouse wheel does nothing... only way to get to the other sections is to literally drag the scroll bar.
CRA?
Create React App.
create react app?
I moved an app about that size and moved it from REST to GrapthQL in about 3 months. Well worth the move. Next is really nice to use and solved a lot of accessibility issues.
Yes, a library for drawing an editor/console window and animating code typing/console commands. Not sure what for, but looks cool I guess.
CRApp
Does that have any benefits in this case? I'd argue that it sacrifices readability, especially since you have to skip the index argument.
... why do almost all of the pages require logging in, providing you with my contact information, to see any useful information? tfo with that.
That's great, i've star that one ... I suggest adding an `invertColor()` method .
Another frustrated redditor finds a voice on [dev.to](https://dev.to) where he can't get downvoted into oblivion.
LinkedIn frontend interview was very pragmatic in my experience. Implementing games, solving some intermediate level problems (e.g. making change) and whiteboard coding out the html/css of some component. Nothing even came close to CS fundamentals
same here, although github seems to be croaking a lot these days
I'm using firestore for my backend, does it still need to be graphql with next or are there other options?
Hi u/pewdsVStseries, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
We use mobx with firestore and next - graphql not required
&gt; Isn't it risky for a candidate to essentially admit their technical weakness, regardless if they're willing to learn and/or interested in tech? Actually, it's pretty much the opposite. If I'm interviewing someone that comes in acting like they're hot shit and know everything it's probably not going to work out. Nobody knows everything, everyone had weaknesses, the best candidates are aware of theirs and actively work to gain knowledge and expertise. On the other hand, I've recommended to hire many people who in interviews say they don't know some part. In those situations I can either explain it or hand wave that part away depending on time. Obviously don't be a dunce. But knowing your limitations and being willing to learn is an incredibly important part of working on any team.
I've done that in around 4 months: - 12 routes more or less between custom routes and normal routes - redux, redux-saga and react-redux - removed react-router and react-router-redux - refactored CMS calls to be inside server side code - refactored CMS functions that were storing into the store
Code performance is almost never the reason your web page loads slowly, unless you've introduced fatal bugs or make egregious render-blocking mistakes.
Hmm seems like I have to do more reading. If I understand correctly, any data from firestore (in my case) has to get requested on the server for SSR I guess ? Any resources you can recommend?
Hey dogofpavlov! Thanks for your comment. Some time ago, I needed to make something similar to the animation we can see on WeDeploy's home page (a terminal simulating CLI commands). I tried to find what they had used to make that animation and discovered they made that on their own... So, I realised that it was a good matter for a library. A couple of months later, I released Glorious Demo 👍🏻
Um, did you go to the same link that I went to? OP's link is a blog post by nextjs.org, which does not require sign on as far I can tell. There is a single, long post about the features.
Isn’t it sorta weird to write a blog post about UI accessibility and then put all of the code snippets in images and then not even provide alt texts for those images or any other description highlighting the code in them? Like not only do I have to wait for the images to load (which might take a very long time in bad network connection) but, if I rely on a screen reader, I can’t even learn how to write the code. But sure, let’s solve accessibility with a node module.
Their documentation and example are quite vast thanks to the help of the community. What I did was to follow this example to get redux inside the main app component, so it's available also inside the server side code: https://github.com/zeit/next.js/tree/canary/examples/with-redux And after that you store all the data (fetched asynchronously) needed for the first render of your page.
This is one of the most important things IMO: &gt; File system-Based Dynamic Routing: Express complex application routing requirements through the file system without the need for a custom server. TS support is also nice!
Hi /u/pm-me_your_vimrc, As stated in the AskJS guidelines, AskJS is not for help or support. This is your only warning.
The learn section requires GH login past the first page.
What do you mean?
Link works fine for me, but the flick slider is wildly glitchy
Ooh interesting... that is super lame.
First of all i didn't knew that i could build a discord bot using javascript. Anyway, what is your exact issue ?, because **doesn't work** isn't very helpful. Try this article: [https://github.com/Chikachi/DiscordIntegration/wiki/How-to-get-a-token-and-channel-ID-for-Discord](https://github.com/Chikachi/DiscordIntegration/wiki/How-to-get-a-token-and-channel-ID-for-Discord)
The real world applications are different sure, but the core idea was to pass data around, much like the FP mantra of pure functions
I'm a front end engineer at one of the big companies you mentioned, and I interview candidates regularly, specifically in the coding and algorithms domain. What we're looking for is that you understand data structures well enough that you can use them to solve complex problems efficiently, even in front end. You should know specifically what time complexity all the basic operations are for each common data structure, and some edge cases just to be sure, (like inserting into a sorted linked list with vs without having a reference to an adjacent node). Language doesn't really matter as long as you know the language you're using well enough to complete the code. One thing that really trips people up is getting stuck on solutions that don't qualify with the requirements. Like, I'll ask a question saying that it also needs to be done in constant time, and the candidate will try to use operations that take log time. If you're given a restriction on time complexity, just mentally rule out all operations and data structures that don't meet it. Another thing we're looking for is how clean your code is, but that's less important. If you write code with big glaring bugs, that can be a red flag. I care a lot about how the candidate architects their algorithm. Get to a working solution first, then optimize. If your first solution isn't working, don't be afraid to dump that approach and start again. Being attached to a bad solution for the entire interview can kill your chances. Luckily, a lot more slack is given to junior candidates vs senior. Don't be afraid to ask a question if you forget something. You'll have Google and Stack Overflow on the job, so we'll give you answers and hints that we feel are reasonable. But most importantly, practice practice practice. Go look up example interview questions and learn how to solve every single one. Get to the point where you can solve higher level interview questions easily and you'll pass with flying colors.
Does your Endgame App work in Internet explorer, or any other browser than Google Chrome for that matter?
A framework that requires a login to "Get Started"? https://nextjs.org/learn/basics/getting-started That's a hard pass from me.
Hi u/PhilSkies, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Agreed, everyone wants to live the dream of supporting a single browser. But only supporting Chrome seems shortsighted. What about The other 30-40% of browsers out there?
Another good way to practice is to code your own data structures. Make your own library of all the common ones, that way you'll know them inside and out.
The scope is to not transpile while you develop. For production at the moment the transpilation is probably the better way to deliver and reach all platforms.
yeah, so i went elsewhere on the site to find out what it *is*, and almost every page requires login. not cool.
Could be useful for training purposes.
Yes, this. I'd much rather explain something to a candidate and move on than watch them stumble through something they obviously don't know but are unwilling to admit. I've had candidates argue with me about things they didn't know. That's a very big red flag.
From a screenreader user take an up vote
I'd rather be working off the same code the users are running
Ok, but how does setting up a transpiler for dev hinder your workflow? And how do you debug other browsers while developing? If you're transpiling at build then you still have to set it up... And if we're talking browsers you still refresh it on every change in *some* way so... I just don't understand the *why* of that blog post or that solution.
Not exactly. There's a difference between forgetting something you memorized and blanking on something you deeply understand.
it just seems dumb to remove tab characters from source code for reasons of "simplicity" if the software used to view it still recognizes tab characters. the latter is the real complexity, not 0x09 in place of 0x20202020
Let's hope so! 😁
STAR?
You ever broken your arm? 😛
That's... A very unfortunate acronym
&gt; it just seems dumb to remove tab characters from source code for reasons of "simplicity" if the software used to view it still recognizes tab characters. This seems like an arbitrary reason to me. Most of the software that can view tabs can also view emojis too but I don't see many people advocating for their use in code either. It just seems dumb to me to use another character when another already does the same job equally well. &gt; the latter is the real complexity, not using 0x09 in place of 0x20202020 That is not really what complexity means. Almost by definition, adding another "rule" makes it more complex. It doesn't matter how long the encoding is because that isn't relevant. "Always use the space character" is less complex than "use the space character except at the beginning of the line where you instead use the tab character".
&gt; nothing is commented because the code is supposedly self documenting eughhhhhhhhhhhh
Same for me, but Safari
Moderate-Low
Razzle/AfterJs is a good alternative. After I saw the removal of AMP HOC I am worried the direction nextjs is going
You're not being the old man at all. And to be honest, when you're working on client-side code, all these new conventions need to be transpiled into the old ones anyway using a tool like Babel - something like [...thisArray, ...thatArray] ends up using .concat(), just that today's JS developers don't see what's actually served up to the browser! The fact is, the old conventions are perfectly readable. And if they aren't readable to someone, then they haven't learned the basics properly. Most tests show that the old conventions work far better than the new ones too - even simple methods like .map() and .reduce() are quite a lot slower than a standard for or while loop.
Nice work! I remember managing state was one of those things that took me the longest to understand. Next up, you should add in some basic data persistency. You can use localStorage unless you want to start getting database experience. [localStorage is super easy to use](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) so I'd definitely start there.
 &gt; That is not really what complexity means. Almost by definition, adding another "rule" makes it more complex. It doesn't matter how long the encoding is because that isn't relevant. "Always use the space character" is less complex than "use the space character except at the beginning of the line where you instead use the tab character". your rule is "use X space characters for one level of indentation," for a variable value of X, such that you can't tell by looking at a line how many levels of indentation it has -- you have to look at the rest of the file and deduce how many spaces per indent are being used. and unless you hit the space bar X times for each indentation, the rule you actually follow as a programmer is just as complex ("press tab at the start of a line to make an indent, and space to make a single space"), and arguably more complex because now your editor can't type tab characters and has to know how many spaces a tab press is worth. is that not an additional rule compared to the default behavior of printing the character that corresponds to the key pressed?
Well you said php. Traits ... do you know about them? Well php developers heard about them and said:"thats a swell idea because laravel use it". I am gonna say, developers are bad and use a jackhammer to put up a nail. And when it doesnt work they blame the language. There are stupid things done in Java, Python ... you name it.
Add routes, state management, add a modal using React Portal (perhaps when you click on the film poster it opens a modal with a synopsis). After that set up a server and fetch results dynamically from that.
You're right, that's weird. Everyone on medium host their code with &lt;3 and github. Cypress is definitely very cool and when there's an "a11y" (never heard that...) lib, that's good to know. Remember, many QA's think selenium is the way to go. When they can even spell automation...
When used correctly the higher order functions can be more readable. If they’re not then they’re not being used correctly. Map is much more readable for object transformations in arrays despite being more terse than for loops. Reduce is a tricky one, sometimes it’s pretty ugly. Declarative code is typically less readable in something like node and express when the project gets to a certain size. I tend to agree with your node developers on this. Node is a different beast from most javascript browser code because of its callback design. Just my .02
You are requesting an insecure JS asset which is breaking things for me: ``` Mixed Content: The page at 'https://naver.github.io/egjs-flicking/' was loaded over HTTPS, but requested an insecure script 'http://scene.js.org/release/latest/dist/scene.js'. This request has been blocked; the content must be served over HTTPS. ```
Is there something similar to leetcode, but for frontend “feature building”? I.e. a list of “do this with JS” kind of problems that are likely to appear on FE interviews.
Arrow functions are harder to read when scanning code. It used to be that the only way to make a function was the function keyword. You'd have a simple rule that your brain could process quickly when scanning code, look for that keyword. Now you can have this: const larger = (index) &gt;= (bigNums[index]) Is that a function? No it's just a boolean that's true if the index is as big as the value at that index. Here's the function that returns the bigNum at that index: const larger = (index) =&gt; (bigNums[index])
Situation, Task, Action, Result - it's a framework for responding to questions. Completely changed how I approach interviewing. Practice using it.
I write python using nothing but tabs, why would I mix the two?
Arrow functions are pretty idiomatic nowadays. The claim about map/filter being more readable is cargo culting, TBH. Anyone worth their salt can read either without much difficulty. The detail people usually miss here is that map/filter/reduce are meant to encourage smaller functions, but if you're comparing huge for loops with a huge single map/filter/reduce call, none of them is going to be very good code. If you're seeing a ton of `_`, I'm going to go on a limb and guess that someone was trying to learn functional programming on company dime. Using lodash per se isn't super great but isn't necessarily terrible either, but a lot of what it can do can also be done without it these days. You may just need to read up on it a bit to get familiar with the most common methods, maybe refactor it out slowly if you can. "Self-documenting code" is kind of a cop out. It should say WHY things are done certain ways if said things are not intuitive. Even typed code usually requires documentation to explain the intended use cases for some params, so it boggles my mind that anyone would think untyped functions are self-documenting in any way.
Especially these days
That's what put me off of it too months ago when I started investigating it.
 // map the array to a new array of all the values incremented by 1 const newArr = []; for (let i = 0; i &lt; arr.length; i++) { newArr.push(arr[i] + 1); } vs. const newArr = arr.map( value =&gt; value + 1); I dunno about you, but bottom one is far more readable to me. There's just less going on, virtually everything in it is strictly relevant to purpose of the code. It's easier to write and maintain- there's only one reference to each variable, you don't have to write and maintain an implementation of iteration, or documentation (which will get out of date) - there is objectively less to go wrong. I'd say the only reason a comment is desirable for the first one, is that the purpose of the code is hidden in between and across 4 lines of irrelevant guff. Even then, that comment could be misinterpreted. Even, even then the comment is longer than my "shorthand" implementation, which says exactly the same thing. The comment is duplication. There's a time and a place for comments, but a lot of the time, the motivation is the code not being readable or obvious- sometimes I'll throw in a comment for something like that out of laziness, only to push it for review and be told to, or helped with, rewriting it to be readable, making the comment redundant duplication. The result is objectively better code- as even if it was documented, if you wanted to work on it, you'd still have to read the actual code and understand how it was doing what it was doing, and if in-fact, it actually does what the comment says. Proper, engaged, code reviews and group consensus is vital to this actually working though.
*rolls toilet paper roll under toilet door*
Well the first example is made more difficult to read by the unnecessary parens.
Weird, I didn't have to log in. Checked the dev tools and I have no cookies set. Maybe they removed the log in requirement?
How did we even get to this debate? The entire purpose of the Tab key is indentation. End of discussion.
Hi u/Jrh20racing, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
For someone with crap vision: this sucks, I can barely distinguish function and parameters.
I agree with you.... but its better when you get used to it. &amp;#x200B; Especially the defaulting values when you destructure! &amp;#x200B; A lot of the new ES saves me about 5 lines per function :)
Neat!
I know a little bit about float's and their quirks. I just never knew that X + 1 = X would be true. Keep in mind, this isn't about the maximum value of a float. Far from it.
Ok I removed them. Disturbingly still valid code.
CoffeeScript is optimized for writing code fast. It turns out that this is the wrong thing to optimize for. You should instead be optimizing for maintainability over the long term. This is why TypeScript is winning. If you're by yourself it doesn't matter, if you ever want to scale your team, or make things easier JavaScript or TypeScript is the way to go.
Might as well argue to be writing in machine code, since it all ends up there anyway- the entire point of transpiling is that we don't care what the mess the transpiler spits out looks like. We work in the source code, the value of most of the new language features is in making it easier to write code. Unless you are actually writing a specific piece of code that needs to be highly performant, and can establish a bottle neck there, you shouldn't be writing your code based on the performance idiosyncrasies of JS engines- they can and probably will change and vary, and performant code isn't valued for its readability. Every other thinkable quality of the code takes precedence.
I think you will find that the more shorthand you use, the more characters are removed and thus, the faster it is to understand because you can absorb patterns better in your peripheral vision because there is less noise.
Styling. Checkout a CSS framework like Bulma or Materialize to step your presentation side up! It's actually super easy to use these frameworks after a little bit of practice to create a beautiful website. If you really want to build this out, checkout something like Firebase that'll allow you to make a nosql cloud db to create accounts save state.
That’s just the interactive tutorial that saves your progress. The main docs are open and probably what you’re looking for.
I personally highly dislike all the libraries using special caracters. It has been announced a while back that for nodeJS in order to declare a private variable you are gonna use `#`. Instead of the convention of putting underscore in front of the name (which didn't really make it private). Most language that I know of there is a `private` keyword that accomplish this function. But well, PHP was not any better with the `$`. Arrow functions are fantastic though, and no offense but they are not only used in JS. Most importantly, in JS it definitely helps with the context `this`. Concerning the comments, I am of the school that code shouldn't uselessly be commented. Have something tricky that there is no way to make simpler, fine comment it. Otherwise make sure your code is readable and function and variable names are meaningful. I don't comments on the simple basis that I don't believe anyone that go back to update their comments once they modify the code. On a final note, Javascript is definitely evolving rapidly and I can understand that you feel left out. ES6 was a big step by including the new class architecture. Had it not come from a scripting language it would probably be more intuitive than it is right now but it's definitely better than it used to be. ECMAScript 8 in particular added some very nice functionalities to make asynchronous code as if it was synchronous.
It shouldn't be a ton of effort to get things working, but there are a few gotchas. I'm guessing your current app does most of its data fetching in `componentDidMount`, but in order to take advantage of Next's server-side rendering you will need to move most of it into `static getInitialProps` (unless you just want to server-render a spinner). Most of the issues I've run into with Next have had to do with getting `getInitialProps` to run the same between the client and server. On the other hand, I just switched a medium sized project from Next to CRA (with @reach/router) in under a day.
* Use a package-lock.json * Use npx for running the command * Don't require yargs in the middle of the file, but move it to the top. * Break apart your callback hell into testable functions. The huge chain of callbacks is a bad code smell. This means pulling out the functions in .command in to concise blocks. * Split the above functions across multiple files. * Write tests. This will be 100x easier once you split apart the functions mentioned above. * Whats the point of making people call save explicitly vs. just savning the file in /data. * Rename /data something like scans since data is too generic * Add .DS_Store to your .gitignore * You use promises randomly inside the code when most of the code is callback based. I wouldn't do this. I probably wouldn't use yargs unless it had a promise based api, and instead roll my own, but I would use async/await instead of callbacks. I certainly would avoid mixing concurrency primatives (e.g. if you're set on using yargs, just stick with callbacks).
I would write those like this: const isLarger = i =&gt; bigNums[i] That is a predicate function so it should always start with \`is\` or \`has\`. In practice reading the code, you don't care what the function is doing because it's an algorithm that tells you, in this case, a Boolean for whether or not something is larger. I also dislike the name \`bigNums\` because it doesn't help you understand what that is. It should be something like \`yearlyRevenueForDate\[i\]\` or something. This helps you quickly see if the algorithm itself is important towards how it leads to \`isLarger\`. &amp;#x200B; Naming things is difficult and goes extremely far towards conveying sufficient meaning. I used \`i\` because it is effectively shorthand for the cursor position of the functor. Reduction in noise there makes adjacent symbols stand out more relative to \`i\`, making everything faster to absorb.
Hi u/dotobird, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
If you're having problems with readability on comparisons versus arrow functions I recommend installing a font kit that has ligatures. I literally never have the problem of confusing the two from a readability perspective. Maybe it's ligatures that help or because I've been writing in C# and typescript for a while?
That's interesting, why switch from next to CRA? I'm mainly concerned with SSR as my rationale for potentially migrating. Overall I've been really happy with CRA, and wouldn't be surprised if they add deeper SSR support in future.
Don't quote me on this, but IIRC the browser renders as soon as all page content is loaded and global scope JS is executed, so if you put content generation right in a script tag, it will happen before first render. But usually you want to display some minimal markup ASAP to keep the user entertained.
URLS, bookmarks can be used to save progress, that's how rollup repl saves progress.
He's talking about node anyway, which is not being transpiled unless for some reason you're using really old libraries, so the argument is moot.
Agreed, and further to the point you could write your own map functions to do the job with callbacks if someone wants more control over the performance of it.
It's not that they do it, it's that they want to avoid false positives at an extraneous cost. It sucks but it's the gate keeping they do for the prestigious jobs
I had a front-end 'web designer/developer' who told me once that ID's were used on multiple elements to directly target a group of elements.
It's good to learn the principles, just don't use localStorage for sensitive data or for production apps. Use a web DB instead.
It's not like that at all. Smalltalk objects have state. They mutate that state.
&gt; a case in your text editor or terminal driver for how to display a tab character is another rule. that is complexity. But not complexity in my code. &gt; you have to look at the rest of the file and deduce how many spaces per indent are being used. so spaces actually don't do the job of tabs equally well. No. My text editor has to do that and the job of the tab (or the space) is not to indicate how many spaces your indentation takes up. The job of the tab (and the space) is to create spacing so that you can read your code clearly. You can make any degree of indentation with a space but you can't do that with a tab unless you set the tab to be the same size as a space. &gt; and unless you hit the space bar X times for each indentation, the rule you follow as a programmer is just as complex ("press tab at the start of a line to make an indent, and space to make a single space"), and arguably more complex because now your editor has to know how many spaces a tab press is worth. is that not an additional rule compared to the default behavior of printing the character that corresponds to the key pressed? I don't care if my tooling has to do more work it's not relevant to me or the quality of my code. At worse a tab is equally as complex as a space but with no benefits and less flexibility. So, again, why bother.
Sorry for the potentially dumb question, I'm entirely unfamiliar with nextjs. Are hooks possible instead of class components? If so what would be the getInitialProps equivalent?
Hi u/yjy3, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/McBashed, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
What's the point of exhaustively testing that some trivial thing outputs as expected for every combination of inputs in a class? For example, say I wanted to test `add`. How can I get more confidence than a single `assert.equal(add(0.1, 0.2), 0.3)` test? Repeating the test with different meaningful values exhaustively would require literally writing out manually every other permutation where IEEE 754 floating point does wonky things, and nobody ain't got time for that. Realistically you just want to get more confidence that a thing does what it's meant to, given a sample input, compared to having zero confidence. The only way to get more confidence after that is to test that known implementation branches are being triggered (i.e. increasing coverage with meaningful tests) or throwing different type arguments at it to check for problems related to type coercion rules. Merely running through the same code paths a hundred times with different numeric values isn't usually going to increase confidence but it will slow down tests/CI...
The self-documenting thing is bullshit. Most methods need a description of each parameter and the return value. Preferably in some standard format from which you can generate some nice HTML auto-documentation. Something like this: [https://jsdoc.app/howto-es2015-classes.html](https://jsdoc.app/howto-es2015-classes.html)
To save your progress through the tutorial, I believe.
Full ES6 minimum
You will absolutely never use calculus in front-end development. (Unless you're in the weird edge cases of development...) If you are genuinely never going to pursue another degree, it may be worth just doing the diploma. But even if there's a remote chance of it, it might be worth doing anyway. Plus learning Calculus never hurt anyone, even if it is a bit painful.
I don’t think that’s a browser console but the ESLint console. A linter validates your code for syntax errors and coding standards. Console.log is something that shouldn’t be used in production but in this situation, it doesn’t matter. Is it working in your browser console? Are you seeing the logs?
Have they solved their dynamic routing issues?
It is about the environment you are running your code on. It doesn't have console object predefined. Mainstream environments like any browser or nodejs have console object. It also gives error for unused variable declarations. But nodejs or browsers won't give error for such thing.
ESlint is reminding you to remove your debug code before releasing it.
yes it's working properly as shown in online courses, so as long as the output comes out properly, I can just ignore all these "errors"?
On what browser? The code users are running may be different based on browser features.
You can for now. Linters are useful when working with multiple people to keep the same coding standards + they can help you find dumb errors super easy later on
[removed]
Hooks work fine in Next, but hooks and `getInitialProps` aren't really related. `getInitialProps` is used to pre-fetch data during server-side rendering. You could use both hooks and `getInitialProps` by defining your page as a function component with a `getInitialProps` property like this: ``` About.getInitialProps = async () =&gt; ({ foo: await fetchFoo() }); export default function About(props) { const [count, setCount] = useState(0); const { foo } = props; return ( &lt;div onClick={() =&gt; setCount(count + 1)}&gt; foo: {foo}, count: {count} &lt;/div&gt; ); } ```
again deeply understand still doesn't mean you will remember it and implement it correctly in 45 minutes. In real world you take notes. Notes you refer to when you need to.
The reason why **I prefer reading code with .map, .reduce and .filter is because I can reason that there are no side effects** and that a particular statement only sets a single variable. This tremendeously lowers the mental load since I can see from `const listWithVowels = listOfWords.filter(...)` **what it does** and don't have to care about the implementation detail, **how it does** something, without ever reading the function inside. With for loops, side effects are pretty common and care is needed to read the insides of the function through to check if it does something fishy. Writing side effects for map, reduce and filter is deliberately cumbersome and I would reject any PRs that I spot doing it. The same reason is why I don't like mutating statements like `[].push()`. If I see push(), it immediately makes me wary that anything holding that reference might have their data change stealthily. Thus I might need to look up the scope of that array variable and take mental notes of where it was assigned to, who still holds a reference, etc.
The calc required for comp sci is incredibly simple, and can be learned easily on youtube then you can write your tests. That said, you won't use it in front end dev.
Hey! Here's a movie search app that allows you to create an account and favorite movies. I built it using Vue and Firebase if you want to check it out for some ideas. I made this for fun a year ago. &amp;#x200B; [https://fire-app-7973d.firebaseapp.com/](https://fire-app-7973d.firebaseapp.com/)
The one that the vast majority of my users are using. Meaning we have a chance of catching the majority browser specific issues, anything that's introduced in the considerable step of the build process you bypass, and avoid anything introducted by the extra divergent steps you are taking. Obviously it's impractical to exactly match every user's environment, but the closer we are to more of them, the more confident we can be of the code.
Hi /u/Lathryx, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I agree with you. Writing in a declarative/functional fashion, when done correctly, can lead to free performance gains if the underlying engine (node or browser) improve. ~~~~ const inputList = [...Array(5).keys()] // [ 0, 1, 2, 3, 4 ] const square = x =&gt; x * x const add = x =&gt; y =&gt; x + y const add2 = add(2) const squareAndAdd2 = list =&gt; list .map(square) .map(add2) squareAndAdd2(inputList) // Returns Array(5) [ 2, 3, 6, 11, 18 ] ~~~~ Here, I think the intent is pretty clear that I am taking the input list, squaring all values, and adding 2. This is valid JavaScript, but using the latest JavaScript constructs to look more like Haskell and Lamda Calculus, which is where FP comes from. Since I'm describing what I want, instead of telling the computer how to do it, the underlying engine developers can switch out whether a for or while loop would be faster (for a simple example). The language [Elm](https://elm-lang.org/) actually does this, as it's a pure functional language that compile to really fast JavaScript. [Here's a comparison site where you can check it out for yourself](https://evancz.github.io/react-angular-ember-elm-performance-comparison/)
&gt;It used to be that the only way to make a function was the function keyword. To nitpick, not exactly. Although I'm not sure how old this syntax is. `const foo = {` `blah() {` `console.log('Hi!');` `}` `};`
The project I was building didn't benefit much from SSR (internal app, no SEO). In my experience, SSR can create all kinds of unexpected complications that IMO aren't worth the trouble if you're not benefiting much from SSR. Some things that come to mind: - All top level and `getInitialProps` code needs to be able to run on the server. This means you will run into unexpected errors like `Cannot read property 'createElement' of undefined` because you're trying to create an element during initialization. This also means any auth tokens will need to be stored in cookies so both the client and server can access it. - File based routing sucks. It looks like things have improved a little with this latest release, but not being able to change your routes at runtime isn't ideal. - A server is needed for SSR. Most of our apps just have a single API server, so this meant we either needed to have the API server handle page requests, SSR, and, API requests or host a separate server that just handles SSR and proxying API requests to the API server. Splitting the servers ended up working better for us, but it also added a decent amount of complexity to our deployments. - Thankfully this has been fixed in this release, but in the past adding typescript support was fairly confusing.
I think an understanding and utilisation of static typing is far more effective for an otherwise average developer for refactoring or mapping data. _Nobody_ with experience could ever feel confident hacking away at a large, untyped codebase. That's literally why Microsoft set about inventing TypeScript (and presumably Facebook likewise with Flow).
Hi /u/stevenjchang, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
For comparison here's the same code in Haskell. \~\~\~\~ add2 = add 2 squareAndAdd2 = map square $ map add2 squareAndAdd2 \[1..10\] \-- Returns \[9,16,25,36,49,64,81,100,121,144\] \~\~\~\~ &amp;#x200B; Or even as a one-liner: \`\`\`map square $ map (+2) \[1..10\]\`\`\`
Fuck yeah. Besides that first paint, it’s worth all of it.
Just be careful of Set if you need to use it in IE for compatibility reasons. I'm not sure how great the polyfills are for it.
Ah makes sense thanks!
Yes you're correct. Repeating the same test for `add()` with different floats does not add any value to the tests. The README uses examples with `multiply()` for simplicity but I agree those are not good examples. Now I do believe there are some meaningful ways to repeat tests with different inputs: - different inputs triggering different branches in the code. For example a library might have several files validating argument and throwing exceptions accordingly at different places. A single test could try each category of invalid argument (one input per category) and just check that an exception is thrown. When a new category of invalid input is added, it can be simply added to the list of inputs for that test. - fuzz testing. For example there are some popular libraries exporting big arrays of strings known to create problems when passed as arguments. You could create a test that iterates over those and just checks that no exception is thrown. - the repeated inputs do not have to be data, they can also be logic/functions (i.e. code branches). For example your library might export four methods that are supposed to return similar but slightly different outputs. Instead of creating separate tests for each method, you could share the same tests for all of them, and pass each method as test input. A helper function could normalize the methods outputs so they can be used against the same tests. This approach is not novel though, it's somewhat related to Data-Driven Testing (https://en.m.wikipedia.org/wiki/Data-driven_testing) which is quite old. Also major JavaScript test runners have built-in utilities for it (Jest (test.each()), Ava ("macros")) and there are several libraries for other test runners. However the current approaches have several flaws that this library is trying to improve.
Thank you. I will fix it as soon as possible.
Yeah... it’s a neat exercise but it’s solving a problem I just don’t have. My build tools make my life better, not worse. Webpack plugins like eslint-loader and webpack dev server are things I don’t want to work without, and the whole bit about source maps not being reliable has not been my experience. These tools have a learning curve, and if you aren’t using the correctly, they can give you a hard time. But I don’t really see this as an improvement, or even a real option. Cool article and all, not trying to hate.
Thank you for reporting . It should be fixed.
Hi /u/dbthegrandtour, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/zSacrety, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/R3DI98, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Funny you should mention that. A lot of coding challenges actually become a whole lot easier if you think in terms of types. This is something I look for: bad candidates usually don't have a good grasp of what the types of things are and end up getting lost in their own code. Good candidates often come up a data structure upfront and the solution flows effortlessly from there. The Linus Torvalds quote "Bad programmers worry about the code. Good programmers worry about data structures and their relationships." definitely has some truth to it. With that said, I don't think it's impossible to refactor effectively in untyped languages. Tests, for example, can replace type checking to a pretty thorough extent.
Hi u/zSacrety, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/zSacrety, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks for your response. How about back end though? If I go down the path of full stack I'll learn react angular and node as well as mongo.db python and ruby on rails in my classes
Gotcha. How about for backend? Thanks for your response!
Yes.
Hi u/jamesbishopsreddit, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Why?
Also not really necessary. It's more for other software development (but even then not super necessary). Learning algorithms is more important I'd say than being worried about calculus.
Please do
Semicolon is to JavaScript what dot is to sentence.
The node guys are just bad at explaining why higher order functions are useful. Yes, when you're used to them, it tends to be more readable than looping. The reason is you're only describing the transformations, and not the instructions for how to loop. THAT'S the real advantage - you're a) eliminating a footgun (accidentally incorrectly indexing into your array), and b) writing code that describes your business logic only
We are adding many bytes to our code for no reason.
It is not important, but I do not use them.
In my native language we don’t use dots
It's like with condom. Better to have it and don't need it that need it and don't have it. There are several cases where lack of semicolon can be problematic. There is 0 cases when having semicolon is problematic. Simple math tells me that I can press that extra button. Especially since I do it in other languages anyway.
Yeah sorry for that, I'll keep that in mind for the future (when I'll migrate off medium) I check every time before posting but medium doesn't seem to provide alt-text support for images (unless I missed some settings somewhere) I stopped putting Github snippets because sometimes I'd accidentally update them and then the article would end up referencing old code. I usually try to provide a repository which features the code snippets. If you have any other ideas how I could improve this, I'd be more than happy to take note, Also "But sure, let’s solve accessibility with a node module." by no means I try to "solve accessibility" with the use of this package. I showcase here how it can help to highlight some a11y issues.
Well, the browser reload time is in addition to transpile time. If you have transpilation while developing you have to wait the sum of the two times to see the result. Then debugging and optimizing the real code (not the transpiled one) in Chrome inspector is a much better experience.
Hi u/stevenjchang, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
A nun9 ax bfn s. ? ! ! W g We. W www www f2f s W 4 www. R bcc. W Xc. A A bcc k when n t'd r. Zac w Re . 🌋🌋🗻📻 a. W Gn . Red ? A6? ! . nav bee w ewwb. R. We f
But on the other side we add many unnecessary chars which potentially leads to longer loading times. And other languages like python don’t require them as well.
I don't use semicolons, if I don't have to (see: work rules), mostly because I already have issues with my hands (something similar to carpal tunnel), and the fewer the keystrokes the better. That being said, I understand why people prefer them. Relying on ASI is rather silly when you consider how often things in the coding industry change.
I don't use semicolons, but my code formatter puts them in for me.
Lazy boi :)
Looks very cool- I love the way you've done the 'multi note search and replace' UI. Simple and brilliant. I'm very happpy using Standard Notes (much be a good one to add to your comparison!) but if not I'd be all over this!
Wait. What? Dude, that's hilarious! So... do you just put a condom every morning and walk out of the door, just because they're there (in case you stumble upon someone's orifices, or something)? Umbrella, too? Work gloves, safety helmet, garlic necklace (you know, vampires)? Nope, you wear protection when you *know* you need it. Also, if you need a condom you *always* need a condom. It's not at all iffy: the risks are very clear, every time you screw around, and are always there. It's not like there's "several cases where lack of condom can be problematic". So, nope, the analogy does not apply here :)
Hi u/grublits, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
How is this related to javascript? I imagine you'd be better served by some sort of data acquisition subreddit. Javascript deals more with the handling / presentation of resources. WolframAlpha has a computer language that could probably get the information you're looking for programmatically. Javascript simply does not parse terms or handle tasks as you've described.
Looks good! Congratulations for building your first web app! I took a quick look into your repo for the project and one thing you can do to try and push yourself is to ask yourself "where should the state live?". It's a simple app right now, but you might scale it in the future and need to access the 'count' in state in a child component of your &lt;Book /&gt;. Another thing is I see you do a map inside of the return in Booklist. As much as possible you should try to keep return statements as devoid of JavaScript. It'll help your code be readable and maintainable when everything is abstracted to their own functions and components.
Why is it okay to trust the garbage collector but not ASI?
An extremely low price to pay for bugless code and visually standard convention
Whatever :) More important may be: choose a set of code standards for the project, have them clearly documented, and stick to them. Standards make your code easier to read and more predictable, for other team members and even for your future self. If you choose not to use semicolons, just learn the few problematic cases and be mindful of those risks.
Probably not. Most servers are unlikely to allow you to simply use them as image servers for your own site. You can use wikipedia as a json api for images on each page, like so: [https://en.wikipedia.org/w/api.php?action=query&amp;titles=Brown%20University&amp;prop=images&amp;format=json](https://en.wikipedia.org/w/api.php?action=query&amp;titles=Brown%20University&amp;prop=images&amp;format=json) But this won't give you a link for using the image. You could perhaps use this to automate the scraping process though, like you add a University to your database, and it contacts the Wikipedia API, then displays the images on that university's info page and then you select one and your script scrapes, downloads and rehosts the image on your own server.
This is interesting. I migrated a Vue CLI app, of the same size, to Nuxt with SSR (the Vue equivalent of CRA to Next), it took 2 weeks to do by myself. Not commenting to throw any shade whatsoever, but I do think it’s interesting. Maybe there are more differences between CRA and Next than between Vue CLI and Nuxt?
Honestly, you're going to have to think about the industry you want to develop for. If you're wanting to develop in a graphics engine or maybe another math heavy field, you'll need the math. If you're just doing business software, you'll never touch it.
I disagree with the readability front. What is readable and what isn't comes from wether the code aligns to well known patterns. I would argue that let mapped = []; for (let x of arr) mapped.push(f(x)); Is (while more verbose) just as readable as let mapped = arr.map(f); Just because almost every programmer can understand and is used to the first pattern. And to people that don't know about/aren't used to Array.map, the second one will look alien (this includes developers that come from other languages) It is true that the functional patterns like map and filter make it harder or impossible to write code that doesnt respect the common patterns but this is because they are more restricted in what they can do. Note how i didn't include reduce in that list (something you pointed out as well) because it has the same problems that for loops have: it is too powerful. This is the same reason we stopped using goto in favor of structured control flow. You might say that when you write an unreadable reduce you are using it wrong, but the same argument could be used for unreadable for loops. Readability is about patterns, not an inherent property of a language feature. Good language features make it hard or impossible to mess up their usage, this ofen means being less powerful and offering fewer ways to write the same thing, but it doesn't mean that more general structures can't be used cleanly.
Hi u/BigSixy, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
 let newArr = []; for (let value of arr) newArr.push( value + 1 );
&gt; You'd be surprised. One candidate... I was referring to the vast majority of applicants who prepare for an interview in order to get the job, not that one guy who wasn't really interested and purposefully wasted the interviewers time.
Don't be reassured. I went through the same thing two months ago and they are just leetcode problems masquerading as practical questions.
Your build should include a minifier which handles this for you
The arr.map paradigm would be familiar to developers coming from a functional programming background, while the other pattern is clearly imperative. Since an API is supposed to be stateless in good implementations I am very comfortable recommending the arr.map approach in that particular implementation. &gt; return arr.map(f); is much more readable than &gt; let mapped = []; &gt; for (let x of arr) { &gt; mapped.push(f(x); &gt; } &gt; return mapped; Not to mention the mapped.push() method opens you up to mutation. In general I don't know why we should prioritize a lack of developer knowledge in language feature over choosing the right pattern to implement. I get readability, but the map function is much more readable than the push one, and I write code in several different languages. NodeJS, which the question is about, is simply better when written in a functional style. Imperative becomes an incoherent mess in large projects.
It's safer to use them because your intent is explicit. You can choose not to, but you have to be aware of the places where there's ambiguity between operators that could change behavior depending on whether or not a semicolon existed on the previous line of code. Examples (does semicolon exist?): * `[` (yes) Array literal | (no) Array access * `(` (yes) Grouping | (no) Function call * `/` (yes) RegExp literal | (no) Division * `` ` `` (yes) Template literal | (no) Tagged template * `+` (yes) Unary + | (no) Addition * `-` (yes) Unary - | (no) Subtraction
Hi /u/yjy3, this post was removed. As stated in the [AskJS guidelines](https://www.reddit.com/r/javascript/wiki/index/askjs), AskJS is not for help or support. This is your only warning. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Instead of admitting they don’t know something they make something up or ramble about something else unrelated. I interview at my employer and this just wastes everyone’s time. I’d rather know you’re not comfortable with something, because then we can talk about something else that you’re more comfortable with. The best engineers I know are ones to immediately admit they don’t know much about whatever problem they’re preparing to solve. Transparency benefits everyone in that scenario.
If you're worrying about semicolons adding extra "load time" you're 100% worrying about the wrong things.
Cookies would do fine.
Calculus isn't super useful for most full stack jobs. I'd still take it though. Better regret doing something than not doing it
No offense but your article has a clickbait title. At face value, it promises web development without transpilation. This is impossible in production, as you've pointed out. Since you're advocating babel for production, why not just use "browserslist"? You can specify for development to only use the most recent versions of browsers, so barely anything gets transpiled. You can then specify what you'd like to support in production, so more code gets transpiled during a prod build. Since you are using react as an example, here's an explanation of how browserslist is used in create-react-app: https://facebook.github.io/create-react-app/docs/supported-browsers-features#configuring-supported-browsers
Went through the new features and this release is amazing. It’s like developer Nirvana. Thanks Tim and the rest of the team.
[demo link](https://naver.github.io/egjs-flicking/) is restored. I apologize for the inconvenience.
Use prettier. It's 2019 FFS
Sorry, Demo is restored.
Highly recommend checking it out - I really enjoy what Stencil puts forth despite the fact that it's never going to be in the React/Angular/View race. You can also build Ionic apps with Stencil. Similar to things like Svelte - cool technologies, fun to build on, but don't have the legs/backing the others do.
Fair point with familiarity of fp vs ip. Though it's worth to point out that ip is far more widespread than fp. Optimizing of the common case is something we should strive for. Mutability is not a problem. Side effects are, of which the for...push pattern has none. If there are side effects, they come from the transformation the developer uses, in which case it also happens in the Array.map pattern. The reason we should prioritize developer knowledge over the "right" pattern to implement (though "right" is what we are trying to define, and thus makes no sense to use in this conversation) is that developers are the people that use the language, and their purpose is not to learn a new cool language, it is to deliver a piece of software. Taking advantage of previous knowledge is vital for this objective. Readability is subjective. As I said, readable and idiomatic imperative code that follows common patterns is possible, it's also easier and common to write non idiomatic imperative code, which is probably the cause of what you described as an incoherent mess. The discussion I'm trying to push forward is wether we should resign the use of powerful features to prevent ourselves from writing bad code (using the constrained higher order functions) or be more disciplined to be able to use the powerful features in a safe way (design, discuss, and apply idioms and patterns)
I am really sorry for the inconvenience. Fortunately, it was restored.
Is there any practical reason on this semicolon aversion?
I had a problem with the link and found it. I am sorry for the inconvenience.
I was under the impression most dev setups are different from their prod bundles (e.g. HMR, disabled minification, etc)
It's fixed. Sorry\~
Thank you for reporting the problem quickly. Thanks to you, I was able to find the problem and fortunately recovered.
Thank you these are good tips :)
Dropping braces from `if` or `for` is widely considered bad practice, as it makes them more prone to accidental bugs. I don't personally think it particularly improves readability, more the opposite- just easier for those two lines to get lost in surrounding code. And it doesn't provide any benefits bar being two characters less to write. So doesn't seem worth it, or justifiable in a thread complaining about terseness. You've still got two references to `newArr`, which is still being mutated. What's more, is you are still manually implementing a `map` transformation. For me [this comment](https://www.reddit.com/r/javascript/comments/cb46x4/askjs_does_javascript_shorthand_convenience/etdicx4/) sums up pretty well what the advantage to not doing that is. The temptation with `for...of`, when expanded to need an index, will be to use `for...in`- which can lead to unexpected behaviour in a couple of different situations, as it's not designed for that. So for best practice you'd be back to a standard `for`. `map` expands to give you an index more easily and reliably. `newArr` is `let` for no reason
OH, so cookies can't do that? I'm learning so much today.
Yep, up until recently Selenium was the way to go. I've used both and I can vouch for Cypress, way better developer experience. Since we've started using it in my team, we were able to iterate faster and write more robust tests.
If we code following patterns we do not add more lines to our transform, we put our transform in a function and call that. Automatic code formatting or linting eliminates that category of bugs. I don't think mutation by itself is a problem, side effects are. Which, if present in this code come from the user provided transform. That's why i argue for being more disciplined with how we write code. newArr could be const, it was just an oversight. It has been edited now.
JavaScript automatically inserts semicolons where they are necessary. However, there are a few circumstances where they are still required because the automatic insertion can't determine if it was intended. &amp;#x200B; Our linting rules (AirBnB eslint rules) require semicolons. &amp;#x200B; Old, but relevant article: [https://2ality.com/2011/05/semicolon-insertion.html](https://2ality.com/2011/05/semicolon-insertion.html)
I see no problem with one line unbraced if statements. Agree with you on for loops though. Should always be braced. Any multi line if should also be braced imo
Really?
Hi this is really cool! If anyone wants to see GDemo in action I made a codepen: https://codepen.io/qashto/pen/VJqdom I think it would be even better with multiple tabs and the ability to add new lines to existing code. Something like: `{insertAt: {line:6, char:5}}` and it would look like this: https://codepen.io/qashto/pen/xoLpZM
Learn the array methods (`reduce`, `map`, `filter`, maybe `some` and `every`). Try to solve problems with them and become comfortable with them. Implement them yourself. In my experience, these functions have been extremely important to understanding software.
Maybe it's done to look edgy?
Python doesn't use semi colons on the end of a line but instead uses whitespace on the beginning. It's the same thing, an identifier the parser can use to recognize where one statement ends and the next begins.
Oh cmon it’s a joke
General replies are visual noise or unnecessity. You can write code in a normal manner and omit semicolons without running into any issues.
It's been popularized in Node mainly due to [expressjs](https://github.com/expressjs/express) not using semicolons for all their documentation/examples. Personally I omit them due to lack of need for them in JS. The times you do need them you're likely coding in a non-standard way that should likely be refactored anyway (personally I've only needed a semicolon once in the coding I've done).
Yes. Read the post there’s good shit there
One less key to press, and I think code looks clean w/o it. With formatting tools like prettier which can remove and add semicolon in secs there really is no reason to force rule over this.
This. Redux, or any state library will add significant complexity to nextjs.
I just installed the function-api-plugin for vue 3.0 on my nuxt site and it works out of the box right now. God I love Vue.
I was skeptical of a variety of ES6 elements when it was being finalized. Not of arrow functions, but of the 20+ ways to declare functions. Of the Temporal Dead Zone. Class Syntax. The possible horrors of nested destructuring. The silliness of dangling commas. The possible complexities of default arguments. &amp;#x200B; And it was hard to read at first. Object keys may not have colons after them, or they may be wrapped in brackets. And you can write something like this. But it becomes more familiar and then you start seeing the ways they solve problems you've always accepted as the way JavaScript worked. The TDZ ensures you don't ever overwrite a variable and can be statically analyzed by your editor to catch it before you save. Destructuring gets rid of most lines of `var usefulValue = result[3]`; Dangling commas prevent accidental syntax errors *and* clean up your commit history. Default arguments remove boilerplate code at the top of your functions. Long list of calculated property names moved into the declaration. Array operations get easier to understand and start to make sense. Then you can start identifying common loop operations and making reusable functions for them, so your code starts looking like this: const whoSchedulesLateMeetings = myMeetings .filter(isMeetingAfterFive) .map(getMeetingScheduler) .reduce(countUniqueEntries, {}); There are still too many ways to declare a function. Some of the new proposals for decorators and private class members make it hard to read. And I still think ES6 classes suck. Having a style guide makes a big difference in reading code as the number of variations increase. I recommend the Airbnb style guide. It's well reasoned.
&gt;The times you do need them you're likely coding in a non-standard way that should likely be refactored anyway Not really. You'll need a semi-colon in if your next line begins immediately with brackets or parenthesis. For example, destructuring, IIFEs, or grouping operations. There's no automatic reason to refactor any of those.
&gt;can't determine if it was intended. As I understand it, -- if it's not a syntax error, a semicolon will not be inserted. So something like this -- const z = f() ['a', 'b', 'c'].forEach(console.log) Might look like this to the lexer -- const z = f()['a', 'b', 'c'].forEach(console.log) Which isn't a syntax error (you could be using the comma operator in an accessor -- weird, but not a syntax error. It'll try to read the \`c\` property on the result set of the f() call, and call forEach on it.) What usually happens is "cannot read property \`c\` of undefined" -- or, maybe f returns an object, then you might get \`cannot read forEach of undefined\`.... and hey, maybe the result of \`f()\['c'\]\` is actually an array -- then you'll iterate it properly, but it usually isn't what you meant to do. In a non-semicolon codebase, I'll usually preface with a semicolon if that's going to be a thing. const z = f() ;['a', 'b', 'c'].forEach(console.log) In practice, it'll be "interesting" syntax that gets you into hot water with semicolons in the first place ... like trying to destructure a value into a previously defined let: let somevar = null try { const someParam = func() ({data: somevar} = await someFunc(someParam)) } catch (err) {} \^\^ that one will also not do ASI properly... need to preface the \`({data\` bit with a semicolon.
Once saw a resume that started with &gt; Let's cut to the chase, I know how to code Dude had no idea how much he didn't know. Don't think you're "good" or a shoe in unless you want to get eviscerated. The biggest points in hiring are: - is this person smart enough to bounce ideas back and forth - can this person learn our stuff - will they be tolerable to work with
I would never, ever want to rely on formatters and linters to make sure my code is right. At my employer we follow this mindset: We would rather be verbose and confident than cut corners and be unsure.
"lack of need for them in JS". This isn't future proof for new specifications and syntax, and has explicitly been talked about by the committee on making semicolons required.
Yes, use semicolons. Avoid using badly implemented, malformed-code-correction mechanisms as a feature.
Minification can safely remove them for distribution. Other than that, a lot of coders would rather be clever than helpful.
Okay, use curly braces. I was just giving my rationale for why not using them is a non-issue.
I think you mean safely add them
My personal coding style includes automatic semi-colon insertion, but AirBnB eslint keeps me honest regardless.
In case anyone was wondering, this is called automatic semicolon insertion or ASI for short
How are they badly implemented or malformed?
I asked a contractor once for clarification on his code. His response was “it’s under 100 lines, and it’s self explanatory. What more could you possibly want?”
Can't remember the last time I've used semi colons in the last 2+ years of development. Once I stopped using them and understood how they worked I saw no point to them. I don't start statements with a literal array or parenthesis ever so ASI has never screwed me, and even if that somehow happens, you can simply add a semi colon in between lines, or at the start of the problem line. Is ASI guaranteed to work this way forever? Probably not. Although a change to how it works would break a lot of things, so I don't think it will change. Even if it changes, I'm sure there will be a package to transpile non-semicolon or partial semicolon code into semicolon version the day off, assuming it doesn't already exist (it probably does)
AWS Amplify. A fully secured app can be setup in under ten minutes.
Hi u/FateRiddle, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
no. it doesn't improve readability. it doesn't improve code comprehension. it's a stylistic choice that is usually justified by "one less keystroke." (who actually optimizes for writeability instead of readability) it's a bit of a hipster style choice, because a few years ago, @fat, a guy associated with bootstrap had some spat with crockford over semicolons on twitter and it basically turned into "this is the cool new way to do javascript you dinosaur" meme. semicolons are required by the ecma spec. section 13.5 on expression statements clearly state that all expressions end with a semicolon. the compiler will insert one, but even with ASI, the fact remains they're required. this isn't something like the difference between if(foo) { bar(); } and if (foo) { bar(); } this is a part of the language that is necessary. it's sloppy, lazy programming.
Right, but generally ['cow', 'pig', 'chicken'].forEach(animal=&gt;{...}) Would probably have better code readability if it were written as: const animals = ['cow', 'pig', 'chicken'] animals.forEach(animal=&gt;{...}) --- There are certainly exceptions to this for sure, but 98% of the time semicolons wont be needed in your code, and of the 2% of the time they are, many of the situations will be like the one above: more readable if scoped to named variables.
Hi /u/_-__-_-__-__-, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Well, if it is so be it.
Dont worry about your age, you can do this! I would say that algebra its way more useful than calculus for development, but taking calculus will shift your mindset solving some problems in my experience, its worth it in my opinion, as a course and for knowledge
You work in an ecosystem where one of the most important tools fails on Mondays, and you're bothered by having to sign up to access a tutorial. That's cute
ASI (automatic semicolon insertion) is badly implemented: it’s method for attempting to add semicolons to the appropriate place is to parse until a parsing problem occurs, then it injects a semicolon, then tries to reparse the same thing again to see if it works this time (if there is a remote possibility that inserting a semicolon might fix the parsing problem). Imagine trying to determine if your car is capable of climbing a steep hill by actually driving it up that hill. If the car almost makes it, but crashes back down the hill in the process, add some extra wheels to the back on struts and then try once more. That is the methodology used by ASI. ASI is a malformed code correction mechanism, intended to allow less than correct code to still run anyway. It isn’t the ASI that is malformed, it is the ASI’s job to try and make malformed code work.
No, I meant remove them. UglifyJS, for example, removes some semicolons: https://github.com/mishoo/UglifyJS2/issues/266
I really don't understand not using semi colons. Prettier can do the insertion for you and they will always be there if they are needed. Then it's consistent. "consistency is usually better than being right". Why the heck would you jump off a bridge and then go "it's the best way to travel because there is usually water at the bottom to save you from death." !?!?!!!?
&gt;you could be using the comma operator in an accessor I threw up a little
&gt;it's a stylistic choice that is usually justified by "one less keystroke," as if sensible programmers on a team actually optimize for writeability instead of readability and comprehension Superbly stated. Now start capitalizing the first letter in your sentences :)
The IDE can *do* both indentation and alignment automatically, so knowing is not that hard.
True, it's a part of the language that is necessary. That's sloppy, lazy typing.
Here is a neutral article: https://blog.izs.me/2010/12/an-open-letter-to-javascript-leaders-regarding I don't use semicolons and it would stress me a lot when I'd have to.
I use prettier and never worry about this crap anymore.
Sounds like a great release! So what's next?
Hi u/Aruixe, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hold my beer
There are more important things to worry about. Just be consistent. Use a code formatter that will either add or remove them based on whoever configured your code base. If you are creating a code base, just use prettier defaults. Or set them to whatever you feel like, just make prettier is executed for every commit. There are more interesting problems to solve. Go solve those.
Hi /u/randomguy65a, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
No problem. The title is probably a little provocative. In reality I'm sure in the next year transpilation can be abbandoned even in production (for 80% user base) but today I think is premature for production code. The example you suggest is perfect to explain what I want to stop doing. Even if you set browserlist to the last chrome version every time you change your code a compilation happen and you code is transpiled. This is a waste of time, specially in big projects. Again if you disable source maps on Chrome Inspector you'll see real code that is executed and how is different from your code. You are developing on 3 bundled transpiled files. Source maps comes in your help, with them in inspector is similar than working on real code, but this is not always true. If you can completely bypass transpilation while developing why keep do it?!
Hi u/palgorhythm, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Jesus. Are you so dense in real life or you just trolling?
Seriously. I code how I code and then \`npm run lintfix\`. Done. Never give it a second thought.
Yeah but python require from you strict white space management. This is their version of semicolon. Worrying about loading times caused by semicolon is just plain silly. If this is some kind of fetish or OCD or something - just find minifiers/formatters that strip them in final production file. If they have feature like that I'm sure the took into consideration every situation where not having semicolon can be harmful.
I imagined but I asked to be sure, I would write it down somewhere in the doc/readme if I were you. Anyway well done my friend :)
Prettier. Formatting is not a manual chore any longer, do whatever you like best.
The "community convention" was a really aggravating statement when it came out since at the time, the convention was to use semicolon and two spaces for indentation.
Very nice post. Although just to inform you, you don't need to move all data-fetching to getInitialProps, and still use componentDidMount, this way your pages get marked as static means you can deploy them to a static hosting.
I’m with you on this ... even more, I don’t think I’ve ever once encountered a bug that resulted from a missing semicolon. But what do I know, I’m just an edgy hipster JavaScript developer ;)
Ahh the good old religious simicolon war. *grabs popcorn*
Losing out on the best framework ever made because you have to login
They don't make backwards-incompatible changes, so semicolons will never be mandatory in the official spec
Unfortunately, your assurance may be misplaced: TC39 have changed their editorial line to recommending authors avoid relying upon ASI. The rationale is that it’s getting harder to design language features around it.
Standard does use 2 space indentation
100%. Also, if you’re still using IIFEs to wrap modules, you can improve the readability of your code by using a module bundler instead (Node has a built in module system).
Hi /u/Envqy, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I’d also add npm link to this, allowing you point a dependency to a local package instead of the downloaded version. This is useful when you’re developing both libraries and applications that depend on those libraries.
npm run will list the available scripts in package.json - useful when you're frequently switching projects and can't remember the exact commands for each lint/run/build/test/deploy
Hi u/BenjamnTal89, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
What is minesweeper?🤔
check this [https://www.youtube.com/watch?v=Qlr-FGbhKaI](https://www.youtube.com/watch?v=Qlr-FGbhKaI)
Because they want to watch the world burn.
You're not old enough to be on the internet
Write some tests! Especially integration/e2e tests early on to verify your app behaves as expected when making monumental changes to the codebase.
The question is not how to make it but how to play it?/:
I actually tried using no-semicolon style in personal projects and love the style, but turned out to have an actual inconvenience with it. In IDEAs there is a shortcut "extend selection". It really helps selecting a code block and I use it a lot. But when I select a statement without semicolon in the end, it also selects a lot of whitespace in the end of the statement. I know this is pretty ridiculous, but oh-boi such little things annoy me! =)
What does knowledge of video games have anything to do with being on the internet?
Calling it "standard" and claiming that it is the "community convention" has also pissed me off too. It was a real dick move by the people pushing this.
I personally like how js looks without them.
Project Page (?): https://github.com/aleen42/PersonalWiki *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Default windows game for multiple versions of windows, very hard to miss, impossible to have never heard of unless you were born after its removal as a default program. That's what.
If you're going for legibility then why wouldn't you add a semi colon?
Personally I don't find the ; more readable. A carriage return is enough of a separation for me, but maybe that's just because I was writing ruby before js.
I guess it refers to the current project community, not the JavaScript community.
Hi u/Joint3n, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I don't understand why this is getting downvoted. Saving progress shouldn't require login.
I disagree with your code readability example. Unless you'll be using `animals` more than once, it's less clutter to tack `.forEach()` onto the array directly as in the first code block you wrote.
Thanks :D Anyway into the README I've written "The library is compiled into UMD format and uses ES6 Proxies.". Proxies are not transpilable, so this implies automatically minimum ES6 support :)
/r/gatekeeping
Here's a sneak peek of /r/gatekeeping using the [top posts](https://np.reddit.com/r/gatekeeping/top/?sort=top&amp;t=all) of all time! \#1: [On a post about their dog dying](https://i.redd.it/yoxbfwh3nm921.png) | [1203 comments](https://np.reddit.com/r/gatekeeping/comments/aeky3m/on_a_post_about_their_dog_dying/) \#2: [Unsure if this belongs here](https://i.redd.it/aqmqzr1bxvd21.jpg) | [674 comments](https://np.reddit.com/r/gatekeeping/comments/alyba8/unsure_if_this_belongs_here/) \#3: [Gatekeeping umbrellas](https://i.redd.it/2lzwi52554331.png) | [959 comments](https://np.reddit.com/r/gatekeeping/comments/by6t0z/gatekeeping_umbrellas/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
personally i use them and enforce them with a linter because otherwise i find i make silly mistakes (like returning nothing instead of an object). I'm sure there's other ways to catch those issues but it's the way I currently prefer. I also write a fair amount of code in languages that do require semicolons so it'd be hard to drop the habbit.
Hi u/jynx42, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'm often torn between these options in case I end up needing to reference that array again later. When suddenly needing to reference it I have to stop mid thought and find it/come up with a good name. Very minor issue though.
Is there a practical reason to add them where they aren't necessary? The burden of justification is on those who say we should do something that is unnecessary additional work. I've been leaving out semi colons for quite some time now, and never once run into problems because of it
Oh I have for sure. Try tracking down some fucky weird bug that only happens on prod because the minifyer breaks code that was working with the original newline formatting.
OCD, hyperfocus, that sort of thing.
ES5 syntax, jQuery, 7th level "if" nesting, classic for loop instead of forEach or for...of, 10 parameters in a constructor function instead of using object... 🆘
I call bullshit. Any minifier worth anything will follow the ASI rules, they aren't that complex. I've been using js without semicolons for about 7 years now and I've used flow, typescript, Babel, babili, tracur, jscompress, uglifyjs (1 and 2), google closure compiler, and yui compressor and have never had a single instance of the production system being broken because of the lack of semicolons.
ASI won't ever impact return statements. return { foo: 'bar' } Is exactly the same result as return { foo: 'bar' }; Which is identical to return; { foo: 'bar' }; Semicolons will never save you there.
Yeeeeet
I built a clone of the classic Windows XP version several years ago. It works pretty good: Code: https://github.com/ziebelje/minesweeper Demo: https://jonziebell.com/minesweeper/
Macro on WebStorm, fix on ctrl s
What man. You don’t have to “skip” anything, by not doing it you open yourself to more risk of bugs from people touching stuff out of scope. Utilizing functions meant to be pure and making them impure is pointless when making it pure is just 2 words.
Sorry guys to even ask such an innocent question..
So I take it, I should not follow this tutorial for experience?
My bad about skipping, I forgot we already use index in this particular case. Still though, you have a line: array.filter((x, idx) =&gt; array.indexOf(x) === idx) How can you mess anything up in this line? I'm not talking about a general case, where pure functions definitely have a use, just in this particular one where it seems better for readability to have the same `array` on the left and inside the function.
I'm getting "codepen.io refused to connect" all over the page, because of cloudflare protection.
Link is a lifesaver.
 isn't there only one non-contrived scenario where not using a semicolon matters?
Follow it and try to improve on it.
You mean remove all code and rewrite it?
Why is recursion in that list?
Clearly, they are not necessary. If your program works without them, then they’re optional, regardless of whether there are two seemingly conflicting parts of the spec. If I say “to visit my house you must be wearing a shirt” and then also say “when visiting my house, if you are not wearing a shirt, I will give you one to wear” then you would be completely justified in interpreting those two statements, jointly, as “shirts are optional in my house.” Regarding Crockford, while he is highly regarded in the JS community for his many contributions and leadership, why should we force ourselves to use semicolons just because “the java guys are used to it” and Javascript has “java” in the name. Anyone who knows the history of JS knows how bad of a choice that name is. Conversely, one is just as justified as Crockford in saying “well the Python guys are used to not having semicolons” I have been on both sides of the semicolon issue in just the last few months, and have come to the realization it’s a “pants rule” that each codebase manager decides on their own. After using standard for a few months, I’ve come to appreciate just how rarely the semicolon is actually necessary. And to quote Crockford, “We don’t get paid to use every feature of the language.” Semicolons are just another part of the language you can omit if you don’t need.
Standardjs.com
Agreed, the only problems I ever had with minifiers was when a coworker wrote some code that compared function names to well known strings, so it could look up the correct constructor for something based on an input. Needless to say, it broke when “FooBarBazView” was minified to “A” or something.
It's by no means perfect code. However in terms of illustration of how to build minesweeper it's fine. Sure you can use much more modern and idiomatic syntax and it could be a lot more elegant. However as something to learn from and improve it's passable. It wouldn't take that much to refactor along the way and learn something from it. It's easy to be critical, but it's not always very constructive.
Its not a big deal as long as your store doesn't exceed the max JSON length ^_^
Hey thanks for the feedback! You are certainly correct about the older style being used. I work daily in a legacy code base that until recently was stuck in IE quirks mode, so old habits die hard haha. There are still millions of lines of JavaScript code running important web pages written in the older style, so I do think it’s valuable to understand both. But of course, favor the newer syntax when possible. Recursion is not a good choice for most tasks. I briefly mentioned in the article that I mainly chose it for demonstration/learning purposes, but perhaps I should state that more emphatically. It’s good to have that tool in your toolbox though, and minesweeper is a non trivial example of how it could be used. I have to disagree with the criticism of using jQuery though. Is it necessary? Of course not. Is it helpful? Definitely. It’s not the hot new thing, and there are less cross browser issues to deal with these days. But it remains a useful library for DOM manipulation.
Why are you listing es5 syntax, recursion and for loops instead of forEach/for of? The first two just confuse me, the third is objectively wrong. For is significantly faster than forEach or for of.
Try this on your desktop browser: https://mitchum.blog/games/minesweeper/minesweeper.html
Don't get me wrong, i've had minifiers royally fuck up a codebase and introduce bugs into production systems many times over the years. But never because of semicolons, and especially never in a way that it would have worked pre-minified but after minification the lack of semicolons broke something.
Okay thanks, I’ll try that!
...and yet you write about 20, 30 comments every day on Reddit, each about 2 lines long...
Do you have a choice with the garbage collector?
I read this post on mobile and the word wrapping made your first example comparison look exactly the same. I spent a solid 3 minutes trying to find the difference!
Oh, a time traveler from 2009
&gt; it's a bit of a hipster style choice &gt; &gt; this is a part of the language that is necessary. it's sloppy, lazy programming. My thoughts exactly.
This is what Prettier does, just have to enable `formatOnSave` property.
https://github.com/nickforddesign/vue-minesweeper/blob/master/src/js/views/Main.vue The project itself is not in particularly good shape but this minesweeper implementation I did in Vue for a job interview is a bit more modern.
Not much task, If you solve some basic problems. We moved [m.truebil.com](https://m.truebil.com) (CRA) to [m.oldhonk.in](https://m.oldhonk.in) (Next.js) It took us around 3 months, but it is worth. Let me know if i can help you with anything
It uses too much memory.
Hi /u/Aruixe, this post was removed. As stated in the [AskJS guidelines](https://www.reddit.com/r/javascript/wiki/index/askjs), AskJS is not for help or support. This is your only warning. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Calculus concepts that you would use in either front end if any are going to be very easily learnt with a few youtube videos. With that said, math is hella awesome, and calculus is beautiful (math major here)
You could argue that having to memorize the special cases where the ASI needs semicolons is more work than just putting a semicolon at the end of each statement.
Hi u/thomasdav_is, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
So bomb placement algo could theoretically run for ever. You could instead build up a single array of all possible coordinates then remove a random index from that array place a bomb at what ever location you pulled from the list. Repeat for as many bombs as you want to place. Also don’t turn your cell positions into strings. Do simple math. If a given cell is x,y and your matrix’s row length is L, its single numeric value is x + (y * L)
Here is one I wrote ~5 years ago. https://github.com/cafesanu/html5-minesweeper-cafesanu
I too like to live dangerously
May I ask why you think it was worth it? What makes the codebase easier to maintain?
You shouldn't use jQuery for simple DOM manipulation nowadays with DOM4. It's still okay for legacy code, but not for tutorial.
I'm seeing WARNING: cdn.mathjax.org has been retired. Check https://www.mathjax.org/cdn-shutting-down/ for migration tips. Uncaught ReferenceError: MathJax is not defined
Hi u/JAntunez, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
My version has separate business logic from the view so you can pop it into any frontend. https://github.com/JohnathanWeisner/minesweeper-vuejs2/blob/master/src/Game.js
Hi u/m2684, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt;!?!?!!!? I really don't understand using multiple exclamation points and question marks. Does it serve any real purpose? Why would use use 5 of something when 1 would do ‽
Exactly! Even if you are adamant about using semi-colons you have to know and understand ASI to avoid this problem.
Yeah, my hands are fine in short bursts. It's when I get into long bouts of typing that I start feeling it.
You probably shouldn't use jQuery _at all_ nowadays. The latest crop of front-end devs never had any need for it, because most of the stuff jQuery solves, can be handled just fine with vanilla JS and where we need to support legacy browsers, we have Babel to help us. That makes it an unnecessary abstraction.
Basically it comes down to operators. It's not quite this simple, but when your line ends in an operator you don't need a semicolon. Thus: const foo = 5 + // semicolon not needed 6 * ( // semicolon not needed (3 + 4) // semicolon not needed - foo() // semicolon needed, as the parens aren't operators There's other things besides operators that can make you not need parentheses, but operators covers most cases.
&gt;where they are necessary Basically it comes down to operators. When your line ends in an operator you don't need a semicolon to avoid accidentally "running into" the next line. Thus: const foo = 5 + // semicolon not needed 6 * ( // semicolon not needed 3 + 4) // semicolon not needed - foo() // semicolon needed, as the parens aren't operators It's not *quite* that simple, as there are other things besides operators that can make you not need semicolons, but if you want an easy to remember rule remembering "lines ending in operators don't need semicolons" covers most cases.
No-one mentioned proxx? Because that's how Google web developers build minesweeper with javascript :-)
For your array example, I usually do something like this: const z = f() const letters = ['a', 'b', 'c'] letters.forEach(console.log)
But it's... miliseconds...
&gt;. I see stuff like arrow functions everywhere, and while I understand them now after catching up on my reading and playing with them for a while, I still don't find them super intuitive. I still like the old way of declaring anonymous functions. Sorry, you completely lost me there. They are literally the exact same thing, modulo `this` and a bit of typing. No programmer I have ever met in my life liked typing more characters for no reason, and as for `this` ... you really shouldn't be using classical OOP at all in JS IMHO. But at least that last part is my opinion, which I recognize is not universal. JS developers &lt;3-ing =&gt; functions has been ***100%*** universal in my experience (right up until I read this post).
Isn’t document.querySelector() a thing?
Where I work my team doesn't use semicolons but some teams do. I just match the style of the repo I'm in. I will admit I have a slight preference to not using them just because I feel like it makes the repo look cleaner. That being said I'd have no issue working somewhere where they always used semicolons. Style preferences are just that - preferences. A lot of people cite ASI as the real issue but it's never bit me or anyone else on my team over the last few years so seems like it's not really much of a risk unless you're doing odd things.
Hi u/awokensniper, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I’m a huge advocate for functional programming, and have some experience in FP languages, and I definitely see your point. I very often write `for` loops wrapped in a function call for custom iteration strategies. The descriptive function name will make the intent clear (e.g. `mapObjShallow`). The imperative version can improve performance, so if it’s something I will use frequently, then why not? It’s gonna have unit tests anyway... But I do want to point out that constraints are a good thing. There is such a thing as having too much power with a language pattern. It can invite all kinds of problem, ranging from errors to unreadability to spaghetti code,.. It’s just important to deliberately constrain the way you write your code. Why? Because it reduces the possible permutations of common code patterns by orders of magnitude, giving you a lot less to think about when you ask yourself, “how does our code actually work?” The answer to such a question will still be very complicated, but orders of magnitude less complicated when you use standard functions instead of (potentially bespoke) imperative code.
Hi u/dstans, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This is a really good description of practical FP as a whole. You can abstract away a common *process* into its own function, and let your domain-specific logic reside in a totally separate function, allowing you to think about them (and test them) separately.
Imo, much better readability is: for (const animal of ['cow', 'pig', 'chicken']) { I tend to opt for
[Die Heretic!](https://www.youtube.com/watch?v=l3fAcxcxoZ8)
We have flat out stopped supporting IE at work. Feels good man
In my last big project was about 4 seconds
The most common I've seen is: let normalLine = noSemicolons ['some', 'array'].forEach() will be read as let normalLine = noSemicolons['some', 'array'].forEach()
yeah make sense
I often wonder how we got to a point where our community is scared of for loops, unary operators, `this`, prototypes, and the ternary operator 🤷‍♂️
JS does not like recursion
I see. This makes a lot of sense. I suppose not having to think about how you constrain your usage of a too powerful feature (like how most hand-written assembly follows structured practices even though it's comprised of only gotos for flow control) and instead creating less powerful abstractions that are hard to misuse is what most code should be like. At the same time, the more powerful features have their place in libraries, where library developers can think long and hard about their usage to get to the optimal implementation. I come from a C++ background, where creating your own abstractions is encouraged (specially when the complexity-to-performance-gain ratio is as low as just writing a loop), adapting to an environment where performance is mostly ignored is kinda difficult.
DEUS VULT
THANK YOU!!! I never realized i need to put all my files into folder 'public/'
I don't write much JS - Thanks!
Your Weekly /r/javascript Recap **Wednesday, July 03 - Tuesday, July 09** Top 10 Posts | score | link to comments | --|--|-- Free JavaScript ebook second edition &amp;#40;read for free on Github &amp;#41; | 307 | [40 comments](https://www.reddit.com/r/javascript/comments/c9uj7e/free_javascript_ebook_second_edition_read_for/) [Snyk research team discovers severe prototype pollution security vulnerabilities affecting all versions of lodash](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/) | 294 | [35 comments](https://www.reddit.com/r/javascript/comments/c97kja/snyk_research_team_discovers_severe_prototype/) [NPM Inc settles union-busting complaints on third try – after CEO trolled for ordering internal mole hunt](https://www.theregister.co.uk/2019/07/02/npm_abandons_settlement_talks/) | 210 | [90 comments](https://www.reddit.com/r/javascript/comments/c8o792/npm_inc_settles_unionbusting_complaints_on_third/) I love writing VanillaJS | 206 | [228 comments](https://www.reddit.com/r/javascript/comments/c9may6/i_love_writing_vanillajs/) [jimp - an image processing library written entirely in JavaScript for Node, with zero external or native dependencies](https://github.com/oliver-moran/jimp) | 191 | [22 comments](https://www.reddit.com/r/javascript/comments/c8sqab/jimp_an_image_processing_library_written_entirely/) [Next.js 9 released](https://nextjs.org/blog/next-9) | 183 | [52 comments](https://www.reddit.com/r/javascript/comments/cb0uta/nextjs_9_released/) [The Little JavaScript Book](https://github.com/valentinogagliardi/Little-JavaScript-Book) | 167 | [19 comments](https://www.reddit.com/r/javascript/comments/cakvry/the_little_javascript_book/) &amp;#91;AskJS&amp;#93; Frontend Engineer Onsite Interviews for those "prestigious" companies &amp;#40;e.g. Google, FB, Lyft, Uber, Airbnb, LinkedIn, Dropbox&amp;#41; | 165 | [88 comments](https://www.reddit.com/r/javascript/comments/caufp8/askjs_frontend_engineer_onsite_interviews_for/) [How do JavaScript’s global variables really work?](https://2ality.com/2019/07/global-scope.html) | 137 | [49 comments](https://www.reddit.com/r/javascript/comments/caa64o/how_do_javascripts_global_variables_really_work/) [How To Build Minesweeper With JavaScript](https://mitchum.blog/how-to-build-minesweeper-with-javascript/) | 112 | [33 comments](https://www.reddit.com/r/javascript/comments/cb8yex/how_to_build_minesweeper_with_javascript/) &amp;nbsp; Top 7 Discussions | score | link to comments | --|--|-- [Why do some library editors not use semicolons in their code?](https://github.com/immerjs/immer/blob/master/src/immer.js) | 40 | [70 comments](https://www.reddit.com/r/javascript/comments/cb9h4l/why_do_some_library_editors_not_use_semicolons_in/) [TypeScript &amp;amp; JavaScript Getters and Setters: Are they useless?](https://khalilstemmler.com/blogs/typescript/getters-and-setters/) | 15 | [60 comments](https://www.reddit.com/r/javascript/comments/c970dd/typescript_javascript_getters_and_setters_are/) &amp;#91;AskJS&amp;#93; Does javascript shorthand convenience outweigh the sacrifice of readability? Does it make the language harder to learn for new comers? | 5 | [40 comments](https://www.reddit.com/r/javascript/comments/cb46x4/askjs_does_javascript_shorthand_convenience/) TIL this is valid JS: &amp;#40;k, { &amp;#91;k&amp;#93;: v }&amp;#41; =&amp;gt; v | 15 | [40 comments](https://www.reddit.com/r/javascript/comments/c9vo2a/til_this_is_valid_js_k_k_v_v/) Has anyone who used WebStorm switched to another IDE like VS Code, Atom, Sublime,... ? | 7 | [30 comments](https://www.reddit.com/r/javascript/comments/c8qxbs/has_anyone_who_used_webstorm_switched_to_another/) Showoff Saturday &amp;#40;July 06, 2019&amp;#41; | 13 | [29 comments](https://www.reddit.com/r/javascript/comments/c9sqig/showoff_saturday_july_06_2019/) Is there a job as a JavaScript-only developer? | 3 | [27 comments](https://www.reddit.com/r/javascript/comments/c8wpwu/is_there_a_job_as_a_javascriptonly_developer/) &amp;nbsp; Please let me know if you have suggestions to make this roundup better for /r/javascript. I can search for posts based off keywords in the title, URL and flair. And I can also search for comments. If you would like this roundup sent to your inbox every day send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you only want a weekly roundup, use the subject ['javascript weekly'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20weekly&amp;message=x) However, I can do more.. you can have me search for any keywords you want on any subreddit you want. Send a message with the subject ['set javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=set%20javascript&amp;message=200%0A25%2C%20keyword1%2C%20another keyphrase%2C%20last example) and in the message: specify a number of upvotes that must be reached, and then an optional list of keywords you want to search for, separated by commas. You can have as many lines as you'd like, as long as they follow this format: 200 50, keyword1, another keyphrase, last example You can also do ['set javascript weekly'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=set%20javascript%20weekly&amp;message=200%0A25%2C%20keyword1%2C%20another keyphrase%2C%20last example) And you can replace javascript with any subreddit. See my wiki to learn more: [click here](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)
Recursion uses stack space to allocate a local frame for every call deep, which can amount to a lot of memory if the call depth is significant. In this case I doubt it is an issue: the largest grid size available last time I played the Windows version the call stack is going to be at most 720 deep. Of course there is all that memory allocation+population+deallocation when creating and tearing down the stack frames which will consume CPU time, but again in this instance that should not be significant (though it may be if you are writing a game server intended to host many concurrent games). Many language compilers can use tail call optimisation on appropriately arranged functions to remove both these problems (essentially turning a recursive function call into a loop), but no JS engines currently do this. **lt;dr:** It can be a bad thing. But here it probably isn't, and future JS implementations it might not be either way.
Damn good work! This looks like a fun way to test your javascript skills? Is this using a canvas?
No. They are divs.
That is fantastic. I assume absolute positioning when you are moving them, then relative when in place? Or is it absolute always and the javascript computes the positons?
Yeah, you are quite right about that. It's static when they go to the taskbar thingy and absolute otherwise.
What did you use for the animations? CSS or JS?
Yeah, I think in lower level languages it often makes more sense to write code imperatively, because in a language like C++ there are fewer out-of-the-box abstractions handed to you. Although there are plenty of great libraries. What I find interesting is that the lack of higher-level language constructs in low-level languages is not mandatory or inevitable. For example, Haskell is one of the most pure, high-level languages out there, and it often out-performs code written in C—Not every time, but very often. But how is that possible with a functional language? Well, the answer really lies in the constraints enforced by the language. Because each function must adhere to certain algebraic laws, and because the type system covers much more abstract concepts like “applicative functor” as opposed to more concrete types like “32-bit integer array,” the compiler has a lot more information about how the program can possibly run, so the code can be compiled to extremely fast low-level imperative code. Haskell could never do that without all those strict constraints contained within abstract types, because there would be too many possible permutations to safely compile, and would require significant runtime management to make it work reliably (much like Java or JavaScript). Rust takes a similar approach with respect to concurrency. It implements the idea of single thread ownership for write-access, with unlimited read-access for all threads, as a core constraints of the language, making concurrent programming both extremely low-level and also idiomatic to the language. Constraints are so powerful in their own right, especially for compiled languages. Constraints increase your signal-to-noise ratio when reasoning about a system. In the case of Haskell, it gives the compiler a better understanding of the program, whereas in JavaScript, it give human programmers a better understanding... Which is what FP advocates mean when they say FP makes the code *“easier to reason about.”* Not that you don’t know those things. I’m sure it’s more or less obvious to you, personally. I just thought, for the sake of the thread, the above was worth mentioning.
This is fantastic! Did you use Vanilla JS? Or a framework like Vue.js or Angular?
I feel css grids would work great for this sort of thing.
Do you have the code up anywhere?
The animations are handled by JS.
It's vanilla JS.
Hi u/GoogleFeudIsTaken, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Where's the code? &gt; Demos can be fun, but they really don't provide for much discussion unless code is provided as well.
##r/webdev --------------------------------------------- ^(For mobile and non-RES users) ^| [^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| ^(-1 to Remove) ^| [^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/bor133/ignore_list/)
Are you sharing your source? I'd like to check it out.
If your cells are already an array, you could just shuffle it and take the first `n` cells: ``` const mineCells = shuffle(cells).slice(0, mineCount); ```
Thanks for the support and comment. I think I'll be going down the path of the associates but taking the 2 calculus and 1 linear algebra course in addition to the non transferring full stack. This way I can transfer later, but still get the hands on experience with react angular and node!
[https://drive.google.com/open?id=1\_jWxlMv\_ZEeizjANAn1ib0QaT9LdEjlJ](https://drive.google.com/open?id=1_jWxlMv_ZEeizjANAn1ib0QaT9LdEjlJ) &amp;#x200B; I know that most of things can be done in a more efficient way, but I am still learning and was too lazy to plan it out.
i haven't used semi-colons for at least 5 years. it could even be slightly longer, but it doesn't really matter that much. the point is, it's been a pretty long time. in that time, i've written *all kinds of code:* react stuff, front-end stuff, back-end/node stuff, etc. my point is, i've worked in a lot of different areas, so it's not likely there's some huge corner of JS that i just haven't yet come across. and as far as my experience has shown, there's really only ***two*** instances that i can think of off the top of my head where you can't go without a semi-colon. 1. any case where you have a standard for loop, for obvious reasons 2. anytime that you come across a line that starts with array syntax. for example— `const domElements = document.getElementsByClassName('someClassName')` `[...domElements].forEach(element =&gt; bindElementListener(element))` this might be a strange example, but it was just the first thing off the top of my head. the reason this is an issue is because that when you merge those lines together, you end up with syntax that looks like `document.getElementsByClassName('someClassName')[` to the compiler, which could be the start of an array index. i really, really don't come across this second situation very often, and i know that because, at this point, i always remember that i can't do this almost immediately when it happens. i'll usually just re-write whatever i wrote so that this sort of collision is no longer an issue. in this case, for example, perhaps i would just eliminate the variable definition— `[...document.getElementsByClassName('someClassName')].forEach(element =&gt; bindElementListener(element))` given that whatever was above that wouldn't also cause the same problem. it's definitely possible that i'm missing another case where not having a semi-colon would cause a problem, but regardless, you are right that the number of opportunities you have to actually cause issues due to not using semi-colons is very, very few. if i'm missing anything, please post examples below!—i'm definitely interested to see if i missed anything, or perhaps there's a situation that i don't know about at all, which is always possible.
Sorry for not doing it sooner. I was just too afraid to post it, but now I know of have to. https://drive.google.com/open?id=1_jWxlMv_ZEeizjANAn1ib0QaT9LdEjlJ
https://drive.google.com/open?id=1_jWxlMv_ZEeizjANAn1ib0QaT9LdEjlJ
Yeah it might not sound that way from my original post, but this was probably my biggest gripe.
Well there are people who argue that for loops, `break`, `continue` etc are should never be used. In fact, authors of Airbnb style guide think that way, and their ESLint style guide is very popular.
That’s really impressive, I love this
The same tooling that will tell you "hey a semi-colon is required at the end of a statement!" can also tell you "hey, in this particular case you probably need a semi-colon"
This is good advice. Truthfully I've only looked into map because in my role right now I'm just trying to get what I need to work working. Probably a lot of my difficulty with it is that this style of programming is new to me. I come from a Java OOP background. Seeing PHP for example move a little more towards having those OOP type features (with PHP7) probably has me thinking more in this mindset. Its clear to me that I'm comparing apples and oranges in that I compare my experiences with picking up and running with other OOP type languages (e.g. jumping between C#, PHP7, Java, etc) feels seamless, and then jumping into Node I'm expecting it to have the same feel. I probably just need to spend more time digging in for it to start feeling more familiar.
I’d recommend putting this sort of demo on GitHub (with GitHub Pages turned on): not only does it help you to build up a portfolio, but also the version control will really help you out as you go compared to using Google Drive.
This is impressive, especially considering the fact you used vanilla JS! Really good job
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
The top is more readable to me, but probably that's because it's what I'm used to and I've done it a few thousand times (Java, PHP, C# background). I get it though, its just me (and probably others making the jump from OOP styles) and I probably just need to get used to the functional programming style. That said, in regards to comments, I agree I don't need a comment for that scenario. However, I'm even talking about comments on methods and classes. Its probably more a reflection of the particular project than it is NodeJS as a language, but the mentality of "we don't comment at all because the code is self documenting" is a little frustrating when you're just trying to pick up and learn a project. There weren't method level comments, or even class level comments. It's a situation where I don't even know what the purpose of a module is for when its required because the name is so vague. As a developer who wants to jump in and out to just get the business requirements met, it just didn't feel very friendly, but again, probably a symptom of the project rather than the language itself.
Seriously impressive fam
You need to give more context: \- is this on browser or node ? or else ? \- if it's on node, \`fs.promises.readFile('./my.json').then(JSON.parse).then(console.log)\` \- if it's on browser, \`fetch(url).then(...)\`... etc...
Oh wow I've heard of this framework, is it lightweight?
Agreed, people tended to jump on the comment about arrows (and to be fair, its just my lack of experience with the syntax that's holding me back there), but so many libraries use special characters to represent arbitrary things. As a frontend example, a bunch of our javascript broke the other day because the library Prototype (and i get that noone uses it anymore) conflicted with some third party javascript that we were pulling in where the minifier also used variables like $A. That's the kind of stuff I'm seeing that frustrates me personally. In terms of comments, they are completely absent in this project, including in modules entirely, so stuff is getting pulled in and it isn't super clear what its purpose is. Lodash was kind of my big example because 1, the term lodash means nothing to me, and 2, throughout the code there's a bunch of "\_"s that do a bunch of different things. Good and fine as its a widely recongized library that I can google, but I see that kind of crappy naming in our private code base without comments and that's a big pain to work with.
This guy is amazing!, I remember his project jslinux. Also he was a founder of qemu
Yes, AirBnB style guide is popular but that does not necessarily make it gospel. For loops, break, continue etc. have their place and we should enable new programmers to learn how to correctly use these. Instead, we have taken to inventing straight jackets and putting out inefficient code in the name of "it is too confusing" (and I guess the cargo cult of "All hail AirBnB"). We create functions willy-nilly (foreach and react event handlers), clone objects n times (reduce), and iterate over the same collections multiple times. Then we agonize over performance.
Browser. My main concern is that I cannot add functions to JSON. They aren't really needed, but they would make the whole process way easier.
Well that's my point, the older conventions are much more readable (for me), but again its probably just because those are the same conventions in the languages that I'm familiar with. I don't really have any functional programming background outside of frontend javascript so far in my career, so probably the reason why it seems a lot less readable to me is just my background.
Yeah you're probably right, but I don't think I am at that place yet. I am still figuring stuff out and don't know if I actually want to to pursue web development. I hope I have my stuff together when I get out of school.
Vanilla JS means: without any framework ;)
I'm not agreeing with the Airbnb style guide if that's what you thought, and I honestly haven't met anyone else who thinks for loops are bad and `continue` and `break` are equal to `goto`. My point was, that it will teach these things to newcomers as "best practice" and then they'll believe for loops are evil until someone convinces them otherwise.
I will definitely have a look at the style guide, thanks for the suggestion!
Is a joke
Ah I misunderstood and thought you meant to say that for loops are indeed evil. TBH I'm contemplating moving away from JS. The current so called best-practices have taken the joy out of it.
Hi u/lluiscamino, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It's probably a background thing, which I get is mostly a lack of experience on my end. For example, my education in college was all OOP outside of some very low level things we were learning like assembly. After graduating, I worked in Java, PHP, C#, for the early years in my career. So I'm very much engrained in the structure that OOP necessitates in my way of thinking. I wouldn't call myself a JS developer (moreso i'm a developer whose worked in JS, but I'd never apply for a job as a JS developer with my current level of experience). More so, I'm a developer putting the JS hat to fill in for an actual JS guy, and my post was mostly about how i'm having difficulty transitioning from other languages into JS for this project. I probably just need to get more hours under my belt at this point.
He's also well known for OTCC (obfuscated tiny C compiler), one of the smallest C compilers around.
What do you mean by following people? I came across hack reactor a few days ago and I'm going through the challenges on there. I really like them. I need that kind of practice to get used to the syntax. The videos also walk me through the solution so I'm actually learning as well. On freecodecamp, I got to a point where I knew what to do but not exactly how to do it. So I guess I'm just refreshing what I've learnt so far and then I'll go back and carry on 😄.
VanilliaJS? I heard JavascriptJS is faster!
Thanks, I think that's the big thing, i just need to get used to it. Its just very differen't than what I'm used to seeing in other languages (but my background is primarily of the Java / C# / PHP7 variety)
Hi /u/lluiscamino, this post was removed because your title included a URL. Please use the `submit a new link` option with a descriptive title. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I agree, Idk why people are downvoting when it comes to comments that support commenting code. Code makes perfect sense when you write it yourself, of course it seems like it's self documenting. Some code that does simple things really is. But not commenting methods just seems incomplete. You don't add it for yourself (although you might wish you had 2 years later when you revisit your code from scratch). You add the comments for the brand new team member learning the project, especially if he's new to the language, or a junior guy. Comments are incredibly valuable for them. Not to mention, I know business folks who aren't technical, who will read through our auto generated docs to get an idea for what the code does. Lastly its largely been my experience that the guys who swear that code should be self documenting tend to be the smartest guys in the room (and sometimes its true, sometimes its not), but that's just the thing, there are others in the room who aren't the smartest guy in the room, so write some comments for the rest of us.
Nice username.
Hah, yeah I agree that there's stupid things about every language. PHP possibly the chief among them (although it's gotten better with PHP7). &amp;#x200B; I come from a Java / C# type background, so PHP felt somewhat natural, especially PHP7 (even though its ugly as anything to look at). To be fair, OOP is mostly what is being taught in most CS programs in my experience. Some of these things are probably dead obvious because NodeJS developers have probably been using javascript for years, or functional programming languages in general. I do wonder if the language is easy for javascript developers who had years of experience previously, but difficult for people who don't have that background with functional programming (like myself).
Yeah thats figure it. When you work with clients and especially frontend clients want something and you kinda need to do it. But the backend is "performance, bla bla bla" and a lot of hacks happen in the frontend. Either to call 5 rest api or do a lot of transformation. Buttons now call api as well and much more. To be honest there is a bigger problem. Mostly building houses without a building plan and clients asking for windows in the floor. But they pay and here we are. There is a new mentality that "client cpu is free" to throw all calculation on the client side.
Hi u/Prince_Willian, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Vanilla-js.com
Hi u/peterluhub, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
They do save you with a longer as it won't allow a return statement without a ;
If you're using a linter then none of this matters at all, because [the linter will catch it for you both with and without semicolons](https://i.imgur.com/mflADXv.png).
I'm shit at CSS and frontend in general, but why would you use grid? &amp;#x200B; It's not really a set layout or anything, any window can start and end at any x,y position.
-_-
&gt; &gt; you have to look at the rest of the file and deduce how many spaces per indent are being used. so spaces actually don't do the job of tabs equally well. &gt; &gt; No. My text editor has to do that and the job of the tab (or the space) is not to indicate how many spaces your indentation takes up. i'm saying that with spaces you can't tell by looking at a single line (e.g. the output of grep) how many indentations a given line has &gt;a tab is equally as complex as a space but with no benefits and less flexibility do you use one space for indendation? or are you prepared to say that a tab is equally complex as X spaces for whatever X you prefer? a tab is less flexible than a space?
It's a style thing. I use prettier now so it doesn't matter, however, before prettier it was about not changing styles between languages. If your stack is python and javascript, why force yourself to change styles when you switch from a .py file to a .js file. On the other hand, if you work in PHP (which requires semicolons) and JS, it would make sense to have semicolons everywhere.
Fair. I'll probably keep using them though.
Your code doesn't work as well on a desktop running Google Chrome. For example dragging and dropping didn't work and resize didn't work. Basically only the doubleclick actions worked. What setup did you use to make the gif?
Ok, don’t rush yourself. Feel free to ask me if you have any questions 🙂
Very cool. You should put on https://codepen.io so you can share.
Sorry, I forgot to mention that I haven't implement mouse events yet. Try opening it on a device with a touch screen.
yeah go for it! It's a style choice, and people have preferences. Use them if you want, don't if you don't, and at the end of the day it's not really gonna matter much at all.
On the browser, your code should be in script tags. Just opening arbitrary code is something checked by the browser. I would suggest writing your JS in your game code, store the functions in an object, and include the object keys in your JSON, and when you load the data, pull the appropriate function out of the object.
&gt; i'm saying that with spaces you can't tell by looking at a single line (e.g. the output of grep) how many indentations a given line has And why would you need to? &gt; do you use one space for indendation? or are you prepared to say that a tab is equally complex as X spaces for whatever X you prefer? I just said it was equally complex. &gt; a tab is less flexible than a space? Yes? A space is the smallest unit. A tab is usually some amount of those smallest units. If your tab is 4 characters long then you could never have a 6 character spacing just using tabs. You can have any level of spacing if you just use spaces because spaces are more flexible.
I feel you on all that, and look I used to do Java as my main language and JS was only my second language (and after that I also did major work in Ruby and Python on the server-side, but by then I was getting to the point of doing more JS work than server-side stuff). It's hard using a language that you don't get to dedicate yourself fully to, and it's absolutely unrealistic to expect everyone who writes JS code to be a dedicated JS coder. So naturally non-"JS-focused" devs are going to struggle with the language, and that's both natural and something that the community should try to mitigate as much as possible. ... but I still don't understand preferring `function` functions over `=&gt;` functions :)
Grids would prevent overlapping absolute elements and would be more responsive without the need of JavaScript. Using absolute values is layering each div on top of the layout and they have no sense of the position of the other elements without JavaScript.
No worries, just wanted to try it myself. Thanks for the quick response.
Hi u/thesadburrito, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
http://vanilla-js.com/
I started to read this, and had to stop. Maybe I've crossed the threshold and I'm just old, but goddam there's too much fucking emoji everywhere. Jesus Christ. Wish I could further discussion on this, but I just can't read this "article".
Any suggestions?
Any developers still avoiding Regex, please know it’s not as difficult as it seems and it’s also a beautiful aspect to programming. A great place to start is by trying to write a tmLanguage syntax file.
https://chrome.google.com/webstore/detail/no-emoji/obbjmeopodlheliibjoabgbmchpecjaj https://github.com/erikdesjardins/no-emoji
Nope, I usually use them too when I try to convey a message, but this is just too many.
I started to read it as well, but decided the author must be half an idiot for using emojis that way.
This kind of statements should go with the precise numbers, really. And also with numbers for a flat solution to compare with.
&gt;&gt;i'm saying that with spaces you can't tell by looking at a single line (e.g. the output of grep) how many indentations a given line has &gt; &gt; And why would you need to? it's just extra information which might be useful &gt;&gt; do you use one space for indendation? or are you prepared to say that a tab is equally complex as X spaces for whatever X you prefer? &gt; &gt; I just said it was equally complex. you said a space is equally complex as a tab. "a space" is different from "X spaces for variable X" &gt;&gt; a tab is less flexible than a space? &gt; &gt; Yes? A space is the smallest unit. A tab is usually some amount of those smallest units. If your tab is 4 characters long then you could never have a 6 character spacing just using tabs. You can have any level of spacing if you just use spaces because spaces are more flexible. "spaces are more flexible" is different from "a space is more flexible" i agree that spaces allow you to make an indentation of 6 spaces in a file with 4 space indents; i don't think this is a benefit though and it doesn't mean spaces are more flexible. a file with tabs can be made to have any amount of spacing for indentation (the topic of this post). that's more flexible.
&gt; Maybe I've crossed the threshold and I'm just old Sorry 👴🐐, but it really looks like you have...
Jesus, how shallow can people be?
And tcc, ffmpeg, qemacs etc. He's scarily prolific, especially considering the scope of the projects (ie. not just a jumble of tiny npms).
Gulp is still a powerful tool and while old it’s battle tested. I’ll always have love for gulp and will continue to use it.
Despite the pointless comments about emojis by the old farts below, this is a fairly interesting article (if a bit long winded) about how what we call OOP today has nothing to do with what the original creator intended, that the real insight was the messaging between objects and not the objects themselves, and how Erlang is the closest language to that ideal we have today.
&gt; Sharing a CSS grid generator in the JS subreddit &gt; Project uses python and pip to run
I eke findeth this f'rm of writing seen within this did light'rature quite sore to und'rstand. Young whipp'rsnapp'rs!
Wow 😲 look 👀👀👀 out everyone 👯‍♀️👯‍♂️, we have the 🚨 emoji police 🚨(👮‍♀️🚓👮‍♂️🚔) No 🙈 emojis 🙉 in 🙊 articles or this old zaddy 👨‍👦 won’t give you cummies 🍆💦💦.
I hope your afterlife consists entirely of reading classic literature edited to use emoji as egregiously as this article.
This is awesome... I'd love to have this on my laptop
Hi /u/dstans, this post was removed. As stated in the [AskJS guidelines](https://www.reddit.com/r/javascript/wiki/index/askjs), AskJS is not for help or support. This is your only warning. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thanks 👍, that would be one way 🍠to make it 🐻able
I hear ya. I used to do a lot of php 4 &amp; 5. PHP has a lot of ways to do the same sort of things... aka using next/reset/current (array cursors) can be confusing... really every language I used have many ways to loop. JS... the destructing is so confusing because the syntax is all mixed up ( square brackets for array positions and variable keys both) is super off putting if you don't know the type... I always have to check my spreads too... then spreads with ternaries or short circuit evaluation.... all the new syntax really wants you to write very small :/
I'm a front end react dev for 3 years now and I have no idea how to do this, you should be employed by now and this on a github page would be probably sufficient to get a bunch of interviews
Hi u/dumblejd, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I don't even want to start with why this article is ridiculous. Why do people in web development so constantly criticize practices it seems they've never actually used extensively.
I agree with you. I was suprised by how negative people reacted to this tool being based on Gulp. While I agree that there are several issues with Gulp, I think it's still a good tool (especially Gulp 4) and I am just not satisfied with the alternatives. Also lots of negative feedback has to do with Gulp being old, which is not a good reason to dislike a tool (it should actually be the opposite in my opinion).
seems like this topic could have been presented better
&gt; I don't even want to start with why this article is ridiculous. But then what's the point in writing a comment 🙄
Love it, will give it a poke about in my next project
&gt; It optionally ... operator overloading. :-o More info: https://bellard.org/quickjs/jsbignum.html#Operator-overloading
With grid you cannot animate between areas. For example if a window moved from top left to top right it would just jump. If you wanted it to animate/transition you would need to resort to transforms or absolute positioning.
It's not really a framework, it's more like React where you gotta add on your own pieces or else it's incomplete. I think the React team really underestimated how much all-in-one would be the deciding factor and ceded some ground to Vue, an actual framework.
Is this feature documented anywhere? I'm trying to update my local repo documentation to provide instructions for users and having trouble overriding locally. It looks like the repo config overrides global.
Haha yeah thats very true, but there is merit in trying to get the clients device to do more heavy lifting, we just call it PWA now :)
Finally someone who understands not prescribing the way someone else has to view code. Thank you.
\&gt;Javascript developers
If you like that take a look on os.js https://www.os-js.org/
Because semicolons are optional and Javascript is a better language without them. You'll hear arguments about how including semicolons is "safer" because it avoids problems with ASI (Automatic Semicolon Insertion). Those people are dead wrong. The [StandardJS](https://standardjs.com) project provides some excellent links if you want to read further about ASI and why Javascript is better without semicolons.
If you're interested in the rules for ASI: http://inimino.org/~inimino/blog/javascript_semicolons
I think most of them just overwrite console.error and console.log
Why isn't there a benchmark against mainstream engines like V8?
Yeah, it makes the code harder to read and serves no useful purpose. Whether you use semicolons or not, you need to understand ASI. Might as well stop worrying about where to put them and cluttering up your code.
It's way more readable, dude.
Don't start a line with ( or [. How hard is that?
Emojis look childish and make otherwise good articles amateur. We have something called 'words' to express ideas and emotions, moronic mini cartoons are redundancies. It is mind boggling that anyone out of their teens would consider it OK to use them in an article anyone is meant to take seriously. Don't get me started on GIF's and memes in computer science articles. It is not cool, not edgy, not making fun of the old fashioned squares who just wrote things... it is an abomination and insult to the intelligence of the reader... I want to take off and nuke the server that hosts them from orbit!!!!!!!!!!!!!!!!!!!!
Only if you're doing some dumb shit like this, which you shouldn't be doing anyway: let a, b [a, b] = someArray Instead, don't be a dummy: const [a, b] = someArray Or better yet: const func = ([a, b]) =&gt;... func(someArray)
Because semicolons are noise.
Exactly. Best way to be safe there is to always wrap your returned object literals in parentheses, starting on the same line. Not a hard adjustment since it's required when using implicit return with arrow functions, so you should already be doing it a fair amount.
Definitely less readable.
Close. The number is actually zero.
I think they're an excellent way to convey intention and tone given they're semantically loaded and designed to be universally accessible. This is something that previously was very difficult to do without awkward encodings like /s &amp;#x200B; This is just my opinion though 😊
Great work! Im sure you are more than ready when it comes to javascript. Make sure to learn just the basic web development tools and you will be set to get a job easily.
Have you considered using CSS to set transition on top/left/width/height properties, allowing you to drop a lot of JS animation code? I'm not sure if it would work correctly in all cases, but if it does then it could be a lot easier to work with.
Kind of why "readability" is difficult to codify; it varies greatly from person to person.
Standard is great. Literally the only gripe I've got with it is that it wants single quotes in JSX, which is a pretty dumb move.
Standard is a way better standard than Prettier defaults or hot trash like the Airbnb linter rules. If you're going to standardize on a prepackaged rule sets, Standard is clearly the best choice.
Somewhat true; somewhat false. Given familiarity with both, I think you're really only looking at residents of the asylum who would take a for loop over a map. Obviously, if you've got little or no experience with functors and monads, a loop probably feels "safer."
I like vanillaJS. However, could I interest you in some VaporJS?
&gt; it's just extra information which might be useful. if i see a statement in C code with one tab in front, it's reasonable to deduce that it exists at the lowest indentation level of a function and not in any for() or if() blocks. this could be useful depending on what you're looking for. I think its a rather rare circumstance when a developer sees their code out of the context of the rest of their code but still need to know what level of indentation it is. Why would it ever be useful to merely know that it could be in an if statement or a for loop. &gt; you said a space is equally complex as a tab. "a space" is different from "X spaces for variable X." you think a tab is as complex as a variable number of spaces? No I don't think 1 tab character is more complex than multiple space characters.
This is some sexy shit
Hi u/YogiThaGod, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Dude, really? You're calling my crazy for preferring `for...of` vs. `forEach`? Or worse, calling me incompetent?
Please make a better DE for Linux
Emojis are a sign of insecurity.
I guess you could use a grid layout for the desktop UI after it's in place, you wouldn't have precise positioning but generally, don't you want your icons aligned to the grid in a desktop? Or both, grid for when they're fixed in place like the sides/bottom examples.
I'm imagining the thumbnails on the top tray and while the icon is moving would be a different element than the content window itself. Animate when it's set in place/remove by transition size, etc.
Yes. See [here](https://editorconfig.org/#file-location). Just make sure you don't set `root=` in the repo's *.editorconfig* file so that the one in the user's home directory can override it.
Here's my take in 48 lines. https://jsfiddle.net/wkeusgcL/
My understanding of css grid and animations is that you can only animate changes to grid cells if the # of columns and rows stay the same, as does the unit of measurement (so no going from px -&gt; fr, or using max-content, minmax, etc). So while this would be pretty easy to do with css grid in a non-animated fashion, I suspect it would require a lot of sub-optimal grid definitions just to support the animations.
Hi u/KristianWEB, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'd suggest preventing text selection (\`user-select: none\` stuff) on some of those elements; when trying to move stuff with mouse drag, it causes selections to occur.
Also, still can't use mouse scroll wheel to scroll down page (latest version of Chrome on Windows)
Interesting. Although I have no idea why to advertise the library as middleware-free, when it subscribes to the store which feel pretty equal in functionality. I would argue that while middlewares split logic between the middleware code and the reducers, they are practically different logics. middleware logic is the business logic deciding what to do, while reducer logic is storage logic, deciding how to save the data. With redux-agent, I don't spot a definite place for business logic. Something complex like login flow would have to be written in action-based callback hell with multiple nested add, a custom middleware, a new redux-agent task or multiple store.subscribe()d functions. Attaching custom data to the actions of http requests is something that I'm surprised is missing. switch(action.type) { case 'FETCH_DATA_TO_DESTINATION': return addTask({ type: 'http', method: 'get', url: 'https://jsonplaceholder.typicode.com/todos/1', actions: { success: { type: 'FETCH_DATA_TO_DESTINATION_SUCCESS', destinationId: action.payload.destinationId }, failure: 'FETCH_DATA_TO_DESTINATION_FAILURE' } }) case 'FETCH_TODO_SUCCESS': return { ...state, destinations: { ...state.destinations, [action.payload.destinationId] = action.payload.data, }, }; } The documentation is top-notch! Great work on it!
Thank you for the link! My worry is that I think that subdirectories override the more global settings. It depends on what they mean by "most recent" -- given the description of the algorithm it sounds like the farther down you go the more recent the file is, but in practice it seems to be the other way around. For instance \~/.editorconfig setting a width of 8 seems to be overridden by a project directory editorconfig (this makes sense in other contexts; letting projects define specific settings to override a global default). I added a comment asking for clarity to [this slightly related issue](https://github.com/editorconfig/editorconfig/issues/220#issuecomment-510274116). Maybe this is just the Sublime.
But can it run WebAssembly? There is an [awesome wasm library](https://bellard.org/quickjs/) I would like it to run.
Wow some dude just wrote an complete engine for js and here I am sitting at leetcode and struggling to do permutations correctly
&gt; don't think I am at that place yet Are you kidding?
Heavyweight three.js on create react app to make a funny picture. Source at https://github.com/heyimalex/kim-jong-simulator
Mathjax is just a plugin for converting jax syntax, and it does not matters as it is not used temporarily.
For the lazy https://codepen.io/yuvalsaraf/full/XLOOQO
&gt; **Semicolons** ... Never start a line with (, [, `, or a handful of other unlikely possibilities. This is the only gotcha with omitting semicolons, and standard protects you from this potential issue. (The full list is: [, (, `, +, *, /, -, ,, ., **but most of these will never appear at the start of a line in real code**.) Common examples of Gulp, the successor to Grunt as a task-runner tool for JS, CSS, and other web-related things, uses code like this in its documentation and has been commonly used for a long time: const { src, dest } = require('gulp'); const babel = require('gulp-babel'); const uglify = require('gulp-uglify'); const rename = require('gulp-rename'); exports.default = function() { return src('src/*.js') .pipe(babel()) .pipe(src('vendor/*.js')) .pipe(dest('output/')) .pipe(uglify()) .pipe(rename({ extname: '.min.js' })) .pipe(dest('output/')); } https://medium.com/@WebReflection/an-open-letter-to-javascript-leaders-regarding-no-semicolons-82cec422d67d &gt; Use 2 spaces for indentation. https://www.reddit.com/r/javascript/comments/c8drjo/nobody_talks_about_the_real_reason_to_use_tabs/ &gt; Commas must be placed at the end of the current line. var obj = { foo: 'foo' ,bar: 'bar' // ✗ avoid } var obj = { foo: 'foo', bar: 'bar' // ✓ ok } Ok... // ✓ ok ;[1, 2, 3].forEach(bar) // ✗ avoid [1, 2, 3].forEach(bar) WAT
Not for existing features, but \*new\* features may always require semicolons.
Thank you for feedback. Can you try to remove cache (Ctrl + Shift + Del)? I would be very thankful to you if you still have problems.
I agree with you it makes page ugly. We plan to refactor homepage. We accept your opinion. Thank you!
Hi u/poorly_timed_leg0las, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Also by Charlie Gordon. Partnering with a famous programmer should ideally increase your name recognition, not completely overshadow your contribution. It looks great, although I'm disappointed that it doesn't support proper tail calls, apparently out of [principle](https://bellard.org/quickjs/quickjs.html#FOOT3).
Then how is it not using them with existing features not future-proof? They're mandatory with for loops, but it's not like people are omitting them from those. Your original point that not using semicolons in a general sense isn't future proof just doesn't make sense
GitHub would be better place
Makes me want to watch [The death of javascript](https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript) again.
Hi u/pcccphatdat, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Been done before with a very retro look http://ytcracker.com/v2019/ (fully functional)
....I am just 17.
I just meant that I am not looking for jobs/building a portfolio as I am just 17.
Universally accessible like how Samsung's phone used to render the gun emoji as a real gun while iPhones would use a toy gun.
Now I'm curious to know what it looked Ike before the removal of most of the emoji
If you go into Crendale Keep and travel all the way north and then take the staircase to the left, you can get some starter gear that'll help you out a lot!
Why is the json in a string? Why not just use an actual js object in another file and remove the need to parse a string. Also why the hell so you think anyone would need this for? If anyone feels the need to have colors for programming languages they can probably write the necessary code in the same time it would take to find this package and install it.
And yet Mac still doesn't have window management...
You can get a job when you're 17
I've done something similar over at https://MSOS.MidSpike.Com/
But once you do, it’ll benefit you a lot to have this up there. Easier than putting it up there later
Hi /u/aleen42, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/aleen42, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
 [https://aleen42.github.io/PersonalWiki/post/how\_to\_draw/how\_to\_draw.html](https://aleen42.github.io/PersonalWiki/post/how_to_draw/how_to_draw.html)
 [https://aleen42.github.io/PersonalWiki/post/how\_to\_draw/how\_to\_draw.html](https://aleen42.github.io/PersonalWiki/post/how_to_draw/how_to_draw.html)
Hi u/aleen42, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
thanks I really appreciate it. Refactoring my game's frontend from an OO model simplified the code greatly.
Hi u/aleen42, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/CSRequiem, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
That's not my experience. With `root=true` in *~/.editorconfig* and `root=false` in *~/&lt;PROJECT_DIR&gt;/.editorconfig*, settings in the former configuration file take precedence.
That is basically the only thing holding me back from using linux as my daily driver. That and driver support... But until then, macOS will have to suffice
Hi /u/aleen42, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Seriously great work—Library migrations are usually my worst nightmare, but I’m actually looking forward to migrating a Pose project to this
Aha the daily new animation library. What's the difference between this and popmotion, react motion and react spring? Being new is not an argument. The react spring page at least has some mention of other frameworks and what it does differently.
Hi u/PalestineFacts, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Using company time for things other than work is praxis and unironically good.
Well I have. :)
Hi u/infocamblog, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Great to hear! I’m going to write a migration guide today.
I really think people need to balance better their time between actually developing real projects and writing/talking about it.
Jsjs
No problem, we've all been there!
https://www.framer.com/blog/posts/introducing-framer-motion/ &gt;What's the difference between this and popmotion. It's basically an evolution of that: &gt;It’s also worth noting that Framer Motion is the successor to the popular Pose library, which generates nearly 80k downloads a month on NPM. It’s also based on Popmotion, a library that has been battle-tested in the wild for almost four years.
My first try: https://codesandbox.io/embed/notification-bell-animated-ql9yn?codemirror=1 And the experience is awesome.
neat!
Every recruiter ever: "You look like you know Javascript. Would you like a Java role?" That's you, right now.
There is no sense in using for loops (beside performance in high load processes) when you have for...in, for...of, for await...of, forEach, map, filter, reduce and other types of loops, which is much more readable and easy to not make a mistake with these i++ and &lt;= or &lt; array.length. And besides, you can use break and continue inside for...in and for...of loops.
Hi! &amp;#x200B; &gt;Although I have no idea why to advertise the library as middleware-free, when it subscribes to the store which feel pretty equal in functionality. &amp;#x200B; That's a reasonable objection. I don't see replacing effect middlewares (and the various thinking models specific to each) with effect state watchers (which are of the same breed as React and don't require an extra thinking model) as adding or improving functionality, but rather removing complexity and optimizing for cognitive load. I think that gain is worth pointing out. &amp;#x200B; &gt;I would argue that while middlewares split logic between the middleware code and the reducers, they are practically different logics. middleware logic is the business logic deciding what to do, while reducer logic is storage logic, deciding how to save the data. &amp;#x200B; We may have to just agree to disagree in that regard. :) There wouldn't be much left in my reducers if I removed the logic whose sole purpose is to change state so as to drive the UI through its flows. &amp;#x200B; We might also discuss (though it risks turning philosophical) what is business logic. Presenting a remote API with an HTTP request, offering it a say in deciding how the application state should change, and encoding that "say" in a Redux action, isn't conceptually or structurally different from presenting the user with a set of buttons, offering the user a say in how the application state should change, and encoding that "say" in a Redux action. &amp;#x200B; Just to be clear, no new idea is being proposed here. Elm, which predates Redux and is cited as one of its inspiration, also gathers all logic in the reducer (the "update" function). &amp;#x200B; &gt;With redux-agent, I don't spot a definite place for business logic. Something complex like login flow would have to be written in action-based callback hell with multiple nested add, a custom middleware, a new redux-agent task or multiple store.subscribe()d functions. &amp;#x200B; It's interesting that you bring up the login use case because one of the first things I wrote with it was a fairly complex login flow with setup before authentication (so as to engage the user immediately), saving setup data to local storage for later pick-up, and handling e-mail passwordless login. I only needed HTTP tasks and storage tasks, no custom middleware, no extra store.subscribe()d functions. &amp;#x200B; But I suspect the documentation isn't as clear as I hoped if it gives you that impression. More complete examples are on my to-do; if you don't mind taking a look when they're ready, please PM me, I'd really appreciate an extra pair of eyes. &amp;#x200B; &gt;Attaching custom data to the actions of http requests is something that I'm surprised is missing. &amp;#x200B; Good point! I'm cautious of overwhelming readers with a front page, but if the omission surprises you it probably means that cutting four lines in the example creates more confusion than it saves. Just fixed that. &amp;#x200B; &gt;The documentation is top-notch! Great work on it! &amp;#x200B; Thanks, maybe not as good as I wanted as this chat suggests but hopefully it'll get there. :) Also thanks for taking the time of going through it and provide all this feedback!
Project Page (?): https://github.com/yomguithereal/posts *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/datarockets, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
The argument is that you shouldn't use for...in nor for...of either. And there's still lot of sense in normal for loops, sometimes you simply know the indices you want to loop over.
Amazing
I'm not sure if it's just me, but I cant drag the windows around...
I must be missing something. What's the difference between this and just using a simple cache object with `delete`? i.e.: const cache = {}; const loadImage = (url)=&gt;{ /* ... */ } const getImage = (url)=&gt;{ if(!cache.hasOwnProperty(url)){ cache[url] = loadImage(url) } return cache[url]; }; const freeImage = (url)=&gt;{ delete cache[url]; }; getImage('/some/url.jpg'); /* later.. */ freeImage('/some/url.jpg');
View it in your dev tools mobile emulator.
Can I make this work with clicking? And dragging?
Works for me in Firefox on Android. Not quite smooth, but still impressive.
I believe so. I had a quick look at the JS. You may be able to add some additional eventListeners to listen for the relevant click events.
How do we post anything that isn't a question or a link to some resource/repo/blog post?
You realize that doesn't actually say anything. In what way has it improved on those.
How does the `motion.div` tag work? I thought non-html components had to start with an uppercase letter or it won't work?
Link please
oh my god this looks beautiful
The point is not having to call something like freeImage. If you provide a library to a user, you can be fairly certain that most users won't explicitly free the resources they're getting back from the library. They'll just stop using them and may remove all references to the resource, but because the library still referenes these resources in, for example, a cache, the resource won't be garbage collected. WeakRef helps libraries to open up resources for garbage collection once users of the library removed all references to a resource. Finalizers may also be super userful to free GPU buffers once a JS object that refers to a GPU buffer is garbage collected. Otherwise, the GPU buffer may never get removed, even though it's not referenced anymore.
You are right. I don't know why it is happening specifically on Firefox. It works fine on Chrome, Edge, Opera and my phone's browser. Do you have any idea how I can fix that?
About time. Lack of finalizers is very problematic for designing webassembly-backed libraries, because it makes JS bindings for wasm objects require explicit destructors. There's been a long argument about garbage collection having to be completely transparent to JS for various reasons such as consistency and even security, I wonder what changed there.
Well I did not downvote him, just linked the only resource I found that could explain the product better. I'm not associated with it at all, just tried to lend a hand.
Because of the dot it knows it’s not meant to be a string
Nah, I was calling you inexperienced, dawg. And that's being borne out by you thinking we were talking about `for` vs. `forEach`.
I'm also confused by this. I just spent like 10 minutes trying to get that example to work in codepen and can't figure it out. React throws an error whether it's capital or not. Babel automatically turns anything with a dot in the tag name into a component reference, but motion.div isn't defined as anything.
`yarn add lru-cache`
Project Page (?): https://github.com/nvbn/2019 *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Don't let this type of shit-brained feedback obscure reality. Developers don't really care about bundlers as much as they should nowadays. There is a huge lack of awareness starting to emerge and the fact this post received such negative feedback is clear indication of that. Projects like the Create React App are solving problems for developers but they're also creating problems in another nexus less travelled. Much like jQuery did by rendering a generation of devs who were fluent in jQuery but who were unable to understand pure JavaScript syntax. The advancements with Gulp 4 have gone strangely unnoticed. Gulp 4 brought with it some serious amendments that really have transformed the way one can apply bundling while at the same time retaining unequivocal speed and flexibility. I've been using Gulp for years and though I also use Rollup and Webpack for projects too when I require a more advanced build environment I'm just going to leverage those tools in the task function that they're designed for with Gulp. Anyone that claims Gulp is slow, it sucks or is quick to scrunch their nose up at the tool are either autistic or one of those annoying pricks who'd suck off Mark Zuckerburg for some street credit.
\&gt; But API wise it looks a bit like a step back from class-based components to sort of jQuery territory with tons of nested functions. I think this is missing some of the key reasoning behind the purpose and reasoning in React hooks, the move away from classes, and with functional programming in general. That doesn't reduce the value in this work for the purposes of learning (thanks for sharing!) but even if the result had been "smoother", I'd urge people to not rush back to classes purely for the comfort of familiarity without understanding the costs.
I've had the opposite experience, and I make a lot of highly animated websites and interactives. JS allows you to better track and control animations. Not sure it matters with this guys application, but further down the road it might.
The idea here is not to get rid of functions or rush to classes/OOP, but to get rid of huge closure with nested functions and organize the code a bit better and at least separate different scopes. In FP languages (at least Clojure) having a huge closure with nested functions is also not considered a good practice. But it might be that using classes for that is not the best idea.
Does anyone know what this feature is called? console.log(123_456_789 === 123456789) // true I don't see it mentioned here but read about it a while ago. Is that in ES2019? It works in Chrome.
https://github.com/tc39/proposal-numeric-separator
Hi u/acro5piano, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'm a little disappointed that private class properties are denoted by \`#\` rather than just giving us \`private\`, \`public\` and \`protected\` keywords. But it'll still be nice to have them.
It looks as though he *has* used OOP languages in real world development jobs before, based on the article.
Hi /u/TheFlexington, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This is very interesting, particularly the usage of Proxy.
Hi u/TheFlexington, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Looks like the mods removed my original description (so I don't remember exactly what I said), but thanks for the info; we were going through the Date docs and it was just behaving erratically which seemed to be some sort of random factor in the browser or our computers (???). Using dates in other languages with built-in date parsers, JavaScript is still relatively unintuitive and quirky (definitely more work to do the same things). I suppose there's something better to use in the browser, but probably not as accessible.
Its called "write shit code, win shit prizes"
Exactly, you got it right, I was basically saying the sales pitch was not there and got downvoted for it
Hmm I wasn't aware of that rule - is it documented anywhere? React's [JSX guide](https://reactjs.org/docs/jsx-in-depth.html) states that all component names must be capitalized, but doesn't expand on what happens with dots.
what's wrong with a triple equals?
Hi u/hardrockclassicrock, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This is me can I get some good reading material on this please lmao
This whole thread seems super shady and like an ad. When are the only comments things like "awesome" and "looks beautiful" for a new framework? And the only clarifying question got downvoted. This space is interesting, and I would personally consider anything seriously, but the link does nothing to say what the unique value prop is from my glance.
JustJS has fewer letters, which means it'll take up less space so that's definitely the winner in my eyes
Was at the talk they just announced this in at Chain React. They seem pretty excited about it. The biggest thing to me is you can now debug in the chrome dev tools.
IM(biased)O the link does a fine job of explaining the unique proposition. It’s a simple syntax for React animations and gestures. If that doesn’t interest you that’s cool but for me that’s it’s basically what I’ve been working towards ever since I started writing Popmotion. I’ve been involved in the planning of launching this and man if you knew what went into making this landing page and the branding, it’s wild to imagine there’d be anything left in the tank for faking or buying users (and to what end??)
You can more or less do this already with React Native Debugger though can't you?
Yeah, I get the frustration at my comment and I feel a bit bad now, but I just didn't see how it differs from alternatives at a quick glance through the page. But it might be that that's not simple to answer and I will investigate it more thoroughly on my own
&gt;&gt; it's just extra information which might be useful. if i see a statement in C code with one tab in front, it's reasonable to deduce that it exists at the lowest indentation level of a function and not in any for() or if() blocks. this could be useful depending on what you're looking for. &gt; &gt; I think its a rather rare circumstance when a developer sees their code out of the context of the rest of their code but still need to know what level of indentation it is. Why would it ever be useful to merely know that it could be in an if statement or a for loop. i could try and come up with an example but i think it's pretty obvious that any additional information can be useful when choosing between alternatives. do you really believe that this information would never be useful in deciding which line to look at in the output of grep -n? &gt; &gt; No I don't think 1 tab character is more complex than multiple space characters. do you think multiple space characters are more complex than 1 tab character? &gt; &gt;&gt; i agree that spaces allow you to make an indentation of 6 spaces in a file with 4 space indents; i don't think this is a benefit though and it doesn't mean spaces are more flexible. a file with tabs can be made to have any amount of spacing for indentation (the topic of this post). that's more flexible. &gt; &gt; A tab can we can character width you set it to but unless your desired indentation is a multiple of that tab character size then you won't be able to achieve it with just tabs. Spaces are more flexible by definition because it doesn't ever matter how much spacing you want your indentation to be, it can always achieve it. you can always achieve it with tabs by setting the tab stop to your desired indentation. am i missing something?
No worries mate. We’ve definitely taken the feedback on board but we have tried to surface the majority of its features on this page without being overwhelming. I reckon the top line is it’s simpler yet more flexible than Pose.
The first quote is actually talking about statements, not lines. The "gotcha" is that a line starting with a dot will be considered a continuation of the previous statement, but in your Gulp example that is exactly the intention. It's just another code standard, that avoids semicolons where possible. No need to start another argument about which is better. Though I do agree that the name ("JavaScript Standard Style") is too cheeky, and likely the reason it's getting a fair amount of dislikes.
Well I never really like the whole "Javascript is a bad language because if you evaluate weird stuff in the console you get a weird result". Like, yeah 5 == "5" and \[\] == !\[\] and "foo" + +"bar" == "fooNaN", but most of the complaints are fixed with "then use a triple equals and stop complaining". But I think 123\_456\_789 === 123456789 is the one "JS sucks" example that I've actually agreed with...
Fair point, so you would rather see double equals instead of triple equals?
Yeah I think the problem is I don't know the preddcessors but know some other react animation libraries
Underscores are used to visually represent significant digits in js. The statement is valid. They both evaluate to the same thing.
Yes you're absolutely right. Now while I think Gulp is my preferred JavaScript build tool, there are things I wished could be improved: - drop support for Node v0.10 (yes they support v0.10). Lots of dependencies cannot be updated because of that - abstract stream consumption from users. Lots of plugins are basically just wrapping a Node library with through2. This creates a huge ecosystem of plugins that do not add real value and many are not maintained anymore.
&gt; do you really believe that this information would never be useful in deciding which line to look at in the output of grep -n? I absolutely believe it would never be useful except maybe in situations more rare than having developers with accessibility issues that would warrant having tabs. &gt; do you think multiple space characters are more complex than 1 tab character? Yes I do.
\# is way shorter than private and public. In the end, JS has to be download by browsers. Is not all nodejs. The amount of network you will reduce for using # instead of private and public is huge.
It's the only way to make them truly private in such a dynamic language.
Why not continue using class components? They aren't going anywhere. Hooks are great for when you have that simple mini component, but it needs to store a value or two in state and you don't want to write a whole class for it. For anything more complex, personally I'd stick with classes, because hooks can get pretty hard to read if you're not careful.
Maybe I’m missing something but isn’t this just creating a “render component” in the context of the outer component and just rendering that? But instead of having a function in a function we have a function in a class and wrapped with proxies - not sure how that is clearer?
&gt; I absolutely believe it would never be useful except maybe in situations more rare than having developers with accessibility issues that would warrant having tabs. probably true since most people just use sublime and ctrl-f at this point. i had forgotten that you consider accessibility issues too rare to warrant tabs. &gt;&gt; do you think multiple space characters are more complex than 1 tab character? &gt; &gt; Yes I do. then what was the point of saying "a tab is equally as complex as a space"? &gt; Unless your tab stop is 1 (might as well be a space then) then you won't be able to get any combination of spacing, so yes you must be missing something. so you're saying your indentations may not always be the same amount? why would you ever want that?
This seems like a non issue given that code can be minified.
I get why they implement this way, but as a common convention in most other languages, Imo, == behavior should be swapped with === :/
I just mean to say in your example both == and === would be true. I agree with your overall sentiment.
I'd prefer expressive syntax rather than succinct. It's like saying you should use single character variables rather than expressive ones.
Okay, the docs say *ES6 modules are fully supported*. However, when I try to run some of my code (or some of the scripts in the examples/ dir) I get ``` SyntaxError: unsupported keyword: import ```
After that I strongly recommend using some of these patterns in your code: https://30secondsofcode.org/ Many of these more functional patterns are really, really useful in writing maintainable node projects. Node is a serious landmine for turning quick code into unmaintainable shit sandwiches.
Wow really? I honestly didn't know you could declare numbers like that. I'm familiar with the underscoreJS library, so it just kind of looks like a messed up call.
Well someone just told me that 1234 and 12\_34 evaluate the exact same. That underscores are just a way to draw attention to signification digits. I guess I thought it was converting 123\_456 into a number for the comparison, the same way "123456" is automatically switched when compared with a number. But apparently let num = 1\_000; and num is a hundred. So I guess I don't have a problem with it. Just that it looks like someone messed up an underscoreJS call.
"Mark all tiles that show 'amateur mmf threesome'"
ActionScript (ES4) did it
*Noooooooo!* But seriously, I’d love to see some whacky-looking JS with overloaded operators.
One of those hidden features of JS.
Looks pretty exciting! I can't wait to see what its like compared to JavascriptCore.
I got the same error, then I notice the -m option. $ ./qjs -m examples/hello_module.js Hello World fib(10)= 55 ./qjs -h says -m --module load as ES6 module (default if .mjs file extension)
This dude is pretty awesome.
&gt; Can compile Javascript sources to executables with no external dependency. That seems interesting...
Is this a completely clean room implementation? No JSCore or V8 heritage?
Thanks for the advice!
Hi u/maschad, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
"Numeric separator" Stupidly obvious in hindsight. Thanks.
It's just easier to manage components state with hooks than with life cycle methods, with hooks the code for a state is in one place. And for things that you need to precalculate `useMemo` with declared dependencies is much more convenient. &gt; hooks can get pretty hard to read if you're not careful This part I was trying to somehow improve.
&gt; Maybe I’m missing something but isn’t this just creating a “render component” in the context of the outer component and just rendering that? It's just one functional component that returns elements from `render` of the class. &gt; But instead of having a function in a function we have a function in a class and wrapped with proxies - not sure how that is clearer? Implementation details-wise it's much worse: it creates a proxy, extends it and populates a bunch of descriptors on each render. But I was more thinking about possible API than nice implementation, this thing is definitely not for real life use.
ok thanks, I will add it right now
They replaced it by exporting a `config` const from your page...
This looks really pretty - great work!, is there any possibility of the project being ported to Vue on the roadmap?
The only section of the next.js site that requires a login is the "Learn" section. Literally, every other section does not require you to log in. But yea, I suppose that's "almost all of the pages"...
I didn't really like my React Native experience
You already can yes.
But how good is it at doing the limbo?
This is so good it’s ridiculous! I was a big fan of Pose and it’s ‘poses’ but this ‘variants’ api is a big step up. Not having to create the components ahead of time really changes the game. So excited to try this out. To me it feels like the final frontier for declarative performant web animations is to compile them to CSS key frame animations and completely free up the main thread. I know svelte 3 does this. Amazing work!
Hi u/CoderDot, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks for setting up the codepen. It shows off what this library does better than demo page!
Hi u/CoderDot, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This is going to push RN to the next level.
Believe me no one said "Yo using # is so much nicer than private". It took months and months and months of discussion to get to the point where `#` was shipped. https://github.com/tc39/proposal-class-fields/blob/master/PRIVATE_SYNTAX_FAQ.md
you're welcome! You can add it to your readme if you'd like
Keywords can't be minified though? Not saying it justifies the short syntax, just speaking in general.
I don't get why they gotta go off standard.... If next wants to be it's own thing I'll just use after
You've had the ability for a while to disable file system routing and use your own route config. Couple this with a package like next-routes and you have dynamic routes.
Wasn't this Google's original intent behind recaptcha? That's why it showed two words; one it already knew (to verify your response), and one it didn't (to train their model). Then once OCR was dead simple to achieve, they moved onto the image classification approach. And now since that's also dead simple, they moved onto the mouse movement analysis
I'm fairly sure this is just an interpreter, it wouldn't come close to a JITed engine like V8. This is still very impressive, I'd like to see it benchmarked against duktape.
Yeah, they’ve said it’s not based on an existing engine.
https://i.kym-cdn.com/photos/images/original/001/225/459/221.png
Hi u/puppet_pals, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Because it was unnecessarily rude. The commenter knows that logging in helps save the progress across devices and browsers. We gotta be better to each other.
He has provided some benchmarks including duktape on his website. [https://bellard.org/quickjs/bench.html](https://bellard.org/quickjs/bench.html)
data-src scroll src
Then they are not truly private. Private means external Code should never be infuenced by the addition of a private variable. When putting them in the same namespace external Code that assigned a variable must now throw an error when this variable already exists as private.
I'm very excited with this and studying the code base in order to contribute with the project.
Hi u/ObservadorCalado, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Someone teach this man about `await`
I never said in general, I said new specs/syntax may \*always\* require semicolons and not support ASI, even if you prefer ASI. I added a link to the OP.
`await` is more limiting because you *must* await a promise. This is not what we want because it will activate the promises when testing. It also limits the flow control features that can be accomplished by writing declarative async I/O. Using something like `cofx` the `yields` do not return promises, they just return normal objects. The `cofx` runtime takes those objects and creates promises that get executed. This is a critical feature to allow for a better unit testing experience and why `async/await` is not used.
It worked for AS because it didn't put them in the same namespace.
Just skimmed over the thread and definitely understand the sentiment. I'm sure this is especially a problem when trying to add new keywords (e.g. async/await). For the record, I'm not particularly against semicolons, I think I just misunderstood the intent behind your original comment
Hi u/akmal10, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
No worries, I can see how it could be misunderstood.
Please don't. The site you are trying to emulate is a usability nightmare. &amp;#x200B; See this previous discussion: [https://www.reddit.com/r/webdev/comments/47n9ph/psa\_dont\_use\_smooth\_scroll\_scriptsplugins\_on\_your/](https://www.reddit.com/r/webdev/comments/47n9ph/psa_dont_use_smooth_scroll_scriptsplugins_on_your/)
Hi u/nodrus, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
If there’s enough interest within the Framer community, sure. But unlikely in the near future.
Not sure why you've been downvoted, but you can't use _ because it's too used in the wild to denote private and could actually break code, and . already denotes object properties. Pretty much no one uses # for private so it works. In the end I think few people will continue writing in just Javascript anyway - this just makes it easier for languages like Typescript to finally support true private fields in compiled output. I'm not saying that no one will write in JS, but the people who do won't be bothered by this - but people who do aren't writing in JS anyway.
It sounds too good to be true, but it actually make sense. I mean google is using their service to help their AI identify road objects, I don't see why it couldn't be used to help identify other stuff. They are basically earning by helping other companies labeling their data
Hi u/Kotik_Meow, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/Kotik_Meow, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/nightextern, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/NishkalKashyap, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/smith987654321, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt;it's not always very constructive I'm gonna use that line next I'm getting senseless complains from the boss
https://github.com/mmubuso Don’t hold back!!!
Hi /u/NishkalKashyap, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
So what exactly does this do?
Hi u/qdouble, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
You could make a mobile version and call is "Quark Express".
I'm afraid that would be really difficult to do. Quark has too many native dependencies that'll make it hard to port to mobile. Thanks for suggestion anyway 😃
Thank you for the answer!
Hey cool! Gonna try it out. Do you need feedback?
You essentially are hijacking the scrolling. There's events that get triggered when a user scrolls, \`mousewheel\` event, \`scroll\` event etc, you need to attach event listeners for these events, and from there you can manipulate the scrolling, possibly something like \`scrollTo\` with a css smooth transitions. Something similar, you'd probably need to play around with the transition but ultimately you need to listen to those events and change the behavior. &amp;#x200B; I wouldn't recommend it, as someone mentioned. BUT it's not the worse usability thing I've seen, and if you're learning and enjoying building something go for it :) if you get stuck building can always PM me or post another question here :)
I think there are too many thing moving in your website, it may give nausea to some people. Otherwise it seems like a really nice tool!
Lol, I see what you did there...
Oh I would absolutely love to!! 😃
That's a nice looking project, but your website makes me seasick there's so much stuff moving around
I might be dumb, but what actually is it? Is it a framework to build Electron apps with a bunch of ootb functionality? Is it an IDE that itself runs as an Electron app that lets you run Electron apps inside itself?
It says it can compile JS to executables, I'm assuming that means actual compilation, and not just bundling an interpreter with your source.
How does this differ from sagas? Is it just that it doesn't require/run on redux's trails?
Hi u/TejaSankuru, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
5% of reddit users will get this...
&gt;Is it an IDE that itself runs as an Electron app that lets you run Electron apps inside itself? This is a much closer explanation. I will be publishing an article on [medium.com](https://medium.com) /([hackernoon.com](https://hackernoon.com)) this weekend. I was really not expecting this kind of overwhelming response from reddit, else I would've waited to post here until publishing my article.
&gt; I was really not expecting this kind of overwhelming response from reddit, else I would've waited to post here until publishing my article. You got like 11 upvotes and 4 questions. You may have the most realistic expectations of reddit's typical response to a fresh account showing off hard work I've ever seen.
Great tutorial, but I recommend using \`requestAnimationFrame\` instead of \`setInterval\` for the loop. If you have other things on the page (besides the clock), you will find the clock skips seconds every so often because the clock starts to drift. Here is a npm module that fixes setInterval I created a few years back with an explanation of the problem [https://github.com/taylorhakes/clock-interval](https://github.com/taylorhakes/clock-interval)
Well. I was putting that in context of the number of downloads I'm getting on the website, not on upvotes here 😅.
Poor dude is fresh from Stack Exchange
&gt;That's a nice looking project, but your website makes me seasick there's so much stuff moving around Shall be fixed by the end of the day.
I’ll be glad if you try it guys!
just going to +1 that! i totally mean this as constructive criticism, but: accessibility over function over form i personally love harmonic animation and do a lot of svg stuff myself! but don't think i've ever seen so much oscillation of... everything! people with accessibility issues are going to have a super rough time with this, and im also seasick myself if it were me i would not animate any of the fixed elements, and maybe do _subtle_ animaton on the symbols in one place (header, a single banner etc) - think like atom.io
Thanks for your suggestion. The post has been updated and it's using requestAnimationFrame instead of setInterval.
Hi u/isaacwassouf, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Those time-units could probably be dl elements.
all that motion its really annoying
&gt;all that motion its really annoying Shall be fixed by the end of the day.
What's the advantage of this over synchronously processing everything? You're not using `setTimeout`, so the whole bulk will be processed in one event loop iteration, nullifying the whole point of async.
Blazing fast - Can't scroll the main page because of all the animations &amp;#x200B; From what I could see above the fold looks neat
This gave me motion sickness
Hi u/hsablonniere, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
For the record, mobile looks great. Haven’t experienced the desktop seasickness so I can’t comment on that. I would however be sure to add a bit of text shadow to your floating text so the randomly placed shapes don’t cover certain letters. It’s still readable but just a small thing I noticed. Great work! Looks cool
Ok. I've just fixed the website issue. I hope no one gets motion sickness this time now. 🤢
Fixed the issue. Sorry about that. 🤢
Fixed the issue. Sorry about that. 🤢
Fixed the issue. Sorry about that. 🤢
Hi u/iambeardier, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Fixed the issue. Sorry about that. 🤢
Was this some sort of a joke. Could anyone explain to me whats going on? 😅
Hi u/xelamony, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
There’s already a famous desktop-publishing software suite by the name of Quark.
There's a software company that exists called Quark and they produce QuarkXPress. I believe their software was originally just called Quark.
looks cool (i like the spinnys btw). how does it differ from something like glitch?
 Hello people, [We](https://github.com/pankod)'ve created a boilerplate for backend development with MicroService architecture. It has everything you need, to build real world apps. Built in CLI generates entities, services, service unit tests and even integration tests in a second! It should save a lot of time for you. Hope you'll like it!
Hi - this looks cool but I'm finding it difficult to figure out who this is aimed at. For example is it at developers wanting to build a quick and dirty prototype or is it for product teams who want to produce a web client but not have to deal with Electron? If it's the latter (which I am, actually) then I read this line in the documentation: &gt;We use some witchcraft behind the scenes to make this happen. But you don't need to care about all that stuff, just write your application logic, build the project and you're good to go. Here are some of the key features of Quark sketches ...and the thing is, I do care about this because I want to understand how it works. Especially if I'm going to publish my app to machines that I don't control. Can you elaborate on how this works?
Also the term "Blazing fast" is completely meaningless without comparisons or numbers or anything and personally I am completely sick of projects declaring themselves as "Blazing fast" without any real definition of what it means. I am "Blazing fast" if you compare me to a turtle, but I am not a fast runner. Maybe I am just being grumpy though...
Well some people have it well at work
Hi u/HansWebDev, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Geez already at version 9? Is it easy migrations between versions?
The best framework ever made, or the best nodejs framework ever made?
Still has a very clunky scroll. Landing page has too many things going on, I can hear my laptop fans xD
There is absolutely a reason why we use the term "blazing fast". You could just go through the [getting-started](https://quarkjs.io/guide/getting-started.html#steps) guide where there is a **literal number of seconds (15 seconds)** in which you can create, build and run your project. Is that something that we need to mention on the landing page? I don't think it's relevant.
I started to make a small utility for searching for vacancies in the terminal in order to pretend that you work while you are looking for another job. I'll post it later in npm. Just for fun :D To run it: `node index.js` Btw hh it's the most popular job search site in Russia
From [the doc](https://quarkjs.io/guide/intro.html#quark-sketches-%F0%9F%8E%A8): &gt; Quark is built on top of the Electron framework. Your sketches are nothing more or less than full fledged electron apps. The only difference here is that they just weigh a few kilobytes instead of hundreds of megabytes. &gt; &gt; We use some witchcraft behind the scenes to make this happen. But you don't need to care about all that stuff, just write your application logic, build the project and you're good to go. That's a huge statement and it really warrants a more decent explanation. The predictability and the completeness of Electron without the weight of a full Chromium install is a bit of a holy grail. If I'm to build stuff with Quark, I'll need to know what I'm actually building. Does it have a centralized Electron/Chromium instance that every Quark project runs on? What does this entail in terms of building and distributing an application?
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
Then maybe put "IDE" somewhere on your website? Nobody knows what a "software sketchbook" is, while everybody knows what an IDE is.
Console.log is asynchrone
Best web framework ever made. Any language.
I'm not a developer (professionally) so am maybe also having trouble understanding it's use. I use JavaScript a lot making p5.js sketches. Would this allow me to make "apps" with that framework or just improve the whole process?
Much better now!
&gt;...and the thing is, I do care about this You are absolutely right there. That was a poor choice of words. 😅 &amp;#x200B; To answer your question. It is aimed at developers wanting to build a quick and dirty prototype. You could literally create a project with all the capabilities of an electron app **under 15 seconds.** That is the premise of it. To explain further, the idea of this project started when I was pursuing my degree in Engineering and felt a need for a software tool that would help me do things like — plot charts, app prototyping, create dashboards/GUI’s for my personal projects etc. I just needed “some place” to write my code, build small projects or test new ideas. To much of my own surprise, I could not find an easy way to do so. Hence, I decided to create this project. &amp;#x200B; I'm publishing an article on [hackernoon.com](https://hackernoon.com) this weekend. I'll try to do a better job at explanation. Until then, if you have any queries you could directly get in touch with me.
Hi u/liznuntm, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/BraveWinner, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This project has nothing to do with p5.js. Its like comparing a code editor to a JavaScript library. You might be getting confused because of how the word "sketch" is used in p5.js and this software. However, it could certainly help you create sketches with p5.js.
Heavily laggy on a near high end phone too
Glitch and Quark have very little overlap. Quark apps work offline on your system with Node.js, glitch works in the browser and has some cloud features. (as far as i understand glitch).
Hi u/DB_Cooper75, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
No Mac support. Interesting choice for a web dev tool.
You will never be able to access image data from JS if the image did not come from the same domain or had CORS header set to allow your domain. This is done for security reasons and if you found a way around it, it would be a bug in the browser.
&gt;That's a huge statement and it really warrants a more decent explanation. You're absolutely right about that. Again, poor choice of words. Quark uses a shared JavaScript runtime for all your sketches which is almost 99% of the weight of an electron app. That leaves you with your actual application logic, which is usually only a few kilobytes. &gt; What does this entail in terms of building and distributing an application? I've tried to make a clear distinction between an app and a "sketch". Apologies if it is not apparent enough. When it comes to distributing, you can only share your projects with other people who have Quark installed, this is due to the shared runtime limitation that I just mentioned above. It is intended to be a developer tool and only for personal projects. &amp;#x200B; If you're still not satisfied with the wordings there, you can submit a pull request if you want to. The docs are already [open sourced.](https://github.com/Nishkalkashyap/Quark-docs)
Hey! It's mentioned on the landing page, as well as on the introduction page. I guess you missed it. 😅 There [you go.](https://quarkjs.io/guide/quark-ide.html#basic-layout)
Ok, so I Actually should have mentioned the API is my own. I have a backend and a frontend and the imageURLs are being requested from my database. The URLS are different though. So my frontend is something like https://mywebsite.com" and the URL my imageURLs are being requested from is "https://backend.mywebsite.com/api" So if I can set something in CORS to allow it, it should work?
the full array is processed in bulks; when processing a bulk, it won't continue to the next one before completing it. you can easily and explicitly add pre and post processing to each bulk which makes maintainance much easier. in addition, each item in a bulk can be async or not. all of these features and more make `async-bulk-map` a cool and easy tool to use. an example use-case (which originated the idea for this) - a list of inputs that require heavy server processing, so in order not to "choke" the server, send them in bulks - the above mentioned hooks allowed me to implement different caching methods, persistency to recover data in case of an error, tracking and logging of how the flow advances and more :)
Hey Guys, just wanted to present you our official release of 1.0 version of our editor. I’m proud to present a new version of GraphQL Editor 1.0. Below you can find a list of features. Create * Prototype visually new systems * Instant GraphQL Development Environment * Host your GraphQL Schema * Use schema versioning * Use web-based GraphiQL Manage * Stitch multiple schemas * Visualize your systems * Onboard employees faster * Team Schema libraries * Manage access * Live collaboration Automate * Auto fake backend * Generate queries from a schema * Visualize schema from GQL files Anybody that would like to try please use 100% discount coupon REDDIT-JS-GQL month free. 100 seats available for free for js subreddit community.
Yea I think it helps you to mention that.
Have you tried parcel? https://parceljs.org/getting_started.html
I don't see how parcel has anything to do with this?
Hi /u/porkface31, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
The tagline for your product is "lightning fast app creation", so I'd say that an actual benchmark (as opposed to a vague term that doesn't really mean anything) is very relevant.
Yes, simply add a `Access-Control-Allow-Origin: https://mywebsite.com` header to API responses (note that `www.mywebsite.com` is not the same as `mywebsite.com`!) You can also simply use `*` to allow any domain to use your images, if you don't mind that. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
short that theory
Ah, I thought the idea is to allow other events to occur during processing, such as server being able to respond to other requests, or browser page remaining interactive.
Thanks for the heads up :) [https://codepen.io/anon/pen/JQzbgQ](https://codepen.io/anon/pen/JQzbgQ) updated with css transition, pretty much what I wish for. But I think the site use JS only for easing. I want to know what's behind the tweening.
Thanks for the response! &gt; How does this differ from sagas? Is it just that it doesn't require/run on redux's trails? In short: Yes, it's `redux-saga` without `redux`. This library was inspired by sagas because after understanding how it works and realizing how powerful a model writing declarative side-effect can be, I really wanted to take it with me in node or other non-redux code. The main advantage I would say of using `cofx` and by extension something like `redux-cofx` is that it makes it easier for end-developers to write their own effect handlers. [You can read more here](https://github.com/neurosnap/cofx#factory) &gt; I've found testing (using redux-saga-texter) to be really frustrating [gen-tester](https://github.com/neurosnap/gen-tester) is a library I wrote because testing generators is not intuitive at all. This library is a generic library that can be used for on any generators. &gt; I've found testing (using redux-saga-te[s]ter) to be really frustrating I've never used `redux-saga-tester` before but reading what it does it is more of an integration test with redux and redux-saga. The testing I tend to rely on is comparing the data from the generator when sent data and what we expect that data to be. Using something like `redux-saga-tester` you still have to intercept the http requests being made because the generators are being activated to their finality so you still have to mock the world for it to work properly. To me, this kind of defeats the purpose of sagas. I fear that `redux-saga-tester` is actually testing `redux-saga` and `redux` work properly, which was already accomplished in their own respective tests. All I care about specifically is the logic of combining all these async operations together in a function. If I pass it the wrong data, I should get an error. If I pass it the right data, I should see the correct result being dispatched. If you are ever working with redux-saga again, I'd give the `gen-tester` approach a try. &gt; Beyond that there's been a lot of trouble with new folks wrapping their heads around sagas I agree with this one. Generators are a new concept for a lot of people and they are confusing in the beginning. I would argue that because generators are very popular in multiple programming languages as well as knowing that it is part of the standard library, it's something we all must learn how to use. Not only because of what I mentioned above but also because they are extremely powerful from a flow control point-of-view.
Hi /u/Chaliiise, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/hy7mel, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Just don't
Those two features really stand out for me too. Through2 has become a slight headache, that’s for sure. Good to know other developers out here seeing the purity and brilliance in tools like Gulp. This entire thread has been utterly refreshing for me. Thanks.
Hi u/McLovinm8, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'm a little sad I didn't get to experience the psychedelic version of your site now.
Honestly didn't know about the ping attribute! Loved this article!
So from what I've gathered this is basically a prototyping tool. It gives you the ability to self contain and quickly setup an environment to test. You don't have to setup a web server or figure out node.js setup, you use this app as your test environment that locally lets you spin up and start building quickly. I haven't had a chance to give it a shot yet, but it looks to be a quick way to get tinkering (vs having to deal with setup of environment/etc)
"compatibility issues with existing JavaScript code, " If they use \_ then they need to change their code! That simple, it's too simple. Sure # *isn't* *usable* and there's a reason for ***that*** including the idea through standardization that it's not as readable. Sometimes, I think the JS guys took too many drugs or are overly stressed that they can't make simple discussions anymore.
Pricey, but well done. I shall add to my collection :\]
Thanks. I know the price is quite high, this is the first book I publish as a paperback and I was also surprised to see the cost of printing on amazon. I wanted the book to be printed in colors, for obvious reasons since it's a programming book and reading lines of code in black and white would drive me crazy lol and that increased the cost of printing. From a 45$ dollar paperback I earn 12 dollars lol roughly 1.5 times the earning of a 10$ ebook. I'm thinking of releasing a black and white version of the book which would be much cheaper to print and therefore I would also price it cheaper. As a reader, what version would you prefer?
To be honest I think I just find _that specific term_ really over used and nonsensical. I understand that you cannot cram everything into a single bullet point and for this project it's probably not relevant. I'm just really bored of everything being "blazing".
Maybe because it offers "offers blazing fast performance". :P
Just an FYI, you have a spelling mistake in the \`Everything you expect\` section. \`Intrgrated Terminal\` then you spell integrated in the description correctly.
Thanks for the explanation and I can see the value of the project. Looking forward to your write up!
It’s bound to be slower because it uses the array iterator method.
Hi u/steveswim22, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt;integrated Lol. Thanks for that. Fixed! 😀
&gt;blazing Will "Rapid fast" work for you? 😂
Great read! Thanks a lot!
You might actually get to see it because I really liked it. I may make it online on another domain 😝
Been using type safety supported languages for years (C# and Java) before starting to write in JavaScript (dynamic) Both (type safe and dynamic) have averagely the same amount of bugs if you don't unit test and document the code well.
All the print design work I did in college was in QuarkXPress. It's pretty much useless knowledge now.
This is less fingerpainty, more asphaulty.
&gt; Unopinionated Is this true to such an extent that I could prototype my whole app in Quark, implement my own non-Quark API UI touchpoints, pull out Quark and push in my own API, and then wham slammo baba booey? Another way of putting that question: Like zero opinion? Like I can start an Electron app and then realize later it would be easier to make traction with Quark, and so I just punch in a few Quark includes and get back to work? What do the bundled widgets depend on?
I could be interested depending on what the project is. If there is more information you can provide that would be useful.
Awesome, thank you. So I've kind of got it working. It's at least converting something now. But I can't seem to convert it into a working image. When I convert it into a File or a Blob, it's always the same `size:96` and I have no idea why. And when it's converted to a base64, it's always the same 128 character string, and when I try to add it to an img src the image is just that "no image" icon. When I upload the image directly from my computer the base64 is way longer and of course. I've tried about 20 different examples from stack overflow and every one either doesn't work at all, and gives me this problem. Do you maybe know what's going on?
Very close to the actual thing. I am admittedly an absolutely terrible writer when it comes to explaining things. 😅
I get it, talking about your own projects is sometimes the hardest too, so much nuance you want to convey in very surface level wording. It's like advertising why a memory you have was so good. At the end of the day, let your product speak for you. Give practical examples of why others should use it and they will, then they'll describe it best for you. I've learned that the food industry does it right. They use imagery to and "use case" (ie: eat this food) as advertisement then let their patrons tell others why its so good.
_Personally_, I think the spaces vs tabs discussion is largely -if not absolutely- unrelated the JS and some more generic programming discussion subreddit would be a better place to host it. In any case, I think that this is precisely what /u/kenman refers to as "relaxing the rules for off-topic". You can _always_ re-phrase your subject in the form of a question: "[AskJS] Have you ever considered the accessibility concerns of spaces in the discussion on tabs vs spaces?" and then post your thing.
I was actually going to ask for the easter egg version of it (I love easter eggs, I did one for April Fools day for my JS game). If you put it up let me know, I'd love to see it!
1. How experienced in JS are you? 2. Are you hosting your html anywhere (Server?) 3. If you aren't, are you expecting a solution that works locally only (It would not work when you open this html file from somewhere else) 4. If yes, Are you expecting that once you reload the page the information will be pulled from the 'saved' csv so you can continue entering data? &amp;#x200B; Answering these would help find a solution that more clearly addresses what you are trying to do
I am basic in JS, starter. Want a solution locally independent to every pc it runs on, was thinking about JSObject but not sure if it’s the best solution
There's little we can do without seeing the code.
Finally someone who understands the problem of a fellow human being. 😭 I've been working on this since past one year or so. It's really hard to get an external prospective on things. Can't just please everyone.
Bah, it used random characters. That was going to be the interesting bit!
Ugh, thanks for opening old wounds...
that was a bad move
Would you please care to explain why?
I've published an announcement post on hackernoon.com peeps. Here's [the link to the story.](https://hackernoon.com/announcing-quark-a-software-sketchbook-for-your-projects-2f53553415b)
Also to add to that, the website seems super clippy? I was experiencing serious lag as I was scrolling down the page on a 2018 MacBook Pro.
Interesting, no. Unorthodox, maybe.
There you go. Here's [the article.](https://hackernoon.com/announcing-quark-a-software-sketchbook-for-your-projects-2f53553415b)
maybe a game, I think making games is fun.
Ok, do you have a plan for it?
I am interested, is there a way to cordinate other than email?
The API is looking super easy to use +1.
This is actually really cool! I can see myself using this as a quick way to setup a dashboard to read/write to embedded devices. One question though, is it possible (a click of a button) to "eject" the sketch so it's no longer dependant on the Quark instance and instead is bundled up with the Electron dependencies?
I have future plans for that too. There are many ways to implement that. But that will take time.
So true. Op really needs to do a 2.0 of this. I imagine most of the legwork is already done.
Hi!! Congrants for your work! Just for U 2 know, in Win10 env I had to update these lines in package.json to be able to build the extension: "copy-manifest": "copy .\\manifest.json .\\dist", "copy-images": "copy .\\public\\images\\* .\\dist"
Yeah I was thinking they were going to render characters into a canvas and then sample their pixel coverage to determine their ‘intensity’, or something.
For the simplest possible implementation I can think of: Look up localStorage It will give you a way to save small data (Such as a basic JS object with key:values for your form inputs and their content) and you can load it upon page load. However some basic cons as you might learn more in JS: \- Local storage is loaded synchronously within the browser so it will be a blocking action, performance wise. \- Local storage can easily be deleted by the browser without notice, or the user themselves \- Local storage has a very low capacity &amp;#x200B; &amp;#x200B; Moving on from this basic solution: \- You can move the loading and saving to the server side (Your server or something like firebase) \- You can use the indexedDB Api to store data in a much more efficient way with less restrictions on size, but much more complicated \- You can actually load and save to a csv file. Use the Blob api to create a file so that the user can save whatever they have entered
Any plans to integrate Angular?
Hi u/spiffytech, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Not really. Angular comes with its own compiler and stuff. &amp;#x200B; Also, the whole premise of this software is to rapidly create projects. We already support Vue.js, React.js and typescript. I don't really think that angular fits in this category.
I'm getting really high CPU usage with the website open, dunno if it's all the animations or what, only noticed because I wasn't doing anything and heard the fan running loudly
When I read "power of electron" it made me laugh.
It doesn't look anything like a software sketchbook.
hey, but it uses the POWER of electron. /s
&gt;oxymoron Well. That's highly debatable.
Would you care to explain why not?
I'm finding difficult to understand how this post got 121 votes (so far)
I'm not sure why. I've already fixed the website and removed the animations. I'll try to find out.
Is anyone else having a strange effect when scrolling up and down through the blueish/purplelish background?
In here: [https://quarkjs.io/guide/intro.html#how-does-it-work-%F0%9F%A4%AF](https://quarkjs.io/guide/intro.html#how-does-it-work-%F0%9F%A4%AF) &gt;The only caveat here is that because of this shared runtime, your sketches have a direct dependency on the Quark software itself to provide for the runtime. Hence we call these projects built with Quark **"sketches" and not applications.** &amp;#x200B; If it's an application is not an sketch. If it's not an sketch then it's not an sketch.
&gt;I was really not expecting this kind of overwhelming response from reddit then &gt;You got like 11 upvotes and 4 questions. lol
All except the last two are terrible practices and would have detrimental effects on user experience. No actual website should use these methods. Instead you should use session tracking to know how a user navigates your website. Set a cookie and send out your GET/POST request on page load as opposed to page unload. It's more reliable and will have less impact on the end user.
Electron = Build cross-platform desktop apps with JavaScript, HTML, and CSS Quark built with Electron = No Mac version. &amp;#x200B; lol
&gt;Why every Vue developer should be excited by Quasar 1.0 No reason, other than to make a Medium article more marketable.
I agree about `redux-saga-tester` being more of an integration testing framework. It's definitely not ideal. Having to mock things feels like, as you said, you've kind of lost the major benefit of generators/sagas/cofxs. My worry about testing sagas (or cofx's!) specifically as generators is that the tests seem to have a tendency to get really tightly coupled to implementation, requiring verbose tests, and becoming brittle. I'll have a look at your testing lib though, looks interesting at a glance, and it doesn't look to have the same problems I've seen elsewhere. Also, a bit of a tangent, but I've been messing around with free-monad based effect systems in haskell. If you have any interest, I'd checking it out. There's a lot of conceptual overlap, but they also have some really nice features, foremost among them for me being completely custom interpreters. So e.g. you can write an HTTP effect, and then write a pure interpreter for it to use during testing, and an effectful interpreter for production. They can make cross-cutting concerns a lot nicer too, like you could write a logging HTTP effect interpreter, and then you don't need to sprinkle log statements everywhere. Anyway, 👍 cool stuff, nice work!
I don't understand the criticism here. He started with fixed `@` and then moved to use a charset to make it _less_boring_. You can give your own charset and get the effect you want to. Unless you want to have characters based on the image context.
You know, the yearly [js13k](https://js13kgames.com/) competition is starting on August 13. i.e. make a JS game but fit it into 13K. It's fun! You might want to submit something!
Hi u/Deloquito, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/octergon, this post was removed. As stated in the [AskJS guidelines](https://www.reddit.com/r/javascript/wiki/index/askjs), AskJS is not for help or support. This is your only warning. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RelevantTech, this post was removed. As stated in the [AskJS guidelines](https://www.reddit.com/r/javascript/wiki/index/askjs), AskJS is not for help or support. This is your only warning. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/CoderDot, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Excellent points, like you read my mind :) "Tabs vs Spaces" largely transcends JS, yet, there is still enough nuance that can still be topical. u/d07RiV, read the above reply and you'll have your answer. As u/deadc0der alludes to, you should be able to rephrase whatever topic into the form of a question, which should naturally invite more discussion than simply throwing out an opinion statement.
Ladies and gentlemen, I give you: Peak Buzzword.
discord
I will, if you are interested contact me on email for more info
I have sent you info for that platform
Sooo... Basically wrote a modern Dreamweaver clone?
Is this a product that you intend to charge for? An open source project? Not obvious from the site.
Really nice, great work :)
!remindme
**Defaulted to one day.** I will be messaging you on [**2019-07-14 00:40:48 UTC**](http://www.wolframalpha.com/input/?i=2019-07-14%2000:40:48%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/javascript/comments/cc9dfe/announcing_quark_a_software_sketchbook_for_your/etn6wst/) [**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fjavascript%2Fcomments%2Fcc9dfe%2Fannouncing_quark_a_software_sketchbook_for_your%2Fetn6wst%2F%5D%0A%0ARemindMe%21%202019-07-14%2000%3A40%3A48) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20cc9dfe) ***** |[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/c5l9ie/remindmebot_info_v20/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=Feedback)| |-|-|-|-|
Oh, this is gold! Thank you!
1. Sounded interesting Gave it a try 2. Read until the first header 3. ?????? 4. Closed the page again instantly &amp;#x200B; Am I the only one here who got triggered by this??? Synchronous AJAX or this one Asynchronous AJAX Dude. really, [**wtf the fuck??**](https://www.reddit.com/r/wtfthefuck/)?
Did you know JS has a native API for it? [Intl.RelativeTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat)
yeah, wonderful, there was a time awhile ago i was experimenting with some music stuff, and i sure wish i had this library at the time might open the door to get back into a sweet hobby project.. awesome!
Could you theoretically have several time signatures in one piece?
What does svelte bring to the table? Heard its speed and beautiful code but thats not enough.
Hi u/Made_In_Tokyo, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I do, like lines
yup it happens reasonably often
one song off the top of my head that has that is classical gas
Thanks for reading! Initially I had a different direction planned with thresholding and luminosity but in the interest of keeping the article short i went with pixelation only. I'll give it a shot and maybe write a 2.0 :)
I'd suggest you change the name before you're showered in lawsuits from [Quark](https://en.wikipedia.org/wiki/Quark)
I sincerely wish we could freeze tc39 for two years. The wider developer community is barely using what’s available in es2016-2018 and it seems like we’re just piling on without giving people a chance to digest and figure out what’s working and what’s not. I’m most worried about the [https://github.com/tc39/proposal-iterator-helpers](Iterator helpers) proposal. I’m not sold that there has to be an Iterator prototype which all iterators inherit from, especially because all of the proposed iterator methods could be replaced with equivalent functions and the built-in modules proposal would make defining these methods as functions possible. It relies on the `Iterator` interface rather than `Iterable`, meaning people are gonna confuse `Array.prototype.map` with `Iterator.prototype.map` all the time. Also, it’s gonna completely wreck the typescript world (everyone has to replace `implements Iterator` with `extends Iterator` and add an Iterator shim.
Frameworks on top of frameworks! Peak insanity.
&gt;No pipeline operator Aww.
Hi u/CloudsOfMagellan, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/Usama9012, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi u/PalVaradiNagy, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I hope optional chaining progresses, it's always irritating to have to \`if ( a &amp;&amp; a.b &amp;&amp; a.b.c ) return a.b.c.d\`
I'm rapidly working towards making it open source. It is a free product. You can learn more about it in [announcement post on hackernoon](https://hackernoon.com/announcing-quark-a-software-sketchbook-for-your-projects-2f53553415b).
Copyright cannot be applied to things naturally occurring in nature.
&gt; The wider developer community is barely using what’s available in es2016-2018 They aren’t? I use major parts of them daily. Don’t get me wrong, I’m not using stuff because it’s there, and there are definitely new features I disagree with being in the language at all, but come on! Object spreading and a sync functions are huge and important changes. A large percentage of changes in recent years are merely regex features and fixes which were always going to be relatively unused.
That's... kinda awesome.
Yes. https://abcjs.net/abcjs-editor.html Enter: X: 1 T: Cooley's M: 4/4 L: 1/8 R: reel K: Emin |:D2|EB{c}BA B2 EB|~B2 AB dBAG|FDAD BDAD|FDAD dAFD| EBBA B2 EB|B2 AB defg|afe^c dBAF|DEFD E2:| L: 1/8 M: 2/2 |:gf|eB B2 efge|eB B2 gedB|A2 FA DAFA|A2 FA defg| eB B2 eBgB|eB B2 defg|afe^c dBAF|DEFD E2:| Just a mod of the original example piece, and the change in signature doesn't have an effect on the output (measures are manual), aside from the display of the signature. abc notation is pretty neat, though. Like markdown for music. I just picked it up using the editor there, a couple of tutorials, and translated a few of my son's Suzuki violin pieces into it. For example... X: 7 T: Lightly Row (Suzuki) M: 4/4 L: 1/4 Q: 180 K: A | "A" z2 "E" z2 | "A" z4 | | "A" ve uc vc z | "E7" ud vB uB z | "A" vA uB "E" vc ud | "A" ve ue ve z | | "A" ve uc vc uc | "E7" vd uB vB uB | "A" vA uc "E" ve ue | "A" vc uc vc z | | "E" vB uB vB uB | vB uc vd z | "A" vc uc vc uc | vc ud ve z | | "A" ve uc vc uc | "E7" vd uB vB uB | "A" vA uc "E" ve ue | "A" vc uc vc z |
Cheers!
Most recent changes after ES6 are small. Useful but not everyone needs to use them and there is no need to waste years for everyone to catch up.
Hey, it supports lyrics! T: Lightly Row (Suzuki) M: 4/4 L: 1/4 Q: 180 K: A | "A" z2 "E" z2 | "A" z4 | | "A" ve uc vc z | "E7" ud vB uB z | "A" vA uB "E" vc ud | "A" ve ue ve z | w: light-ly row, light-ly row, o'er the glas-sy waves we go | "A" ve uc vc uc | "E7" vd uB vB uB | "A" vA uc "E" ve ue | "A" vc uc vc z | w: light-ly row, * light-ly row, * on the si-lent tide * * | "E" vB uB vB uB | vB uc vd z | "A" vc uc vc uc | vc ud ve z | w: let the winds and wat-ers be min-gled with our mel-o-dy | "A" ve uc vc uc | "E7" vd uB vB uB | "A" vA uc "E" ve ue | "A" vc uc vc z | w: light-ly
The standard lib thing sounds hot. I hope that this will finally reduce the insane amount of one liner dependencies in npm packages.
Hi u/aphrasheen, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I worked towards advancing this proposal for a long time. It's really great to see it getting traction!
The big feature devs aren’t using is async iteration (ES2018), mainly because it’s difficult to convert callback-based APIs to async iterators and a lot of people use Observables instead. And that has big consequences for anyone trying to extend the Iterator API, as Denicola is trying to do, insofar as we have no idea if there’ll be a smarter abstraction to build sync/async iterators later on. It also has consequences for explicit resource management, which wants to add a new statement type because they argue async iterators are inadequate. How are we supposed to know if async iterators are inadequate if we haven’t even given them a chance? I’ve also seen a lot of complaints about inconsistencies in rest/spread properties. Why is `{ ...null }` valid when `[...null]` is not)? Why can’t we put trailing commas after rest parameters? Why can’t we destructure the beginning elements of arrays (`const [...a, b] = arr`)? This feature should have been in stage 2 for a lot longer but transpilers like babel sorta forced the tc39’s hand, and whenever people complain about these features on twitter the tc39 members have gotten really salty about it (https://twitter.com/ljharb/status/1139909170222682112). It would’ve been nice, if, maybe, they kept this feature in stage 2/3 for a little longer so we weren’t stuck with this behavior for all eternity.
It cures your FOMO, and does the dishes too.
We’re still struggling with features in ES6. Have we seen any agreement re. `import`/`export`/ ESModules? I agree that the changes are small, but any language change is huge insofar as it has the ability to affect ALL code and is virtually impossible to back out of once it’s implemented. The “wasted” years are a small cost to pay for possibly ruining the language and ecosystem by implementing the next GOTO.
I thought it was beautiful and loved the animations. They are so charming and cute. The little revolving triangles and shapes! Mind sharing the js and CSS for that?
The website and documentation is already open sourced on github. [Check it here.](https://github.com/Nishkalkashyap/Quark-docs) Cheers!
I came here to say something similar. LMAO
const a = { b: { c: { j: 2 }}}; const a2 = { b: { c: { d: 2 }}}; const {b:{c:{d}}} = a; // undefined const {b:{c:{d}}} = a2; // 2 Use destructing.
My iPhone won’t let me click to add an object.
you would have to use 'ontouchstart' instead of 'onclick' in line 47. iphone does not support 'pointerdown' :(
So it shouldn’t be too difficult for you to get this to work for mobile users. Just copy the click event listener and rename it?
No, we can't do a full stop because a part of the spec troubles some people. We're able to work on multiple problems at a time. Tbh, some changes still take way too long. An extensive standard library is long overdue.
Every new change to the spec depends on previous changes. I would love a standard library as well, but that’s coincidentally blocked by the lack of agreement we have as to how ESModules should work. Node.js, bundlers, browsers all handle `import`, `import()`, and `export` slightly differently and building a standard library on top of this abstraction is unwise until we can come to consensus (see the import maps proposal for instance). Also, other languages (see Python) are starting to think that standard libraries are overrated, insofar as the version of all standard libraries is tied to the language version, forcing people to write shims to fix compatibility issues/create user-space libraries as alternatives. We need to think very hard about if we should use versioning for standard modules, and also, what sort of APIs belong in a standard library vs. environment globals. There’s a lot of hard questions to answer when it comes to adding standard library features to Ecmascript, and simply saying “An extensive standard library is long overdue” isn’t really helpful.
abcjs was the firstABC program written in javascript. But, as it is slow and lacks some features, I translated abcm2ps from C to javascript giving abc2svg. &amp;#x200B; The source and documentation may be found in: [https://chiselapp.com/user/moinejf/repository/abc2svg](https://chiselapp.com/user/moinejf/repository/abc2svg) &amp;#x200B; and there is a live editor in my site: [http://moinejf.free.fr/js/edit-1.xhtml](http://moinejf.free.fr/js/edit-1.xhtml)
Ah, Kenman... reading the conversation below with ghostfacedcoder, I was left wondering how does one get to the wiki (apart from using the link in this submission). With the "new" design, or from the mobile app, there doesn't seem to be really any way to reach it (other than switching to the old design, of course). I really don't know about the new blocks in the new design, but some other subs have migrated the old sidebar info to them so there must be some way to do it. Again, I don't know how the new blocks work, but if you are busy and need some help, I could try at least looking around and seeing how it's done and maybe preparing the content from the old sidebar to put it in a block or something. (Guidelines, Spec links, CIU, MDN... those links were useful)
Hi u/NaveenCoder, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Correct me if I’m wrong but destructuring won’t help if `a`, `a.b` or `a.b.c` are undefined? I remember getting errors like “cannot destructure property 'x' of undefined”. lodash.get does help though
Looking at how similar it's to VS Code, why can't this be an extension for it? I'm not feeling like downloading additional software I don't even feel like I need, but would certainly try it out if it was just an extension
We needed access to lower level operations in electron. VS Code does not allows that.
On mobile, in "Software sketchbook for your projects" these boxes and shapes end up behind the text which is very jarring.
Alright. That'll be taken care of.
As does moment.js: duration().humanize().
does quickjs and hermes means javascript is more popular these days
Especially these days
[removed]
Characters based on image content, exactly that yep.
Cool. Nice work anyway!
got it
Hi u/Shaderick, this post was removed. * Self-posts (text) must follow the `[AskJS]` guidelines, which you can read about [here](https://www.reddit.com/r/javascript/wiki/index/askjs). * All other posts must use the _"Submit a new link"_ option; if additional text is required, add a comment to your post. * Feedback, questions, etc. should be posted to the [\[AskJS\] Feedback](https://www.reddit.com/r/javascript/comments/cacfqh/askjs_feedback/) thread. **NOTE: Learning, Support &amp; Help questions are still off-topic for `[AskJS]`, and should be posted to r/LearnJavascript or a Q&amp;A site like StackOverflow.** Abuse of the `[AskJS]` tag for off-topic questions may result in your posting privledges for r/javascript being revoked. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*