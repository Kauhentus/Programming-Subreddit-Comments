One of the really cool things with async await, is because they are basically syntactical sugar for promises is that you can still use a catch block instead of having a try catch. for example &amp;#x200B; ``` async function getSomeData() { await getDataOne(); await getDataTwo(); } getSomeData().catch(error =&gt; { // Error handling goes here - nice and easy }) ```
I really like the way it looks and how it zooms, but it's so buggy as to be unplayable on my Chromium based browser
r.i.p.
That's sweet, I have never used it that way
You can use it even like this (inside async functions of course) const someData = await getSomeData() .catch(err =&gt; //ErrorHandler);
That’s even best-practice since a strict linter will complain that you’re not handling the exception. I didn’t know that you could write it in this way though. Thanks man.
We used it on a production website with 130 million users. Oops... But luckily it works fine.
https://www.youtube.com/watch?v=Z-nXRZkge2U
&gt;* Problem – a lot of good content disappears: someone writes a post for /r/javascript, it is removed because it’s a better fit for /r/learnjavascript, but they never repost it there. Those posts are usually beginner questions. If OP doesn't feel the need to ask again in the appropriate sub, I don't think there's a need to do it for them.
In our company we have designers who do the mockup in Illustrator, Sketch etc and then import that to Invision, Zeplin etc. Then another person who will copy the design from Invision and make the HTML/CSS template. Sometimes the designer does this role too. Then another JS specific person who will take the template, put it in the right places, wire up the events etc and do the functionality. Any smaller tweaks to layout and style can be done by the designer as the layout is still in some HTML/CSS snippet somewhere. If it was in React and they needed to tweak things they would have a much harder time and need to learn React.
I wanted to point out that serverless is different from front end driven or jamstack apps. Serverless actually implies that there are conteiners and a container management service (kubernetes) allowing to create a FAAS (function as a service) model were you are only charged when your code gets executed. If interested in learning more about serverless checkout this video [open FAAS](https://youtu.be/yOpYYYRuDQ0) Jamstack on the other hand on means Javascript Apis Markup. This doesnt imply serverless. For example you can have a JAMstack site that uses a headless CMS which is hosted in the companies own servers and has an API... and they charge you a monthly rate or give you a free tier.
Hi /u/iwiik, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This issue is exactly the same in JavaScript and C, as they share the same syntax. Using `return` instead of `goto fail` doesn't change it either. Let's take a hypothetical JavaScript version of the code I linked to: . . . hashOut.data = hashes + SSL_MD5_DIGEST_LEN; hashOut.length = SSL_SHA1_DIGEST_LEN; if (SSLFreeBuffer(hashCtx)) return false; if (ReadyHash(SSLHashSHA1, hashCtx)) return false; if (SSLHashSHA1.update(hashCtx, clientRandom)) return false; if (SSLHashSHA1.update(hashCtx, serverRandom)) return false; if (SSLHashSHA1.update(hashCtx, signedParams)) return false; return false; if (SSLHashSHA1.final(hashCtx, hashOut)) return false; err = sslRawVerify(...); . . . Now of course anyone reading this little excerpt will probably notice the extra `return false` that causes the `.final` check to be skipped. But it's not as easy to spot in a larger commit. The equivalent C code made it through a code review by professional programmers and _no one saw the error_. For this reason, many style guides in any of the "curly brace" languages require braces whenever a statement is split across two lines. Some allow braces to be omitted _only_ in a one-liner, while others are more strict and require curly braces always.
Check r/LearnJavascript or Stack Overflow.
This is totally crazy. But what I find yet more awesome is the Conway's Life implementation on the author's site. Jaw dropping.
You can't return from an async context to a synchronous context. Whatever you need to do must be done inside the callback.
Thanks. when i read the introduction &gt; Tesseract.js is a javascript OCR library which leverages emscripten to port Tesseract OCR engine to browser. i didn't understand a thing. The demo is amazing though.
Can you supply us with an example piece of code on jsfiddle or something else?
Hi /u/jraykov, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
vim is not an IDE
Hi /u/jraykov, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Game locks up randomly against the computer: * I landed on chance the first roll and the AI never took it's turn. * I had to sell a city after landing on the AI's tile and didn't have enough money. Couldn't click on any of my cities to sell. Random clicking in the window selected one city and I was able to click confirm, but AI didn't take it's turn after that. I really like the idea you have here, but it's not functioning properly. =/
Long winded article that’s mediocre for beginners.
Hi /u/Ultimateace43, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
If your response is coming back as an object named r... return r;
I solved a similar issue using promises, I used the resolve to pass the result back from a nested async function and .then to the next function.
I would argue the real issue is with testing and linting. A decently written unit test would catch this, and a linter would correct the indentation issue, which would make the issue obvious to the developer
Correct. But what is your point?
Okay, I have the answer: 32 bit ints vs 64 bit ints. &amp;#x200B; The "long" datatype on linux and macOs is 64 bits. (32 bits on Windows). ([https://software.intel.com/en-us/articles/size-of-long-integer-type-on-different-architecture-and-os](https://software.intel.com/en-us/articles/size-of-long-integer-type-on-different-architecture-and-os)) &amp;#x200B; In the V8 javascript engine, integer arithmetic is 32 bit ([https://medium.com/fhinkel/v8-internals-how-small-is-a-small-integer-e0badc18b6da](https://medium.com/fhinkel/v8-internals-how-small-is-a-small-integer-e0badc18b6da)) &amp;#x200B; So, a like-for-like test would be to use a 32 bit datatype for the C code by including stdint.h and changing the long types to int32\_t. Alternatively, use the -m32 flag on the command line. &amp;#x200B; When I do that, I get 9-10 seconds for the C program. &amp;#x200B; Thanks for the puzzle! I was very surprised when I reproduced your findings and it took a little while to figure it out!
Got it to lock up here [https://hidden-bastion-42143.herokuapp.com/8RXVAmDJn8Uu](https://hidden-bastion-42143.herokuapp.com/8RXVAmDJn8Uu) landed on the star thing, picked tahran, ai never took its turn Then crashed here [https://hidden-bastion-42143.herokuapp.com/sFkZEywI83nV](https://hidden-bastion-42143.herokuapp.com/sFkZEywI83nV) After one double on my turn, then paying the ai, I rolled and it wouldn't move my guy
I dunno, you're the one who compared it to an IDE. just correcting that mistake on your part.
Performance only matters when you have to squeeze the absolute best performance out of limited hardware, which triple A video game devs claim to do, but I highly doubt, as I've never seen large, efficient codebases.
Here's a naive algorithm to find the N'th prime, [coded in Go](https://gitlab.com/snippets/1856267). It takes about 15.5 seconds on my computer, for N = 1_000_000. Here is the same, [written in Python](https://gitlab.com/snippets/1856266), not particularly famous for number-crunching speed. It takes nearly 3 minutes to find the millionth prime, *if the numba.jit decorator is commented out (or deleted)*. With numba.jit, it *outperforms* the Go code, taking about 7 seconds. The benefits of JIT kick in at large values of N. For N of the order of a hundred thousand, the Go code is the winner. Note that the Python and Go programs implement the exact same algorithm. Sorry if this is offtopic on /r/javascript, I'll post the comparison to node.js later. I found it an interesting exercise.
No worries about language man, as a Front End Engineer I’m sure we all have started like this, not really knowing where to look at. I strongly recommend you to follow the [MDN Javascript Guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Introduction). MDN is clearly the best Javascript docs out there and it’s translated to a LOT of different languages, so I guess it will fit your needs. This is a guide from 0 to 100, it’s quite big, but you know, its a programming language. Javascript is one of the easiest programming languages to learn out there, because a lot of stuff works out of the box due for it to be non-strict &amp; poorly typed by default. And this is why it is important to learn the basics along with the best practices, to better understand how it works and avoid the feel of not really knowing why your stuff is working.
The best advice I can give you is to just try and build something that you think is cool. Keep it super simple at first. Make a counter button, then maybe a timer button, then a full-blown stopwatch widget... whenever you want. This is the best way to learn, because it puts these programming language tools into a real context. You’ll begin to understand how they work, why you might want to use them, and how to implement them in all kinds of strange combinations. That’s where it starts to click.
One could make the case for prioritizing performance in order to save battery life of the device, and to preserve resources for other applications the user might be running. That said, most of the time the performance profile of your program is probably much more dependent on the time-complexity of the algorithms you’re using, and that’s often the best place to start when thinking about performance. And you certainly don’t want to give up logical coherence of the code to save a few milliseconds at runtime.
Yes, which will cease to matter when hardware outpaces program complexity. Anyhow, I'm willing to bet that a lot of industries using C++ are just relying on inertia of built libraries and developer experience rather than actual performance.
Thank you for the hint, dude!
Thank you too for the hint, dude!
Thanks for reporting this issue, already fixed. :)
Hope it wont' be too hard to migrate, we redesign the API to make it more flexible. Feel free to let me know if you encounter any issues.
That seems very likely. A lot of the new business and projects that I’m seeing my area are writing Java and JavaScript because the talent pool is larger in those languages. I don’t think I’ve ever talked to anyone who has chosen a language primarily for performance reasons.
I actually ended up doing something way hackier, so I'll be going at it fresh with tesseract! Thank you for your hard work.
Let's say you have some code: ``` let a = "My name is Art"; let b = getMyName(); // &lt;-- some function that takes a while console.log(a); // Art console.log(b); // undefined ``` Break it up into functions: ``` let a = "My name is Art"; getMyName(myCallback); // &lt;-- some function that takes a while function myCallback(name) { let b = name; } console.log(a); // Art console.log(b); // undefined ``` Closer, but `b` is still undefined...the `getMyName` function gets called but it takes a while to return a value and we've already logged out the names before `b` gets assigned. ``` let a = "My name is Art"; getMyName(myCallback); // &lt;-- some function that takes a while function myCallback(name) { let b = name; // you can log out the values here! console.log(a); // Art console.log(b); // Bart } ``` Now, the program continues in the callback. The callback gets called after `b` gets his name so everyone is cool. This is what @BehindTheMath meant when s/he said "Whatever you need to do must be done inside the callback." Or, if you use the new features of JavaScript you can use async/await: ``` async function doTheThings() { let a = "My name is Art"; let b = await getMyName(); // &lt;-- some promise that takes a while console.log(a); // Art console.log(b); // Bart } doTheThings(); ``` Hope this helps.
Elon Musk claimed that Tesla's self-driving codebase is in C++ for performance reasons, and all major game development studios basically without exception code in C++ for the same claimed reason.
You misunderstood me. I meant instead of tweaking your editor to get close to an IDE, why not use an IDE in the first place?
https://www.udemy.com/advanced-javascript-concepts
I’ve never taken any online courses, but I’d recommend reading [JavaScript Allongé](https://leanpub.com/javascriptallongesix/) if you’re interested in a more advanced book on JavaScript as a language. The author recently made it free, but it’s worth paying for.
The TOC of my book may help: http://exploringjs.com/impatient-js/toc.html
Took his beginner js course earlier this year. He taught js fundamentals well but for react he kind of just made a project and told you to code along but didn’t really teach much.
That makes sense. Most of the use cases in my area are for banking/healthcare/science. Most of their applications focus on data management or interfacing with the web. Not a significant need for performance. I guess my point was that most use cases do not require performance to the degree that it would dramatically affect their language choices. Most of the time, if they hit a performance bottleneck that really matters to them, it is confined to a particular algorithm that can be improved or perhaps distributed to other machines.
Awesome work!
Or use a promise.
I remember there’s a site that let you compare timing of various mathematical functions between vanilla JS and web assembly (which is C code wrapped with js). It was totally a mixed bag in terms of what was faster. I think addition was faster in webASM but other things were significantly slower. You can probably find with a google about “which faster JS or webASM.
I'd suggest looking for kyle simpson's work. Also as a once off you could watch the following on floating point math, which isn't just applicable to javascript but many languages. https://www.youtube.com/watch?v=MqHDDtVYJRI
Add `-march=native` to gcc's command line, otherwise you are comparing apples to oranges. It's likely that the JavaScript engines are using AVX instructions, but gcc won't use them unless you allow it to.
wow, thanks to you too, dude!
Very cool. Thanks for sharing
I run a web app that uses Google Cloud Vision OCR on video stills, to generate table of contents for video. I send up to 50k images a month. In my initial testing phase I tried out Tesseract 4, and it failed on anything that wasn't black text on a white background. So you have to do your own pre-processing. This is OK if you're doing 50k pages of the same thing. But if you're looking for general purpose, it just won't cut it. Google Cloud Vision is simply amazing. No pre-processing required. Even doing a keynote video - with text that's partially obscured and on an angle in the background, it grabs the text near perfectly.
[removed]
Awesome! I'll have to try this out. We've been using a .NET port of Tesseract to deal with scanned PDF files, but the v4 port is still lagging. I wonder if this would perform well using .NET Core's JavaScriptServices middleware?
Out of the box the older version doesn't perform so well. I had to increase the image DPI and then the results were much better.
This is a great library and v1 was already good though it struggled with lower quality images and distorted text. I use this on a document management app where the user sometimes need to key in data from a document. They now have a tool which allows them to draw a small OCR area/rectangle on the document which reads and assigns the value automatically. It works great when used with other libraries to make sense of the recognised value, such as [https://github.com/wanasit/chrono](https://github.com/wanasit/chrono)
[removed]
I just opened the link, and i liked it, so interesting. But I can't understand, is it normal to give me 95% discount?!
Yes they do sales everyday like that
it's for indexing so people searching might find solutions without having to make a post
https://tylermcginnis.com/courses/advanced-javascript/
You are obviously doing something wrong on the C part. I have written a program in C# to compute the first 1.000.000 primes that runs in less than 7s. And I would not claim C# to be faster than C in most cases.
Take “Deep Fundamentals v3” on frontend masters. It is probably the best way to understand the ugliest and most nit picky parts of the language. Kyle Simpson is a god. An opinionated god.
They do that so you feel like you’re getting an awesome deal. I’m like just take your 12 bucks and go no need for the song and dance.
I hate this kind of marketing))
He’s a cynical asshole, but damn he knows JS
Frontendmasters.com, check all JS videos. Kyle Simpson books and another book from Stefanov Stoyan: JavaScript Patterns.
Kyle Simpson's "You Don't Know JS" book series https://github.com/getify/You-Dont-Know-JS Also there are courses on Frontend Masters (https://frontendmasters.com/courses/javascript-foundations/)
I mean, when you're a professional dev, "hours" of setup is an afternoon? a day? a weekend? maybe even a week. So forty hours. And I guess to some people, that seems like a lot. But I've been using vim every work day for five years. that's 10,000 hours. most devs moved from atom to sublime to vscode over that same amount of time; I simply add a few lines or remove a few lines from my vimrc and vundle config.
Kyle Simpsons is the best JS teacher. His courses will truly level your JS.
I doubt it has anything to do with the actual code, just the other is better known. It's been up at least 5 years, and yours it looks like about 1. The other developer is also absurdly popular, with 8.3k followers, tens of thousands of stars on numerous repos, and is a member of lots of organizations. Anything they create will be popular, regardless of the code itself. People won't use something they can't find. Even if they _do_ use it, if they're like me, they'll probably _still_ opt for the more popular solution, even if the API is less desirable, simply because its popularity usually guarantees longer term support and a lower chance of it being abandoned.
[**getify/You-Dont-Know-JS**](https://github.com/getify/You-Dont-Know-JS) repository has been mentioned 9 times over the last 7 days. The last 3 mentions: &gt; https://twitter.com/shortdiv , https://twitter.com/EmmaWedekind , and I had a gab session on BOOKS during the final segment of https://changelog.com/jsparty/73 .The list of recommended reads from that convo was too good to only exist buried in the , so here they are: some must-read books for aspiring [..] ^(Date: 2019-05-09 13:57) ^(Source: [changelog.com/posts/8-great-reads-for-aspiring-javascript-devs](https://changelog.com/posts/8-great-reads-for-aspiring-javascript-devs)) &gt; [..] школу &lt;strong&gt;&lt;a href="https://htmlacademy.ru/" target="_blank" rel="external"&gt;HTML-academy&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;Изучил суперские учебники &lt;strong&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS" target="_blank" rel="external"&gt;YDKJS&lt;/a&gt;&lt;/strong&gt; и &lt;strong&gt;&lt;a href="https://learn.javascript.ru/" target="_blank" rel="external"&gt;learn.javaScript&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;Практиковался на платформе &lt;strong&gt;&lt;a [..] ^(Date: 2019-05-12 17:07) ^(Source: [github.com/tifantian/homepage](https://github.com/tifantian/homepage/issues/6#issuecomment-491612349)) &gt; [..] ( More details https://stackoverflow.com/a/47671709 )Speaking of prototypes, the best and robust explanations on this and other JS related oddities I’ve found in Kyle Simpson’s books, https://github.com/getify/You-Dont-Know-JS series.These have become a place where I go time and time again whenever I feel like I don’t understand a concept very well, which is what I would suggest anybody to do.JSX felt like a lot of work to write at first, and a bit weird to return HTML code from JS, but it [..] ^(Date: 2019-05-08 12:58) ^(Source: [medium.com/@palade_radu/2aa2989316f4](https://medium.com/@palade_radu/2aa2989316f4)) View all [mentions of **getify/You-Dont-Know-JS** repository](https://gitspo.com/mentions/getify/You-Dont-Know-JS). ^(This is an automated message reacting to a mention of a GitHub project. | [Message the bot author](https://np.reddit.com/message/compose/?to=gajus0&amp;subject=GitSpo%20Reddit%20mentions%20bot&amp;message=Hello%20Gajus,))
He’s a fuckin javascript mastermind. Yeah a little overopinionated but he’s awesome. I like his cynicism, it gives me a good outlook on how to program defensively and not use shitty api’s like isNaN
Great band
Why not learn a different language? Maybe build an Android or iOS app? What holes do you see in your knowledge-set with JS?
I know Java as well. And I don’t really see any holes, would just like to make sure I have everything covered, and gain a really deep knowledge of it
In that case, I think you just keep finding interesting projects to work on. If you know modern frameworks, express or koa, sequelize, async/await, Sass or PostCSS, jest or mocha and good testing practices ... that's about it. Maybe pick up Typescript if you haven't already?
Yeah I actually use all of that lol, right now working on a GraphQL project which has been pretty fun. I am pretty familiar with typescript as I use it in Angular7, but I could probably go deeper with it. Thanks for the advice
&gt; any attempt at keeping things private is futile &amp;#x200B; closure work pretty well for me. ```javascript function Class() { const privateVar = 'foo'; return { bar() { console.log(privateVar) } } } ```
Ternary is fine. Single line if is only ok if you have the curly braces still, otherwise, no. Always use curly braces with if. Don't use complex and nested ternary operators unless for some reason operaters are permitted in something you are doing, but a statement is not. Better to write code that is a little longer and more verbose if it makes it dead simple for even bad programmers to understand. Avoid having code with high cyxlomatic complexity and also having slick, abbreviated clever code at the same time. It gets that much harder to work with.
your best bet is closure using factory functions ```javascript const Hero = name =&gt; { // all these are private const level = 1; const power = level * 10; const health = 100; return { name, } } ```
I don’t really know your tool set, but I can tell you that you will likely have issues trying to parse date perfectly every time, unless you apply constraints and inform the user of the desired format. For example, what if the user types `5/8/2019`? Should that be considered `May 8, 2019` or `August 5, 2019`? A lot of cultures around the world say it’s the second of those options. Others will put the year in the first position (I always thought that was more logical...). And you simply cannot depend on your users having the same assumptions about date formatting as you do. So with that in mind, you could do the drop-down selector, as you mentioned, or you could try to enforce a certain set of rules for what the string should look like (e.g. two number characters, a slash, two more numbers, a slash, and then 4 numbers). If you do the second option, you might set the input field’s placeholder text to read `MM/DD/YYYY`, or print it beside the input field.
This is the correct answer. Using something that’s popular guarantees that more people are looking at the code, fixing bugs, patching vulnerabilities, etc.
Hi /u/mrich6347, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
you are most likely right, but often it happens that some open source projects get popular even though the author is not. so how does one get community to trust his project and contribute ?
you are most likely right, but often it happens that some open source projects get popular even though the author is not. so how does one get community to trust his project and contribute ?
often I myself see something that could be improved but I wait a bit hoping that someone else would notice and send a pull request, and only after some time I do it myself.
Yeah, I had thought of informing the user, but that just seemed inelegant, and frankly, I know my users won't pay attention, anyway - at least a significant number of them. I had hoped I could just enforce the drop down, and not allow any user input into the field, but that seems like a headache. Thanks for the input, though. I had also considered the multiple possible dating formats the instant one of my testers broke the field on the first go. I'm still pretty new to this stuff, so it's been tough to wrap my head around or find any good resources.
It’s mostly luck, but people will take notice if you submit a lot of genuinely helpful/useful contributions to community projects. I tend to follow people who are clearly experts or who have a lot of very good contributions, both to the code and the discussions around that code. In short, get involved in the community. Think about how visibility works. You have to go and meet them. They aren’t likely to stumble upon your projects on their own.
Great work, hope you got a lot out of it! What did you do for hosting/deploying the app?
Good point, thanks. Not in the survey, but worth to mention indeed
How do we access the variables of function in which async function was called when we are manipulating in callback?
Thanks for detailed explanation. One thing in third code. How will you access variable 'a' when it is not inside the callback function? Does it has to be a global variable?
Measuring the framerate will for sure affect the framerate. Don't worry too much about it, because the relative change in framerate will roughly remain the same between measuring and not measuring it.
poor code formatting.
Yep!
What a constructive comment!
You can use `requestAnimationFrame` to ensure a frame rate of 60 fps (or whatever is the display refresh rate). Its callback takes a high resolution timestamp which you can use to adjust your animation if necessary and shouldn't cost any extra resources.
As someone not familiar with the Australian train network I think a suggestions box or at least a placeholder with an example value would be a good addition. I had to find the name of a valid search option on Google to test it. You might also want to turn common search options into buttons that sit below the search box. This would be in addition to the favourites feature and handy for tourists or one-off users going to common stops. A few notes on the code: 1) You should try to avoid [index values as keys](https://github.com/gkweb/traintraingo/blob/1398bd9f8c70d5a1abfb9de12e0f35683558b0c8/client/components/disruption.js#L98) in React. You can find out why [here](https://menubar.io/react-keys-index). 2) You should try and add a spacings objects to your theme with keys like xs, sm, md, lg and then use theme in your styled(...) component that same way you are using colour. You can make theme variables out of just about everything: z-indices, fonts, borders, border radii etc and this will be much easier to maintain later on. 3) You should prefer arrow functions over: *this.handleFocus = this.handleFocus.bind(this)* I just reviewed a handful of files in the client package so can't comment on the rest - Good job though!
Hi /u/beats888, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks. got an understanding.
 [https://jsfiddle.net/ey0wx1fz/5/](https://jsfiddle.net/ey0wx1fz/5/) Here. I made a jsfiddle
Great ideas.
My deleted post wasn't related to beginner questions. Also often usual comments is deleted together with post, it's stupid,
yeah Prettier formats the code in such a poor way! /s
The `async` keyword in front of function block allows you to use the `await` keyword in that function block. The `await` keyword lets you use a `Promise` like the data that resides inside of it. ``` const fn = async () =&gt; { const promise = fetch('something') console.log(promise) // Promise console.log(await promise) // Response {} } ```
requestAnimationFrame is the obvious choice for JS animations, but it doesn't ensure 60 fps (or any other framerate).
You should read this thoroughly and make sure you understand it. Then you are good to go. [https://github.com/getify/You-Dont-Know-JS/](https://github.com/getify/You-Dont-Know-JS/)
For performance, you should see if what you're doing can be accomplished with CSS transitions or animations instead of using JavaScript.
How do you mean?
Async/await is a different syntax for using Promises. If you are not familiar with promises I would look up promises and then begin looking into async await. Promises are not synchronous code which means that you can execute code even before the call to the promise is returned. Async is used to declare a function as asynchronous rather synchronous by default. Await means that you’re telling the script to wait for the response to finish, THEN continue executing the code that’s below rather than encapsulating all of the following code inside a .then block.
That's because it improves the algorithm. But that doesn't explain why the same algorithm is faster in JS than in C.
If there's Javascript running when it's time to draw another frame, the browser is going to wait for it to finish before drawing. If you have long-running JS functions, they can keep the browser from painting 60 times a second. https://www.html5rocks.com/en/tutorials/speed/rendering/ https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec
&gt; So, a like-for-like test would be to use a 32 bit datatype for the C code by including stdint.h and changing the long types to int32_t long is usually the same as int or int32_t, so it's 32 bit. "long long" is 64 bit.
Thanks. Is set up to Auto deploy to now when jest tests pass on master. This is done with travisci. Hosting with https://zeit.co/now
Not on modern Linux or macOS. I checked. Also, the compiler literally cannot use IDIVQ with anything other than 64 bit registers and I see that in the emitted assembly.
That's a good clarifying point. Thanks!
These are async functions and methods (also called async/await). They are based on the asynchronous pattern _promise_, which you may want to read up on first. * Documentation in MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function * I have also written about them: http://exploringjs.com/impatient-js/ch_async-js.html#a-roadmap-for-asynchronous-programming-in-javascript
That would be really cool actually. Sadly it is closed source :(
Something like this? [https://jsfiddle.net/ajqenz7g/](https://jsfiddle.net/ajqenz7g/) Don't know which browsers you need to support so I included an promise polypill library. Usually I'm using a bundler with webpack and babel to fix this.
Thank you for your testing!
Oh, do you mean the following? const initialPrices = \[\['keyName', 5\], \['updatingValue', 10\]\]; const updatedPrices = \[\['updatingValue', 20\]\] Object.fromEntries(\[...initialPrices, ...updatedPrices\]) // { keyName: 5, updatingValue: 20 }
Thanks. I am not well versed with promises but I got your code.
A previous [comment](https://www.reddit.com/r/node/comments/av3uu0/how_in_general_does_nodejs_handle_10000/ehdafm6?utm_source=share&amp;utm_medium=web2x) I made on a discussion about async.
Did you not read the whole first part of the comment explaining the implicit conversions that C must perform?
This is good. How did you get the train departure details?
[Extract, Transform, Load.](https://en.wikipedia.org/wiki/Extract,_transform,_load)
This is available as open data. The same will be available in other cities/countries. https://discover.data.vic.gov.au/dataset/ptv-timetable-api
Thank you
thank you..
Inheriting from other classes might be the only case for private members, but I don't see really see cases for writing new code doing inheritance. The chances that I have to both modify and extend an existing object that has functions are very rare already. EcmaScript already grew a class-branch which I lately recognised as syntactic sugar, a wart in the API, that I don't have to deal with if I don't want to. All the private fields and decorators can freely be warts on top of the warts that I won't have to use. If they try to add decorators or private fields to object prototypes, then I raise hell.
Not the other guy, but all I can see in the first post are reasonable speculations with no benchmark to back it up. That's not worth much.
I wanted a simple way to send slack message from the terminal. All I could find was full-featured slack clones, so I've made a minimalist CLI (built with react and ink). &amp;#x200B; Maybe it can be of interest for others! &amp;#x200B; [https://github.com/romainberger/kcals](https://github.com/romainberger/kcals)
I'm afraid not much can be done *here* about general reddit features, such as moving stuff to other subreddits. I mean, that is a global reddit problem and has happened since always. The closest thing I've seen is a “reposter” bot, but the majority of people just fail to notice their post has been reposted elsewhere. On the other hand, I've mostly given up on this subreddit at all. And I'm sad about it, but that's how it is. People will always post help requests here and peopke will always answer them. Maybe there's just no way of avoiding it. Perhaps it could, instead, be channelled in some specific way so that, at least, content can be more easily identified. Maybe mandatory tagging, maybe being more strict with people who submit links as text post, maybe having some weekly help thread or things like that. But to try to _avoid_ it seems like a lost cause. The only thing I'm not so sure is that a lot of *good content* disappears. Most of it is junk.
Project Page (?): https://github.com/utkuufuk/2019 *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
the fact that you gave peter griffin and quagmire a business card on your slider
Interesting to see the comparison! I have no experience with SSR yet, so I'm curious how this would be with heavier SPA's.
Haha yeah 😅
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
You have bluebird for browser compatibility. But, your code will run in modern browsers even without bluebird. Am i right??
[removed]
He says he's not using a black box approach, still uses React and Redux. Hmm...
Well, in terms of popularity, I can say that simple-peer came up in searches when I was researching peer to peer connections and I do not recall seeing your project come up. In terms of usage, I think many peer to peer projects fall short because of a signalling peer requirement. True peer to peer connectivity is peer to peer, not peer to signaling server to other peer. In your documentation I don't read very far into it before I run into this: " For this, we use a signaling server: a server that can pass messages between *WebRTC* clients (peers). " I think if you can reword that to explain how the two origination peers can simultaneously be the servers and the peer connections can host their own servers to grow the network I think it would be more attractive to me as a user when I was doing these searches. What I ended up using in my own implementations was dat protocol, which packaged the signaling server requirement in something I did not have to put much thought into and it does not seem like a server to me until I look at the defaults and see it is using servers already out there to host a channel for discovery. However, by that time the ease of use had my peer network running reliably and quickly so it took the burden of a signaling server out of the equation at least in terms of how I saw it as a software developer. [https://github.com/datproject/dat-swarm-defaults](https://github.com/datproject/dat-swarm-defaults) and [https://github.com/karissa/hyperdiscovery](https://github.com/karissa/hyperdiscovery) are good places to start. &amp;#x200B; Just some feedback from someone who would have been searching for a product/solution such as yours and what I was looking for specifically.
Like PhysicalRedHead said, this is what the timestamp is there for: requestAnimationFrame(t =&gt; ...). You can use this to adjust your animation without any expense.
Good answer. Imo the aync/await is the work around to the self created problem of having the luxury of promises which finish their execution some time in the future and your logic does not care to wait. However, when it does need to wait because the next step is literally dependent upon the return of that data you use async await for force the logic to stop until you get that data back. I use both concepts, but wonder sometimes if it would have been better design to force the non synchronous logic (promises without async await) to be the special case and the async await approach to be the default that does not require a special implementation method to work. This is why I say self created problem, because the out of order return is forced upon us as the default option in many cases, and someone trying to do sequential logic is baffled the first time they encounter it. Even though its really cool once the concept is grasped and used.
Here is [the javascript implementation](https://gitlab.com/snippets/1856378). Performance-wise it's about on par with the Python one, **but** when the Python is enhanced with numba.jit. Plain Python is *a lot* slower.
That’s why I asked about compatibility for older browsers. You don’t need it in modern browsers
Yes, it does. Check this one [https://youtu.be/xDXqmdFxofM](https://youtu.be/xDXqmdFxofM)
If you had you write it for only a modern browser, what changes would have done in existing code? Remove bluebird and keep the rest as same?
Wow
You should not measure it per frame. The internal clock is not that accurate. You should use the clock to measure the rate of N frames.
``` var colors = ['Pink', 'Red', 'Orange', 'Blue']; var colorIdx = 0; var getButton = document.getElementById('button'); getButton.addEventListener('click', () =&gt; { changeBackgroundColor(colorIdx); colorIdx++; if (colorIdx &gt;= colors.length) colorIdx = 0; }); function changeBackgroundColor (colorIdx) { getButton.style.backgroundColor = colors[colorIdx]; } ```
This sounds like a job for onclick="doThing(1); this.setAttribute('onclick','doThing(2);')" But to layer it with multiple steps, perhaps have an array (ThingsToDo) of functions and then use a counter variable to walk it through options (with a modulus to fully cycle around).
You need to introduce a variable to store the clicks count: https://jsfiddle.net/9n7utjpk/
If the colors don't repeat within a single cycle, the simple solution might just be to have onClick execute a function that conditionally changes the background color depending on what the current background color is.
How ?
That's super unnecessary. Just have it call a function that keeps a count of how many times the button has been clicked, like in the above answer (although I'd recommend a closure for best practices)
Hi /u/iwiik, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
That would work, but it's a badly-architected solution because it doesn't scale well, and hides the state of the system instead of making it explicit in the code. Better to declare a variable that holds the current iteration (in a higher scope than the event-handler, or if appropriate even as a custom data-attribute on the element itself), and have the event-handler refer to it and update it.
This is undeniably cool; however: * This has been around for quite a while * Despite what the project one-line description says, it's not virtualization - it's emulation. If you read further down, it gives a list of emulated hardware, including the emulated CPU. For example, it mentions that the instruction set is around that of a Pentium 1 - impressive, but missing a lot of the instructions modern CPUs have. This does, however, mean that it can run on Arm processors.
For some reason as I read the OP, I got the impression that JS skills were not nearly as strong as HTML and CSS. So I tailored the answer to that. Sometimes I push for better practices on the route to best practices when I detect that somebody needs to walk the longer route there.
And here is a [Julia version](https://gitlab.com/snippets/1856424). Julia happens to have a `Primes` library, which includes an optimized `isprime()` function. To keep the comparison fair, I wrote a brute-force version, equivalent to those in the other examples. Somewhat surprisingly, in such a comparison and at N = 1_000_000 the winner is still Python + numba — although unsurprisingly, Julia comes out ahead if the implementation from `Primes` is used instead of the naive one.
This seems a little oddly done. I would do it more like this: var colors = ['Pink', 'Red', 'Orange', 'Blue']; var colorIdx = 0; var getButton = document.getElementById('button'); getButton.addEventListener('click', changeBackgroundColor); function changeBackgroundColor () { colorIdx = ++colorIdx &gt;= colors.length ? 0 : ++colorIdx; getButton.style.backgroundColor = colors[colorIdx]; }
Here's a different way of handling the changeBackgroundColor function... [https://jsfiddle.net/1mfy3jvn/](https://jsfiddle.net/1mfy3jvn/) function changeBackgroundColor () { getButton.style.backgroundColor = colors[clicks++ % colors.length]; console.log(clicks); }
Here here for transit-based side projects! For years, I've been maintaining a simple react UI (+ tiny backend) that can be looked at instead of our rain station signs: https://marta.io
Not very readable though...
Feross is a popular developer, and also he's quite good at promoting hes work :D
Some guys just post it endlessly here on reddit hoping to score big on github stars (y) :D
That's really cool! Nice work
learn English, that speech was clear as day.
...guess it depends how well you can read JS.
In my opinion, this is a perfect opportunity to utilize closures. const colorClosure = () =&gt; { const colors = ['pink', 'red', 'orange', 'blue'] let count; return () =&gt; { if (count === undefined) { count = 0; } else if (count === 3) { count = 0; } else count++ document.body.style.background = colors[count]; } } const button = document.getElementById('toggler'); const innerColorClosure = colorClosure(); button.addEventListener('click', innerColorClosure) https://jsfiddle.net/2r8sgout/
But.. this is old news?
I will do something like this: [https://jsfiddle.net/1zveac6p/](https://jsfiddle.net/1zveac6p/)
I am sure I have seen an implementation of this earlier on copy.sh 😂
I made a ready to use signalling server as well although it is not build in in my peer-data library itself. Therefore you as a developer have a greater control over what is happening there, freedom of altering/customising the logic. For example on of my other projects which is **in development** alters that logic to add some custom events. https://github.com/vardius/peer-data/wiki/Signaling
Can it run doom, castle wolfenstein, and my personal favourite xcom?
Someone probably did some programming.
As /u/PhysicalRedHead already answered, you can use `requestAnimationFrame` to solve your problem, but since the question was about the performance of `new Date()`, I'll be answering that. The following analysis was made based on my machine. Many things could influence the results, such as the Operating system, which browser im using, the inacuracy of Date.now and etc. This is nothing official nor precise, it's just a simple benchmark to give you some overview on the performance of Date. ``` let start = Date.now(); for(let aux = 0; aux &lt; 100000000; aux ++); console.log(Date.now() - start); ``` The previous code prints a number around 80, which is the time in milliseconds it took to run the variable comparisons and additions. ``` let start = Date.now(); for(let aux = 0; aux &lt; 100000000; aux ++) new Date(); console.log(Date.now() - start); ``` Now this code takes about 28000 milliseconds in total. When subtracting the time it took to manipulate aux, which is about 80 milliseconds, and dividing by 100 000 000, we get (28000 - 80) / 100000000 = 0.0002792 milliseconds. Considering a frame is about 17 milliseconds (for 60fps), you could create a new date object about 60000 times without framerate drop, so don't worry about it
Awesome I was just messing around with npm \`receipt-scanner\` last Friday! It had tesseract as a dependancy... The other sub-depencancies were also broken due to the OpenCV Update (and \`brew\` changing how it gets installed). &amp;#x200B; I certainly wanted to use the newest version. Super excited for it to hit a stable release!
very nice, thank you!
I didn't really consider this possibility, but now that you say it, it makes a lot of sense.
I actually read in another thread that it does run doom
Being a pentium, it should
Any variables that are in an outside scope are still accessible. const a = 1; function b() { console.log(a); // will log 1 } b();
Sure. And you know what: if you are happy with how you are developing, I guess that's fine and justified. I was "forced" to switch to JetBrain's PHPStorm (yes, also for JS) about 5-6 years ago and remember feeling some resistance back then. Feeling comfortable with the tools you have been working with tends to make us biased towards new/other tooling. Meanwhile, I'd never go for anything less capable anymore. I save at least an hour every single day due to the automation of processes, live templates, auto-suggestion capabilities, auto-generation of certain patterns (tests etc.), integrations (version-control, package management, terminal/batch/ssh-scripts etc), deployment-rules, integrated web-servers with live-editing, configurable keymaps/hotkeys and much more. Do you **need** those things? No. But whenever I have to work with a more basic setup and run certain operations manually, it feels like half the day are terminal commands and redundant typing. &amp;#x200B; So what's my point? If you are a linux geek and want to power up your vim, or if you want to prove that all you need to develop efficiently is a 30$ raspberry PI, you have my blessing. But if you watched too many hacker movies and now think vim is something to use on mac or win, then I simply doubt the fact that you will come even close to the development speed of a suitable IDE.
Hi /u/Imightberobot, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/eguneys, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Lastly, instead of all the above, if you just want to showoff your project, feel free to post it to our weekly _"Showoff Saturday"_ post. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/brainhack3r, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/un_H_nu, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Boerewors1, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/lord-bazooka, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/_vardius, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Jtthebrick71, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/gauravk18, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MoraesDiguinho, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RazielKOH, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sma92878, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ovpv, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Do you need to create infinite subscription loop or just one subscription, which will getDate in every x seconds?
Thanks!
That should do the trick too. &amp;#x200B; I cannot use the .repeat() method. I have tried defining a Subject called destroy$ that updates to true when the component is destroyed. Then, I have tried this: &amp;#x200B; this.subscription = this.getDataService().pipe( takeUntil(this.destroy$) ).subscribe(...) but it doesn't work. &amp;#x200B; Neither does defining a variable called serviceEnded which turns itself to true when the component is destroyed and using &amp;#x200B; this.getDataService().pipe( repeatWhen( !serviceEnded ) ).subscribe(...)
Thanks. I got a great understanding from your code. I have tried implementing promise in same code and the resolve sends [ object object]. Can you have a look? https://jsfiddle.net/rgqszu7t/5/
Any inspiration from serial?
You should create your own observer on ngOnInit Follow the 2nd example on this page: [https://www.learnrxjs.io/operators/creation/create.html](https://www.learnrxjs.io/operators/creation/create.html) Just after creating your observer, you can subscribe to it and execute your logic. From observer, you can call getData in an interval and call [observer.next](https://observer.next)(data) each time
I have _no idea_ what that is. I Googled / NPM searched and found [serial](https://www.npmjs.com/package/serial). This looks pretty neat! I wasn't inspired by it (yet), but I may be soon. I'll check it out and look through the docs. Thanks! Looking, the `runner.add` method seems like it's _basically_ a promise chain. What is the benefit, here?
&gt;n of javascript ne hi, sorry for the wrong posting
Hi, I add a FAQ session for questions. Please check here: [https://github.com/naptha/tesseract.js/blob/master/docs/faq.md#how-does-tesseractjs-download-and-keep-traineddata](https://github.com/naptha/tesseract.js/blob/master/docs/faq.md#how-does-tesseractjs-download-and-keep-traineddata)
Thanks! I will try (=
Oops, serial is a podcast, but I was actually thinking of an episode of the planet money podcast. They cover an industry built around SEO and mugshots.com
OOH!!! Okay!! Lool. Excellent, then. Even better. I was a bit confused about the purpose of that library. I _will definitely_ check that podcast out. EDIT: By same team as This American Life... looks promising.
Also, re: mugshots.com &amp; my personal motivation for `mugshots-client`... Another goal was to subvert mugshots.com, because the idea of taking public arrest records and farming them for money is messed up. These people haven't even been convicted, yet their public information is being sold. Moreover, www.mugshots.com watermarks everything, and a crawler is against their TOS. I wanted to make a tool for stealing from them, because I think their business is kind of immoral. I don't believe the records are really theirs and I don't think they should be making money from them.
Actually I think .NET port Tesseract vs .NET Core's JavaScriptServices + Tesseract.js, my intuition tells me .NET port should out perform as it should be more native for .NET.
That’s basically the message of the podcast I was talking about 😉
From accuracy perspective, I think most of the commercial available cloud-based solution should out perform Tesseract.js as there are much more space for them to do tuning. But if the performance you mentioned is about the latency, I think there are chances that Tesseract.js might win as it saves time to upload image to remote server, and also it distributes the computation to client browser instead of central server, I think there are certain scenarios you will find it more useful. :)
First, /u/rauschma, thank you for making this post. We've talked about these things several times in the past, and I greatly respect your opinion. You do a lot of good for this community (and JS in general) and I want to fix this too. It's just hard given the tools that we have. ---- &gt; Solution: A bot that warns about “unquoted” code and mentions backticks and 4-space indentation. A majority of these fall into the confines of the 2nd problem, i.e. those that don't know how to format code are also the ones asking noobie questions. I'd love to implement a suggestion bot, but that'd require outside services; I don't think it'd be particularly hard, but it would require: * personal development time with new API's, etc. * securing some sort of host to run the bot * more personal development time for maintenance/troubleshooting the bot Again, not insurmountable, but too much for me to take on currently. The good news is that anyone can do this work -- and if anyone reading this would like to create such a bot, it'd be welcomed with open arms. &gt; Another solution: Warn during editing, e.g. before saving. Impossible with current API, unless you mean a blanket statement, which we could look into. &gt; Solution: Automatically move those posts to /r/learnjavascript. As others have pointed out, this is not really possible. Well, one _could_ create another custom bot for this, but the above caveats re: creating a bot apply here as well. Additionally, doing this would normalize the behavior so that the user feels no recourse, and would thus have no impetus to change that behavior, and I'm not keen on reinforcing bad behavior even if it's silently handled. ---- With that said, I've been mulling some ideas, both privately and sometimes with other users, like /u/gntsketches. I'm going to lay out my current plan and rationale, and would love some feedback before implementing it. # Premise: Reddit as a platform is not a Q&amp;A platform, and so is ill-suited for that format, especially for technical questions. * Automatic archival of posts after a certain age means that there is no way to improve upon answers as new information, API's, techniques, libraries, etc. become available. This to me is the main dealbreaker, since there are very, very few questions that are true now and will remain that way forever. * The taxonomy system is extremely primitive and wholly inadequate for trying to offer features like tagging such as StackOverflow uses. * Search sucks. Always has, maybe always will. Compounding the problem is that the users who would benefit most from search, by &amp; large, don't use it. Just look at the quality of most questions: they could've been answered by 5 mins on Google. We would need some intelligent recommendation engine, where it'd match keywords and context to find similar posts and surface those to the user at the time of submission, like many help sites use these days (again, StackOverflow). Reddit doesn't support this, likely never will, and this can't be supplanted with a custom bot since the reddit posting workflow isn't an API surface. StackOverflow, for all its flaws, is orders of magnitude better for the task of help questions as it solves all of these problems. # Proposal * new `AskJS` tag for self-posts * requires user to prefix post with something like `[AskJS]`, which will automatically flair the post * disallow general self-posts # Rationale Self-posts generally fall into 1 of 3 buckets: 1. Sharing a project or article * in this case, they simply need to "Submit a new link"; we already enforce this on everything but github links (maybe we keep this, I don't know) 2. A help request * already disallowed, but it keeps happening (to the tune of 10-20+/day) 3. "Polling the audience" questions aka. _AskReddit_-style questions "AskReddit" style questions [can sometimes be popular](https://www.reddit.com/r/javascript/comments/bld5ma/anyone_else_frustrated/), and informally, most questions that are a good fit for SO, are not a good fit here, and vice-versa. Questions that can be concretely answered with code belong on Q&amp;A, not here. Where SO doesn't want subjective questions, or nuanced questions which require nuanced answers, those are some of the best threads we get. By disallowing most (if not all) self-posts, help posts will have no logical place here. I'm not sure how I want to handle the removals, because if we simply state "all self posts must use the `AskJS` tag" then the questions will just get reposted with `AskJS`, which is not the intention. Maybe we don't mention it at all, it's just something you learn by observing the community for awhile? I don't necessarily like operating like that, but I also don't like manually removing 10-20+ questions/day. There will still be low-quality `AskJS` posts, so I'm not sure how to handle those. I'm thinking that initially, we could try and let the reddit voting mechanism let the problem sort itself out. Less moderation work, more feedback from the community about what they want to see, that sort of thing. Thoughts? /u/deadc0der, others?
I wonder if the question mark is what got it deleted.
Hi /u/AstroHoppers, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mehulmpt, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
These solutions are certainly not equivalent in terms of implementation, however I don't fully understand: &gt;In the jQuery style you'd have to import the whole object with all the methods, including the ones you'll never use. The other one allows you to pipe any function you see fit, that includes both user defined as well as library exposed ones. In the jQuery style, additional "pipes" can be added by extending the `$` prototype. These functions can also be implemented as standalone, pure functions that can be imported independently. While the pattern is to aggregate utility functions under one accessor, nothing prevents them from being broken out. In the pseudo-operator-overload, the "allows you to pipe any function you see fit" isn't entirely true. In fact, just like jQuery we need to wrap every lambda to ensure it returns `this`. That's exactly what's happening in the Vector examples provided. &gt;Just to clarify: jQuery style is OOP which results in banana gorilla problem and makes dynamic composition difficult, while the piping version is FP, which is just beautiful except we don't yet have the proper syntax to make it look pretty. This is largely a praise of functional paradigms and "pipe-ing" (or method chaining in JS). Pure functions and OOP are not diametrically opposed. A high-level goal for me is readability, and this pseudo-operator-overload overwriting object setters/ accessors for symbolically-named function access is opaque and difficult to read. The [pipe operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Pipeline_operator) is less of a kludge and certainly more readable.
Thanks!
Emulating an instruction set is quite simple. You take the manual for the cpu, and create a function for each instruction available. You make sure the each instruction affects the flags correctly (unit testing helps here), and emulate some other features like clock speed.
I'm exactly the same as you. All else being the same I'd make a choice based on the industry, but it's my day-to-day life that I care about the most, which means the team, the stack, and the pay.
This is specifically the podcast episode I was talking about. https://www.npr.org/sections/money/2018/11/23/670149449/episode-878-mugshots-for-sale But yeah serial season one was phenomenal as well, one of the best pieces of media I've ever consumed for sure.
Personally, I prefer to avoid medical and finance because I don't want to be responsible for anyone's health or wealth (also the regulations and red tape involved are frustrating). But other than that, I don't care much. In fact, I prefer to move around in different industries - learning the business is half the fun. Not a lot of careers really allow you to change industries and really dive into the business the way ours does, take advantage of the opportunity.
There definitely is a lot more pressure working in fintech, but I appreciate the added code stability and QA processes involved
Yes, they are vastly used in my production code just to suppress errors or to add some logging that doesn't break code flow.
But does it Djent?
We went through a similar situation in my company. I use webstorm, and many of my colleagues too, but some also prefer vscode. So there were always code style issues even after standardized style guidelines. Some people just prefer the code in a certain way, that makes them code better. Even with same IDEs the problem persists. What we found to be a good solution was to automatically reformat the code before it was committed to git. We used a combination of ESlint + prettier rules for this and created a precommit hook in package.json using husky. And used lint-staged to reformat the code in precommit hook. It was really simple and efficient. If someone prefers a different code style, they just reformat the file when they open it, and later it is reformatted to company guidelines before th3y commit it. But moat of the times they just get used to it after a few weeks.
Very cool! How to add new pedals? (esp for people not JS savvy) Amp/cab simulation?
That shouldn't happen. Do you have any duplication in your chunks? For example, if you build your app and then search for the websocket initialization code, does it appear in more than one chunk file?
Yeah I was more referring to the endless debate and changes to requirements rather than code quality concerns.
I am a big fan of the entire JetBrains suite but to be honest, I found the inspections and code style to be quite bad. I prefer properly-configured linters (TSLint/ESLint + StyleLint) combined with Prettier. Please note that, by properly-configured linters, I refer to manually-configured linters. No extends, no nothing. # JetBrains Inspections + Code Style **The bad parts** \- The "live editor" is not working correctly and it's ignoring some rules. This will cause some time to adjust the rules for your needs. \- The copy-feature is also buggy. Sometimes the profiles are not duplicated correctly and updating a copy may cause the corruption of other profiles. \- Hard to maintain. You will need to follow each update of the platform + the additional plugins. Some plugins don't even have a changelog. \- The coding styles rules can overlap sometimes and lead to inconsistent results (you can hit reformat multiple times in a row and have different results). \- I found the coding styles rules a little bit loose. \- The inspections have more false-positives results compared to the other stack. \- The suppress statements are uglier compared to the other stack suppression. \- You are tied to the JetBrains ecosystem (IDE + Git client). &amp;#x200B; **The good parts** \- They are integrated directly into the IDE. No need for additional setups. \- Faster than the other stack. # Linters + Prettier **The bad parts** \- You need additional tools in order to run them. \- The TSLint integration with JetBrains product is not the nicest experience. \- The suppression comments are different depending on the linter. You can solve it by using code snippets. \- The documentation is sometimes misleading and incomplete (especially for linters plugins like Codelyzer). I sometimes have to look over a rule's tests in order to understand the output because of this. \- The configurations take a lot of time to be tweaked. \- The styling part offered by linters is simply... bad. &amp;#x200B; **The good parts** \- You can enforce code styling and linting during commits, pushes etc. via Husky. This is not only IDE-agnostic but also Git-client agnostic (some may use the terminal, others may use a tool like SourceTree). \- You can have multiple configurations depending on the folder structure (and not only). \- You have more granularity in terms of configuration from linters and additional plugins. \- ESLint will take TSLint's place in the TypeScript community with proper support from Microsoft. This will unify the configurations and will offer a nicer experience overall. \- You can run the linters in CI also.
I wish more of these functions are added to the language spec.
I can’t really look right now cuz I’m on my phone. I see your are printing an object inside a string. That doesn’t work. Use ‘object.stringify(bar)’ or only print the object without the string before it.
I want to see a tutorial on this. You make it sound quite trivial
It can get dirty in the details of the machine itself. Unfortunately I dont know any good tutorials. All emulation I've done I've sort of just figured out myself by reading documentation on how the machine I'm trying to emulate works, and I've only ever done less advanced processors like the 8080
Hi /u/Slackluster, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Live Demo: https://www.dwitter.net/d/13794 Z=2e3;for(i=0;i&lt;Z;x.fillRect((S(i)*1e9)%Z,i,j=i++?i%7:Z,j))x.fillStyle=R(G=i*255,G,G);x.font=4+"em'";x.textAlign='center';code.split(Q='\x3B').forEach((s,i)=&gt;x.fillText(s+Q,960,1140+89*(i-t)))
I'll have a dig around. I think it could be a fun project.
[Epic gif that automoderator wouldn't let me post](https://imgur.com/HnDJRsi) [LIVE DEMO!](https://www.dwitter.net/d/13794) Z=2e3;for(i=0;i&lt;Z;x.fillRect((S(i)*1e9)%Z,i,j=i++?i%7:Z,j))x.fillStyle=R(G=i*255,G,G);x.font=4+"em'";x.textAlign='center';code.split(Q='\x3B').forEach((s,i)=&gt;x.fillText(s+Q,960,1140+89*(i-t)))
Hi /u/tj-johnson, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I've worked for a few fintech companies and don't really notice this as a pattern. I've seen the same issues in non-fin companies before
I started working around 1999 and have had jobs in these fields in no particular order (probably more): * Mapping/GIS * Publishing * Government Contracting * Investing * Cable TV/Internet/Phone * Advertising * Search Engines (not google) * Telecom * Investigative * Housing * Music Probably the most frequent of all was Telecom, I'm more of a quality of work person than a field focused one. I know I would have been bored sticking in the first industry I got my first contract job at which was for a large government contractor. I remember my first day, the boss showed me to my desk with my new PC and I thought they were joking as 23-year-old me had a better PC at home even though my previous job was at $8.50/hour. At home I had a nice monitor which would do 1024 × 768 at 32-bit color, the one they gave me did 1024 × 768 at 16-bit or a whopping 800 × 600 at 32-bit. If you're not that familiar with 16- vs 32-bit color it is 65,536 colors vs 16,777,215 colors plus an alpha channel. The first computer my family purchased was 640 × 200 at 4-bit (16 colors).
Thanks a lot! It was the error that you pointed out.
Have you considered Next? It handles a lot of this stuff for you.
In a perfect world it's a non-issue. Sometimes you have to maintain or rewrite some giant legacy monster code. Real-world example, I had multiple uber sql migration files to fix. The original author of those migrations didn't really understand how migrations worked, so every migration started by dropping everything and then copy+pasting the previous migration in with changes and whatever new stuff. We were tracking certain changes between files, so i had multiple 5+ mb files open at once. Intellij and Vscode both chug significantly working with files that large, let alone multiple files that size, even with syntax highlighting off. Sublime is pretty good at it, but vim is just better at it.
Thanks for the reply! &amp;#x200B; I'm not seeing the bit of code that initializes the connection duplicated in any of the chunks (looked by both searching and user the bundle analyzer). I do notice in the chrome inspector that there \*seems\* to be 2 instances running when I log some data the the console from one of the imports... If I import \`test.js\` and log something to the console from it, the origin of that log call is noted to the right in the console. After a second import, the first version gets the name changed to \`VM123456 test.js\` and the second import takes on the \`test.js\`. Maybe that could just be from the way webpack maps files for debugging, but it does seem strange to me. &amp;#x200B; Maybe something funky in my webpack config?
I was looking into doing this, looking forward to the source.
Oh, well maybe you're lucky :). I worked for a CU that had serious issues with this, although I imagine the burden is felt more in smaller companies. I felt it a lot more in Healthcare though. HIPAA was poorly understood at the time despite being several years old. It's been a while though, and they may be getting better. Edit: and again this is a much smaller concern than the general stress of being partially responsible for other people's money and health.
I take integrity of the industry over tech any day. Tech changes fast, values tend to hold steady. Yesterday jquery, today redux, tomorrow, ? No government work, no healthcare industry, evil yesterday, evil today, evil tomorrow.
Really? What's it displaying? Thanks
Awesome!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/learnjavascript] [Learn ramda, the interactive way!](https://www.reddit.com/r/learnjavascript/comments/bo7irv/learn_ramda_the_interactive_way/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
https://github.com/jsdoc/jsdoc/blob/master/README.md
I'm not familiar with it, but I may take a look. Thanks for the tip!
That wont work in IE11. You can set up conditional builds that target specific browsers and ship both a 'modern' bundle that supports async/await and a bundle for older browsers that use a polyfill or simple simple xmlhttprequest objects. Personally, for older browsers I would simply have the user incur the performance penalty of loading data (especially if its IE11 :-P ). Take a look at this article &amp;#x200B; [https://www.smashingmagazine.com/2018/10/smart-bundling-legacy-code-browsers/](https://www.smashingmagazine.com/2018/10/smart-bundling-legacy-code-browsers/)
Hey I made one of these too for the MTA in New York City, but more mobile / PWA focused. https://choochoo.app
I understood some of those words.
Hah, in classic form I think I figured out the solution shortly after asking for help. &amp;#x200B; What I think I was doing wrong was allowing webpack to inject its own runtime alongside each of my entry point files. Adding \`runtimeChunk: 'single'\` to the \`optimization\` section of my webpack config (and including the resulting runtime.js with my scripts) seems to have corrected the problem for me. &amp;#x200B; Such a simple solution, I can't believe I had so much trouble figuring it out haha!
Yeah, babel can transpile \`async/await\` such that IE doesn't blow up.
Ahhh yes, the olden days when video cards had to scale back color depth for resolution. I do not miss this.
As I’ve gained experience over time, I’ve come to care less about industry than what the company/engineering culture is like and how I can build a lifestyle around work. I’ve worked at some well-known companies in some “sexy” industries, and while cool at first eventually the day to day of it all just becomes a job. At that point the culture, people, flexibility, and of course compensation start to become top contributors to happiness and well-being.
I like the proposal. In fact, I like it quite a lot. In particular I like that it is a _simple_ rule and that it does not rely on developing bots or reddit features. On the other hand, there's one detail I have some doubts about. I do like it, but I'm not sure about it. It's the fact that it relies on the community's behaviour. As I said, I _like_ that idea and I think it's _fair_ to do it that way. But I can't help but feel that a lot of the let's say "conflictive" submissions come from users that are new to the sub, even to the point of being just passers-by. Will this work for those? That's where I have my doubts, because I don't think those will spend their time getting to "learn by observing"; they just post it and whatever. Maybe `[AskJS]` tagging _plus_ some more open "weekly help thread"? I know I've already mentioned it, but maybe the current Saturday show off and Wednesday wtf could be united -Wednesday WTF rarely get reviews and ends up being a show off many times- to accommodate for this other help thread. Having a specific help thread pinned does have more visibility and _might_ help, I guess. Surely a number of people who post there will be told to try /r/LearnJavascript -and they still may not do so and the problem Rauschma pointed out will still remain- but it may serve as a way to avoid those questions being submitted on their own threads here. I may have to think about it some more, but for now, that's all I have regarding the proposal. But once again, in general I do like it and I think more clearly differentiating the submissions will help. ---- Sorry if I can't add much. I'm probably not one to ask about this stuff. I still keep around, but I rarely participate any more.
It's part of the appeal of our job that we can change sector so easily, and learn along the way. Sometimes all you learn is "avoid this sector like the plague!" (looking at you, automotive and banking), but there are a lot of pleasant surprises as well (my experience in the fashion industry was great, for example)
Pretty neat. JS makes quines pretty easy: ``` (function a() { console.log(`(${a})()`) })() ``` But I dig the idea of outputting to a canvas.
What are the benefits of this over create-react-app?
No, that's great feedback, thank you very much. I'm also hesitant about a weekly help thread, because on average, it'll be 3 days before someone can ask their question on a relevant thread, while most of those seeking help want it immediately -- which is what /r/LearnJavascript can offer. &gt; But I can't help but feel that a lot of the let's say "conflictive" submissions come from users that are new to the sub [...] Will this work for those? The way I see it going down for all self-posts: * AM would first look for `https?://` in the text, and if found, kindly remind them to use "Submit a new link" * If AM doesn't match on that, it would remind (inform) them that code questions should go to r/LearnJavascript. * [part I'm not positive about] In addition to the previous comment, it might mention something to the effect of: "General questions, having nothing to do with code, must be prefixed with `[AskJS]`", and then we could action bad actors afterwards if they still insist on asking specific code questions. This is the clause that perhaps might be better left unsaid (learn by observing), but we can try it the explicit way and then modify it if it becomes a problem. However, I have considered -- and maybe this would be a good compromise -- a "Stupid Question ___day" post, which wouldn't necessarily be for code (though code would be allowed), but would give an outlet for some of these questions.
I won't do gambling apps or loans. Anything that preys on people.
A github repo without code. Seems strange.
Here's a rundown of the results: | runtime/compiler | N = 1e5 | N = 5e5 | N = 1e6 | | ---------------- | ------- | ------- | ------- | | Node.js v10.15.3 | 0.32 s | 2.71 s | 7.63 s | | Python 3.6.7 | 4.76 s | 57.4 s | 2m 47 s | | Python/numba.jit | 0.70 s | 2.80 s | 7.09 s | | Julia 1.1.0 | 0.70 s | 3.58 s | 9.43 s | | Julia/Primes | 1.02 s | 1.86 s | 3.02 s | | Go 1.12.5 | 0.47 s | 5.38 s | 15.45 s | This was on a i7-4712MQ CPU @ 2.30GHz, 8GB of RAM, running Linux 4.15. The "enhanced" Python and Julia are the same versions as above, just employing the numba library (in the case of Python), and the Primes library (Julia). Some observations: - it's amazing how well Node.js performs on this microbenchmark, beating *compiled native code* (Go) every time; - Python/numba.jit is not really behind; I didn't expect it to improve so much on vanilla Python. OTOH the performance of vanilla Python on this sort of code is quite pathethic; - I would have expected better performance from Julia, being a language specially designed for scientific computations; it needs a specialized library to beat Node.js, and is slower than Node at running closely equivalent code. Perhaps it would stack up better on code involving big matrices of floating-point values. - Go's performance here disappoints. But this seems to be precisely the kind of code that benefits the most from JIT compilation, and Go doesn't do that. Disclaimer: this is of course in no way a realistic performance comparison, it's just a silly microbenchmark just for fun. And don't tell me the code can be improved, I know &amp;mdash; the point was to compare running closely equivalent code, not to squeeze out maximum performance out of each runtime.
For freelance work? Never seen anything like that looking for full time devs
There are a few out there for gameboy emulation, but really you can just grab the instruction set and start pounding keys, surprisingly easy, but mildly tedious. This is where I started with my emulator: [http://marc.rawer.de/Gameboy/Docs/GBCPUman.pdf](http://marc.rawer.de/Gameboy/Docs/GBCPUman.pdf)
&gt; (function a() { console.log(`(${a})()`) })() That's a good one, but with this I had to deal with a few tricky problems that smaller quines don't need to worry about. Here's some other people have done on dwitter... https://www.dwitter.net/h/quine
[https://devdocs.io/jsdoc/](https://devdocs.io/jsdoc/) &amp;#x200B; Bonus: documentation tons of popular languages and OS projects, offline.
More and more what I'm realizing is that I wish I could essentially meta-program, just shorthand certain statements and my IDE would "verbosify" the code into its most readable form. There are probably IDEs/plugins for this, but I probably don't care enough to relearn how to type. I'm a bit torn between readability and code golfing. I -like- the idea of the logical operator shortcuts, I use `value = ifItExists || defaultValue` all the time for example, but I also know that newbies aren't going to understand &amp;&amp; statements like that. So lately I've been doing single line if statements more and more. I'm looking forward to a null safe operators to eliminate half of these that are simply safety checks.
Yes, you just need to use the babel polyfill that brings in regenerator runtime I believe
I see... Yes, it may work. I guess my doubts are close to your own. But thinking about it I think: - It sounds good and there doesn't seem to be any harm in trying it. - It may not work, or some parts may not work completely. But it may indeed work out well -or some parts may-. So I guess, yes, it sounds like a good idea. About the weekly help thread, the idea is precisely that those who need immediate help won't use it or it won't work for them (because they should go to LearnJavascript). But then again, it would be some sort of small opening or escape valve for some other questions which may still be technical -not necessarily exactly about code, but maybe- but are advanced for LearnJavascript or are more about general discussion or ideas. I think that is a type of question that risks being lost because at least some are not that good a fit for LearnJavascript. In any case, well, it can be decided separately or later in time.
Depends on your city, doesn't it? I'm in a huge tech hub. We have every possible flavour of tech company here. And some of the earliest possibilities I could have applied for were betting apps, gambling apps, casino apps and apps for finance companies specialising in giving high-interest loans to those who'd been rejected from them before. As my past was in the finance industry, all of these were personal/moral no-goes for me, especially as I know how design and patterns based on addiction triggers are commonplace.
Glad it worked out!
I’m in one of the larger in America: Austin, TX
I just don’t want to deal with banking or anything that takes advantage of people. Currently working for cannabis dispensaries and that’s been a pretty fun niche so far.
still relatively small tbh. top 10 for sure, but the top 3 (think SF) have insane saturation
The concept of Symbols in Javascript is interesting, I don't know any directly-equivalent paradigms in other languages. In some ways, they are more powerful than other metaprogramming approaches in Javascript because they can be used to override native object prototypes (esp. the example of [defining iteration for all objects](https://gist.githubusercontent.com/Tombarr/6a7423586ad9b0b3b0b1239ecf821d39/raw/8ee8b7da11126cb3408a7c4d3d0c46aa10e4d4e8/object_iterator.js)). I'm especially curious what, if any, new Symbols will be considered for future versions of Javascript.
Can’t speak too much from experience because I’m relatively new to the software developer workforce, but I know that anything start-up related, I’m categorically not interested. I’d say that the most important thing for me when looking at industries is the stability of the job - so jobs in insurance, health care - while not sexy, are often the most stable and secure jobs
That's interesting and I guess a right-tool-for-the-job kind of situation, but still very specific and not something you do on a daily basis... probably. Just so we're clear - I'm just questioning this particular argument, not vim in general (because I got very downvoted due to an apparent misunderstanding), but you probably wouldn't drive a truck around the town just because you have to move houses every two years or so. It does not add to your efficiency any more than just renting one for when you actually need it. Same story here, in my opinion.
Yeah I usually tell people to either choose a sexy product, exciting industry, or culture/work-life balance. You can’t get all three (or even really two most of the time)
Loans and insurance are huge in DFW. Underwriting things is a common skill here.
37.5 hour work week, I make a ton of cash relative to other SD positions, and it’s super stable (insurance) :) wouldn’t trade it for anything
It's really great news to get a working gobject-introspection for NodeJS !
They quietly seem to have moved to https://jsdoc.app
He obviously meant no out of the box SSR solution... :roll:
Doesn't having multiple returns kinda defeat the purpose of using fp? I dunno if it actually breaks a specific rule but it definitely feels like a code smell to me. Take the following alternative, for instance: function doSomething(bool) { return bool ? 1 : 0; } Even though both will have the same result, to me this visualizes the concept of a pure function more closely. There is no room to insert side effects or more logic, it is harder to break this function. function doSomething(bool) { if (bool) { doSomethingElse(); return 1; } return 0; } Now we've already made this function impure. I'd rather see the first pattern, with this alternative to keep the functions single responsibility: if (doSomething()) { doSomethingElse(); } I think my concern is not that single-line blocks look weird (never a good reason to not like a pattern imo), it's that it's a loose pattern that does nothing to discourage other bad practices, like functions that do way too many things. Ternaries and short-circuits, on the other hand, limit what can be added later in a way that I think helps to keep our functions simple and pure. I try to make sure that 95% or more of my functions do not call another function. Let all your functions be pure, and then let one function use function composition or something else to tie it all together.
And there's not one company in Austin making casino apps, lootbox games, betting apps? (OK in the US you have more rules on gambling, actually, maybe that's a difference? Like, an app where you can place bets on sports results? That not a thing?)
Not in the US. Gambling is only legal in a few places.
I feel quite the same as you. For me is important the tech stack, the collegues and the opportunity to grow as a developer, but some months ago a gambling company contacted me with a really nice offer and it was quite difficult to say no. Luckily I found a good company with a good "mission", but that was a really hard bullet to avoid
So good. I'm building something similar but for Portland, Oregon!
I've put a PWA on the play store. https://emberclear.io [https://play.google.com/store/apps/details?id=io.emberclear](https://play.google.com/store/apps/details?id=io.emberclear) code: [https://github.com/NullVoxPopuli/emberclear/tree/master/packages/android-wrapper](https://github.com/NullVoxPopuli/emberclear/tree/master/packages/android-wrapper)
Hi, thanks for flagging my attention. I support distinguishing r/javascript from r/learnjavascript. Some comments with regard to the latter: I see your point that Reddit is poorly built from the perspective of a help platform. But just to share my experience: I've actually found the culture here much more generally supportive than on StackOverflow. I had great experiences on SO when I first started coding in 2012; when I started again (after taking a break for a few years), the culture was terrible - more advanced coders on SO seemed to delight in downvoting and generally trashing every noob question, often basing their objections of flimsy/draconian interpretations of SO's rules. It actually seemed like some sort of hazing ritual. SO has more recently introduced a Code of Conduct (https://stackoverflow.com/conduct), so that may be helping somewhat, but frankly I haven't been inclined to go back. By contrast, folks on Reddit's coding forums have been generally super helpful and encouraging. Some questions just get dropped, but at least they are not belittled or nitpicked. From my vantage point as a relatively new dev, it's *super* important to have somewhere to go that you can ask questions. Technology is a vast sea, and ultimately newcomers often must rely on the kindness of strangers to finding the landmarks they need to get oriented. Thanks for considering all this.
This probably makes me seem childish (maybe I am), but dress code is a deal-breaker for me. If I have to wear a tie, I'm not taking the job. I've avoided jobs in financials and agencies for this reason. &amp;#x200B; Tech stack, salary, and stability are my runner ups to comfort.
You and I have different ideas of fun...but that's really cool because without people like you we wouldn't have fun stuff. And without people like me there would be mountains of pies lying around going to waste.
Good work :) I've added link to your project to JavaScript Visual Explanations (it's a list of links I maintain to websites that explain JS concepts visually). [https://github.com/hex13/javascript-visual-explanations](https://github.com/hex13/javascript-visual-explanations) :)
 Inches.js is a simple, lightweight and lightning fast js class that converts chaotic imperial dimension strings into objects that support addition and subtraction and boasts a number of formatting options. Easy to use and accurate. See the parts section of the docs for information about imperial and metric accuracy. Type anything you want into the demo below and try to break it! While using the demo, open your browser console and look for the named timestamps created with the console.time() method for an idea on it's performance.
Hi /u/linb818, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Babel and/or TypeScript.
Babel can transform your async/await code into classic ES5 code (basically a bunch of switch statements). However, the switch statements need a bit of helper code to work correctly. This comes from a package called `regnererator-runtime`, which you would normally add to your project and then pull in using `import "regenerator-runtime/runtime";` in your main entry file. When you say "it still seems not to work", I assume the runtime is where things went wrong. None of Babel's other transforms need the extra step of pulling in a runtime like this, so it's common to have everything working except async/await.
I used to work at a bank, like in the branches as a banker. I kind of miss wearing ties. I worked at a place that would do Fancy Friday’s and people loved it. I’ve carried it over to my current place and it was really well received. We get dressed up, usually ties at a minimum mostly suits and all go out to lunch together somewhere nicer. Usually only once a quarter to keep the costs down.
Use this: document.documentElement.innerHTML='&lt;img src="image.jpg" /&gt;'
How does this work exactly? How do you submit it to the store? Previously I've been able to do this with Cordova which as we all probably know is just a web view wrapper. Not familiar with gradle - is this handling the java compiling to make the apk?
&gt;document.documentElement.innerHTML='&lt;img src="image.jpg" /&gt;' thanks!
Thanks and thanks for adding it there!
I recently released my game's first teaser trailer, but I've been making a game engine/framework in ReactJS (backend is NodeJS with hapi + mongoDB) for a few years. I'm excited to reach this point but also excited to show people with concrete evidence that React/Javascript can do so much more than websites! &amp;#x200B; [https://www.youtube.com/watch?v=7wLuY7UnNwE](https://www.youtube.com/watch?v=7wLuY7UnNwE)
Apologies. Will redirect. Thanks for the pointer!
I was making a point.
A few years back when I was on the job hunt I got an offer from a pretty big company which was really good pay for relatively easy work. The office culture looked soul crushing and the company required everyone to wear suits. I took a different job that paid $10,000 less because I did not want to subject myself to that office culture or have to wear a suit everyday. Good new is I make more now at that company than I was offered for the other company. So everything worked out.
you're welcome :)
How is it poorly formatted? What is your preference?
This is amazing! I'm working on a D&amp;D campaign now, and this will certainly save me a ton of time. Thanks for sharing!
Really cool man, I use Ramda a lot and the function descriptions on the official documentations are a bit abstract. `((a ... -&gt; b) ... -&gt; [a] -&gt; *) -&gt; ((a ..., Int, [a] -&gt; b) ... -&gt; [a] -&gt; *)` I often find myself referring to the Recipe List/Which Function Should I use. Your UI is really clean, great job. One suggestion I have, is that there is a tool called Rambo that I have not seen mentioned many places. It is a basic automatic Ramda solver. [https://github.com/bahmutov/rambo](https://github.com/bahmutov/rambo) [https://github.com/bahmutov/rambo-site](https://github.com/bahmutov/rambo-site) I think it would be really cool if you could integrate this somehow as well, where the user can provide an input and desired output and try for an automatic answer. It does not work for complex/multi-function cases though. &amp;#x200B; Another idea that I personally would get a lot of use out of, is better code examples. Ramda is written by hardcore functional people with an obvious background in Haskell or other languages, and even the example code snippets they provide can be almost as bad as the abstract function description and signature. You could let people submit some real-world example snippets for functions on the site, and add a voting system to the snippets. That way people can provide better implementation examples and the most comprehensible/helpful can be found quickly. &amp;#x200B; Awesome job dude!
ctx.readPixels() is the webgl equivalent.
Glad you love it! You can thank /u/rcgy for this beast of a generator!
Finance is boring as watching flies fuck. I did a gig for City National Bank, jeezus I couldn't wait for that contract to end.
yeah, it's all java tooling, as android is primarily java for native-apps. a Trusted Web App (TWA), is just a way of telling google that your site can be trusted, and then the APK you publish is, indeed, authored by the same person/people that authored the site. All that happens with a TWA is that the URL bar hides, and there might not be a refresh gesture (pull down, like you would in chrome). you submit it to the play store like you would any other app. I had to do lots of reading on how to do that, and how to manage my store/publishing keys. I messed up the first time, and had to take down my app before republishing again under a different name. It's a lengthy process the first time. but if you update via service workers, you never need to update. I have a little update-checker component that checks for an update every minute: [https://github.com/NullVoxPopuli/emberclear/blob/master/packages/frontend/src/ui/routes/application/-components/update-checker/template.hbs#L2](https://github.com/NullVoxPopuli/emberclear/blob/master/packages/frontend/src/ui/routes/application/-components/update-checker/template.hbs#L2)
Haha. In my case the people at the CU were awesome, so that helped. But I think you might be a bit generous with your description of the work.
You can also thank me for the beastly code... In my defence to those that are sharpening the pitchforks, this was my first and only project, entirely self taught. I know better now (kinda)!
I created a simple twa generator [github.com/h43z/twagenerator](https://github.com/h43z/twagenerator) to help with the process pwa -&gt; twa.
I'm avoiding advertisement industry, dating and gambling. I'll not gonna work on anything even tiny bit scammy and generally looking for a meaningful project, which is obviously useful and makes sense, industry us secondary. For example I'm currently working in insuretech startup, helping people save money on insurance. I'd never think I'll have fun working in this field, but I do, it has quite complex domain model which spawns numerous challenging tasks, so it never gets boring.
Hi /u/thegodlynoodle69, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Had to remake the repo, I closed sourced the project because users said 😅
Just linked this to my DM. Will follow this closely!
It uses the project created using create-react-app at the backend itself. It's just that you don't need to run create-react-app script locally on your system.
Glad to hear it! We'd really love to hear your DM's opinions and if they choose to how they use it in their games!
fuck u and that shitty project
This is not possible.
&gt;**The Holy Loincloth** &gt; &gt;The Holy Loincloth is a monks group. It's extremely old, and the huge faction has a excellent reputation, and is motivated by power. They are rumoured to own a powerful artifact. Gotta love randomly generated settings. :-)
How is my post not discussing javascript project ?
Any chance this could be exported as a module on npm?
It is fantastic. One of the better books in my opinion. Follow all the exercises and you will learn a lot.
I like pie too fyi 😏
Good bot!
That plus JavaScript Allonge are excellent and put you on track to master the core language. It's also recently free
If you want to write a library, you can probably combine user's locale (e.g. en-US) with [Unicode locale data](https://unicode.org/reports/tr35/tr35-dates.html#dfst-weekday) which contains the default of this for major locales.
Im not that knowledgeable on this subject, but with what you said do you rekn he could make a function on the context called getImageData and then pass it what it wants? I had a look at copying webgl into an image and came up with this..... [https://jsfiddle.net/shatLgyr/](https://jsfiddle.net/shatLgyr/) ...look at lines 62 and 97 for my additions. I just used the first webgl example I found and tried to mirror it in a canvas. Forgot about the flipped y, but although I cant remember them Im sure theres ways of dealing with that. Hopefully that gives you what you'd need to make such a function.
Thanks. That was my thought. I have a job request for this and I hate saying "not possible" until I research it a bit. Had no luck doing a web search, thought I'd ask here...
Thanks! It's one of the ideas, improve the code examples. There are many that are hard as metal. I would use github issues for that for now... I would take a look at rombo, didn't know the tool. Thanks again for the feedback ✌️
Thanks. I'm thinking it would be way easier to add user prefs to the app ;-)
This is really helping
That sounds like a lot of work to achieve the same thing possible with cordova or phonegap. Are there any clear benefits? (thanks btw very helpful response)
Hi, sorry for the delay. I made some fix on the latest version. @0.0.9 Here's how you would do it: [https://jsfiddle.net/6m2ajbso/](https://jsfiddle.net/6m2ajbso/)
Oh, this does what you want.... [https://github.com/hughsk/gl-gif](https://github.com/hughsk/gl-gif) ....I forgot you could add a frame from a unitarray (been ages since I looked at it, I helped add the dither).
No Eloquent JavaScript is not good for newbie (i'm assuming total beginner?) if newbie means basic syntax try [watchandcode.com](https://watchandcode.com) instead.
 This is amazing! I'm working on a D&amp;D campaign now, and this will certainly save me a ton of time. Thanks for sharing!
d = new Date() d.setHours(0, 0, 0, 0)
Thank you so much! I've found some websites now and discord, a friend from school, and trial and error is really good! I'm only up to like looping and stuff and feel like a noob :(
I honestly couldn't recommend it as it is far too talented. It is like a book written for Olympic athletes, and you'll end up writing code that nobody else can work with. I would say overall that it is better for you to be a programmer that can work with other people.
It should be less work, cause all you're doing is using web apis. The Android part would be a similar amount of effort, as most of the work is setting up your app on the app store for the first time
We would love to hear about what bits you find most useful and how you use it for your games! Glad it can help!
Unfortunately not, as it's compiled as an html file.
Wow, that is really cool
&gt; plus JavaScript Allonge are excellent ```js (function () { return (function () { return arguments[0]; })('inner'); })('outer') //=&gt; "inner" ``` Absolutely.
It’s a fantastic book, but (AFAICT) only if you already know how to program.
If you need a practical JS course, http://freecodecamp.org/ is the best - open source and BIG community.
Hey John, Thanks for share this...
Never managed to get through it. Honestly I've not found books at all useful. They're almost immediately dated the day they're published and the concepts can be hard to put into practise if you're not directly coding along. Code first. Get on Codecademy and FreeCodeCamp and start hitting keys. The rest comes later.
Probably would, but... * [The Ultimate Doom](https://archive.org/details/The_Ultimate_Doom) * [Castle Wolfenstein](https://archive.org/details/msdos_Castle_Wolfenstein_1984), or the game you might have meant, [Wolfenstein 3D](https://archive.org/details/msdos_Wolfenstein_3D_1992) Courtesy of The Internet Archive and running in EM DOSBOX. They don't seem to have x-com/ufo defense/enemy unknown though.
It's an amazing book for beginners
Yes
For something completely different: I just wrote a bash script that finds the 1_000_000'th prime number, using only standard Unix tools (`factor` and `awk`) in a time that is (almost) competitive with a compiled C program that runs the naive "check all possible factors" algorithm. And is basically a oneliner (albeit with a somewhat longish line). Never underestimate the power of standard Unix tools.
Mad respect
Definitely not the easiest, but agreed comprehensive and will cover many advanced uses and edge cases. This question was asked on r/learnjavascript before, probably some good info there as well. [https://www.reddit.com/r/learnjavascript/comments/2c9oxa/eloquent\_javascript\_not\_for\_beginners/](https://www.reddit.com/r/learnjavascript/comments/2c9oxa/eloquent_javascript_not_for_beginners/)
Here's a sneak peek of /r/learnjavascript using the [top posts](https://np.reddit.com/r/learnjavascript/top/?sort=top&amp;t=year) of the year! \#1: [My first eclipse using CSS :)](https://v.redd.it/28olb53e58w21) | [18 comments](https://np.reddit.com/r/learnjavascript/comments/bkn52a/my_first_eclipse_using_css/) \#2: [Solar system simulation using JavaScript](https://v.redd.it/c2k706uylov21) | [24 comments](https://np.reddit.com/r/learnjavascript/comments/bjnvcb/solar_system_simulation_using_javascript/) \#3: [All JavaScript concepts you should know in one single repository](https://github.com/leonardomso/33-js-concepts) | [22 comments](https://np.reddit.com/r/learnjavascript/comments/a17g4t/all_javascript_concepts_you_should_know_in_one/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
2D or 3D?
Have you used phonegap/cordova? I just want to make sure you've used it before saying its less work. This process with the gradle java build looks lengthier but that could be beacuase I've never used it before. With cordova you drop your html and js/css assets in the project folder and run a command. It outputs an apk.
Yeah for a newbie closures are confusing, the example its not the best also. i think it is a good book you just have to push it harder
Just change your mock link to https in your code sandbox and see the magic :)
whoa! what just happened?
The mocky link you're using in the codesandbox is http, changing it to https made it work for me!
One of the best. It helps you understand the concept of how to use the language to abstract the ideas you’re trying to express.
Neat.
Having used this library before, I really like it. Native typescript, really well designed, consistently good API. It's not mobile friendly, but it's up front about that. Since the vast majority of my development is meant for B2B, and we're wrangling a lot of data, this is perfect for me. I've used this and Material UI, and have to say that I much prefer Blueprint. It looks pretty decent, is much easier to override styles on, and has a really good set of components to choose from. If you're building apps that are meant to be used only on desktop browsers, it's a great choice.
tl;dr: TWA is just a browser with a URL and hides the address bar, anything like offline support or cache is up to you using _web_ technologies, not 3rd party proprietary stuff. :) --------------------------------------- &gt; Have you used phonegap/cordova? I just want to make sure you've used it before saying its less work. &amp;#x200B; I haven't but I *can* say it's less work, cause it's virtually no work. I don't interact with gradle or any java tools -- I personally just open android studio, and click build, but it looks like someone even abstracted away that: [https://github.com/h43z/twagenerator](https://github.com/h43z/twagenerator) &gt; With cordova you drop your html and js/css assets in the project folder and run a command. This isn't how TWAs work -- TWAs are better! You leave your site on your CDN/Servers and the TWA is just an apk with an URL, some metadata stuff that the play store needs, and a fingerprint -- all configured for you. This keeps the install size of the apk REDICULOUSLY small. like.. less than 1mb, regardless of web app size. This is also where PWA technologies come in to play. With phonegap/cordova, you need to rerelease everytime there are js/css changes, but since a TWA just links you to a site, it's always up to date -- and with PWA technologies, you can cache your assets to get faster load times, offline mode, etc. So maybe the concern here isn't with TWA, but with the technologies to _natively_ support what you're used to Phonegap and Cordova doing for you? fwiw, PWA technologies benefit everybody, not just mobile users. Idk how much you know about PWA stuff, but it's good stuff, and super exciting. &amp;#x200B; &gt; It outputs an apk. So do the TWA makers :)
View jobs by category : [link](https://nextgulfjobs.blogspot.com/p/adsbygoogle-window_14.html)
Hi /u/naveedcs, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/techboardtx, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/flameddd, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/HolidayInternet, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/TheCodingBus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/brucegibson8765, this post was removed. _"It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius_ * If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). * It's ok to promote your own projects or content, as long as that's not all you do. See ["What constitutes spam?"](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) for more information. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ed-r-2087, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Lastly, instead of all the above, if you just want to showoff your project, feel free to post it to our weekly _"Showoff Saturday"_ post. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/JavascriptFanboy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/seanbrucebingo321, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/unkownY, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/davidesantangelo, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Lastly, instead of all the above, if you just want to showoff your project, feel free to post it to our weekly _"Showoff Saturday"_ post. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mrich6347, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/kichien, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/lifeeraser, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
not better than watchandcode :) imho
Hi /u/RomanRiesen42, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/kingjohnc19, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/NLclothing, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
thanks remind!! I am sorry for my newbie behavior.
Hi /u/ManuSensei, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Why is there another comment with this exact same message here?
Ah that makes a lot more sense. Thank you for taking the time to clarify. This process essentially compiles an apk that loads a web browser without the url and links to the site. And I'm sure some other neat things too ;)
I tried others but [as can be seen in the Readme](https://github.com/franciscop/ola/#smooth-in-realtime), they were not smooth when changed mid-animation. So I decide to make and publish this, where you can change direction at any time and it'll go smooth. Would you like a followup blog post about how this is achieved?
This needs to be closely coupled with a topo map diagram generator, shit that'd be awesome.
This is I believe a very far in the future on the list feature. Alas unless someone with more knowledge in that comes around and has the time to implement it, it's probably a very VERY future feature
Hopefully not other neat things :) I think the entire industry's goal is to eventually support everything via PWA features. You can do things like: * Accelerometer * Geolocation * Camera (Pictures, QR Codes, etc, Video) * Microphone (Audio calls, or whatever else you'd use a microphone for) * Service Workers (asset caching, and offline-behavior) * Web Workers (separate processes / threads for efficient high-load working) * Notifications * Push Notifications * Native Sharing * and more: [https://whatwebcando.today/](https://whatwebcando.today/)
&gt; It's not mobile friendly, but it's up front about that. This looks great, but I would imagine that's a deal breaker for many people. Do you know how mobile unfriendly is it? I tried switching to mobile (in chrome) on the docs and it just renders like a desktop page. It's a shame as I'm looking for something just like this but need mobile support.
Yep. Long time before that post, I find out it hard way that onclick !== link click. On of the main reasons is that onclick handles both left and right mouse clicks and blocks useful context menu if you want to copy link, open in new tab an more. Nearest solution to simulate actual link click, is to detect clicked button in onclick handler and execute code only for left clicks and don't prevent default on right click.
In the mock code you gave, javascript was working in an https environment. Your requests was not allowed by modern browsers (ajax request from https env to http endpoint), thus browser was cancelling your request even before it actually hit mocky. If you cannot hit mocky, you cannot get back a status code. That was your issue
&gt; It is optimized for building complex data-dense interfaces for desktop applications. Just what their docs say in the intro. I haven't tried on mobile, but I also don't have to develop for mobile at work.
Facebook: We're the most evil company to create an open source JS framework! [Palantir](https://en.wikipedia.org/wiki/Palantir_Technologies): Hold my beer!
I think logical operators are extremely useful, but not in an expression. For instance: const users = [{ username: 'something', domain: 'google.com' }, { username: null, domain: null }]; const getEmailAddresses = (data) =&gt; data.map((user) =&gt; { return user.username &amp;&amp; user.domain ? `${user.username}@${user.domain}` : null }); This is fine. someBool &amp;&amp; doSomething(); This is just an expression, there is no assignment or return.
Ola is an Uber competitor in India.
 class App extends Lily { data () { return { title: 'Lily.js!' } } template () { return ` &lt;div class="app container is-small"&gt; &lt;h1&gt;{{ title }}&lt;/h2&gt; &lt;input type="text" model="title" /&gt; &lt;/div&gt; ` } } Lily.mount(App)
Couldn't this mostly just be a single line bash script? Don't get me wrong, I love me some Javascript, but this seems like over engineering
Sure! It was an old project that I did some years ago to learn JS 😄 then when I got some popularity on npm I've decided to maintain it
Ha! I didn't know that, "ola" means "sea wave" in Spanish so I thought it'd be appropriate for an animation library :)
Well, if you read the source code and docs for React and Redux, then they are no longer black boxes. You’ve just opened the boxes!
Thanks. It means a lot that people like this!
Don’t worry, you’ll get there eventually. You already know more programming than a lot of people. Just keep it up and always keep learning. You’re gonna do great things!
This looks pretty good in terms of design, components, and features. Probably the best UI toolkit I've seen for the post jQuery era.
Also a Norwegian first name!
I've many times wanted an alternative to something like Google Firestore, which is lighweight and easy to spin up, and also won't cost me an arm and a leg. This a solution I've been working on for a bit, and I'm already using it in some of my other projects. Any feedback, constructive criticism or repo star would be appreciated :)
looks like a clumsy solution. in vue, i’ve had a ‘card’ component &lt;a&gt; with an href and a click event. any shift clicking opens the browser tab, any clicking opens a modal via js. at least that’s the behavior it defaults to... &lt;a :href="`/p/${sku.id}`" @click.prevent="modal(sku)"&gt;
In summary: * CSP improvements that let you allow/block content much more flexibly, without having to list every possible script host * TrustedTypes, to block front-end XSS and enforce content sanitization * New request headers on browser requests, which let servers spot &amp; block CSRF attacks * New response header to block cross-site opener attacks
Icons from the core lib can't be tree-shaken out of my js bundle - a 500KB dealbreaker.
didnt realize it was made by them, thanks.
&gt;include 2D mostly .
In Portuguese it means “hello”
In the Netherlands it’s the name of a ICE Cream company.
Good question... That's really weird
Are you sure that is the case? `@blueprintjs/icons` is a separate package you don't have to install.
ah ok, thanks
Sorry, I only know 3D. Other people can help more.
Hi /u/iwiik, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I can't wait until Triple Canopy (previously Blackwater) come up with their own... Oversight or something
Hi /u/diegohaz, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ArizonaIcedOutTea, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RedBallG, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
&gt; is much easier to override styles on If you don't mind: could you please elaborate on this point? I just started a project with MUI and AFAICS every component accepts the className attribute that you can fill with makeStyles/useStyles. Under what circumstances did you run into problems with that? I might still be able to switch my project to another framework if it looks like it'll be a better fit, so any input is welcome :-) thanks!
Hey, thank you /u/kenman and sorry about that. I did submit a link, through the new Reddit interface though (not sure if it creates a different post type). I'll try with the old interface then.
If it's just a Twitter post linking somewhere else, post the actual link (instead of the Twitter post). Thanks.
This would make workflow much more efficient for me. Anyone have any experiences with it?
https://hidden-bastion-42143.herokuapp.com/about
Oh, now I got it. Thank you.
I've found that the `@material-ui/core` package comes with components that do not render simply. A `&lt;Button /&gt;` component does not become a `&lt;button /&gt;` element with styles attached. Instead, there's a more complicated mess of nested elements. Especially when you get to some of the more complex components, they turn into a mess of nested divs. And they end up with generated class names that you can't target manually, so you have to add your own class names and go through a lot of work to adjust the styles how you want. I've needed to do this way too much to get things aligning properly, changing colors, etc. MUI also uses the React context API to provide its theme. Which would be fine, but working with their theme provider has never been that easy for me. It's very difficult for me to see what properties affect what, and then you end up having to override specific components a lot. It's also not TS friendly at all. If you want to use their `withStyles` function for applying styles or changing defaults it's a right PITA too, they definitely had to introduce some hacks to make that work right. OTOH, blueprint uses scss for its styling, and for a lot of things you can actually write the DOM by hand if you really wanted to. It's possible to do `&lt;button className={Classes.BUTTON} /&gt;` (although it's not recommended, and they provide `@blueprintjs/tslint-config` to guard against it) instead of `&lt;Button /&gt;`. However, this is what blueprint will generate itself when you use `&lt;Button /&gt;`. It's a pretty good 1-to-1 correspondence between a component and class names. If you want to override the default blueprint styles, you can simply write a .scss file that sets [variables](https://blueprintjs.com/docs/#core/variables) and import it before you import the blueprint scss styles file. It doesn't allow dynamic styling, but it's great for adjusting the base styles. If you want dynamic styles you can always do it with your own css and class names, and it's pretty easy. It already supports a light mode and dark mode anyway, and 99% of websites don't need more than that. The table component is way better hands down. MUI's doesn't come close to the functionality, usability, or user-friendliness. And you can pick between an HTML table or a dynamic div based table. There are official provided date/time pickers. And they look nice. There are official provided selects, including multi-select. In general, I've just found blueprint to be less heavy in the DOM it generates. The styling is simple, clean, and doesn't require learning a theming API. Debugging the output from blueprint is easier. The docs are excellent. It is written in typescript itself, so the types are actually always correct. The set of components provided feels more complete. The way the library is written and distributed makes sense. There haven't been any crazy version number changes in the last year (that I know of), and the same definitely can't be said of MUI.
Check out adonisjs, modeled after laravel. I highly recommend it. Just keep in mind it's opinionated and with batteries included, opposed to micro frameworks such as express or koa, but I guess that's exactly what you need.
Sorry, I must've missed that -- restoring.
Hey guys. A year ago I left my job to dedicate myself to this open source project. This is the best project I've ever made in my 17 years of programming. I'm sure it'll help companies ship accessible web apps with ease. Feedback is welcome. Thank you.
Successfully exported a little project on my macbook. Seems a little light on features but most recent PR was just a couple days ago. The code preview bit is pretty cool.
Amazing work
Thank you ✌️
 it is fair to include "none" when looking at what is in use IMHO.
I'll check it out, thanks! I'm not really strictly against frameworks with batteries included, I'm just kind of wary of committing to bigger frameworks because there's a higher chance of ending up locked into a codebase that isn't maintained anymore. I've worked with Django a lot and I like the approach, but Django has a good track record and is very mature. I just don't like using Python anymore because of its recent developments, TypeScript seems like the way to go.
Cool cool 😮
Woah this is pretty cool 😮
I hear ya. Well, take a look, I think you will be pleasantly surprised. If you ever worked with laravel, you will be right at home. And it is just gaining traction, and is actively developed.
Neat 😃 nicely written, especially apiClient.ts Checkout something I made recently: [Github](https://github.com/karanpratapsingh/kcards)
Express v4 doesn't have commits recently because it's finished and nothing needs to be fixed.
They can’t be automatically tree shaken but you can quite easily manually include them one-by-one. I’m on mobile but I’m happy to share some sample code.
I know, maybe I didn't make myself clear, I was just saying that the ORM looks cool and I'd want to use an ORM to go along with my framework instead of something like knex.
Checked out the documentation, ehh I still prefer Semantic-UI
Anyone know what they used for the documentation part? It doesn't look like storybook...
Thanks for taking the time to elaborate. That was very helpful :-)
I'll definitely be checking this out.
Don’t use then?
Sorry, I'm out of the loop.. Can somebody explain?
As you're talking about choosing an ORM too, take a look at "Objection.js + Knex.js". I found it a lot easier to (migrate to and) maintain than TypeORM. I really like the grasp of TypeScript w/ Express.js (which I have prefence) or Koa. [This](https://github.com/PCasado/express.ts-boilerplate) is the boilerplate I use for TypeScript Express backends with Atlas (here, with Mongoose because it's focused on NoSQL).
Take a look at nest.js https://nestjs.com/
I'm sorry to say that your strategy violates the cardinal rule of interfaces (i.e. "Don't interrupt the user.") If a waiter pushed a new ad in your face every 60 seconds, would you go back to that restaurant? All you'll do is make users like me click out of there ASAP.
FB made React and it's had well known privacy concerns etc (I doubt you're THAT out of the loop!) Palantir is a data mining company that works with governments to spy on citizens and with with a highly controversial billionaire founder that that's a vocal Trump supporter and (less controversially but perhaps more famously) bankrolled a lawsuit by Hulk Hogan to destroy Gawker. (This is a tech sub and not a political or current events sub, so consider this an explanation of the joke and not necessarily an endorsement either way of the good vs. bad or facts of the various cases; I'm sure some folks may vigorously disagree with those characterizations).
Will check it out, thanks!
Thanks for explaining!
Nice, thanks! Do you use Express 4 or 5? As far as I understand, Express 5 supports async/await, but it's still only in alpha.
so you went into a random persons code base, told them it was shitty and messy, and you're confused as to why they might not want to have you contribute? don't know what any of this has to do with someone being ignorant or a "hipster"
I've run into people like that. I think it's just lack of social skills, since programmers often write code more than socialize with others.
Express 4 to stay stable, but I have ES6 features when I use `tsc`.
Since you do speak about good practises, maybe you should add in your collection of them not to comfort other devs about their own work. Especially since it looks like you do not have the experience to back up your claims. Think you can do better? Fork and do it your self.
Since you do speak about good practises, maybe you should add in your collection of them not to comfort other devs about their own work. Especially since it looks like you do not have the experience to back up your claims. Think you can do better? Fork and do it your self.
I think I would accept ads in a restaurant, if I was getting a dinner for free :) anyway, there are millions of people using my program every month, it is just a small minority who may mind seeing ads :)
This is the best thing Reddit has shared in ages. Great work.
I can’t even imagine what possessed you to post this garbage to /r/javascript.
You come off incredibly abrasive in this post and it's hard to give you the benefit of the doubt. Hopefully you're just young and immature. Generally people that put others down are insecure and are trying to validate themselves. This post reads to me as you trying to bully others to make you feel like a good and normal developer and I'd say this industry isn't for you.
Glad you like it!
Hi /u/reality_smasher, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
This is very cool and sorely needed in the React community. Are you familiar with [Reach UI](https://ui.reach.tech/)? It looks like you have similar goals and design principles.
My coworkers are very friendly and personable guys who seem interested in learning from others how they can improve their code. Even so, that doesn't make me free to tell them outright that they are failing at basic work without sounding like an asshole. Being "open" doesn't mean you have to listen to people who are neither constructive nor respectful. If your phrasing here on how you're bringing up touchy subjects like telling someone their code needs work is close to how you spoke to this dev and others before her (and shortly after introducing yourself), it could be considered rude. How do you know others would not describe you as awkward? On the other hand, I have had multiple people tell me I speak like I'm tryingGg to sound smart. I guess I never learned to speak concisely and just say my train of thought aloud...
How did you learn so much in one year? What was your learning routine like?
I’m struggling with it. I use React and Webpack and can’t seem to figure out how to get the css imported.
I should've added that she put her lib as a link into a channel on a discord server where others can contribute to their code base. So no I didn't browse a random library to bash someones code. Also I didn't write "Looked at your code, your code sucks." I just said "Hey look I like your idea but your code has some problems. You might want to look into some best practices. Etc" I don't know why on earth that would potray someone as being an asshole. You just suggest an improvement. And yeah the header is a bit misleading. Those terms just came into my mind. I would apologize if anyons is offended by this.
Yeah it's a bit of a rant. I might exaggerate a bit there. That might be true but my intention wasn't to put anybody down, I just made a suggestion and gave some arguments why it might be a good idea. She just couldn't take some critisicm.
Her work was put out on a channel on discord where others can contribute on her work. So basically she gave permission to get some feedback. I just did that.
Sounds like you were using MUI before JSS came along. Overriding styles of components is IMO unparalleled compared to other libs. Every component has not only extensive demos and docs, but also a codesandbox you can edit to play with the component You don't override the styles using the methods you mentioned. You do it using "classes" prop, which allows you to target every style definition of a component specifically. If you write styles this way and in JSS, the generated class names are not an issue as you'd never need to know their names. Would highly recommend giving docs on styling a shot. We've been using MUI in our projects for more than a year and the experience has been stellar.
Hi /u/mollamk, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
What defines a developer that uses vanilla JS? They don't use any libraries or frameworks? I doubt there would be many if any that don't use either. Also, why's it even matter?
\&gt; Hey guys. A year ago I left my job to dedicate myself to this open source project. &amp;#x200B; Can you say more about this? Are you able to live from this project alone? Is it profitable?
Search for EcmaScript, ES2015, ES6, etc
Hi /u/cedpoilly, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Understood :)
[Mozilla Developer Network Javascript Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript)
I've used versions that come before and after JSS. As for the version changes that were crazy, exactly a year and a day ago they released 1.0.0-rc.0, and yesterday they released 4.0.0-beta.2. In a single year they went from 1.0.0-rc.0 to 4.0.0-beta.2. That's a pretty big jump. I've also been unhappy with the general slapdash approach they seem to have to shipping new versions. There's something to be said for moving fast, but not if it means breaking things. And yes, I've had projects fail to build without changing the version spec in my packages.json. My team is also currently in the process of taking over a project that's using `material-ui ^0.18.0`. I can't wait to update it to at least the latest major version. Hooray for vendor code. As for knowing what the specific class names are, I don't know about you but I gain a lot of knowledge through the browser inspector. Having human readable class names makes that much easier. We also have internal automated testing using selenium, and the guy who has to write it all has asked very nicely if we can add predictable class names to make his life much easier. For our case, we had a lot of requests for overriding the default themes. I agree that if you aren't trying to do a lot of customization you won't run into a lot of issues, but unfortunately I've spent many an hour fighting the API trying to figure out exactly which JSS prop needs to be overridden in order to move that icon over just a bit or keep something from being cut off, only to find out that the MUI devs didn't expect anyone to want to change that CSS property. Oh, and using the classes prop with TS has never worked as smoothly as I'd like. When one library works well with the language I'm using, and another feels like a patchwork of hacks, I'm going to lean towards the former. Using pure JS is not an option for me, our tech stack is TS whether we like it or not, and I happen to really like it. A lot of it probably also came down to my development style. I like having full control over my app. If something isn't working right, I'll jump into the source and figure out how to make it work right. Blueprint just got out of my way. MUI kept getting in my way. I wouldn't be against using MUI in the future if I needed an application with that look and feel, needed to support mobile, and wasn't too complicated, but since I'm mostly writing B2B code or internal code that only runs on desktops, and tends to be fairly complicated with a lot of data (yay corporate financial reports), I keep finding MUI lacking.
Hi /u/kmp3e_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Umair-123, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
like on page load? Window.onload or an IIFE at the end of your body should do it
Please tag me if you ever start writing a news blog or something, i'd love to read more of this style of presentation.
I do plan to create services around it, but right now I'm not making money with this project. I live with the money I saved from my past jobs. And my wife has been paying most of the bills during this time. But soon enough I'll have to find a job, and I'm gonna try to work for a company using Reakit.
This looks really good and useful! Simple, easy-to-use API, and (at least it seems like that from the documentation) great functionality. Definitely gonna use this!
Thank you /u/stalefries. Reach UI is on the "Related" section in the readme (now I think it should be named "Alternatives"). Both libraries have the same purpose, but with different APIs. Reakit's approach is more low level, which is great for composability, but some could find it more verbose and harder to use than the simple API provided by Reach UI.
I'm sure I could write "vanilla" javascript now, though the last time was probably 2006. What I wouldn't do is work for a company which is financially stupid enough to pay me to rewrite dozens if not hundreds of freely available open source projects, because some pointy-haired boss or idiot architect is standing around yelling "VANILLA!" I could imagine a meeting... PHB: We need some tool to do importing for our various projects. Me: How about NPM or Yarn or even Bower or Gulp or .... PHB: Remember we ONLY do vanilla javascript here at Waste Money Corp! Me: *yells fuck you no less than ten times and rage quits, later posting the recording of quitting on soudcloud for others to laugh about*
True, but how many analyze what they do? I've gone for a direct approach, relying on DOM to handle buffering etc, and mostly using innerHTML for block rendering (building the content in a string beforehand). It's pretty smooth. State is retained in the application itself.
I use blueprint pretty extensively (desktop apps, electron), it is one of the best open source projects I've had the pleasure of using. Top notch documentation and the library design is great.
Hmm what do you mean? The documentation has a simple layout and pretty much everything else is blueprintjs components.
Fuck. Yeah. Thank you for sharing and the dude for creating it, good shit will come :D
Thank you for answer :)
Thanks! I've had this idea for a while but needed to build up my skills first to pull it off.
You just do: import '@blueprintjs/core/lib/css/blueprint.css'; Alternatively, you can import them within a sass file like so: @import "~@blueprintjs/core/lib/css/blueprint.css";
This is faster than JSON.serialise?
For some specific use cases it is 10000x faster than JSON.stringify
Thanks. And of course for the follow up blog post..
I also don't understand the documentation about it only working on fixed structures? What does that mean? For example sometimes I have an object 4 levels deep and I just want to create a quick copy of it, so I'll do: JSON.parse(JSON.stringify(myObj)) Would it be faster with this library?
Remindme! 1 week
I will be messaging you on [**2019-05-21 22:57:30 UTC**](http://www.wolframalpha.com/input/?i=2019-05-21 22:57:30 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/boiou0/olajs_a_library_for_smooth_realtime_number/enj4e5k/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/boiou0/olajs_a_library_for_smooth_realtime_number/enj4e5k/]%0A%0ARemindMe! 1 week) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
It's a library about stringification, not parsing. In the docs you can see how to create a fixed schema. Then you can serialize objects given the provided schema. This means some prep work.. so, clearly the native JSON.stringify is better suited for general usage. But, if you need to repeatedly serialize objects with the same structure or objects with a lot of text, the performance improvement is great!
It's a library about stringification, not parsing. In the docs you can see how to create a fixed schema. Then you can serialize objects given the provided schema. This means some prep work.. so, clearly the native JSON.stringify is better suited for general usage. But, if you need to repeatedly serialize objects with the same structure or objects with a lot of text, the performance improvement is great!
It's a library about stringification, not parsing. In the docs you can see how to create a fixed schema. Then you can serialize objects given the provided schema. This means some prep work.. so, clearly the native JSON.stringify is better suited for general usage. But, if you need to repeatedly serialize objects with the same structure or objects with a lot of text, the performance improvement is great!
Thanks!
I am also going to chime in and say that Blueprint is a superb library. I've used Blueprint to make a fairly sophisticated interactive visualization tool at work and I've no complaints. I picked it out primarily because it has excellent support for TypeScript and it makes customization of the components a breeze. Styling is done with plain old CSS so you can just import the class names from code and attach them to HTML or extend exposed SASS variables. Unlike many other libs TS types are actually good. For example, the types for icons is a large list of string literal unions rather than just a string, so you can't typo and it'll even tab complete in VSCode.
I’ve never seen a triple comment :p
Ok thanks for the clarification.
Any plans on making this WCAG 2.0 AA compliant? I know many universities and government agencies would love to use a library like this, but are required to adhere to this standard for ADA compliance. Just wondering! Awesome library.
&gt; A templated string is built with the provided schema. You mad man! That's innovative.
Right, I definitely opt for the lightweight solution until it becomes clear that I need a more robust library to help me out. But React is pretty straightforward. It has a semi-global “event hub” in the outer scope, it attaches an event handler for all event types to the document node (usually), and all of your JSX event handlers subscribe to that global event emitter. So basically you have global event delegation for the entire virtual DOM tree. If any event handler makes a call to `setState`, or some other state-mutation is called, React pools all of those state changes, then diffs your component tree, supplying updated state objects to each component that requested it, and generates a new state along with a set of render instructions. Then it calls all those render instructions sequentially to update the view. Then it waits for more events. The hard part about analyzing it is figuring out the logical path through a long chain of module files. I think the core library is less than 20kb, so maybe around 2,000 lines of code? But it can be done, and there are several blog posts which discuss the source code in greater detail. But I guess the whole point of the library is to provide a technically sound method of performing a task without burdening you with the details and infinite edge cases. If you want to implement a “functional reactive programming” architecture, and have a team of 5 programmers trying to whip up a state-of-the art web app, React turns that into a more reasonable task. But I’m with you. I prefer to know what’s going on under the hood, and I actually enjoy the process of creating an architecture for a website. It’s not as fun writing a bunch of glue code and tweaking config files for a handful of frameworks.
Just [this](https://codesandbox.io/s/w7xmrj7n3w). I've been learning about canvas in html5 this past three days. It ain't much, but it's honest work.
Looks very handy! Does it work for circular references?
Thank you for the feedback /u/jeis93. Since it doesn't care about styling or specific content, there's only much Reakit can do other than being WAI-ARIA compliant. There's some experimentation around design systems with satellite libraries like [`reakit-system-palette`](https://github.com/reakit/reakit/tree/master/packages/reakit-system-palette) and [`reakit-system-bootstrap`](https://github.com/reakit/reakit/tree/master/packages/reakit-system-bootstrap), which are used for the [https://reakit.io](https://reakit.io) website and for the component examples. I simply borrowed most of the styles from Bootstrap. Even if someone used these `reakit-system-*` libraries in production (which I don't recommend right now), I'd expect they override the default values, so they're responsible for being WCAG 2.0 AA compliant. That said, if there's anything the library can do better regarding this, please open an issue and I'll address it asap. That's my highest priority.
It looks like a great start, but unfortunately you may have trouble getting converts until there are more components available. Maybe you could have a survey on what components people would want first, or see if you could scrape existing open source projects to see which components are most used. That would give you a good priority list of what to work on, and a bit of triaging would identify which components would be easiest to contribute for newcomers. I think it's a great project though. Having highly accessible components is needed in this ecosystem. Keep up the good work :)
Hi /u/bodymindsoul, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Triple karma
Hi /u/Ni55aN, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
&gt; JSON.parse(JSON.stringify(myObj)) I can't believe there's still not a better solution for this. Seems like such a hack.
The framework is mostly meant for desktop-style B2B apps where mobile isn't a requirement. These kinds of UIs are usually incredibly information-dense and designed for large screens, with a mouse and keyboard as the standard forms of input.
#TRIFECTA
Deepcopies are one of those things that are infrequently needed, and also really irritating to write code for without good introspection But yeah I feel your pain. Sometimes you end up needed deepcopies in loops and would be cool if the language itself supported some kind of lazy object copying
but what's your weissman score?
This is dope.
Blueprint is great. It's one of my favorite React libraries to use. I work in enterprise software where only desktop is important. We prototyped a few component libraries but Blueprint was the one that proved to be the most flexible with the most polish for our circumstances. (Intranet, no access to internet, etc) Just a great library all around.
get yourself a cert if you expect people to look at it
I’ll do that tonight! Good point.
I wonder how this compares with msgpack (https://msgpack.org/index.html) as it appears to take the same strategy - ie: predefined schemas. Comparing it with JSON.stringify isn't exactly sane because of the dynamic structure issue.
Note: this only works for objects that don’t implement iteration themselves. E.g., it won’t work for arrays or instances of `Map`.
\+1. Each time I am rather surprised at why more developers are not using AdonisJS. The community is smaller but the product is super great.
# d
It depends on your skills. If we can take a look at your portfolio or if you have built something not so out of the extraordinary you can get a regular job. Programming as an intern will still consume your time and mind and you get paid but misseries. More over, it is a startup which will not be so useful in terms of marketing yourself for a future job, as it will not be a name that pinches to recruiters. This is imho, let's see ~~paul allen's card~~ what others have to say.
Is that low? Where I'm from, interns get $800-$1.4k per month. What's the market rate for your country?
where are u from?
[leobogod.pro](https://leobogod.pro)
Singapore
Nyc
I saw that in your post 😂 i was asking if you knew the market rate for interns where you're based in.
And I had no idea what quine even was 🤣
I did a search, it does seem like the offer is indeed on the low side. An average intern gets about $15/hour. Nevertheless, an internship should provide you with a broad learning experience, and a startup tends to do this better. Big companies may end up having you doing menial administrative tasks.
Great website love that its mobile friendly watch your spelling tho
Take it lol, I’ve done it under $500, do it for the experience Atleast
I hate the dickishness in the reademe. &gt; Faster than `fast-json-stringify Just include us with &gt;`&lt;script src="slow-json-stringify" Ugh, fuck off. We get it, you're clever...
wow, when i search for MVP on this page , there is no mentions, it means this page is full of sheeple who blindly follow the norms, and thats good for me since it means i can use my innovative super power and succeed beyond them, poor sheeple humaans, so limited by their imaginations.
It’s an internship don’t overthink it.
Teehee edgey JavaScript devs
&gt; Native CSS still doesn't have support for maps/lists or iterating. wow, that literally means Rust Maud will replace JS and CSS
Hi /u/ImStifler, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Hidja, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/eyyamgudeer, this post was removed. _"It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius_ * If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). * It's ok to promote your own projects or content, as long as that's not all you do. See ["What constitutes spam?"](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) for more information. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Pick a featureful DOM based (so you can operate with it via JS) web app that already exists and try to do something with it. Like... Hey, how much saints there are? Search on Wikipedia "list of saints" and find a way to count them based on their table. Should you use a for loop?(For what?) Make use of document.querySelector()? Another example could be add key listeners to Spotify Web to listen to specific keys to execute an action. Get used to manipulate the DOM. After this, try to make your own web app with a router, stateful components, etc, everything from scratch. If you understand all these algorithm-relationed operations and these data structures, you can skip urionlinejudge or codewars if you don't want to learn competitive programming.
Mmm got it! Thanks for the tip and I’ll definitely try that!
Thanks for your answer! That makes a lot of sense. Another option may be to pre-moderate self posts, but that would mean more work for moderators.
Start or keep doing JS challenges in sites like CodeWars, exercism.io or freeCodeCamp's Intermediate algorithms section. They contain challenges that exercise your JS problem solving skills with common stumbling blocks you might have about its logic. Focus on getting the desired result for each problem and not on performance or elegance. If possible, study other people's answers and see why they worlk and why they might be better or worse. Play around with pythontutor.com. they have a JS visualization tool which executes your code snippets and shows you every step of the way. Good for getting your head around the event loop. Read this book and do the exercises. https://eloquentjavascript.net/ All of these things have helped me a lot.
Two thumbnails didn’t load just got “thumbnail loader ....” for two of your web apps, there’s a grammar mistake (there should be an a before league) in the first sentence and the circles lagged a bit and so it looked like it said 0% on all your skills for a few seconds. Otherwise super clean and nice design.
It is a terrible hack that breaks so easily. Use `clone` or `clone-deep` or `_.cloneDeep` or `R.clone` or `$.extend(true, ...)` instead.
Yo OP just continued to copy/pasta the same comment to everyone! Haha.
Msgpack seems very interesting! It looks like an hashing library. I think the main difference is that msgpack needs an encoder and a decoder on both sides of the communication. With SJS you encode on one side and then send JSON in the outer world.
Haha you right! I was trying to post but Reddit were giving me error messages so I continued pressing "post" :-D
Thank you! SJS unfortunately does not work with circular reference. It works with a pre-built templated string, so you cannot stringify an infinite number of objects together. However the main reason because this is not actively researched is that I think SJS could be useful for use cases like APIs ..when you need to send back always the same json structure over the wire (e.g. a product in an e-commerce). So circular reference is out of the scope of this library
What is purpose with (from [https://github.com/lucagez/slow-json-stringify/blob/master/src/sjs.mjs#L34](https://github.com/lucagez/slow-json-stringify/blob/master/src/sjs.mjs#L34)): `let i = 0;` `for (;;) {` `if (i === length) break` `...` &amp;#x200B; ?? Have never seen that before, why do such an empty for-loop?
Thank you!
A lot
It's not an empty for loop. It is a regular loop. Only with its definition moved to other places. It increments the counter at the end of the block. And the length was stored in the upper scope.
Haha yes my "post" button was going crazy
I do not ask for help in this post
Everything started with my girlfriend joking that I was becoming too mainstream
Yes, thank you! As I see it, a while loop would be the "normal" here, but maybe there are a reason for you using a for-loop (like performance)?
Yes. In the benchmark tests I saw it was slightly faster. However the main reason is that I liked the syntax more
No escaping by default? I look forward to the incoming vulnerabilities!
I'd love to see that. I'm also keen to avoid having to fork the entirety of `@blueprintjs` to avoid including the useless whole of `iconSvgPaths.js` if i make the mistake of using `Popover` from `@blueprintjs/core`.
I think you won't have a lot of security problems here. Because escaping ensure that you are serializing a valid JSON structure ready to be parsed. It's not doing anything for sanitizing your fields. BTW, in a lot of use cases you don't need escaping. And escaping is very slow as its execution time grows with the length of the string.
Are there any articles you can link me to please? If I'm going to get my company off of \`@blueprintjs\` for both bundle-size and ethical reasons I would like to be ironclad in my views.
It's not that package. It's [this issue](https://github.com/palantir/blueprint/issues/2193). Also it turns out that Palantir are ...not exactly ethical, to say the least.
I really like the last statement :) Interesting you could measure some small difference, and in your case it make perfectly sense, the entire goal is speed.
Hey, here's the link: https://github.com/palantir/blueprint/issues/2193 You could probably wrap this in a function and dynamically tree shake, but I'm just doing it manually for now. This way, I don't have to import anything and can just use the icon prop. I don't add icons often so it's just not worth spending more time on it at the moment for me. If you go further with it, let me know. const path = require('path'); const { NormalModuleReplacementPlugin } = require('webpack'); module.exports = { plugins: [ new NormalModuleReplacementPlugin( /.*\/generated\/iconSvgPaths.js/, path.resolve(__dirname, 'src', 'lib', 'icons.js'), ), ], }; And then I just copied icons.js from the repo and commented each icon out. To use an icon, I just uncomment the icon that I need. This is still a huge pain in the butt, and has disadvantages (e.g. must manually update your icons from blueprint) but you'll at least save 300-500kb of dead code on your bundle.
Impressive. This could go well with websockets in like a simple multiplayer online game right?
Exactly! This one could be a perfect use case!
No idea, but it’s probably an error at some configuration step which requires you to specify a file path, based on the type of error at the top of the stack trace.
It is a hack, and doesn't work if you have a non-tree structure for your object (circular references (such as parent/child references) or diamond references (two child objects that point to the same object (ex: comments and comment authors)).
Your problem seems to be on line 125 of your file `internal/validators.js`.
I just use the vim keybindings extension in vscode which gives me most of the functionality I need. Is that a viable option for you?
Oh dang, how did you accomplish this?
As for me, I gradually incorporated the vim learning curve into my daily workflow by using the vim extension for vscode. I figured I could always disable it if I was in a hurry for something and it was slowing down my workflow. But after a week or two, it was very clearly speeding up my workflow even with absolutely clumsy usage on my part.
If I understand you correctly this is a deeper question than you realize. Its kinda like the meaning of life, but for programming. Some people would advocate an object oriented approach. Others would say functional. Some would mix them, some wouldn't use either and go all procedural. Some would say [Red-Green-Refactor](https://www.codecademy.com/articles/tdd-red-green-refactor), some would laugh at that. It just never ends. You've entered the realm of [Software Construction](https://en.wikipedia.org/wiki/Software_construction). [This](https://en.wikipedia.org/wiki/Code_Complete) is my favorite book on the subject, its huge, but easy to read.
Nothing to add here except damn United fans really hate Lukaku lmao.
Thank you.
Hi /u/Rohan200220, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Like *this* big?
Great stuff!
I think you should do both. The interface looks clean. The idea is good, and I can see the same code base can be used for several other purposes like NFL, MLB, NFL, IPL (Cricket) etc. **Regarding adding new features to the app:** 1. Add more teams. There are 19 other teams in the premier league. Your app should allow you to choose between the teams. 2. Show the players by their position (like Forwards, Midfielders, Defenders etc.) 3. Provide a filter to sort the players by Keep or Sell. Users can see who got the highest votes for Keep or Sell using a dropdown. **Regarding the course:** The tech stuff you mentioned is really hot. Doing something tangible in a week is compelling, and you should teach how you did this in a week or two. There are so many moving parts in developing a new Javascript app from choosing a framework to deploying the site.
No it doesn't
Shouldn't you be using object spread for something like that instead? &amp;#x200B; e.g. &amp;#x200B; `const myObj = { name: 'Michael' }` `const copied = { ...myObj }`
/r/reddevils
This works for shallow objects, but not if they are multiple levels deep and you don't want to affect the original object when you are manipulating the new object.
FYI, there is a super handy js library called benchmark.js that makes possible measuring with a lot of precision the execution time of some provided functions. I used that one for my benchmarks.
Try [https://web.archive.org](https://web.archive.org)
Nope it does’nt work.. i have tried it
Then there is nothing much you can do. If they have deleted the page and there is not cache you can't get that info. Have you tried Google cache btw?
Nope what is it?? There are a lot of books on their website... and i used to save the books by looking at all the pages of the book and then use the extension save all resources... How can they delete so many pages?? Also they are in order.. means there are 5 pages and then a copyrighted page.... So i thought if there is an extension that can help...
Note to budding developers reading this: Do NOT use cryptic syntax abuse like this in regular code that is to be read by others, unless it is in the final optimization stages of a time critical function and you and those around know exactly how and why it is there. In a production setting nobody will think you are clever and everybody will hate you. This is one of the extremely few places where it is appropriate and even here it is somewhat dubious.
This 🔝 yes, you are right. I didn't tought about this readability issue while I was trying to squeeze every ounce of performance out of SJS. I could probably add a comment at the top of the for loop stating that.
With great power of optimisation comes great responsibility for commenting your code.
Just use express generator for generating your express skeleton: [http://expressjs.com/en/starter/generator.html](http://expressjs.com/en/starter/generator.html) And for your routes, models and controllers you can try: [https://www.npmjs.com/package/express-mongoose-generator](https://www.npmjs.com/package/express-mongoose-generator) With commands in the terminal it will generate the routes, models and controllers for you.
Ant design is a framework agnostic design language. There is a just an implementation with React.
Do both. Make a post about how you made it, post to medium.com. This will help increase your user base. Then build upon the source and extend it to other teams and not just united. As a developer and football fan myself, this is a great idea that has been executed well.
I would not. I'd have to be desperate and starving to tolerate that.
Nothing against the concept, but that guy, always, likes writing way, *wayyyyy* too much text. I tried reading some of his blog posts several times, I always gave up because it was just too tedious to read that WoT (wall of text). The concept(s) he tries to explain, when explained well, are better explained with less. He seems to be in love with his own (thought) processes so that he wants to share those rather than just the concept the posts are allegedly about.
Consider me the George Orwell of JS framework ethics. I'm really good at pointing out the problem, not so much the solution. (On a more serious note, ethically speaking, one could argue simply using the free product of bad people isn't necessarily doing much to prop them up, maybe don't star their repo the same way you would otherwise)
By posting to here youve just corrupted your data lol. I for one kept and sold a few players that went against the numbers once revealed. I have no idea whos good or not as i imagine will be the case for most people here checking out the site
I agree with this, and find it additionally difficult to read 'old western' code font. Absolutely nothing about that font is built for legibility - it's a display font. Why the fuck is it being used for code examples?
A slightly improved version of this script: ``` #! /bin/bash set -e N=$1 seq $((2**63-1)) | factor | awk -v N=$N ' /: [0-9]+$/ { n++; } n == N { printf "%d-th prime number is: %d\n", N, $2; exit; }' ``` In case you are wondering: `factor` from GNU coreutils can handle numbers from outside the range of 64 bit integers, but bash arithmetic evaluation (`$((...))`) can't. Not sure what the actual limit is (haven't looked at the source code), but `factor` barfs at `2**128-1`, while it has no complaints once you chop the last few digits off that number: ``` $ factor 340282366920938463463374607431768211 340282366920938463463374607431768211: 587 14983 38690341605885700950955615391 ``` Pretty amazing if you ask me. Since `seq` apparently can handle larger numbers, one could just feed it a higher upper limit written as explicit digits ;) In practice it doesn't matter much, getting anywhere close to exhausting this limit would take quite a while. Well, I suppose vary large numbers are actually tested by `factor` for pseudoprimality before attempting to factor them, with one (or more) of the probabilistic primality tests known to mathematicians. Actual brute-force factorization wouldn't work so instantly, no matter what the implementation.
You can use my boilerplate repo here https://github.com/dev-z/Express-JWT-MongoDB-Mocha-boilerplate I use it for my personal projects. It has all the stuff you ask for plus some tests written in mocha and chai as well. It has ESLint setup to maintain code sanity as well.
Looks nice but I already have enough stuff made in china.
ok, but what if we could loop inside the CSS code from Rust+Maud ? i mean if we need a loop inside CSS code, thats lot of power.
Kyle Simpson convinced me that "microperformance" in general is a waste of time ([https://github.com/getify/You-Dont-Know-JS/blob/master/async%20%26%20performance/ch6.md](https://github.com/getify/You-Dont-Know-JS/blob/master/async%20%26%20performance/ch6.md)). You are better off writing "clean", "correct" code and let the JS interpreter do its job. But in OP's case I think it is completely justified, it is about squeezing out all the performance you can get, if that is not the goal you can just use `JSON.stringify()`
Totally. Premature optimization is a waste of time. Also I haven't looked into why the empty for loop construct is faster here but I'd consider it a VM bug if "while(true)" was not JIT optimized as a jump instruction without evaluation which should be equivalent if not faster even.
I mainly just worked on Tour and learned as I go. When you run into a problem don’t just copy the stackoverflow answer, actually read into why it works/didn’t work. Best way to learn is by doing it imo
Don't forget NaN and Infinity.
How comparable is this to Bluma?
&gt; Is it a good way to access the native Android API in PWA through localhost? That's not a question mark at the end?
Hi /u/maximus_19, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/myrrtle, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ARFREYR, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Lastly, instead of all the above, if you just want to showoff your project, feel free to post it to our weekly _"Showoff Saturday"_ post. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/KnownYam322, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/userexperienceguy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/iam_cici, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Rohan200220, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/rangelstoilov, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Right, good call!
Thanks!
Worked some with this and it's a pretty nice implementation and it looks good. 4/5 would use again
This is gross.
Hi everyone, Mocklets has just released its latest version 2.0 and it has been feature loaded. The version has introduced features like Open API 3.0 support, Using API as Proxy, Randomised responses and lot more🙌. Try out the new Mocklets v2.0 at https://mocklets.com
It is, but the question is for gathering opinions
Very interesting, thanks for posting
`data-` attributes allow you to store anything you want and then retrieve it from that HTML element via the data array. In this case it looks like an id that's automatically inserted by React for some internal purpose, or perhaps something along those lines.
I guess it it varies from person to person. In my case, users can pay for an account without ads. Or you can always go to the competition, etc.
You're welcome!
Can you change the font size without a bookmarklet yet? That would be some bleeding edge technology.
I don't get that hate toward Chinese techs and solutions. Is this some new age nationalism ? Some fear of being spied on ?
I've used this before, and it worked alright. Last time I reached for it was in a next.js app, and I had to ditch it because I couldn't get the styles for the components to work. I realize that next.js is a bit different because of how you interact with your webpack config via a next.config.js file, but it shouldn't create a headache just to start using a ui component library. Maybe the blame should be placed on next.js, but either way it was too difficult to get up and running with it. Ended up using a different component lib that 'just worked'
Jesus Christ why. Just `{...myObj}`
I suppose you could think of it as somewhat of a boycott. It's might not be this specific service that the Chinese are spying on you through. However, after they've done it enough through other means, you're avoiding going them more business.
Two seconds on google… https://stackoverflow.com/a/33967810/74568
Just a suggestion, change your npm config to store the global node_modules somewhere that doesn't require root to access it... I would discourage everyone from running sudo npm
How do you know if this UI framework is the second most popular?
good overview, but imho the last two examples don't make sense. When I use `try{} catch{}`, I know that the error doesn't get propagated outside of the function, so no one should expect a `.catch()` to catch something, no matter if the function is `async` or not. Similarly, A `try{} catch{}` block with a Promise inside of it doesn't make sense. That catch block would never be executed, as you correctly explained before.
The font on this site is Times New Roman. Odd choice.
EB Garamond, but close… I'm running an experiment with it at the moment, and working on another template at the same time. Sorry about this. :-(
/r/LearnJavascript has a nice amount of resources you can use, such as documentation, tutorials, books, online courses and videos, etc. Ask your question there.
There are plenty of online sources such as codeacademy, w3schools and so on. There are always courses you can buy from Udemy.
[https://www.freecodecamp.org/](https://www.freecodecamp.org/) Start there. But really all you need is the will power and any good introductory course will do to get the basics. Most programmers are self taught, even the ones who go to University.
imo ramda's pipeWith is a better alternative to monads. it's simpler, cleaner, and less lines of code. [https://ramdajs.com/docs/#pipeWith](https://ramdajs.com/docs/#pipeWith) ```javascript const LEFT = 'error'; const pipeEither = pipeWith((fn, res) =&gt; res === LEFT ? LEFT: fn(res)); const result = pipeEither(foo, bar, baz); ```
RSS uses XML, so look into XML parsing.
Hi /u/gilibaus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mabhinandan41, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MooMoooCows, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/vladis466, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/manyseveral, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Yeah, there are definitely better solutions, I guess what I really meant to say was I can't believe there's not a _native_ solution for it yet.
You can. Check out w3schools dot Com. That's how I Learn.
I'd use [DOMParser](https://developer.mozilla.org/en-US/docs/Web/API/DOMParser) and then a simple `yourxml.querySelectorAll('item').length` should give you the number of entries in that xml.
&gt; Another thing to think about is that exceptions make our code impure. I disagree. A function that throws an exception is still referentially transparent. If I have a function call, let's say `divide(1, 0)`, then I can replace that function call with its output, `throw new Error()`, and the program's behavior is unchanged.
tl;dr Here's the before and after. OP's code with exceptions: function zipRow(headerFields, fieldData) { if (headerFields.length !== fieldData.length) { throw new Error("Row has an unexpected number of fields"); } return _.zipObject(headerFields, fieldData); } function addDateStr(messageObj) { const errMsg = 'Unable to parse date stamp in message object'; const months = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]; const d = new Date(messageObj.datestamp); if (isNaN(d)) { throw new Error(errMsg); } const datestr = `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`; return {datestr, ...messageObj}; } function processRow(headerFieldNames, row) { try { fields = splitFields(row); rowObj = zipRow(headerFieldNames, fields); rowObjWithDate = addDateStr(rowObj); return rowToMessage(rowObj); } catch(e) { return showError(e); } } OP's code with either monad: function zipRow(headerFields) { return function zipRowWithHeaderFields(fieldData) { const lengthMatch = (headerFields.length == fieldData.length); return (!lengthMatch) ? left(new Error("Row has an unexpected number of fields")) : right(_.zipObject(headerFields, fieldData)); }; } function addDateStr(messageObj) { const errMsg = 'Unable to parse date stamp in message object'; const months = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]; const d = new Date(messageObj.datestamp); if (isNaN(d)) { return left(new Error(errMsg)); } const datestr = `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`; return right({datestr, ...messageObj}); } function processRow(headerFields, row) { const rowObjWithDate = right(row) .map(splitFields) .chain(zipRow(headerFields)) .chain(addDateStr); return either(showError, rowToMessage, rowObjWithDate); }
You do understand the limitations of using the spread operator, right?
&gt; I don't get that hate toward Chinese techs and solutions. I've had enough problems dealing with github issues written in english. &gt; Is this some new age nationalism Wouldn't that involve something like healing crystals or pyramid power? &gt; Some fear of being spied on ? We already have enough problems with our own abusive tech companies, we don't need abusive tech companies controlled by abusive governments too.
Lazy lazy article. many of the frameworks are deprecated and/or have not been updated in many years on up to nearly a decade
Well, I can understand that you can't trust closed source software from China based on that fact. But ant design is first a design guideline, which basically wouldn't even need a line of code from them to respect. Then second, ant design and implementations in JS framework are open source and MIT license, available on github. Clearly nothing to fear of here.
Is there an official upgrade log that I can link to others? Features seem interesting and might fit our used case.
try changing `var addss = result.address1` to `window.addss = result.address1`
True that Chinese issue are a problem in github when you work with it. Am not English at all but it's common sense that code is English based and issue revolving around code should be provided in English. Even someone that doesnt understand very well English would have a good translation with any tools to translate from English to whatever language existing. The reverse is not true. As for the other part, it's open source, and MIT. There's no hidden part in the code of either of the version of ant design. Nothing to fear yet. Most backdoor in Chinese product are in closed source applications and especially because of that fear, no doubt there's code review of people to get the first article on medium "how ant design steal your work". Amalgams are bad for development. Ant design has the merit to try out a different approach than material design. Else I respect your decision of not using it anyway, I don't either, but that's just because it does not please me.
sorry couldn't get your question. If you need detailed explanation, please drop us a line at support@mocklets.com. We would be happy to help.
I keep receiving the same error
Hi /u/jraykov, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[https://github.com/concave-org/concave](https://github.com/concave-org/concave)
I believe `clear()` is a reserved function so when you click the button your function isn't running. I renamed your function and everything works as intended. Easy way to debug something like this is to throw a `console.log('test')` call into your function to see if your code is being ran.
you need to put all your code in the function block with the variable - it's an asynchronous function so it won't be called until after the rest of the code is run
The submitter is the author. There are kinder ways to word your feedback imo.
Clear is not a reserved function. See https://stackoverflow.com/a/7165861 However, maybe resetCalculator() is a better function name. Tip: reset the form. Document.getElementById('thecalc').reset();
https://bitbucket.org/anuj_shah/codechefleaderboard/src/master/
Thanks for your time and advice, It seems when I have changed the function name, it all magically works? must be something to do with using the name "clear" as a function. I have tried Document.getElementById('thecalc').reset() , and nothing happens for me. :/ &amp;#x200B; But I have managed to get it working due to the name of the function which seems really odd, must of been bad luck for me too choose that name lol! But again, I really appreciate your time answering and helping.
Thank you for your help! this was the fix, of all names I picked to name the function, I had to pick the wrong one lol! This is definitely one I will bare in mind for the future, and will help me develop more basic projects. So once again, thank you. And the console.log tip is GOLDEN!!!! Any more advice you have, feel free to pass it on. &amp;#x200B; Thank you &lt;3
Brilliant!
Hi /u/BenHarrisFitness, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Aakash23, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/renurawat, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Ant is pretty cool and definitely worth the recognition here
Need to see array. Also, what does thos show in console: `console.log(typeof arrayName);`
Hello. I added the function to the description—Never posted code on Reddit before so I’m not sure if there’s a way to format it :-/ When I do a typeof on the array, it returns true.
Using [XHR](https://developer.mozilla.org/docs/Web/API/XMLHTTPRequest)
Actually, some of these look like they print when I remove any extra text from the console logging... Not sure if that’s a clue or not... It’s just so inconsistent... That doesn’t impact the .length tests though. They’re still just coming back empty...
Are you trying to make the request from the browser or Node? From your pastebin, the `require`s make me believe this is Node. The `http` module will allow you to make requests without third party packages. Otherwise, Request or Axios will work fine too. I don't think Request has anything to do with the speed of your calls. It's more likely to be the endpoint you are hitting that is slow.
I think he said is impure because you return another type in your function, so its not referentially transparent. &amp;#x200B; If a function say that return a String, i need to always return a string no matter what. So you can workaround with monads, your function always return an 'Either', no matters if is an error or a value inside that monad.
many apologies! thank you for sharing that sub reddit with me. I wont make that mistake again :)
Indent everything by 4 spaces to retain formatting :) &lt;- 4 spaces
To me it looks like you’re creating an array, and then assigning to keys. In JS arrays are objects, so you can assign properties. So this is why length and logging aren’t showing you anything. Try just using an Object (or a Map) and doing Object.keys(myObject)
&gt; If a function say that return a String, i need to always return a string no matter what. That isn't required for referential transparency. So long as every input always returns the same output -- for example if `f(1)` always consistently returns a string, and `f(2)` always consistently returns an array, and `f(3)` always consistently throws -- then that would still be referentially transparent. We could still, for example, omit the call `f(2)` and replace it with its output.
https://github.com/artcom/eppsa-ksm
That was some of the most enjoyable to read javascript I've ever come across. I will definitely refer back to this whenever I ever get involved with publishing on npm
Thank you! I’ll try to remember that when I get on my laptop... Not sure I can remain sane trying to do that on my phone.
I wish I could use a map object 😑 The person in charge of this said he wants it this way though. Basically it’s an array that’s had it index values replaced with keys and another array assigned as the value of each key. Thank you for your help.
The person in charge is an idiot. You never do that kind of stuff in JS, the type system is confusing enough without setting traps for yourself
Definitely this. You’re trying to square peg round hole an array where an object fits.
If you liked this and want a real deep dive, read the articles from v8 blog (Chrome's JS engine) - https://v8.dev/blog
And what's the most popular?
Your post was removed due to it being asked like a question with too few details, causing us to disregard it as a newbie question. To avoid being flagged as a newbie question, we always suggest that you throw something well-thought out up for discussion instead of asking very open-ended questions, as it's easy to read it the "wrong" way. In your particular instance, giving an example of what you're creating and some of your initial thoughts behind would have qualified it as a discussion post rather than a question post. The first shows initiate, the latter being lazy. Hope this makes sense!
request is just a (fancy) wrapper around the native http module. You can try using http directly - it doesn't get faster than that. As u/avlois1 said, your problem is probably elsewhere Look at the code sample after https://nodejs.org/api/http.html#http_http_request_url_options_callback
Incidentally, request is being retired, so if it's a new project I wouldn't use it
LOL - josi hasn't been updated in 9 years. It's so old it doesn't even have a package.json
Material UI, of course
Hi /u/userbel21, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thx I'll have a look
Looks great, most of my JavaScript code is also functional'ish
Yes it's send directly from Node. &amp;nbsp; I though that maybe the "slow request" was indeed not my fault since I don't really have any code that could slow it down, but the endpoint I'm hitting is to buy an item and I'm often too slow to get it. Made me wonder if I was missing some more efficient way to send the request, since I don't think my code could be optimized in any other way. &amp;nbsp; And since it's a race, the problem doesn't come from my pc either (I could be too slow because of ping issue) because it's running on a VPS that ping the server with an average of 0.9ms delay. That's why I'm thinking that my problem comes from my request &amp;nbsp; Anyway, I'll have a look at XHR and http to see if I can get any better result. Thx ;)
This should help you understand what is going on: [https://jsfiddle.net/pek2jxmg/](https://jsfiddle.net/pek2jxmg/) Basically, you're trying to `push()` to an array item that has not been initiated yet. If it doesn't exist in an array, how can it be push to? If you want `array['element']` to be an array that you can push things to, you must first initialize it as an array. Like so : `array['element'] = [];`. Afterwards, you can `push()` to `array['element']` as it is now initiated as an array. Because it now exists, and is defined. Not undefined. &amp;#x200B; Edit: Verbiage/grammar.
I agree with the others that the person in charge has no idea what he’s talking about. A plain JavaScript object is what you need. And btw, if you need the object equivalent of `array.length`, you can generate an array of the object’s keys using `Object.keys`. E.g.: ``` const products = {/* 128575: [arr1], 239156: [arr2], ... */}; const keys = Object.keys(products); const length = keys.length; /* If you need to iterate over the properties of the object: */ for (let i = 0; i &lt; keys.length; i++) { const productArr = products[keys[i]]; /* Do something with productArr */ } /* Or you could do this: */ Object.keys(products).forEach(function(key, i) { const productArr = products[key]; /* Do something with productArr */ }); ``` Anyway, there are better solutions for your use case.
Is it not already succeeding? Unless you say that you want to force TypeScript on every javascript developer?
spam
Good stuff. I suppose this is the paradigm I tend to take when writing JS. I’ve also seen some pretty good implementations of monads written as classes, with `map`/`join`/`bind` methods on the prototype. Then you can create a `new` monad for each mapping/binding operation with another function. It’s kinda weird seeing an FP concept implemented with an OOP tool like classes. It just reiterates your point that FP is a *concept* whose implementation can vary depending on the situation.
Good read
Wrote this to reflect on my first week experience with TypeScript after a decade of JavaScript 😍. Hope this helps someone to consider TypeScript for their project. Mainly a side by side comparison how both looks in the simplest form.
I know the feeling, using TypeScript is most of my projects but sometimes get yelled at by other developers that want me to redo it without it :(
Even the statement debugger; in code does not work?
I have been using typescript for few years. Never look back since going typescript
Looks like you are leaking credentials in your App.js. I suggest moving them to an env file that is ignored by git and then referencing the variables via process.ENV
Having seen FP overdone first hand in production code. I think this article does an excellent job of helping us to use it quite well.
There’s a talk from the creator of Node, Ryan Dahl, where he talks about what he would change with Node modern day, and he said something along the lines of regretting doing things because they were “cute”, and not practical. Emojis every other word in your article is cute, not practical. I wish medium authors would stop this bs.
💯
I don't know a single person who uses material ui with react. What a bizarre pairing.
Feedback noted. Ill reduce emojis in my next writings. Thank you. Had added to add visual interest. But clearly it is not working.
I personally don't believe that typescript is beneficial to normal javascript size programs. Maybe huge ones, I don't know, who is writing huge javascript programs anyway? As one case in point: I've experience very very few bugs that would have been caught by typing, especially the type bolted onto the language, but its possible that the added verbosity of the language could have contributed more bugs to my code.
Not a fan of the cookie modal.
I can see your side of argument as well. Making the code verbose is a fair point, but i feel for team projects this is worth it. Curious were your comments for a team of 3+ developers or less as i have noted in the article.?
I'm actually very sceptical regarding preventing of bugs. In the case of typescript the bugs that can be prevented are a very narrow layer and not that significant. Design before implementation and working smart - that's, at best, a very bold statement. The main reason I really like Typescript, though, is editor tooling and, maybe, readability.
Agreed. Editor tooling may be a great point that i overlooked. Cannot imagine writing without VSCode to be specific.
Kyle Simpson has a whole book about this idea [Functional Light JS](https://github.com/getify/functional-light-js), it's freely available and opensource on github.
been awhile since I looked at my .vimrc, but looks like it's [clipboard=unnamedplus](https://stackoverflow.com/questions/30691466/what-is-difference-between-vims-clipboard-unnamed-and-unnamedplus-settings)
&gt; Curious were your comments for a team of 3+ developers or less as i have noted in the article.? I hear ya. However I wonder at people's use of the phrase 'team of x+ developers'. How many javascript projects do you use (frameworks, libraries) that were made with teams of 100's of people and still work great? There's so much high quality software out there written in python, javascript, elixir/erlang, etc. How did they manage to do it without static typing? Personally, I feel what really counts in software development is disciplined [construction](https://en.wikipedia.org/wiki/Software_construction) and good decisions, everything else is just a wash.
This is great. Honestly, just doing what you can to favor function purity where possible, and minimize state tracking, goes a long, long way in keeping your code sane and maintainable. This kind of "functional-ish" programming actually made totally rethink how I approach OOP as well. Carrying state in shared service classes is really deeply problematic. Keeping services stateless whenever possible, and just making services bundles of pure-ish functions, makes a world of difference in how many bugs you have to deal with.
the downside to not throwing errors is that you have to error check after every operation you do. &amp;#x200B; Otherwise, those are classic OO design principles
Agreeing with you disciplined construction. In my team, not every developer is the smartest I have worked with. Where TypeScript i found helps is make the average developer be a bit more careful on coding. So it forms a safety net.
How does this compare to App Scope? The inclusion of paid apps?
True. At the moment Paid apps. I'm also adding custom APIs where you can connect to different Outpan services from within your JS code which should make your apps more powerful.
It has a lot of bad parts, but the payouts are great. The ability to much more cleanly plan and design your projects is great.
I hear those guys. "If your gonna use type-script, why not skip all the compiler overhead and BS and us JS anyways?" Why, because writing clean, raw JS correctly, is fucking hell. Anyone can however hack together garbage in JS and call it "working" but TS prevents you from ever doing that (if used correctly) so why the fuck wouldn't you. /rant
&gt; However, In my team, not every developer is the smartest I have worked with. Where TypeScript i found helps is make the average developer be a bit more careful on coding. So it forms a safety net. I hear that. What I really do like about using typescript is its nice to see your dumb mistakes in the editor rather than in the stack trace. BTW, I wan't typescript to succeed too.
😀 cheers mate
😃 Cheers, mate
Not finished but seeing if im headed in the right direction. https://github.com/rayzon1/random-user_public_api
&gt; 30 years of experience Old guy doesn’t get modern programming trends. Shocker. Can’t rag on you too hard though, I’m sure I’ll be that guy someday.
Also, checkout [Mostly Adequate Guide to FP in Javascript](https://github.com/MostlyAdequate/mostly-adequate-guide)
How would you make word counter script more powerful?
Static typing is a 'modern programming trend'. I hope you are just trolling.
I know some people consider this guy really good but I, personally feel he writes some of the least eloquent code I’ve seen from someone so knowledgeable. In my opinion he try’s way too hard to be cute.
&gt; who is writing huge javascript programs anyway? Ya geezer lol
So help me out, who is writing huge monolithic javascript programs?
See there’s this modern trend called a web app, pretty crazy right?
The book is solid though, and the concepts are reasonable and well explained. AND he's decided to make it freely available. You don't have to like him to appreciate his contributions
I am pretty much at the same place at the moment, though I'm looking at trying Either types to cut back on using Exceptions and if(error) blocks.
Ok, so you think web apps are huge, monolithic programs? That's cute.
Who is "some people", and why are you listening to them?
I don't know much about Django but if its anything like ruby on rails then yea, you can crank out an app really quickly. It also helps that's its only a server side type of app, so its not as complicated as a SPA Why is this? Because rails pretty much comes with everything you need and very nearly configured. And because of ruby's crazy level of metaprogramming you are pretty much programming in a "rails" DSL and not ruby. &gt; a) Is it impossible/impractical because of JavaScript language? Again, just speaking for ruby. Javascript currently doesn't offer the same level of metaprogramming. &gt; b) Or maybe it is possible but we still have to wait several years for such library? Javascript people tend to prefer a more verbose, less magical way of programming (until proxies ruins it!)
Because everyone has different opinions on web application frameworks. Because there's hundreds of them and they're all different. Just find a few that you like, get fast at using them, and you'll be able to write web applications fast.
I have seen a few such opinions on the Internet. I can not quote them now, but I will try to find a few. Additionally my friend who knows Django and uses React as a front-end developer agreed with it.
There are cases where not including `async` can create unexpected bugs. For example: ``` function foo() { someSyncFn(); return someAsyncFn(); } foo() .then(() =&gt; console.log('done')) .catch(error =&gt; console.log('Caught', error)); ``` In the above example, if `someSyncFn` throws an error synchronously, the promise will never be returned, so the `catch` won't work. If you add `async` to the function, `catch` will work as expected.
Django is a backend framework. Most of the frameworks / libraries you mentioned in your post are for frontend, so they generally don't overlap.
I tried to remember what I have read recently and it was this amoung others: [https://www.reddit.com/r/django/comments/851bx6/new\_to\_backend\_why\_would\_anyone\_learn\_django\_over/](https://www.reddit.com/r/django/comments/851bx6/new_to_backend_why_would_anyone_learn_django_over/)
Interesting. But as it throws the error synchronously, won't it simply throw a regular exception? And if you wanted to catch the error you could wrap it in a try/catch.
Have they fixed the issue with like icon bloat?
I recently purchased his book, and so far I think it does an awesome job of laying out a very practical paradigm for functional JS. One of the things I’ve noticed after using pure FP languages for a bit is that JS/TS don’t quite have the right tooling to enforce functional purity in a truly helpful way. The main benefit is the robust compile-time type checking and pattern matching. You simply can’t have that in vanilla JS because the compiler can’t rely on the guarantees of strict functional purity. So with that said, you can get some of the benefits of FP via sheer discipline and experience. But you don’t have to go all the way, and it’s often not worth it anyway.
This is a great resource ^
Me too, but it's mandatory
I couldn’t agree more. What’s interesting is that, even when using a highly function-oriented code structure, I still find myself using some aspects of OOP, like using a set of “getter” functions to interface with my backend API, just so I don’t have to refactor a massive tree of functions if my API changes. IMO, that concept of abstracting the data interface layer is one of the best ideas to come out of OOP. But using those interface methods to define *behavior* around that data and *mutate* it—that’s one of the *worst* ideas to come from it. It’s strange how both paradigms end up producing vastly different methods for solving the same problems. It’s been helpful to learn what OOP and FP have *in common*. I have a feeling those are the principles we should take seriously.
try npm install ws some modules are probably not listed in package.json and that's why you are getting missing module errors even though you did `npm install`
&gt; some modules are probably not listed in package.json Probably because there is no package.json :) I'd just delete node_modules then try running it again and see what's missing. Definitely to start off, run: `npm install --save ws serialport`
YSK there *is* a [proposal](https://github.com/tc39/proposal-pattern-matching) for patern matching. For better or worse
Blog post please :)
I stopped trusting them after this "[Chistmas Egg](https://www.reddit.com/r/programming/comments/a9hs3u/the_ant_design_christmas_egg_that_went_wrong/)"
 browser application to draw, print the text. in programming language typescript. in not found google source... help! Help me find I need source code
Hi /u/throwawayjQuery, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
That's neat! Did you need a server to keep them in sync or is it some fancy trick?
Hi /u/DaffyDuck15, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Check out proxyquire if you're using commonjs modules (`require('foo')`) or rewire.
I'd say, maybe try to split your library to micro-libs. Like the router deserves to be it's own module :D
Easiest way to check any js file for syntax errors from the command line.
I'd say you hadn't have a very deep look at it. The built-in in router is a feature and tighlty coupled with the hole rendering mechanism. You can't simply split it out.
Also, what is the point of setting theese information to the persistent storage at each start of the application? Point of persistent storage is to persist "betweeen" restarts of an app. Just use plain code constants or Context API to pass down some informations. Using localStorage just to pass props deep down seems like horrible antipattern to me.
This actually looks pretty cool. Just as long as I can get a compiler/linter that checks all paths for me before runtime.
There's Math.random(), which returns a float from 0 - 1. So to get a number between 1 and 6 you'd have something like `Math.floor(Math.random() * 6);` and for 2 dice you'd just do it twice. Is this what you're looking for?
Maybe stating the obvious, but be sure not to just take a random number between 1 and 12. With two six-sided die the odds of each outcome are distributed unevenly.
Pushing everything to master is +100 no fucks given.
This project was part of the hackathon
Do your own homework kid.
I'd add (JavaScript Allongé, the "Six" Edition)[https://leanpub.com/javascriptallongesix/read] to the list of good functional JS resources.
Got it, could have also used Hooks
Hi /u/cedpoilly, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I am well aware that im regarded as trash when it comes to coding
Still have to rely on the "add to home screen" option to get rid of that big X on the corner. Now if only that didn't block camera access. The web on iOS, ladies and gentlemen.
A couple more resources to add: 1. [https://jrsinclair.com](https://jrsinclair.com) 2. [“Don’t Fear The Monad” (YouTube) (by far the simplest explanation of monads that I’ve seen)](https://youtu.be/ZhuHCtR3xq8)
you can try using [https://momentjs.com/](https://momentjs.com/)
getTime() method of Date gives you msecs since epoch
Ah yes Date.parse we meet again. The string that you are passing into it is not something that is a valid string according to the specification, which means that the spec tells us that the result is "implementation specific" i.e browsers can do whatever they want (either try and paste the string or return NaN). Either you will have to pass it a valid string ( "2019-05-16T13:38:02" should work) or use a date parsing library.
new Date(dateString).getTime()/1000
the weird things, all the browser can parse this string "2019-05-16 13:38:02", but since im develop in react-native... it only resulting NaN, so i wasnt sure is it the string or the javascript in react. and my head almost explode rn and now im trying to use moment js, but i still cant find from date to unix in the docs, only unix to date
yes, not sure if im dumb, but i still cant find from date to unix in the docs, only unix to date
Hey did you write or were involved with the "Singel" pattern? I read that article a while back and it never left my mind. I think I checked your lib then as well and was quite impressed by it. I haven't had the chance to use it yet but it looks very promising. I really hope you manage to grow it and its community. Cheers
According to https://momentjs.com/docs/#/displaying/unix-timestamp-milliseconds/ the .unix() method is want you want.
You’re reading too much into it.
Is this a node API only or would it potentially work in browser? Cause that would be amazing.
yeah, that's a fantastic blog. My post is just an introduction.
&gt;2019-05-16 13:38:02 try moment().format('x')
Under the hood it uses this lib [https://github.com/antelle/node-stream-zip](https://github.com/antelle/node-stream-zip) which extracts archives in the file system. So unfortunately no chance to get it work in the browser.
Ahah I wish there was a fancy trick to keep them synced like that. Unfortunately p2p connections are non existent in WebSockets. Yes there is a server that keeps them synced. If I could come up with a serverless solution though that'd be really cool. But I'm open to ideas if you have any!
or for custom date try moment(yourdate).format('x')
I figured it would be something like
Duh
The horse is dead already.
finally did thnx
I feel like someone that is just now beginning to learn JavaScript probably knows what a promise is more than they know what a callback is.
Login doesn't work, "invalid username".
try signup and the login
I was low key hoping I'd learn something I'd never heard of haha. JavaScript devs and their shiny things 😅 Not on my behalf, but good luck looking into it!
try again Its still in development so refresh db if app restarts
I thought I had my reddit settings wrong and then I saw this was posted 4 hours ago..
Hi /u/shoeeSsaize, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dominic_l, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/13011803, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dellryuzi, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sirluiss, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/nasicknadeer, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/TIPSYwithWATER, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/iwiik, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Andy_Powers_Clique, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/throwitawaylol123, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/chaminduj, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thanks! I tried it but it did not work :(
No, must rewrite articles in my own words so I can put on my resume "Maintain a tech blog".
How do you mean it didn't work?
I'm liking it! Definitely early stages of something cool. Already better than twitter with the edit button. Coming from a front end perspective, it could use some more front end work, perhaps less of the card look, more of a list, less box shadows.
That’s neat, a couple questions... In this example would the state of a book simple be a simple property of the book class ? A property can only have one value, or state? Also, where does a state machine store the state and the history or do you have to code that separately?
Not in every case a function receive the same input and return the same output. Theres functions that depends on a ajax request or something and f(3) can be different over time. And even if is not the case still not referential transparency, because i need to know how input f(3) became an error and not an integer anymore. You will need to know the implementation of f.
Nice job! There is a free option to host web pages on github. Take a look at [https://pages.github.com/](https://pages.github.com/) . Currently when you update your git repository your codepen would be out of sync. Using github pages the demo will always be fresh.
An ajax call would make the function impure, correct. And that's true whether we use exceptions or monads.
Thanks :)
There is something you might be interested in looking into. It's called rtcdatachannel. Which might be useful for this sort of things. It allows for peer2peer connections through websockets.
You can use a monad that represent computation over time. I like to use [data.task](https://github.com/folktale/data.task) lib but i think [crocks](https://evilsoft.github.io/crocks/docs/crocks/Async.html) also has a monad to do this
Never too late to jump in and pretend to be cool before it was cool, right?
It seems as if the person you replied to specifically doesn’t appreciate his contributions, due to his coding style. They weren’t saying they didn’t like him so your comment doesn’t make much sense.
From my understanding, state is usually a Boolean flag(isInLibrary?). If you wanted to get more complex, you can also roll state into multiple values such a (languageType) and set the state of the book to a specific language. Might be a bad example since books don’t change languages. But the idea is that it can be other things than a off or on switch. Storage of state depends on what your doing and your frontend framework. You can isolate state in a component or keep it in a parent component. History gets a bit tricky and complex, I’ve never done it before but it might require some join model on the backend that more or less creates copies of the existing state during whatever time.
The native solution to jQuerys html method is insertAdjacentHTML. It works exactly the same with the exception including an additional parameter for placement. https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML
A basic state machine keeps the state in memory. What you'll need to do in your app is to keep an instance of your state machine. We use React (I'm working on a follow-up post on that) and use the `useMachine` hook from [@xstate/react](https://npmjs.com/@xstate/react). But this can also be as simple as assigning the instance to a class property or a variable. Tracking history in the state machine is well [documented](https://xstate.js.org/docs/guides/history.html) and since it's also tracked in memory it's accessible in the same way as the current state. XState also offers a way to persist and rehydrate state: [https://xstate.js.org/docs/guides/states.html#persisting-state](https://xstate.js.org/docs/guides/states.html#persisting-state). I hope that helps!
Yep you're right. Having too many booleans in a conditional (one could even argue there shouldn't be more than one) is a sign that a state machine could be of good use. The state machine for a book can be extended to things like `expired`, `new arrival`, etc. Language would probably be a property of the book model (data) and not part of the state machine. It doesn't define "behaviour" but is an attribute. My experience with [XState's history nodes](https://xstate.js.org/docs/guides/history.html#history-state-configuration) is actually pretty good. We've used it for back buttons / history back to former screens, when the referrer is not unique (imagine search results in an app that could've been dispatched from anywhere). When we've mutate data and the user wants to go "back", we don't target the history state node but intentionally transition into a different state. Think `List of entities → Detail view → Edit view → Submit changes → List of entites → Back button transitions to Detail view, not Submit or Edit`. I hope that makes sense!
My apologies
Uh great now ill have to bookmark this post since so much resources have been piled up here already xd
Those don't do the same thing at all - and it doesn't do the specific example I gave.
I use state machines A LOT in Python. I’m learning JS and it’s nice to see familiar tools.
Cool! Does it work for other video services as well? This would be great for long distance relationships if you wanted to create a product out of it.
Hi /u/nugupotato, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
oh I see. Thank you.
You sure about that? I just tested inserting a script tag through the inspection console and it worked fine. I guess I don't understand what you're trying to do. Are you dynamically inserting a script tag after the page has loaded expecting it to run the js? I don't think that works with either approach. As far as inserting HTML into the DOM via a string .insertAdjacentHTML() works just the same as .html(), .prepend() and .append().
Yes it does. So currently it works for Netflix, Hulu, Youtube, Amazon. I could make it support more but those are just what I have so far.
This is cool. It looks like it does what `.find()` does. If that's correct, what is a practical application where you would use something like this, in which `find` wouldn't be able to do the same thing? Thanks!
I created an RMA app for a company using a finite state machine. I based the architecture around Jira. Worked really well except creating custom workflows was never implemented so it was quite rigid as a programmer needed to manipulate the state machine configs.
Word counter! Now with more ** *molecules* **!
technically, \`throw X\` is a statement, not an expression, and so it cannot be substituted for the result of a function call. &amp;#x200B; Additionally, the stack trace and other information within the error itself will be different, and so even if you did something clever like \`(() =&gt; { throw new Error() })();\` it still wouldn't technically be referentially transparent.
Learn.javascript.com
Check out w3schools
I still think Promises and async/await are a big fat wart in JS. I was there 10 years ago when Remy Sharp was pushing it, I saw when it failed to be included in Node because it was too weird, and now I still see all the edge cases where it still is weird.
Hi /u/WandaFriedman, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Buy Zillow Reviews is one of the best quality, reliable USA, UK, CA, AUS, SP, and others countries Zillow Premier Agent Reviews Services provider. at the cheapest rate. if you want to more information just knock us-[https://usazillow.com/](https://usazillow.com/)
If you have a database with states and want to have a machine like this client side to manage state, the you initialize the state to the value in the database right? It seems cool and a sure way to keep the state logic in a limited part of the code!
If you liked that, I recommend: [http://gameprogrammingpatterns.com/state.html](http://gameprogrammingpatterns.com/state.html) [https://refactoring.guru/design-patterns/state](https://refactoring.guru/design-patterns/state) and last but not least: [https://github.com/jakesgordon/javascript-state-machine](https://github.com/jakesgordon/javascript-state-machine)
Hi /u/webavail, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; Faster load time. We’ve eliminated the worst performance cliffs that made the debugger slow to open. This has resulted in a 30% speedup in our performance test suite. We’ll share more of our performance adventures in a future post. &gt; Excellent source map support. A revamped and faster source-map backend perfects the illusion that you’re debugging your code, not the compiled output from Babel, Webpack, TypeScript, vue.js, etc. Generating correct source maps can be challenging, so we also contributed patches to build tools (i.e. babel, vue.js, regenerator) – benefiting the whole ecosystem. &gt; Reduced overhead when debugger isn’t focused. No need to worry any longer about keeping the DevTools open! We found and removed many expensive calculations from running in the debugger when it’s in the background. &gt; Predictable breakpoints, pausing, and stepping. We fixed many long-standing bugs deep in the debugger architecture, solving some of the most common and frustrating issues related to lost breakpoints, pausing in the wrong script, or stepping through pretty-printed code. &gt; Faster variable preview. Thanks to our faster source-map support (and lots of additional work), previews are now displayed much more quickly when you hover your mouse over a variable while execution is paused.
.html() and .innerHTML *replace* the DOM with the given HTML, insertAdjacentHTML adds it. The use case I was describing was that jQuery will actually scan the HTML for script tags and evaluate them. Which, if you're adding some HTML by string with a script tag inside is probably what you would want innerHTML etc to do.
Yeah a `try/catch` block would catch the error, but most readers won't assume a function might throw/return both sync/async values. Adding `async` to the function just ensures any sync errors/returns are promoted to async.
I see. In that case can't you just empty the parent element before hand with innerHTML then insert? Or even just use innerHTML by itself. From what I've seen in the jQuery source file it uses innerHTML by default unless there's no support for it.
You could check out my previous post ! I laid out my first year with JavaScript the sources I used and the projects I did !
This days I don't ask for more than predictable breakpoints, chrome has been kinda unstable at least for me this past few weeks, some times breakpoints work other times don't... Well guess I'll give it a try to Firefox DevTools
Hmmm this is pretty tough to read , if you haven’t found help by tonight , I’d be happy to walk through your code with you this evening , via something like discord , but it seems like your trying to do hit detection am I right ?
Can you elaborate please?
&gt; So help me out, who is writing huge monolithic javascript programs? There are many big, typed, javascript programs just of the top of my head: - WYSIWYG Editors for all kinds of documents - Content Management Systems - Image Editors - Video Games - Project Management Applications - Math Formula Editors - Website Builders
I will not be home tonight but yes I am trying to do the hit detection.
Are by chance using git ? If so I’d be happy to look at that
You can't sequence errors while you're doing functional maps. You can either do it procedurally one by one, or do a Promise.all, but where's the in between which could be handled like a state machine? The key problem is that failure is also a state machine, whereas functional is launching by lists. You can't handle failure as a list when the 7th then the 3rd might be in sequence that needs to be handled differently early failure like the 2nd then the 6th.
Providing a schema helps do less work, similar to how serialization works in Go. Performance gains seem to come at the cost of flexibility and code complexity.
If git is a program to write code then no. My school is using the java script in [Code.org](https://Code.org) :(
Oooo is this the little puzzle piece JavaScript website ?
Git is a code repository. A place to store and update code
It has blocks but can also be written out. It is completely open to do whatever i want on this particular project.
I see yeah I remember seeing someone else using it , well feel free to dm me any night this week after 8pm Chicago time
I might send you a message tommorow.
What is a RMA?
The benefit of types is not only in catching bugs, it also helps to increase productivity. When you are in an unfamiliar function you can easily decide what you can do with the function parameters. Here's an example, You have the twoWayMerge function with jsdoc type comments and without and you must use it, which one do you prefer and why? /** * Detects the differences between 2 strings and merges them if there is no conflict. * @param {{ancestor:string, left:string, right:string}} mergeContext * @returns {{status: MergeStatus, merged: string}} */ function twoWayMerge(mergeContext) { return merger.merge(mergeContext.left, mergeContext.right); } function twoWayMerge(mergeContext) { return merger.merge(mergeContext.left, mergeContext.right); } I prefer the 1st one because: - if I need to modify the method I know what arguments it receives. I see an extra ancestor field in the mergeContext. - when I use it I know what it returns without looking at its implementation. It returns an object with the merged string and the status of how it was merged. In the 2nd version I would have to look at the implementation of merger.merge to see what the method returns, I would need to look at how this method is called to see what parameter it receives. Now you may say that blindly trusting the jsdoc would be a mistake. I agree and that's why we use Type Script to ensure that the type annotations reflect reality.
Thanks for the info—I will keep this in mind.
If only I could debug websockets in firefox now 😕
And we still can't resize the columns in the network tab :(
When you return a defective item to a manufacturer you open an RMA. It's a process to either have a product repaired or replaced by the manufacturer.
I'm interested in seeing how this works in larger/more complex apps. I've personally never had a good experience with trying to define an enumeration of possible states like this. Some things that confuse me about the `bookMachine` example: - What if your requirements change and you have to support lent/returned books that are damaged? Do you have to start adding states like `Lent and Damaged` and `Returned and Damaged`? Or is there something I'm missing here? - How do you represent additional data in a state? What if I need to know when a book was lent? Or how many times a book has been lent? - How do you store this data? Do you store the current state of a book (Lent, Damaged, etc.) in the database? If not, won't you have to write additional logic to determine the initial state based on the book data?
[removed]
This is so annoying, it makes the network tab almost unusable for me
Hi, nice post. I have a question about the usage: the state machine is shared by all users involved with booking books? E.g a user has a class's property called 'state' and every time that a user's state change, you use the machine state to update the user's property state with the correct value, then you can make the updating on the database. That makes sense to you? Again, very simple and comprehensible your post! Thank you.
This is a great exercise for anyone that works with Redux. I've met several web developers that think Redux is some kind of massive complicated framework because they've only ever worked with complex stores with half a dozen middleware and various utility libraries for creating actions/selectors, merging reducers, etc. The core concept is dead simple.
Hi /u/Jose_5891, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/HallucinationBomb, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/groovybeast, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/117TheWarrior, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/bosayn, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/throwitawaylol123, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
This is my top reason not to use Firefox as a main browser since I like to do the debugging in the same browser.
"[/r/javascript](https://www.reddit.com/r/javascript) is for the discussion of javascript news, projects, and especially, code" &amp;#x200B; Is this not a question about code?
What is a "normal javascript size program"? We use JS to build CLI tools, libraries, complex UIs, and API servers. Some of which end up being "huge". Others need to be consumed by "huge" apps that benefit from their dependencies exposing types. You're probably being downvoted for your condescending tone. Either you're so out of touch that you genuinely don't think anyone is building anything non-trivial in JS or you're just dismissing that work because it's written in JS.
So not just *very* useful, but ***extremely*** ***ヘ(゜Д、゜)ノ*** Ok, cool.
1 - Remember that the idea of a finite state machine is that the model can only be in one state at any given time. A book can only be damaged if it was lent, so you don't need a lent &amp; damaged state, it was implied that it was lent and we can assume the library, barring weird incidents, didn't damage the books, so you only need to specify the damage state not lent &amp; damaged (sorry if that's confusing). 2 - As for adding additional data, yea im pretty sure you would just nest things deeper, I think they just wanted to keep this example simple. Check out the XState docs to see more examples of finite state machines. 3 - The state machine and the implementation of how you store the data are separate. You make those extra decisions based on the state, they're not tied together.
# /r/javascript is not a support forum Straight from our [guidelines](http://www.reddit.com/r/javascript/wiki/index).
Wouldn't it also be impossible for a book to be in two states if the state was a single numeric property?
Chrome Dev Tools still has issues with breakpoints that rely upon a Source Map. Source Maps have been around for 7 years!
I thought I was the only 1 going crazy over this, makes the browser useless for my job.
Wtf? Do they use their tools at Mozilla?
Which version of the Dev Edition will these changes be in?
The set up scenario makes no sense, and is a terrible justification. A book got set to both lent and lost? A single property having two values? Wait, one state got saved into a date property? What the fuck did you even do? Oh, they were drunk, ha ha. Yeah state machines for dumb reasons!
apparently you actually can now as of v67.x: https://stackoverflow.com/questions/47400313/change-columns-size-in-firefox-developer-tools/47545994#47545994 i have no idea why it's behind an about:config flag, though :/
Lmao
&gt; Remember that the idea of a finite state machine is that the model can only be in one state at any given time. This is where I'm confused. It's easy to model the book example using a finite state machine, but it's just as easy to model it using regular data structures without a `state` variable. My question is regarding changing requirements and refactoring. How could you refactor the book state machine to accommodate a change in requirements that allows books to be in multiple states at the same time (lent and damaged)? This is a completely valid use-case given a library might want to lend a book even if it's somewhat damaged (maybe it's a popular book and they only have a few copies). In my experience, these kinds of changes in requirements are all too common when building software.
No. I don't think you really read my comments. I refer to a specific bonus jQuery does for us that is not part of the DOM
I was (FF just updated) having issues with breakpoints disappearing from the UI but still being hit. So no way to remove them (not in the breakpoint list either!). Not sure if it's fixed but it appeared to be source-map related as when breakpoints *were* hit, they happened in a new, duplicate tab of the file I was using.
60 is the latest stable version used in Firefox 60+
Says in the article, 67
 console.log('here')
For Safari: Settings &gt; Safari &gt; Advanced &gt; JavaScript
I made a website to do this a while back, but compared to that this is much better. I had to copy a video source url and paste it into the website, it sucked.
I'll wait until they don't screw the entire user base for a year before I consider using their browser again.
What makes this better than Jekyll?
Sometimes, they just take a (very) long time to appear in the debugger for me. Until then, I experience the same thing as you: they are hit, but don't appear in the list or the source. It's definitely source-map related.
I believe the 'date' was a misspelling error, he probably meant 'data'. About the two state assigned to book, I believe that he was exemplifying how he was having trouble solving the exercise without the help of the state machine. In the state diagram image you can see that the book can only have one state.
No problem. Also, I do want to mention something important about using an array for key/value pairs. When you invoke something like `array[123456] = someValue`, you are creating an array with (at minimum) 123,457 values, from 0 to `someValue. Those unspecified values from `array[0]` to `array[123455]` are typically called “holes” in the array, and when you iterate over the array, you will iterate over 123,456 `undefined` values before you get to your specified value. It’s almost as if you used an object, and added a hundred thousand properties to it, assigning a value of `undefined` to each of them, and then iterating over all of them until you hit one of your defined values (which would be a lot slower than the array example). The point is, iteration over a hole-y array might not perform as well as an object, because of all the extraneous undefined values in the array.
Wouldn't you agree those are relatively extremely rare?
Mozilla is on the wrong side of the culture war.
:roll: It's a gist showing basic VSC functionality. Not worth a post.
Well, it's node and not ruby, for a start
I’m what ways did they screw their user base?
You're kidding, right? Were you under a rock when they killed addons for a second time?
 // Assumes you are providing valid input: a string of 12+ numbers const maskify = (num) =&gt; `#### #### #### ${num.substr(12)}`;
Dude chill, I am just asking a serious question. That’s obviously a good reason to complain.
Apologies, I know a lot of people hate Chrome because Google is becoming the tyrannical dictator of the web. I was burned by Mozilla a number of times in the past year when addons broke the first time. They dumped all of my configuration, overall crappy devtools experience essentially crashing the entire browser if one page broke while, then after I switched back to Chrome the news that they broke addons again just validated my choice that Firefox needs to mature. [They may have been a great browser in the past but I'm done with the subpar experience, I need to get things done.](https://old.reddit.com/r/javascript/comments/bavmua/microsoft_releases_new_microsoft_edge_based_on/ekg0br4/?context=3)
Still no `debugger;` statement available like Chrome?
Yes websites do exist which can share sessions like that already. I wanted a solution that could just take place pretty much anywhere videos can be watched and remain on the page itself. Websites are pretty cool though since they usually come with chat rooms.
Thank you!!!! So this is the completion of the function itself? I couldn't get it to log and I kept getting errors for the brackets when I would console log.
You already know quite a lot for a beginner :) Looking at employee\_directory.js it seems your functions were chosen kind of "randomly", sorry to say. Before you code functions try asking yourself "what is your minimum input" and "what is your minimum output". Your functions should be able to achieve transformations of "minimal" amounts of your "input" data to your "output". If you organize it that way you get more flexible bits of code. If your code expects more data that must be organized in a special way - you will not only code more but also get less flexible code (harder to test, change, find bugs, reuse on a different page etc.) Now a bit of analysis: `generateContainer` function is rather bad - here is why: * it takes multiple arrays as params, you destructure your "meaningful" structures into arrays (less meaningful data) and then pass them as a number of params, if your function will need to take some other params or the "person profiles" become more complex - the code will become hard to read, think what happens if the profiles evolve to 20 fields of data, would you like to work on 20 arrays? * destructuring more complex objects into multiple variables is always bad (or nearly always if anyone knows a good example, your case is not a good example, sorry ) * the conversion of data you are interested in is "user object" to "html", this is an "atomic" transformation of your data which you might also use elsewhere, how would you make same transformation for a single user profile (e.g. you just updated a single user, how do you update the page?) * you stored html inside your script, if your page changes you also need to change the script, **this is ok for a simple page** but not so good once you get more bits of html genrated from user profiles - if you had 10 ways of displaying a profile - would you want to use 10 functions? What can you do? * make your function operate on a single user profile * pass the profile as an object * include the html as a template in the page, e.g. `&lt;script id="templateCard" type="text/template"&gt; html goes here &lt;img src="{picture}" alt="...." /&gt; &lt;/script&gt;`, you can use a number of templating languages or you could just use some {tokens} and replace as strings example: `function userProfileToCard ( userProfile) {` `let cardTemplate = document.getElementById('templateCard').innerHTML;` `return userProfileApplyTemplate ( userProfile, cardTemplate);` `}` `function userProfileApplyTemplate ( userProfile, template ) {` `template = template.split('{picture}').join( userProfile.picture.large);` `template = template.split('{some-token}').join( userProfile.someValue );` `return template;` `}` btw. the split/join above is a way to replace strings, probably not an ideal one - just one I remember, you can find some more methods here [https://stackoverflow.com/questions/1144783/how-to-replace-all-occurrences-of-a-string-in-javascript](https://stackoverflow.com/questions/1144783/how-to-replace-all-occurrences-of-a-string-in-javascript) &amp;#x200B; I'd only recommend storing arrow functions in constants if they're doing more than just returning a single field (e.g. `const someFunc = someObj =&gt; someTest(someObj) ? someOtherFunc(someObj) : someObj.someField;`, the `getFullAddress` seems good for this, but make it work on a single object - less data, minimal transformation ) &amp;#x200B; if you need an array of some object to be converted to some other array use Array.prototype.map, e.g. `const pictures = results.map( usr =&gt; usr.picture.large );` the functions which convert a whole array into another array (your getPictures, getName, getEmail, etc.) are less flexible, how would you apply them to a single object? `let sth = someFunc( [theobj] ) [0]` ? &amp;#x200B; Other advice: * do not use arrow function syntax for long functions (just do `function someFunc( someParams ) { ... some code ...}` ) * "generateContainer" is not a good function name - what does it mean to generate a container? try using more specific function names, ones which would clearly express what the function wants to do * avoid storing identifiers in the global (window) namespace [https://stackoverflow.com/questions/8862665/what-does-it-mean-global-namespace-would-be-polluted](https://stackoverflow.com/questions/8862665/what-does-it-mean-global-namespace-would-be-polluted) * avoid making your functions use global variables like the "galleryContainer" instead make them take params that specify elements to update (imagine rendering 3 lists of people in 3 different elements e.g. company directors, other employees and happy customers) &amp;#x200B; Ok, I will stop here. Sorry if all that sounds like a harsh judgement. When I look back at my junior code I could judge myself as harsh too. Learning to code well is a hard task. Good luck with it!
I don't know how I missed that. Thanks!
Sorry, I should have wrapped the calls in the `console.log()`. Here: const maskify = num =&gt; `#### #### #### ${num.substr(12)}`; console.log(maskify('1111222233334567')); console.log(maskify('11112222333345'));
Smarter, you say?
A web page, constructed for small phone screens which showed a google map, was loading VERY slowly, and none of the other devs could figure it out, and we moved on to other things. A couple weeks later, I looked at it again - turns out there was a sourcemap, encoded in BASE64, appended to the end of compressed JS, that was over a megabyte! I pointed this out to my boss, that I found the problem and the fix was as easy as removing sourcemap, and he said "what are you doing worrying about that? Aren't you supposed to be working &lt;X&gt;?" &amp;#x200B; When I left, the sourcemap was still in there, and they still had the problem. Fuck that place.
Wow a lot to take in! Don’t worry about judging me too hard, I welcome it! Thank you for explaining solutions and tips as well. I can see now how certain functions and different parts won’t scale well if more content is needed. I’m seriously going to save this then go through my project line by line while refactoring. This will definitely help me become a better programmer! Thank you!
Yes? \`debugger;\` is a feature of JavaScript, not something Chrome does specifically.
I read it several times, still not understanding. What bonus is this?
This looks perfect for interpolating my player positions in multiplayer games, It should smooth out position updates from the server with the predicted positions from clients nicely :)
While it's a nuance, one small issue. Palantir is a data analytics software company, not data mining per say. They don't do the analysis or bring any data, just build the tools. Not letting them off the hook or anything.
Yeah I feel you on that. Chrome has always done very well with handling crashed instances, and error handling in general. Never had any problems. I have been disappointed in some of the bugs in FF dev tools, some of which caused crashes. But I was never really into using add-ons aside from tracking script blockers, so I wasn’t very aware of the add-on debacle.
No need, someone already did that for you. https://polyfill.io/v3/