Why is it called Standard Library if it's neither a library nor backed by TC39?
How does it make difference when its written in typescript
I worked today on 0.10.0 of hoppla and also released it. Its now preserving permissions of copied folders and rendered ejs template files. https://github.com/hopplajs/hoppla
If you use vscode you will get intellisense üòä btw typescript helps to keep code safer, give it a shot!
I use flow for that. Was just curious as you mentioned typescript. I see many tweets about typescript these days.
Well, under some circustances ts and flow look similar, but the first has a better out of the box appeal. Secondly, the support in IDEs and code editors is better and there are more types available on npm. I have used both, but I find it is better typescript both for small and enterprise projects üòÅ
Everytime when some unpredictable happens
Good work! Thanks for sharing &amp;#x200B;
For flow there is also IDE support and have used it for quite big app. Main thing is i dont have to opt out of ecmascript.
You will see the call stack frame( which are basically functions) where you can go to every step which caused debugger to stop.
Thanks for the kind words, much appreciated! I consider this spammy only because it's the same person reposting all the time. If it were a bunch of folks reposting it, I'd be the happiest dev alive!
https://medium.com/blueeast/node-js-internals-and-how-to-write-faster-and-better-optimized-javascript-code-part-1-1a01a0661004 Just one of the sources I coud find. Many mouths ago I worked on a program that needed to use a significant computing power. I learned how to write optimized code and I learned how javascript by themselves optimize the code under the hood. All the "optimized for loops" i could find in that time made no difference at all in benchmarks. Like the while-- that was quite popular at a time. 
Hey there! Would you care to elaborate what is stupid about it? Sure, 30 seconds might not be enough for everyone to comprehend 2-10 lines of code, but for most intermediate-senior devs, it shouldn't be very hard to grasp the key concepts of most of these in that time. 
You are not opting out of ecmascript. WASM and ecmascript code are the only things that run in a browser and it‚Äôs not WASM. 
Alternative of babel seems promising
You mean that, i thought typescript runs in browser?
Nested arrow functions might slow down someone who is not used to reading them, I'll grant you that. Also, looking at the example you provided, I think the main problem here is that our linter and formatter should have parsed this in three lines and with curly brackets to make easier to read, like so: const bifurcate = (arr, filter) =&gt; arr.reduce((acc, val, i) =&gt; (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]); In that case, it would have been as fast to read, if not slightly faster due to less keywords. &amp;#x200B; Sadly, this is an issue we should report to the team behind [prettier](https://github.com/prettier/prettier), so that they can look into it, so there's not much I can do about it at this moment.
Do we need VISA to join this group üòÅas i am not in Germany
I was praising GitHub untill i found its not free for organization.
Thanks!
The fact that I should need to explain to you why a 30 seconds of code concept is beyond retarded scares the life out of me
Yep. Good idea indeed. 
Ahh, I see. Interesting. I guess that person really does love them upvotes. :-)
Whoa, this is exactly how I handle live streaming a webcam video and some other stuff for one of my projects. Good to know that the solution I chose is actually viable for this problem.
every single day. beats console logs every time
$(button).click(function(){ // do some stuff }); You could do that. No need to find the button on the page when you already have a reference to it. Alternatively, you could use vanilla JS to add the click event listener. https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
Cool. TIL
1. you can add click events with vanilla js &gt;button.addEventListener('click', function(){/*do stuff*/}) 2. you can create elements in jQuery &gt;var button = $('&lt;div id="buttton:&gt;&lt;/div&gt;') then pass it to maps with button[0] to retrieve the native dom element mixing both is weird, stick to one, preferably native JS
Newer, similar but more **surgical** api: [Broadcast\_Channel\_API](https://developer.mozilla.org/en-US/docs/Web/API/Broadcast_Channel_API) To send datas inn a given channel (pass objects with json stringify...): new BroadcastChannel('app').postMessage('Hello world!') Example receiving, from another module, another tab, another webworker: new BroadcastChannel('app').addEventListener('message', function(e){ console.log(e.data) })
Will definitely give it a try!
Legitimate question: How much do WebSockets get used? I've used them once for a coding challenge during a job application but NEVER encountered them in my 5 years of doing JavaScript. Are they used in some parts of the industry?
What is this?
tl;dr
a = $(‚Äò#button‚Äô); b = document.getElementById(‚Äòbutton‚Äô); Does a === b?
All I want is bubl√© to support async functions and my life will be complete. 
Yes, Facebook went out of their way in to break postMessage() for their own (unnecessary) uses ‚Äì both for their UIWebView and WKWebView implementations. I made the PR to fix it for CRAlpha‚Äôs WKWebView component (long the community favourite).
How far has mighty Microsoft fallen when it has to advertise on reddit...? 
typescript is compiled to js, just like flow. the biggest functional difference that I've seen (that hasn't been mentioned), is that flow maintains type safety at runtime.
Fun- I'm working on a related project! Here's a demo for modular ts state management with react hooks: https://github.com/DuncanWalter/spider-demo/blob/master/README.md Not quite as fleshed out yet
(disclaimer: self-post)
No, because A is wrapped by jquery, where B is a raw node from the DOM. a == $(b)
They are used mostly in chat apps. Also, Meteor uses WebSockets a lot for subscriptions. But indeed not very much except for these cases.
Thank you! :) 
I feel that your comment is slightly rude towards the 36k+ people that have starred this on GitHub and especially the 150 people that have contributed to it for over a year. Too bad you feel that way, but at the end of the day not every project is appealing to everyone, especially one such as this which uses a rather aggressive teaching method, more akin to a cheat sheet to quickly explain concepts and patterns we see in code everyday. 
Thanks for your appreciation. It's viable as long as you don't transmit very large amounts of data with it because it will get laggy.
Not super knowable on chrome extensions but I believe you will need to send an event to your background page and then have your background page send an event to the Spotify page. Unless the tabs api has a messaging system for content script to content script messaging. But I don‚Äôt think you can even access the tab api in content scripts? So yeah pretty sure you‚Äôll need to send an event from your the page your UI is on to your background script. Then the background script can send an event to the Spotify page.
You can create elenents in vanilla js too :D let parent = document.getElementById('parent') let div = document.createElement('div') div.id = 'button' parent.appendChild(div)
I know right, they just got passed up yesterday by amazon as the most valuable company in the world. Outlook looks bleak. Might as well be sears. 
Hah, I had to send multiple data points at some point and thought setting up one websocket per data point... That was definitely very laggy. 
Would the right way to use state in a function not just be to pass it in as a parameter? üßê
Have you considering using an OfflineCanvas for improved performance?
If your app is on the same domain as the host page, you could use global variables too. You can reach the parent window from the iframe via window.parent. And the iframe window could be accessed from the parent via iframe.contentWindow.
they were already doing that in the op so i didn't explain it
There are definitely strong thoughts on these things, obviously. FP programmers would say so, yes. But then, their suggestions around state management can be quite intimidating to many who aren't deeply into FP, like monads, immutable data structures, etc. On the other end of the spectrum, you have modular design patterns, where functions and state are co-located (similar to how they're co-located in instances of classes in OO coding), and thus tightly bound. I was inspired by React's attempts to bridge the gap with some of their hooks design, and that's what brought about TNG. I see it as sort of in the middle. If you consider only \`useState(..)\` / \`useReducer(..)\` / \`useRef(..)\`, these are very lightweight ways of keep state encapsulated with a function, without needing to pull that function (and state) out into a separate module. This can be quite convenient. Then again, \`useEffect(..)\` / \`useMemo(..)\` / \`useCallback(..)\` are kind of something else entirely. They point to building blocks that you could start to build some lightweight front-end frameworky stuff (maybe like React) on top of standalone code. They offer some clean abstractions for things like side effects, etc. All in all, this project is an attempt to explore, sans framework, how basic functions can be "decorated" with more useful functionality. I think the design of the hooks system is intriguing in its abilities to do that.
Someone sell me on the idea of tagged strings at all. Why would I use them and not a function? Seems like extra obfuscation with no upside. 
Sorry to "advertise" something that is free that you might find useful in your own projects. You must be one of the people here looking for cat pictures only...
Use https://docs.npmjs.com/cli/audit
In order to add event listeners to dynamically added elements, you need to reference a wrapping static element: $(‚Äò#app‚Äô).on(‚Äòclick‚Äô, ‚Äò#button‚Äô, onButtonClickCallback);
Got it, thank you
+
cycle through call stack modify variables then re execute stack with modifed variable with out actually having to change source in my editor is awsome &amp;#x200B;
Base64 for serial encoding hurts my soul. 
Thank you for the response :) I made the logo in Photoshop with intended inner-shadows on the letters and drop-shadows on the buttons. I might redesign it in the future - I appreciate the feedback :)
It‚Äôs also named Karin, Reddit is not a fan of this name. Currently. I‚Äôm sure it will change. 
Template literals in general or tagged templates specifically?
Tagged templates specifically.
30+ hours of code to save 8 hours of writing work.
Anything that needs to be more real time than polling / long polling can handle. Chat apps, multiplayer browser games, anything where data updates a lot. Everything you can do with websockets can be solved in another way though, so they‚Äôre often overlooked.
The advantage of tagged templates is that you can allow for more concise syntax in cases that don't lend themselves well to untagged templates. Here's an example I pulled out of my suffering Wordpress: someBlog`{{ loop:posts}} &lt;section&gt; &lt;h2&gt; {{post_title}} &lt;/h2&gt; &lt;p&gt; {{post_excerpt}} &lt;/p&gt; &lt;div&gt;&lt;a href="{{post_permalink}}"&gt;{{more}}&lt;/div&gt; &lt;/section&gt;` Ignore that this isn't actually using regular JS syntax for template literals. The idea here is that I can invoke a specific parser (that picks up a specific context from somewhere) and output content. Another example, a bit closer to what OP was doing: let foo = queryable`&lt;div class="${something}"&gt;$someContent&lt;/div&gt;` However, instead of `foo` being a String, it'd return an HTMLCollection, or some other object you could query using DOM methods.
Thanks man I really appreciate it! 
For a ‚Äúreal world‚Äù multicast solution probably use something more like https://www.npmjs.com/package/recordrtc Then chunk &amp; upload the media stream slices in a web worker, then save on server &amp; multicast via something like Http Live Streaming. For browser to browser just RTC + a connection managing server would do.
They can be quite useful in SPAs for synchronizing states between server and client (the web page).
Couldn't you just do this? someBlog(`{{ loop:posts}} &lt;section&gt; &lt;h2&gt; {{post_title}} &lt;/h2&gt; &lt;p&gt; {{post_excerpt}} &lt;/p&gt; &lt;div&gt;&lt;a href="{{post_permalink}}"&gt;{{more}}&lt;/div&gt; &lt;/section&gt;`)
Yes, you absolutely could, and tagged templates _are_ syntactic sugar around what you're saying, but being explicit about them allows development tools to analyze them.
It's as reliable as browser standards go. In other words you're pretty safe to use it. After all it's the only way to communicate to your iframe.
Isn't flow also stripped out when it's transpiled?
What do you mean? I did it like an hour
jQuery won't be able to query for the element before it's added to the DOM. However you can just pass the element directly to `$`: ```javascript var button = document.createElement('div'); button.id = 'button'; $(button).click(function(){ // do some stuff }); ``` 
Yeah... Isn‚Äôt base64 sometimes actually bigger than the actual data?
Any valid Javascript is valid Typescript. Typescript is only useful during development, then it's transpiled to Javascript, and all of the types are gone. Definitely give it a try, it's so much better.
Not sometimes. Always.
Entire content on the page: &amp;#x200B; *"Pardon the interruption. We‚Äôve seen you here before. Let‚Äôs make things official. Already have an account? To make Medium work, we log user data and share it with service providers. Click ‚ÄúSign up‚Äù above to accept Medium‚Äôs Terms of Service &amp; Privacy Policy."* &amp;#x200B; # Yeah how about NO!
I wasn‚Äôt sure. But yeah. Why encode everything to be bigger üòÇ. Bytestreams?
Why would you just do `button.onclick = function() {}`? You don't need to add a listener at all.
Yes. I developed the iframe login solution for Disney that they use across many of their properties. It works. To make things easier I developed a project called [PM.js](https://github.com/ajbogh/PM.js/tree/master) which handles security and method registration. It's quite an old project now but it should still work.
Excellent, this helps a lot
err day
It's Blade 4 without Vampires and Wesley Snipes.
We use them heavily in sports applications.
Confusing things: 1. Why is REACT capitalized 2. What is a blade 3. Why does the "Building and hosting your own files" section show VanillaJS and not React. 4. Why does the title of this post says "React blade overlay framework", but then mentions SiteInspector.js 5. Why would I need a SiteInspector 6. What is so hard about adding an absolute position rectangle that appears from off screen using CSS transitions? 7. Why is the screenshot looking like it was taken from 2012? 
I am pretty sure that the gambling industry uses websockets quite a lot. Can someone confirm this maybe?
What about WebRTC?
What sort of of dev tools?
I think it would only be a tiny bit.. but the question is what that encoding brings to the table. It sounds like the real problem with this is that everything needs to be encoded/decoded for no added value
My wording should've been more careful. "Could allow" is the better wording, but I'm including tools like VSCode.
I‚Äôm just curious what sort of analysis could be done that couldn‚Äôt be done on a normal function call. 
Right, so it makes sense that in the (mostly) stateless microservices world I'd not have encountered them. I guess all of them involve some kind of connection being maintained between two machines..
Even if it was longer than the 8 hours of writing you have something to add to your portfolio. Also I‚Äôd much rather spend 30+ hours doing something I like than 8 hours of doing something boring. Original commenter is just a web
That does seem like it's a little more well suited for our purposes. I had only used WebSockets as the backend is all Python ML stuff so I set up a Tornado server to easily hook into the Python code and serve relevant info back in the socket, and we had a deadline. But in the future I'll definitely keep WebRTC in mind. 
That makes sense. The two cases that sprung to my mind where some kind of connection pushing a message would be useful would be trading and gambling.
100% - they don‚Äôt work well with microservices. Well, they could since it‚Äôs just a messaging protocol - but something would need to maintain the connection. I‚Äôve been hoping that AWS would implement something but aside from an IOT thing &amp; maybe a gaming thing they‚Äôve not touched it.
re: the pure components using `memo` or `PureComponent`. It doesn't matter for this app as the DOM is quite simple and the update is user triggered, but for components with a larger DOM avoiding a rerender can be huge, or if there are more components in general not having them all update whenever App rerenders can be crucial for performance 
I‚Äôll be the outlier here, sometimes. 
The parent function can't return the result. Returns are synchronous and loading the data is asynchronous. The code you have updating the result will have to be in the `onreadystatechange` callback. From there, you basically have two options. First would be to supply a callback to `getFileInformation`, then in your `onreadystatechange` you can call that callback passing the result to it, not unlike how an `event` object is passed to a click handler when something like a button is clicked. function getFileInformation(callback){ // ... xmlhttp.onreadystatechange = function(){ if (this.readyState === 4 &amp;&amp; this.status === 200){ // ... define result ... callback(result) } } Then, the caller of `getFileInformation` passes in their callback which will be called with the result when its available rather than having the result returned as a return value. The second option would be to use [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises). This also uses callbacks, but does so through promises rather than through the function. When using promises, `getFileInformation` would still return something, but not the result, because its not available. Instead it would return a promise that represents the ultimate value of the result, but to get that value, the receiver of the promise would need to use `then()` with a callback to get it when it's available. function getFileInformation(callback){ return new Promise((resolve, reject) =&gt; { // ... xmlhttp.onreadystatechange = function(){ if (this.readyState === 4 &amp;&amp; this.status === 200){ // ... define result ... resolve(result) } }); } Either way, the caller of `getFileInformation` will need to wait before the result value can be used.
As far as I know flow types are maintained and checked at runtime
Sorry!
You are trying to deal with async code in synchronous way... this doesn't work. You can use callback as a parameter of your function and give it that result instead of returning it.
Is there a reason native js is preferred? If I have to use jquery elsewhere in my code does it matter if I use one or the other for this particular operation?
XHR is asynchronous, meaning that this 1 function isn't going to do exactly what you want. The way to solve this is to either use an outside library, like `axios`, or the `fetch` api. This solution does use ES6, so if you don't know what some of this is, you might want to look it up. ``` function getFileInformation = () =&gt; fetch('../php/includes/getFileInformation.php') .then(res =&gt; res.json()) .then(data =&gt; // transform the data and return it) getFileInformation().then(data =&gt; // do something with the data here); ``` Here, `fetch` will return a promise. **Note** Fetch doesn't work in every single browser. So you will need to either transpile this or write your own using the XMLHttpRequest api. 
It's not really viable and extremely inefficient. Check out [WebRTC](https://webrtc.org), it's built for this exact use-case and is built for efficiency.
Great thinking you got there. I bookmarked your article for the next time I am going to use Puppeteer. I would suggest you replace your code blocks by [embedded gists](https://medium.com/@egonelbre/dealing-with-code-on-medium-c40016e8b1f3). It's more impactful with proper syntax highlighting ;).
So its like a small quick implementation of the "blades" you see in Office 365 admin or Azure Portal? 
The only way to really make sure libraries aren't doing anything funky is to read their whole source code.
To save milliseconds still valid!
Not necessarily if you have to use it elsewhere, however jQuery has less support, so your JavaScript won‚Äôt run for people that don‚Äôt have support for jQuery.
How would people be able to run native js but not jquery if the library is included in my html?
Thank you very much!
Thank you! I have been using gists for quite some time now, this time however I chose to try something new :)
Each frame is converted to a PNG? const data = canvas.toDataURL('image/png'); This is a lossless format, and terribly bad for video. Wouldn't a low quality JPEG be about 10,000 times smaller and faster? 
Ended up using the promises, which turn out to work fantastically. Thank you. I must just be too tired to think straight at this point.. :D Which method is generally better or more recent, or are they roughly equal?
``` for (let i = 0; i &lt; 100; i++) { console.log("I will not take shortcuts"); } ```
Especially since WebSockets can handle binary data just fine: socket.binaryType = 'arraybuffer'
Koala pictures, actually. 
Yes, similar to the Azure portal, but designed to be extensible for customization. Each tab is it's own JS file so that teams con easily add their own tabs. These tabs then have the ability to expand into blades like the Azure portal.
Promises are newer. There have been promise libraries out there for a while, but they were introduced officially into the language with ES6. They are also what are used with `async`/`await` if you ever want to get into using that syntax, and as such, are generally preferred for things like this. There's also another newer API, [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch), which supersedes `XMLHttpRequest` and uses promises out of the box.
To hell with "form". Classes are there to make things easier for code to be used in a way that makes the system and relationships easier to understand, in my opinion. In fact, every function of any type in any language is merely a way to simplify code re-use, maintainability, fault finding, understanding and reliability. So, if you have a class with static methods, think about how the use will be interpreted by someone coming along later (or even yourself when you have long forgotten why you did something a particular way). Look at it logically. Does it make sense and is it understandable in the wider context. Does it help to explain what it does and why, basically? So long as it works, is robust, clean and secure and meets the performance criteria...Who really cares? Pedants, mainly and, personally, I haven't got much time for them.
Cool
Alright, thank you :)
"think about how the use will be interpreted by someone coming along later" This is what I am asking. If I marl something as static, should this say to a future developer: 1. This method should be thought of as something that all Instances will be aware of and using. E.g. the canonical example of static numPoints for a 'Point' class. OR should it indicate: 2. That this function doesn't reference any particular instance. I know this is subtle, but if using viewpoint 2, then you will have 'more' functions that could qualify as static. An example of a method that would be under 2, but not 1 would be just some generic utility method that isn't necessarily referenced by any instance of itself. In that case, it *could* be non-static but would require an instance to use. What you are saying about coding organization in general is absolutely true, I'm just wondering about this nuance that in my 20+ years coding I never really decided upon.
I think you need flow-runtime for that. I believe traditional flow is stripped out when transpiled. 
I can only speak for myself, and I realise I'm repeating (in my own words) some of your points, but this is how my thinking goes... Static methods are kinda in the same "namespace" as the classes they are attached to. If they weren't they would simply be functions in a library. They are also good factories. Class methods need the persistence of data in order to function. If you've got an instance and you're going to do a load of things with it, then those things should be class methods. And does it "feel" right. Additionally, I'm a great believer in late optimisation, so I never get attached to anything - so I let pragmatism guide me much of the time. Aside from that? I don't really worry about it. &amp;#x200B;
Not sure what the user above is smoking, what he said doesn't make sense. Anyway if you are already using it elsewhere, keep it consistent and use it in this case too. It's usually shorter and easier to write. If you wanted to include it in the page just for this scenario, then it would be a different story.
Thank you
Mostly just console and debugger. Sometimes react dev tools too.
AFAIK they can also communicate by manipulating the address of the iframe. Either the parent or the frame can modify and read the fragment (the portion of the address after the #). But postMessage was developed to avoid that kind of craziness.
But how do you know if this one is safe?
Okay so the balance thing. it was originally supposed to be set to $10 is there no more variable for setting the stock balance back to $10?
It‚Äôs a single page Google Maps web app and I am using jQuery for the easy use of Ajax. I think I‚Äôll just keep it. Good point about the div button. I forgot why I did that.
Def smaller but not necessarily faster... JPEG might actually be slower due to time it takes to compress/decompress. If that is the case then it would make sense to sacrifice bandwidth for speed if you're trying to achieve higher frame rates.
I made a small jsfiddle that could help you. It shows how to create the element with a click listener already attached. https://jsfiddle.net/k8w63ftz/
Are you wanting each person to start with a balance of $10? Or the store to have a balance of $10? Atm I wasnt even thinking about the store itself having a balance.
yeah each person should start with 10 I tried changing the var balance = 0; to 10 instead of 0 but nothing happened &amp;#x200B;
Source code?
As someone who is reading this in bed, please don't make me tilt my phone to scroll. I would keep on going back to the top. 
https://gist.github.com/Pyragon/c6a16c94138aa14533f6fad5b2cd4a57 You can see what I've done at the very bottom of index.js If someone has never bought/sold/used the command to get their balance then they won't have any balance saved. I check for this, and set their balance to 10 before doing anything if this is the case. Next time they do something, they have a balance saved so it will just return the balance.
I'm suspicious that an interview from a dev for what I imagine is a dev position (given that you're posting here) wouldn't be at least in some way technical. But if that's what they're claiming, I'm assuming it means they're not going to drill you with whiteboard problems or things of that nature. Instead, I suspect there will be questions about your experience and what kind of technologies you've worked with before, possibly asking you to explain some details about things that you've done or maybe something you're proud of doing (often a popular request). And if this position is working alongside this dev as part of their team, I'm guessing a lot of it will also be about personality and whether or not you two can get along and don't have any sort of personality clash. In a position I interviewed for many years ago, I had three phone interviews: one technical, and the other two non-technical, both of which were conversational and completely unrelated to the position in any way, shape or form. We talked about where we lived, things we liked to do in our spare time, and just had a pleasant conversation until the allotted hour quickly came to an end (in both cases). Got hired; didn't even have to come in for a face to face.
 console.log("I will not take shortcuts\n".repeat(100))
You would use base64 if you wanted to pass binary data through a system that expects strings. For instance, JSON requires string values be unicode, so you can't just put arbitrary binary data in them.
Hand gestures?:D
You're right, when I said "faster" I was thinking about over the wire speed, like bandwidth limitations. PNGs are enormous. You are correct about compression / decompression CPU cost for JPEGs tho.
It would be cool to use the force to control a web page. Wave my hands about like I'm playing kinect. 
What advantages does scraping has over querying the Medium API? 
There's this: http://unicode.org/emoji/charts/full-emoji-list.html And I think they have some data files linked there that might get you what you need.
Every thought is a flow of electricity in our brains that forms a magnetic field. Why not use the magnetometer to interpret the field and control the phone with thoughts. That‚Äôs it man. 
Use https://docs.npmjs.com/cli/audit
Array.from({ length: 100 }, () =&gt; console.log("I will not take shortcuts"));
Unless you‚Äôre building a game, please don‚Äôt be clever. People want to just use their device and site the way it works everywhere. Scrolling by tilting the device would be a sure fire way to make me close the site tab. 
The source code is linked inside the article.
There is no medium API for querying posts.
But sometimes it‚Äôs good to invent something new. 
Cheers!
That's a great idea, but reading the source won't give you the full picture. For instance, the malicious part of flatmap-stream was only present in the minified code.
Oh sorry, you're right. Just checked it again, was betrayed by my memory. 
Do it. Sounds like a plan. 
Bringing memory leaks for non-React functions :) What is the point of using such API when you aren't constrained by React internals?
That‚Äôs cool bro. Saved to my to do list at wk.
so how would I be able to make any profit off of this then. You suggested that I shouldn't be getting amounts of money when I sell stuff. I also don't really know how to change the buying price.
I'm not sure, youd have to have price changes every so often or based on # in stock or something. I mean you could just have it buy and sell with random prices and have it more like a gambling thing. Buy and sell prices are in your SALES_PRICES array. Sell price is random between the 2, and buy price is highest # 
the price you buy the carrot for example is the highest number and I want there to be a range that can go higher than what the price was to buy just like a chance
Make a new array for buy prices, and either make the random numbers smaller than the sales prices array or increase the latter. Then change the buy command to get a random price from your new buy prices array
Yep ... old skool talent!
That gigabit connection isn't going to use itself
Thanks for this new ebook! I am reading the **Modern JavaScript** section and I noticed a couple of sentences that might be confusing for a beginner: on page 36 of the pdf I read "JavaScript is **synchronous** by default" and then on page 40 "but as you know JavaScript is **asynchronous**". Most readers will probably be able to understand what you mean with that, not so sure about someone that never heard of this topic :) &amp;#x200B;
Not when it‚Äôs something that isn‚Äôt actually new. Apps and sites have played around with this before. It‚Äôs not well received. I mean, you do you. Just don‚Äôt expect medals.
Thanks, that's a very useful list. I might have to create something to parse it though as it's just in a text format. I've found a few emoji json files floating about, but none of them have the skin tone variations.
I‚Äôd also note even functional programmers are exploring mechanisms that allow statefulness without passing it all the way through. Such as ‚Äúalgebraic effects‚Äù. (The term sounds intimidating but it‚Äôs very similar to try/catch except it lets you pass data from ‚Äúcatch‚Äù to ‚Äúthrow‚Äù and ‚Äúcontinue‚Äù executing from there. Something like Hooks could be implemented in an FP language on top of algebraic effects.)
Why tho
ok most likely my last comment. is it to hard to be able to sell multiple things at once? &amp;#x200B;
No, I split the string in the message function, just loop through the array starting at 1 (0 is the command) and sell those
``` console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); console.log("I will not take shortcuts"); ```
Array.from(new Array(100), () =&gt; console.log('I will not take shortcuts'));
According to the [XKCD Chart](https://xkcd.com/1205/) if you generate this every year you've more than made up for it over a course of 5 years. Heck even if you spent 8 hours it would have been worth it.
Tell me about a time you got negative feedback? Tell me about a time you put in extra hours to hit a deadline? Do you have any side projects? How do you learn new technologies? How do you solve big problems? Tell me about a time you had to ask for help? Tell me about a time you failed? Tell me how you handled a major disagreement with a coworker?
Awesome, thanks for sharing!
Might drive me insane. But why not try it out and show some people? You are guaranteed to learn something :)
You will laugh, but Internet Explorer is still pretty up there with most Corporations and Government agencies. RDP is another big one for those managing the Windows world, and since [49.9% of developers use Windows as their primary machine](https://insights.stackoverflow.com/survey/2018/#development-environments-and-tools), that is a pretty large number. PowerShell is another, and even though .NET Standard is available for Linux, it's still not the same as a Windows environment running PowerShell. And Windows still controls 72.76% of the market. So it's going to be a while before these tools aren't enviable.
I'm using WSL on Windows 10 1809 and it's fixed pretty much every issue I had with it. I'm using Zsh with powerline fonts, and I honestly can't tell the difference between WSL and my PoSh terminal.
I wrote this back in April actually, so if you're on a recent version of Node.js you can replace require('pump') with require('stream').pipeline for a native API.
I‚Äôve seen a couple apps do this before. It‚Äôs a neat gimmick but not all that useful. You‚Äôre constantly tilting back and forth ever so slightly to control the scroll speed. 
Yes that I understand, but how will I receive the message on the Spotify page? Which script will I run on the Spotify page? 
They allow you to inline expressions that you want to modify before outputting the final value. With tagged templates you can do use a template string like `some sentence with ${someObjectLiteral} in it.` and modify `someObjectLiteral` so it does not output `[object Object]`. With a normal function you would need to pass `someObjectLiteral` in as a second argument and replace a placeholder with the modified value.
The content script should be injected on the Spotify page as well. There is a runtime.onMessage.addListener that you can access in the content script. (That might be the incorrect name... check the api docs) You have 2 options on how to have the content script on the Spotify page. You could have 2 separate js files one for Spotify and one for all other pages. Then in your manifest you should define the Spotify one to only run on Spotify pages. Or you can just have one content script and check the url within that script. The recommended way would probably be the first way.
Alright. I'll try this today. But there is no way to communicate directly from the inject UI on the page to the Spotify script, right? I will have to communicate first to the background.js and from there then to the content.js right?
Not that I know of no.
Alright. Thanks! I'm in a similar situation as OP but trying to do this for multiple sites (triggering Dom events from the injected script) etc. I'll look into it. Thanks!
Literally /u/reptonian6 is a spam account for this repository.
&gt; The recommended IDEs for Flutter app development include Android Studio and IntelliJ Idea. These are easy and awesome to work with for a developer who has already worked on Android. There is no way this is a selling point
Does audit actually look for sketchiness in the code? Or does it rely solely on people reporting security issues?
I‚Äôm new to this profession. Did the writer make a tool to download articles from the internet? That‚Äôs what it looks like to me.
I wanna say What's App's web client had a global variable with all the emoji stuff in it. You can poke around Object.keys(window) and see if you can find it.
When you use the static keyword you're communicating to other developers that that method is used elsewhere without instantiating the parent class, even if that's not the case. If a new req comes up or an edge case is found that would require that function to use `this` the developer doing the work is going to assume he needs to create a new function that does the same thing but has access to `this`. Even if the function is never used without instantiating the class. **Tl:Dr** Keywords like `static` indicate how methods are used to other developers. Dont use `static` unless you actually intend for the function to be used statically.
very niceeeeeee !
Check out [axios](https://github.com/axios/axios). It does most of the work of creating http requests for you.
Someone wanted to feel important
&gt; Wouldn‚Äôt it be awesome to have a personal chatbot that will send you cool stuff throughout the day? No.
How is JWT not very good from a security perspective? As long as you aren't storing sensitive data in the JWT what's the harm?
This is old. Facebook Instant Articles did this around 2015. No one liked it, as this guy points out: https://youtu.be/iYpl0QVCr6U?t=9m25s
AFAIK `npm audit` doesn‚Äôt actively scan for security issues. It just walks the dependency tree and logs a warning when one of the package is marked. I think one could scan your project and dependencies with a static analysis tool like SonarQube, but that would take ages as installing a single package often results in hundreds of (indirect) dependencies.
Thank you, these are some good questions to think about before the interview. 
Sure, just go ahead and solve something that the world‚Äôs leading brain-computer interface scientists have been unable make practical after dozens of years of research using JavaScript and a device that has no direct connection capabilities to a browser.
`document.getElementById('#total').value = document.getElementById('#price).value * document.getElementById('#tax').value;`
i use webstorm but its like $49/year after the first year. If you want a free one vscode is "good" but its by Microsoft so I don't use it.
Would you mind elaborating on why you don‚Äôt use it because it‚Äôs from Microsoft?
I don't think you're learning much by having others do your homework. Instead, let me give you a few links for you to read. &amp;#x200B; \- Get a reference to a HTML element in JavaScript: [https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById](https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById) \- You can get the value from an \`input\` element via \`element.value\`: [https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) (search this page for \`value\`) \- Run code when an input value is changed using something called an 'event listener': [https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) (the \`input\` or \`change\` event is what you're looking for) \- You can update text using \`element.textContent\`: [https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent](https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent)
I hate Microsoft because they produce garbage.
From his username, I'm guessing he's a Linux zealot. Personally I think VS code is pretty awesome - especially as I can use exactly the same IDE on pretty much any platform - it makes multi platform development a lot less painful. If you really don't want the Microsoft branded version, there's an open source version that's pretty much identical (much as Chromium is to Google Chrome)
You know Microsoft contribute code to the Linux code bases, too, don't you?
I can understand where he is coming from, but VS code is an incredible editor, and the fact that it is available on Linux and Mac shows that Microsoft is changing. Heck they made GitHub better too!
VSCode is one of the best IDE's. Amazing autocomplete and tons of extensions. 
oh they'll fuck that up too. don't worry.
Thank you!
Thanks!
To download information about articles to be precise.
webdev guy writes article about hoow he made a scraper.... cool.
Just make a scraper targetting links with the title "How I Used My Programming Skills to Save Over 8 Hours of Writing Work" and have it only return codeblocks.
I believe the usual process is to pray and hope that none of the 1200 libs in your node_modules folder does anything nefarious.
Jokes are usually funny....
You're new to this profession meaning you're in this professional field making money but you don't understand scraping? &amp;#x200B; Or you're new to web-development from a coding perspective?
They've been contributing for at least ten years, and I haven't heard of anything bad happening
Thanks!
what do they do? instill social justice warrior code of conduct bullshit?
You have no idea about their contribution, don't you?
I'm a college student interning at a software company. I am learning JS. That's why I am here.
This is a terrible idea. Do not mess around with scrolling! It‚Äôs the most fundamental device interaction, and every user expects it to work properly and normally. Forgetting about the pain you will inflict on users relying on accessibility features, you will enrage every fully-able person who uses it. 
Yeah fair, op only forgot appendChild felt like it was worth it to mention that it can be done 
cause they're adding it to google maps at the end and not directly to the dom
I see. I'll read it again on desktop. The code was difficult to read on mobile. Thanks for sharing.
&gt;when I use some MIT licensed js libraries, then I can't use them, because we would get sued into the ground. I appreciate your view, by you've got just about every major corporation with lawyers better than yours that don't agree. Microsoft for example uses React in Office 365, managing email for organisations like the Department of Defence.
Woops! I'm a native Dutch speaker/writer and forgot to translate this part...I fixed it now!
&gt; Why is REACT capitalized? Blame OP &gt;What is a blade? This is Microsoft terminology, and is used heavily in their Azure UI documentation. It will say things like "open the user management blade". &gt;.. Everything else is answered by saying.. this is a Microsoft UI component. They seem to like it, not everyone agrees.
Jafar Husain, Jem Young and Brian Holt work or have worked for Netlifx so it might be one of their courses?
This is actually pretty good! nice work. I'll probably give it a shot when I'll have some free time! thx for sharing
nice!
https://developers.soundcloud.com/
You can't. Most libraries you use depend on other libraries, they themselves depend on more libraries etc etc. You cannot rely on source code you see on github because you're most likely installing libs from npm. In this case you need to know exactly which field your system(or bundler) uses from package.json, open that file and it's dependencies either on your file system(risky because that package might've had a postinstall script) or on unpkg.com. It's simply not realistic to expect any developer to check all the code from all the libraries that his project is using(directly and indirectly). Without it there's no security.
I watched something by a Netflix developer about using React with D3. Does that sound familiar? I think it may have just been on YouTube. 
Be here for whatever reason you want, no one's judging. You could be *in this field* for years and years, but as a PM or something and just have never heard of scraping. The way you stated your initial comment was a bit confound is all :\]
It's clean and I like scraping as much as the next guy. Cheers :]
Thanks. What about YouTube.
1. [https://www.npmjs.com/package/youtube-player](https://www.npmjs.com/package/youtube-player) 2. [https://www.npmjs.com/package/youtube-api](https://www.npmjs.com/package/youtube-api)
1. [https://www.npmjs.com/package/youtube-player](https://www.npmjs.com/package/youtube-player) 2. [https://www.npmjs.com/package/youtube-api](https://www.npmjs.com/package/youtube-api)
 Array(100) .fill(undefined) .map(() =&gt; 'I will not take shortcuts') .forEach(console.log)
Thank you!
Cheers :]
[https://github.com/iamcal/emoji-data](https://github.com/iamcal/emoji-data) this repo helps me sometimes. But I'm not sure it has support for latest emojis
Dafuq is this
Why is this marked as 'help'?:D
He‚Äôs been captured by a group of renegade ASP programmers, and is being held hostage. 
In this case you can skip failing tests (describe.skip/it.skip) to not break your processes because of failing tests, create tech dept ticket and fix tests one by one when you have time. It would be sad to just loose what is already coded...
I started it, it was pretty challenging for a beginner, but that made me work a lot harder which was kinda good. Stopped to read JDKJS series, as it was more beginners friendly, but pretty excited to get back to it.
Sorry. I speak in my native and afterwards convert to English in my brain. I use words sometimes without understanding them properly. What can I repair in my original comment?
Dude, WTF.
I can‚Äôt recommend it enough, it‚Äôs awesome, what a monster in programming I still blowing my mind in every chapter 
in JS you should not rely on an Object properties order, if the order is a really crucial part of the data, then send it via a Map or an Array entries and you can recreate the Object from it in Express 
[removed]
Pretty slick, I have starred it for future reference. By the way, you may want to post directly the link to the "script" file rather than the root of the repo: [https://github.com/RobertJGabriel/puppeteer-get-netflix-categories/blob/master/index.js](https://github.com/RobertJGabriel/puppeteer-get-netflix-categories/blob/master/index.js)
Which chapters are particularly mind blowing
https://btholt.github.io/complete-intro-to-react-v4/
Do it again. Without copy paste.
Template strings are great. I was asking about tagged templates specifically. Just seems like a confusing way to save two characters when calling a function. 
Base64 packs 6 bits of information in 8 bits of data. So base64 adds a 33.3% overhead. 1 megabyte of data is 1.33 megabytes in base64. In most cases, websockets are uncompressed data, so you are paying a 1.3rd performance penalty. On third extra is not a "tiny bit", especially for video if you are streaming anything above 640x480
Hello All, I have also written a blogpost on Vue.js and ElasticSearch components of Vue.js, that basically teaches us how to create A Data-Driven Github Search UI with Vue.JS. Here it is - [https://medium.appbase.io/learn-how-to-build-a-github-search-explorer-app-with-vue-js-c66f61d6e152](https://medium.appbase.io/learn-how-to-build-a-github-search-explorer-app-with-vue-js-c66f61d6e152)
hey, which extension is good for java Script .
Cool article anyways, cheers!
4√∑3 overhead, indeed. And CPU time burnt for encoding and decoding...
VSCode will work good with javascript out of the box but you can install extensions for snippets (for example typing F then tab will create a boilerplate function), You can install custom themes, if you are working with a framework/library there are probably extensions that provide snippets for those too. If you are working a different language chances are Microsoft released an extension for that, for example the 'Python' extension provides support for python files. You can get Live Server which will run a server on a port of your choice and that way you can easily navigate between your html files.
Your Library of Libraries is broken
You want to loop through the array, creating a new array when a new id is found and adding it to it, if not, add the item to an existing array, popping the current index if you did this checking. On the end you are left with multiple arrays with different ids in which different objects are with the same id.
I was the guy helping you. Let me know how you get on with the suggestions!
You want to call reduce over your big array of markers, passing in an empty array as the initial accumulator (second arg). Your first arg will be a callback that takes the accumulator and the current value. There, you want to check the accumulator to see if any elements (which would be the nested arrays) exist where the first subelement has an id that matches the current marker's id. If so, push the current element into that subarray, sort the subarray and return the big array. Reduce will iterate over your array and do this for every element, and return a new 2D array. 
On mobile right now. have you posted on stackoverflow? I'll go grab my laptop n' try to make something like this
`console.log('console.log("I will not take shortcuts"); '.repeat(100))`
Hi mate. I'll be back at work tomorrow at 8am. Will reply here if I still struggle! Thanks for your help today 
For years now, I've been using PHPStorm (and Webstorm is basically the same thing, without PHP support) and like it enough that I ended up subscribing to all their products, not just PHPStorm. I've tried other things as they came along, like Atom/etc, but nothing really does it for me like PHPStorm. VSCode would be my second choice, though I've never really sat down and put the time into trying it seriously. I vaguely remember installing it and preferring the way PHPStorm did for something, and then abandoning it.
If anyone finds this too challenging, you can always go through [You don't know JS](https://github.com/getify/You-Dont-Know-JS) series first. Both are really awesome, but YDKJS is much more beginner-friendly in my opinion.
Thanks for the explanation. That doesn't make a lot of sense to me, why would 6 bits of data require 8 bits for base64 representation? In 6 bits you can go up to 64 so intuitively I figured you'd be able to represent anything base 64 as 6 bits. Live and learn I guess :shrug:
To your second question: if you aren't storing sensitive data, why encrypt at all? To your first question: I'm not a security expert, so I can't expound on it. I'll therefore refer you to this: [https://hn.algolia.com/?query=author:tptacek%20jwt&amp;sort=byPopularity&amp;prefix&amp;page=0&amp;dateRange=all&amp;type=comment](https://hn.algolia.com/?query=author:tptacek%20jwt&amp;sort=byPopularity&amp;prefix&amp;page=0&amp;dateRange=all&amp;type=comment) 
Here's another article that talks about his previous experience a little. https://www.businesswire.com/news/home/20190108005325/en/npm-Appoints-Bryan-Bogensberger-Chief-Executive-Officer Maybe it shouldn't but it makes me mildly nervous that his vision is much more monitary than Isaac's
I might have misunderstood what you're trying to achieve, but this solution using lodash and moment might work; const newArray = _.groupBy(markers, marker =&gt; marker.id).map(markerGroup =&gt; _.orderBy(markerGroup, moment(marketGroup).format("x"), ["asc"])); You may need to pass in the date format as the second parameter in the `moment` call if it's not one that moment can discern by itself.
Then compile (minify) it yourself from the source that you did read.
Additionally, this opens it up to more platforms, since JSON and strings are fairly universal, while binary data may or may not be supported by a specific platform.
I started it as a complete beginner, like Zero experience, and couldn‚Äôt get through the array chapter. (I aired my grievances about the squirrels in this sub a while ago.) But, fortunately, I found a course that worked and I‚Äôm looking forward to getting back into EJS soon (The book is written well.) Would not recommend for complete beginners. 
We've made definitions for TypeScript, and a quick search shows there are tools to generate Flow types from TypeScript: https://github.com/joarwilk/flowgen Might be worth looking into
Link? 
I had a similar question when I first came upon this lib a few days ago. /u/localvoid, I saw that the latest version of `ivi` also includes [something like hooks in the components API](https://github.com/localvoid/ivi/#components). Thanks for putting so much detail on performance optimizations in your README and code, it's very interesting!
Oh interesting TIL
Eloquent JS has been a community favorite for a long time, and the 3rd edition now covers ES6. YDKJS is a relative newcomer on the scene.
Go here: [https://frontendmasters.com/courses/](https://frontendmasters.com/courses/) and search for Netflix.
JSON objects are not guaranteed order
I don't think YDKJS is intended for beginners. It goes pretty deep into some nuanced territory. Highly recommended, but it's what I would recommend to someone who wants to improve at JavaScript. Eloquent JS is an excellent guide for the beginner with some nice stuff that intermediate developers would benefit from, too.
I started reading it about a year after I started learning javascript and it has been so helpful in clearing up many topics. I feel that I actually understand the language and programming in ways that I did not before. Definitely worth reading!
All of the production web-apps at work were started with create-react-app and then ejected and customized.
Same here
Don‚Äôt you have to use .parse() first?
Thanks!
I read it as a beginner, then again as an intermediate. I think the book offers a lot that both groups can benefit from. On my first read the learnings were more conceptual than technical. I also think that beginners should dig right into the hard stuff, read things they don't understand, and in general push beyond things that are aimed primarily for beginners.
I read blade, I think Laravel templating. I initially thought this was a react-based JavaScript framework which parses blade-esque templates similar to handlebars. Didn't make sense to me either, but that's what I thought reading the title. ü§∑‚Äç‚ôÇÔ∏è
Use a == once if you're doing this against your will.
var markers = [ { 'id': 1, 'date': 1 }, { 'id': 1, 'date': 2 }, { 'id': 2, 'date': 7 }, { 'id': 2, 'date': 21 }, { 'id': 9, 'date': 1}, { 'id': 5, 'date': 1 }]; var mappedMarkers = markers.reduce((accumulated, element) =&gt; { if(!accumulated.length) accumulated = [[accumulated]]; var index = -1; for(var i = 0; i &lt; accumulated.length; i++) { if(accumulated[i][0].id === element.id) { index = i; break; } } if(index &gt;= 0) accumulated[index].push(element) else accumulated.push([element]); return accumulated; }); mappedMarkers.forEach( locArrayGroupedById =&gt; locArrayGroupedById.sort( (a, b) =&gt; a.date &lt; b.date? 1: a.date &gt; b.date? -1 : 0 ) ); 
Use a == once if you're doing this against your will.
Skip Angular. React is safe, good for getting jobs. It's like the Java of JS front-end libraries. Vue is fine, I prefer [Riot.js](https://riot.js.org/). And yeah, I'm just some guy on the internet having [opinions](https://www.youtube.com/watch?v=yqTpG5obPV8).
IMHO: All of them are popular( I think React is more popular ). But it would be great if u would know basis common UI developing principal. I mean you want to be a front-end developer not React-developer, don‚Äôt you?) On the interview they should ask you about JS not React or Vue. So if you have excellent knowledge about JS. It doesn‚Äôt matter what a framework or library. P.S. I work on React
That‚Äòs the way you should go. Webpack is so full of great features that you shouldnt miss.
these books don't compete because they aren't similar in aim or scope. I find this post puzzling. EJS is a how to program and how to program using javascript book, and any discussion about how the language works is entirely subordinate to that aim. YDKJS is a how does javascript work book, and any discussion about how to write code is entirely subordinate to that aim. They are both best of breed books but deal in different domains. But to the point of this post, I'd say that in light of the aims of these two JS classics, it's possible to skip EJS as JS programmer but you need at some point to read YDKJS. 
* React seems to have the most jobs from what I've seen. * Angular has the steepest learning curve. * Vue has the lowest learning curve. It's also very, very nice and easy to reason about, IMO. A lateral transition between React and Vue is not that difficult (I use both, prefer Vue). I would recommend you start with Vue, [get this course, "Vue JS 2 - The Complete Guide (incl. Vue Router &amp; Vuex)" on Udemy by Maximilian Schwarzm√ºller](https://www.udemy.com/vuejs-2-the-complete-guide/). His [Nuxt.js course](https://www.udemy.com/nuxtjs-vuejs-on-steroids/) is also worthwhile. Max also has a very in-depth [React course](https://www.udemy.com/react-the-complete-guide-incl-redux/) and a couple [Angular courses](https://www.udemy.com/user/academind/). If you want to preview his teaching style, check out his [Academind youtube channel](https://www.youtube.com/channel/UCSJbGtTlrDami-tDGPUV9-w)
Really though? Aside from the ages it takes to just install all the dependencies and stuff, u literally just need to make ‚ë† config file and u can basically get up and running. Of course adding plugins and loaders can be kind of a slow process, but it‚Äôs far better to chain them together in webpack instead of calling each of them individually using their respective cli‚Äôs.
Would it be helpful when getting the markers[] points intially to call from the db like this: `SELECT * FROM points SORT BY date ASC;` so that the points are already sorted by date?
TL;DR; WebPack is extremely good and it's not going anywhere soon. It is used out-of-the-box in all major CLIs: CRA, Angular etc. If you are wondering if anyone is setting it up manually, then the answer is YES. I setup it manually in React projects because I really hate what CRA is using under the hood. Long version: WebPack is a bundling tool. It does exactly that: bundle the code. It is an extremely powerful tool that went through a couple of major overhauls and as far as I remember, v4 aimed at going configuration-less as much as possible. If you want to use it for fast prototyping, you can do it as far as you understand how it works. If you understand how it works, it will be pretty easy to setup. Indeed, configuring it for production builds of enterprise/huge apps will require some advanced knowledge. Also, Parcel is another bundler but it is not quite intended for "apps and websites" but more at "libraries".
&gt; let‚Äôs try to decide which is best from the two Why? Because one size fits all? Because everybody learns with the same approach? Because being "both excellent" would imply having to make a choice and people do not know how to make choices? Because they might, \*gasp\*, have to try starting with one of them only to discover that they, \*gasp again\*, would've better tried the other one, as if they couldn't now switch or something? Because **two** options are too many?
It looks to me that someone at Microsoft thought that it could be useful to the wider community and published it after getting permission. No need to be so harsh.
a bit aside from the debate, I started using Rollup and really like that it takes me no time to set up a config, as opposed to webpack. So my last React + typescript project was made with Rollup, it took a bit of time (like maybe one day) to set a livereload server that would detect CSS changes (yeah I'm old school like that), but now I can reuse it in any new project.
Agreed on all. Riot.js is really nice and straightforward. Vue.js is similar but takes the 'everything should be code' path, rather than the 'use html where html is needed' path that riot.js takes. In terms of your own development, learn vanilla javascript, html and css well. That applies to everything. In terms of getting a job... well - that depends on what people are hiring for near you. React is probably best for that, but you should look at what interests you / what is nearby and choose. There's no reason you can't learn all of them either.
React has the biggest market share, but the trends that it follows are quite hipster-ish. Also, I quite dislike JSX because it breaks two things: separation of concerns and programming best practices. Angular has a big learning curve due to the fact that it is a framework and not a library. It comes with tons of things: HTTP client etc. The bad part is the performance, but that is getting fixed build by build and IE is losing the enterprise marketshare more and more. Vue has the smallest market share among the three mentioned. I quite like it, but man... that thing looks loose and I don't think it will be widely adopted (or at least not in big enterprise projects). What should you learn? JavaScript and programming paradigms in general. From my experience, it's much better to be a framework agnostic developer that can adapt to whatever use case. PS: Just avoid udemy. Pay a little more for FrontendMasters or at least google the names of the courses.
Not to shit on your post at all but there isn‚Äôt much to debate about. They are both great in their own realm. It‚Äôs settled. 
Either one of the only get recommended so frequently because they're free. They're both good books, but I don't think either one would be in contention for the best JS resource.
Agreed. I find it interesting that it gets mentioned so much.
JSX breaks what best practices? Modern code organization has changed from what we have all learned. Keep every piece of that ‚Äúmodule‚Äù together. If it‚Äôs a component, make a folder for it which has the markup and one for the styles. If the component is complicated enough, you can add some HoCs, but it should probably be broken down one way or the other. Alternatively, if you have few styles keep them in JSX, it‚Äôs fine. On the API side, it works the same way. Make a folder for your module, say ‚Äúuser‚Äù. Make a user resolver, service, DTO, model, etc all in that one place. All of this moves us to a place where we don‚Äôt have to search all over the place to add a been property to a UI or API. It‚Äôs a good thing for productivity. 
This didn't work for me. Each item ended up in its own array even though there are shared ids.
&gt;Also, Parcel is another bundler but it is not quite intended for "apps and websites" but more at "libraries". That's incorrect. The entry point for Parcel is an index.html file, and it clearly states in the docs that it is for applications. Maybe you're thinking of Rollup? It does often get used for libraries because it produces very efficient bundles, but I use it for a few of my apps also. With the recent 1.0 release it has excellent support for code-splitting and dynamic imports, too.
Maybe you'll like something which abstracts Webpack's config away from you? [https://github.com/egoist/poi](https://github.com/egoist/poi) [https://facebook.github.io/create-react-app/](https://facebook.github.io/create-react-app/)
Performance problem is solved, now I am focused on improving composition model and really interested in how far we can go, that is why events are attached with special nodes instead of being limited to DOM nodes, immutable virtual dom nodes are also quite important for composition.
Avoid angular. Vue is great but react perhaps safer for now.
Anybody have the results? This should only be a 1 time until the next update right?
Hi Guys! I've just write this simple tool that allow you to manage your backups. Hope that can be helpful!
i never liked eloquent js. but seeing as its so popular i cant say so.
I was an early adopter of Angular and have several production apps running with it. I quite like it and it wasn't really too hard to learn. But in the beginning it was tough to update between versions as they were major rewrites every time it seemed like (this has stabilized now). I am currently working in react and also really like it. In fact I think I like it more than Angular. My main advice for you is what another poster said. Focus on javascript and typescript and programming in general. If you want, pick one library/framework to use (maybe React because it has such a big market right now) and learn it...because learning one of these libraries/frameworks makes it exponentially easier to pick up any other one and learn quickly. Knowing Angular, I am able to work in other libraries and frameworks with a far diminished ramp up time. I can be working on another developer's existing project in a new framework in days not months just from having a solid JS, typscript, and angular background. Be flexible and don't attach your career to one language or library.
&gt; why encrypt at all Jwt is an auth token, it isn't for storing/passing secure data. You can add a payload which is encoded and part of the hash. So everyone can read it, but if they try to change it the hash will be invalidated and the auth token will no longer work.
You are right. I was thinking about Rollup. 
Can you please share some of what you think is in contention for that? I've just started out in the professional JS world and am looking for more resources.
Formatted the array correctly this time and now I get: markers = [ 0: {id: "905094", species: "1", date: "2018-03-17", length: "17.5", lat: "38.919369", ‚Ä¶} 1: {id: "905108", species: "1", date: "2018-03-24", length: "20.0", lat: "39.007038", ‚Ä¶} 2: {id: "908447", species: "1", date: "2018-06-01", length: "30.5", lat: "38.875151", ‚Ä¶} 3: {id: "908449", species: "1", date: "2018-06-01", length: "21.0", lat: "38.865595", ‚Ä¶} 4: {id: "905108", species: "1", date: "2018-06-13", length: "22.0", lat: "39.049934", ‚Ä¶} 5: {id: "908447", species: "1", date: "2018-06-13", length: "0.0", lat: "38.991642", ‚Ä¶} 6: {id: "908449", species: "1", date: "2018-07-26", length: "23.0", lat: "39.168551", ‚Ä¶} 7: {id: "905094", species: "1", date: "2018-09-03", length: "19.25", lat: "39.155149", ‚Ä¶} ] Uncaught TypeError: Cannot read property 'id' of undefined at markers.reduce (map.js:222) line 222: if(accumulated[i][0].id === element.id) {
Formatted the array correctly this time and now I get: markers = [ 0: {id: "905094", species: "1", date: "2018-03-17", length: "17.5", lat: "38.919369", ‚Ä¶} 1: {id: "905108", species: "1", date: "2018-03-24", length: "20.0", lat: "39.007038", ‚Ä¶} 2: {id: "908447", species: "1", date: "2018-06-01", length: "30.5", lat: "38.875151", ‚Ä¶} 3: {id: "908449", species: "1", date: "2018-06-01", length: "21.0", lat: "38.865595", ‚Ä¶} 4: {id: "905108", species: "1", date: "2018-06-13", length: "22.0", lat: "39.049934", ‚Ä¶} 5: {id: "908447", species: "1", date: "2018-06-13", length: "0.0", lat: "38.991642", ‚Ä¶} 6: {id: "908449", species: "1", date: "2018-07-26", length: "23.0", lat: "39.168551", ‚Ä¶} 7: {id: "905094", species: "1", date: "2018-09-03", length: "19.25", lat: "39.155149", ‚Ä¶} ] Uncaught TypeError: Cannot read property 'id' of undefined at markers.reduce (map.js:222) line 222: if(accumulated[i][0].id === element.id) {
Eh, maybe - yes and no. Profession is probably the right word, I guess I just didn't think of the interns :D Initially I thought you were a relatively new web-dev actually working in the field (outside of interning) and didn't know what a scraper was. Anyway no big deal. Good luck.
I have both, and can confirm it‚Äôs good to have them both. After the two (or seven really) I‚Äôm not completely puzzled about JS *all the time*. That said, even with the two down, I‚Äôd totally buy a You Really Don‚Äôt Know Every Last Goddamn Bit About JS. 
From the docs: &gt; For better security it is highly advised to use Sequelize.Op and not depend on any string alias at all. You can limit alias your application will need by setting operatorsAliases option, remember to sanitize user input especially when you are directly passing them to Sequelize methods. const Op = Sequelize.Op; //use sequelize without any operators aliases const connection = new Sequelize(db, user, pass, { operatorsAliases: false }); //use sequelize with only alias for $and =&gt; Op.and const connection2 = new Sequelize(db, user, pass, { operatorsAliases: { $and: Op.and } }); &gt; **Sequelize will warn you if you're using the default aliases and not limiting them** if you want to keep using all default aliases (excluding legacy ones) without the warning you can pass the following operatorsAliases option ... I believe you either need to use the "operatorsAliases: false" option, or explicitly call out which operators you want, in order to disable the message.
Here's a few: [JSTheRightWay](http://jstherightway.org/) and [JavaScript.info](http://javascript.info/)
Definitely not a beginner book. It's great to give it a shot after you've had some experience with the concepts it's talking about.
thank you
What was your solution for reloading? Does it hot-reload the CSS or does the whole page refresh?
Can you share what were the reasons for eject?
[removed]
Had a hard time parsing the other solution on mobile mentally but it looks almost right? Here's a JSBin I threw together https://jsbin.com/fijahayuru/edit?js,console
1. NPM: you can use `npm audit`, which checks the package for past vulnerabilities. 2. 3rd-party tools: you can use [snyk](https://snyk.io/), which I highly recommend. 3. Together with the previous two, I like to check the popularity of the libraries. Like that, you can pseudo-check the safety of the package and check its "usability" as well. A few thousands Github stars (like &gt; 5000) is a good indicator.
One of my favorite is the video game one 
There's something oddly meta about this comment being posted twice
There's something oddly meta about this comment being posted twice
Oh the pixel editor too is a very good one
All of them, I haven‚Äôt finished yet, but every new chapter brings something I‚Äôve never thought about or not even heard of it. The squirrel thing was so fucking awesome, every part of it, since the creation of the phi method to the holy shot function that take the verbs, tab them into that table, the way he organize that fucking table depending of Booleans and finally throwing the right answer. Again, what a fucking monster in programming. I‚Äôm pretty sure that‚Äôs nothing compared with the next chapters.
Hey, Im currently running and will post the results, currently on over 5000.
May be we should create an Eliquent JavaScript subreddit for people who are fans of the book. What do you guys think of the idea?
Never heard of this book. Going to give it a read. Thanks OP. 
Dev leads in my company recommend JavaScript.info
I'm fairly certain that the last time I checked this message was hard coded so regardless of whether or not you do the right thing, it still outputs that log message. But yeah use `Sequelize.Op.x` and you're in compliance.
Ha, I got a server error when I first posted it and so posted again. I guess the first one stuck, too.
This looks like lodash _.get. Is there a reason to use this utility over that?
One thing is what you see under the debugger, which will usually sort it to make it easy on you. The props themselves are in the order they were declared/ added 
\&gt; only get recommended so frequently because they're free I regularly recommend YDKJS for anyone wanting to understand the nuance and details behind their JS. I even helped KS it/them, so expense was not in my reasoning. Perhaps it gets mentioned a lot because it's free (why would you recommend them to someone totally new to JS?!) but I will totally defend it as one of the best JS resources.
Thanks for sharing....
You can run npm audit. 
&gt; I would suggest you replace your code blocks by &gt; embedded gists &gt; . It's more impactful with proper syntax highlighting ;). I disagree. I do most of my browsing with noscript only trusting a few sites. That Medium.com page you linked is a great example --- their embedded code blocks look fine. Their microsoft(github) embedded fragments are blocked so just show up as big blocks of whitespace. And no, I won't whitelist Microsoft (which includes github) in my noscript settings. 
TIL
But where? I cannot figure out what should I replace with 'Sequelize.Op.{fxn}' That's why I am confused because I just did a delete operation, without any of those operaters. But it still shows me the warning message. When I comment this line out, no warnings whatsoever....
https://youtu.be/polu3EWCQCo https://www.youtube.com/channel/UCGGRRqAjPm6sL3-WGBDnKJA This is really focused on data viz in React but check out the second link as well. Netflix has a UI Engineering channel. 
Never use the native Javascript date stuff: it's a mess. Use Moment.js or (the lighter weight) Date-FNS, or really any other JS date library, but never use the native objects directly unless you want to memorize a *ton* of weird quirks just to work with them.
I don't think I can use moment.js with OS.js
I'm not familiar with OS.js, but I don't see why not. You could be using React Native, Express, React, and some sort of weird JS Arduino JS library, and you *still* could use a date library. They're just functions.
Got my current job watching the Mead course. It took awhile for me to understand how Redux works and I still don't know how to work with Jest, but that might reflect more on me than the quality of his course.
I agree. I remember reading it when we just started learning JS in bootcamp, most of the stuff went over my had. But now a lot of it makes more sense to me.
Using date-fns has made the days of the month go to 40.
Sounds great! Just wondering, did you have a lot of previous programming experience?
Agree on everything u say here Gigusx. Great course and the section with databases is quite cumbersome, but still very important and well explained I'd say. I had no previous knowledge of SQL, and after this course I definitely feel MongoDB is what I will prefer to work with in the future. Looking forward to the GraphQL part..
Use a === if you're ok, strictly speaking.
I tend to recommend Grider's courses, since he gives you the code, then walks you through exactly what's happening. 
Thx! I heard he is an excellent teacher. Have you taken Max or Mead's courses as well?
Used a couple of Andrew Meads courses and thought they were both great. Goes at a good pace, covers everything from the ground up and explains in an easy to understand way
\`\`\` let results = await MyModel.findAll({ where: { id: { \[Sequelize.Op.eq\]: 1 } } }); \`\`\` &amp;#x200B; That'd be the correct usage of the functions. Sequelize throws the error regardless if you use those operators. I'd suggest you just set \`operatorAliases\` to \`false\` and then use the method above when you need to query something.
I've taken some of Mead's courses, specifically his v1 React course,and they are pretty good. But it is certainly a different style of teaching, or at least it was when I was learning. I tried to go through Max's Vue course before I realized it was outdated. What I did learn was good though. 
Well it's not quite down to that degree but there are some good tech Podcast that I enjoy listening to in a car on a way to and from work
I would second the podcast idea. Probably the best route for audio code. You'll want to find one that pretty technical though instead of theory. 
I'm kind of beginner and for example closures took me longer to understand than it should've, like 2-3 hours of reading other guides about it. I definitely think it's a good book but most of the stuff goes over my head. With that said could you guys recommend me a more beginner friendly book on js? (Preferably a free one)
My first video on Javascript. Learning by teaching :-)
It's so difficult that i have quit it but come back to it 6 times because the website makes it nice to look at. I hate myself.
Perhaps not an option, but why not simplify all this? Months, with the exception of leap years, are constant. Calculate leap to confirm feb. from there you can google the operation to find the day of the week given a day. You can now plot a table with offset of day of the week by inputting first day of the month instead of last. Just a thought, what do you think?
Did you buy the book or just the free online version? Looking to see if anyone recommends actually purchasing a hard copy.
Ahhh yes, podcasts would be perfect! With minimal googling- I found a site that has quite a few. Not sure if I‚Äôm okay to post links so I won‚Äôt. But if anyone wants to- PM me and I‚Äôll send it to you Thanks for your help!
I can also recommend the Grider courses, they got me up to date on the React/Redux ecosystem and helped me land my current job. &amp;#x200B; My only gripe is that some of his boilerplates used very old versions of modules and it wasn't easily upgrade-able without more knowledge, but by the time it became an issue I was comfortable enough to not really need them (and this may have changed, its been over a year)
Give credit to the source when commenting your code.
Why do you think that? I found YDKJS to be much more suited for someone who has an already developed JS foundation, as it gets into the *why's* of the language, while EJS deals more in the *how's* and thus builds that foundation. The "how" section of YDKJS is extremely brief as it assumes some familiarity with JS and programming concepts.
It's fine, there's nothing illegal about it
Okay perfect thanks !
Okay will do thanks man !
I think thats what w3schools is for
Totally. The first few chapters are good for beginners, then... all of a sudden, way too complicated. That was my experience at least when I was a beginner. On the other hand, maybe that's just the fact of life about computer programming - "all of a sudden, way too complicated." I'll confess that have yet to get the ES6 edition, but from working with the earlier editions your assessment is right on. 
Thank you for this note, I need to be more clear!
Why do you need to read YDK? You can be just as effective, or even more effective, not worrying about the esoteric parts JS.
I'm sure you'll find people who hate this, and some people who prefer this sort of thing. I also dislike `new`. The pattern around `Object.create` and the manipulation of prototypes could be simpler, as you suggest. Also, your way of implementing the factory function could be simplified by actually writing a simple constructor. In your shoes, I'd probably do something like this: const vec = function(){ // a simpler constructor is basically a one-liner const Vector = function(...args){ args.forEach(arg =&gt; this.push(arg)) } // use a plain object literal to describe methods &amp; properties const extensions = { add(v) { return createVector(this.map((val, i) =&gt; val + v[i])) } // other vector methods &amp; properties go here } // create and then *modify* the prototype vector.prototype = Object.create(Array.prototype) Object.assign(vector.prototype, extensions) // wrap your constructor in a very straightforward factory function const createVector = (...args) =&gt; new Vector(...args) return createVector }() I'm not sure it's the best pattern. Crockford details a lot of this sort of thing in *Javascript: The Good Parts*, which I can recommend even if you're using ES6 syntax and concepts.
Nope. Base64 takes 6 bits out of the input-stream, and 'converts' them into a character, then takes the next 6 bits, and converts them. Since every character takes 8 bits to represent, you basically convert 6 bits into 8 bits.
It may work, but not exactly correctly. You picked a bad example to start with. Array is a special case that, to properly extend, you need to use the `class` syntax. It's a special case that requires extra initialization handled by `super` in your subclass which is only available when using `class`. For example if you added a new element to your current `v1` at some arbitrary index, the `length` would not update. v1.length // 5 v1[10] = x v1.length // 5 A lot of the other array functionality is safe, though, since they're generic and can be called against any array-like, e.g. Array.prototype.push.call({length: 5}, x) // ok So the fact that you're vectors are extending from `Array.prototype` means they can get this functionality for free. They just don't get all of it working correctly. Now when using classes it does mean you'd be using `new`. And if you're looking to avoid that, then you either need to wrap that up internally in your `vec()` or maybe stick with what you got. It's fine (not great), and it "works", just so long as you're not depending on all the array functionality (like `length`) to be completely there.
I would like to recommend: [JavaScript: The Definitive Guide](https://www.amazon.co.uk/JavaScript-Definitive-Guide-David-Flanagan/dp/0596101996) for the start and [You Don't](https://github.com/getify/You-Dont-Know-JS)[ Know JS](https://github.com/getify/You-Dont-Know-JS) to enhance your knowledge.
Maybe so, I'm just projecting. I absolutely treasure the series and would shudder to have to make do without. 
I liked it after learning the concepts prior to it. But my issue with it is the writing style and explanations. When learning the nuance of the very complex topics I‚Äôd much rather have something written plainly. I don‚Äôt wanna have to battle the language/verbiage to get to the learning. It almost reminds me of pure technical writing and legalese but for JavaScript. But that‚Äôs just me. 
I really appreciate this feedback, I do need to use length, although assigning a value to an arbitrary index is a very niche case. Can you give me a simple example of using the class syntax? I'm sure I can fill in the blanks.
Object.assign is a great hint for me... the more verbose syntax for Object.defineProperties was a huge pain in the butt. I also see that putting the creation logic in the constructor make a slightly more elegant interface. I will update it.
I'll go against the grain and non-recommend the YDKJS series, especially to a beginner. A beginner needs to know the *why* behind what they are doing as much as the what. YDK is very focused on the language itself, and usually lacks the context explaining why you would use (or not use) this or that feature, and how those choices affect the solution to the problem you are trying to solve.
Consuming the library is of course raw JS so as to be platform agnostic for anyone wanting to implement as is. But, if you want to customizer and run with it, you'll see the component is written in React.
I would highly recommend Eloquent JavaScript. You can access the full book in PDF format [here](https://eloquentjavascript.net/Eloquent_JavaScript.pdf) (it's free!). I found the book so useful, I ended up ordering a physical copy. If you are a true beginner, "JavaScript &amp; JQuery" by Jon Duckett is a good starting point and you can find that book [here](http://javascriptbook.com/), but Eloqutent Javascript is a book I reference semi-regularly, even after a few years in the field.
What topics within YDKJS would you say are esoteric or non-helpful? 
For the core Javacsript language, I learned a lot from [Speaking Javscript](https://www.amazon.com/Speaking-JavaScript-Depth-Guide-Programmers/dp/1449365035). It's not super long and does a good job thoroughly explaining the core language, independent of whether you'll use it in the browser or with Node. Of course it's from 2014 and JS has been evolving in leaps and bounds since then. So you'll want some additional resource to pick up on ES6+ features. I learned quite a bit from [Secrets of the Javascript Ninja](https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/1617292850) but even that's a little out of date now, so you'll need to poke around at other resources for the most recent language features. That was the core language, but you'll (probably) be programming for the browser or for Node. I learned Node through [Node.js in Action](https://www.amazon.com/Node-js-Action-Alex-R-Young/dp/1617292575). That was back in 2014 so my copy is somewhat obsolete, but there was a second version published in late 2017 which I haven't rfead but assume is at least somewhat decent. For browser programming, I'm not sure what to tell you. There is the mammoth [Javascript: the Definitive Guide](https://www.amazon.com/JavaScript-Definitive-Guide-Activate-Guides/dp/0596805527) but I don't like this book. It's too much of a reference tbh, and an out-of-date one at that. I once heard it said that trying to learn how to program Javascript by reading this book is like trying to learn how to write poetry by reading a dictionary. However, I don't know if I actually do have a good book suggestion for browser programming.
Why not both?
Only if you're going to release your code, otherwise don't waste your time. Developers are in short supply as it is no need to saddle the community with yet more chores.
Ye that‚Äôs what I was thinking just wasn‚Äôt sure if it was okay 
Just extend from Array: class Vector extends Array { // your code here add(v) { return this.map((n, i) =&gt; n + v[i]); } } const vec = (...args) =&gt; Vector.of(...args); vec(1, 2, 3).map(i =&gt; i * 2) // Vector [2, 4, 6] vec(111)[0] // 111 vec(1, 2, 3).length // 3 vec(1, 2, 3).add(vec(1, 1, 1)) // Vector [2, 3, 4]
I had a candidate tell me that let and var did the same thing in an interview the other day. 
They‚Äôre usually just basic functions that you‚Äôre using in combination with other code. You can think of them as a block that you piece together with other blocks. You didn‚Äôt make the block itself but you knew how and where to use it with a project you designed. 
See /u/lhorie's post for a good example. I think, from what you've shown us, its only missing the part where you're allowing the first argument to be an array. You can update `vec` to spread `...args[0]` in that case.
havent actually read this but just from looking at the table of contents it looks like very beginner material (loops, conditionals, functions, scope, requests...). What about this makes it not for beginners? 
Yes. Put all your data into an ArrayBuffer, and then pass that buffer to [window.crypto.subtle.digest(...)](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest). Or if you need to do it in node, look up the node crypto module.
prototypes are not generally a good way to go about things besides, const vec = (... args) =&gt; Array.from(args);
I want to share something with you: I tried to learn to code with books, it did not work. Maybe it will be different with you, maybe not. As you say in your post, you want to learn a language (JavaScript). Not a concept or how to do something specific. I would advise you to try algorithm challenges like those you can find on [Codility](https://www.codility.com/) (by the way, the company I work for test screens new devs with codility). Afterward, I would advise you to try building an app with a JavaScript frontend framework of your choice: React, Angular or even React Native for mobile. However, if you really want to learn by reading, I reckon you read Mozilla's guides to web development, and for you especially the one concerning [JavaScript](https://developer.mozilla.org/bm/docs/Web/JavaScript/Guide).
There's a lack of love for Max being displayed here which is a shame. I did his course last year and thoroughly enjoyed it, very well paced and covered everything I needed to know. I needed to get up to speed on React for work and it did exactly that for me.
Thanks for mentioning ‚ÄúSpeaking JavaScript‚Äù! This is an updated version of it: * ‚Äú[JavaScript for impatient programmers](http://exploringjs.com/impatient-js/)‚Äù (over half is free to read)
&gt; Maybe so, I'm just projecting. thanks for admitting it at least. just because it worked for you and you love it doesn't mean you need to read it or it's the only way to learn the esoteric parts of js.
Thank you for reply. I'm happy to hear that it's helpful. When I posted, this post was spam filtered so It had not been shown for a day. Could you tell me how did you find this post?
disagree. if you didn't write the code, a comment linking to it is almost always helpful. there's usually context in the link, especially if it's a github issue or stackoverflow answer. coming back to it in a few weeks / months and not knowing what is going on, or realizing it's not in your style is very confusing.
beware, w3schools used to have a really awful reputation. don't know if they've improved, but about 10 years go, their code had mistakes and didn't work the way they said it did.
Here's a few that I did when I started, in order : - Music player, with volume slider, timeline, song info, visualizer, ... - A puzzle game (didn't use any canvas for it, but it can be a good way to learn the canvas api) - A level editor (the game used and xml file to describe where things went, so an xml to json library made it easy) - A clicker game - did a few school projects, one of them being a program allowing teachers to program when they'd teach, and also allowing them to see some stats - I'm now working on an NES emulator, not for beginner for sure, but adding it to give an idea of the path I took, this project is helping me learn how to organize myself, because messy code isn't helpful for something like this Not adding the todolist project in there, since its a basic staple one thats recommended for any language / framework I feel, so adding it here wouldn't be that interresting
That doesn't sound right, what's your code?
You're Axel Rauschmayer? If so: thank you, I got a lot out of your book. Pretty much read it cover to cover.
Thanks for sharing. The library looks amazingly popular with its 8k GitHub stars. Will try to use on a mini side project soon. Is there any alternatives to `brain.js`, except the traditional python libraries?
Thanks!
W3 is pretty solid for simple reference these days.
I pretty much agree that books won't be the most important part of one's programming education. But I find it pretty useful to power through a good book when I'm trying to pick up a new language. It gives a good baseline from which to approach other resources and sample projects.
Yes, I know React is not a framework. But when used in the same sentence with Vue, I am so tired of having to say "frameworks or libraries like..."
If you haven't made anything with pure JS outside of your course, I'd saymake projects without it first to get more knowledge about the language itself, that way you'll be able to jump between frameworks more easily as for jobs though, both react and angular are equaly as big (react is considered bigger because we're adding personnal projects, but angular is used a lot in enterprises, so they're egal on that front), meanwhile vue is behind on things, it has a good premise but it currently lacks libraries for enterprises to start considering it (maturity is becoming less of a problem with it IMO)
Here are some from the Freecodecamp curriculum I enjoyed: - Weather app - Calculator - Tic Tac Toe - Simon Game - Pomodoro Clock - Drum Machine 
well im going to go with my perspective and suggest that people read it anyway
I used to use ExtJs exclusively until they suddenly changed their licensing in 2014 and left me with some very angry clients. The replacement that I found is Qooxdoo (http://qooxdoo.org) which is MIT licensed. And I have integrated it with Bridge.net so that I get the support of Visual Studio tools. https://csharpwebexpress.com Sencha had a great market and they blew it big time. 
I remember wanting to build a spaced-repetition app using React. Never did it though. Thanks for sharing!
[removed]
Yep the licence change, and suddenly Extjs5.$$$ stopped dev and upset clients, And it was also expensive for an indy dev....
Which videos are you referring to? `let` and `const` are declarations, an **I**mmediately **I**nvoked **F**unction **E**xpression is just a function that executes itself, I'm not sure how the videos talk about how having one effects the other. Were they using **IIFE**'s to prevent scope pollution from using the `var` keyword, or something? &amp;#x200B; Anyway, I use **IIFE's** rarely. Running `async` code on the top level, that's pretty much it: // I like using the void keyword instead of wrapping the entire thing in brackets, but it pisses off the linter: void async function main () { await whatever() }() &amp;#x200B;
Looking at that medium article (which is great btw!) i think that's just not the scope of a framework, or shouldn't be. It's the eco systems scope. And it has been abstracted. For instance here: https://github.com/drcmda/react-with-gesture i'm sure Vue has something like that as well.
I like _JavaScript: The Good Parts_ by Douglas Crockford
thank you for that hint, it's quite helpful on prototypes... I like their semantics, very compositional. they do give a bit of that C-style 'shoot yourself in the foot' feeling. Sometimes the only way to learn is to do it wrong!
This is great! thanks so much
&gt; very compositional. no, they're mutative. you're changing the object. they don't compose. doing this compositionally would mean making your own class and keeping internal members.
Like Anki?
Let's see, -- silverlight got dropped by MS -- GWT 2.0 development stopped, 3.0 is only for internal use at Google -- GXT (Sencha) terrible licensing -- ExtJs (Sencha) ditto -- React.js no complete widget set -- Angular.js - 2.x to 3.x complete rewrite and no complete widget set -- smartclient - lots of widgets, set up for JSP (Java) So, if an indy dev wants to built business apps (scheduling, database management, client dashboards, etc) what is left? Qooxdoo has at least been consistent for over a decade now and it is MIT licensed - also helpful support on Gitter
I stopped using that package and I got a hold of OS.js's prototype calendar component.
The game blackjack is a good one
Thanks man I‚Äôll be warned !
Yea that‚Äôs what I was thinking!
IIFEs are used for creating modules and things like that, which is flatly obsoleted by the native ES6 module. But `let` and `const` are not related to either that much. Maybe you misheard? 
Go for You Don't Know JS by Kyle Simpson. That book is almost everything that you will need. Take time with this book because it goes very deep. Also great recommendation is Object Oriented JavaScript and Eloquent JavaScript. &amp;#x200B;
I look at r/Javascript regularly searching for useful stuff, like this
AS @wreckedadvent mentions, they're really two different things. Before let/const, the only way to create a scope was with a function. As mentioned, it was often an attempt to isolate code for a modules. It may also be used simply to privatize scope, which can now use let/const. var myModule = (function(){}( // build up module return module; // built up module )); However with modern ES6 or even node-style (commonJS) modules, it's really not the way to do this anymore. Now getting ES6 (or cjs) modules into your browser is a different story... iirc there's [some support](https://developers.google.com/web/fundamentals/primers/modules) for loading modules with `&lt;script type="module" href="..."&gt;&lt;/script&gt;`. But this leaves old browsers behind and may be less than effective depending on your needs when needing to download lots of scripts over the internet. This is where you want to use a bundler. Webpack is generally considered the best option if you're composing a site/application. Rollup is generally considered if you are creating a module for reuse. In addition to this, you may want to use a transpiler, such as TypeScript and/or Babel which will allow you to use syntax not yet supported by the browsers your application needs to support. It's become relatively safe to give IE users an error message, and only support recent versions of Edge, Safari, Chrome and Firefox as primary targets, most will not be more than a year old. In this way your transpiling will be much smaller. How far you go really depends. All variables you work with should now use `let` (if you want to reassign the value later) or `const` (if you only assign once).
Thanks for sharing your thoughts!
Agreed, l really enjoy his teaching style as well, so well structured and great content. 
&gt; Pages, code or other content from W3Schools may not be redistributed or reproduced in any way, shape, or form without the written permission of Refsnes Data. https://www.w3schools.com/about/about_copyright.asp
Yeah that's what I heard, his content doesn't seem to be as up-to-date as Max's or Mead's courses. But he seems to be a great teacher though
I mean sure if we're talking about substantial amounts of code, but this is about w3schools.
I picked it up recently and It's fantastic, I learned a lot 
That I'd pop in here and help. You can do this without babel in ES2017 using deconstructors &amp;#x200B; ``` let { ["prop1"]:{ ["prop2"]:{ ["prop3"]:val } = {} } = {} } = obj; if( val === 'expectedValue' ) { } ```
https://www.reddit.com/r/javascript/wiki/faq
I‚Äôll allow it
Interesting as we down same path in a way.. Sencha touch was cool, and after jquerymobile, ionic et all.. then nativescript.. till this year its Flutter.. hope this one sticks ... I moved all the corp interfaces onto pyqt which works wicked (git pull and restart client desktop) Am checking out Qooxdoo as i never seen that before.. how did i miss amongst others??
 var markers = [ { 'id': 1, 'date': 1 }, { 'id': 1, 'date': 2 }, { 'id': 2, 'date': 7 }, { 'id': 2, 'date': 21 }, { 'id': 9, 'date': 1}, { 'id': 5, 'date': 1 }]; // group by id var result1 = markers .reduce((o, m) =&gt; ({...o, [m.id]: (o[m.id] || []).concat(m)}), {}); // sort by date var result2 = Object.entries(result1).map(([id, group]) =&gt; group .sort((a, b) =&gt; a.date - b.date) //sort by date .map((m) =&gt; ([m.id, m.date])) // convert to inner array ); console.log(markers); console.log(result2);
Not only is it unethical, you will go to prison for 20 years and they will put you in a cell with a serial killer and a rapist, and both will be too disgusted to touch you or even talk to you. Oh and you won't go to hell because Satan will not want your kind polluting his kingdom. LOL, it's fine!
Easy
I just got that JS could mean ‚ÄúJavaScript‚Äù or ‚ÄúJack Shit‚Äù
That‚Äôs a pretty dumb response from them. Why would a language include two keywords that do the exact same thing? That‚Äôs not syntactic sugar, that‚Äôs just redundant 
&gt; You can be just as effective, or even more effective, not worrying about the esoteric parts JS. Literally "ignorance is bliss"
Despite what a few of the others are saying, they're not that different. IIFEs are generally used to create a scope that prevents variables from leaking out into the outer scope. Use of `let` and `const` within any block (`{...}`) effectively do the same thing. When you're using modules, this scope problem is less of an issue because modules have their own scope. When not using modules, IIFEs become more prevalent, and in fact the "module pattern" in JavaScript is basically using an IIFE to create a "module" that contains code that doesn't doesn't mess with the current scope. "Module" in this case is just a function. But this is what bundlers like webpack do when converting your real modules into a single built js file anyway. The one thing you get with IIFEs is return values. This is useful in the case of the module pattern if you're doing a lot of stuff during init to produce a single "export". Without using an IIFE, you can still accomplish this, but you'll want to have a variable outside to assign to (or assign directly to global). Also proposed is a special do block (`do { ... }`) which is like a normal scope-producing block but it also returns the last expression within it. They're currently only in [stage 1](https://github.com/tc39/proposal-do-expressions). // es6 modules // ... export result // module pattern const module = (function () { // ... return result })() // block let module { // ... use let/const, not var ... module = result // or global.module = result; // may need to figure out what "global" is depending on env (node/browser) } // do expressions const module = do { // ... result } But I think if you're doing anything substantial nowadays, you're going to be using modules and won't have to worry about IIFEs - at least not for the use case of defining modules. And smaller projects I don't think its worth the mental overhead of IIFEs /u/BenZed brings up a good point about `async` though. The only time I can recall writing an IIFE any time recently is for an async function. This is because if you want to use `await`, you need to do it within an async function. So if your current script code wants to await something you need that async wrapper because it won't work in the outer script scope. There is a proposal for a [top-level await (stage 2)](https://github.com/tc39/proposal-top-level-await) which would help with this, which I appreciate because I'm not a fan of IIFEs. There are some module hurdles to overcome so it might be a while before that one floats to the top.
Bypass the pointless video and go directely here https://apilist.fun/
I've done all 3 of those courses and they were all good, Max and Stephan's have both been updated within the past month, but Overall I think Andrew Mead's was the best of the 3 because of his teaching style and because it goes into testing a lot more than Max's course. Grider's course doesn't cover testing at all (He does cover testing in React in a different course though).
thanks for your help, see the edit for a link to the code
thanks again, see my edit for a link to the code, would love to hear further thoughts from you
thanks again, see the edited post for a link to the code I wrote
Same guy told me const won't let you change the value. I asked, "is that for strings, objects, integers, arrays, and everything?" He looked unsure but said yes. 
Hey OP, sorry to cut in.. Anyway, I just bought the React course from Max yesterday. I havent tried it yet as I'm now in the midst of his Node course. I intend to purchase Mead's React course too. Cheers!
I'd avoid relying on Array constructor since `Array(1)` gives you `[,]` (a sparse array), as opposed to `[1]`, meaning `vec(1)` will yield `vector [empty]` instead of `vector [1]`. One other minor nit: it's idiomatic to uppercase the first character in class names, i.e. `class Vector` rather than `class vector`. Other than that, LGTM
Which version the 2018 one?.
I was almost happy to not see this recommended, then there was this post lurking at the bottom.
I have 35 years fighting garbage produced by that piece of shit company. Windows isn't even allowed on our network at work. That's how bad that piece of shit company is.
I just finished the squirrel chapter too :))
I think that only the first book seems for beginners. I started with YDKJS and eventually was so overwhelming that i stopped and go to EJS.
Looks like you don't have Webpack globally installed which is probably a good thing. &amp;#x200B; You can either add a scripts field to your package.json &amp;#x200B; `"scripts": {` `"dev": "webpack"` `}` &amp;#x200B; then run it `npm run dev` &amp;#x200B;
Alternatively you can install npx globally &amp;#x200B; `npm i -g npx` &amp;#x200B; and run &amp;#x200B; `npx webpack` &amp;#x200B; which is the equivalent of referencing the Webpack executable directly &amp;#x200B; `node_modules/.bin/webpack`
great job üëçüèΩ
React and Vue are in the same scope. Both call themselves libraries at their core but we all know that's not how it works.
Apparently I messed up by recommending this üòÖ thread has good alternative suggestions in case eloquent js isnt helpful! https://reddit.com/r/javascript/comments/aehk2a/on_eloquent_javascript/
All the time. I would go so far as to say that it is the debugging capabilities of the browser, coupled with a coded editor, that comprises the closest thing to a front end IDE. Every time I train someone on frontend, lesson 1 is the Chrome dev tools Sources and Network tabs.
Did that and got this ```ERROR in Entry module not found: Error: Can't resolve 'index.js' in 'C:\Code\radio-js'``` which means its not looking in mode_modules
I think if you have completed Codecademy for JS, you are good. Only because that's when I read it.
Contention? Read them all and don‚Äôt compare. They‚Äôre both great in their own rights.
Without asking for a link to your project I'm willing to bet the path to your entrypoint (index.js ) in your webpack config is incorrect. Make sure the entry field looks something like the following: const path = require('path'); ... const webpackConfig = { entry: path.resolve(\_\_dirname, '\[PATH TO INDEX.JS RELATIVE TO YOUR WEBPACK CONFIG FILE\]') ... }
React and Vue don't provide any UI at all. There is no vue button, no react input, no vue grid or react modal. React and Vue are component frameworks. It's up to you to make components and define their behavior. 
This is what i came here to say. +1
Great input, thanks. Agree that Mead has a nice teaching style and way of explaining things. I did Meads JS course and it was full of great challenges, whereas the challenges in his Node course were basically "Do what I just did". What about the challenges in his React course? Again, thanks for your input.
Yes it is beginner material, but the way it's brought across with the examples, exercises make it higher than that. Also concepts introduced are not purely for beginners: for example recursion and closures in chapter 3 functions.
Great work! I looked around your repository and found few things can be improved. 1. Check out `jest.each` module. It is useful to use `jest.each` module when it comes to test bunch of `input/output` cases like you do in `urls/v3(4)/index.test.js`. (medium article: [https://itnext.io/reduce-unit-tests-boilerplate-with-jests-each-syntax-f5e48828437f](https://itnext.io/reduce-unit-tests-boilerplate-with-jests-each-syntax-f5e48828437f)) 2. Suggestion on `utils/removeUndefinedValues`. You can simply delete the key if value is undefined. code: ```js const removeUndefinedValues = paramsObject =&gt; { for (const key in paramsObject) { if (paramsObject[key] === undefined) { delete paramsObject[key]; } } return paramsObject; }; ``` 3. Take a look at `Joi`. [Joi](https://github.com/hapijs/joi) is a library for object schema validation. You can use this library for validating `params` or `body` object. I think it is better than duplicating hardcoded error messages. Anyway, it was good to see your code. It was well documented and organized. Keep this way, buddy!
so where would I put in the new array would I put it in the `if (!SALES_PRICES[product])` I labeled it const BUY\_PRICES if thats what you meant by new array, I thought an array was something like `var product = ["apple", "carrot", "gum"];` something like that 
I would argue that you *can* use React as a framework, but your life will be much easier if you use it as a library. :P
I meant to say object, whoops Legit copy the sales_prices object, rename the new one to buy_prices and change the prices, then change the price in the buy command to get a random price just like you have for sale_items
Yes I am. I‚Äôm glad that you liked it! üòÄ
i got it to work. i just wasnt using npm run build. silly me
Build a system and sell it like SaaS, that will keep a passive source of income. Just make sure you build something that people need and will actually use, some market research will be needed for that. 
About 3 - 4 years doing front end web.
I like it too, why not? Too old school? 
How often do people prefix their packages with the author‚Äôs name? It‚Äôs unnecessary and comes off self serving. Not to mention a little disingenuous and problematic in case someone else ends up making significant contributions / takes over management in the future 
Anki is rather ugly.
Honestly, I‚Äôve only ever made good money off side contracts. Freelancer site pay pennies. 
Have you considered applying for normal, full-time, salaried positions?
Any of the solutions you mentioned sound fine. Depending on your exact situation, some might make more sense than others. For me, we're always doing tons of interactions with the backend anyway, and the backed d is doing those calcs anyway, so it's easy to just get the results from the backend. Your situation may be different.
Make a resume. Create a linkesin account. Apply for jobs that say "JavaScript" in the description.
Sorry, not quite on topic but a pet peeve of mine is Vector classes. Libraries would be a lot more compatible with each other and your application if people used arrays or POJOs and plain functions instead. Take a look at how gl-matrix is designed.
I recommend it to people who already know js and just want to deepen their understanding. (re: YDKJS). I wouldn't recommend it to a newbie wanting to learn JS though. Apologies to getify if my OP was insulting, it wasn't meant to be. I also recommend his Functional Lite JS to people who already know JS. Both are good books.
Ok thanks. My only hesitation is the delay in calculation by relying on the backend.
Lots of employers are offering full-time jobs to Javascript developers. Are you student or in a situation where a traditional job is not an option?
[removed]
Not often, OP probably converted their NPM account into an organisation and published the package under that namespace. Most people would do that if the package name they want is unavailable on NPM, although generally you would create a new organisation with that name like `@the-movie-db` with the package as `@the-movie-db/core` rather than converting a normal account.
[removed]
If possible I convert to integer. So instead of 2550 * 5.89 * 0.15 = 2252.9249999999997 You do 255000 * 589 * 15 = 22529250 And divide the result by 1000. This works if you only need addition and multiplication and won't produce any integers larger than `Number.MAX_SAFE_INTEGER`.
I suppose it would depend on what your using the value of the calculation for. If it's just to show the use the value you could have the frontend calculate as normal and just have the result of the api call replace the value when it's done. if you due some sort of decimal rounding you may have one of the least significant digits on rare occasion change. &amp;#x200B; Also I would keep in mind with c# it's range of valid input is much smaller than the number type in javascript which is a double in C#. The range of inputs may make this impossible but definitely something to keep in mind.
Looks like the markdown is off for your medium link.
Thanks! I fixed the link.
&gt;Anyway, there's a written guide how to create netflix(is it?) clone by netflix developer. He states there, that it's free, but you can watch it on frontendmasters too. What Frontend Masters course are you referring to?
I‚Äôm not sure what you‚Äôre asking. Could you rephrase the question please?
When going this route, you could double check whether the client supports `BigInt`. If yes, you can still do arithmetic with integers greater than `MAX_SAFE_INTEGER`. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
Basically it's a method that when called takes two sequences, and the first is retained and used to rewrite the second, then the two are returned. I'm being told to rewrite the method so "it is a functiom that returns a new sequence rather than rewriting. " my question is what's the difference? How do you switch from one to the other 
Could you post the prompt?
Yep, that's it! I see there's now v4 version. Thank you!
Ohh! I think the whole function/method thing threw me off. Sorry. So in JavaScript, primitives are immutable. They cannot be changed. When performing arithmetic or concatenating strings or whatever, a new value is returned and the old value is preserved. E.g.: ``` var a = 1 var b = a + 1 // a = 1, b = 2; a is unchanged var c = ' hello ' var d = c.trim() // c = " hello ", d = "hello"; d is unchanged ``` Arrays and objects, however, are mutable. They can change. Some array methods modify the array whereas some don‚Äôt. ``` var a = [1, 2, 3] a.slice(0, 2) // returns new array [1, 2] a.splice(0, 2) // I think it returns the same, but also modifies the array; a is now [1, 2] ``` Generally, you don‚Äôt want this to happen. If you assume an array stays unchanged over time, but is modified elsewhere in the code, that‚Äôs a bit odd. If you need an array method that modifies the array, you probably want to clone it first, so the original is preserved. Does that answer the question?
Are you talking about modifying a function argument in place? ``` let testObject = { 'foo': 'bar' }; let modifyInPlace = (obj) =&gt; { obj.foo = 'baz'; }; let returnModifiedObject = (obj) =&gt; { let objectClone = JSON.parse(JSON.stringify(obj)); objectClone.foo = 'baz'; return objectClone; }; ``` One of these modifies `obj` (passed in by reference) in-place; the other makes a copy of the object, modifies and returns the copy. 
Thanks for reminding me that I need to give this another shot. I tried it way too soon, resulting in me stopping after following half the book or something like that. 
Who ghost writes and pushes this kind of crap articles? I mean, pick a random nonsensical sentence from the article and search for it on google. It's not remotely original. It's copy-pasta. "The major advantage of having MongoDB is the utilization of JSON format which assists in transferring the required data" Sure enough, search for that on google and you can see it's several years old from Quora, word for word. https://www.google.com/search?source=hp&amp;ei=4TY4XM6MObHT9APx6oCYBg&amp;q=%22The+major+advantage+of+having+MongoDB+is+the+utilization+of+JSON+format+which+assists+in+transferring+the+required+data%22&amp;btnK=Google+Search&amp;oq=%22The+major+advantage+of+having+MongoDB+is+the+utilization+of+JSON+format+which+assists+in+transferring+the+required+data%22 Why is this kind of crap upvoted in r/javascript?
Does anyone else find that focusing on stacks in this way is pretty silly? For example, it‚Äôs nonsense to suggest a document database without any knowledge of what the data model is or what types of queries are necessary.
Ugly, but it's still the best offline flashcard app around
TensorFlow.js
That is a fair point. I'm curious what your background is, I've done a fair amount of games and simulations, I think there is significant development time saved by using libraries such as this. In bare-metal languages (like Rust and C++) the use of 'fancy' types over what is essentially POD doesn't really have an associated cost, and if you are careful the interface between libraries can be efficiently encapsulated. I find javascript is fast enough for my purposes that I don't mind the overhead... I would not do this in python (although I've experimented a bit with pypy and it is also very fast).
Did you use this to autogen TS files? https://github.com/samuelneff/sequelize-auto-ts
excellent! Fixed.
Thank you everyone for your responses, This community is such a good friend. I would be focusing on JS projects, then go for React. Anyways, I might not be pursuing my career in it, just needed to do some quick freelancing to earn something atleast. Currently I am in my last year of Computer Engineering. 
Wonderful. I am a complete beginner and made my first react app using fetch (mistat44.github.io/MovieReviewFinder). I will be usig this package to extend the functionality of my web app. Thanks!
I wonder if he means aliasing?
I would choose pkg since zeit's packages are well maintained and loved by community. I have a feeling it is more reliable. Also, I have used pkg for a commercial product and had no problems yet. Use pkg --help along with the documentation on readme, that will be enough. Its not that much complicated though
Looks good! This is what I wanted. fancier than old Anki apps. It would be better if it was a hosted paid service, not an open source. just my opinion :)
It's not scary to consider all of your dependencies hostile. In fact, in high-security environments, this is exactly what you should do. The problem today is community-driven but the fault of the individual JS developer: *don't take on stupid dependencies.* Think long and hard before you take one on. And if you need high security assurance, you build a workflow to manage dependencies: 1. **Freeze and audit all of your dependencies.** How far you go depends on how much security you need. At a baseline, look for high-entropy strings, weird encodings, stupid obfuscation tricks like arrays of `charCodeAt`, use of `child_process`, etc. Once you are sure yours seem relatively clean on manual review (and static analysis if you have the tools...) 1. **Use private npm registries for production.** This cures a whole world of ills. Updates to your dependencies are able to be manually audited, and a rando npm dev's `hunter2` npm publish password doesn't compromise you downstream. Your servers pull from... your servers, and if a vulnerable package got there, you got popped or someone didn't audit the module. 1. **Add Snyk/`npm audit` to your CI/CD and fail for vulns.** Scan upon every build and fail out anything with a known vuln as a baseline. This will give you an impetus to force the update to your frozen package. 1. **Don't take frivolous dependencies.** The small module philosophy has ruined npm. You don't need a one-liner package. If it's OSS and it's a set of convenience functions, copy them into your own codebase instead. Tell your juniors to avoid `npm install`. As this author displays with things like `postinstall`, a malicious package can and will own you as a developer if you install directly from npmjs.com. `event-stream` is not the first and will not be the last.
Thanks a lot! :) &amp;#x200B; As I mentioned, it's only a side project. I treat this as an experiment for testing new things. E.g. I'm going to publish another branch that replaces all that fancy libraries, and uses features listed here: [https://reactjs.org/blog/2018/11/27/react-16-roadmap.html](https://reactjs.org/blog/2018/11/27/react-16-roadmap.html)
I really liked Head First JavaScript Programming (https://www.amazon.com/Head-First-JavaScript-Programming-Brain-Friendly/dp/144934013X)
Probably the package name is already used on NPM
Hi! Still really struggling, just can't figure out why it's not working. Are you free today?
Also: IMHO POJOs are a terrible choice for abstraction of vectors/matrics/etc. They constrain the size of the type. Your comment is the very reason I want my vector type to use javascript Arrays as their prototype: so that client code and libraries are easy to link up.
I find thus point of view interesting because I don't think that recursion is a particularly advanced topic. I was pretty sure I was taught it in my intro class im class. Closures are mind bending, but I do think that they should be introduced early since they are so important in javascript.
Oh. My. God. I've fixed it. So the issue was I didn't have my second form reference the .JS file. WOW. But, thank you so much for your help.
Rewrote a tutorial app again from scratch. Built an app on my own although it looks similar to the first one. Maybe thats what I get for sticking to Vanilla JavaScript üòÅ Will post a link shortly.
You can get and set cookies on server site 
To be blunt, cookies are usually managed by the browsers only, meaning you do not have to anything client-side. It is even considered a bad practice to try to manage cookies by yourself client-side. Furthermore, backend frameworks such as Django also allowed you to not worry about cookies at all server-side. If you use the localStorage to store stuff linked to the authentication of a user, then you have to manage all the edge cases yourself. If you want to make authentication with the least effort, use cookies.
it hurts me
[https://stackoverflow.com/questions/19867599/what-is-the-difference-between-localstorage-sessionstorage-session-and-cookies](https://stackoverflow.com/questions/19867599/what-is-the-difference-between-localstorage-sessionstorage-session-and-cookies)
were you able to reach the end of the scroll? 
It does full reload, but since it was a pretty small it was not painful. The config is in the end quite simple: I watch the sass files: sass({ output: `${BUILD_OUTPUT_FOLDER}/main.css`, include: [ '**/*.css', '**/*.sass' ] }), and then I do live reload livereload({ watch: BUILD_OUTPUT_FOLDER }) The thing is, `sass` does not observe changes in lower level files, so I have to have a package.json script to recompile a main.css file (which triggers sass, which triggers livereload): "styles:build": "node-sass-chokidar src/styles -o src/styles" which is started by "start": "concurrently 'npm run styles:build:watch' 'npm run dev'" So yeah, it's a bit convoluted, and the things live in 2 places so it's not straightforward, but it's documented and an acceptable trade-off to having to fight webpack configs. 
Cool app. But what really surprised me is the codebase (especially on the client-side): very well-structured and clean, readable code. An excellent example for a react/redux codebase IMO.
yes but i'm now blind and my soul belongs to eÕõÕêÕäÃ±Ãπ'Õ™nÕãÕ¶Ã®ÕçÕïÃ≠ÃúdÃíÕ≠ÕÆÃ∑ÕàÕñÃºaÃÇÃÅÕ•ÕóÕÜÕ≠ÃµÕöÃ†Ã•ÕáÃ•ÕáoÃÑÕõÃõÃüÕìÃòÃüÕÖÃÆlÕÆÃâÃíÕ®Õ™Õ†ÃØÃûmÕÉÕêÕíÕíÃêÃ¥eÃíÃëÕ°ÃØÃórÃøÃãÕ•eÃÜÃ¥ÃùÃ±Ã∫ÕáÃ´Ã•ÕîiÃÜÃêÕåÃãÃêÃéÃ∏ÃûÕïÃ≠aÕêÕôÕéÃúcÕãÕäÕ¨Ã≥ÃªÃºÕçÃ™hÃùÃ∞Ã™ÕöÃºÃ† ÃΩÃÜÃêÕ®ÃÜÕãÕ®ÃûÃüÃºÃ´tÃÄÃâÃíÕóÃ®ÃñÕâhÃçÃåÕ®Õ•ÕåÃåÕÅÃ™Ã≤Ã≠Ã≥Ã≠ÃÆeÕØÕàÃ≠ÕâÃ¶Ã©ÕÖÃú Õ≠Ã®Ã¶ÃπÕâÃπdÃìÃàÕäÃÇÃîÃ∏ÕçÃ±eÕ©Õ§ÕóÕáÃóvÃöÃüÃ∞ÕñÕéÃ≤oÕüÃ≤Ã≤uÕ≠ÕÇÕóÃèÃâÕ©ÕéÃòÃ∞ÕöÃùÕáÃªrÕ•ÕõÃêÃàÕãÕãÕñÃóÕñÃÆeÕäÃÇÕ§ÃíÕ•ÃÖÃ∞Ã£ÕàrÃàÃØÕïÕöÃñÃ©Ã¶ 
I can't imagine a developer maintaining such a file, could it be the result of a concatenation ? Excepted the neural data it seems to be well indented anyway.
Assuming the goal is to give the user five attempts to guess the number, this seems like the correct way to do it. The one improvement for this code that you could do is having the code break from the loop when the guess is correct. Other than that, I don't see anything else to do (beyond things like not using document.write but that's a whole another topic)
Why are you using this hacky bs instead of normal class features? The prohibition ended, are you still drinking moonshine from a bathtub, too?
Ah yeah forgot to put the break; statement in. Wrote it on my phone. It just seems long to me putting the last if statement in. I feel like I have previously implemented it into the first code block somehow but when I do it prints several times. Maybe I did with a different kind of loop
&gt;I can't imagine a developer maintaining such a file, could it be the result of a concatenation ? I'm thinking the same i.e, it could be a product of concatenation. Apart from the neural data, I've also come across a bog of string. I'm not a javascript developer but I'm presuming that javascript allow to load neural data as a file instead of just pasting them in the code.
Sometimes logic like this can be kind of "explained" to make it easier to understand. If we were to try and explain the goal here, we might say something like "ask the user five times, and if they don't get it right, show the right answer." You can kind of put that into the form of "ask five times" and "after that, if it's still wrong, show result", which translates pretty much into the code you wrote.
Thank you for the kind words and taking the time to take a look at it. :)
This site was launched to warn devs about everything wrong with w3s. [https://www.w3fools.com/](https://www.w3fools.com/) But as you can read on it they did improve since then. &amp;#x200B;
considering the overall size, maybe it's wiser to only have one synchroneous request to retrieve the whole bundle rather than many requests and the probability one of the requests will fail tried to minify the code and there's a 600Kb difference, the resulting js file is only ~750Kb 
which is exactly why this book isn't for pure beginners :)
&gt; could it be the result of a concatenation? It definitely is: you can see many global level uses of "use strict" which would be present at the start of the individual files. Furthermore, there are a couple of parts that look like some individual files were minimised so as the whole package isn't I assume these are 3rd-party code from the PoV of the maintainer of this particular file. As well as the file being the result of concatenating JS, likely from various sources, there is some data in amongst the code that was no doubt programmatically created rather than manufactured by hand. This isn't source code: it is the output of a build process. Even though parts of it are readable, treat it as a binary.
I had a job interview test asking for exactly this.
Makes sense, thanks for the help
I usually hear from other devs that it is not a good idea for an app to manipulate cookies. This is usually the role of the browser and the browser only (with the server creating the cookie). Why would you want to display the name and the value of a cookie?
did you read the gist or are you commenting on the code in my original question? &amp;#x200B; In the gist I do use the `class - extends - {}` syntax, what part of that was hacky bs?
I guess I don't understand what you mean by "pure beginner". My 101 class in college was for people who had never programmed before and it had recursion. That's about as pure beginner as you can get. Recursion is a common beginner topic. It's not like we're talking about advance data structures or algorithms. The moment you understand what a function is, you can be taught recursion. It's a mind bending thing at first, but so is programming in general.
The shortest I can think of is ``` const randomNumber = Math.ceil(Math.random() *10); for (i=0; i&lt;5; i++) { if (randomNumber === parseInt(prompt("guess number from 1-10"))) return document.write("correct"); } ``` But as a programmer who works with a bunch of other programmers, your code doesn't always have to be as short as possible. It's much better if it's readable - good names for variables, functions. You can always make it shorter, but it's worth nothing if other devs don't understand what's going on inside and spend hours deciphering your "magic code".
I meant for the last if statement only, the rest to me is fine. For e.g instead of writing the last if statement, writing in the loop: Else { document.write("sorry, number was.. "); } But that would print it almost as many times as it takes to guess it. But what you said about making it more readable is a far better trade off then making it shorter
get a job
&gt; but why are the comments still there ? Files are concatenated. Then a copy is stored there, _as is_. Finally the file is uglified on the `build/` folder. The idea is, probably, to have an un-minified version for debugging purposes.
 function extract(params) { return params.reduce((k, v) =&gt; { v.forEach((p) =&gt; { let pair = p.split(':'); k[pair[0].substring(1)] = pair[1]; }); return k; }, []); } But the problem, as explained, isn't really consistent. As it is presented in the enunciate of the problem, the parameters lose their position. That is, take the first example: So extract([ ['P1:a', 'P2:x', 'P4:q'], ['P2:b', 'P3:k', 'P4:c'] ]) should return an array [a, b, c, k] But then the result is that the value for P4 is in the third position, and the one for P3 is in the fourth. I can't think of any real situation where this would make sense at all. If the supposed parameters are identified by a numeric id, and that's how one can relate one value from an array to another value from another array, then it simply doesn't make sense that the result discards that information. If we do that, then we might as well just return random values because there's no way to know from `['a', 'b', 'c', 'k']` to what parameter does `'c'` correspond to if we can't rely on its position. In any case, if position does not matter, the above solution is also valid. (With the caveat that it leaves unused positions empty, which I think it's good but your teacher may not.)
&gt; Who ghost writes and pushes this kind of crap article? &gt;I am a digital strategist and market researcher Notice how what he isn't.. is a coder?
This was my first thought too but WebRTC is still not ready IMO (based on a project I built about a year ago when Saf12 wasn't available). I had a lot of trouble getting clients to connect even using a dedicated TURN server Also Apple have decided they're not playing with other vendors and are doing their own thing in terms of codecs. When I last looks it wasn't possible to connect from Safari to other browsers and vice-versa Also it's only Saf11+ and Edge 15+ &amp;#x200B; WebRTC would definitely be the solution to this requirement in an ideal world but I wouldn't blame someone for using sockets to achieve this instead
Don't use cookies. You can store data in the localStorage ```js localStorage.setItem('username', 'John') localStorage.getItem('username') // -&gt; John ```
&gt; un-minified version for debugging purposes. sounds like "hit me hard" debug level :-)
 localStorage.setItem("userObj", '{"firstName": "John", "secondName":"Doe"}') // this saves the value as a string. Note that we use double quotes with JSON format then wrap it in a single quote in order to save it as a string // use JSON.parse to convert it to an Object JSON.parse(localStorage.getItem("userObj")) 
Thanks for the solution, I like it! I totally forgot about the reduce function. As I come from C background I still like to do stuff the old way haha. And in regards to the position, I am not sure if it matters. I found this problem somewhere online and the examples were shown in the way I described them. As you said, in the real world scenario, I think that it wouldn't matter and your solution would be more efficient, thanks again. 
Just to know how to do it^^. I knew localstorage and its method stringify() setItem, JSONparse, etc. but I couldn't use cookies so far. if it's a bad idea to keep manipulating them, then I'll just stick with localStorage.
Other than trying your luck at creating a solution to a problem and charging people money for it? Networking (which is unfortunate, if you're an introvert like me). All my work comes from word of mouth. Another route would be to look for digital agencies that do web projects and give them a call asking for their "tech-lead" / "technical director" and have a chat about taking on any extra work such as updates / bug-fixes for projects that their main team is too busy for. It can be intimidating cold calling these people, and they might be busy when you call and might come off as rude. Just keep it short and sweet. If the call goes to message-bank, leave a short message and then shoot them an email (which you can usually find on their website or articles / Case Studies of their previous work). Maybe in the future you'll get a gig, maybe not. But who cares, you're trying to get your foot in the door. The key piece of information they'll want, if they decide to talk to you, is your day rate (and email so they can contact you). Look on employment sites in your area to see the average you qualify for. Simply say "my ball park figure on day rate is $, it depends on the complexity and urgency of the task." Good luck, I hope you can start earning $$$ soon. Edit: It's worth nothing that this info is geared more towards someone who would rather contract work, compared to a full-time position. I should have made that clear at the start.
To answer your actual question and not just recommend using local storage: I'm not aware of a simple, native way to do this. There are libraries, but you're best just using one of those functions you've found. I used this one, but it could probably be written more neatly with a reduce function. function convertCookieToJson() { const json = {}; document.cookie.split(/\s*;\s*/).forEach(function(pair) { pair = pair.split(/\s*=\s*/); json[pair[0]] = decodeURIComponent(pair.splice(1).join('=')).replace(/\+/gi, ' '); }); return json; }
I'm in the process of reading through it now. Can't say I'm a huge fan so far, but why wouldn't you recommend it?
Two reasons, the first one is how outdated it is, it's ES3. The second reason is a personal preference, but I think Douglas Crockford's reasoning for why certain features of the language are bad is pretty crazy and nonsensical, it mostly boils down to the dangers of misuse if I remember correctly (it's been a long time since I read it), for example I think he says the `new` keyword is a bad part of JS because if you forget to use it bad things happen, it's like "no shit!" of course bad things happen if you use things wrong, are kettles bad because I could pour boiling water on my hand instead of the cup? He continues to use the same reasoning for multiple features that I can't recall off the top of my head, it left a bad taste in my mouth.
You could use a redis cache to store them on top of your API to avoid excessive calls (since string data will be heavy). 
Are you using React or something else? I would say: * If you have a lot of data to fetch, go for lazy loading. * If you do not have that much data, fetch what you can at the first render of your app. However, only you can determine the threshold. Hope that helps.
If you want whatever you‚Äôre storing to work in Safari‚Äôs private browsing mode, you can‚Äôt use local storage. Something to consider.
No no no. What I meant is that you should not store things like authentication tokens in your local storage. Your browser is handling these with cookies all by himself.
Hey, it would be great if you could include a GIF/screenshots/video as demo of your CLI tool. Personally, I always get more involved when I see a repo with these.
thanks bro
Why not contribute to existing projects, such as http://npmjs.com/package/tmdb?
I think I personally dislike it because there's no clear "skill level." He jumps from a chapter about private variables that I'll probably have to read three times just to understand his logic (or run it myself to see the actual processes), to a chapter defining basic Regex! I would hope if someone knows how to understand his chapters on functional logic, they have already seen Regex! And after the Regex he just started a chapter listing buult-in functions like I'm reading a reference book. So it's really just all over the place
I am just want to share useful information with reddit users. So don't criticism here just share your opinion. Thanks
I can't disagree since it's the only one I've tried. :)
#1 most frequently asked javascript question on reddit. #1 most frequent response: eloquent js, ydk js, google for dummies.
yes, it is possible to build a wizard with CSS and Html. The Markup would be an ordered/unordered list of items that denote the steps of that wizard. Each Item will have a class that indicates that it is done, current or unfilled.
Obviously the file is a big smooshed together mess, but as discussed elsewhere, it's a generated file, not the original source. In terms of the actual JS itself, it seems fine. A little old fashioned, and using a single `var` to declare multiple variables is bad form, but at least it is well commented and divided into distinct little functions.
Do you have a snip of the code?
I would say whatever callback function name you passed into whatever is causing the error is invalid. Hard to tell without code to look at.
[https://pastebin.com/RA33HJmk](https://pastebin.com/RA33HJmk)
It seems a function expects a callback but doesn‚Äôt get one. What bothers me more is that the code is in a folder called 'Scam'.
You got a Happy Number in your comment ID! The Happy Number is 19, and your comment ID was edsyn19. Here's a link to what Happy Numbers are: [Happy Numbers](https://en.wikipedia.org/wiki/Happy_number). The comment ID is a unique 7 character string which identifies your comment in the sea of Reddit. (I'm a bot by the way)
Yeah, it was about scope pollution, I went back to check again. But i think its more clear for me now then earlier , thank you! &amp;#x200B;
Thank you all for your time to answer my question! It's more clear to me now, I appreciate it!
Event callback for ‚Äústeamguard‚Äù having callback as the second param seem odd. Altho the api seem to indicate the same. Maybe you could try checking that.
That will depend a lot on how large the data-set is, and where you are rendering. Also, if you are rendering mostly client-side, your users are generally repeat visitors rather than mainly ad-hoc one-offs, especially the localisation data for the user's current language doesn't change very often, then you might consider copying the data to browser-local storage and save transferring it multiple times.
You‚Äôre not a security expert, but you feel confident enough to dismiss an entire authentication mechanism?
yeah I misunderstood, they were talking about scope pollution, and I connected that somehow that let and const are new IIFE.
No I dont
Here's the prompt I'm trying to figure out /** * Smooths a given {@code Sequence&lt;Integer&gt;}. * * @param s1 * the sequence to smooth * @param s2 * the resulting sequence * * @replaces s2 * @requires |s1| &gt;= 1 * @ensures &lt;pre&gt; * |s2| = |s1| - 1 and * for all i, j: integer, a, b: string of integer * where (s1 = a * &lt;i&gt; * &lt;j&gt; * b) * (there exists c, d: string of integer * (|c| = |a| and * s2 = c * &lt;(i+j)/2&gt; * d)) * &lt;/pre&gt; */ public static void smooth(Sequence&lt;Integer&gt; s1, Sequence&lt;Integer&gt; s2) {....} Answer the following questions. Redesign the method so that it is a function that returns the new (smoothed) sequence instead of replacing a parameter. You need to modify the method header and update the formal contract to reflect the changes. Provide two distinct implementations of the newly designed smooth method, one recursive and one iterative (i.e., not using recursion). While you may use method entry, do not use any other method that is introduced in the enhanced interface Sequence. Among the methods still permitted for your use are all those inherited by or introduced in SequenceKernel, including add, remove, and length.
Did not, was responding to post title
Yes, there are better and more secure options than JWT for authentication.
Any site should validate data serverside that's submitted by a user. If a site is doing all of its validation in javascript on the client, then yes, it's a potential security hole - but ideally they'll validate at both ends - on the client because it's quick feedback to tell the user "your data is bad" before trying to process it, and on the server, because you should **never** trust data coming from the user - always assume it's potentially malicious and/or malformed.
I‚Äôm a bit confused. Do you want breadcrumbs for the fields in addition to a progress bar?
Yeah it can do real damage to users of that website. For example you want some cookie session from users,you have to create another fake page which done a post request to that injectable page, and give that page to an victim . It can be done if you know socket programming.
Is there a possibility that the injected coded will be viewed and run by other users? If so then this is a cross-site scripting (XSS) vulnerability, and it is a problem. The injected coded could read a user's session credentials, or private data, and transmit that data back to the attacker. Even if there is no sensitive data on this site, XSS can be used to perform cross-site request forgery (CSRF) attacks by injecting code to make cross-origin requests to another site where the user may be logged in.
I am new the community and I am just starting to learn javascript. I am working on Warrior JS now. I have this code here. It runs fine with forward. However with backwards I get: Error: Cannot read property 'isBound' of undefined This seems to occur when warrior.rescue() is changed to warrior.rescue('backward'). So if I leave everything forward but that I can replicate the problem that way too. I know the code isn't finished but I am trying to understand the error and where it is coming from. I am on Baby Steps Level 6 so I don't have warrior.pivot() yet. Any insight would be great. Thanks. class Player { /** * Plays a warrior turn. * * @param {Warrior} warrior The warrior. */ constructor () { this.health = 20; this.lastHealth = 20; this.direction = 'forward'; } playTurn(warrior) { if (warrior.feel(this.direction).isEmpty()) { this.walkorRest(warrior); } else { this.rescueOrAttack(warrior); } this.lastHealth = warrior.health(); } isUnderAttack(warrior) { return warrior.health() &lt; this.lastHealth } fullHealth(warrior) { return warrior.health() === warrior.maxHealth() } walkorRest(warrior) { if (this.isUnderAttack(warrior) || this.fullHealth(warrior)) { warrior.walk(this.direction); } else { warrior.rest() } } rescueOrAttack(warrior) { if (!warrior.feel(this.direction).isEmpty()) { if (warrior.feel(this.direction).getUnit().isBound()) { warrior.rescue(this.direction); } else { warrior.attack(); } } } }
cookies and localstorage are two entirely different things. localstorage is not a substitute for cookies. cookies are sent to the server, localstorage is not. 
You'll have to use a decimal math library if you need to consistent or guaranteed precision.
If you do indeed need cookies, localStorage is not going to do the job because localStorage can't be set on the server, nor are localStorage values sent to the server. If you just wanna set and get value that will persist, localStorage is great. Otherwise: ``` setCookie('username', 'Joe'); var myCookie = getCookie('username'); function setCookie(name,value,days) { var expires = ""; if (days) { var date = new Date(); date.setTime(date.getTime() + (days*24*60*60*1000)); expires = "; expires=" + date.toUTCString(); } document.cookie = name + "=" + (value || "") + expires + "; path=/"; } function getCookie(name) { var nameEQ = name + "="; var ca = document.cookie.split(';'); for(var i=0;i &lt; ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; } ```
The only things I can see to make it shorter are: &amp;#x200B; 1. use Math.ceil instead of Math.floor. It removes the need to do the + 1. 2. use +prompt() instead of parseInt. They will both return an integer.
Yeah I'm currently a student, no degree yet.
This looks like Java, rather thab JavaScript. They're different languages. You might want to try r/learnjava
Thanks 
Hi /u/Maineman1596, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/cd_arcknight, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/denisehasler, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Thanks for your understanding.
Hi /u/trujic1000, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Jzxsm, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Maineman1596, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/supreme_donut, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Produkt, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/keyring88, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/jsdevz, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/HolidayInternet, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding.
You can add a bookmark to your home screen and it will appear as whatever icon the site/app has defined. This has been a feature of iOS for a while.
Thanks, banning the user. This is becoming exceedingly common unfortunately.
Not unless other users can see that result
[gl-matrix](https://github.com/toji/gl-matrix) is a fairly complete vector &amp; matrix library and it doesn't use classes. I've done a fair bit of graphics/game in JS and Typescript over the past few years. I've used three.js quite a bit but one pain point is always having to copy its vectors to use in another library (like cannon.js for example) which uses its own vector classes. Then in my own app I have to decide whether to roll my own vector lib or choose one from the libs I'm using, making my app very tied to that particular library. The {x,y,z} structure is the same but both libraries assume their class methods exist on vectors. Functions that work on structs would be able to share the same data. I agree that arrays would probably be better as the common datatype for all graphics libs because that's what WebGL consumes. But I can see the appeal of objects for a more user-friendly structure. Either way, by relying on methods rather than plain functions you make your types incompatible with the rest of the world. I often find myself wanting to use 2d functions on the xy component of a 3D vector. With functions and structs I could do `d = dist2d(a, b)` where `a` and `b` are 3D vectors (arrays or structs.)
...........well then. Touche.
The problem is you won't be able to use your class methods on a plain array that doesn't inherit from your Vector base class.
Is there a reason you're the one doing the evaluation if you don't have experience with this? I think you should at least voice your opinion, if it doesn't feel like a good tool for you after playing with it for a while. As for loopback, I don't have any knowledge of but you gotta get to the apache servicemix osgi stuff to get a good taste of that sweet overengineering lollipop :)
Thanks for the response man
Yes, this could totally happen. Thank you, hallettj
Not a big fan of webpack myself. I still use browserify with budo which gives you hot reloads for CSS and can do code HMR with browserify-hmr. Rollup's efficiency is appealing but I still like the development convenience of the browserify toolchain.
!remindme 2 hours
I will be messaging you on [**2019-01-11 17:43:00 UTC**](http://www.wolframalpha.com/input/?i=2019-01-11 17:43:00 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/aeucvf/open_source_discord_bot/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/aeucvf/open_source_discord_bot/]%0A%0ARemindMe! 2 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! edtb46p) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I don't think that is the bad practice. It more like [overloading in c#](http://csharpindepth.com/Articles/General/Overloading.aspx) (and might be other language). And it also similar with JS's native Date object signature: JS native date: new Date(); =&gt; current date; new Date(value); new Date(dateString); new Date(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]]);
Maasdrop uses pwa so does polymer website 
&gt; Is there a reason you're the one doing the evaluation if you don't have experience with this? I'm the node lead. I do have experience with other frameworks but never really worked with LoopBack. Was told to check it out so here I am. &amp;#x200B; &gt; if it doesn't feel like a good tool for you after playing with it for a while. Yeah, I'm trying to give it a chance but geesh. What I'm most worried isn't the framework itself but documentation and learning resources. Ironically, the amount of online docs and resources is often inverse proportional to the complexity of the framework.
[v3 Release notes here](https://github.com/juliangarnier/anime)/releases 
Heh. I'll definately follow the thread, but it isn't looking too good for loopback4 at the moment :)
I haven't used this library, but have used GSAP (Greensock) quite a bit. The features offered by Anime.Js seem very similar to GSAP. What differences or advantages are there to Anime.js over GSAP (if any) or would these just be alternative libraries that more or less do the same thing?
Looks very integrated with the site, nice job
Imagine the post was about React. People would've already flamed me, because obviously there's tons of people using React. The relative obscurity of LoopBack is a bit of a red flag, tbh.
Indeed. Who's gonna be there to help when something just doesn't work. Or maybe the loopback posse lives on a weird time zone :)
Thanks, for sharing! I want to learn programming to perform some geeky tasks such as automation and I think that a good start would be to modifying slightly other's people code. The first thing I will try something like: if the file type is .mkv and the filename contains the string 1080p, then move it to the folder X. I hope I will be able to do that by myself just looking at your code without needing to come back and ask for help :)
The main advantage to anime.js is that it's really tiny, it's like 1,200 loc unminified. There's a few other nice features, like parameter inheritance in timelines. They also have simple keyframing. I also find GSAP's API really weird. Their setters are getters and which makes typing awkward. Everything's jammed into a vars object and in a fromTo you put all the options in the toVars. I think a lot of the problems with gsap are known by the devs but they are very resistant to changing the API for backwards compatibility. &amp;#x200B; One thing that annoys me about both anime.js and gsap is there's no manual tick. You have to plugin to their tick. That means if you have your own loop, you need to base it off some third party's tick or else you can't guarantee scheduling. In that regard, PopMotion has the best solution with Framesync but PopMotion's timeline is kind of weak.
Thank you very much for your detailed insight into this!
See how many pages can be statically rendered on the server, and cache those pages. Detect the user's preferred locale or use the user's chosen locale to fetch them from a server cache (for heavy loads) and cache a default on the client side. Again you would have to make the determination of how much localization is needed, if it's dynamic or static, if it needs to be server side or client side or a mixture of both - and how much is cacheable (probably all since locale data does not typically change over the lifetime of an application )
npx is already there on modern installs of node
Nice 
What would typical amounts be from places like this? SitePoint used to be $200 from what I recall.
It's so refreshing to see the main home screen demo use a bunch of divs with css transforms instead of some black hole canvas object. Can't believe how performant it is.
Looks nice. I do not know if you really need your own backend service for this tho. I'm pretty sure you could get far by requesting the HTML with fetch or XMLHttpRequest on the client and parsing it with for instance [cheerio](https://cheerio.js.org/). The API for cheerio emulates jQuery, so it's pretty simple to do scraping with it. Of course having your own backend service allows things like caching and such tho.
Are you strapped for cash or is it more of desire for "beer money"? Instead of trying to eke out a few bucks it might be a better use of your free time to put together a nice project or two on a publicly available forum like github that you can use in your portfolio after you graduate. If you're really out to make money now, it sounds like it would be pretty hard since you can't focus all your time on it. I don't know what else you can do besides freelance sites unless you can find a personal connection that needs work done on a flexible schedule. 
My girlfriend asked me to help with Discord.js and we've got this https://github.com/Sparin/Hamster Btw, I'm not a js developer. My main language is CSharp, but I think you're missing a lot from ES-2015 features. Classes for example. And I don't see any promise handlers or using async/await. It's quite bad because of the most functions of Discors.js are promise based. Look at Discord.js source code. All functions are covered by JSDoc comments. You probably should try to cover your code too, because if do this, some IDE like VS Code will help you via suggestions. Give a look at my repo. Some useful things you can take from there. Like command handler abstract class or copy-pasted Dockerfile for easy deployment.
!remindme in 6 hours
Ok thanks! This is dealing with money and every fraction of a cent matters so it is important. I think i'm going with BigNumber.js.
I will be messaging you on [**2019-01-11 22:43:13 UTC**](http://www.wolframalpha.com/input/?i=2019-01-11 22:43:13 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/aevzar/i_made_a_browser_extension_to_improve_the_quora/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/aevzar/i_made_a_browser_extension_to_improve_the_quora/]%0A%0ARemindMe! in 6 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! edtgyhu) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I didn't think of that. Thanks!
Also, note the MIT license! You have to pay to use Greensock commercially
Such a nice identification of user needs ;). Indeed, questions without answers are "noise" when they are too old. However, I think it is fine to see "young" answers (with age &lt; 2 days) with zero answers. What do you think? You could include that in your extension.
I don‚Äôt really understand this response? Are you saying JSX is a bad practice because people HAPPEN to often arrow functions and pass objects to props when using it? If so, who cares. The the GC do its thing. If you‚Äôre UI doesn‚Äôt perform you have much larger issues that aren‚Äôt related to GC. I can talk about code organization ‚Äúlike that‚Äù. Yeah, it was kind of a black and white answer, and I did not elaborate every nuance and exception, but in general my point still stands: modern code is organized like I described. I don‚Äôt care what Dan Abramov has said. He has the right to have his own opinions. He does not work on applications and his advice does not apply to me in most cases. I am not a fan boy. User navigation is an argument. Discoverabily is an important pillar of engineering and what you‚Äôre describing is searchabilty. Two different things that are both important. You cannot assume others use your IDE. You cannot assume people even use IDEs. TL;DR: 99% of the time there‚Äôs no reason to worry about performance. Organization matters. 
I'm not watching an hour-long video just to check, but did you remember to mention anywhere that client-side validation is cosmetic only, and for security must **always** be also/instead performed on the server-side?
I'll give a try. Quora is where I turn to every time facebook suspends my account for 30 days.
 document.getElementsByTagName('html')[0].innerHTML
I just want something for stupid people like me that takes me directly to the chrome extensions store where I can single-click an extension to install it to chrome. I don't see that at the link you provided. If it's on the GitHub page it isn't very prominent and I don't want to read everything on that page to find it. Can you give me a link to the chrome extension store that contains your chrome app?
You can perhaps use the [`download.download()`](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/downloads/download)-api.
Ok, and how can i set an URL on that page?
I'd recommend sticking to what most people use: Express (or Koa), Sequelize (ORM), Passport (Auth). You'll have access to a ton of people who can help you. There's express starter projects if you need good examples of how to structure your project (routes, etc.). 
I finally found it. It's a very nice app and I am keeping it. Thank you. But please do take advice I gave on previous comment.
Aside: I'm getting so sick and tired of these fucking repliers on Quora that sound like they get paid to answer shit (which I think they do). It's like YES/NO... and they write an essay with no actual answer. Drives me nuts.
I miss read that documentation. It is for Firefox extensions. I am sorry. It looks like it can be solved by using a link. Here is [a JSFiddle that works}(https://jsfiddle.net/koldev/cW7W5/).
I keep getting hit up by quota to "get paid by asking questions" - so it wouldn't surprise me if that was the case. 
Sure, Thank you Make sure that you've starred the repo
&gt; the fault of the individual JS developer This is definitely far from ideal. To give some extra background, I was once brought in to help on java code for a bank system. I needed to bring in a fairly popular package for a task and originally grabbed the JAR (the distributed binary) from the official website. I installed it locally, wrote tests and everything worked fine. But when it came time to push the code, it got flagged by the security scan. Why? Because since the source merely publishes releases, these releases - by definition - have not been audited by a reputed security team. Only an audited and cryptographically signed version of the same JAR file available from the auditor's registry could be used, even though the version of the release was identical.
Oooooh, I had no idea that existed... thanks!
 Programming beginner here..Many will suggest eloquent JS. I tried but I‚Äôm way too ignorant to use it. I‚Äôve since had better luck with professional js by zakas and codewars exercises. Zakas covers ES5 very clearly. ES6 has some coverage in the appendix. Every other beginner authors I‚Äôve read skip over very important language details. Eloquent JS rushes through the basics with little detail, knowing that the reader will just use better resources for the exercises. If I didn‚Äôt already do fizzbuzz, I would‚Äôve been stumped by eloquent‚Äôs fizzbuzz exercise. Freecodecamp is es5 but it can be helpful to simply fill in blanks and learn what each part of the basic language does. 
Thanks for sharing your experiences and advice guys! I'm leaning towards Mead, but will perhaps do one of the others as well just to get a better hang of things. Again, greatly appreciated. 
Thank you! What do you use programming for?
My anim8js libraries can be manually ticked If you want, but I haven't adequately documented it yet...
Depends on the philosophy of the library. Some types of libraries emphasize composability and strictness (e.g. js-joda) and some emphasize ease of use (e.g. moment). With Typescript becoming more mainstream, I'd say the former kind is probably going to be better in terms of friction With that said, if you're consuming nullables, it's really kinda on you to deal with them properly (via type checking, FP libraries, tests, and/or other tools), rather than faulting a library. 
Never heard of it. Can you provide a link so people can give it a go?
Oh, sure: https://www.froala.com/wysiwyg-editor.
I apologize. In retrospect, I realize that it might be pretty difficult to find the links to the extension in the GitHub repo. I didn't want to include a bunch of links to the original post to avoid it looking spammy. I see from another comment you were able to find it, but once again I apologize for the inconvenience. For others who are having trouble finding it, here are the links: &amp;#x200B; Chrome: [https://chrome.google.com/webstore/detail/quora-explorer/efdnamipmhpnngkdhhobdpmkdmiloone](https://chrome.google.com/webstore/detail/quora-explorer/efdnamipmhpnngkdhhobdpmkdmiloone) Firefox: [https://addons.mozilla.org/en-US/firefox/addon/quora-explorer/](https://addons.mozilla.org/en-US/firefox/addon/quora-explorer/) &amp;#x200B; Thanks for taking the time to check it out :)
Bout time, nice job.
I agree, sadly there are a **ton** of crappy answers on Quora :( &amp;#x200B; I still tend to use it pretty frequently, though, because once and a while I come across some really great ones.
I literally use async/await in every command which uses an api. I chose not to go with classes for command handling and it's perfectly fine, even the discord.js guide doesn't use classes for command handling. I don't use classes because even though they are called classes they are nothing but syntactic sugar and in some cases they don't act as 'classes' like you know from your experience with C#. And finally when you give someone feedback on his code atleast take a minute to read it, as I said I use promises alot because I use apis.
Even though you probably hope to read product reviews, I‚Äôll just say the homepage looks slick. Perhaps you can ask users to review the product on e.g. Product Hunt. The probability of users being on r/JavaScript and seeing this post isn‚Äôt very high.
Well, the problem is that JSX encourages bad practices. That‚Äôs what I was trying to say. Not that it is a bad practice. GC causes some things when it does its job. Writing code while relying on it is a bad practice. Yes, there can be bigger issues than it but that doesn‚Äôt mean you should ignore them. BTW, GC was just an example that I gave because it caused huge performance issues in a recent project that had to run in IE11 and Edge. Another problem that I found with plain objects and arrow functions in a recent project was the fact that each parent rerender triggered the child‚Äôs rerender because the cd mechanism saw different values and thought ‚Äúnew values‚Äù. Don‚Äôt be silly with the code organization. All 3 past companies that I worked for had different structures for the projects depending on how large it was, what was the tech stack etc. You can‚Äôt talk about something if you ignore the context. Dan Abramov‚Äôs tweet was more like an example of the hipsterish part of React. But boy, he‚Äôs quite the head of React. No, that doesn‚Äôt make him an idol but using his product and saying ‚ÄúI don‚Äôt care what he says‚Äù does not match. Think about this: you worked 2 years for a project. During those years the framework transformed into something that you don‚Äôt like. What are you going to do? Use it and hate it? Migrate to another framework? And this discussion can be prolonged. Like i told you: every major IDE and code editor has direct file opener and symbol search. JetBrains products, Sublime, vscode, Atom and even Brackets. This is strictly my opinion: if you don‚Äôt use an IDE, you are working hard, not smart. ofc you need to organize the files in a structured manner (otherwise we would throw everything in the same folder). But when a project gets big, you will need ‚Äúsearchabilty‚Äù, not ‚ÄúDiscoverabily‚Äù or you will end up scrolling back and forth.
Beginner here with no background in computer science or anything logical/mathematical. Picked up a copy of Eloquent JavaScript and was discouraged by Chapter 4. Found an online course called Watch &amp; Code for free. The teacher walks you through the construction of a todo list. Very informative, I learned a lot. He‚Äôs got paid content too, which goes deeper and is highly complex, but totally worth it since you‚Äôll be ready by the time you get there. It‚Äôs worth a look for sure. 
M‚Äôscript. *tips fedora*
2 questions: Does it work with scrollmagic? Is it easy to include in an Angular project?
I'm a little over halfway through Jon Duckett's Javascript &amp; JQuerry. Is this a good book to pick up next? 
Does their tick helper not allow you to manually fire a tick? https://animejs.com/documentation/#tick 
This is beautiful. Saved.
trying to learn enough to create some basic projects for a portfolio. The trouble with beginning is that it‚Äôs hard to know if what you know is enough.. Oh my original response assumed you knew html css...if not Theres a bunch of good resources on those.. Good luck!
A bank is pretty much the standard example of a high security assurance environment. &amp;#x200B; &gt;This is definitely far from ideal. Security and convenience are often at odds with one another; what raises cost to a developer will also raise the cost to an attacker that can plant malicious modules. Teams hire auditors with security expertise to give not just technical guarantees but some level of assurance to the risk management guys at the same bank. These processes are sometimes in place for compliance or regulatory reasons as well. 
Assuming I'm understanding your question correctly, you can't use equality comparisons on arrays or objects in Javascript. `[] == []` will equate to `false`. You'll have to loop through and compare each value. https://gomakethings.com/check-if-two-arrays-or-objects-are-equal-with-javascript/ is a great post about this.
GSAP lets you use the free license for commercial products as long as you're not reselling your code to multiple users. I've used it in banners for many years. Although there are many end users for them, there's only one client who pays me for a project, so the free license works. Great tool.
It seems this editor has more "menu options" than any other I have seen (don't take my word for it). Looking forward to when you will have removed jQuery.
Just got zakas 2012 professional JS. Really well explained. The first five chapters have cleared up a lot of confusion left by most beginners books.
Running on an updates ridden iPhone 6, I‚Äôve never seen a site so large and filled with so much motion yet not produce a single instance of lag or stutter while scrolling. They weren‚Äôt kidding when they said lightweight. 
I would advise you to try algorithm challenges like those you can find on [Codility](https://www.codility.com/) (by the way, the company I work for screens new devs with codility). Learn ES6 syntax this way. Afterward, I would advise you to try building an app with a JavaScript frontend framework of your choice: React, Angular or even React Native for mobile. If you want to learn by reading, I reckon you read Mozilla's guides to web development, and for you especially the one concerning [JavaScript](https://developer.mozilla.org/bm/docs/Web/JavaScript/Guide).
If you're talking about **v\_tagcolors**, it isn't assigned to anything yet. It should be **undefined.** Is that what you mean?
Using quilljs right now, what's the advantage? I generally also like prosemirror and ckeditor 5.
Thanks for the feedback! The difference between JavaScript and C# is that one has type safety and proper function overloading and the other does not. I'm not sure about C# but in C++ it's clear during compile time which method is being called: &amp;#x200B; \`\`\` // Method definitions: void foobar(); void foobar(int x); void foobar(bool y); &amp;#x200B; // Call: int x = 2; foobar(x); // The compiler already knows that only the second method signature is used here \`\`\` &amp;#x200B; Compare that to JavaScript where you have to implement function overloading yourself (and check for various edge cases). &amp;#x200B; I think it's a weird fallback to return the current date. I would rather expect to get an invalid date.
Of course, I said that server side validation is always a must and is the least you can have, and that client side validation is only for good UX and in the cases where you dont control the response you get from the server you use it to show errors
Thanks for the suggestion on joda-js, I will try it out! Unfortunately we are already required to use moment in the frontend because another dependency (react-dates) depends on it. You are correct on the type checking issue. We definitely need some improvement there (I also thought about switching to typescript but I'm not sure whether it would have helped in this particular case). However, I still think it was not the best idea to overload a function in a non-typesafe language to return such an unexpected (and nondeterministic) value.
I was actually wondering why v\_tagcolors is accessible via this., but not directly.
I was actually wondering why v\_tagcolors is accessible via this., but not directly.
My pet peeve w/ moment.js is how it [handles string parsing](https://momentjs.com/docs/#/parsing/string/), falling back to [browser-specific heuristics](http://dygraphs.com/date-formats.html) if it doesn't conform to ISO 8601. 
Inside your **databse** object, if you wish to get the value of any of the properties, you have to use **this**. Inside of an object, you have all of the properties listed: **v\_notes, v\_categories, v\_tagcolors** etc. The parent, or encapsulating object, is called **database**, but within the realm of **database**, you can't just call **v\_tagcolors** and expect to get its value; you have to use **this**, which represents the parental view of the object. Technically, you can call **database.v\_tagcolors**, but it isn't encouraged. 
Being the weeb I am, it makes me sad this has nothing to do with anime the genre. 
You may find more specific advice and experiences in... /r/LearnJavascript
1) No - WebAssembly will exist as mathematically intensive frameworks and libraries. Remember, WebAssembly can't directly operate on the DOM (to my understanding). "JavaScript" has been around for an extremely long time and don't see it going anywhere anytime soon. More specifically "JavaScript" barely means anything. It exists in so many different forms. If you're referring to the EMCA specification, remember that Flash's ActionScript 3.0 was EMCA based. So even if a flavor dies (such as maybe a specific implementation like ChakraCore), the specification lives on. 2) Garbage collection is fine the majority of the time, unless you have specific needs. If you're alluding to a different model (such as memory ownership), there are still concerns there because the concept of memory ownership relies specifically on our interpretation of computers rather than an expression of application logic. Basically: Its (usually) easier to write something that better expresses your application's intent rather than around system technicalities when writing at such a high application layer. Not to say there is no other way to manage memory, but I doubt most other devs actually fight the GC in JavaScript. 3) I think all those things are good for frameworks and libraries. I would caution against any applications trying to utilize things because of the added complexity. JavaScript is very powerful (and honestly quite fast in recent V8 backends) despite it being single threaded. I think there is power in that simplicity. As for strong types, if you really want, TypeScript can get you closer there without sacrificing the domain knowledge of JavaScript.
That's quite complex for a simple cookie haha! Thanks for your help ;)!
it's the same function I copy from stack overflow on rare occasions I need to deal with cookies. you're right it could certainly be shortened though.
I think you might need to create a function to play the file and use setTimeout repeatedly call the function. I did an exercise with settimeout printing every so many milliseconds
Ya thanks a lot. I was still being slightly confused by oop with function()
The following comes after just a quick look through your page. And so, these are just the most immediate thoughts I would have if I were looking for a WYSIWYG editor. 1. How does this compare to other options? I had heard of Froala maybe a couple of times, but I know of about 20 other "lightweight" and maybe half a dozen more non-lightweight. So, the main question is: What makes Froala different? From the site I only get the impression of "Just another WYSIWYG editor"; nothing jumps or lights up as "the feature" that makes it different. 2. Weighting in at about 400+ Kb (Main JS and CSS assets) _compressed_ and with that pricing range, I'm inclined to compare it to other options like even CK or Tiny. And this puts you at a disadvantage: Those are solid, established and known competitors. It seems a bad idea to try to compete directly against them on those aspects so, again, you'd be forced to punt on something that clearly differentiates Froala from those, and no such special feature seems to be highlighted on your site. 3. Regarding the editor itself... I don't feel like the huge amount of buttons the editor has on your homepage actually helps make it look _better_. I feel like you're giving a first impression of both "too many" buttons and a somewhat disorganized interface. I mean, those buttons just thrown there... it reminds me of the _old_ Word toolbars [and not in a good way](https://blog.codinghorror.com/content/images/uploads/2006/02/6a0120a85dcdae970b0120a86d6311970b-pi.png). I _have_ seen that in the "tour page" the toolbar is simpler, so I know it can be simpler. Yes, but the first impression is the one given in the homepage.
There is another import method I think, when u use /// &lt;reference path="..." /&gt; On the beginning of the file. https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html Maybe this helps?
Came here thinking the exact same thing. Was hoping it was a library that used some api that‚Äôs related to some like MAL or somewhere to pull info from. 
Thank you, this is amazing! 
Best way to understand is to practice. Either write simple scrips and run them in your browser, or download a program called [RunJS](https://projects.lukehaas.me/runjs/). I think it only exists for MAC. It's a neat program that allows you to write JavaScript so you can test out code and see a quick output.
1. No. 2. JS **is** garbage-collected. 3. WebAssembly will be used for what it is good at, and JS will be used for everything, even the things it isn‚Äôt good at, simply due to ease of development by comparison.
Wow manual tick! I am not the only one. Each time I try a new anim framework it‚Äôs always missing one lil feature that gasp has that I never realized was so important. 
Thanks, I actually do already have much knowledge, though. Maybe not in js, but I know languages like PHP and Java well enough by now.
Unethical best solution, find people willing to pay you for doing their JavaScript homework. 
1) Many delevopers are looking forward to it. Wasm will open the frontend to other languages so JS won't be the only one. We have to wait for GC, threads, direct access to DOM and other features, but it's only matter of time (years). You can check out some frameworks like Blazor ([https://blazor.net/](https://blazor.net/)) that is based on .NET in C#. You can build FE apps right now but it's still not ready fot production 2) JS has GC 3) I see bright future in Wasm
you should check out Blazor [https://blazor.net/](https://blazor.net/)
Wow, really impressed
I'd be remiss if I didn't say that all of this becomes way easier if you just write TypeScript. Put your JSDoc, code, declarations, all of it in the same source file. It's straightforward and it works. BUT I know that's not the question. My team writes .js and uses checkJs as well, so I'm in the same boat. Check out `export as namespace`. It lets you declare an external module that is also available as a global namespace, so you don't have to import it. Put that in your .d.ts file, then everything in that file will be available on a global namespace.
:D I am from Slovakia where average wage is around 800‚Ç¨/m before taxes so 200$ would be rly great... But I don't think that my English is good enough... Nevertheless thanks for the tip ;)
Thanks, will give this a shot! And I did give typescript a shot, but I code in a pretty simple functional-inspired way and the in-line types added a lot of noise and made it a bit more difficult to read through quickly Worst case I ran into was trying to write a map function that iterates over an array[][] grid // Map over a grid export const map = &lt;T&gt;(fn: (v: Cell&lt;T&gt;) =&gt; Cell&lt;T&gt;, grid: Grid&lt;T&gt;): Grid&lt;T&gt; =&gt; grid.set(_.map&lt;Cell&lt;T&gt;[]&gt;(_.map&lt;Cell&lt;T&gt;&gt;(fn))(grid.grid)) Versus what I'm using now /** * Map over a grid * @template T * @param {function(T):T} fn * @param {Grid} grid */ export const map = (fn, grid) =&gt; _.map(_.map(fn), grid.grid) |&gt; grid.set And I just want to get some red squiggly's when I'm refactoring :P
while where doing asides, is the "why should I use duckduckgo instead of google" question everywhere for other people too? I see it everywhere I go, whenever I have an ad on reddit, there's an 80/90% chance of it being that
Practice makes perfect! There‚Äôs also always an editor or two who corrects everything. I‚Äôve seen pretty bad articles being corrected into descent ones, so I wouldn't worry about it too much. Either way, all the luck to you and your search for making a living as a programmer.
Thanks a lot for the feedback, great points regarding product presentation - we belive that the demo on the homepage is a bit cluttered too and working on this direction already. We‚Äôre standing for pushing the web editing further and Froala is the first editor that introduced a lot of new features that weren‚Äôt available in web editors. We‚Äôre here to challenge what can be done with an editor and at the same time bring you product that is easy to integrate without making your life hard as a dev.
Quill is a great editor, though we believe it lacks the out of the box features that Froala has, and based on what I know from our customers sometimes it might be hard to extend. What do you like at Quill / other alternatives and why would you choose them over Froala?
Thanks for your feedback. What do you like / don‚Äôt like at it?
But it's a mediun
Yes! Been waiting for this updated Anime.js library. It's so good.
I've got some higher, some lower. Around that sounds right.
 Compare that to JavaScript where you have to implement function overloading yourself (and check for various edge cases). That is true. But for this context the library author is the one that implement it, not the library user. So IMO it still the same I think it's a weird fallback to return the current date. I would rather expect to get an invalid date. Honestly for this case, if I don't know the method signature of moment, then my first assumption would be current date. My assumption is based on the similar between native JS's date constructor and moment. I think that is part of the reason why moment is design that way, to make it similar with the vanilla date.
Same here; red squigglies all the way. I usually don't care about type errors; I just want a pleasant refactoring experience. For gnarly function signatures I typically do something like this; it might work for you. It ends up being fewer lines and avoids some repetition: ``` /** Map over a grid */ export const map = &lt;T&gt;( fn: (t: T) =&gt; T, grid: Grid&lt;T&gt; ) =&gt; grid.set(_.map(_.map(fn))(grid.grid)) ``` (Assuming Babel's TS plugin plays nice with the pipeline operator)
[You Dont Know JS](https://github.com/getify/You-Dont-Know-JS).
Oh my god, awesome geometry and math job done! üò±
Not necessarily. It really depends on how server is implemented. Maybe it's not doing anything with cookies and instead using token that you pass with the header or otherwise.
Well, you can get the value from the localStorage and pass it to the server with the header or with the body of your request.
This doesn't work on IE 11? It's working great on Chrome. 
I was curious about the numbers here, actually. Looking at [an NPM-Stat query for last year](https://npm-stat.com/charts.html?package=aurelia-binding&amp;package=mobx&amp;package=redux&amp;package=aurelia-framework&amp;package=apollo-client&amp;from=2018-01-01&amp;to=2018-12-31), the downloads for the month of October alone: - Redux: 8M - Apollo Client: 1.6M - MobX: 834K - `aurelia-binding`: 46K - `aurelia-framework`: 27K I wasn't sure exactly how all the individual Aurelia packages tie together. I figure the bindings package is probably about the most used, so it's a reasonable proxy.
Sorry, I missed to explain my point: As a user of an overloaded function in Javascript, it's not clear by just looking at code what codepath is actually taken. The moment constructor might initialize itself from another object, or parse a date from string, or return the current date if the parameter is undefined. I think that's way too much complexity there
I‚Äôve been using anime.js with manual tick passing in my own RAF timestamp.
Nice! Is this new in 3.0 or did I just just it before?
Gsap, to my knowledge, only has a tick callback, it doesn't have a way to tick it from your own RAF. Would be happy to learn otherwise.
You can't via "window.open()". Your JS runs in the window itself, if you create a new one, your code isn't running in that window -- you created a brand new, fresh JS context. So there is no code running there. If you want to do stuff like you are trying to do you have to go "one level higher", i.a. the browser. So the JS can run inside the browser's background instead. Look into mozilla's documentation on extensions and everything JS.
No I don‚Äôt think gasp has manual tick. I looked hard for this. 
I've been getting some nice results from this framework and i know dick all about JS in general. Wish i figure out how to morph organic svg shapes though! 
Do these people get paid by Mongo or something?
This is not a serious article. It's copy-pasta.
One day I hope I am able to code something like this for myself. 
I was commenting more to the writing style that is precisely what you'd expect from a student in an intro programming class, being told to "do a report on X" that you have no clue about. Every day we get submissions that are roughly 500-1000 words long, contain tons of buzzwords, and yet are fully devoid of any original or editorial content. Many times they just copy/paste from other sites (especially StackOverflow &amp; Quora), and I use the same technique of "search for this exact phrase on google" to catch many of them. Others, I just look at the overall quality and instantly ban the domain.
Eloquent JavaScript. Another good beginner friendly type resource. You don't know js is another I see suggested alot (as someone else already has). But honestly... I'd start with a project in mind... Start breaking it down into it's small pieces.. and work on those individually and peacemeal your learning as you go one you get basic syntax down. Which is the first 2 chapters of any free book or medium post online or any JavaScript tutorial on YouTube. 
Isn‚Äôt this NPMs paid business model? Your organization seems like a prime customers.
I am not a JavaScript expert so pardon me if I am wrong, but until someone figure a better answer all I could think of is this: The way I understand how your code flows is that your callback() which is the sql. Query(loadfile...) Fires only a single time at the end of the function itrarte(), I know that sounds like what you want it to do but is that function prepared to take a file with multiple line and itrate over it internally to separate it into individual rows ? Because to me I would think you want to read each line and insert it separately 
Is dump.write synchronous or asynchronous? 
asynchronous
It is when I call it manually. &amp;#x200B; If I were to take the loadfile part and put it in a separate js file and run it after the first js file was done, all rows get inserted without issue. 
lightweight tends to refer to code size, not performance.
True, but you catch my gist.
According to the table on the site \&gt; Usage in web sites or products that require a fee to use or join (NetFlix.com, Ancestry.com, eHarmony.com, etc.) This is not allowed and this is a huge deal, because often the product owners want to add paid options later to their webs and then you'd suddenly have to rewrite all your animation code or pay Greensock fees. When you're developing a system that will be an ongoing and growing project (and let's face it, all webs are) you want as few of these potentials hurdles baked in as possible. I know the system I worked on (that has velocity.js in it) now has closed subpages where you have to pay to join, and thanks to the decision of not choosing Greensock nobody had to spend time figuring out these licenses and then waste the project's very limited resources on fees or on rewriting the code. 
What is `code here pulls back my index file`? What code is actually there? Is any of it asynchronous?
It's one line of code that calls the built in require function of node.
As an update, I wrapped the callback function in a setTimout like so: setTimeout(function() {callback()}, 5000); And although it loaded all the rows as I wanted it to, it's not practical. I have no way of knowing how long the surveys function will take. It thought that was what a callback was for; not to be called until the parent function has finished. I am at a loss here.
Get good at git.
Is that pretty much the only thing I need ? 
Missed opportunity. Could have just said `git gud` üòú
This feels suspiciously like a homework assignment
Dang, I tried.
Probably not, but it was the first thing that came to my mind.
I started using Anime a few months ago at my job and management has been ecstatic with the results of the performance and smoothness of the animations. It's a very simple library to implement but is very robust.
The crazier part is that I though forEach methods were synchronous, i.e., blocking. How the callback is firing before the forEach method has finished is beyond me. Unless the forEach method is asynchronous and I was wrong about that.
I used it a few years ago. I personally thought it was much better than Angular at the time. The concepts for both were similar but the Aurelia approach was cleaner though. 
I've been a subpar dev for a good many 'a year, the absolute best tool in your belt is a real life good friend (or three) who's a better developer than you. Next to that is a supportive non dev friend for when the shit gets wild. Nobody ever really tells you this, but all you really need is a foundational level of programming skills and the ability to grok documentation to succeed. There are only 2 real skills you need in this industry, the ability to ingratiate yourself to the person who makes hiring decisions and the ability to do what's asked of you.
damn this is really impressive
Alright, thanks. That is what I've been doing now. Going to give it a couple more years then. &amp;#x200B; Thanks for taking the time.
Its great to see a library that gives parity with the functionality of Flash 20 years ago :-/
does this need to be animated? if not it is very simple. I'm not sure if you want the answer or direction? Answer for non animated: https://codepen.io/anon/pen/dwQzJy if animated that would be a lot more difficult.
Dude you're an absolute legend! I already appreciate it even without the animations, I love it man! Thanks a lot, can't thank you enough! It's 6am and been trying to figure it out since 3am. I can finally go to sleep now lol thanks bro!
Agreed.
I don't see that one, that often. I'd like to use DuckDuckGo - but you forget how good Google is with search once you switch.
I might be misunderstanding but... have you tried conditional rendering? imgUrl ? imgUrl : null If the image exists, render the image. If not, return null or nothing. 
You might as well host it yourself and build a user base. I can't imagine any Discord user (that doesn't know how to make their own bot) that could be bothered installing node and acquiring the various API keys to run your bot when they could just go on some bot list and click an invite link.
I think it‚Äôs amazing how Microsoft has made every version of IE since 5 absolutely miserable for web developers.
I think it‚Äôs amazing how Microsoft has made every version of IE since 5 absolutely miserable for web developers.
No swipey :(
Sorry it only works on the web through a laptop so far! 
I believe you can implement swipe detection with javascript. Looks good though!
That's true, I need to give that a thought. Thanks!
I really appreciate it! I‚Äôll take it look into and let you know again :) 
check if the return value of `dump.write` returns false. If it does you probably need to wait for the `drain` event before writing more data. https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback
You rock! Thanks :)
Hey sorry to say but the code doesn't really work anymore. I've added a pictogram and a title which disappears when I click something and so does the css This is before I click something: [https://imgur.com/a/EYFNUEr](https://imgur.com/a/EYFNUEr) This is after: [https://imgur.com/7dgXo8X](https://imgur.com/7dgXo8X) &amp;#x200B; You see how the css and everything disappears?
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/mMptfLD.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20edvfpik) 
Fn not detected and other keys detected in spotty manner. 
forEach are definitely not async. dump.write looks like it's probably the source of async here. Obviously if it's async, callback may be fired before everything is written.
This is absolutely gorgeous. Hard to implement? I *just* got spanked for getting too into Css on an offering recently... But I'm drawn back to the flames by this... 
Here is a preview [https://codepen.io/ivan-salim-rasoel/pen/yGQzMr](https://codepen.io/ivan-salim-rasoel/pen/yGQzMr)
[removed]
How did you change it to synchronous? Because if it is async, then that is likely the issue. Foreach just blows through the array, and the callback gets called before all the async calls finish. (potentially) 
That is solid evidence that a line or lines of code above your callback() is asynchronous and you aren't handling it correctly. My money is on dump.write()
Cool thanks! 
Your foreach is syncronous, BUT it doesn't force code inside it to be synchronous.
Get familiar with the browser. If you are developing for the browser you should learn what it‚Äôs capable of doing. Google dev tools is insane! Such a powerful tool!
Get familiar with githubs interface, merge / pull requests, and git flow. 
I read this blog yesterday. Most of it is quite fitting, and would my my advice as well. Most, Not all. https://michaelscodingspot.com/2019/01/10/11-things-i-wish-i-could-tell-myself-as-a-junior-software-developer/
Get familiar with the debugger / inspector. Both the browser based, and the one in your IDE (VS Code). Know how break points work. How to inspect properties. How to step trough code. Call stacks. Flame charts. Perf reports. Debugging stuff. 
[Prettier's lack of configuration is treated as a selling point.](https://prettier.io/) You can't change the behaviour you're describing.
Very easy to include in Angular, at least the last version was. This one probably is too.
For the portfolio. Build something. Anything. Make it open source, or not. The thing is. You have something you can talk about during the interview. Maybe you recognize some questions they have, because you experienced some trouble during your project. Or maybe you can tell enthusiastic about how you overcame some issues while building x. Our job is not about the tools. Our tools change every now and then. Of course we need to know how to use them. But don't stare blind on it. Our job is to create awesome things. And fix frustrating issues. Our job is to analyze existing code, think for half an hour to decide how to write the next 5 lines. Last advice. Always keep calm. Don't stress. Your not getting payed on lines-per-hour (if you do, quit!). And read code of open source projects. See how they structure the code, and files. Don't directly copy it. But use as inspiration and learn from it. 
Don't know about Angular but can confirm that it works nicely with scrollmagic. You just disable autoplay and do seek() on animation based on scroll position. Also I found that I needed to set scrollmagic's refresh_interval to 0 otherwise you get some weird stuttering on animations.
This is amazing
Fuck‚Äôem use a garbage browser, get a shitty browsing experience. 
Node is a back-end language. You'll probably get higher quality inquiries if you post compensation estimates.
&gt;There is no...react modal. To be [pedantic...](https://github.com/reactjs/react-modal) &amp;#x200B; But yes I 100% agree with you. &amp;#x200B;
It is really smooth on iphone 5 too. 
Completely agree it would help, but we‚Äôre early in the startup process and it will vary a lot for each person depending on their experience, involvement, preferences, etc. 
Is \_is\_ a selling point and compromising has allowed the many organizations I've been it to rid formatting bikeshedding almost completely. Thank god.
http://hammerjs.github.io This could help :) 
Cool! I have some issues on mobile safari tho. Half the route is missing and the location pointer moves to a wrong location when i move the map.
Check out the implementation over [here](https://github.com/inishchith/MeetInTheMiddle) 
You should use .innerHTML instead of .innerText in the onClick function. This way all the tags are copied and not just the text inside. 
First of all: You can't be a software developer and have a girlfriend at the same time. Please respect the biological laws of procreation. Secondly: If you already know how to program, picking up a new language is fairly easy. Learning it for the very first time can take a while. I cannot imagine that you are too stupid for that. Not every programmer has to be Einstein and create new fancy algorithms. I would say, it is a great advantage that you got a friend who already works as software developer. That way you can learn from him when you get stuck. Just keep on going. Btw why are you asking this in JavaScript when you are learning Python? 
Nice one üëç
I have not tried this yet but it should work: ```js const http = (url, options) = &gt; { const response = await fetch(`http://localhost:8080/${url}`, options); const json = await response.json(); return json; } let data = await http`tasks/1 ${{ method: 'PATCH', body: {}, // Blablabla }}`; ```
You could also check if production ? domain : localhost to avoid more live hassle
Thanks, however, localhost will resolve to the client when I deploy to the server, ideally I'd want something like fetch('/') but with this there is no way that I know to specify the port.
unless you meant that localhost as expamle url and I will have to change the string for dev and production.
Yeah, you should do that by creating a small config with some variables you'd like to check. There's no other was I know off
If the back-end is on the same server as the front-end you could get the current hostname (window.location.hostname) and add to that the port you want to fetch. This way if you are visiting 127.0.0.1:80 and you call window.location.hostname you will get 127.0.0.1, add to that your port(:1025)... and you have your url to fetch!
thanks, that seems to be what I wanted.
Thank yo 
That's like running next to car instead of driving it.
there are example commands on --help that are not covered on docs
omg yes ty!!
Are you using CRA?
I build [Electrojet CLI](https://github.com/BoyWithSilverWings/create-electrojet), a CLI that get you a started on more one framework/library. Instead of having and managing an independent CLI, library authors can utilise Electrojet to scaffold their applications with their unique needs easily. More explanations in a [Blog Post](https://medium.com/@agney/electrojet-cli-as-a-service-c11889246724) Tell me what you guys think 
The callback is outside of the forEach.
Node is not a language. It's a runtime for the Javascript language, which is the bread-and-butter for most front-end devs. Though the challenges for writing code for a server are definitely very different from those for creating a web ui.
Thanks. I will look into that today.
It's a setting I can change via a flag.
You aren't properly managing asynchronism. Below is some sort of kludgy fix. Might contain some off-by-one error. Lines added/modified are marked with ` // **`. Using a proper queue may be cleaner and more elegant. function iterate(callback) { let todo = 0; // ** let cbCaller = function() { // ** todo--; // ** if (todo === 0) callback(); // ** }; // ** dir.forEach(function(db, i) { var arr = []; var index = 'code here pulls back my index file' for (var id in index) { arr.push(index[id]); }; console.log('processing: ' + db, 'total: ' + arr.length, new Date()); todo += arr.length; // ** arr.forEach(function(s, i) { var row = s.id + '\t' + s.id1 + '\t' + s.id2 + '\t' + s.id3 + '\t' + s.id4 + '\t' + s.id5 + '\t' + s.id6 + '\t' + s.id7; dump.write(row + '\n', cbCaller); // ** }); }); // ** (removed) }
I'm using js because it can be written and modified at runtime, giving developers extensive love coding capabilities. WebAssembly can't replace that. it could be usefull for a couple of perfomance critical tasks but other than that I'm not interested. i'd sign up for a strongly typed scripting language any day though.
Its not homework, but its a job i need to do. And i cant find the error that is causing me to print the same list in every section
I finished and deployed my first full-stack web application built with node and react. It's a basic Trello clone that allows users to login with Google! Code: [https://github.com/nicholascannon1/Mello](https://github.com/nicholascannon1/Mello) Demo: [https://www.mello.niccannon.com/](https://www.mello.niccannon.com/)
I finally got my visual testing setup working nicely with a ui component library. Basically, I start by building the component library using rollup. Then I build a "visual testing app", that creates react routes for each file ending in .visualroute.js. Then, I start an express server, and take snapshots of the routes using percy and puppeteer. &amp;#x200B; More details in a [blog post](https://techblog.commercetools.com/keeping-a-react-design-system-consistent-f055160d5166).
Umm.. Thanx, I guess. [https://imgur.com/a/SOWOuEp](https://imgur.com/a/SOWOuEp)
Well, a fix is on the way. Thanks for addressing ;)
good job. sparkle that up :)
Can you please share the inputs or a screenshot? so that i can try and reproduce the error and fix it. 
I will create an issue on github this afternoon.
thanks, 
I would appreciate some feedback on the website I have been working on: http://perry.sh/spotify It plays Instagram timelapse videos synced to the tempo of the Spotify song you are playing. It should work with free or premium accounts. You can play the music on the same device or on another device. Songs with high ‚Äúdanceability‚Äù scores and videos with a lot of continuous movement work the best. You can filter the videos by Instagram hashtag. Here are some of the hashtag combinations I like: * #timelapse and #gopro * #timelapse and #sunset * #timelapse and #stars * #timelapse and #landing * #timelapse and #train * #timelapse and #construction * #timelapse and #nature * #timelapseoftheday I would like to know what combinations of hashtags you discovered work well when using the app. I used React and Redux because I am currently learning them. You can find the code at https://github.com/jperry7/spotify. How could I improve the site? Are any parts of the UI confusing? What new features would you like to see? Do you use Spotify or would you prefer to use a different service or your own mp3s? Thanks!
I watched this video the other day, it talks about video editing client side. Hope it can help. https://youtu.be/GsGPWSUmP8s 
Cool. Thanks!
Nice, it controls almost exactly like the old Nokia snake :) A high score counter would be a great addition.
I built a Chrome extension called [Thredd](https://chrome.google.com/webstore/detail/thredd/nofhlafikocbioemioehbpadpgjlpeco) that helps you find subreddits based on your interests (even very niche ones)! &amp;#x200B; It's my first JS project and really introduced me to the joy and frustrations of web development :) Give it a try and let me know what you think in r/Thredd! &amp;#x200B; Install link: [Chrome web store](https://chrome.google.com/webstore/detail/thredd/nofhlafikocbioemioehbpadpgjlpeco) (not available on Firefox yet but I'm working on it!) Website: [www.thredd.io](https://www.thredd.io) Code: [github link](https://github.com/ronnyli/reddit-check) (it's a fork of the Reddit Check extension!)
You got a bug in your game I believe, and I think I know what happens too. Sometimes when i try to do a sharp u-turn, the game just ends. Could it that pressing an arrow key, also 'unlocks' the use of the different axis of arrow keys? I think maybe it's unlocked too early. Allowing you to do a u-turn into your self, on one frame. Perhaps it should unlock once the frame is completed?
 let ns = [1,2,3,4,5,6]; console.log("before loop"); ns.forEach((n,i) =&gt; { setTimeout(function() { console.log(n);}, i*500); }); console.log("after loop"); 
Super easy. Shameless plug but made this in an afternoon to learn the library. https://codepen.io/apselstudio/full/BvmoyE This is an SVG by the way. 
I wanted to see if I could do it using just HTML and JavaScript. Rendering is done using HTML Tables and jQuery. Also used TypeScript. Here is GitHub link if anyone is interested: https://github.com/nbarkhina/TetrisJS I know there's a lot of these out on the web but I wanted to create something that looked minimalistic yet elegant with excellent controls and compatibility. Spent a lot of time getting the touch controls to feel just right. Let me know what you think. Thanks!
I wish they would implement timeline chaining for complex animation. 
you could do a proxy through the server that hosts your client app
Yeah if that's how it worked... 
Okay then post a range. Y‚Äôall have to know how much you can afford, why not be transparent about it? 
I‚Äôm a frontend developer with NodeJS experience. Worked with React, Angular, Vue and a bit of Ruby. Feel free to send me a message :) 
You should probably read more on \[Regex\]([https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/RegExp](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp)) to understand \_how\_ it works, but I can summarise why this regex works. &amp;#x200B; \- \`\\w\` matches any "word character". \- \`.\*\` matches any character zero or more times. \- \`\\1\` is a back reference to last substring match. Considering \`\\w\` is in parentheses, that is the latest substring. &amp;#x200B; So this regex matches any character followed by the same character, even if there are characters in between. Basically, it matches any sequence that is \_not\_ an isogram. The negation (the \`!\` before the regular expression) negates the expression so it does.
Considering it wasn‚Äôt realized until late 2016 and not popular until at least 2017, you must go through jobs like crazy to have used it in ‚Äúmany organizations‚Äù! 
Gross. I would lose my shit if else and if else were on different lines from the closing brace. If you find it too cramped, put a white space line after if your conditional line or before the end of your block.
But bikeshedding gives flavor to an otherwise boring day!
Invert the triangle in your mind. See yourself as being under your team, supporting and enabling them. Your conversations should be all about what you can do to help them be more successful.
I had literally this exact same idea in about 2010, right down to the name, Meet in the Middle, but dropped it when Apple made Find my Friends. Glad someone had fun making it. 
I'm in the same boat as you friend, I want to be very good and know JS inside out. I bought a $10 course on Udemy https://www.udemy.com/share/10008CBUQbdV5QR3o=/ Its pretty good covers a lot of JS fundamentals and es6 features. I'm also reading Eloquent Javascript, eloquentjavascript.net Once I finish these I'll read the you don't know JS series github.com/getify/You-Dont-Know-JS I plan to re-read and watch these until I can build fully functional apps with JS 
"Pure HTML" implies no JavaScripts, just so ya know. If you show this at an interview I wouldn't want that to distract from your nice portfolio piece. Implement it in es6/es7 without jQuery if you want to raise an eyebrow. Honestly, most working front-end devs I know would look at me concerned if I said proudly that I had build something in jQuery. jQuery was popular at a time when there was still no good native JavaScript API for selecting elements by their CSS selector, but now we have \`document.querySelector\` and \`document.querySelectorAll\` which, if performance is of interest, will be much, much faster than downloading jQuery and invoking \`$()\` to do an identical operation. Just my $0.02, nice work, happy developing.
The original snake game let you u-turn into yourself, too.
Very cool - great job. Enjoyed it.
I had an idea incorporating this concept. Awesome to see it done well!
18 lines! Beat that chumps. 
npm install react will not give you this, to be pedantic
Thanks ;)
24 karma lul
Man, that does not *look* easy. 
Use JSON?
And grid instead of tables? Or is that more difficult than I‚Äôm imagining?
TLDR: It's shit. If they're serious you would see something like "competitively compensated at market rates".
No, there is no mysterious limit at 39 items. You almost certainly have another error in your code. Why don't you paste an example of the NON working code rather than assuming someone can guess what you've done wrong? 
Yeah you're right I probably didn't need jQuery and just used it out of expediency. I will take a look at document.querySelector, good to know.
Create xml file. Put the words there. And use DOM to read the file. https://youtu.be/Nvkmx1C1UcU
Thank you!
It's nothing really, the image was done in sketch and I'm just translating and changing the opacity of a few shapes. There's zero maths or actually fancy stuff. The line effect which is by far the fanciest thing there is built-in animejs. The most complicated part was just to get the timing right.
I‚Äôm not sure what to think about this. This was interesting in 1999 when IE4 was released and was the first major browser capable of something like this. Now days I‚Äôm not really sure how interesting it really is. As an interviewer, it would only catch my eye if you went and implemented it in each major framework (React, Vue, Angular 2) and then had a nice article comparing the frameworks and your experience. Including jQuery in the mix would be interesting, but would also scare me unless the article pointed out that it was a bad idea. 
That's a nice framework. Is there something similar using PHP instead of C#?
Sure! The Java was as shown above, and the rest of the code is below: ^(&lt;!DOCTYPE html&gt;) ^(&lt;html&gt;) ^(&lt;head&gt;) ^(&lt;title&gt;Adjective Generator&lt;/title&gt;) ^(&lt;/head&gt;) ^(&lt;body&gt;) ^(&lt;h1&gt;Adjective Generator&lt;/h1&gt;) ^(&lt;div id="AdjectiveDisplay"&gt;) ^(&lt;/div&gt;) ^(&lt;button onclick="newAdjective()"&gt;Adjective&lt;/button&gt;) ^(&lt;/body&gt;) ^(&lt;/html&gt;) Is there a more efficient way to organize the variables that I'm putting as options in the Java? Yeah, and I'm most likely missing something with the 39 items. &amp;#x200B;
pm me your product. before giving out personal info I'd like to see what you're working on.
Nice mobile friendly app. Im glad to see it. And im intetesting to see how you did it. :) Well done!
Understood about the jQuery point, was probably unnecessary. I would just point out though that in 1999 people would not have implemented touch screen controls and responsive design which were the other elements I was going for.
Thanks! Source is on Github
I wouldn‚Äôt worry about using jQuery. No one should get mad at your for using it. If you want to try and refactor without using jQuery that would be a good exercise and then you show both implementations in your portfolio which would be all the more impressive!
Also I know people hate on jQuery a lot but it runs on so many websites that I'm sure the querying aspect is performant. I was questioning whether I could have written something natively that would have rendered faster.
Really cool. Did you start from scratch or did you follow a tutorial? Could tell a lot of thought went into it. 
Thank you!! I wrote it from scratch but I have been a Tetris lover for many years so I'm sure that helped :)
Hey man, looks cool! I found a bug: \`\`\` if (keystate\[KEY\_LEFT\] &amp;&amp; snake.direction !== RIGHT) { snake.direction = LEFT; } if (keystate\[KEY\_UP\] &amp;&amp; snake.direction !== DOWN) { snake.direction = UP; } if (keystate\[KEY\_RIGHT\] &amp;&amp; snake.direction !== LEFT) { snake.direction = RIGHT; } if (keystate\[KEY\_DOWN\] &amp;&amp; snake.direction !== UP) { snake.direction = DOWN; } \`\`\` If you press left and down really quickly while moving, you can make the snake go down directly, without a move to the left or right first. This is because \`snake.direction\` is updated to \`LEFT\` in the first if-statement, and then the check of \`snake.direction !== UP\` is true in the if-statement checking for the down-key. You can solve it easily by chaining else-if's instead :)
Thanks, I am really curious now if not using jQuery would have performed better or not, I think I will test it. As much as people bash jQuery I would imagine it is pretty optimized in terms of querying and I was questioning whether I could have done any better. 
Messing with trigonometry I created a cool and very pretty 3D pattern with D3js and X3DOM. https://beta.observablehq.com/@jamesleesaunders/x3-dom-fun-with-trigonometry Mesmerising! 
You still haven't posted the example that fails. You've posted the html, which is not useful. Post the javascript you are using that contains 39+ array elements, as this is what fails. 
For something like this performance is not an issue. People honestly make way too much noise about performance. You only need to worry about it when you do. Just keep building things and getting better and you can worry about performance later. Trust me you will know when performance is an important issue. For a game like this just have fun. 
Exactly, went into detail here: https://www.reddit.com/r/javascript/comments/af49es/just_created_the_classic_snake_game_from_html_and/edwakid/
Hi, I'm interested. Please pm me more details.
Let me get this straight this was built using only html no JavaScript... on mobile no time to look at source code. Learning JS still so when you say only html don‚Äôt you mean html js and no libraries?
There is plenty of jQuery out in the wild. I wouldn't add more but it is still a valuable skill.
Yes it does use JavaScript sorry, others have pointed that out. With pure html I was trying to convey the no 2D Canvas point but I probably could have phrased different
Nice work, now that you got it to work I'd suggest you to work on refactoring the functions, there's quite a bit of duplication in your code, consider also refactor to use ES2018, then if you're looking for a job and add this to your experience this can be a starting point to talk about clean code and difference in versions of JavaScript. 
Haaa ok yeah could have realised I‚Äôd read other comments first. Just as a noob you blew my mind saying html only. I thought but but html is not turing complete. 
I totally agree. I also hate that the whole thing is in one file, something I would want to refactor. Thanks!
I have resolved this. I added another variable, n and set it to 0. I increment it every time I push an element into my array named arr. I modified my dump.write and added a callback to look like so: dump.write(row + '\n', function(err, result) { n--; if (n == 0) callback(); }); I expected 752238 rows and inserted 752238 rows. Took about 3 minutes. I never knew 'load data infile' could be so quick. I was building and executing insert statements before and that process took around 3 hours. 3 minutes I can deal with. 
Great game! I bet I‚Äôd beat your high score ;) 
Hey I was just curious how did you calculate the midpoint of the route?? Google maps doesn‚Äôt have API for that I guess
While I generally agree I'd like to mention that jQuery is still used on so many sites that almost all users will have it cached so I don't think the performance overhead is that much of a problem.
Your example works fine on my end: [https://codepen.io/anon/pen/aPQjKq](https://codepen.io/anon/pen/aPQjKq). Did you use a \`&lt;script&gt;\` tag? Check your console (F12) for errors. You could miss a comma somewhere and that would be a syntax error. By the way, JavaScript is not Java.
When you hold down to speed up the drop, it should return to normal speed when the tetromino drops, requiring you to press the button again. So you wont accidentally drop down two tetromino.
Good tip thanks!
Looking real good in my opinion, the only thing I would say is since your using `babel-class-properties` in your `.babelrc`, I would drop the constructor in your react components and just use `state={}`
The images are stored in an array and everything is done on my desktop. There are no URL‚Äôs just some .jpg files stored in a folder. I am new to JS, trying to learn it by creating the game
You can use pretrained and prebuilt models to help with your task if you don‚Äôt want to really dive into machine learning stuff. You can find em in GitHub repos
&gt; almost all users will have it cached Yeah, no.
Well according to this source it is used on 73% of all pages so yeah... Yes. https://w3techs.com/technologies/details/js-jquery/1/all
Thanks for the advice and for taking a look at the project :)
Could be consulting/contractor, contributing to multiple open source projects,... Not hard to imagine. 
How about this: [https://eslint.org/docs/rules/no-multi-spaces](https://eslint.org/docs/rules/no-multi-spaces) Specifically: `"ignoreEOLComments": true` 
[The Black Eyed Peas - Meet Me Halfway (Official Music Video) - YouTube](https://www.youtube.com/watch?v=I7HahVwYpwo)
This looks cool Man! 
Just don't do it. It's not worth it for you to have to fix the spacing of your comments every time you want to change that code. You're abusing inline comments for some kind of block documentation and the linter is rightly telling you to stop.
That's great you're trying to learn JS! Ok, so you are attempting to show just one image from the array at a time? Or all of the images from that array?
Hey thanks for response man! :) He was learning while he was working another job. hahaha! Unfortunately he doesn't code anymore. He did mainly for experience. So he doesn't remember much as it was years ago. He told me to learn python as its easiest and its very popular. And i'm quite bad at self studying so if i don't see results it tilts me quite a bit. ( i over think alot!, which makes things complicated than they actually are) With javascripts i can see the results while i try to code and its also popular. So i'm thinking to give it a try. Perhaps i can succeed this time! Thanks for the answer bro! &lt;3 Means a lot! 
I hear ya, I‚Äôm not talking disabled, but we give shitty browsers just enough attention to work, but we don‚Äôt hamstring our Frontend devs with pixel perfect cross browser demands. I think this kind of approach actually hastens the retirement of the shitty browser because people eventually get fed up &amp; learn to install Chrome or Firefox. Working overtime to make sure regressive users don‚Äôt feel the pain of their browser‚Äôs crap implementation will never switch‚Äîwe‚Äôre coddling the slowest buffaloes. 
I thought about that but this will disable all space rules from my code, that will be a complete disaster
I thought it was really playable, my only comment would be that when you hold down to move the piece faster, the next piece in line then shoots down right away, there should maybe be a slight delay build in there, or make it so you need to release and then hold down again before the next piece will shoot down.
I really don't like to mess with my linter, but I find that this code: theme: { primary: colors.blue.lighten2, // #64B5F6 secondary: colors.red.lighten4, // #FFCDD2 accent: colors.blue, // #2196F3 success: colors.green.accent2, // #69F0AE danger: colors.red.accent2, // #FF5252 warning: colors.yellow.accent2 // #FFFF00 } Is nicer than: theme: { primary: colors.blue.lighten2, // #64B5F6 secondary: colors.red.lighten4, // #FFCDD2 accent: colors.blue, // #2196F3 success: colors.green.accent2, // #69F0AE danger: colors.red.accent2, // #FF5252 warning: colors.yellow.accent2 // #FFFF00 } &amp;#x200B;
Well, the `ignoreEOLComments` property should only affect comments that occur at the end of a line, I would think
Love it. Kinda frustrated that frequently i would swipe down to drop a piece quickly but it would register a move to the right too..
Oh, I didn't understood the `ignoreEOLComments` thing. I think that this will do. 
I don't know why anyone would ever want to see you implement something like this in React/Vue/Angular except to show that you have a basic understanding of how they work. If anything, that'd tell me you don't know how to choose he right tools for the job.
Savage But true.
I'm wondering why you feel the need to put the values of variables at the end of lines? It looks very strange to me and a huge pain in the ass to maintain. What's even the point of using a variable if you're just gonna type the value out every time?
Totally agree I think I will update that. Thanks!
You're totally right I didn't notice that before. I think I'll make it so if swiping down it ignores any left/right movements. Thanks!
I am working on a project management tool for companies. It is similar to desk time but it will be open source. The original part is that the project manager can import tasks to server and developer can pull them and start tracking. No need to write down anything. Link to GitHub [repo](https://github.com/nikolapavlovic994/Clockuvo). &amp;#x200B; I'd like to hear some feedback or any ideas to improve it further more. Keep in mind that this is still a work in progress.
It's a pattern to create theme within Vuetify, a CSS framework for Vue. This file is the only place I need to put these variables for the whole application and the comments help me to remember/visualize the colors I'm using.
Hey man, I was playing this in the car while waiting for my gf. It‚Äôs quite fun. Keep it up! 
Honestly, for your use case, jQuery is probably not affecting the performance in a *perceivable* way. It really only slows things down when you have a large tree of nodes in the DOM, and you‚Äôre having to select elements very frequently or rapidly. I don‚Äôt think you have enough nodes in your DOM here for that to be a big issue. That being said, the performance can be improved by storing individual element nodes into variables or objects, and referring to those variable/object names instead of querying the DOM itself to find the element. That will improve performance even if you‚Äôre using pure vanilla JavaScript as well.
good job tho, might have inspired me to try something like this! Did you find it a good way to improve your js skills? Or maybe this was a walk in the park?
Hey this is pretty neat! I made something similar a while back with the new CSS Grid. It's a bit janky because I was mostly just messing around and seeing how much I could rely on the grid (e.g. text scales very poorly). I also went overboard making the grid take up the entire screen as a bit of a performance test. [Play](https://nickgirardo.github.io/grid-tetris/) [Source](https://github.com/nickgirardo/grid-tetris) Key|Function ---|-------- A| Move left D| Move right W| Hard drop S| Soft drop Space| Hold piece
That‚Äôs a lot of legacy code... most newly developed sites aren‚Äôt using jQuery as a primary library anymore. But jQuery versioning is a thing, and plenty of sites use different versions or different CDNs to deliver jQuery functionality, so he‚Äôs right that it won‚Äôt always be cached. It also just depends on the browser and user settings, among other things.
At this point you roughly have three options: - Use an existing model and hope it's trained to suit your purpose - Use an existing model and train it to alter it - Build your own model You definitely want to try those in that order. You're in luck! Object tracking is a much desired problem to solve. The model that seems to perform best is [YOLO](https://pjreddie.com/darknet/yolo/). [ml5js](https://ml5js.org/) is a library that has some models built-in, including the YOLO model. It uses TensorFlow under the hood. You can start there for your first prototype to keep things easy. When you get more familiar with machine learning and TensorFlow, you could start removing ml5js and use TensorFlow directly.