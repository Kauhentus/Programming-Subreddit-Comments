Dont give up my guy. I started college taking some programming classes with literally no prior knowledge. I sucked at the beginning I was so hopeless lol. But after a little bit of grinding I am now probably at the top of my class when it comes to programming. For example I got the highest mark in my programming concepts midterm a few weeks ago. Now I'm not fuckin Bill Gates by any means but I'm pretty confident in my abilities to solve basic programming problems. Itll just take some time. Maybe even a eureka moment.
Seriously. I see people talking about the benefits in tooling and auto-completion, and it makes me think it’s because they don’t know the language well enough to code without assistance lol.
Make sure you have node installed on your computer. Download yarn or npm. Preferably yarn. Then install nodemon globally. Make a new directory, cd into it, make a new file with whatever name and code you want to try. To run it, in your terminal type nodemon &lt;thenameofyourfile&gt;.js in the directory your file is in. Everytime you save the file, nodemon restarts. It helps to console.log whatever you want to see in the terminal. And Bobs your uncle. 
Yeaah I just think a lot of people have trouble getting from "knowing javascript" to "being able to use javascript" because it's use either requires knowing how a website and the dom works, or knowing whatever framework you're working in as well. I love Javascript, but that's because when I started out I really just wanted to build websites so I always had a practical use for it. As my websites evolved my knowledge of Javascript evolved, and I learnt it's varied use cases in modern programming along the way. 
Use [express](https://expressjs.com/) with a [templating engine](https://expressjs.com/en/guide/using-template-engines.html). My personal favorite templating engine is [handlebars](https://github.com/ericf/express-handlebars). 
Adonis is Laravel on JavaScript
Something I preach to the guys at work - we use C#, Java, and JS. First two are compiled, last one we bundle (minified) with webpack. As such, there's absolutely no reason to not make our code readable.
As someone who thinks they understand the dom, is it right to say it’s essentially a branching tree that starts from the HTML tag? 
No when I click the JS selection button it just reloads the page. No challenges load or anything
Really appreciate the constructive criticism. All super helpful and useful. Will make note and update where we can!
The reason we moved to those other languages over time is because they were objectively useful and less painful to program in. JavaScript is just the latest iteration of that trend.
Why do you think the web is the largest, most open platform out there?
I think decorators have their purpose, most languages have some way to do it. Of course there are ways to do it in plain JS but being expressive and reducing boilerplate. As that's what decorators are, just wrapping a function and returning it. I also get to create the decorator to be used in any way I want, whether it be a factory, static, or whatever I desire. It also is easily understood as it's repeatable, don't need to analyze how a function is crafted with higher order functions to understand what's going on. For example, I could in every function either call or wrap each function based on some specific naming scheme to export specific metrics from the request or response. Instead, I just wrap the functions I care about with a decorator to handle it. I feel your perception of features is very relevant to how _you_ alone program and it doesn't take into account potential use cases or team sizes. Decorators are used in python a lot as well.
I went through one of those factories, and yep, that’s exactly what they’re doing. If you apply some common sense you realize it’s total overkill for the vast majority of web content, but common sense is lacking these days.
i dont know if you can read files straight into your browser like that, is that possible? usually you would upload to a web server and then your back end code would read the excel file and parse it for the front end but there may be a way to read the file client side now
Am I late to the party? https://github.com/TotalChris/ProjectVoyager
That’s not a response to my point. Neither is pointing out that some tech sticks around.
Yeah, essentially. I like the analogy of CSS, HTML and JS where HTML is the skeleton, CSS is the skin and JS is the brains animating the movement and responding to interactions. Selectors are kinda what unify the three, or rather let them work together, with classes and IDs and well other types of selectors. In Javascript this would be something like document.querySelector(".classname"); to target the HTML element with this attribute in their tag: class="classname" or atleast class="any other classes classname". If you wanna do something to multiple elements, though, you'd have to something like: document.querySelectorAll(".classname").foreach(e =&gt; { ... }) HTML is just a bunch of tags with attributes and text inside, CSS is what makes it pretty, Javascript is what lets you interact and do fun things with it. In today's world, you can also use Javascript as a server-side language, and you can write desktop and smartphone software, but knowing the context Javascript comes from I think goes a long way in understanding the language. It's had to stay backwards compatible with old websites for ages and I have a suspicion that's where a lot of the weird stuff comes from.
Get out of here and start punching holes for your program. It's all about developer productivity. JS is the unfortunate happy medium between useful and productive.
This is probably the main reason, anything we add today won't be standard for everyone (if you care about market capture) for at least a year or two, and by then you may be wanting features that'll be relevant 1-2 years from then.
I feel like this is one of those articles that someone writes just to pad their resume to prove that they're somehow a _thinker_ in the open source world.
Yes what you are missing is the templating aspect of PHP. I would keep in mind the difference between a thing you are used to and a thing that is useful. Both paradigms are useful in their own ways.
I think we just have a fundamental - though mostly semantic - disagreement about what a stable language ecosystem looks like. Which is fine. I think both of us have informed positions, and simply disagree. To be clear I'd much rather be developing my JS stack in 2019 than 2014. The progress has been good, and I'm much more confident now that our design decisions around JS aren't going to be upended now than I was in say 2016. If you're ever in the Philly area I'll buy a round and we can talk shop lol. Have a good evening.
Holy crap, that’s a large size for such a niche function, especially since most use cases probably involve serving that code with the first request.
Yeah. Look up the math to do the conversion and write your own method.
That's not the conversion for metric cups to tablespoons either, so something seems wrong. But you can define your own units to use with mathjs to be whatever you want. https://mathjs.org/docs/datatypes/units.html
Ah it is using the US cup and the metric tablespoon. Just define a us tablespoon in terms of cups.
Agreed. They use a template literal, but add in manual newlines instead of actually putting it on a new line. It would be more readable to actually hit enter a few times.
I would really recommend Brad Traversey's MERN stack course on Udemy. That really helped me alot, especially with making accounts, loggin in, etc. I think he has a free video regarding making an account with a JWT strat for Nodejs on YouTube for fee. Not sure tho, I would check him out either 
I haven't used it but I was looking for a similar solution the other day and came across Seima. Just google 'seima lightweight' (sorry no link, on mobile..). It seems pretty good.
On Chrome 72.0.3626.121 on Windows 10, there are a few pixels of vertical scrolling on the login page (maybe after too, didn't log in). Setting font-size: 0 on the div that wraps the canvas element fixes it.
 while(true){}
I think the number of hours on freecodecamp is pretty accurate. It's said if you want to be really good at something, expect to practice 10,000 hours. Coding is the same, you need to do those reps. But don't just brainlessly watch those tutorials one after another. You should learn by doing, not watching. I watched Traversy, Stephen Grider, and Colt Steele. After each course, i spend a week to recreate the app from scratch without looking at the materials. It doesn't have to be perfect, but as long as you could make a fully functional app, then you can tell yourself you actually learned something from the course. Also don't worry too much about the path. For now learn web development. Chances are you will run into a lot of different things that might interest you in the future. Teach yourself how to learn. Be confident that no matter what technology employers throw at you, you can learn and apply it in a the shortest time possible. That is the most important trait employers look for in a junior developer.
If you're looking for code to learn from by example maybe a project I recently open-sourced can help you: https://github.com/Xyfir/accownt It might be a bit too complex for you but it's a standalone account system made to integrate into other applications. It uses Node, Express, and JWTs so it should be relevant (no Mongo though).
Screenshot?
Is it inside of an &lt;a&gt; tag
heres the pastebin&gt; https://pastebin.com/kdUaBZVY
I don't think so but you can have a look here: https://pastebin.com/kdUaBZVY
I'd be interesting in contributing. Do you have any direction or are you wanting creativity? I don't know that I'm creative enough to just come up with something to add to a mostly static site...
I agree JS is very easy to start with given that most people already have the tools installed, but web programming is its own thing and introduces concepts like the DOM, two additional syntaxes in HTML and CSS, and advanced notions like event loops and asynchronous logic. I think this can all be a bit of a distraction from the basic introduction to programming in general. IMO, it's better to start off with simple command line scripts to get a feel for the ins and outs of how to code. 
Before you draw the text you need to set ‘stroke’ to white. It is still set to blue from the last iteration of the draw clock logic
Hi /u/ThanhKhoaNguyen, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Heyy, Thanks for the response. I’m not sure if it’s my eyes but I am unable to see that it is still set to blue haha. Would you be able to pinpoint it? Either I cannot see it or I’m struggling to follow haha. Sorry 
Why don't you use a functional JS library? 
or just use js "functionally"?
Line 26/27 from your paste draw the text with the current stroke color. ... more stuff happens ... line 48 sets the stroke to blue 0,0,255 to draw the blue ring of the clock. Then your draw loop finishes... and starts over. The next time through the draw loop the “current” stroke color at line 26/27 is still blue since you didn’t reset it after drawing the blue ring. to;dr; add ‘stroke(255, 255, 255)’ on line 25.
Careful with XSS when using innerHTML. This is why frameworks exist. https://gomakethings.com/preventing-cross-site-scripting-attacks-when-using-innerhtml-in-vanilla-javascript/
Cheers!!! I go looking for some codepens. Any preferences? Im just looking for native feel swiping, as close to Tinder as possible.
https://github.com/KishorRathva/FrontEnd?files=1
Isn't this kind of one of the design goals of [ReasonML](https://reasonml.github.io/docs/en/interop)/[Bucklescript](https://bucklescript.github.io/docs/en/what-why)? Unfortunately I can't really offer much insight into it; I heard about it a Haskell Meetup I went to some time ago and it seemed like it had a slightly more pragmatic, industrial vibe to its interop story. I've built a few personal apps with Elm and pretty familiar with Purescript, and while I love them both, I've hit the same kind of limitations with them that you have. (Well, Purescript more than Elm these days, because I'm not really on board with the almost condescendingly simplistic, Steve-Jobsy design philosophy that Elm has picked up.) 
Hi guys/gals, This is something I put together over the last couple days of searching to replace PurgeCSS in my build chain due to it not supporting the removal of attribute selectors (https://github.com/FullHuman/purgecss/issues/110). After much experimentation with various lib combos and API incompatibilities, a pull request that just got merged (https://github.com/taoqf/node-html-parser/pull/5), i'm very happy with the end result. Hope someone finds it useful and that the README answers most questions, since I'm about to call it a night. If anyone knows any other alternatives in this space that I can add to the mix and benchmark, that would be cool, too. cheers!
[github.com/glarce/Glarce](https://github.com/glarce/Glarce) An attempt to make an easier way to use AR in the browser.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/css] [DropCSS 0.1.0 - A minimal and thorough unused CSS cleanser](https://www.reddit.com/r/css/comments/b3mgmb/dropcss_010_a_minimal_and_thorough_unused_css/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Heyy, Thanks for the quick response. Hmm, now the text for the current time and date went from blue to white when adding the stroke(255,255,255)’ on line 25 and moving the textsize(25); to line 26. Any other methods? I’ve literally been trying to fix it myself but struggling soo hard haha. 
wow you're racist as fuck
Scala js is great for this
You could probably start by adding the API string to the endpoint strings in the get call, instead of adding it to every string in endpoint object. Http.get(\`${api}/${endpoint.etc.etc}/1\`)
&gt;enerating the interface code automatically. It’s possible to write everything in Rust with this. There just aren’t good frameworks for web apps like React or Vue available yet, which makes this rather inconvenient, so I still use Would it be possible to do equivalent of var connection = new ActiveXObject("ADODB.Connection") through wasm? Or is calling database drivers on client machine sandboxed out for wasm on modern browsers?
ClojureScript
Modern browsers only allow a very limited number of protocols for web applications: HTTP, WebSocket and WebRTC. If you can proxy from any of those to ODBC (WebSocket would probably be the best fit), you can talk to the database from WASM.
&gt;This just seems super unclean to me Why? It's very clean Maybe you'd prefer to wrap each in it's own function which shows you the params needed? Such as contact_show=function(id) { return Http.get(`${Endpoint.CONTACTS.SHOW}/${id}`)} 
Then perhaps you’ve never worked in a bigger where schemas are constantly updated. I’ve seen a nest backend share its models/entities with a TS frontend. Changing any props blows up at both ends. There’s a huge value only due to that.
Sources?
It introduces more complexity due to more code being written. I can give him that. 
I was only pointing out that I'm aware of your point
Arrow functions are better than decorators. Python needed decorators due to a lack of arrow functions imo. The way decorators are used in angular is an atrocity ino.
Write functional JS!
yes, it is. ``` a { height : 300px; } b { height : 400px; } ```
I am actually baffled that you think putting multiple different concerns in the same file is a good idea. It really hammers your maintainability. I actually recommend studying more about why splitting up concerns is way better. It will make you a way better programmer. Trust me, i used to do evrything php-style too in the early days
&gt; It has all the pieces as far as I can tell No type system, no pattern matching, no currying, and the syntax is just not pleasant (or even readable, sometimes) for functional-style programming, which means no practical implementation of things like monads even if you try to self-enforce type rules. You can be fairly successful at avoiding mutation in vanilla JavaScript—until some fundamental constraint rears up that makes it really hard to do so without a bunch of boilerplate or an external library. &gt; so functional ideology might not be the best fit anyway. React+Redux won the framework wars (for now) largely because they stole broader FP ideas. But JS has deep, inherent shortcomings when it comes to actually implementing those ideas. It's frustrating, honestly. Real FP isn't easy in JS, but real FP is actually insanely nice for UI. 
&gt; I don't want to have to depend on something So, have you ever actually redeclared a function in the past? Has this theoretical problem ever been an actual issue in practice? Also, would you ever not use a decent editor for more than a dozen lines of code? It's one in a million times zero. That's the likelihood we're talking about here. That's what worries you so much that you rather obfuscate your function declarations than having to deal with that theoretical problem. It's a bit like Crockford's suggestion to never ever use ++ and -- because you can use it to write cryptic code. &gt; Besides, you should be using arrow functions for lexical scope of `this`. If I'm inside a method and need to create a callback which captures a property of `this`, I'd use an arrow function and I most likely wouldn't assign that expression to some variable first, because then I'd need to come up with a name for that which would be super annoying. Normal functions have nothing to do with `this`. `this` is only relevant for callbacks which capture `this` (or a property thereof) and methods. &gt; you should only use let for a variable [whose] value will change It's about the binding, not the value. I consider the value of an array which contains [1, 2, 3] to be different from one which contains [7].
&gt; It has all the pieces as far as I can tell No type system, no interfaces, no pattern matching, no currying, and the syntax is just not pleasant (or even readable, sometimes) for functional-style programming, which means no practical implementation of things like monads even if you try to self-enforce type rules. You can be moderately successful at avoiding mutation in vanilla JavaScript, but only moderately. Then some fundamental constraint rears up that makes it really hard to do so without a bunch of boilerplate or an external library. &gt; so functional ideology might not be the best fit anyway. React+Redux won the framework wars (for now) largely because they stole broader FP ideas. But JS has deep, inherent shortcomings when it comes to actually implementing those ideas. It's frustrating, honestly. Real FP is prohibitively difficult in JS, but real FP is actually insanely nice for UI. 
const test = {attr: true}; const obj = { title: 'test', ...(test.attr &amp;&amp; {valid: 'yes'}) } console.log(obj); // Object { title: "test", valid: "yes" } 
Clojurescript?
&gt;No type system, no interfaces, no pattern matching, no currying Figures you would not know how to do these kind of things in javascript and just assume it doesn't have them. Talk about shortcomings...
&gt; No type system, no interfaces, no pattern matching, no currying, and the syntax is just not pleasant (or even readable, sometimes) for functional-style programming, which means no practical implementation of things like monads even if you try to self-enforce type rules. This sounds like over complicated wankery for the sake of it. You'll find that people have been developing fully functional extremely complex web apps for years and they needed _none_ of that. But sure, compile 5 languages to JavaScript if that gets your monads warm. I don't even want to try explaining the migraine you will get from trying to debug that Rube-Goldberg machine.
I found myself generally agreeing with you on the shortcomings of JS as a functional language. I don't really agree that this makes it unusable or “prohibitively difficult”. The problem may lay in the fact that I find tje expression “real FP” mostly ridiculous, and even childish. Type system aside, which can indeed be a significant nuisance, you seem to be focusing on fairly specific and small details, instead of working with what _is_ there and the general practical approaches of FP. Finally... &gt; React+Redux won Please, _avoid_ such vacuous and unbecoming statements. Those have “won” nothing -except for, maybe, some award for PR stunts-, because, first of all there's nothing to be won.
Hi /u/glaucia_lemos86, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Oh, I see! That’s cool. I didn’t know you could do that 👍
So.. How do you do real pattern matching in javascript?
Nice approach
Hm. I must have missed the part in the introductory JavaScript book I skimmed last night that covered these things. Please feel free to enlighten me.
Nah, I don't do religious arguments.
elm
Thanks a lot, I'll check that out, appreciate it!
Yeah I love brad's videos, I've done the JWT video on YouTube but I'll check out that too, thanks!
I'll check it out, thank you.
The reasons you give for it being easy are the same reasons why it’s so easy to create technical debt when using PHP
&gt; The problem may lay in the fact that I find tje expression “real FP” mostly ridiculous, and even childish. Fair enough, I guess, but there's a substantive difference between what JavaScript offers and what other functional languages offer. I realize it's a faux pas to shit on JavaScript on a JavaScript subreddit and that it gets tiring and unhelpful. But if the question is "why bother with all the effort of transpiling to JavaScript?"—which is a good question—the answer is that JavaScript just really isn't designed to do the heavy lifting necessary if you're targeting a functional paradigm. Downvote if you want, I'm not trying to gatekeep. Still I maintain it's not realistic to claim JavaScript is functional in anything other than a few token ways, and that if people are interested in exploring functional programming, it's probably not the best place to start. &gt; Please, avoid such vacuous and unbecoming statements. You seem to have a problem more with my tone than what I'm claiming. I'm not being adversarial, I'm being tongue-in-cheek. By some objective measurement it has "won," in the sense of market dominance, but that's not a value judgement against alternative approaches, many of which are perfectly suitable or even better. I'm not trying to evangelize React+Redux. I don't even use it day-to-day—Vue, actually. I'm just positing that basis on a sound design helped it achieve whatever it achieved, for whatever it's worth, if it's not too contentious to suggest it's worth anything at all.
It's not a religious argument whatsoever. You claim JavaScript has these features. Just point me toward the documentation, and I'll be on my way to reading up on them.
You were convinced of the superiority of your ideology when you arrived here, there is no point in talking to you. I have refuted your statements, that is all you get.
[removed]
Hi /u/PM5k, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I would like to throw in a lib I’ve made, its hard to imagine it could be done with less code https://github.com/react-spring/react-with-gesture There’s a tinder like swipe card stack demo here: Playful version: https://codesandbox.io/embed/j0y0vpz59 Simplified version in 10 lines: https://codesandbox.io/embed/3v45w26395
Calm down, man. I'll never understand why people get so offended when tools are critiqued. It's not wankery, it's just useful ideas from other languages that OP is asking about. Maybe you don't want monads. That's totally fine. But type systems are great; many languages benefit from them in some form or another, including TypeScript, and even JavaScript with Flow. Pattern matching and currying are both super useful. They're simple features, both conceptually and syntactically, that can eliminate all kinds of repetitious code that makes you want to pull your hair out. &gt; You'll find that people have been developing fully functional extremely complex web apps for years and they needed none of that. Doubt. Functional-ness is kind of a spectrum, but I don't see how something can be "fully functional" without a sound type system or compiler-enforced restrictions on mutation, unless it was written by God Himself. And it doesn't have to be "fully functional," but if that's the ideal someone is targeting, the tools I mentioned are much more help than they are a burden.
Feel free to show any of us you have any idea what you’re talking about 
The way I see it is like any other object oriented programming language. You have one class for UserAuthentication and that class has all the functions needed. That class is in a single file. With every language I've ever worked with (Java c++ c# etc). Another class, and file, to manage database connections and queries. How is it more maintainable if one simple task is split up into 10 different files? If a new developer comes on board, they can either read through one or two files and understand a functionality or have to switch between many files to follow the code flow. 
&gt; no currying https://wsvincent.com/javascript-currying/ &gt; no pattern matching I'm fuzzy on this one, but it appears to me switching logic based on the type of a very, which is trivial in JS using the `instanceof` operator (or in the limit case, writing a couple of lines of utility function to walk the prototype chain yourself). You could very easily write a patternMatch( Number, () =&gt; {}, String, () =&gt; {}, // ... ) function yourself. Static typing is admittedly beyond JS's reach, and while you could write an object system in JS that had interfaces in it, it would only enforce at runtime rather than compile-time. Both of those issues are fixed by Typescript, however, which is 100% backwards compatible with JS. I can't tell if I just don't know enough about the details of FP to see what your valid objections are, or if you simply don't know enough about JS/Typescript to see how you could achieve what you think is impossible in the language.
It's not an ideology. I'm not religiously convinced of anything. I'm just discussing tools, homie. I'm explaining why I often prefer to go through the hassle of transpiling to JavaScript, the tools that other languages bring to the table. It's OK if you don't agree, you're free to feel differently. I have no interest in criticizing anyone for their opinion. But you did make a pretty strong claim about features of JavaScript, alongside some pretty aggressive ad-hominem. I asked you to show me documentation supporting it. Should I assume you cannot?
I don't really have to show you how to curry in javascript, do I? And even if I do, it won't be "pure" enough for our religious friend.
Can you define "real pattern matching"?
you don't even know how to curry in javascript... 
Did you know that JSON is a subset of Yaml, so you can switch any time? And since its Yaml in the end, you dont have to double quote the keys! And its not whitespace sensitive as soon as you start using curly braces
You could use Express rather than doing it all from scratch. 🤷
At the interviews, I have received a lot of coding challenges which i encountered at codewars before. 
Sorry Im on my mobile but I mean haskell style. You cant do that in js and its an important part of fp
Splitting HTML, CSS and JS is not separation of concern but separation of technology - the opposite of separation of concern. React - arguably the most popular frontend framework at the moment - puts everything back together. I would recommend to OP to look into React.
For what is worth, I did neither downvote you, nor consider your comment adversarial. As I mentioned right from the start I do agree with a sizable part of your complain, and I'm not one to “defend” JavaScript in any particular way. My argument there was more of the idea that even with restrictions and defects, a lot can be achieved. Language matters, sure, but not _that_ much.
&gt; https://wsvincent.com/javascript-currying/ I'm really not trying to be slippery here, but whether or not one *can* with some effort achieve something in a language doesn't really have much bearing on whether or not it was designed for that thing. Take Haskell: f x y = x + y This is a function definition equivalent to `(x, y) =&gt; { return x + y; }` in JavaScript. In Haskell, it's automatically curried—all functions are. The application of `f` to `1` returns (read: is equivalent to) a function that takes some other number, and can be used as such without any further boilerplate. That's not the case in JavaScript. (I'm perfectly aware of Lodash.) But for the same reason that anonymous functions are so useful (I mean, why not just name every function, right? It's only a little extra work), universal currying-by-default is really pleasant to have. It's also particularly useful if you're programming functionally, popping into and out of applicatives and such. And, importantly, there are no obscure bugs or gotchas—it always works, every time. Referential transparency and true equivalency are big in FP-first languages. &gt; I'm fuzzy on this one, but it appears to me switching logic based on the type of a very, which is trivial in JS Unfortunately it's not really the same. I'd have to get pretty far into the weeds on this one, but pattern matching in functional languages is extremely powerful. It's a good deal more succinct, it's exhaustive (not partial), it can match in parallel (testing *n* conditions at once without any syntactic overhead), can bind variables, and it's extremely useful for testing the values of ADTs, all of which put together make resulting code at once terse and readable. &gt; Static typing is admittedly beyond JS's reach, and while you could write an object system in JS that had interfaces in it, it would only enforce at runtime rather than compile-time. That's kind of a big thing, and it boils down to the same point as both of the things I said before. You can do anything in pure lambda calculus, too, but that doesn't mean you're going to be happy doing it. &gt; or if you simply don't know enough about JS/Typescript to see how you could achieve what you think is impossible in the language TS has a lot going for it, even if it's really verbose vis-à-vis "ground-up" functional languages. And again, what's possible in JavaScript `!==` what's easy (and sometimes it's insanely hard and error-prone). &gt; We have const at the simplest level Declaring `const` has no bearing on its value mutability, only its reference's assignability. &gt; immutability libraries like Immutable.js. ...which wraps back around to what the language is inherently designed for versus what is merely possible in it with (often significant) effort and mental overhead or a dependency. :) And syntactically, certain things will never just "feel" right or natural. I know it may sound trivial, but if you program in Elm for a month and then swing back to JavaScript you'll pull your hair out a little, too. &gt; If you don't want to mutate state, just don't mutate state? Wish it were that easy!
With a library function? That's not the same as default currying. You also brought up a handful of other features that you haven't been support with documentation, like a type system or pattern matching. You can admit you were wrong. Or just keep trolling.
I feel like a disciplined programmer can manage a lot of these shortcomings of JavaScript my simply self-enforcing a particular set of rules. You can avoid side effects pretty easily with the right patterns. You can also curry functions. Static types? Well, we don’t have that in JS, but with the right patterns, you can manage that as well. While there isn’t a great way to check type issues with a compiler (although typescript is not bad), you can always perform automated testing on each function for robust type-checking. For most JS devs, that would just get in the way of producing perfectly valid (and working) JavaScript. But it could provide benefits to someone who is totally dedicated to functional patterns.
IDs become global variables. Not good practice, though. https://stackoverflow.com/questions/25325221/why-dont-we-just-use-element-ids-as-identifiers-in-javascript
&gt;With a library function? lol, and I'm the troll. So basically, you don't know how to write a function that returns a function in javascript? You have a lot to learn my friend, and I'm not gonna play cunningham's law w/you and reward manipulative behavior. 
IIRC this is expected behaviour. Elements with `id`s become members of the global object, which is `window` in the case of a browser context. So `window.myElementsId` is the element object and can be interacted with as you'd expect as if you had used `document.getElementById('myElementsId')`. Furthermore, the global object is your top-level scope so if you don't define anything in a more local scope (a global variable or a parameter or local variable within a function) simply using the ID value as you have sense works too. I wouldn't rely upon it though, as it might not be clear what is happening so someone might later alter the code of the page elsewhere to define a more local variable of the same name that causes unexpected failure. Also, as well as being cleared, if you are using the element reference several times in a function you might find caching the reference in a local variable performs better than using the default global reference (as well as it being clearer because you aren't relying on a less obvious default behaviour).
Ah yes that makes sense, I just tried on it on a &lt;h1&gt; tag and I could console log and style it too from JS. I can see why it's bad practice and probably why it's not been brought up in the courses I've been doing. Thanks for the help!
That's not currying, buddy. That's just a higher-order function. [This is currying](https://wiki.haskell.org/Currying). In curry-world, multi-argument functions are syntactic sugar over return a set of unary functions that are reduced in sequence as they're applied to a set of arguments (until all those arguments are exhausted, at which point you have a value, which is equivalent to a function that does nothing). You're a perfect example of Dunning-Kruger. Good luck in life.
You might want to check out [Svelte](https://svelte.technology/guide)
Lol, like I figured, just religious arguments.
No problem. You should also try not to use var btw. Look up ‘hoisting’ as to why. Has to do with scoping, let and const are scoped better than var. Cheers. 
I'm quite sure you also need to set your stroke width to something smaller before drawing the text, then keep the code that sets it to 8 before drawing the circle.
Thank you so much for the reply! Your messages are so well written and easy to follow. I wish more people would of interacted with this post. With your fix, does the external program function without the user knowing, or does the user then have to use irfanview to finish the print? I am fairly new to coding, and just trying to learn! It looks like your code would open the program with the correct preset printer information and the correct photo. However, the user would need to complete the process still, is that correct?
You're right, I need to get more comfortable with ES6 syntax. Thanks for the tip! 
&gt; I feel like a disciplined programmer can manage a lot of these shortcomings of JavaScript my simply self-enforcing a particular set of rules. I guess that's where we fundamentally disagree. I don't. Or, maybe more precisely, I think it's a job that is very, very for humans, but perfectly easy for a compiler. I'm dumb and programming is hard and I'd rather have a program cross-check and verify the thousands of oversights that might have occurred while I was writing code.
At my current project I organized those api calls in separate files by type. User Repository, etc... However, I use axios and put the whole request in the repository. For example export default { get(queryString) { return axios.get(`/systemuser/ajaxQuery?q=${queryString}`); } delete(participationId) { return axios.delete(`${resource}/deleteParticipation/participationId/${participationId}`); },... I import those and use it like this: RepositoryName.delete(id).then(... ). catch(... ) Sry am on Mobile. Hope it helps 
What do you mean? How does express solve anything here? Not to mention this is request code.
Thanks! You're totally right, in the above example it will ONLY open the photo but you can add the " /print" option at the end of the command. This will open the image in the background and send it to the printer without opening it. &amp;#x200B; So the command you need will look something like this: &lt;path-to-irfanview&gt;\i_view64.exe &lt;path-to-file&gt; /ini = &lt;path-to-inf-file&gt; /print You can read the full documentation [here](http://www.etcwiki.org/wiki/IrfanView_Command_Line_Options)
It's not an argument..? It's a definition. I literally just gave you the definition of currying. Christ I feel sorry for whoever employs you.
Why not just write TypeScript but in a functional style? Struggling to understand why you _need_ a language to constrain you.
Lol, doesn't know how to pass multiple values in javascript... I think I'm done with your shit assertions.
https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect
Great, so when you have a niche use-case, use a specialist tool. Most people are not using Webpack to generate advertising assets, just garden-variety React CRUD apps. Incidentally: there is _nothing_ stopping you from using Parcel - or even Gulp - programmatically. Want to build from some bizarro directory structure? Go code it. It's a very straightforward piece of Node scripting.
Funny, I'm not the one claiming superiority here...
https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect
Why is pattern matching an important part of FP? &amp;#x200B; Pattern matching is great but it's not that essential IMO. Would you say clojure is not a functional language?
You will find those useful ideas are indeed present in javascript. Promises are monadic, for example. We don't need to make everything revolve around monads, now that's over-complicated wankery with not a good cost-benefit ratio.
Per pattern matching in parallel. If you're transpiling into js, don't you inherently lose that functionality? 
ReasonML
I think its as clean as it gets. Also use ES6 objects, like you want the response (response)=&gt; response.data Is the same as ({data}) =&gt; data 
What a pile of old school non sense. Seriously, Nest is all about using the failed paradigms of yesterday to a young platform. The taste of bloated enterprise Java programming in JS. This can only appeal to developers stuck in time.
I never claimed everything had to be monadic. The comment you're responding to literally reads "Maybe you don't want monads. That's totally fine." I did not write my original comment to disparage. I was just offering insight on why a functional programmer might find JavaScript's features unsatisfactory to the point of transpilation, as OP and I have, because the person I was responding to framed their comment as a question. Apparently answering that question is controversial. The question is in the subreddit because unfortunately, when targeting the browser, JavaScript is mandatory. &gt; You will find those useful ideas are indeed present in javascript. I've worked in JavaScript for six or so years now. Frankly, they just aren't—not in any meaningful way compared to other languages, at any rate. I know it's tiring when people pick on JavaScript, but this is a thread about transpiling and why one might want to, so some critique is kind of unavoidable. It seems everyone prefers that the question go unanswered and that JavaScript is made out to be an all-encompassing solution to every problem. One wonders why there should be such a proliferation of different languages if that's the case. I have to note that it's ironic that you mention that promises are monadic (well, sort of, anyway), because it sounds like you recognize there's something inherently useful about the interface. Then you call it wankery. Well, you call making "everything revolve around monads" wankery. But I never said that. So I'm not really sure what point you're trying to make.
If you have to ask the question why it is more maintainable to have smaller classes that each have their own function/concern I really advise you to read up on the basics like SOC and design patterns.
It's both actually in my opinion
maybe while(1 = 1) {} is better \^\^
Somewhere in your code, you have [foo.style](https://foo.style), where "foo" is some object. foo doesn't exist, so you can't access style for it.
The console should give you a line number, so you can find where you need to fix it.
That’s a common error that can happen in a lot of ways. You’ll need to put your example up somewhere people can look at it for anyone to be able to help you.
`uncaught user error: cannot read script 'source' of undefined` `reference error: context is not defined` Please narrow your question, asking for help on an unknown script and providing only the error isn't enough to get relevant help on this issue. 
For sure this project is for devellop a community creativity, the own limit is your imagination ! it can be something usefull like a paint module for example or just some design from your mind ! try it yourself i will accept anything if you are in respect of everybody
Before you draw anything, e.g. text() and arc(), you need to set stroke() and/or fill(), and/or strokeWidth() and/or textSize(), ... You have to tell p5 how to style everything before drawing it.
Take a look at Dart, it does exactly what you want. Although including a JS module isn’t always easy it’s really doable. Some pros: - compiled, optimised code for a faster run time. - true OOP language - Strong type enforcement. Cons: -much smaller dev community -not so many available packages (although js can be used but sometimes the interop calls are weird) -Strong type enforcement If you come from a C++ background you will love it
Perhaps this suggestion is completely useless in your situation, but for the `api` const at the top, I would likely make that be be driven by build configuration. In particular, if using webpack to build, I would have an environment variable (e.g. `API_HOST=http://api.software.test/v1`) drive a plugin: ```js const webpack = require('webpack'); module.exports = (env) =&gt; ({ plugins: [ new webpack.DefinePlugin({ API_HOST: JSON.stringify(argv.API_HOST) }) ] }); ``` With this in place, I'd have a global `API_HOST` string constant to take the place of the `api` const, e.g.: ```js const endpoints = { LOGIN: `${API_HOST}/user/login`, REGISTER: `${API_HOST}/user/register`, // ... } ``` This does make a lot of assumptions, such as that you're using a build system to produce client-side distributables and that you can feed environment into that build process. Also, it's not the only way to approach the problem of making your app be config-driven, but at the very least I would advocate having a separate source-of-truth for configuration (e.g. a constants file you require in) rather than having that hard-coded value live alongside the list of endpoints. This sets you up for hosting in other environments, such as development or staging, with minimal headache in adjusting to such changes.
What is the output of \`dropcss()\`? I could use that and integrate it for my web-components webpack loader. 
Look at Sawgger to document your API. Then use it to generate the API client for just about any language you want. 
Monads are definitely super useful! &amp;#x200B; I'm picking on haskell a bit here - the way it does IO means monads are not just useful but absolutely necessary and it comes with a whole can of complexity worms. Haskell is infamous for its unapproachability at this point. Contrast with more pragmatic languages like Erlang/Elixir or Clojure where they are not as pure but it's still pretty functional if you ask me. &amp;#x200B; Javascript is more like those with the drawback that data is mutable by default but you can definitely work in an immutable way.
Looks like it returns a string of the cleaned CSS.
Looks great. Need a way / some docs to use this with webpack or postcss. [https://github.com/shff/postcss-remove-unused-css](https://github.com/shff/postcss-remove-unused-css) is another alternative.
``` const { API } = process.env export default = { login: ({username, password}) =&gt; ( , REGISTER: `${api}/user/register`, NOTES: { INDEX: `${api}/note/index`, ALL: `${api}/note/all`, SHOW: `${api}/note/show/`, DELETE: `${api}/note/delete/`, UPDATE: `${api}/note/update/`, }, CONTACTS: { INDEX: `${api}/contact/index`, ALL: `${api}/contact/all`, SHOW: `${api}/contact/show/`, DELETE: `${api}/contact/delete/`, UPDATE: `${api}/contact/update/`, }, BOARDS: { INDEX: `${api}/board/index`, ALL: `${api}/board/all`, SHOW: `${api}/board/show/`, DELETE: `${api}/board/delete/`, UPDATE: `${api}/board/update/`, }, }; ```
GoTo and Search popular sites from your NewTabGoTo is your digital assistant. GoTo can open and search some popular sites quickly with simple command on Google chrome omnibar. (command is "goto" in lowercase) GoTo can open and search YouTube, Git, GMail, Drive, Reddit, Medium, Quora, Zomato, Twitter, Linkedin, Google Fonts, FlipKart, Amazon, Google Map, Bing, IMDB and many more. Goto Options or type "goto help" after install for full list. GoTo is not storing or using you data and searching sites publicly or using user login if user is already logged in. 
Checkout freeCodeCamp - you can go through the algorithms and projects (you'll need a bit of HTML + CSS for those). Codewars is similar but different, as it's "competitive" and you get to rank up. Project Euler is also pretty great. If you manage to get past those, you can checkout the book "Eloquent JavaScript" - it's ranked as intermediate-advanced on MDN last I checked. I found it really useful. 
```javascript // api/name.server.js const { API } = process.env export default { user: { login: ({ username, password }) =&gt; ( axios.post(`${API}/user/login`, { username, password }) ), register: ({ username, password, email }) =&gt; ( axios.post(`${API}/user/register`, { username, password, email }) ) }, notes: { index: (params) =&gt; axios.get(`${API}/note/index`, { params }), all: (params) =&gt; axios.get(`${API}/note/all`, { params }), delete: (id) =&gt; axios.delete(`${API}/note/delete/${id}`) } } ```
Edabit. There are tons of exercises and so long as your code passes the test it’s evaluated as a correct solution.
I'd recommend [https://projecteuler.net/](https://projecteuler.net/) 
this.is.awesome! thx for letting me know :)
You are right and I'm sorry.
How is your array with singers structured, how do you register the singers sex?
this was given: *const* names = \[ 'Mariah Carey (v)', 'Zanger Rinus (m)', 'Carl Cox (m) ', 'Madonna (v)', 'Andre Hazes jr. (m)', 'Nina Kraviz (v)' \] ; 
 this was given: *const* names = \[ 'Mariah Carey (v)', 'Zanger Rinus (m)', 'Carl Cox (m) ', 'Madonna (v)', 'Andre Hazes jr. (m)', 'Nina Kraviz (v)' \] ;
You should take this as the opportunity to improve your coding skills. The simplicity that you described, although easy to grasp in a small codebase, could never scale and would not be tolerated by professional developers.
I'm curious, why don't you stick to php then? I also love php, i don't care about the trends, i like how easy it is to work with it.
Most of the biggest ones are made with JS, but you can use any language as long as there is a library for it (python, c#, rust, etc.)
let singers = yourArray let males = singers.map(x =&gt; { return x.gender === ‘male’ }) console.log(‘There are ‘ + males.length + ‘ males and ‘ + singers.length-males.length + ‘females’)
Hi /u/mementomoriok, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/eZ1Shot, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/funbuttbeaver, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SteveR92, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
This is a sub-par way to store this data but I'll assume it's on purpose. You could loop through the array, either with a for loop or an ES6 function like .map or .filter, and pretty much just do a .contains('m') to check for males and contains('v') to check for vaginas.
Hi /u/redqinc, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/StrangerRobijn, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/abnormalsyndrome, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/maxoys45, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/thetzanou, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Bizzarojoe, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/4m1raagl, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/I_eat_Limes_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Blunt_Truth_Trauma, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/illitirit, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
90% with 60 clicks
Hi ! i cant understand why you rejeted my post ! it is entirely a js project ! Can you explain me why exactly you rejected it please ! Thanks in advance
&gt; For beginner content, please post to /r/LearnJavascript instead of here.
I completely agree. That line was an afterthought, so I didn't think much about it
im not a beginner !? i dont ask for help ! i am asking for project collaboration
I remember doing some artwork fetching in PHP, using [https://coverartarchive.org/](https://coverartarchive.org/) You can search by title, artist, year, genre, etc., and you get some XML or JSON in return. No API key needed (you should send a user agent with your request though, and be careful not to flood the whole thing with 100 requests/minute).
Its good what you are doing. You could make the constructor of a crud as a function because the only thing that change is the scope to endpoints like "contacts", "notes"... const crudActions = ['index', 'all', 'show', 'delete', 'update'] const crud = scope =&gt; crudActions.reduce((obj, method) =&gt; ({ ...obj, [method.toUpperCase()]: `${api}/${scope}/${method}` }), {}) const api = 'localhost' const endpoints = { LOGIN: `${api}/user/login`, NOTES: crud('note'), CONTACTS: crud('contact') }
[Swiftype](https://swiftype.com/) makes adding search to your site with javascript easy.
It is, the selector [class^="a"] will work on the first one, not on the second one
It's not immediately clear what you mean. Where are these numbers coming from? `$('.plot#' + divID + "1, 2, 8, 9, 10, 16, 17, 18").load(' .plot#' + divID + "1, 2, 8, 9, 10, 16, 17, 18");`
Oh, it's just part of a game. those numbers are assigned to div boxes and i wanted those individual boxes to reload even though someone is only clicking on only one box.
Hi /u/idkwhoiamtoo, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
How about this one? ``` [1, 2, 8, 9, 10, 16, 17, 18].forEach(function (divID) { $.post('farm_form.php', $('#form' + divID).serialize(), function (data, status) { $('.plot#' + divID).load(' .plot#' + divID); $('#currentSelect').load(' #currentSelect'); $('.selected').load(' .selected'); $('.reloadDiv').load(' .reloadDiv'); var ifOn = '1'; var reloadTable = $('.reload').attr('id'); if (reloadTable === ifOn) { window.location.reload(); } }); }); ```
Ordering css classes differently produces different behavior. The order matters. The same goes for lines of JavaScript code. If I change the order, a different thing will happen.
Because `^=` means "starts with", doy.
Since I've started my own xml parser ([https://github.com/vitkarpov/fast-xml-parser](https://github.com/vitkarpov/fast-xml-parser)) project, I start to see more and more use cases of it. That's nice! :-) &amp;#x200B; I'll dig into your project in order to get why do you need it (and probably replace node-html-parser someday 😉)
&gt; "Is this value a primitive, so we have to call a length function on it or is it an object?" Documentation is already provided by your IDE. If you don't use IDE, well, no matter the language you code with, you'll always end up knowing by heart all functions prototypes. &gt; "Is the function for joining an array by a string called something logical like 'array_join'? Oh, it's join, okay. No wait it's implode. No wait it's both" Isn't it nice that you can have both "implode" and "join"? :) One is just the alias for the other. &gt; "insane things like some functions returning false if an error occurred but others throwing exceptions" Yep, there were lots of discussions in PHP's internals about changing the behavior of functions returning false in order for them to throw an exception instead. But as said above, PHP is BC-first. If one day a new PHP version changes the behavior for 1 function (like "strpos" for example), almost all PHP apps in the world will have to change. Remember that Wordpress is made with PHP. « According to W3Techs, WordPress powers 33.0% of all the websites on the Internet » Do you imagine 33% of the websites that will have to update their entire codebase just because one function changed behavior? PHP 7.2, even if it's a minor version, introduced one "big" BC break (which is not usual at all) in order to make the language evolve with less inconsistencies, exactly what you criticize PHP for. This one: "Warn when counting non-countable types" « An E_WARNING will now be emitted when attempting to count() non-countable types (this includes the sizeof() alias function) » http://php.net/manual/en/migration72.incompatible.php#migration72.incompatible.warn-on-non-countable-types This is good news: less inconsistencies. Yet, tons of projects that didn't take care about whether the input is "countable" broke just because of this. (a function named "is_countable" was introduced in PHP 7.3 for that purpose: http://php.net/manual/fr/function.is-countable.php even though checks are simple since it can only be either arrays or objects that are instances of the "Countable" interface). And for the record, having a "null" variable for which "count($myNullOrArrayVar)" returns "false" is supposed to be ok in a loosely and weakly typed language. Which PHP is, and has always been. Yet people still seem to want PHP to act more like a strongly and statically typed language (such as Java), but it wasn't meant for that in the first place, and this is fine. And we're talking only about "count()" function, which is a real-life evolution of the type you are asking for: introduce BC breaks to remove inconsistencies. But this is still breaking the web, because an estimate of 80% of the websites are using PHP. So the language must evolve "well": introduce tiny things from time to time to make things better, but don't break everything either. For instance, since PHP 7 was announced, the release process drastically changed especially for this: make sure we can make more BC breaks and have a new major version sooner than before. History is important, especially when it powers 80% of the web. Last major was 5.0, released in 2004. Next major after that was 7.0 in 2015. 11 years between both versions. That's unacceptable, but this is changing. PHP 8 is expected for 2020, which is 5 years between majors. That's way more acceptable. Yet, Node.js stayed in version 0.x from 2011 to 2015, with BC breaks on every new 0.x minor (which is acceptable in a semver-compliant release process). People kept using Node.js 0.12 for years because 1.0 had more BC breaks. And today we're at Node.js 11.x Can you imagine the cost and impact of having more than 11 different major versions (introducing lots of BC breaks) in *less than 10 years*? The cost is huge: packages don't update, packages become obsolete, insecured (see the "npm audit" that was introduced, it's a tough task to keep 0 flaw today with any project). Therefore people create other packages to be compatible with newer Node.js versions, then we have millions of packages and... well, the ecosystem evolves, but every new project is almost like a new paradigm. At least, with PHP, on every new project, you find something familiar that guarantees easier maintenance, less financial cost, longer life, etc. For now, no other web language has an ecosystem like this. That's a bit sad IMO, because other languages are good (Ruby is good, Node.js is good...), but at least the PHP ecosystem is way more stable. Criticizing about inconsistencies is just criticizing because you don't like how it's written, maybe also because you don't like the fact that many things didn't change in the past 15 years (since PHP 5 was released). But "not changing" doesn't always mean "stay bad". PHP is extremely fast and frameworks are highly consistent these days. Inconsistency with function names or return type is not an argument that goes beyond purely subjective opinions. Take the ecosystem in account, and you'll know why the rest is important. 
Yeah exactly my point, thus they are not equal
This is why I reach for axios. You can use a response interceptor to drop that first then. You can also gracefully handle your 400 codes. ``` Edit coming ```
Maybe you’re too far along for this to be an option, but I would seriously consider HATEOAS if I were you. Basically, it’s a REST design principle that says keeping track of URLs is the server’s responsibility, not the client. The drawback is that you may end up making a few more API calls, but the advantage is that it decouples URLs and resources. See https://restfulapi.net/hateoas/
nice work. you might want to add something to distinguish base line and stretch. 
Very cool. I now reach for \`reach-router\` now-a-days. 
super clean.
Sure, but that's what you get for using such a specific selector.
Hi /u/wangmobile, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
thanks! looks small: 1.44 MB, 102 Files, 18 Folders initial results are not great, though: 35ms, 17.5 KB. will test for coverage/correctness in a bit and add it to the README.
You are right, if you are in a css file. There the order matters a lot. In this case we are in the html context, where you would go from `&lt;div class="d a c b"&gt;&lt;/div&gt;` to `&lt;div class="a b c d"&gt;&lt;/div&gt;` which would do no specificity issue.
Since I didn't point out what the problem is which is meant to be solved with this module here a small update. You run this module on your html file(s) and each tag with the class attribute will get sorted the classes inside. ## Example `&lt;div class="d a c b"&gt;&lt;/div&gt;` will be converted to `&lt;div class="a b c d"&gt;&lt;/div&gt;`
This sounds delicious... Now I'm hungry
Hi /u/LookAtMyOwlTattoo, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/lukrzrk, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/javascriptPat, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I use axios and a repository pattern for my rest apis export default class User { constructor({ id, firstName, lastName, birthdate }){ this.id = id; this.firstName = firstName; this.lastName = lastName; this.birthdate = new Date(birthdate); } } --- export default class UserRepository { constructor(axiosClient){ this.axiosClient = axiosClient; } async getUsers(){ const { data } = await this.axiosClient.get("users"); const users = data.map(u =&gt; new User(u)); return users; } async updateUser(user){ const { data } = await this.axiosClient.put(`users/${user.id}`, user); return new User(data); } } --- const axiosInstance = axios.create({ baseURL: 'https://some-domain.com/api/', }); const repository = new UserRepository(axiosInstance); const users = await repository.getUsers();
Great work, a lot of effort has gone into this so it's much appreciated. My only concerns with cleaning unused CSS (and this isn't limited to just this library) is it often requires the fully-rendered HTML in order to work effectively. So in other words, this libray won't work with: * PHP: Blade / Twig / Smarty templates * Vue * React ... etc You would have to give it an example of the full rendered HTML in order for it to work. But that poses the question of if your doing that, you may as well use something like Puppeteer which can crawl your pages and use Chrome's built in CSS Coverage checker to export a list of used/unusued CSS ranges - that would surely be more effective than using a library like this. It may well be a good fit for sites with large static HTML, but in the real world this library suffers from problems already present in most of the other CSS cleansers. 
Hi /u/ovpv, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
why all all caps? just all cap the name the first one and prevent the eyesore (learnt this from android). ENDPOINTS or just EP.note.all (use singular as well, it's not an English class, so no need for extra plurals nonsense). Of course, don't be too liberal with the short names. H.ok might be good if you use the 200 number for response status, but shortest names are usually for the overly used idioms (like i for indexing in for cycles)
Can you show some code?
so, i use it with my SSR'd site. i crawl my own Express routes using https://www.npmjs.com/package/node-mocks-http and generate the full html (which serve as static fallbacks served by Nginx in case Node dies, too). it works great and also will help with doing a fullsite index/search when i get to building that out :)
In my experience ClojureScript interop works very smoothly with [shadow-cljs](https://shadow-cljs.github.io/docs/UsersGuide.html). I am unsure what you're talking about exactly when you refer to limitations in point 3 because I have experienced no such thing.
It's nice, I don't use cookies much but ... it's not like localstorage is hard to ... use anyway in JS.
The vanilla DOM api is fine for most uses. But people want to wrap it because they assume they know proper API design better. And then people use them like homeopathic medicine. It can't hurt, right? (except it does and it will)
You could also take a look at using F# with Fable. Much like ReasonML, Fable has ways of emitting raw JavaScript.
Please elaborate.
This is neat! Good for learning the basics of flex. Anytime flex comes up in discussion with other devs, I have to share this link as it is extremely helpful in understanding flex layout. https://css-tricks.com/snippets/css/a-guide-to-flexbox/
Long term using too many third party plugins (as lightweight as they can be) can lower performances by a lot. That's why people is leaving jquery for example
jQuery is dying because it has a pretty good alternative with ES6, and it's heavy. But I think most of the people who dealt with cookies or LS can agree that the API itself is not intuitive and is a bit messy.
Indeed, but we were talking about using plugins instead of vanilla js
There are some subtle important differences between the two that might matter, for instance, ReachRouter which is great, does not work as a router in a chrome extension popup well for various reasons. For regular webapps I reach for @reach/router as well.
Weird comment.
Well replacing say: localStorage.getItem(k,v); &amp;#x200B; With something like: someApiWrapper.getItem(k,v); &amp;#x200B; This at heart introduces: \- more code to download &amp; parse \- another library dependency that needs to be audited (because you cant just include code you haven't checked for everything from backdoors to bitcoin miners) \- another library dependency where you are dependend upon a 3rd party developer not on the payroll to maintain and fix bugs in \- makes junior developers not learn how a browser works (which is transferrable knowledge) but instead makes them learn something of which the future is unclear instead &amp;#x200B; There are moments when all these prices are worth it, for example: \- when it solves a real hard problem using wisdom of the crowd \- when it wraps built in behavior in a much more unique and novel way, that truly improves the code almost objectively from using Vanilla directly \- when there are lots of browser differences that are handled for you and there is a recognizable / respectable team behind it But this is more of an example where people should do what you did, not use what you wrote. They should use VanillaJS. So if in our team somebody asked to use this library, i would be, you can learn from it, bring it internal and maintain it yourself (if you can convince the rest of the team to use it instead of the vanilla stuff). But we ain't npm install/updating something like this. None of this is meant as a critique towards your skills, btw. Just that its very obvious a project that helped you understand/document the build in API's. But what are you truly solving here? What hard problem? Because all dependencies at heart just complicate things. Using anything is never for free. So the question is simply 'what does it add?' . For example: what makes this better than directly using VanillaJS? And is that improvement difficult/complicated enough to warrant even the price of just having to keep track of one more dependency. (since it means people need to learn it, people need to update it, people need to maintain it and take responsibility for it, etc.) &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
I'm not saying anyone should use it... Just that per definition it is not the same, don't care if it's an edge case
Well, the library started as a cookie only library, and I had so much fun writing it that I've decided to add local storage. While the cookie side is pretty much horrible in plain JS, local storage has its own problems too - for example, 9 out of 10 times you'll want the data to return parsed, or inserted stringified, which the library does.
Hi /u/crespo_modesto, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I looked at your comments hoping you were in some dev bootcamp communities cuz I'd like to know more about them and found a cesspool of hate and racism. It's really not funny.
Not mentioned so far, a Haskell-like language is purescript.
If you're that hard set on using the function keyword then go ahead. It doesn't really matter to me. I personally prefer const for the reasons stated above. 
\&gt; I had so much fun writing it that I've decided to add local storage. Good that you had fun. That is good. These are great learning experiences. \&gt;While the cookie side is pretty much horrible in plain JS I don't disagree its ugly. But its not a lot of code, and in most companies you wrap it once and put it some shared internal library. \&gt;you'll want the data to return parsed, or inserted stringified, which the library does. Here we would disagree about proper API design. I would like uses of such storage to be aware they are using JSON.stringify/JSON.parse. There is a reason the Fetch API doesn't do it for you either. The reason the developer using the library should be aware (and should just encode/decode themselves) is because not everything can be encoded/decoded. Keys that point to undefined will dissapear. Recursive data structures will throw an error and all function definitions will be magically gone. Date objects will be converted to strings. Prototype chains are gone. Object used as hash-tables might break based on particular use-cases, because truly empty objects (i.e. Object.create(null)) get converted to 'fat' empty objects (i.e. {}) It also conflates responsibility. Encoding/decoding, unless completely homomorphic, should not be entangled in a storage layer. Good API design isn't about what 'i want to think about as less as possible' .. its about forcing the user of the API is forced to think about the things that are important and not bothered with the details that are not. &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
It's pretty fucking funny to me. You must be a liberal. Hello! :)
What type of advice are you looking for? If you need some advice on which stack to use I'd recommend using a [BaaS](https://en.wikipedia.org/wiki/Mobile_backend_as_a_service) since they allow you to interact with a DB from your JavaScript code quite easily and you won't need to code a back-end. [Firebase](https://firebase.google.com/) comes to mind, or [MongoDB Stitch](https://www.mongodb.com/cloud/stitch) if you want more complex database queries.
Neat. Thanks for sharing. As an FYI the align-items property with the stretch value assigned won't do anything for flex-direction row if you have the height set. Same goes for flex-direction column if you have the width set.
I don't think arrow functions obfuscate your code. That's an opinion though and your welcome to disagree. If you think that it obfuscates your code so much that it's more costly then the things that I have mentioned then you shouldn't use arrow functions. That's a value judgment and it's up to you to make. I personally don't care what you use. 
Right, so it's ironic when Javascript developers turn around and make the exact same anti-progress arguments made by those older language communities: "Wait! Don't go! Our language is *widely accepted to be good enough*!"
It's not an edge case though. It's a 3rd party component (jQuery), and thus doesn't apply here when we're talking about the important of CSS class order. Not really worth discussing though!
Just trying to prevent the spreading of mis-information. I agree that it's not all that important. However it is not just third party [as seen here](https://www.w3schools.com/cssreF/sel_attr_begin.asp)
I see no issue with this. There aren't that many alternatives that are better. The frontend code needs to learn about the api endpoints somewhere and this is a fine way to do it. One of the possible alternatives is to use dynamic service discovery, which in your case would not be much more than implementing an endpoint on your API server that returns endpoints object you've defined in your client-side code. That has the benefit of allowing multiple different types of clients to retrieve the routes from the API server without needing to duplicate that code in multiple client-side code bases. if that's not an issue for you, though, I wouldn't recommend doing it. just stick with your existing solution. it's fine. 
I had a coding question to make those things in an interview
&gt; const Example = (props) =&gt; ( console.log(props), &lt;Foo ...props /&gt; ) I would assume
The language has to be better than what it is replacing. In this case, people just want to use their favorite language instead. I think if something better came along it would have no trouble displacing JS. Most likely it would come along with a new paradigm shift in programming, or at the very least a new platform, like JS did with the web.
so i can use js &amp; this databases ? (like to get data back when it stored in DB to add timer on it)
Yup, the site's great! I visit it at least once a month haha
Thank you for the suggestion, I definitely will!
Thank you a lot, I'm going to extend the examples!
Just finished wrapping up a "Remember Me" cookie solution. I didn't even think about using just localstorage for session expiration. hmm.. Now I'm wondering why one would use cookies at all instead of just localstorage. Anyone have a use case they could drop on me?
Yeah, exactly. I'm not sure I understand what your timer has to do, but they are both flexible enough to achieve things of all sorts.
Be aware when working with healthcare data. INAL but if you can match people to their conditions and medications through your service you and any nurse may be in violation of HIPAA. Also liability concerns. What happens if your app is unavailable and someone is harmed, etc. 
Hi /u/EsmailELBoB, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Deviso, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/DiscDres, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
React nodes need to be either a single node or an array of nodes. Your function has to return `&lt;View&gt;&lt;/View&gt;` with an array of `ItemToRender` inside. You can achieve that with a `.map` on an array of the size you pass. There are many ways, if you fancy modern syntax do `Array(number).fill().map(() =&gt; &lt;ItemToRender /&gt;);` if you are old school you can make an empty array, fill it inside a for loop with `ItemToRender` and return it. Good luck.
I would just use the number to push the ItemsToRender into an array. Since JS doesn't support iterating over ranges, you'll have to do a plain old for loop: ``` const createItemsView = ({ number }) =&gt; { const items = []; for(let i = 0; i &lt; number; i++) { items.push(ItemToRender); } return items; } ```
Hi /u/blogueandoatope, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
There is no valid reason for removing this post. 
okay! didnt see the rules xD
Thanks for your reply - turns out i posted in the wrong sub. The code I posted was able to upload a file using &lt;input type ="file"&gt; and then read it using JS to print out the contents of a specific cell. Where I am stuck is modifying the cell not just reading it.
Please tell me more how to do my volunteer job.
Ah, how refreshing, some wisdom in the JavaScript space, not just installing dependencies left right and center.
Give me a valid reason. 
&gt; Questions that are easily Google'd. 
You could use the `baseURL` option instead of prefixing every URL with `API`. And I think if you're writing functions to abstract away the network request, you should unwrap the data from the response: ```js const axios = Axios.create({ baseURL: process.env.API }); const getData = response =&gt; response.data; export const login = ({ username, password }) =&gt; ( axios.post('/login', {username, password}).then(getData) ); export const register = ({ username, password }) =&gt; ( axios.post('/login', {username, password}).then(getData) ); export const getNotes = params =&gt; ( axios.get('/note/all', { params }).then(getData) ); export const deleteNote = id =&gt; ( axios.delete(`/note/${id}`).then(getData) ); ``` 
Great work! Consider adding something to help explore the flex/flex-grow/flex-shrink properties too!
https://expressjs.com/en/guide/routing.html#app-route Also, isn't it against REST convention to have separate route names? ```js { INDEX: `${api}/board/index`, ALL: `${api}/board/all`, SHOW: `${api}/board/show/`, DELETE: `${api}/board/delete/`, UPDATE: `${api}/board/update/`, } ``` i.e the `/update/` `/delete/` `/show/` parts Shouldn't those just be `DELETE ${api}/board` `GET ${api}/board` etc to be RESTful? I've switched to GraphQL from REST so it has been a while for me.
Localstorage don't have auto expiry. Also, I don't think they have equivalent to HttpOnly and secure cookies.
Instead of defining all of your endpoints as strings, you could define them as functions that abstract away the network calls. So instead of exposing a `REGISTER` url string, you would just expose a `REGISTER` function: ```js export async function register({ username, password, firstName, lastName }) { const response = Http.post(`${api}/register`, { username, password, firstName, lastName, }); return response.data; } ``` This way, when you're consuming your API, you won't have to concern yourself with the HTTP request/response details. 
I actually set expiration date/time manually in my setup. I do see your point about the httponly tho. Makes sense.
Yep, so maybe the `class-sort` library should have a disclaimer that is may break `^=`, `*=`, and `$=` selectors. Otherwise, the DOM tree ends up being built the same.
The `^=` selector isn't jQuery, its CSS.
This is very similar to how I've been handling this, but I usually skip the classes and split everything into functions: ```js export async function updateUser(axios, user) { const { data } = await this.axiosClient.put(`users/${user.id}`, user); return new User(data); } ``` Then I use a barrel file that exports all the endpoint functions: ```js export * from './updateUser'; export * from './getUsers'; // ... etc ``` And for convenience I might prebind all the methods to an axios instance: ```js import Axios from 'axios'; import * as endpoints from './endpoints/index'; const axios = Axios.extend({ baseURL: 'some api url' }); const boundEndpoints = Object.entries(endpoints).reduce((bound, [key, fn]) =&gt; { bound[key] = fn.bind(null, axios); return bound; }, {}); export default boundEndpoints; ``` This also makes it very easy for endpoint functions to call each other with the correct axios instances: ```js import fooEndpoint from './foo'; import barEndpoint from './bar'; export async function someEndpoint(axios) { const fooResponse = await fooEndpoint(axios); const barResponse = await barEndpoint(axios); // ... } ``` 
Well, let me know if you can't figure it out, maybe I can help? dunno..
&gt; I don't think arrow functions obfuscate your code I didn't say that. I said that having a variable declaration where you initialize the variable with a function expression is a roundabout function declaration. You still didn't answer my question, though. I guess that means that you never actually redeclared a function and yet all your reasoning centers around preventing that.
browser support for modern methods isn't 100% yet
Good idea, thanks!
cool I'm interested to do a react version now
&gt; I'm really not trying to be slippery here, but whether or not one can with some effort achieve something in a language doesn't really have much bearing on whether or not it was designed for that thing or even whether one should based on how much extra effort is required. That's a fair point - I've been interested in FP for a while, but lacking any real use-case for (relatively niche/specialist) FP languages, I haven't really dug into them, so I'm interested in both what's *possible* and what's *nice* regarding FP in JS... and by extension what's not, which might stimulate my interest in specialist FP languages more. &gt; f x y = x + y &gt; This is a function definition equivalent to (x, y) =&gt; { return x + y; } in JavaScript. You can also express that as `f = (x, y) =&gt; x + y` in JS, and you can chain them together: f = x =&gt; y =&gt; x + y; Is that not an example of auto-currying in JS? &gt; To the point, all functions have arity 1 Admittedly JS support functions with arity &gt; 1, but that doesn't seem like a problem - just a consequence of it being a multi-paradigm language. &gt; the application of any function to any set of argument sequentially returns unary functions until all arguments have been applied. That sounds a lot like `.map()` to me - `let squaredValues = [1,2,3].map(i =&gt; i * i)`, right? These are all core parts of the language, and have been for years now. &gt; Referential transparency and true equivalency are big in FP-first languages. By referential trasnparency you just mean avoiding side-effects, right? This is possible in JS although it doesn't *prevent* you from doing it... which I guess is either a drawback or a massive win, depending on whether you're looking for a language that *permits* FP or *enforces* FP. Personally I prefer multiparadigm languages that give you the most flexibility in tackling problems so you can choose the approach that works best... but that isn't a universal law, and YMMV quite a lot there. &gt; pattern matching... [is] a good deal more succinct, it's exhaustive (not partial) it can match in parallel (testing n conditions at once without any syntactic overhead), can bind variables, and it's ideal for testing the values of ADTs, all of which put together make resulting code at once terse and readable. I'll ignore the parallelisability of pattern-matching, since JS is inherently single-threaded and *any* language that compiles down to JS will have to abide by that, but the others are interesting. I'm not sure what a lot of these are, but from reading up briefly it sounds like a lot of these are achievable in JS, even if not necessarily quite as elegantly as if they were build right into the language. For example, even though JS doesn't support strong types, its prototypical nature makes it pretty easy to write a pattern-matching method and supporting `Types` object that would allow for things like this: patternMatch(value, Number, () =&gt; {...}, String, () =&gt; {...}, { x:Type.ANY, y: Array(5) }, () =&gt; {...}, Object, () =&gt; {...}, Type.ANY, () =&gt; {...} // etc ) That gives you matching against built-in types, predefined groups of types (eg our notional Types.ANY that matches anything)
Is your element positioned absolutely in your css or through js?
&gt;I didn't say that. I said that having a variable declaration where you initialize the variable with a function expression is a roundabout function declaration. You said &gt; It's one in a million times zero. That's the likelihood we're talking about here. That's what worries you so much that you obfuscate your function declarations in order to avoid this hypothetical problem. &amp;#x200B; &gt;You still didn't answer my question, though. &gt; &gt;I guess that means that you never actually redeclared a function and yet all your reasoning centers around preventing that. Even if it never happened, I would still avoid it because I can at no cost. 
What is this win.onclick , you didn't put event listener to your flying object , do it like myid.addEventListener('click',yourFunction)
You are probably missing the units from this line: &amp;#x200B; document.getElementById('myid').style.top = 500; &amp;#x200B; might need to be: &amp;#x200B; document.getElementById('myid').style.top = "500px";
`Top` should be `top` (js is case sensitive) and 500 should be `500px`? 
What are those reasons? I'm looking to implement routing in my WebExtension right now as it happens!
Arrow functions behave the same with respect to lexical scoping as regular functions do. Their difference is with \`this\` binding.
This was one of my favorite sources of research on the matter, especially the research they cite: https://web.eecs.umich.edu/~weimerw/p/weimer-tse2010-readability-preprint.pdf
Yes, you obfuscate your function declarations. Arrow functions on their own aren't obfuscating anything. &gt; Even if it has never happened And never will. &gt; at no cost. There is a cost. You made your code harder to scan. A function declaration looks like a function. A variable declaration... well, it declares a variable... and you initialize it... with something. How about a function expression? You are paying a small price and you get zero benefits in return. The truth is, this only got popular because people wanted to use ES6 features more extensively. Using const+arrow instead of old-fashioned function declarations doesn't actually improve anything. Block-level function declarations work perfectly fine nowadays. You can declare your functions wherever you want.
Hi /u/thenudedentist, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Zeyukade, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RockBand2, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
It still seems to be skipping over the event and moving on to the next part. I realized I forgot the "500px" syntax. Here is the full function which shows what it should do. It should generate a random margin and move it around the screen, which works. it should do this at random intervals, which it does. Am i missing a clear timeout or something? &amp;#x200B; `var c = 0;` `var scorecount = 0;` `var speed = 5;` &amp;#x200B; &amp;#x200B; `function updateMargins(){` `setTimeout(startUpdate, 10);` `document.getElementById('myid').style.transitionDuration = speed + 's';` `function startUpdate(){` `c++;` `if ( c &gt;= 90 ) {` `alert("You failed!");` `var r = confirm("Would you like to try again?");` `if (r == true) {` `c = 0;` `primeGame();` `}` `else {` `window.location.replace("`[`http://www.google.com`](http://www.google.com)`")` `}` `}` `else {` `var rand = Math.floor(Math.random()* 550) + 10;` `setTimeout(createItem, rand);` `function createItem() {` `var win = document.getElementById('myid');` `var w = document.getElementById('supercontain').offsetWidth;` `var h = document.getElementById('supercontain').offsetHeight;` `var randomnumber1 = Math.floor(Math.random()* h) + 10;` `var randomnumber2 = Math.floor(Math.random()* w) + 10;` `document.getElementById('myid').style.marginTop = randomnumber1;` `document.getElementById('myid').style.marginLeft = randomnumber2;` `win.onclick = function testing() {` `document.getElementById("myid").style.transition = '5s';` `document.getElementById('myid').style.top = "500px";` `scorecount = scorecount + 10` `document.getElementById("score").innerHTML = "Score: " + scorecount;` `if (speed &gt; 2) {` `speed--;` `}` `else {` `speed -= .5;` `}` `document.getElementById('myid').style.transitionDuration = speed + 's';` `}` `startUpdate();` `}` `}` `}` `}`
It might help to put a static grid in the box to show how the spaces line up the elements. I can personally see the difference between the different \`space-\` parameters, but some may not. Good tool!
Hey man! This is a nice library. Yes, it may make students a little more lazy since they don't know what's exactly going on with the web development, but it provides some cool features though.
Don't think it does for Chrome either, due to how private mode works
Good post, &amp;#x200B; One of your points for switching to react was &gt;**React Native** would help us write code once and deploy to both web and mobile seamlessly. &amp;#x200B; But from my understanding, UI code cant really be used for both React Native and React on the web - React native renders UI components via native operations and React.js renders UI via html markup. &amp;#x200B;
Hi /u/Meshiest, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; You made your code harder to scan. I disagree
&gt; Have you ever accidentally changed the binding of a variable? No. &gt; Do you just use let for everything? I only use const for constants like Tau etc. Making everything const and then changing them to let as needed is pointless busywork. A machine would do a better job at keeping track of that. I rather do meaningful busywork like adding type annotations. Making machines do mindless busywork is literally the main thing you do as a programmer. Humans take much longer, cost way more money, and they don't even do a good job at it.
react-native-web lets you re-use all of your code native on mobile and otherwise on the web and the desktop. Expo went public yesterday with a full cross platform solution as well (i believe based on rnw). [https://dev.to/brunolemos/tutorial-100-code-sharing-between-ios-android--web-using-react-native-web-andmonorepo-4pej](https://dev.to/brunolemos/tutorial-100-code-sharing-between-ios-android--web-using-react-native-web-andmonorepo-4pej)
&gt; I only use const for constants like Tau etc. A function seems to meet that criteria. So you can understand why I would use it for a function, especially considering I don't think it affects the scanability of the code. Again, that's an opinion and your welcome to disagree. If you think that it negatively affects the scanability then don't use it. That's a value judgment and it's up to you to make. It doesn't matter to me what you choose. 
The problem with such libraries is that it basically acts like a wrapper class taking away the focus from internals. Let me give you an example how it starts. PrintrJS (A cool light weight library to intuitively sass your console logs. ) Ex. Printr.yell("OMG.."); // prints it in an awesome red color emphasizing my yell... Src code Printr{ ... yell (msg){ console.error(msg); // error makes it red for some reason }, chill (msg){ ..... }
Yes you’re correct! both render views differently. We mostly planned on re-using business logic and API calls only.
 &gt; `f = x =&gt; y =&gt; x + y;` &gt; Is that not an example of auto-currying in JS? It is, but I'm not sure I'd advise writing functions like. Someone might poison your coffee. 😜 &gt; That sounds a lot like .map() to me - let squaredValues = [1,2,3].map(i =&gt; i * i), right? Hm, I'm not sure where you're getting that. If you were describing the arguments to a function as an array (or, more traditionally, a tuple), you'd have to "accumulate" them in some sense into a function that returns functions, not map such a function over them. That's kind of the bread and butter of lambda calculus, where function application is just β-reduction of some nested group of functions to a simplest ("normal") form. That's a lot of fancy terminology for a really simple concept that's comparable to reducing fractions to their simplest form in arithmetic. But that's all theoretical stuff. One certainly can write const f = x =&gt; y =&gt; x + y; const a = f(1)(1) // 2 (f(1))(f(1)(1)) // 3 via nested application But I think it'd be hard to explain that one to coworkers. However, in, say, Elm, you could write plus = (+) // operators are just functions, not special 1 |&gt; plus 1 |&gt; plus 1 // 3 This is a syntax issue more than a whether-or-not-currying-is-possible issue, but it's also worthwhile to note that in Elm, this *always* works. Replace `plus` with any random library function whose type fits (`div`, perhaps) and you'll get a working result. In JavaScript, one must know in advance that a particular function is curried, or curry it using an extra dependency. I'd also argue that since currying is not idiomatic in JavaScript, you're not likely to end up using it even if you're aware of it. I typically don't, actually, because I don't want to introduce the cognitive overhead to anyone maintaining my code or add yet another dependency. I actually somehow overlooked mentioning function composition through all this, which is another thing that's delightfully easy in functional languages, and way too cumbersome in imperative-style syntax. But that's for another day. &gt; [On pattern matching] I'm sure it's slightly more elegant in a language where pattern-matching is built-in, but honeslty I can't see a lot of scope there to express the same concepts with much less code. It's a lot more elegant. 😅 Case statements and conditionals vanish into thin air a lot of times, leaving code a lot cleaner. I guess that's subjective to some extent, but I maintain that if you were accustomed to it from experience, you'd get the same sense that other methods were [seriously lacking](https://stackoverflow.com/a/200003). It's even possible to do on parameters: fib 0 = 0 fib 1 = 1 fib n = fib (n-1) + fib (n-2) &gt; I'm not sure I've covered your concepts of "exhaustive" there (unless that was literally just "has a catch-all default case that always matches if nothing else does") Yeah, it means one can't neglect cases in matches. Sometimes that's a "default," as with optionals. The thrust is that the compiler won't let you get away with writing code paths that lead nowhere. Discipline is good, I know, but mandatory enforcement leads to universal idioms that everyone understands in functional languages. The predictability and confidence this affords when reading others' code is hard to overestimate. &gt; unclear what you mean by pattern-matching "binding variables" - can you clarify Here's an example of pattern binding, where `head` just returns the first element of a list (or array): head x:xs = x As far as I know this kind of "destructuring" isn't supported even in modern JavaScript function parameters, but boy is it nice. &gt; I would note here that Typescript is pretty much "javascript with optional Strong typing and interfaces", so would seem to hit this requirement pretty solidly even if you didn't like plain JS. TypeScript's a major improvement, in my book. It's a bit verbose, but it's solid. We kind of wind up where we started though, because now we're transpiling TypeScript down to JavaScript, and, at least in terms of tooling, that's not all that much easier than transpiling any other language to JavaScript. I'll admit I'm massively oversimplifying adoption of other languages in terms of programmer expertise, though. &gt; Either way, this doesn't seem to prohibit doing FP in JS so much as it's a subjective personal choice as to why someone might not want to do it - fair? Optionals in JavaScript are possible, but the lack of argument enforcement almost makes them seem silly—every parameter should theoretically be an optional, because every parameter could well be `undefined`. So we paper over the cracks with tests rather than turning every input into comically cumbersome data structures. The ubiquity of these little differences means you end up writing very different code in different languages, regardless of whatever you'd prefer to do. I've abandoned hours worth of JavaScript that could have been a series of one-liners in Haskell or Elm, because in the end I knew it'd be a nightmare to maintain. The approach I wanted to take was perfectly suited to the logic at hand, but the language made it unfeasible. It turns out that it's surprisingly tricky to channel what's nice about language *x* in words. I've been there (heck, I started off writing PHP years ago). Sometimes you have to just experience it first-hand. In no way do I mean this condescendingly, but I think there's something to be said for Paul Graham's [Blub Paradox](http://wiki.c2.com/?BlubParadox), in that experience in another language *x* is exactly what's required to understand why that language design philosophy is more expressive or powerful than another. It's just hard to compare otherwise, because the concepts look very similar, but the reality turns out to be way different. A few years ago, powerful type systems were one of those things for me. My curiosity got the better of me and I installed Haskell one day. Pretty soon I understood how they easily solve a whole host of problems I'd always struggled with, but I never realized I needed them. I'd encourage you to give Elm a whirl if you have time!
This made me feel like learning the actual API was worth it. Thanks.
I thought you were going to refer to the fact that localStorage is a blocking API which shouldn't be used period (which is debatable, but often brought up by developers). Instead you listed very business and DevOps reason not to abstract for no reason. Are you looking for work? Because I'm always hiring developers like you :P
One reason is that a server can control cookies directly but not local storage. For example, when logging in to a server it can send the Set-Cookie header on a successful login attempt to track login state. It can also expire the cookie the same way. 
You have multiple elements on your page using the class .sqs-gallery-block-grid which your poorly coded plugin is setting to display:none after adding the contents of all these elements to your new photo gallery. A quick fix would be to change all instances of $('.sqs-gallery-block-grid') to $('#yui_3_17_2_1_1553210952439_63') in your js file. "yui_3_17_2_1_1553210952439_63" is the unique id of the gallery you want to change, so it won't grab onto the other gallery elements on the page. However, it looks like the id is randomly generated by square space so if you edit the gallery this id name may change and you would have to update the code again. Square Space sucks, you should get a real website with more flexibility.
This is kinda cool. I've done a few of the challenges. Though I feel like the types of questions are incredibly esoteric. I learned what a linked list is, and I feel dumber for it. This one [https://algodaily.com/challenges/uniqueness-of-arrays](https://algodaily.com/challenges/uniqueness-of-arrays) also feels unnecessarily restrictive. It says to not use any in-built array filtering, which I assume means not using prototype functions \`filter\` or \`reduce\` or \`forEach\`. And given the provided solution, I guess it also means we can't do the fantastic \`return \[...new Set(arr)\];\` Also, why does this one use a hash object? Wouldn't you just check for the existence of the item in the \`uniques\` list? I get that it's good to practice low-level skills, but I think it should be framed with context/language of "you wouldn't do this in most situations". Esp as I see people here saying that they're learning so they can get a job. Am I correct in understanding that it doesn't automatically check your answer? You have to check your own against the solution? Either that, or I've got them all wrong...
There's a project called react-native-web which allows you to render react-native components in the browser. I built an app with it some while ago and it was an awesome "it just works" experience! It's also being pushed right now with Expo integrating it as a first party target
e.g., I got a different answer for [https://algodaily.com/challenges/zeros-to-the-end](https://algodaily.com/challenges/zeros-to-the-end), like I do for every question. I feel that my answer is very readable, but I don't know if there's a good reason why not to do it this way? &amp;#x200B; function zerosToEnd(nums) { for (let i = 0; i &lt; nums.length; i++) { if (nums\[i\] === 0) { nums.splice(i, 1); nums.push(0); } } return nums; };
Is there a good alternative to react router which has built in support for query params?
&gt; It is, but I'm not sure I'd advise writing functions like. Someone might poison your coffee. 😜 Not at all - that's absolutely idiomatic modern JS. It's a fully-intentional reason *why* parentheses around parameters are optional for unary functions, and why you can omit the braces to implicitly return - for exactly that kind of construction. &gt;&gt; That sounds a lot like .map() to me - let squaredValues = [1,2,3].map(i =&gt; i * i), right? &gt; Hm, I'm not sure where you're getting that. Sorry - I realised I had misunderstood you shortly after posting, so edited my comment in the hope you hadn't seen it yet. Guess I missed the window. ;-) &gt; in, say, Elm, you could write &gt; plus = (+) // operators are just functions, not special &gt; 1 |&gt; plus 1 |&gt; plus 1 // 3 That's an interesting example, because while syntactic sugar like the [pipeline operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Pipeline_operator) are likely-looking proposals for JS in the near future, with a bit of thought you could write a dynamic equivalent of your static, 2-ary f() function that recursed to an arbtrary depth and performed an arbitrary reduction on the accumulated arguments - rather than: const f = x =&gt; y =&gt; x + y; something more like const f = makeDynamicCurriedFunction((agg, val)=&gt;agg+val, n); where the method is a replacement for the plus operator and n is the arbitrary degree of nesting you want. &gt; This is a syntax issue more than a whether-or-not-currying-is-possible issue, but it's also worthwhile to note that in Elm, this always works. Yeah... JS permits n-ary functions, but like I said, it's up to you if you want to use them. This seems like less of a "can you reasonably do FP in JS" argument, and more of an "I just like Elm" one. ;-p &gt; I actually somehow overlooked mentioning function composition through all this, which is another thing that's delightfully easy in functional languages, and way too cumbersome in imperative-style syntax. What, like const compose = (...functions) =&gt; data =&gt; functions.reduceRight((value, func) =&gt; func(value), data); ? ;-p &gt; I guess that's subjective to some extent, but I maintain that if you were accustomed to it from experience, you'd get the same sense that other methods were seriously lacking. Fair enough - I'm vaguely starting to get how PM is different to "switching on type", so I guess this one is a definite absence in JS [at least for now](https://github.com/tc39/proposal-pattern-matching). &gt; Here's an example of pattern binding, where head just returns the first element of a list (or array): &gt; head x:xs = x &gt; As far as I know this kind of "destructuring" isn't supported even in modern JavaScript function parameters, but boy is it nice. Not in pattern-matching (as we established JS doesn't have PM), but for functions are you talking about something like: const destructureArray = ([head, ...rest]) =&gt; return head+"-"+rest.join(); destructureArray(['a','b','c']); // 'a-bc' or const destructureObject = ({ head, ...rest }) =&gt; head+'-'+JSON.stringify(rest); destructureObject({head:1, body:2, feet:3}); // '1-{"body":2,"feet":3}' ? Hell, you can go as crazy as you like with nested destructuring too: const destructureObjectHead = ({ head:{eyes, ...restHead}, ...restBody }) =&gt; console.log('eyes:', eyes, 'other head details:', restHead, 'other body details:', restBody); destructureObjectHead({ head:{eyes:2, nose:1}, limbs:4}); // eyes: 2 other head details: {nose: 1} other body details: {limbs: 4} &gt; Sometimes you have to just experience it first-hand. In no way do I mean this condescendingly, but I think there's something to be said for Paul Graham's Blub Paradox, in that experience in another language x is exactly what's required to understand why that language design philosophy is more expressive or powerful than another. Oh definitely - I'm acutely aware that I'm looking up the chain here, and was trying to understand how much JS was missing, and how much was your own lack of familiarity iwth what JS can do. I'm certainly more aware now that there are a lot of nice things that a more FP-oriented language can do (or do more elegantly) - pattern-matching for one looks cool, and I must confess that after years of being a die-hard weak typing enthusiast, over the last few years of writing library code for *other people* to use I'm starting to appreciate the merits of strong typing (at least optional, and possibly mandatory). That said, I'm also fairely confident that there are a surprising number of "blockers to FP" that you've offered that you can actually do pretty elegantly and concisely in JS that you either weren't aware of, or that you seemed to arbitrarily assume are non-idiomatic or bad form when in reality they're anything but - fair? I have to say though, my appetite for learning an FP language has been whetted again as a result of this conversation - thanks!
another mobile option would be to wrap your react html in something like Cordova. I just recently did something like this and it worked great. It also gives you the ability to target more than just iOS/Android
What errors?
My mistake. 
This post made it sound like the app was rebuilt in React which would have been a nice surprise. We recently did something similar and I can say it’s much better to work with React, angular is just too “magic” and unnecessarily hard to follow. 
Ah this is what I was forgetting. Client vs Server setting. Thanks!
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
ok but how big is the hype on twitter/medium?
No hype needed. If they know, they know :D (nobody knows)
Yes. I think a lot of libraries and programmers in general especially with JavaScript just throw libraries and technologies at something, when there is usually a simpler, better solution. 
This is super helpful!! Thank you!! Wondering if there are any mods I can make to the plugin like to exclude the footer id? 
The browser has a built in API for query params, why would you need React Router to? [https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams)
Yeah man my bad.
it's so refreshing to hear someone finally bitch about all the choices they have [and by extension, their own inability to decide between them]. thank you!
Hi /u/mgorhaak, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
dud just read a tutorial
kind of in a rush, cant learn java now, can you help please?
Many if not most folks use HTTP verbs for REST. &amp; typically collections are plural, so: All contacts: GET https://api.website.com/v0/contacts single contact: GET https://api.website.com/v0/contacts/12 delete contact: DELETE //api.website.com/v0/contacts/12 read: [https://medium.com/studioarmix/learn-restful-api-design-ideals-c5ec915a430f](https://medium.com/studioarmix/learn-restful-api-design-ideals-c5ec915a430f) Also, I used Strongloop's Loopback before with Swagger for doc.
I'm not hip to the WS scene yet, but how does it compare to other WS solutions? Vs something like NATS?
Wow a shitpost repo!
My friend, the first thing you should learn is the name of the language you're writing in - Javascript, not Java. The second is to use proper code formatting on Reddit so people can more easily read what you're trying to do. The last would be that if you're using a framework, definitely say what it is. Based on your code you might be using Angular but I'm not sure since I haven't used it myself. But it would increase your chances of somebody helping you if you described your situation better. 
Just FYI, JavaScript and Java are pretty much 100% unrelated to each other. So if you're asking people to teach you Java, you're still not gonna be any closer to solving this problem.
damn! my bad, thank you..
No problem, just give me a second and I'll try to reproduce your problem.
It doesn't actually work because you added the () to the end
done! edited the post, thanks chief &amp;#x200B;
if it’s javascript it looks lile jquery syntax; so you need to get a grasp of jquery; it’s not something you can do overnight
Why?
it is. Yup, i guessed, thats why Im asking the nice community of Reddit:)
I like to do this by emitting, from the server-side templating, a JS tag containing a config object at the top of the page where the JS will run. Then the scripts can pick up config variables from this global object when they first run.
There are primitive types - which are pass by value (null, Boolean, String, Number, undefined) And then there are objects (Function, Object, Array) - which are passed by reference. They don’t have another name as far as I am aware.
what kind of popup you need to show (custom html popup or generic js popup)
Mutable and immutable
sorry I dont know what the difference is. Im looking for a popup saying "tap ok to redirect to facebook account", thats all
Super easy fix, shouldn't matter what frameworks/plugins you're using: alert({ title: 'Navigate To our facebook account', template: 'click to navigate to www.facebook.com' }); window.location = "https://www.facebook.com"; A couple of notes: 1. The answer to your problem was literally in the first StackOverflow thread on Google. In the future, try to find solutions elsewhere before you ask people to debug for you. 2. I'm not sure what your intended functionality is, but you should probably give people the option to NOT go to facebook. you can use the **confirm()** method for this. But there will be some extra logic required to go to facebook if the user clicks "OK", or stay on the page if the user clicks "Cancel". A hint: the **confirm()** method returns true if the user clicks "OK", and false otherwise. Happy coding.
I think you’re looking for Objects(reference) and Primitives(non-reference). There are 6 primitives in JS number, string, boolean, undefined, and symbol. Object, as you mentioned, are referenced data structures that can contains multiple fields as well as methods.
what about mutable vs immutable
is it your homework (just a question, will not affect my answers); are you required to use jquery? what have you covered in basic javascript? (freshman? we all ve been there xd)
I truly appreciate the effort and I have searched for it, my only problem is that I was trying to create a function that I can call at different instances of my work
nope, as explained on the last line, Im using it for an AR app called Vuforia Studio. I need some javascript that can redirect people to our facebook account
My issues boil down to the complaints in this issue: https://github.com/ReactTraining/react-router/issues/5870 From a router I'd expect to handle everything that's in the URL so that I can react to any changes in the URL (and being able to rerender the component) without implementing that logic or query params parsing on my own, which is something that you don't need to do with most routers out there
it is some niche software, i don’t know how js (morover: jquery? syntax) interacts with this software, so i’m sorry - i have no more answers :(
you just need to write some code with both assumptions and check how it behave; best way to learn
i know how they behave, i'm literally asking what the name of something is. no matter how much you "just code" you can't figure out the name of something. that's why i ask the quesiton
so they can be a copy or a reference; what s your take (and why)
By val / by ref?
&gt; what s your take (and why) this doesn't even make sense as a question about the discussion
This joke has been done many times before. See: http://vanilla-js.com/
Thanks for sharing! 
it does, in js (which ecma~something?) every „object” is an asociative array; const is only (limited) immutability, so everything you type takes a form/type of what you assigned
Very uncommon. Most tech interviews I’ve done have covered some essential javascript knowledge but never gone through anything too complex. 
It’s not mutable vs immutable because references/values in javascript are mutable. Unless you use “const” but even then that’s very limited top level immutability. You can use Object.freeze but that’s not what you’re talking about. Primitive type is the opposite of what you’re asking for. I don’t know if there’s a noun for “thing that is passed by object reference” in JavaScript. They’re just called Objects :) 
Localstorage works in Chrome incognito if I remember. I use incognito/private mode for my regular usage daily.
i love going to junior level interviews; i can’t pass like 80% of them cause they are designed by people who expect junior salary from seasoned senior; i wrote a lot of absolutely-right-left tested code that powers handful of companies, but somehow i still cannot answer properly a question about multicurrying codem (for sake of briefness)
This comes pretty close, but it doesn't pass a strict type check (`===`): ``` function addSubtract () { const [accumulator, ...values] = arguments if (!values.length) { return addSubtract.bind(this, accumulator, accumulator) } const reducedValue = values.reduce((accumulator, value, index) =&gt; { if (index === 0) { return accumulator + value } return eval(`${accumulator} ${index % 2 ? '+' : '-'} ${value}`) }, 0) Function.prototype.valueOf = () =&gt; reducedValue const returnFunction = addSubtract.bind(this, reducedValue, ...values) return returnFunction } console.log('Result:', addSubtract(1)(2)(3).valueOf()) ```
You could use `.reduceRight` instead of `.reverse().reduce()`.
/u/billymcnilly, thanks so much for this great feedback. We've heard a lot about tests recently and will be making sure to add a test suite to each final solution code block for all challenges. Really digging the idea of the social answers, too! Might put that on our roadmap for the near future.
Copy by value (primitives) copy by reference (objects, arrays etc)
There are still great uses of cookies for things like authentication tokens. Any script could retrieve the token from local storage, but a cookie can be set with HttpOnly flag, and Secure flag. It will prevent scripts reading it, and it being sent in an unencrypted form over http.
Lol what a dumbass, these are complex questions and not something a junior should solve. I wonder why they come up with such complex questions, easier more practical ones would benefit both sides more
Another word for discrete values such as strings and numbers is “scalar.”
Exactly. He might be asking me such things cause I am self taught. But that was just a startup....
Even basic currying would be a surprise in a junior interview, let alone something advanced like this. You don't want to work at a place that values this over things like simple problem solving, communication, culture etc.
firstly, good job guys, have a cigar... the game room mechanic was really easy to use and despite not having any aliens to shoot, we had some fun playing it! it took us like, 5 minutes to determine the goal was to guess more letters than the opponent (for a while I was guessing bad letters on purpose, as I didn't understand the incentive structure) --&gt; easy solution, make a scoreboard for currentLettersGuessedPerPlayer the card definitions didn't always match the actual word, and sometimes (mobile, long definition) they are impossible to close also some of the cards were too powerful (2 letters + free letter = auto win) and some sucked (blocking / block blocking / peeking added nothing to the experience) also, "enemy cards" section takes up more of the screen than the letters... which is more important? this, from ./src/Shared/Functions.js \`\`\` const setScore = ({ player, game = null, setTitle }) =&gt; { let me = game.playerSockets.filter(p =&gt; { return p.socketId === player.socketId })\[0\] let enemy = game.playerSockets.filter(p =&gt; { return p.socketId !== player.socketId })\[0\] let score = game.score setTitle({ score: { me: me.nickname, myScore: score\[me.socketId\], enemy: enemy.nickname, enemyScore: score\[enemy.socketId\] } })} \`\`\` could be rewritten as &amp;#x200B; \`\`\` const setScore = ({ { socketId }, { playerSockets = \[\], score }={}, setTitle=(()=&gt;0) }) =&gt; { let me = playerSockets.find(p =&gt; p.socketId === player.socketId) || {}; let enemy = playerSockets.find(p =&gt; p.socketId !== player.socketId) || {}; setTitle({ score: { me: me.nickname, myScore: score\[me.socketId\], enemy: enemy.nickname, enemyScore: score\[enemy.socketId\] } })} \`\`\` this sets more defaults, uses more destructuring, and avoids \`filter ... \[0\]\` in favour of \`find\` which is more human legible in ./src/App.jsx (.jsx is largely 2016y) there's a mixing of non-constructor style \`\`\` class Whatever extends Component { state = { init: 'value' } // ... } \`\`\` and constructor style \`\`\` class Whateva extends Component { constructor(props){ super(props); this.state = { ido: 'what i want' }; //... } //... } \`\`\` so if you have babel set up for non-constructor style (ie used create-react-app), it's somewhat preferable to stick with that (apply a style guide!) the localStorage reading function(s) can be made pure (ie static, ie not called this.whatever) in fact, all of the networking logic would do better not in a Component (separation of concerns: networking &amp; user interaction) why are there two destructures from state in the render? onInvitationAccept is a function in the state.... state should be serializable nickname &amp; socketId can be saved to state, then the function is just a plain old instanceMethod \`\`\` onInvitationAccept = ()=&gt; this.setState({ isInvitationModal: false }, () =&gt; { socket.emit(INVITATION\_ACCEPTED, { fromSocketId: this.state.opponentSocketId, to: this.state.player }) }) \`\`\` I'm not a huge fan of how you're passing props to the routeComponents, but there isn't much really a better way I suppose in ./src/Game/Cards/Cards.js, these functions are basically almost Redux style reducers! why not use redux? seems like it'd be a win here in ./src/Game/Words/Words.js \`\`\` let guessedKeys = \[\] for (let j = 0; j &lt; guessed.length; j++) { guessedKeys.push(guessed\[j\].key) } \`\`\` would be more succinct as \`\`\` const guessedKeys = guessed.map( g=&gt; g.key ); \`\`\` .map is usually a win now in ./src/Components/Game.jsx, you're taking \`game\` as a prop, putting it into state (not advised by react's official docs) then mixing use of \`props.game\` and \`state.game\`... also why is there socket logic here? seems like that should all be put in one place, then you can use the props passed into this component to trigger game state changes using componentDidUpdate \---- I have to catch a flight now or I'd keep reading, if you've made it this far: congrats - you've built something very impressive here! I think you hit the nail on the head about larger projects being more complicated to maintain... the best solutions I can point you towards for that are: \- "be consistent" (aka curate and follow a styleguide religiously) \- "separate concerns" (it should be easy to know which file a feature is in by knowing the feature, and it should be easy to know which file I'm reading by reading what the code does) \- "if you got em, smoke em!" (react gives you a lot of super powerful, somewhat subtle features... the more you write react, the better use you'll find for all the work react wants to do for you (especially knowing which Component should have the state, and which ones should just read props) \- "be lazy!" (know which code is running statically (pure) and which is truly per instance (uses the word \`this\` in the function) great work! hope yall had fun doing it and keep at er 
sorry about the formatting, I thought I was writing markdown, but reddit changed how that works apparently
just wrap it in a function and call it whenever u want?
According to the spec, there are *Primitive types* (undefined, null, String, Boolean, Number and Symbol), and there are *Object Types* (Object, Function). An object is any javascript object (including array), a function is "member of the Object type that may be invoked as a subroutine". Any member of the Object Type is passed by reference, any member of a Primitive type is passed by value.
I like Elm a lot, especially The Elm Architecture. So I created a JavaScript library that lets me use Elm patterns in JavaScript. You can learn about it here: https://composi.github.io. I also use a system for type linting my JavaScript using TypeScript. I don't write TypeScript. I write JavaScript, but when using VSCode, TypeScript runs in the background live checking the types I've defined with JSDoc comments. This gives me great Intellisense, code completion, definition peak, symbol renaming, parameter hints, and most importantly, catches type errors. You can learn how to do this in this article: https://medium.com/@trukrs/type-safe-javascript-with-jsdoc-7a2a63209b76
BTW you said there are 6 but only listed 5. You forgot null.
interesting idea. i guess the next logical step is to take existing typescript defs and generate some subset of possible values and auto-create fuzzing tests, too.
Are you talking about pointers? It sounds like what you're describing anyway, since anytime you declare two variables that are string literals, even if the two strings are identical, the variables themselves point to two different strings in memory. 
Absolutely right, thanks.
&gt; A function seems to meet that criteria. I won't jump through hoops just because JS has this extremely unusual quirk that it allows the redeclaration of functions. Redeclaring a function is an error in TS. I also do get a SyntaxError in plain JS if I try to redeclare a function inside a module (a JS file which imports and/or exports other modules). It doesn't matter if it's at the top-level or not. It's a syntax error either way. Chrome: Uncaught SyntaxError: Identifier 'xxx' has already been declared Firefox: SyntaxError: redeclaration of function xxx Seems like this one of those early error checks they added to modules. It's not a feature of strict mode. So... yea... seems like doing that entire const assignment stuff is entirely pointless. You're just trading one type of SyntaxError for a different one.
There's no name for it in javascript, because all Objects (and Arrays) are by reference. So there's no case where an Object / Array is not by reference, so there's no need to name or not name it. There are various ways, however, of cloning off Objects / Arrays, if for example, you want to create a new version of it that does not retain the reference to the original. Using the spread operator to copy an Array is a good example of this.
Awesome feedback. Props to you.
That'd be pretty great + probably possible due to prop-sets already being typed!
down? the link in demo returns this ```An error occurred in the application and your page could not be served. If you are the application owner, [check your logs for details](https://devcenter.heroku.com/articles/logging#view-logs). You can do this from the Heroku CLI with the command heroku logs --tail ```
Much real life scenario such applicable skill
"This is cool, but what the world really needs is another React component."
It is not too hard to get to a point in react where you are playing with magic. Just saying...
please format it. &amp;#x200B; its unseemly. just click "switch to markdown", edit your post, and click save.
Are you sure about String being a primitive type? I'd assume it's implemented as a reference type.
So many projects have failed because of the lack of this crucial skill ... not.
## 🔥🔥🔥React-Redux v7 beta is out!🔥🔥🔥 We've just published our first beta of React-Redux version 7, and it should be the fastest version of React-Redux yet! Please try it out in your *production* apps, and let us know how well it works for you! We've rewritten `connect` to use hooks internally, switched back to using direct store subscriptions in components, and we're now using React's "batched updates" API to reduce re-renders. v7 is API-compatible with v6 - the major bump is primarily because we require React 16.8. We've also added a new `batch()` API you can import and call in your own code to minimize re-renders with multiple dispatches. connect and batch should work correctly in ReactDOM and React Native, and there's a new alternate entry point to use with alternate React renderers. We've tested and benchmarked, and are confident this beta is ready for you to try out in your own apps. We've got a lot of users who do things we don't know about, so if you do find an issue, please let us know here: https://github.com/reduxjs/react-redux/pull/1209
We just did this too. Took us about a month to polish some things that were a little rough on touchscreens and stuff, but it was fine. I hate the Cordova tool chain though. 
Fyi your final solution only works for your example of functions that were summing up numbers. Initalize the reduce with the parameter, and then return each function call with the current accumulator value
Will be updating current project in the morning! Thanks for maintaining such a great lib!
Dang, I couldn't try it out. It's requesting socket.io over http when the site is https so it's getting blocked
Just a quick call out. Using the spread operator or Object.assign to clone an object would only produce a shallow copy. Any object members of the object being cloned, would still reference the same objects.
You need to use http to try it
Hi /u/know_prashant, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Good point!
Thanks for actually referencing the spec. Everyone else go home, this is as canonical an answer as you can get.
most likely a interviewer that has barely any practical skills and abuses interviews to feel like the "alpha" dev. this question is completely misplaced in a junior role. write it off as luck. you don't want to work there. find a place that gives you room to grow. :) for a junior, your approach is a really good direction and is cleaner than what I see daily from senior devs. 
&gt; Any member of the Object Type is passed by reference, any member of a Primitive type is passed by value. Is that sourced from the spec as well? Do you got any link?
Weird, for some reason, this post was on the main front page.
Thanks for the great work! Will try it later today. 
We did a similar strategy at a previous startup. Original app was built in Angularjs, new features were built in React. Nginx magic was used to merge/separate the apps. App state was stored in local storage. The product worked, the startup didn't.
Note that this question is very confusing to ask and answer because primitives in JavaScript are also “objects” in the sense that they can have properties and methods.
Hey, just informing you that a new version is up with your suggestion implemented :) Thanks again.
Hey, just informing you that a new version is up with your suggestion implemented :) Thanks again.
Hey, just informing you that a new version is up with your suggestion implemented :) (only the flex property for now) Thanks again.
Does the spec actually say "pass by reference"? Because JavaScript always does pass by value, only that the value is sometimes a reference. The easiest check you can make is to try to write a swap function: function swap(a, b) { //... } let a = 1 let b = 2 swap(a, b) This only works when the references a and b are passed into the function. JavaScript does not work this way, because only the values inside a and b are passed into the function. And there is no way to change what the what the outside variables refer to. (you can change the mutate the value if it's a mutable) 
“Application strangulation” how many times did you go live with part old part new?
Hey, just informing you that a new version is up with your suggestion implemented :) Thank you.
The original app had been around for about 4 years, the React hybrid for about half a year.
How many go lives, with an incremental shift from old to new?
Just played it. Good idea but ceartainly not for mobile. Check out my game at https://github.com/ObradovicNikola/SaveTheGalaxy (It's in python tho) 
By go lives, do you mean deploys? More or less once a week.
Awesome - that’s the blog entry I’d like to read!
From my experience this is rubbish. Some people try to be over smart specially during interviews. But anyways learning advanced stuff will not harm. I have been asked this multiple times. You can try this [https://javascript.info/currying-partials](https://javascript.info/currying-partials)
There's a concept of passing by reference (or in this case, assignment by reference), which would work roughly like this (a more usual example would use passing function arguments, but assignment is simpler for illustration): var a = 1; var b = a; b = 2; console.log(a); // would print out 2, because a and b would be the same reference and would change together This is not how JavaScript works, because references in JavaScript are immutable (can't be changed), so JavaScript has references, but doesn't have passing by reference; instead, JavaScript passes references (and everything else) by value, which can be thought of as copying the values when passing. There are few modern languages that actually have passing by reference, the main example being C++. The confusion that JavaScript would have passing by reference comes from a specific type of value (object) normally being mutable (meaning that it can be changed), so passing references to mutable values gets mistaken as passing by reference. To somewhat confuse this further, there's a related concept of value and reference types, which refers to types either having their own memory or pointing to a shared memory. Value vs reference types is essentially an implementation detail, and a more broad and interesting concept is *value semantics*, which I'd really recommend everyone [listening to this talk by Rich Hickey](https://www.youtube.com/watch?v=-6BsiVyC1kM) on.
Arrays are objects, so making a distinction between the two is kind of misleading.
JavaScript has references, but the references are passed by value. Passing by reference is a more narrow concept than just passing references, and few languages have passing by reference (like C++).
Are you sure your browser didn't force https?
You surely deserve this gold! We did not even expect to get such a detailed feedback :D We are glad that you were interested in our project and had the time to peek at source code. Our plans are to rewrite the game in a few months and your tips will be a huge help. Thank you very much! 
You dodged a bullet. It's not fun working for unreasonable people.
This is no joke 
I'm pretty sure everything in JS is actually passed by value. When considering objects the value itself is just a reference to the underlying object. That also holds true for arrays as in JS arrays are objects. To answert your question: It's most likely just the concept of referencing when working with non-primitive datatypes in JS.
That's simply not true. For example (typeof "whatever") simply results string and not an object. Surely, you could run something like this: "whatever".concat(" is good") - but in reality JS really creates a new string object of the string "whatever" and then all string methods are available, and after processing it returns a string datatype.
Don't mistake "junior" for beginniner. Junior is someone who already has relative work experience and understands the rules, just have trouble applying them in correct manner. Although some people stay in that level for longer. So yes. As a junior you should understand currying. 
thats awesome ! my friend and I just started developing a multiplayer arcade game with react as frontend! yeah I can imagine the ride! have you thought to add reactnative for mobile ? 
My knowledge of NATS is limited so take this with a pinch of salt, but NATS is a pub/sub system for messaging. This kind of system could be built *on top of* WS, but fundamentally WS is just a two way connection stream. Hexnut is a lightweight framework for node that let's you apply structure to communication between client and server. You could choose to make that structure Pub/Sub, but you could also choose to implement protocol oriented communication using something like [hexnut-sequence](https://github.com/francisrstokes/hexnut-sequence). Comparing with another solution - like socket.io for example - I'd say socket.io is closer to NATS than to Hexnut. 
Would you consider adding public hooks like \`useMapState\` and \`useDispatch\`? 
It looks like your second solution is _wrong_, at least according to the requirements. const functionCurrying = function(...fns) { return (param) =&gt; { return fns.reduceRight( (partial, currentFn) =&gt; { return currentFn(partial); }, param); }; } I've changed some names, sorry. I tried to keep that to a minimum. The _problems_ are: - When you collect `fns` (`args` in your version) with `...` that already gives you an Array. You don't need `Array.from`. - `reduceRight` instead of `reverse` + `reduce`. Not really an _error_ but preferable. - You completely changed the way it worked from the first version to the second. In the second one, instead of passing the _result_ to the next function, you're calling each function with the original parameter and simply getting the sum of all the results. - Not only that, but you have a _bug_, where instead of calling `current` (`currentFn` in my version) -the function of the current iteration-, you're trying to call `args` -the whole array of functions- as a function. In an unrelated note, the question doesn't really seem to be about currying. I didn't change the name of your function to avoid adding more noise, but I would suggest calling it `compose`. Finally, no, I wouldn't consider this an appropriate question for a _junior_ position, unless there were special circumstances.
I think we will use React Native in the future, but not in this particular project. Our focus will be to make the game experience mobile friendly in the browser. We wish you good luck in your development! Plan your work wisely and please send me a link when it's ready :) There is a list of connected users under the search already. It does not show your nickname, just other online player's.
You are the man
I just want to say thank you to both of your for a civil and enlightening conversation that I got to read on my journey to work.
@acemark Tried it and it looks like that connect is not behaving the same way as in v6. The main issue is with react-router@3 which is testing React.isValidElement in ReactContext file amd this check is returning false. Maybe the reason is that the connected component is called later than before thus the check call resolves to false always?
Great work... I always felt Javascript testing had a lot of gaps.
I don't think you have to look too far to find better designed languages than JavaScript, so I think that the requirement for wide support and backwards compability is a pretty important factor in the difficulty of replacing it. The companies who could make a big enough push to replace it have absolutely zero interest in doing so since they rely on JS apps to make a shitton of cash
you think "game" is without definitions? how are we supposed to recommend antyhing if you wont even tell what kind of game you're making? also this question should be googled in the first place also [lmgtfy](http://lmgtfy.com/?q=javascript+game+engine)
thanx! yeah we are in planning phase ! lots of stuffs :) for the users list , yes it didnt show ! would be better I think to write there something like waiting for players.. or no players .. in different font color :) 
Good idea, I noted it
We migrated a project similarly, but used compatibility layers to allow react to run in angularjs, and angularjs to run in react. We could then migrate individual components. It was rather easy.
Hey, I enjoyed it too! Thanks for being cool. I do have one or two final things, and I swear I'll shut up: &gt; [on currying] Not at all - that's absolutely idiomatic modern JS. It's absolutely useful (elegant, even) for closing over something, but I have yet to see someone write every single function in this way for the purposes of currying. I guess the point I was making is that if you don't, you can't just grab any old function and expect it to work as a curried partial. You can, of course, do ad-hoc currying as well, but that comes with its own syntactic overhead. &gt; compose(addOne, multByTwo)(3); // 7 Not that composition is impossible, just that it's hard. This is true of any imperative syntax, not just JavaScript. To compose 10 arithmetic functions like that, you'd end up with a wild-looking mess of nested calls. In Haskell, by comparison, it's routine to chain ten, twenty, even a hundred lines of code this way, or to build up libraries of functions from more primitive logic by just gluing them together. It's much easier because it's defined out-of-the box in several ways—as a traditional function, several operator functions, notably `.` (recalling the mathematical symbol ∘), and, if you squint, as syntactic sugar in something called "do-notation." It could look like this: multByTwo . addOne or this: (*2) . (+1) or any one of these: divByEight . subThree . multByTwo . addOne // Ex 1 addOne &gt;&gt;&gt; multByTwo &gt;&gt;&gt; subThree &gt;&gt;&gt; divByEight // Ex 2 someMonadicFunction &gt;=&gt; someOtherMonadicFunction // Ex 3 do // Ex 4 someMonadicFunction someBinding &lt;- someValue someOtherMonadicFunction &gt; That said, I'm also fairely confident that there are a surprising number of "blockers to FP" that you've offered that you can actually do pretty elegantly and concisely in JS that you either weren't aware of, or that you seemed to arbitrarily assume are non-idiomatic or bad form I do write JavaScript professionally; I'm more of an enthusiastic hobbyist of FP languages. JavaScript isn't alone in being frustrating for FP. I've written a lot of Python and Ruby professionally, too—Python's slightly worse, Ruby's slightly better, but all three are firmly on the middle-imperative side of the spectrum. Not having true ADTs or type systems is a killer, and what's syntactically effortless and commonplace in Haskell, like chaining dozens of functions together via composition, is often cumbersome or even prohibitively difficult in all three. Anyway, thanks for the conversation!
Relax.
Would strongly recommend https://phaser.io/ and get yourself signed up to this: https://gamedevjsweekly.com/
There's plenty of JS game engines. I've been thru a couple. Phaser is pretty robust and has detailed docs. Other than that, there's no 'best' one, that's for sure. All of them have some kind of fatal flaw that was revealed early. Pick one, get started, trip over the flaw, decide if you can live with it. 
Actually With those new apis sure 
Unity lets you publish to WebGL, and lets you program in a typed version of js called Unityscript. Might be something to consider!
You just invented the repository pattern. Which is a good thing, because you independently came up with a battle tested pattern.
I keep getting judge by noobs at work due to this idea :D
I'd recommend submitting this as an issue on GitHub
I'd try musiXmatch. It's a great music API that's also free. 1. Use [GET Matcher Track](https://english.api.rakuten.net/musixmatch.com/api/musixmatch?endpoint=53aa311be4b07e1f4ebe965f) endpoint to search for artist/song to get Album ID 2. [Get Album](https://english.api.rakuten.net/musixmatch.com/api/musixmatch?endpoint=53aa311ae4b008bb2ef84b1c) endpoint for the Album ID gives you a URL for cover art up to 800 x 800
for (let i = 0; i &lt; arr.length; i++) {console.log(arr[i])} Read about Basic loops in JS
Great post! I'd really like to hear more why you rejected Vue in this case, because it seems like an easier transition from AngularJS, while also being much more lightweight and simpler than Angular 2+, offering scoped CSS out of the box, etc. Was React Native the killer feature in this case?
[for...of](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of)
ty all
Done. [https://github.com/reduxjs/react-redux/issues/1210](https://github.com/reduxjs/react-redux/issues/1210)
I think unityscript is no longer supported.
If you don't want to use jquery: https://www.sitepoint.com/dom-manipulation-vanilla-javascript-no-jquery/ If you do: https://jquery.com
References are immutable values in JavaScript, same as primitives; what is mutable are variable bindings created with `var` or `let`, which can be reassigned to different values, and objects can be mutated via references to them. If references were mutable, `const` wouldn't work, since all it does is prevent reassignment.
Not in vanilla js. Other than that you can look for DOM manipulation and templating libraries and use those.
JavaScript primitives are not objects; they are just auto-boxed so that they could be treated as objects.
The `for...in` statement iterates over all non-Symbol, enumerable properties of an object You need to use `for...` ```javascript for (let i = 0; i &lt; arr.length; i++){ const el = arr[i] console.log(el) } ``` 
Sorry yes, bindings to references/values are mutable in JavaScript with var , let. But no one is trying to re-assign `true = “BAZ”` so I figured that was assumed. ;P
&gt; `inStock += itemList[i] + i + ', ';` 
That just prints the reference in the original array, so like it will print 1 and 4. Rather than i need it to print 1 and 2
Perhaps make instock an array then append to items to it. Then at the end you could use map and join to make the array to a string such as `instock.map(item =&gt; item + ' ' + instock.indexOf(item) + 1).join(', ')`. I'm on mobile so can't test it right now. I'll try it in an hour or so.
```javascript const itemList = [ 'Hammer', 'Drill', 'Saw', 'Chisel', 'Screwdriver', 'Brush', 'Bucket', 'Knife' ] let inStock = [] let outOfStock = [] for (let i = 0; i &lt; itemList.length; i++) { let target const el = itemList[i] if (el === 'Drill' || el === 'Screwdriver') { target = inStock } else { target = outOfStock } const index = target.length + 1 target.push(`${el} ${index}`) } alert(inStock.join(', ')) alert(outOfStock.join(', ')) ```
Where is `serviceworker` coming from? You might need to call a method attached to `serviceWorker` like [this](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app).
Oh damn! Never knew.
 console.log(whatever_i_need);
CSS formatted console logs are so wrong.
Have you tried using Javascript ?
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
You gotta remember that it's not about getting the right answer it's being able to show that you can work your way to something. At a good company the expectation isn't that you get 100% it's that you can show you understand how to solve the problems and that you can adapt as they change the problem.
// DONT DELETE THIS COMMENT, OTHERWISE THE APP BREAKS.
&gt;That was it thank you very much!
You're hired
Chooselicense,com is for baby dicks
If you use hooks, particularly useContext and useReducer, do you need Redux any more?
element.inner.HTML = "&lt;div&gt;whatever&lt;/div&gt;" Here's a little more on templating: https://wesbos.com/template-strings-html/
Will update my apps today. Unexpectedly awesome start to today. 
Is it though? He got to a solution which means the question was roughly appropriate for his skill level and only failed when he couldn't adapt it or even notice the unnecessary code in it. 
Congrats! I know you put so much thought and work into this. Really can’t wait to try it.
Hi /u/mattupham, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/OkRadio4, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/JekyDC, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/worker37, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/thewwfguy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
It certainly is important, but it can only be as powerful as advertised when you are using a statically typed language. So in Clojure it wouldn't be as beneficial, and probably wouldn't yield as many benefits in vanilla JS either. I think languages that have pattern matching can utilize it especially because of the algebraic type system around them
Hi /u/samratluitel, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/vikes2323, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/_ANiL, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/QuickQguys, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/FinnoTheSecond, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/BrandaJLandreth, this post was removed. _"It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius_ * If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). * It's ok to promote your own projects or content, as long as that's not all you do. See ["What constitutes spam?"](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) for more information. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/LambsAreStillCrying, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/idointernet, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I'm slightly confused, what is the purpose of this? In your examples I don't see any purpose to the wrapper. They're not doing anything you can't do with normal promises. &gt; What's this? &gt; Aprx is proxied wrapper object for Promise. You should describe the problem it's trying to solve, not just say what it is.
It's just me or someone else takes "in browser end-to-end encryption" as a red flag? I checked the code: [there is a encryption module](https://github.com/datash/datash/blob/602082beb7b289f63869759c28f3a454092aba3c/src/client/encryption/index.js) but it's just a wrapper around [jsencrypt package](https://npmjs.com/package/jsencrypt), which implements RSA. Encryption logic, in fact, is [in the App component](https://github.com/datash/datash/blob/602082beb7b289f63869759c28f3a454092aba3c/src/client/components/App/index.js#L186-L199). Other red flags: ninja comments, seems it don't do any integrity checks, IDs can be enumerated (as [they are just 4 digits](https://github.com/datash/datash/blob/602082beb7b289f63869759c28f3a454092aba3c/src/server/ws/index.js#L136)), [IDs aren't validated](https://github.com/datash/datash/blob/602082beb7b289f63869759c28f3a454092aba3c/src/server/ws/index.js#L92-L94) and Google Analytics is enabled (I don't think it's good for privacy).
Who builds an MVP in an already outdated framework, knowing they will have to migrate it, then waits two years to migrate it?
Will `&lt;div class="modal is-active"&gt;` become `&lt;div class="is-active modal"&gt;`?
True, since bootstrap 4.0 with all the "flex align-center justify-between" crap, I guess something like this might be needed in the future xD
Other than readability, most of the times you don't really want your classes in "alphablyat order" `&lt;div class="modal is-active"&gt;`
Discord itself is also built in JS :fire:
Yes, we plan to work on this after v7 is done. See this open issue: [#1179: Discussion: Potential hooks API design](https://github.com/reduxjs/react-redux/issues/1179)
Sure! `useReducer` is just another form of local component state. Yes, `useContext` does make it easier to use a component's state as data for a particular subtree, but it only works for that subtree. This _could_ be the whole app if you put that at the root, but that's basically it. `useReducer` also doesn't let you use middleware or deal with side effects. See my post [Redux - Not Dead Yet!](https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/) for more thoughts on this.
For this reason you can define your desired order. For my recent projects I start with c- for BEM then common foundation classes and then I order alphabetical. 
Oh how wise Confucius was! Such a visionary.
I like the general idea of what you are trying to do here, and I do think that your API is cleaner than some of the current options provided by Lodash/Underscore. Since it works based on the iterator symbol prop, will it work for an object that supplies its own iterator? (Ie. Will it use the object's own iterator in place of the default one you've written?)
There really isn't any logic to add, you just use URLSearchParams and grab the values. It's a 1 liner. IMO that is so much more effective than bloating the library with something the browser can do itself. 
javascript is so fun, you get to change all these frameworks...
Formatted: firstly, good job guys, have a cigar... the game room mechanic was really easy to use and despite not having any aliens to shoot, we had some fun playing it! it took us like, 5 minutes to determine the goal was to guess more letters than the opponent (for a while I was guessing bad letters on purpose, as I didn't understand the incentive structure) --&gt; easy solution, make a scoreboard for currentLettersGuessedPerPlayer the card definitions didn't always match the actual word, and sometimes (mobile, long definition) they are impossible to close also some of the cards were too powerful (2 letters + free letter = auto win) and some sucked (blocking / block blocking / peeking added nothing to the experience) also, "enemy cards" section takes up more of the screen than the letters... which is more important? this, from ./src/Shared/Functions.js const setScore = ({ player, game = null, setTitle }) =&gt; { let me = game.playerSockets.filter(p =&gt; { return p.socketId === player.socketId })[0] let enemy = game.playerSockets.filter(p =&gt; { return p.socketId !== player.socketId })[0] let score = game.score setTitle({ score: { me: me.nickname, myScore: score[me.socketId], enemy: enemy.nickname, enemyScore: score[enemy.socketId] } })} could be rewritten as ​ const setScore = ({ { socketId }, { playerSockets = [], score }={}, setTitle=(()=&gt;0) }) =&gt; { let me = playerSockets.find(p =&gt; p.socketId === player.socketId) || {}; let enemy = playerSockets.find(p =&gt; p.socketId !== player.socketId) || {}; setTitle({ score: { me: me.nickname, myScore: score[me.socketId], enemy: enemy.nickname, enemyScore: score[enemy.socketId] } })} this sets more defaults, uses more destructuring, and avoids `filter ... [0]` in favour of `find` which is more human legible in ./src/App.jsx (.jsx is largely 2016y) there's a mixing of non-constructor style class Whatever extends Component { state = { init: 'value' } // ... } and constructor style class Whateva extends Component { constructor(props){ super(props); this.state = { ido: 'what i want' }; //... } //... } so if you have babel set up for non-constructor style (ie used create-react-app), it's somewhat preferable to stick with that (apply a style guide!) the localStorage reading function(s) can be made pure (ie static, ie not called this.whatever) in fact, all of the networking logic would do better not in a Component (separation of concerns: networking &amp; user interaction) why are there two destructures from state in the render? onInvitationAccept is a function in the state.... state should be serializable nickname &amp; socketId can be saved to state, then the function is just a plain old instanceMethod onInvitationAccept = ()=&gt; this.setState({ isInvitationModal: false }, () =&gt; { socket.emit(INVITATION_ACCEPTED, { fromSocketId: this.state.opponentSocketId, to: this.state.player }) }) I'm not a huge fan of how you're passing props to the routeComponents, but there isn't much really a better way I suppose in ./src/Game/Cards/Cards.js, these functions are basically almost Redux style reducers! why not use redux? seems like it'd be a win here in ./src/Game/Words/Words.js let guessedKeys = [] for (let j = 0; j &lt; guessed.length; j++) { guessedKeys.push(guessed[j].key) } would be more succinct as const guessedKeys = guessed.map( g=&gt; g.key ); .map is usually a win now in ./src/Components/Game.jsx, you're taking `game` as a prop, putting it into state (not advised by react's official docs) then mixing use of `props.game` and `state.game`... also why is there socket logic here? seems like that should all be put in one place, then you can use the props passed into this component to trigger game state changes using componentDidUpdate ---- I have to catch a flight now or I'd keep reading, if you've made it this far: congrats - you've built something very impressive here! I think you hit the nail on the head about larger projects being more complicated to maintain... the best solutions I can point you towards for that are: - "be consistent" (aka curate and follow a styleguide religiously) - "separate concerns" (it should be easy to know which file a feature is in by knowing the feature, and it should be easy to know which file I'm reading by reading what the code does) - "if you got em, smoke em!" (react gives you a lot of super powerful, somewhat subtle features... the more you write react, the better use you'll find for all the work react wants to do for you (especially knowing which Component should have the state, and which ones should just read props) - "be lazy!" (know which code is running statically (pure) and which is truly per instance (uses the word `this` in the function) great work! hope yall had fun doing it and keep at er
Yes if you don't use the custom order functionality. 
Very clean, I like it.
Can you give me some examples of problems that Redux solves better (and maybe how they're better) or maybe even just some patterns that Redux makes unnecessary? I'm not trying to be obtuse, but we're working on a new React project at work, and we've had the juniors laying out screens for a couple weeks, so we're roughly at the point where we have to decide whether or not to use Redux. The team is deep in heated debate, and I hope that I haven't tipped my hand for my stance on the issue, because I'm trying to get some fair analysis from an obvious expert.
:( I just need help ugh 
It creates RSA keys and stores on user browser, doesn't upload or share, so you called it a red flag? Can you please explain it ? I think you didn't walkthrough the whole code, the received data(encrypted) are only possible to decrypt with correct private key and that stores on recipient browser, so it does the integrity job. Why do you think that there is a privacy issue using google analytics? and for every session a unique ID is generated (now 4 digits), what do you mean by ID is not validated?
Great recommendations!
I seems like some of these endpoints can be combined. You probably don't need separate endpoints for /delete and /update. Instead just use a different HTTP method. I'll use /board as an example. &amp;#x200B; GET /board (this would return everything for board) DELETE /board (this would do whatever /board/delete is currently doing) PUT /board (this would do whatever /board/update is currently doing) GET /board/1 (this would return an index for board) &amp;#x200B; Then I would say you can store the api hostname in a .env file for something because presumably this would be different for each environment and the paths can just be in your model or in the code that is making the actual request. &amp;#x200B; // .env API\_HOST=http://api.software.test &amp;#x200B; // model.js axios.get(\`${process.env.API\_HOST}/board\`) &amp;#x200B; 
This is very interesting. However, when I try to make a web version I get an error : git clone https://github.com/cubbit/enigma.git cd enigma npm install everything seem to go alright until node-gyp rebuild make: Entering directory `/var/www/html/valg/lib/enigma/build' ACTION Prepare dependencies /var/www/html/valg/lib/enigma/dependencies Error: Unsupported arch: ia32 - linux at dependencies (/var/www/html/valg/lib/enigma/scripts/node/dependencies.js:70:27) at Object.&lt;anonymous&gt; (/var/www/html/valg/lib/enigma/scripts/node/dependencies.js:106:3) at Module._compile (module.js:653:30) at Object.Module._extensions..js (module.js:664:10) at Module.load (module.js:566:32) at tryModuleLoad (module.js:506:12) at Function.Module._load (module.js:498:3) at Function.Module.runMain (module.js:694:10) at startup (bootstrap_node.js:204:16) at bootstrap_node.js:625:3 Have no clou, does anybody know how to solve this?
Disclaimer: I'm the main (only?) maintainer of [this library](https://github.com/qgustavor/mega). With integrity I say it don't use any kind of message authentication codes, like HMACs or Poly1305. As you're using WebSocket over TLS there's already integrity checks, so only the server, which handles data which is not encrypted by TLS, can mess with the data. Of course it's not likely that the server messes with data, but MEGA does that and modern libraries like [TweetNaCl](https://tweetnacl.js.org/) and [Tink](https://github.com/google/tink) support authenticated encryption by default. &gt; what do you mean by ID is not validated? Unless I got it wrong it just checks if the ID exists (`connMap.has(cachedClientId)`) then assigns the connection to the map (`connMap.set(clientId, [wsConn])`) so someone can connect as other user by setting its `cachedClientId` as the same as other user. They can't access data because they don't have the private key, but can sent files as other users. About Google Analytics: some people, like me, don't like Google. What if your project grows, get used for important things then they change their code to steal keys? They can do that, right? After all, the private key can be accessed on localStorage quite easy.
Seems to be mostly sugar to hoist `await`s to the beginning of the expression // vanilla const things = (await (await fetch('/things').json())).map(thing =&gt; thing.id) // aprx const things = await aprx(fetch('/things')).json().map(thing =&gt; thing.id)
so are hooks better performance than classes? 
lol I'm glad I'm not the only one. I've built and released something like 6 Cordova apps over the past 5 years. I figured the tooling would have improved by now, but it's still hot garbage. The docs can be equally frustrating, and since its an Apache project, contributions and issues have to go through Apache's Jira. Though I tried React Native on a project about a year ago, and it left me crawling back to Cordova because the experience was so painful (random crashes, poor performance, 3-day-long-hair-pulling upgrades, native plugin chaos, no library diversity, etc). It seems the RN team has been putting in a lot of effort though, so I'm hopeful the experience has improved.
You don't even need hooks. Just split your state between more than a few layers, and sprinkle HOCs over all your components. Or if you prefer the redux kind of magic: start your project with no less than a dozen plugins and write your own custom higher order function that produces a reducer function.
I'm glad you liked the post! I'm personally a fan of Vue, it's very well documented, not much of a learning curve and much lighter than the other frameworks. We decided React because it has a larger community and talent pool for us to stick with it long term. Plus our team had prior experience with it already.
We did... we meant to migrate sooner but AngularJS was good enough at the time, until our app grew larger.
Hi /u/dei4n, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yes, you are right that it checks cachedClientId but It also checks cachedSessionId which plays a very important role here, and yes I agree with one thing that anyone might enumerate the client id easily as it is just a 4 digit number, and I used it as it is short and easily memorable, but I will try to find out a better solution in future on that. You pointed out something about Google analytics who might change their analytics code to change Datash's user private key, come on 😄, though your point is valid.
How does this library compare to RxJS?
That's fair, since support for the spread operator was added to Objects in the 2018 spec. But there are differences between Arrays and Objects, for example, Objects are not iterable.
you should make it social, and let people share their circles on all their profiles, and compete with friends for the roundest one, and have a gallery with the most popular circles each week. &amp;#x200B;
Is this just syntactic sugar for various Array methods, or does this provide some new functionality? Just looking at the example it's all stuff that could be done with `sort`, `map`, `reduce`, etc. Not that there's anything wrong with that. Just curious if I'm missing anything.
?
 import { from } from "fromfrom"; 🤣
It's basically lodash's chaining without support for older browsers.
That's an "apples and oranges" question. The first aspect is, _function components_ vs classes. Function components have a bit less overhead than classes do. Not much, but there's fewer things to do when updating a class. The real improvements here are switching back to direct subscriptions for handling store updates, and making use of React's update batching too.
Some reasons to consider using Redux: - Logic you might want to share between apps on different platforms - A preference for having more logic _outside_ the React component tree, especially related to side effects - Keeping state available during Hot Module Reloading (component lose state when recreated) - The Redux DevTools - The tons of tools in the Redux ecosystem - Centralizing things like data flow, request handling, and logging But these are really the same basic reasons that have always existed for using Redux - see the Redux FAQ entries on ["When should I use Redux?"](https://redux.js.org/faq/general#when-should-i-use-redux) and ["How should I decide what state goes in Redux?"](https://redux.js.org/faq/organizing-state#do-i-have-to-put-all-my-state-into-redux-should-i-ever-use-reacts-setstate). I _will_ specifically put out a sales pitch for our new Redux Starter Kit package. It includes utilities to simplify several common Redux use cases, including store setup, defining reducers, immutable update logic, and even creating entire "slices" of state at once without writing any action creators or action types by hand. It also adds some built-in checks for things like accidental mutation during development. Check it out and see how much it helps! https://redux-starter-kit.js.org
Makes sense. I'm a Vue developer, who wanted to try React for a while, mostly for that reason - its popularity and large English-speaking community. Thanks!
Pretty cool, have a Star! I will probably give this a test run soon. Adding it to my to-do list.
This is really neat, but I think I'm going to stick to ramda pipes for now just because they're so flexible
Got 97% on first try !
RxJs is a better alternative to LINQ and has a JavaScript and TypeScript version already, as well as many other languages. 
Well, [there are some people that avoid Google](/r/Android/comments/4dlbog/til_google_knows_when_youve_stopped_using_their/), many want privacy. There are alternatives to Google Analytics, you could try some. By the way, taking the red flags talk aside, did you tried WebRTC? Some people don't like that (because it can be used to get internal IP addresses) but in the other hand it allows transferring data directly between browsers without a third party server (except for signalling and hosting).
Just for fun - a `reduce` version golfed a lil const B = b =&gt; [...b].reduce( (s, c) =&gt; "[({".includes(c) || ("])}".includes(c) &amp;&amp; c !== { "[": "]", "{": "}", "(": ")" }[s.pop()]) ? [...s, c] : s, [] ).length === 0 
Yaa, I was thinking about that, I would definitely try to integrate it if it has potential on it.
this alone makes this library worth using
ill get right on that
Ixjs*
In case anyone's wondering, this turned out to be an issue with React-Router 3. It's no longer maintained, and so it hasn't been updated to recognize newer component types like `React.memo()` (which we now use in React-Redux).
Thanks for the reply. So I guess we will have to move to new react router. Not thrilled about that tbh :D Thanks anyway for the good work :) 
It does lazy execution which is obviously different from the Array methods which execute immediately.
Looks good. How long is the talk?
thanks for the reply! It's gonna be around one hour plus Q&amp;A session ;) not too long to become boring
How is it better?
How is it going to work? Will you focus on professional career, web development, both or etc?
Hi and thank you for your comment. The library does indeed work with any input data that implements the iterator protocol, i.e. has a Symbol.iterator property. If the given object implements its own iterator that will be used.
Pattern matching is awesome in elixir, which is a dynamically typed language. Though Elixir (and Erlang) is unique in a lot of ways
Like /u/hkdigital mentioned, unlike array methods fromfrom uses lazy evaluation and pipelining, which means each item is “pulled” through the entire pipeline one item at a time. With array methods each intermediate method is executed for the whole array, before moving on to the next. See the blog post for more details. Another difference is that it has many methods that array doesn’t have, like for example .take(), .skip(), .groupBy() or .sortBy() which can followed with .thenBy(), etc. Of course you could do many of these with .reduce(), but personally I find these more readable, as you can immediately see the intent. And while array does have many of these methods, Objects, Sets and Maps don’t. fromfrom supports all these data types and more.
thank you for the question! At first, I focus on frontend professional content from the experts. If it's gonna work, I'd like to add other categories of web dev / soft skills. 
Joins?
holy carp! Wes (co-author) was one of my groomsmen at my first wedding! thanks for the link!
Huh! I heard about Elixir/Erlang before, but I didn't know that! Thanks for letting me know, I'll look into this
It's a generalized functional stream processing library, and LINQ is a much smaller subset of operations on enumerables.
It's good to see others getting out there to scream about performance from the rooftops. All the best, man! I'm doing the same thing with my team in the agency world, trying to turn the tide back to sanity and pragmatism (e.g., performance-focused) in the industry and am starting up a consulting arm exactly to this effect.
thanks for sharing your thoughts, feel the same! Even though I'm a woman, wish both of us all the best :) 
My bad. :) All the best to you!
YOU MAKE ME FILL OUT A FORM WITH PERSONAL INFO THEN ASK FOR PAYMENT AFTER. If there was a pricing bit before I woould be more likely inclined to sign up, but very misleading.
OMG, sorry for misleading! that was not the goal! I'll think through to make changes
I may be wrong, but i seem to remember that gulp tasks are run in reverse order, so for your production tasks, clean-css runs first and default runs last. So i'm guessing default task is overwriting the work done by clean and concat tasks?
Thanks for the feedback! I actually came across `gulp.series()`, but it is only good with gulp 4.0.0, and the `gulpfile` I posted is using 3.9.0, so I'm currently translating from 3.9 - 4.0.0! 
Surely RxJS primary use case is dealing with streams of events - a better comparison would be Ramda IMO
Project Page (?): https://github.com/jfet97/csp *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yes, but I've linked the documentation.
Groovy, thanks for the followup!
Again, it's not about grabbing the values. It's about having components rerender on URL changes and all that comes with. Highly recommend reading that issue
Hi /u/tarun1475, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I'd rather do `.filter(x =&gt; x)`, personally. Shorter and doesn't rely on a somewhat obscure API. 
There is nothing that mentions pricing ( except for the FAQ Refundable question ) until after I sign up. I feel like I got got. How did you come up with $9.95? It also says that is the price for the first talk, what is the cost going to be after the first talk?
Thanks :). Let me know if you have any problems/feedback. Happy to help and fix!
Nice - seems like a great way to quickly spin up a product idea
It would help! I mean if the quality is there then I wont mind paying. Its just I assumed it was a free talk due to just launching. Best of luck :)
Looks awesome. Love how simple and to the point you are in the readme. As for the suze of the library, is this tree-shakeable so you can only include the transforms you need? Could you comment on roughly the min gzipped size if you include the most basic transforms say, just the `.filter` transform?
Is this from the same brilliant minds that brought us the high performance gmail rework? 
You have typos in your production tasks array `"clean-js"/*` and `"clean-css"*/` Also, when migrating to Gulp v4 you'll need to be aware of the new requirement for **[signaling task completion](https://gulpjs.com/docs/en/getting-started/async-completion)**.
This chart shows that jQuery is the most popular? And vanilla JS isn’t a library or a framework...
Not sure why you’re being downvoted, but you’re right. IxJS is the iterable and async iterable version of RxJS with mostly the same API. If anything this library is competing with IxJS, however that project seems to have non-existent docs and no direction so I welcome this alternative. 
WTF are you even talking about? Your link does not support the claim in your title, regardless of you knowing that "vanillajs" is a joke or not.
RxJS is great for async pipelines, but I’d never use for synchronous data processing even though it’s technically possible. Best tool for the job kind of situation
lol, people don't realize that none=vanillajs and can't read or something... "This report shows the historical trends in the usage of JavaScript libraries since March 2018." https://w3techs.com/diagram/history_overview/javascript_library/all/m
it is fair to include "none" when looking at what is in use IMHO.
It exactly supports the title though... 
“None” is not a framework...it’s just JavaScript...what point are you even trying to make?
perspective.
Similar but different. An important side note is that RxJS is one of many reactive extensions (RX) implementations with other including RxCPP, RXJava, and Rxetc... Out of the many implementations RxJS is by far one of the most popular due to async nature of JavaScript. Because us JS developers need to break up our code in all sorts of weird ways for any io operation, we need better primitives to handle these common cases. RxJS is one good answer to build declarative async data pipelines. Now were fromfrom comes into play is if you want a declarative data pipeline but it doesn’t need to be async. Say you have a complex json payload from a third-party. fromfrom allows you to aggregate and transform the data into the result shape you need in an easy to understand fashion. In this case neither library competes with the other. 
Ivan, I signed up for your talk but would suggest that you make the first talk (which tends to be introductory anyway) free. I don't think that many people are going to pay you 10 bucks without seeing something first. 
[removed]
&gt; It's also true to functional roots and doesn't rename things to ridiculous SQL names (ex. Select should be map). Fromfrom appears to use the names you'd expect, not the SQL names. ie, map is map, filter is filter, not Select. https://tomi.github.io/fromfrom/api/classes/orderedsequence.html#map
The methodology is unclear. "None" could in theory mean "no dependencies", but it is more likely to mean "did not use any of the 44 libraries we check for". Honestly I doubt 25% of the websites out there use literally zero dependencies. Maybe if it's including a ton of archived pages from the 90's or something.
I dont think you read my comment as it was intended
Did you even read my comment?
#1 piece of feedback - don't use gulp. It's dead. Use webpack instead.
What are your thoughts on grunt then? 
Identical, even worse.
Appreciate the honest feedback!
a fair consideration, they have a link to their methodology here: https://w3techs.com/technologies/details/cp-javascript/all/all basically it is the top 10 million websites being analysed.
A reminder for what? Take a look on job boards if you want to know what's relevant and good luck with only vanillajs if you seek a JavaScript role. 
Isn’t this just common sense though? The vast majority of websites are just content sites, blogs, Wordpress sites etc. This is not the area these frameworks are providing value.
well that is questionable though, I mean I go to indeed and search the US for javascript and I get 11456 jobs, where as if I search for angular I get 4500. And if I search for react, I get a lot of noise. If I search for react js I get 1960. There are certainly a lot of variables, and no metric is going to be conclusive though. 
JavaScript is a parent term for all things JS related, including React, Angular etc, so of course it brings back more results. Try finding jobs, even just a single one, that requires just plain vanilla JS. 
I have one, what are you even talking about?
yarn can do that &amp;#x200B; [https://yarnpkg.com/en/docs/cli/licenses#toc-yarn-licenses-generate-disclaimer](https://yarnpkg.com/en/docs/cli/licenses#toc-yarn-licenses-generate-disclaimer)
This does not explain whether "None" means vanilla JS or not. I suspect not.
it's actually more efficient to use RXJS for synchronous data if the following conditions are met: - You need to apply non-trivial transformations over the entire data set(ie. `map`, `filter`) - Your data set is enormous(&gt;200k elements) that is because calling the default JS functions over an array creates a new array, and that quickly becomes super expensive if you need to call multiple `map`s and `filter`s over that gigantic array. However, RXJS defines the operators before the data is processed and so it will only need to iterate over that data once - with the overhead of RXJS itself. It's a super niche use case, but it's nice to know that it is a way to use it.
none is equivalent to vanillajs IMHO, syntactically, but I can see your interpretation, could possibly be a lot of things in the &lt;0.1% category or something that aren't in the top 20. And those "none" sites might make trivial or they might be actually interesting. I mean even the common frameworks started with people just doing javascript and deciding to publish what they wrote for themselves.
The question is, how did they run their test? Testing for vanilla JS means a very specific thing: they would have had to add an _extra_ test to make sure no third party code of any kind was imported in any way. How would they even do that? What if it was some obscure library they never heard of packaged with the website code in one minified JS file? On the other hand, if "None" means "None of the 44 libraries we test for were present", then it is just the else condition on whatever test they are already running.
Could you elaborate on how RxJS would not iterate over the data more than once? To my understanding, if you need a map and a filter you will need to iterate twice, with or without RxJS. I know RxJS is lazy but I don't see how it solves this issue.
I agree, none probably means a lot more than "vanillajs" in this context. And I think I have conceded the point. Though it is still something to consider, as just looking at projects on github or internet questions (or even job searches) doesn't really tell the whole story either.
Thanks, looks very useful, but I don't use Yarn.
What is tree shaking?
Interesting - so you are writing ES5 directly into JS files and using only standard APIs? Fair enough. However, my point was about job boards and the challenge to produce one "vanillajs" job from any board is still open. 
well, I don't always use "buzzword friendly" libraries. I have on occasion though, but none of it is a "requirement". And there is no indication of how much hand rolled vs library provided functionality is in any of the metrics anywhere. ES6 is ubiquitous enough these days that I don't mind telling folks to go away with the ancient or oddball browsers though. 
Linq does this too. Well maybe not this library (haven't looked too close yet), but in C#, yes. You can do this in ramda as well. Just use transducers.
Not sure about RxJS (and I doubt it's more efficient than some other ways of doing this same thing), but you iterate once by doing this: 1. get the first element 1. apply the mapping function 1. check the result of the filter predicate. if true, yield to the next step. if false, start over at step #1. You wouldn't really see any gains unless you also had something like `.take(10)` to only grab the first 10 elements.
I mean, you could just install yarn run `yarn install` and then run the command. Could even do it in a separately cloned repo if you're concerned about the yarn.lock
I'm a data guy by trade and am wondering what is the use case for this (and other similar mentioned tools) when the same can be done at the set level within the database instead of row by row. &amp;#x200B; Are the data arrays manipulated by this and other libraries not from a database? Is it to reduce back and forth from server/client and just do any data filtering client-side? Just trying to see where this would fit in my toolbox. Thanks in advance :\]
Awesome work! I think it's funny because I've been working on [implementing Java 8 Streams in JS](https://github.com/noamichael/downstream-js) for the past week, which is basically the same thing as LINQ. I don't intend on doing anything with it as I was just curious about how I would go about writing a pipeline myself. I'll be looking through your source later to see how you handled everything.
The palpable irony of hard flunking UX when attempting to set up a Front End Web Dev education session.
1 piece of feedback - webpack will be replaced the same way gulp will be replaced. don't fall for flavor of the month.
&gt; A fullstack JS library you weren't kidding! i'm actually a bit terrified to install this. "dependencies": { "@babel/cli": "^7.2.3", "@babel/core": "^7.2.2", "@babel/plugin-proposal-class-properties": "^7.3.0", "@babel/plugin-proposal-decorators": "^7.3.0", "@babel/plugin-proposal-pipeline-operator": "^7.3.0", "@babel/plugin-syntax-dynamic-import": "^7.2.0", "@babel/plugin-transform-runtime": "^7.2.0", "@babel/polyfill": "^7.2.5", "@babel/preset-env": "^7.3.1", "@babel/preset-react": "^7.0.0", "@babel/register": "^7.0.0", "@babel/runtime": "^7.3.1", "apollo-cache-inmemory": "^1.5.1", "apollo-client": "^2.5.1", "apollo-link": "^1.2.9", "apollo-link-context": "^1.0.15", "apollo-link-http": "^1.5.12", "apollo-local-query": "^0.3.1", "autoprefixer": "^8.3.0", "babel-eslint": "^10.0.1", "babel-loader": "^8.0.5", "babel-plugin-css-modules-transform": "^1.6.2", "babel-plugin-dynamic-import-node": "^2.2.0", "bundle-loader": "^0.5.6", "chalk": "^2.3.2", "chokidar": "^2.0.4", "connected-react-router": "^6.3.1", "cookies-js": "^1.2.3", "copy-webpack-plugin": "^4.6.0", "core-decorators": "^0.20.0", "css-hot-loader": "^1.4.3", "css-loader": "^2.1.0", "dotenv": "^5.0.1", "es6-template-strings": "^2.0.1", "eslint": "^4.19.1", "eslint-config-airbnb": "^16.1.0", "eslint-plugin-babel": "^5.2.0", "eslint-plugin-import": "^2.10.0", "eslint-plugin-jsx-a11y": "^6.0.3", "eslint-plugin-react": "^7.11.1", "file-loader": "^3.0.1", "form-data-to-object": "^0.2.0", "glob-to-regexp": "^0.4.0", "graphql": "^14.1.1", "graphql-tag": "^2.10.1", "history": "^4.7.2", "is-node": "^1.0.2", "isomorphic-fetch": "^2.2.1", "json-loader": "^0.5.7", "jsonwebtoken": "^8.4.0", "kcors": "^2.2.1", "knex": "^0.14.4", "koa": "^2.7.0", "koa-bodyparser": "^4.2.1", "koa-cookie": "^1.0.0", "koa-logger-winston": "^0.0.2", "koa-route": "^3.2.0", "koa-router": "^7.4.0", "koa-send": "^5.0.0", "koa-webpack": "^5.2.2", "loader-utils": "^1.1.0", "lodash": "^4.17.11", "lodash.mergewith": "^4.6.1", "mini-css-extract-plugin": "^0.5.0", "minimist": "^1.2.0", "node-sass": "^4.8.3", "optimize-css-assets-webpack-plugin": "^5.0.1", "path-to-regexp": "^2.2.0", "pg": "^7.8.0", "pg-connection-string": "^2.0.0", "pg-pool": "^2.0.4", "postcss-flexbugs-fixes": "^4.1.0", "postcss-loader": "^3.0.0", "postcss-scss": "^2.0.0", "postgraphile": "^4.3.2", "prop-types": "^15.6.1", "react": "^16.7.0", "react-apollo": "^2.5.2", "react-dom": "^16.7.0", "react-helmet": "^5.2.0", "react-hot-loader": "^4.6.5", "react-redux": "^6.0.0", "react-router": "^4.3.1", "react-router-dom": "^4.3.1", "redux": "^4.0.1", "redux-act": "^1.7.4", "redux-thunk": "^2.3.0", "rimraf": "^2.6.2", "sass-loader": "^7.1.0", "style-loader": "^0.23.1", "uglifyjs-webpack-plugin": "^1.2.4", "upath": "^1.1.0", "webpack": "^4.29.0", "webpack-cli": "^3.2.1", "webpack-dev-server": "^3.2.1", "winston": "^2.4.1", "workbox-webpack-plugin": "^3.6.3" },
Stuff like this is the future. I'll be playing with this. 
Does this work with SCSS being compiled down? Or would I need a specific CSS file for a given component?
True, if there is no alternative which can do the same thing, then I will do that.
As its a online service I would prefer not to pay for something that I could probably find on youtube just a different person saying it. I mean the biggest problem is that it isn't disclosed that its paid and then you get hit with 10$ to watch the first talk. Would recommend to make it more accessible or even free with ads.
I mean, I understand that you can apply both inside one iteration, but I just don't see how RxJS accomplishes that with their chaining operators. I'd like to see an example....maybe I'll check their implementation
My god I don’t miss this. Suggestion: Update your learning resources (you’re second suggestion was Grunt?). Blow your own mind and don’t use a configuration file at all with Parcel, for example. There are tried and true easier ways to accomplish what you are doing, which was fine in 2013 but not anymore. 
Perhaps if everyone is hiring for React, Angular, and Vue, and no one is hiring for jQuery, these statistics are not a good measurement for where new development is happening.
Hah this is a great call out. node_modules from a fresh install is 187MB. When zipped up (say you're using heroku or various compressed images) you could expect a 50 -&gt; 60MB deploy. The client side base bundle is somewhere around 400kb (before gzip) and around 230kb after gzip. My current production app is around 150,000 lines of code. It deploys and builds in around 7 min and the entire build image is around 120MB. I'm of 2 minds here. Part of me would like to reduce the libraries, and maybe even rewrite them more minimally within Fervor. The other part of me thinks, well perhaps this is the whole point of the npm community, why rewrite the wheel - the real need is around curation of libraries. I consider this a key role for the library, it guarantees compatibility between all these libraries and their various versions. If Fervor doesn't do it, the end developer will need to :)
That might be speculating a bit too much. It wouldn't surprise me if they were places with high turnover using the new shiny.
I have literally not seen a single job posting for jQuery in 2-3 years. You think the explanation for that is high churn on new shinies? You think 75% of web developers are jQuery guys who haven’t changed jobs in years?
So, are you also suggesting Webpack is the way to go? 
I'm saying it wouldn't surprise me. 
If you’re just dealing with js/css and staying fairly straightforward in your needs then Parcel is a game changer (coming from Grunt/Gulp). [Parcel](https://parceljs.org/) When your needs get more complex Webpack, though it comes with a learning curve, is very powerful. (I still love and use Gulp for small projects sometimes)
A lot of libraries are open source... some smaller libraries may pose a risk but for most imported scripts you can rest assured that many professional developers are parsing GitHub and looking for vulnerabilities. On top of that, I'm fairly sure they open themselves up to lawsuits if they put harmful code in their modules without disclosing it.
Thanks for your input, sir
It’s not a good sign when the examples page doesn’t work on mobile...
They close their eyes and pray. Nobody is vetting packages to make sure they’re even built by the sources you find on github, let alone verifying that the source is actually not doing anything shady. Everybody just sprints ahead at full speed with no regards for the bloat or the risk, and prays they’re not on watch when something terrible happens. Something terrible will happen, shoddy software will bring down more planes but over the cbd, or 10 thousand cars will get hacked and drive into pedestrians in a single day, and the people will turn on us. They’ll make sure the politicians make us all pay, and and we’ll all wish we hadn’t followed the herd over the cliff. 
Meh... It's Reddit. 😁. Yeah I used IxJs a lot a few years back. Never got as much love as rxjs tho unfortunately. 
safety in numbers ;)
if it is understood that it is an especially secure site, then they *should* be scanning, well, everything. Both the source code of the included stuff, on the server and the client, and monitoring for unexpected i/o events, plus other stuff.
Not for the people we kill. 
that is how "safety" in numbers works though. A relatively small percentage of the herd gets eaten by the crocodile and the rest of us find a different route (or run past while the crock is busy).
Is there a finite list of JS commands that send data out? Essentially, I'm wondering how I can mass scan libraries locally
It's terrible input. &gt; you can rest assured that many professional developers are parsing GitHub and looking for vulnerabilities That's a fairy tale, and you'd be naive to "rest assured". &gt; I'm fairly sure they open themselves up to lawsuits if they put harmful code in their modules without disclosing it Yes, because that totally stops people from doing nefarious things. Does NPM enforce KYC before allowing you to publish a package?
There isn’t going to be “one crocodile”. The entire public will turn on us all, after whatever disaster it is, when they find out how shittily we’ve been doing our jobs. 
Check out moment.js it's got all the time formatting you would ever need.
Hi /u/AxtonGTV, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thanks for the counter input. I'll take all discussions, good and bad
Do you have more information on how to do this? I feel like every dev team I've been apart of for the last 5 years has never done anything like this. We literally just build the app and thats it, if it works, deploy it. I do my best to make sure my APIs are secure in and of themselves (DB data access by user credentials + proper https headers + settings) but as for the underlying infrastructure and what its doing underneart, I don't even know. I just deploy on services like AWS ElasticBeanstalk and read my own bunyan logs What else do i need to be doing?
On the backend, you can do egress filtering to protect against unwanted data exfiltration, but there are still a ton of other ways that malicious code can ruin you. There is no solution to this problem, we are all just screwed. Even hand-auditing the source in GitHub is insufficient because so many projects use transpilers and build steps that can taint the bundled and minified output. We really need better static analysis tools to be able to validate the integrity of builds. Unfortunately, nobody seems to give a shit. People just assume that pulling in 700+ dependencies from npm to build a Hello World React app is totally normal and must be safe because Facebook does it, and surely the engineers at Facebook know what they are doing, right? It is not like they have been slammed with a veritable parade of scandals due to their cavalier indifference to privacy and security concerns. Oh, wait...
&gt; we are all just screwed I guess at least I'm not alone here...
This really interests me but I don’t know if it’s worth the time to learn
You can monitor and sandbox the runtime the code is in, or modify the runtime environment itself to prevent that, but you can't statically scan the code itself because JavaScript is too dynamic. As an example, you can ban the word `fetch`, but obfuscators can still call that function using `window[atob('ZmV0Y2g=')]()`
[removed]
Hi /u/Oririner, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Noone does that. They would just rewrite it with a trusted dev
There has been numerous attacks. One includes not activating until it detects it's being used in a bitcoin wallet or something similar. Also the source code and npm (or min idr) wasn't the same so checking the source wouldn't help. You'd have to min it yourself.
This is another succinct article that shares the way of eliminating longish imports at the top of the files. In part 2, I'll write down the specific configurations that should be set when you're about to use it along with Jest and ESlint.
Destroying T-Series with the magic of JavaScript!
You should be more concerned by using Chrome than some npm package.
An interessting blog article about this topic: https://hackernoon.com/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5
I've been running synk (https://www.npmjs.com/package/snyk) to do some scans. Could be of help.
I don't think it's possible to detect everything right away and there will be always some risk of vulnerabilities that weren't yet detect, but things are a bit better than before. You can now e.g. see alerts about known vulnerabilities when you use NPM (e.g. during \`npm install\` or \`npm audit\`). GitHub also actively scans your repositories and shows you messages if any of your dependencies may have some vulnerability. There are also startups and products dedicated to scanning and auditing the packages you use - e.g. Snyk. Also have in mind - when you write something more complex yourself there's high chance you will introduce some vulnerabilities yourself. So sometimes using some popular popular package that is heavily used and tested by others might be actually better for security.
To be fair, none of those scandals have been because of the amount of dependencies React uses. But I agree that it's a silly and dangerous.
Well you aren't but this is not a uniquely javascript problem either. Any code in any language that you didn't write, you rely on some form of trust. Say you own a company, and you employ programmers. How do you trust that an employee isn't committing nefarious code in your codebase? Yes some employ code reviews and such - but it doesn't prevent a conspiracy. You use a C++ library, again you rely on some form of trust. If you are not writing the code, you are trusting someone. You are trusting your compiler, you're trusting the browser, you are trusting the OS, and of course you are trusting the libraries you depend on. Is it an ideal way to do it? Absolutely not. Do you have any better choices? Well not really. Not yet.
This. I come back to this, every time this topic comes up. I get how it's become so much more of a discussion, w.r.t. npm-ecosystem things (this is what happens when you create a package manager that's *too* easy to use 🤣), now that average dependency-counts are in the tens-of-thousands instead of hundreds or even thousands; but … nothing's actually changed in nature, just in magnitude. /= Luckily, Adam Baldwin and the ^lift guys are making a big dent here. Look at npm audit! And GitHub's trying similar things across *several* languages. The state of things is improving, but it's unfortunately improving … slowly … so.
A strict content security policy will get you some of the way there. https://en.wikipedia.org/wiki/Content_Security_Policy You can set it to block external connections or merely report connections to an endpoint on your backend. If the 3rd party script has legitimate reasons for contacting another server then you can whitelist it - at that point you either have to trust them or audit the code. Obviously this doesn't protect you against everything, a 3rd party library could block the event loop and keep your whole app from working, but this should prevent the sending of data to other servers.
You can not really protect against such abuses. Besides libraries, there are also browsers and below them operating systems and below them a BIOS with some hardware. And then there is nowadays the whole AWS, Azure, Google Cloud, etc. stuff, which can not control at all. All those parts can do suspicious or unwanted things, even if the developers and manufacturors of those parts say, they don't. To be sure, that nothing unwanted happens with the user data, you would have to build every parts on your own from scratch. So you would have to build your own hardware, os, browser and the third party libraries from scratch. But as you know this is impossible to accomplish in a decent period of time. So, you will just have to trust, if you want to bring your product as fast as possible to your clients. It is pretty similar to how people think that the ingredients which are listed on a product, are meant to be in there and nothing else.
lots of comments here already confirming your suspicions, and this is another: i can confirm that very large enterprises have very large teams working literally around the clock monitoring anything that will spit out a log because of this, and it’s still a struggle just to get a dev team to run npm audit. you think i’m exaggerating. i’m not.
&gt; I'm fairly sure they open themselves up to lawsuits if they put harmful code in their modules without disclosing it. And yet this has happened recurrently and noone has been charged.
for lack of better words, do consumer style testing. that’s what I do with our devs. when you’re at home, open a clean browser, open the network tab, load whatever your trying to inspect, browse around like a customer would - look at things, sign up etc. - and watch the network connections. see if all incoming and outgoing data is what you expect to see. see if all hosts involved are hosts you know. that doesn’t even need to be detailed - just common sense. is the login form sending data to shady.neverseenhost.com? well I guess there’s an issue. do this once a week for 10 min with 2-3 devs and you can be fairly safe. obviously it’s not a 100% cure and you need to do your due diligence ahead do this but it’s good to have this “our shit is actually working” seal. just think about how most devs work on projects. they work from an employee perspective inside a bubble, testing all the aspects of their code but they rarely actually USE the whole product like a customer would. have your people use your own product and it will fix itself because, unspoken secret, all good devs are anal af and want broken things fixed :) (also have that go with rewards for finding issues and it almost will happen by itself)
There are some steps you can take to minimise risk e.g. Make any sign / authentication / auto sign in pages isolated with no js dependencies. You would hand over a session key to the main web app. Worse case scenario is that some polluted code hijacks a session - but the malicious code shouldn't have permanent access to the user's account. Note that you wouldn't want to handle things like password changes in the main app either.
This should answer all you questions ... [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)
I kind of agree with you but you can do at least a little more than close your eyes and pray. Such as setting up a strict CSP.
Fucking hell, no offense...
This sounds interesting, do you have any examples to reference/learn more?
I believe it would work with SCSS but there are probably a few things to keep in mind... 1). You couldn’t compile the scss into one big file and just use that for all the style info for multiple zeph components. Web components don’t really support that yet and thus zeph does not. There is some work being done in the WC world but it’s not here yet. 2). That said, if you wrote scss for each zeph component and compiled that into their own separate file, and so long as the compiled name matches the `css()` name in the component definition this should work just fine. Let me know if you try it out and if you run into issues and I’ll take a deeper look! 
Could you provide more helpful information?
You probably need to be paying someone to half-time audit all the 3rd party code your team is pulling in. And no, that's not just check it once a month, that's half their full-time job at least. Does management give two shits about paying for that? Nope? Then don't worry, your business isn't setup to worry about that level of security.
Fortunately for you ZephJS is incredibly easy to learn. You can get the basics in about 30 minutes and be writing components straight away. And of course, the more you use it the easier it gets. I find it very intuitive once you know the basics.
You don't. Lots of people got stung by [left-pad](https://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/), and the same thing can happen again, no one has taken any systemic action to stop that.
Run npm audit, snyk, or similar tools to check your dependencies for known vulnerabilities. Use something like Coverity to analyze your code (and dependencies, if you can wait ten million years) for other ones. 
Actually my company is pretty happy to throw money around but I guess most of this would fall under my duties, I was only brought on last few months and now I'm kinda the accidental tech lead despite us having a CTO already. I'm a decent dev and for the most part understand security, but don't have a deep CS degree or anything for hardcore stuff. I run npm audit and all that. Coverity sounds cool as another response mentions, will have to add that. I'm not aware exactly how to monitor the whole system for unexpected network traffic and such (I mean I see like random wordpress hack bots hitting my servers constantly but not worried about them)
&gt; surely the engineers at Facebook know what they are doing, right? Oh, so I have been supposed to use plaintext passwords for my admins....shit been doing it wrong.
People just want their paychecks, why bother with a nightmare problem like that. 
I've seen this suggested a few times but in some cases root itself may be a dynamic path for instance with shared components across solutions without using private npm repositories (for whatever reason) Do you have suggestions how one could resolve to the root of a fit repository for instance but from different locations e.g. backing out n layers is not an option? This idea works really well with a single src directory but a complicated application structure.
Most of the time they are..
I remember when this story first landed - as a JS developer (previously ruby, C# before that) many of my non-JS contemporaries like to gloat whenever they see JS getting a kicking on the internet and I was sent this story about 3 or 4 separate times. There's an inconvenient fact that the guy leaves out of it: \*he would never get away with this\*. Eventually somebody would find out and the paper trail to get back to where the data is being sent (or, who actually put in the exploit) would be pretty easy to track down. He'd have absolutely no control over how succesful the exploit would be and he's living in a dream land if he think the entire internet would be sending him requests with credit card details without anyone noticing. The law on this kind of thing carries severe penalties (serious jail time) so basically you'd need to find someone who was willing to take a massive risk. In summary (because it's reddit, and people will definately not manage to see the point I'm tring to make); &amp;#x200B; * All of what he says in that article is technically possible * Absolutely you could get an exploit into a low-level library that did all this * The assertion that nobody would notice - pure fantasy.
One example I use in class is a voting website. The purpose is to vote for candidate A or candidate B. Create an Angular.js website that sends a GET request to retrieve the vote count and a POST request to make a vote. Your Node.js Express server will supply the voting home page, where a voter can call either request. The server also creates the GET and POST services. The POST service will read/write voting data from/to a MongoDB database. That pretty much covers all the letters in M-E-A-N. Finally, look at simple tutorials for each technology (letter). You don't need much to implement this website. It's the full stack integration that matters.
Hi,There is a website called Hotstardotcom .It's built in MEAN stack. It's a streaming website. How can I build a site like that? Any suggestions are welcome.
Trust ... lol
Wow. I never thought of it this way, but your response is a cogent and sobering take on the topics of 3rd party software and security. Thanks!
Sorry man, should've read the guides.
To be fair, no one is building aviation software with npm packages. I doubt cars either.
This is really a good tip. Thanks!
&gt; we are all just screwed Later virgins 
This problem is around with any package manager type solution. Wordpress plugins are notorious for putting Analytics code in there plugin to track who’s using there app. It’s quite annoying. I always audit 3rd party code and do a network monitor to see what data streams are being initiated from the frontend. You can also check data streams on server if you have sysadmin chops, but thats why I do the code review in first place.
I like a lot about this but seems kind of wordy for single transformations. Say I wanted to group a collection by some property. First I'd have to wrap the collection in from, call groupBy and then call toArray. Whereas in lodash I would just wrap in groupBy. Might be worth using alongside lodash. Lodash for single transformations and fromfrom for anything longer 
&gt; we are all just screwed Later virgins
Nope. If it’s open sourced it’s use at your own risk for the most part. This is debatable but in general it is simply buyer beware.
Agreed. I’ve stopped using it personally. Firefox is on par and I don’t like the back channel communication chrome does to Google (or even the appearance if it).
Thank you for being nice and friendly! Appreciate it! Already preparing changes to release with the price :)
I made this: [https://github.com/sdgluck/cache-control](https://github.com/sdgluck/cache-control) Inspired by this: [https://csswizardry.com/2019/03/cache-control-for-civilians/](https://csswizardry.com/2019/03/cache-control-for-civilians/) &amp;#x200B; :)
Hey! Thanks for the feedback, totally got it! We're a bit stressed by the speed of the accelerator and really missed this point of showing the price in advance. Changing it now. We came up with this price as a test one as we need to prove the concept — that this product has value and people are willing to pay for it. If we get initial traction, we can scale and realize the initial concept we described on the main page: 2 talks per month, by subscription. Monthly price will vary around $20, I think. It might depend on speaker's fee as we want only experts to share knowledge. 
Yes. Unless you’re writing unusually high performance code or have huge collections, this matters nothing.
ha-ha :) Got the irony, but unfortunately, no — we have a real smartass :D
Don't listen to the doom and gloom in this thread. There 100% are programmatic ways to minimize risk here and there are entire companies dedicated to auditing npm packages (Snyk is the biggest). Security conscious companies monitor outgoing traffic, have tight security policies, get node_modules audited and do things like serve payment forms in isolated iframes. We also minimize dependencies to minimize risk. Those who say that "No one is doing anything" should speak for themselves. Some of us do take this problem seriously and a lot can be done. The easiest thing you can do as a single developer is to set a security policy regarding outgoing traffic, run npm audit often and refuse to install unnecessary packages.
Honestly, if you are looking for experience, just think of something that uses a database, and make an interface for it. A cataloging app for whatever you are interested in. 
Yeah but how do you know it's not sending shit to some 3rd party somewhere. Good grief.
This is especially useful in React where you often have to do something like `const { name, age } = this.props.person`
First of all, no one writes planes or cars in JavaScript, so what. Second of all, plenty of companies DO take this problem seriously, get their packages audited by services like Snyk, have robust security policies, minimize dependencies and take other measures to reduce risk. The industry is increasingly aware of this problem and doing more and more about it. Rather than insulting our entire profession, please stick to speaking for yourself.
lolwut
Npm changed various policies as a result of left pad, instituted npm audit, snyk was born etc. People are doing things.
hi, thanks for the feedback! Just to make it clear - I'm not Ivan, as it's the speaker himself. I'm Stacy, one of the founders :) About free — we already made free stuff for Youtube with thousands of viewers (but it's in Russian). Now it's time for us to show the proof of this concept to the accelerator. We need to show that it can be sellable as we spend time, money and a lot of effort to organize a unique talk like this. 
Hey! Yeah, I know what you mean and you're partly right! But I can only quote my previous reply here: "we already made free stuff for Youtube with thousands of viewers (but it's in Russian). Now it's time for us to show the proof of this concept to the accelerator. We need to show that it can be sellable as we spend time, money and a lot of effort to organize a unique talk like this".
It’s something you do when you want to harvest fruits or get something else out of the tree Or it removes dead code from your bundled output. Like say you have a utils.js with multiple unrelated exported functions, but you only need to use one function. Your bundled output will only contain that one function rather than the entire file. 
R
You have opened my eyes. I think you should really focus on improving your jQuery skills from now on. Make sure you list it first on your resume too. 75% of websites. Wow. How did I not see it sooner?
At my company we pay for a service called Black duck, which is hooked into our Jenkins pipeline and informs us of security issues. It won't ever be 100% safe for sure, but it gives us a lot more confidence in using third party libraries and also ensuring we are using safe and stable versions. The scan can even scan hashes of our own code base to find security issues, and matches of copied code from elsewhere. 
This is just hyperbolic grandstanding that always happens around any discussion of npm. 
in many cases, it just would \*not be necessary\*. For example, OP stated form validation. Why would every web dev need to include a library for form validation? It is supported natively everywhere. The edgecases where you need something advanced are the minority. I am so annoyed that, for example, Vue.js seems to encourage doing manual JS validation instead of simply coding a form with \`&lt;input type="email" required&gt;\`.
Thank you for your kind words 🙇‍♂️ I did some digging and at the moment a minimified non-gzipped size of the entire lib is 3.4kB and minified gzipped size is 1191B. Unfortunately because of the way the library is implemented (with a fluent API based on mainly a single class), it doesn't play well together with tree-shaking (at least AFAIK). I do plan to include a more FP oriented API at some point in the future. That would work much nicer with tree-shaking.
Why are you being obtuse? There isn't enough to jQuery that would take a lot of practice.
you are doing god's work my guy!
If that's what you think then it is no wonder you don't have one of those millions of cushy low-turnover jQuery jobs.
Hi /u/SaahilSinha, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Xenitos, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MakotoE, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/deathcat5, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/deathcat5, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Or any of the hundreds of millions of lines of code you use per day. JS dependencies are just a tiny part of the blind trust we put in other people.
Yes. And given that FB was just busted for keeping millions of passwords in plain text, among other "violations of trust", it should give folks pause when just assuming react is secure (or any library really).
most newer versions of js have it covered, but there are still a few things that are handy about jquery that I can see why some folks would keep it around.
75% of folks according to your misinterpretation of one survey.
Is there a way to disable all chrome extensions temporarily to make this method easier? 
&gt; Unfortunately, nobody seems to give a shit. We do! Package Diff addresses one of your issues: diff.intrinsic.com Our main tool is literally designed to prevent malicious code from things like data exfiltration. Check it out at intrinsic.com
lol the irony where he says "as far as I know, no one has noticed" xD 
This is what I did. Check out [https://securityheaders.com/](https://securityheaders.com/). Has been a great tool. I had my CSP as just \`Content-Security-Policy "default 'self';";\` until I added some Google Fonts yesterday, then I had to modify it to \`Content-Security-Policy "default 'self'; style-src 'self' [https://fonts.googleapis.com](https://fonts.googleapis.com); font-src 'self' [https://fonts.gstatic.com](https://fonts.gstatic.com)";\`. I'm using NGINX.
On a completely unrelated note, my work has started implementing a "inclusive language check" on GitHub that runs on each commit and prevents you from using whitelist or master/slave etc... 
You are the only one maintaining that. I'm merely pointing out that there aren't any real good metrics at this point. Relying on # of stack overflow questions is just as invalid imho, especially when they don't make any effort to identify vanillajs, or what percentage of any given site is vanillajs vs libs (vs vanilla cruft solely to support the libs).
And if you want content security policy for NodeJS or AWS Lambda, check out this project at the startup I work at, [Intrinsic](https://intrinsic.com/solutions/engineers). Outbound HTTP/TCP requests inside an Intrinsic sandbox are whitelist only, just like CSP, so any malicious code that tries to extract data will throw a policy violation.
lol
&gt; Any code in any language that you didn't write, you rely on some form of trust. The JS library/package ecosystem is it's own kind of special, however. I recently read that the *average* NPM package has **2000** package dependencies. That's insane. I work primarily in c# on a 10+ year old ~100k lines of code base. Aside from major packages by trusted vendors - i.e. ASP, Entity Framework - I do in fact read the commits when I upgrade packages, and I read the source before pulling in a new package. It's not much of a burden at all. The idea of doing that for the dependencies in our JS apps is ludicrous. We'd never have the time. There's also hardly such a thing as a "trusted" package in JS land, in my opinion, because even the big ones from household name companies often fall into the pit of hundreds, if not thousands, of dependencies. left-pad's everywhere.
Whoops! Thanks for the feedback! Apologies! 
lol, angular, react, vue actual usage is actually tiny...
I read the source and lock the dependencies. I have copied the code off github and included in my repo. I also check for evals and obfuscation. If I really wanted to I could mock out http/ajax and throw errors. But generally I just avoid libraries that I can write myself
Because Steve Jobs doesn't allow us to use Flash.
I'll try it out. #1 is what I was worried about. If any issues arise I'll post an issue on the repo.
You can't. That's why a lot of highly secure sites require all first party code or complete vetting of third party code.
I work at a large enterprise that does software. We run scans on software all the time and try to install only well known packages. It could happen but it’s likely to be caught and unlikely to happen from trusted sources.
CSP headers. Basically, start with a super-strict `"default 'self';"`, and expand that as you add CDNs that you yourself have audited.
One rule of thumb that I like to follow is I always transpire and minimize myself from distributed source. I never use a supplied modification for the very reason that it would be very easy to hide malicious code there.
You can also guarantee that an external resource hasn't changed with subresource integrity [https://developer.mozilla.org/en-US/docs/Web/Security/Subresource\_Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity) 
I Made this: [https://veerasundar.com/gauge-generator/](https://veerasundar.com/gauge-generator/) \- a little tool to generate Gauges and export them as SVGs, in case you ever need to show them in your dashboard, design work, etc. &amp;#x200B; Source: [https://github.com/vraa/gauge-generator](https://github.com/vraa/gauge-generator)
&gt; People just assume that pulling in 700+ dependencies from npm to build a Hello World React app is totally normal and must be safe... This has been on my mind a lot lately. I’d like to have some sort of automated security auditing service that identifies concerns within the build. It’s probably not that hard to find issues that might lead to XSS attacks. A lot of that is just looking for `eval`, `innerHTML`, etc... Maybe look for instances where private keys might be sent to the server in plaintext, or even analyze server-side code for SQL-injection vulnerabilities? Then maybe you could trust third party scripts from CDNs that undergo similar automated audits? Idk, security is outside of my wheelhouse. Which is frustrating.
Neat! I made a similar library a while back: https://www.npmjs.com/package/abet
I probably visited that guide every day for a good 6 months. Now it's all permanently ingrained in my head.
Interesting, I like the approach. What I kinda don't like that you have to import all these functions. Couldn't you pass all of them to the callback function of `ZephComponents.define`? Like: ZephComponents.define('my-button', ({ html, css }) =&gt; { html("./my-button.html"); css("./my-button.css"); });
Hey, if I am right, this is a CallPage widget, so as documentation says, add id="cp-widget" to your button to trigger pop-up to open :) you don't need any js here. So your button will look like &lt;button id="cp-widget"&gt;Call me&lt;/button&gt;. Hope, it will help you :) 
Gtfo! I went through their documentation and didn’t even see this. You are the boss, Maks, thank you! Need to get my eyes checked. 
Awesome, I look forward to hearing your feedback and results.
Can you do me a favor and submit an issue to make that possible. it should be super easy and not change the approach at all.
Since you have it working by copying the files manually, why not keep it simple and just update your build script to copy the files?
No one can do it better, so is it really shitty work?
And it was even easier in the end. I just added the achor #cp-widget to the links. Presto. Thanks again!
Use Internet Explorer.
I install different Chromium based browser that's clean and use that when I need clean slate. 
Hi! I’m still fairly new to coding as well (about a year and a half of experience) However , there are some amazing resources out there I’ve got a ton bookmarked, if you remind me of I remember I’ll send you a bunch of links , you are also welcome to ask me any questions if I know the answer I’ll try my best to help
I don't think there is a foul-proof method, however, you can incorporate strategies to help prevent this type of malicious behavior in your DevOps pipeline (if you have such). I integrated a CLI tool that runs NPM Audit and fails the pipeline on failures (which encourages me to fix the vulnerabilities sooner rather than later). However, this is dependent on npm advisories. Gitlab has a security advisory (behind paywell) that can help support this. There may be a tool that allows you to stand up an isolated container of your code and scan that "container" for malicious behavior. Not foul-proof, as certain aspects may trigger when conditions are met. In short, there is no foul-proof method, but you can build up your confidence by investing in the tooling for security and incorporating more security aspects into your pipelines. 
No easy solution for this. The way to minimize is to use only packagens that are stable/you trust/extremely popular.... I don't think the npm build has to match the github so there checking the source by hand won't save you. For things client side it's easier because any connection will show up on the dev tools, people will notice. For backend libs....well you gotta rely on firewalls and traffic analyzers I think.
install a clean browser, chrome/firefox, only use it for testing - that’s how we do it :) i use firefox for debugging and testing but not as main browser and I use an extension to clean it if everything, like a total reset.
30 days of JavaScript. 
I've been working on a lot of small open-source projects lately: - [react-github-gist](https://github.com/Xyfir/react-github-gist): Embed a gist from Github with React. - [rword](https://github.com/Xyfir/rword): A cryptographically secure random generator for real English words. - [enve](https://github.com/Xyfir/enve): JSON-parsed environment variables. - [sender-rewriting-scheme](https://github.com/Xyfir/sender-rewriting-scheme): Parse and generate SRS (Sender Rewriting Scheme) email addresses.
Thank you. Please do share your bookmarked links. 
I’ll try my best haha , in the meantime Javascript.info and code academy are amazing resources
https://www.udemy.com/the-complete-javascript-course/ If you wait you can get it on sale for $12.99. But still and incredible value for $30. This course drives you through building real world apps in JS. IMHO this is the best way to learn, by doing. Good luck.
Thanks for the share 👍🏻
Yes. This one! Really good teacher. Also 30 days with Wes Bos a good one. But start with this one, it will help you a lot. Helped me too!
You can also possibly automate this with an e2e testing library. Diffing the hosts from the networking tab seems like a reasonable thing to do. 
That's what happens when you treat your IT department like a liability instead of an asset and demand the lowest-bidder on critical software and support services.
Codecademy is a really good, interactive website to learn programming. The examples are simple and short, and you learn quickly. I recommend it to my students. [https://www.codecademy.com/learn/introduction-to-javascript](https://www.codecademy.com/learn/introduction-to-javascript)
Thank you 
Udemy has some decent online courses. from entry-level to more advanced
why do you need `outbound.put` if you can just use async generators `yield` and no any library?
Came here to say this. There are dozens of ways a script can dial out. Image src, frame src, form submission, etc, etc. A CSP will block all of them. Doesn't work at all on IE though, which is why if you see your parents using IE, you should immediately confiscate their laptop if you value your inheritance.
Yeah why do you use programming languages if you could program everything with assembly?
Figured it out a little - as with most things fixing one problem lead to another. Now i can get it to read in, edit, and write an excel file I found that it strips all of the formulae from the file it reads in. I probably just need to do more exploration of the SheetJS library.
You can add another profile to chrome (doesn't have to be a Google account), it will be clean...
I don’t see the connections, though your approach in fact is lower level, I just asked what is the difference 
https://github.com/ubolonton/js-csp
I read an article about this recently, it'll make you paranoid if you're not already :D [I’m harvesting credit card numbers and passwords from your site. Here’s how.](https://hackernoon.com/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5)
I know what it is, the question is - why async generators aren’t enough?
If you Google Jonas, you can find a link to his site. He offers the course for 10.00
ok but don't say yes like we're agreeing with eachother. You said something totally different than I did
Yes, agreeing with your statement, that it is often easier (often only possible) to use trusted devs if you want the most secure solution. Addition: not always easy to find a "trusted dev", and people make a lot of assumptions about who is validating what is out there. i.e. given react is from facebook, and facebook is all about sending user data around to other sources.
Traversy on YouTube and Udemy and watchandcode.com But before you start those videos use freecodecamp and do the basics section of JavaScript to get familiar with syntax and vocabulary so you’re not completely lost in the videos.
https://www.freecodecamp.org its free
Eloquent JavaScript, Brad from Traversy Media on Udemy and of course FreeCodeCamp
This is correct, but be warned that CSP can get extremely complicated. I setup a CSP for a big public site that needed to whitelist a shitload of third-party integrations of all types (js, pixels, iframes) and they updated it pretty frequently. And some of the third-parties didn't have entirely consistent behavior so a successful test today may start failing tomorrow. It can become a job unto itself.
This is the one I recommend as well. You code along with every topic, the best way to learn.
&gt;I do in fact read the commits when I upgrade packages, and I read the source before pulling in a new package. Reading the commits isn't enough. And there is no way you can dedicate the time to "audit" (not read) any 3rd party code that is worth pulling in in the first place. There still is trust, you are being more careful with it and props for that - but there still is some significant trust. A malicious actor can insert code in such a way that the intent can even escape careful review. There even are contests for that - code that looks like it is doing one thing, but due to some peculiarity it does something malicious. People do that for fun, a malicious actor would do more. And even in npm, people don't depend on code they aren't using. JS ecosystem has an efficient way of dealing with dependencies, and that equates to a fast moving vibrant set of packages - it has EVERYTHING. That is the upside. Would you rather have every package reinvent the wheel for identical functionality with its own sets of API and bugs? There are tradeoffs of course, js ecosystem collectively decided to optimize for velocity - there of course are many downsides but there are lots of upsides too.
Some days I wonder whether this sub-reddit should be named r/medium
Once up on a time, the developer wrote everything alone, by hand. That caused reinventing the wheel over and over again. Not to mention quirky bugs and bad code. To solve this we started to build sets of libraries to help us write code faster and better. But this lead us down the path of impossible dependancies and risk for sublib takeover. I just took a look in a react repo I got with uni tests and cypress tests. And cleared my node_modules catalogue. 1200 libraries downloaded. There is no way of knowing if the files are clean or I got a Bitcoin miner in there somewhere. As I download libs recursive if a bad item hides in a popular package like lowdash_ Shut will hit the fan. 
I agree this course is fantastic. I'm currently working through it. I found it to be the best course for me so far and I've tried Kyle Simpson and Watchandcode courses, they're great, but this gave me challenges to complete and I had to think about what I've learnt so far and apply it. It's also great to see the solution and compare it to yours. What I would say is, with each coding challenge try and take it further. If the challenge outputs to the console, make it output to the DOM (might be the wrong way to word that, I'm still learning, if that's wrong then I mean output to a web page) and use some HTML and if you have time style the output with CSS. It's been the best resource for me so far. 
&gt; And there is no way you can dedicate the time to "audit" (not read) any 3rd party code that is worth pulling in in the first place. There's no polite way to say this. You're simply wrong. Also this is hilarious as you go on to cheer the JS ecosystem with the likes of left-pad and is-even. &gt; A malicious actor can insert code in such a way that the intent can even escape careful review. There even are contests for that Yeah, that tends to stick out like a sore thumb. &gt; JS ecosystem ... has EVERYTHING It's getting difficult to take you seriously.
Did it
I kind of disagree with devs being responsible for doing this at home. Sure it makes sense from a testing perspective, but people have the right to separate their work and home lives. Besides, it's easy to detect if the console is open, so monitoring the network tab is a bit moot. Also, devs are likely going to use modern and good browsers at home, but malicious stuff often targets shitty insecure browsers / versions.
Good article. Thanks for sharing it. I like the cabin in the woods. 
Codecadamy is good, but requires some basic knowledge already. Their courses sometimes don't include enough theory/background for real beginners.
Thank you so much! Funny enough, I just closed this issue as I published a new release v1.1.0 just now with the change. How’s that for service. Let me know how you like it. 
nobody said they’re responsible nor did i say do they have to do this from home. both is optional. they don’t have to do this at all... totally up to the dev. i do it from home but then i’m also responsible for all of it so... i want a home isp IP not corp IP etc.
Yeah but we all know what "optional" means in the software industry. 
If you built a Firefox WebExtension (not too hard, just a manifest file), when you submit it to them for signing it does a reasonable security scan.
Small tip: add some images and maybe even a link to a demo website on the Readme. That way we can know what it is without having to run the code. 
This would be great news if Apple would quit killing innovation and start offering true support for PWAs. 
Upvote for stick dog
Thanks, fixed links
Not untill swift is the universal language
&gt; if (c = "STR") {event.value = s;} &gt; else if (c = "DEX") {event.value = d;} You're looking for `===`, not `=`.
Great Guide to CSS [https://zendev.com/ultimate-guide-to-learning-css.html](https://zendev.com/ultimate-guide-to-learning-css.html) Once you get a bit of javascript under your belt try doing a few of these [https://coderbyte.com/challenges#easyChals](https://coderbyte.com/challenges#easyChals) Wonderful resource Completely free [https://learn.freecodecamp.org/](https://learn.freecodecamp.org/) Invaluable once you start working on projects , YOU WILL NEED TO LEARN GIT ! [https://learngitbranching.js.org/?NODEMO](https://learngitbranching.js.org/?NODEMO) Great place to practice coding [https://codesandbox.io/s/vanilla](https://codesandbox.io/s/vanilla) and i highly highly highly recommend this site [https://javascript.info/](https://javascript.info/) This one is good to just be careful some of the content is not explained well , out of date , or otherwise bad practice but the references can very useful for beginners. [https://www.w3schools.com/](https://www.w3schools.com/) Probably the best refrence site out there very very thorough [https://developer.mozilla.org/en-US/docs/Web/JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) This site is amazing for when you forget how to do something simple or forget syntax [https://htmlcheatsheet.com/css/](https://htmlcheatsheet.com/css/) And if that is not enough here is a list someone else compiled [https://www.codeconquest.com/blog/top-50-websites-to-learn-javascript/](https://www.codeconquest.com/blog/top-50-websites-to-learn-javascript/) &amp;#x200B; &amp;#x200B;
Not sure that that would minimize the risk much though, there is also confidential info: credit card numbers, social security numbers, addresses,... You need to be extremely careful with those, not sure what is the best practices in this cases, though.
Absolutely, i was thinking about it!
This feature has only been possible *anywhere* for a little over three months, but Apple is “killing innovation” by not supporting it. There are plenty of rational reasons to dislike Apple, but this is just fucking stupid.
Change #grid to .grid and the class to your &lt;h3&gt;
In much the same way as I mentioned before. You simply wouldn't expose any of that information to the main application. However this is less than ideal, so I did a little digging. So far the least invasive solution I have come across is using a sandboxed iframes. Use a sandboxed iframe for the potentially insecure application. You would still need to generate a session key from the user's login credentials and pass it to the insecure iframe. See this stackoverflow post on inter-window communication between iframes: [https://stackoverflow.com/questions/20862511/inter-iframe-communication-using-postmessage](https://stackoverflow.com/questions/20862511/inter-iframe-communication-using-postmessage) Display and editing of sensitive data could be handled in a systematic way. Assuming a component based framework is in use, I would write a component that a calls: `Window.PostMessge({sessionKey: '2323a2c', sensitiveDataTypeToReceiveAndDisplay: 'Address', userId: 17, x: 20, y: 300, textSize: '12px'}, window.parent)` Which would inform the secure parent window to fetch and display a sensitive piece of data at the location of the component (in this case x: 20, y: 300).
For anyone who has taken a look at ZephJS so far... I could really use some Github stars and some retweets to spread the word. https://github.com/awesomeeng/zephjs https://twitter.com/areinet/status/1108865226752040963?s=21 
&gt; A malicious actor can insert code in such a way that the intent can even escape careful review. There even are contests for that - code that looks like it is doing one thing, but due to some peculiarity it does something malicious. People do that for fun, a malicious actor would do more. You're not exactly wrong, but I think you are being overly pedantic. No, we're not vetting the compiler itself, for example. For us, and for most, it is acceptable to trust, say, Microsoft, and easy enough to verify we've installed unaltered software. We trust to a some degree that our build systems are not infected with undetected malware that modifies our toolchain or the artifacts it produces. But it doesn't take a team of advanced, dedicated security researchers to review high level code to see if there's possibly some funny business going on or not. I could list a dozen packages off the top of my head that are certainly "worth pulling in" and can be adequately reviewed for nefarious code by a couple of competent .Net devs without an inordinate time investment. You're not going to hide data stealing code in c# without raising an eyebrow, or clearly providing the possibility of executing uncertain/unknown code. It is, however, a *lot* easier to hide nefarious code in JS.
More than likely that's controlled by the accessor function you use. Take a look at the sheet_to_formulae function maybe? I've never used sheetjs but I just skimmed over their documentation.
Apple isn't killing inovation by not supporting *this* feature - they are killing it by being almost 2 years behind Android when it comes to PWA support to preserve their App store ecosystem. &amp;#x200B; I've spent the last 4 months working on a PWA at work - you cant even properly use [getUserMedia](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia) on website opened in the PWA web wrapper(but you can in iOS safari), let alone other key PWA functionality such as push notifications, prompt to add to homescreen, etc.. iOS PWA support is and always has been a mess
Been working on an app for managing your configuration. Makes it so you don't have to re-release code to update certain parts of your data. And no servers to set up either. Perfect for translation files, or feature flags. https://www.dropconfig.com
Because PWAs as they’re defined now are pretty garbage. 
Never read them both what you should keep in mind is that even if the tech is outdated, the design pattern and architecture will always be similar whether you use "old" or "new" functions
In what way?
That is true! Thank you for the reminder!
the biggest "wtf" I had with apple was when i trued to set a click handler on a div
re-add it to the version control instance. .gitignore will prevent the file(s) in question from being added to / tracked by version control. Just because you removed the .gitignore reference doesn't mean git will auto-add that file back into version control and start to track it again.
Yes they lack real performance, animations are laggy you can't use lots of local storage does not have contacts access or good background support. Camera does not offer advanced tools. Overall it will take tons of time to catch the performance of recent apps, which uses newest tools... PWA beats old apps, but it can't compare with newest
[removed]
Nice work man!
I created a Google Action to keep track of my coffee consumption * Article: [https://www.myweekinjs.com/actions-with-google](https://www.myweekinjs.com/actions-with-google) * Stats Page: [https://www.myweekinjs.com/stats](https://www.myweekinjs.com/stats)
Well, maybe the docs could be a great idea to start.
Start with basic ha at least 
You should optimise your images to reduce their file size. There are a number of online services that can help with this. Tinypng is a good free service that handles different file formats. There are app’s that do the same thing but may allow you to resize the image as well to bring the file size down. Hope that’s of some use. 
You might want to use an object storage system like AWS S3 and setup the bucket as a Static Web Host. Then you can link directly to the images stored in S3 from your site. You can effectively store an infinite amount of data in S3 so you shouldn't have any issues there.
Nice little thing you got there.👌 How do you trigger the intent? Do you just ask Google Assistant to add X coffees? If so how did you hook the firebase function to Google Assistant so that when you ask to add X coffees it knows to call the Firebase function?
Cheers! You have to setup a few things first. One is a trigger to initiate it, in my case it is "Talk to Life Style". Then from there I can say "add X to coffees". A lot of the configuration is actually done through Actions on Google, DialogFlow and Firebase to connect all the parts together. A bit of Google magic "unfortunately" but once everything is connected it is awesome.
Thanks for the response. I will look into it some more. Happy coding 😄
Watch 5 beginner tutorials on YouTube and code along. 
So you can share *to* it, cool. Can we share *from* it?
You fix a problem by deploying and maintening a MongoDB cluster, which is quite a big problem.
Netlify 
I would use it for the two reasons you mentioned. For example for external API calls.
I do not recommend using Github if you plan to serve many large images (especially on a highload project), because pretty soon you run into storage or bandwidth limitations. Amazon S3, Google Cloud Storage, Microsoft Azure, and other cloud solutions are great because of their extensibility and high availability, but they can bring you unexpected bills (I remember well the days when a Facebook user shared a 1MB GIF file from my blog and my server got hit by more than 450 Mbps, while users haven't even visited my blog). I think in your case the best option would be a cheap VPS or shared hosting that offers unlimited bandwidth.
How did you become a contractor successfully?
as someone who is learning in my spare time after work. what the hell do i do? who do I approach? do i just put some stuff on github nd show people?
There are a lot of variables at play there. I'd need to know your experience, where you're working right now and what you'd be looking for moving forward. A 22-year old graduate engineer living in Scarborough and working for £20K/yr at a tiny agency (and hoping to stay in that area) is vastly different to someone with 10 years of permanent experience living in London or Manchester.
Long story but I took on freelance side-projects at uni (I studied mechanical engineering) and by the time I graduated, could develop with some proficiency. I lived abroad, taking roles on Upwork and continuing to upskill whilst getting paid. When I returned to the UK, Upwork wouldn't pay the bills (around $1000/month) so I started looking for proper work. I stumbled upon a contract role at The University of Salford and thought...hey, I could do that for £225/day! Just kept going from there :)
Yes, that's possible aswell. [(Sauce)](https://developers.google.com/web/updates/2016/09/navigator-share) 
Does that matter? Every tech solution has trade-offs. What's unfortunate is when an option is removed entirely on a platform. Making it available doesn't mean anybody has to use it, but they can if they need to.
Hi /u/Nick_hobo, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This would be great for budget tracking. Of course, Google Assistant will probably add "ate E sense" to my expense column.
I did think of that but I'm scared to see how much money I spend on coffee over a week haha I've gotten some shocking interpretations of what I said before.
Depends on how flexible it needs to be. I built one with react-virtualized for work, but that needed to be super universal in all areas.
I just saw recently what I've spent in my entire time using Steam, and I'd really rather not think about it either 😅
Ooo I wouldn't want to see that figure either 😂
Start with ES6.
How many days a week do you do?
What sort of projects and work do you do now verses when you found things on upwork?? Thanks
Pretty cool! You could add threshold parameters like 1 coffee per 4 hours or 3 coffees a day, so you could ask it 'Can I have a coffee right now?'. Advanced mode would be to add support for an internet connected coffee machine, and having it count your coffees automatically as it brews them and/or refuse to brew them if it exceeds the threshold
Definitely a lot of directions you can take it. Especially if you look at the Smart Home integration then something like the coffee machine projects is totally possible! Could also setup the dialogue to pick up on the object. So you can say, "add x to y" then filter through the results and categorise them. Making the conversation more dynamic
How do I know what rate to charge?
Usually 5 but I take holidays whenever I feel like them. I took two weeks off when my daughter arrived in Feb and then worked from home in the third week.
Upwork was shit projects where people wanted the earth for nothing: Please rebuild my entire Magento site into a WooCommrece site for $250. The projects I’m on now are all much larger like BetFred’s mobile site for example.
Thank you so much! I was going insane :D
Check out coding train on YouTube.
Would recommend NetNinja YT tutorials, Andrzej Codecademy
I created a cookie and localstorage library with no dependencies: [https://github.com/nirtz89/crumbsjs](https://github.com/nirtz89/crumbsjs) 
I thought PWA was a Google concept. Wouldn’t it make sense for Apple to be behind on this? Apple traditionally waits for a feature to be fully vetted before integrating. Admittedly, they then tout it as “magic” in their own platform, but their marketing approaches are a different argument.
Rewriting in typescript won’t increase your throughput nor reduce the latency. It’ll just make writing correct code easier and faster. In other words it’ll help with maintainability. 
https://twitter.com/bendhalpern/status/578925947245633536?s=21
Images hosted in your GitHub repo will be automatically pulled by Netlify and they host it under AWS. Super fast, super simple 
Depends how good and where you are - 350/day to start and up to 7/8/900 for lots of experience in London 
/r/ProgrammerHumor /r/ProgrammerDadJokes
The term “progressive web apps” didn’t even exist four years old ago, but Apple has supported them to some degree or another for a while now. It should surprise absolutely no one that there isn’t feature parity for PWAs yet, and frankly, given Google’s history, I can’t blame Apple or anyone else for not immediately jumping on the bandwagon of supporting a Google-proposed technology. That said, iOS 12.2 will bring a number of improvements to PWAs on iOS, and I suspect they will continue to iterate on it for years to come.
Apple is deliberately dragging their heels to preserve their app store revenue, it's got very little to do with vetting features as really PWAs are just a combination of existing technology. All a PWA really needs is to be served over HTTPS, have a web manifest, have an icon, and the ability to load whilst offline. What Apple has dragged their heels over is the ServiceWorker implementation (up to iOS 12) which has prevented offline loading.
Communist Jquery: ('\*').removeClass()
There is canPlayType for that. https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType https://videojs.com/mimes.html But you only get "probably", "maybe", or an empty string back. It's a bit meh.
typeof null equals "object". Hahaha... ha.
But it is for easy mob application. Show me, get me etc.... But it great, because many forms-mob-app will be remove from AppStore :)
How many total hours did it take you to make this do-dad. I feel like I would gotta stuck on one api or another and took a month to complete it :p
I’m familiar with the tech. I was an early adopter and have a PWA that is out in production. I still hold that your opinion about Apple’s intention is purely speculation. You can think the same of mine. That’s cool with me. To be fair, I initially thought the same thing about Apple’s reasoning for PWAs until I saved my web app to the home screen. For years now (haven’t checked in a while), apps saved to the Home Screen have an entirely different cache than the Safari browser. I assume this is to have Home Screen apps follow the same sandboxing protocols that normal apps do. This was a huge issue for my app since users were supposed to save data in the local cache until they were back online. Very confusing for users to have different caches between the Home Screen app and the website in Safari and the website in Chrome. I think it’s decisions and trade-offs like these that is causing Apple to move slowly. The AppStore paradigm has been that apps can not access each other’s data unless you specifically use one of the sharing protocols. The same paradigm doesn’t apply to the web. 
so i get guide for u. &amp;#x200B; learn basic course on js [https://javascript.info/intro](https://javascript.info/intro) next open reactjs docs, see on utube fast cources. it maybe - one or two monts spend you time. my ipinion - it is vue.js because it is framework make same work - bu EASILY and FASTER, and easy for learn. good luck!
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Done
Might be worth putting the code on a site that's recognizable, like pastebin or a github gist. People are less likely to click on a link to a domain that I'd guess most of us have never seen before.
How do you cheer up a JS developer? You "Console" them!
Thanks, unfortunately this doesn't work in my case. 1. It's only based on the mime type of the container format, not the actual file content, so it won't give me any information about the audio/video codecs inside the file. (Also, I'd have to find out the mime type of the file I want to play.) 2. The results are borderline unusable in the best case, and simply wrong in the worst case. (For example: "video/x-matroska" returns "", which means it should never work, but most mkv files worked fine when I actually tried them.) 3. Just loading the file in a &lt;video&gt; element and checking for errors gives me a definite answer about the container format, which is far better than this function.
Are you allowed to work away from the office?
Not JS, but I have a CSS one: #titanic { float: none; } &amp;#x200B;
&gt; but most mkv files worked fine when I actually tried them. That's because WebM is based on a profile of the Matroska container format. MKV in its entirety isn't supported.
[http://i.imgur.com/wR3ZxfB.jpg](http://i.imgur.com/wR3ZxfB.jpg)... JS vs JS good parts
I know, that's why I need a way to check if the actual audio and video codecs are supported. Returning "" instead of at least "maybe" for "video/x-matroska" is still wrong in my opinion.
AFAIK iOS still uses an older (outdated) Safari engine to render webviews and run PWAs. So yeah, stuff that works in the normal browser might fail once you install the site as a PWA.
It's gonna be slow... this is probably true of any language. Why do you need a software fallback?
Usually yes. Some clients are much happier about it that others. Some contracts are entirely remote.
You can move `j * SCREEN_WIDTH` and `j * spriteWidth` into the outer loop and replace your division by 2 with a `&gt;&gt; 1`, but other than that, js is gonna be pretty slow for software rendering. 
Actually it's not supposed to be that slow. It was because of the stupid \`i / 2\` which would make a 0.5 index every other pixel, and return undefined as a result, then go through silently without error and no visible issue because of the sample texture I used. Replace the \`i / 2\` by \`(i &gt;&gt;&gt; 1)\` and it looks like it's gonna be fast enough (still waiting for the tilemap engine to judge, this thing is a gargantuan shader as it supports almost everything from the Super Nintendo PPU). I want to create a fallback shader because… well Apple. They modify textures/round values slightly when uploading to the VRAM regardless of the color space, making it impossible to use a RGBA8888 texture for indexed colors as occasionally pixels or map tiles will be weird (57 becomes 58, and another like 217 is affected, not sure which; in any case it's unusable). iOS is the only platform that does that, but… I can't ignore them :/
I made a site where you can earn bitcoin for completing simple twitter tasks like following an account or liking/retweeting a post. It's possible to immediately withdraw these tiny payments via Lightning Network. [Sats 4 Likes](https://kriptode.com/satsforlikes/index.html)
Thanks ;) that was it (the \`i &gt;&gt; 1\`, as I mentioned in my reply above). Sorry for the stupidity. But for the sake of it, it looks like JS is not \*that\* slow at all actually :)
Answered here: https://www.reddit.com/r/UKPersonalFinance/comments/b4u2uw/uk_developers_anyone_interested_in_making_the/ej99lfp?utm_source=share&amp;utm_medium=web2x
Do you find all your contracts on indeed and jobsite by any chance out of interest?
I use Indeed exclusively but after you apply for a role through an agency, they'll keep you on their books and contact you anytime they have anything suitable. I also broadcast my availability when I'm approaching the end of a contract to a email list of all the recruiters I've worked with.
Developing for web apps in ios very much involves getting punched in the gut with every safari update. As one might expect, of course, the web is not a part of apple's closed ecosystem.
Using Google Actions, is the only way to initiate via a "Hey Google, talk to xxx" command? With IFTTT's integration, I canset up a command like "add X to coffees" that can be triggered directly from Google Assistant without first doing a "Hey Google, talk to xxx". Do you know if there's a way with Google Actions to have Google assistant recognize the phrase without first doing a "hey Google talk to xxx" and then telling Google to "add X to coffees". (I'm leaving out details about how the action is handled in IFTTT in response to my voice asking, "add X coffees", but IFTTT will parse out the X value to send to some defined backend service.) 
You know if you have a little self control you wouldn't need such tools. I can't believe people relying on technology for small things that can be controlled and keep in check with a little self discipline.
#titanic { float: right !important; }
S3 S3 S3
this informations is no correct i still have normal edge on win10
You could extract the codecs from the file by parsing the headers. I could help with this part if you need some pointers. This extracts the actual video/audio codecs not just the container format. That should be suitable for canPlayType.
“Punched in the gut”? Man, you people really have a knack for hyperbole. I’m so glad I don’t work with entitled wimps who constantly whine about the state of the industry and expect everything to just work for them with as little effort as possible. I’ve been developing mobile web apps for iOS for nearly a decade, and while things aren’t always ideal or on par with Google’s mobile web offerings, I’ve seen nothing but improvements over the years. There are still things I’d like to see, but if you think it’s so bad as all of that, then you never would have survived as a web developer a decade ago.
20 years ago: JavaScript will be under the top 10 programming languages in 2019
Would you believe it if I told you people have been using technology for millennia to help improve their self discipline?
It trended for a bit this week but I built [https://algodaily.com](https://algodaily.com), a technical interview service for web developers. I think it's the only JS-first interview prep site-- I've spent a good chunk of my career thus far writing SPAs or working in node and found that most interview sites focused on Python. All the code samples are written in JS and all the walk throughs are written as React components.
The 3 scalability problems are: * [Serving static assets](https://softwareontheroad.com/nodejs-scalability-issues/?utm_source=reddit&amp;utm_medium=subreddit#assets) * [Cron jobs and task scheduling](https://softwareontheroad.com/nodejs-scalability-issues/?utm_source=reddit&amp;utm_medium=subreddit#jobs) * [Cluster Mode - Using all the available resources](https://softwareontheroad.com/nodejs-scalability-issues/?utm_source=reddit&amp;utm_medium=subreddit#resources)
Nice, I too am working on Node right now (Max's course), and I will start Andrew's React course right after since I've already bought it. Let me know how it goes!
JavaScript is not the same as Java, so consider posting this to r/java or r/learnjava
I have been developing an IDE like autocomplete. [AutoSuggest](https://github.com/avcs06/AutoSuggest)
you can use node to learn js too $ echo "console.log('hello world')"|node hello world in fact many of the online code challenges use node. If you understand when you need some help from the server, or just want to write some scripts in js, throw some node at it and see if you can get it to do what you want to. The question really is do you understand what the use case is for node? 
In general, you shouldn't have any issues if you already know JS. Though, Node.js does come with some additional API's which can be found here: [https://nodejs.org/docs/latest/api/](https://nodejs.org/docs/latest/api/) and it's handy to know about some of these, depending on what you're aiming to build. 
For the time being, am not aiming for build anything just want to learn out of hobby. 
https://www.destroyallsoftware.com/talks/wat Basically all that.
So you used JavaScript to script your Java?
Very interesting, thanks for sharing. The map renders at the end are beautiful. &amp;#x200B; &amp;#x200B;
Hi /u/loorha, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/andresDevJs, English content only please.
Hi /u/jcunews1, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/BlueSpottedDickhead, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Matthew_Cash, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/BlueSpottedDickhead, this post was removed. Well, this is awkward. This subreddit is for **javascript**, which is different than **Java**. In other words, `javascript !== java`. Maybe try one of these instead: * /r/Java * /r/JavaHelp * /r/LearnJava Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/darrenturn90, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/geeky_ninja, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jcpeden, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/seeeeew, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/JohnDeighton, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jester070993, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Brunni132, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/hireng99, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/concisecoder, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Proudlee, this post was removed. Well, this is awkward. This subreddit is for **javascript**, which is different than **Java**. In other words, `javascript !== java`. Maybe try one of these instead: * /r/Java * /r/JavaHelp * /r/LearnJava Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Cutiebrawl, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Kittypooptoot, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ImEatingSeeds, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/shadowknight094, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/portlandpod, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/elaitman1, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/araw830, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/balu2gani, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Before increasing the score and removing the "up" class, check if it has the "up" class via classList.contains().
In your randomHole function you know that you generated a home. Let's say you were to store that in the outer scope in a variable called isWacked or something.. Now before you assign a score - check if you already assigned score, and if you haven't, assign a score and update the isWacked variable to true. 
How's the experience with DropCSS? Has anyone here used it in any of their projects? Would love to hear some reviews/feedback, as I am currently using PurifyCSS.
This, or we choose not to support them at all 🙃
This is really cool, but, is SF really that hilly? I mean, I know it’s hilly, but I’m surprised by the elevation contrast in these renderings of it.
Total was about 5 hours (for the Action bit) maybe another 2/3 for adding the Stats page on the website. The documentation is actually pretty good which helped a lot! Normally I'd be in the same boat haha 
The Cloud Functions can be written in either Nodejs or Java, I used Node. Then the Stats page on the website is built with React 👌
It's not to scale, reality the difference isn't as exaggerated as the generated images.
I am glad the window.crypto.* functions are not replaceable. But some malicious script can still cause a lot of havoc by overwriting other core functions. Why are all the native functions of JS not immutable? I've written JS for mant years and never needed to replace/extend things from the prototype. All it takes some small piece of code in an extension like an adblocker gone rogue to cause a security issue.
This is some advanced stuff. Brilliant! For the 3d version at the bottom of the blog post, how many vertices do you have?
&gt;There's no polite way to say this. You're simply wrong. Well you don't have to be polite, but you have to make a proper point to make it count. Checked some of your examples, I'm not familiar with any of them but from the ones I checked some observations: * Some are abandoned / looking for maintainers. In the JS land I wouldn't touch them with a stick. I found one that hasn't been updated since 2014. * Some are larger projects that are in the 50k-100k LOC range. If you tell me that you went through and properly audited all of this code: you are lying. * If the above is what a typical project pulls as dependencies, then you're on the hook for auditing close to 250k+ lines of code, you better have a full time team dedicated to doing that then? * Some of those libraries have less than 10 stars. While I agree that stars are a useless metric, one thing it shows us is that not many people use them. So fewer eyeballs on them. You don't benefit from at least someone taking interest and looking at what is going on with the code. So I don't get what you are trying to prove with this. Unless you are dedicated to spending months doing proper audits, or have a dedicated team doing just that on the side, you are using code just like everyone else in the JS ecosystem: with trust. Scrolling through some select files in your editor and saying "its legit" doesn't mean what you think it means. &gt;It's getting difficult to take you seriously. Dealing with dependencies in JS isn't particularly efficient, And what do you mean by that? What isn't efficient about it? If it is not efficient then why are people doing so much of it? You are contradicting yourself here. I'm not particularly familiar with the C# ecosystem, I just use it when I need it, once or twice a year perhaps. How do you guys deal with packages and dependencies? I had no way of checking, does the projects you listed above depend on anything? Or does everything reinvent the wheel for everything? You should also be cognisant of the fact that "code size" is extremely important in JS - not that much in compiled languages. You can afford to have two libraries doing the same thing in their own ways as part of their "helper functions" without depending on a dedicated central helper that does it for both of them. Worst case you binary will be a couple kilobytes bigger. Every kb counts on the web - so libraries doing just their thing and pulling in dependencies for any other functionality is also a requirement for the web. It makes things more tangled, but bandwidths are limited, mobile connections are slow so this is what we have to work with. Internet speeds around the world are like the speed of light constant for us at a given time. You can't afford your dependencies doing the same thing in their own ways. &gt;and the JS ecosystem certainly does not have EVERYTHING. I'm sure you got what I mean, js ecosystem is a high velocity environment, javascript is the most "popular" language right now (don't know if this is contested) at least where we can measure it (open source resources) and it is not unreasonable for me to say that js has both more variety and options in its ecosystem due to its popularity. And in the end, what I don't get about your argument is this: JS is not more verbose than C#, so for the amount of functionality you depend on from 3rd parties, the *amount* of code you get should be more or less similar. If you want x functionality, you either import it from someone else, or you spend the resources to redo the work yourself. In case you go with 3rd party route, the amount of code you pull in is similar, just the shape of the dependency tree is different. So if you have, say, 100k LOC imported, it is the difference between having to audit 100 dependencies 1k LOC each, or, say, 10 dependencies 10k LOC each. Is it *that* different? In JS, all the code is sitting in your node\_modules folder, if you want to audit 100k LOC yourself, the code is there, the folder structure is different is all. In reality in JS ecosystem you'll find a lot less functionality duplication so realistically you'll have to take care of fewer lines of 3rd party code, though scattered around more projects, but still, the code is there in that folder if you want to audit it.
Such an excellent post, thank you!
Anybody go last year? How much was the conference?
I believe google offers free quota for most of their services. I guess there might be something for google places as well so you can test and try for free. 
Because I'm young and I don't want to be like the elderly getting confused and cussing off new technology. And I like how node is asynchronous and can balance a lot higher load. 
Why don't you just use the Google places API your self to get those json files to practice or what ever? https://developers.google.com/places/web-service/intro
Thanks! I had not, but that's gorgeous - thanks for the link!