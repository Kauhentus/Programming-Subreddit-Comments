Nice job. I enjoy game engine design topics. Made one myself but only covers the graphics.
Looks like all the demos use some kind of light bloom filter but with the light threshold all the way dow
Thanks for the feedback. I've removed the superfluous `async` keywords. You're right, they weren't necessary.
Thanks for the feedback. I totally understand. It's really frustrating when stuff is hard to read. I'm working on a redesign of the site that will make the text much clearer. Unfortunately it takes a while as I'm working full-time, and also trying to keep writing. I'll get there eventually though.
Thanks for the feedback. I've removed the superfluous `async` keywords. You're right. They weren't necessary. I'm interested in finding out more about the issues you're seeing on your Chromebook though. Is there any chance you could DM me a screenshot somehow?
Thanks for the feedback. I've removed the superfluous `async` keywords. You're right. They weren't necessary.
Not on my chromebook right now but I manage to reproduce it. Just open a chrome browser window and set it to width 1366 Although its not bad, most of the code blocks appear with a scroll bar down on the bottom and need to be scrolled sideways to see the rest. There's empty space on the right and when you scroll up you see the old-timey guy jamming it all up. Shrink the window a little more and he disappears and the code blocks expand to the right side, although with the stylish margins not reaching.
Totally agree with the point on accessibility, a little effort goes a long with components. I can appreciate the rawness of lit-html, but finding that the tooling of Stencil is really nice, especially for devs coming from a React background.
Ok, there is actually something to this. For instance, if you have a function that does a lot of IO, this would be a natural candidate for an asynchronous call, but what if this function needed to be synchronous in larger context. For instance, you may have a stack tracer that needs to come out in the correct order. In this instance, you would create a queue where you would place the "resolve" continuation passed to a new Promise, and this queue would be checked whenever you were done with a piece of tracer IO.
‚Ä¶if true? It's literally an announcement from Google.
[removed]
You can use `array.prototype.map` with `Promise.all()` of course but it only works for "symmetrical" data.
For those who need to encode the server side in PHP they can use the following package. With it you can create subscriptions and send push notifications. [https://github.com/web-push-libs/web-push-php](https://github.com/web-push-libs/web-push-php)
For those wondering what currying is: &amp;#x200B; // curry : ((A \* B) -&gt;C) -&gt; (A -&gt; B -&gt; C) const curry = f =&gt; x =&gt; y =&gt; f(x, y) &amp;#x200B; // uncurry : (A -&gt; B -&gt; C) -&gt; (A \* B -&gt; C) const uncurry = f =&gt; (x, y) =&gt; f(x)(y)
[removed]
Note to self, no jokes on r/js
Huh, neat. Surprised this wasn't a thing before though, it just makes sense to me.
Honestly this community sucks for that very reason and that reason alone. Same for r/webdev. Funny how every developer I meet IRL is a real joker but here it's like we're in a fucking meeting and we're supposed to be prim and proper. Fuck that. Don't change. Keep joking. Keep shaming them for being so serious.
Here's a sneak peek of /r/webdev using the [top posts](https://np.reddit.com/r/webdev/top/?sort=top&amp;t=year) of the year! \#1: [Thought you guys would like this. Crazy what is the web to the develop the web dev community in google does](https://v.redd.it/rn6d18072kp21) | [161 comments](https://np.reddit.com/r/webdev/comments/b7vk0y/thought_you_guys_would_like_this_crazy_what_is/) \#2: [StackOverflow is super toxic for newer developers](https://np.reddit.com/r/webdev/comments/9n24fl/stackoverflow_is_super_toxic_for_newer_developers/) \#3: [Markup horrors of the ad blocker wars](https://pbs.twimg.com/media/Dt23cXZXgAEDdW4.jpg) | [401 comments](https://np.reddit.com/r/webdev/comments/a4k85f/markup_horrors_of_the_ad_blocker_wars/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
r/unexpectedfuturama
Good bot
Everyone upvotes the reply but not the parent...
https://blog.npmjs.org/post/92574016600/numeric-precision-matters-how-npm-download-counts It's possible most of those are mirrors or bots (or even your own build server if you're using one)
We are in a fucking meeting. And you're fucking late again. But seriously, I think jokes often don't translate well online because we're all just looking at walls of text without the subtle intonations in voice, expressions in face, gestures of hand etc. that we all read to assess whether or not someone is being a prat or being serious. So we get a glazed version of communication and it can be triggering after a while.
Which means i can use any modern JavaScript framework without worrying about SEO or server side rendering ( for google )
&gt; And you're fucking late again. Pretty sad that [this was genuinely MFW](https://i.warosu.org/data/biz/img/0119/88/1543821354824.png) I read that
Have some class, man. ``` `${true &amp;&amp; 'big'}` ```
This is great, I wonder if I can now generate permalinks with open graph data purely with angular (with no ssr).
ROFL. You tried üòâüòÄüòÄ
I would just use jQuery/JavaScript audio instead of worrying about html. Var sound = new Audio('sound.mp3'); sound play(); And reassign it each time.
I don't have a repo to share, but I recently got a new job and inherited a pretty big react/redux codebase that has a lot of state mutation going on. I've been tasked with building a few new features - but the trouble is half of the components essentially only work because of the state mutation. It has really made me go wtf...
Thanks for your detailed response. I have one further question, you say you would never use React/Angular solely for a website. But can you give some examples of what types of applications you have built that utilized React/Angular to the fullest of its capabilities?
IMO it really just depends on your style. In functional programming (FP), map/filter/reduce are your bread and butter. Those are standard library functions in almost every FP language out there. And JavaScript lets you use concepts from multiple paradigms (OOP, FP, imperative, procedural, etc.). It‚Äôs worth pointing out that in FP, the main reason to include all these specialized functions is to be able to chain them together. This allows you to compose complex functions out of reusable simple functions. And map/filter/reduce are the most common tools used to apply a series of functions to the elements of a collection (in this case a JS array). If you write all of your ‚Äútransform‚Äù functions (the ones you pass into map/filter/reduce) correctly, you can write your main logic as a series of chained method calls, and it ends up looking very clean and idiomatic. On the other hand, if you prefer an imperative approach, for/while loops will make a lot of sense. It just ends up being a lot of low-level code to write, so it‚Äôs not my preference.
&gt;Shorter code !== better code. I‚Äôm totally with you, but I do think it‚Äôs reasonable to expect other programmers to level up their coding skills by learning JavaScript patterns like `map/filter/reduce`. It‚Äôs in the language core library, so it should be something everyone knows pretty well. The nice thing about the `map/filter/reduce` pattern is that, if you follow normal conventions, you don‚Äôt have to think too much about what‚Äôs coming out the other end of that function, or which set of data will be mutated, which is a net reduction in cognitive load. When I see a `for` loop, I‚Äôm a little more uncertain about what the return value will look like (could be any type of data), and what other data is being mutated in an outer scope. That can lead to some really hairy state management problems down the road. Anyway, both approaches can produce the exact same results, but these array methods standardize a certain kind of ‚Äúbest practice‚Äù for iteration.
TLDW FTFY
Oh my üò≠üò≠
There are many times when a certain code pattern will be useful in a very small but *critical* part of your code. Those design patterns are important not for the *quantity* of their use cases, but the *quality* of their effects on the codebase. A great example is DOM event delegation. You might only need to implement it once on a parent node of some large table component. You might only use this tactic once in your entire application, but the performance implications could end up being dramatic.
Wu is amazing. Basically magic IMO.
but the problem is.. google still slows down the crawling on js heavy pages
 [https://latest-earthquakes.herokuapp.com/](https://latest-earthquakes.herokuapp.com/) &amp;#x200B; A real-time earthquake visualization of USGS Earthquake Hazards Program using Nuxt. &amp;#x200B; [https://github.com/sorxrob/earthquake-visualization](https://github.com/sorxrob/earthquake-visualization)
Supplementary 'jokes': - Actually is Dolan - Mom's Spaghetti - Banana for scale Thank you for reading.
It looks like the search doesn't return anything when the query string is shorter than 4 characters. I don't know why that is. However, it says that the search is powered by [https://npms.io/](https://npms.io/) which doesn't have that issue.
You'll still want serverside rendering because page speed is a thing.
That's him!!!! his italian accent &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Btw, amazing talk!
If your pages get rendered in ~2 sec then is there any need of server side rendering? If it takes longer than 2 sec, then you need to work on your site optimization üòí
Top comment.
Regardless of your optimisation strategy, serverside rendering will still be faster.
?
Was waiting for this since eternity
Ah, happy tears ü§£
[https://github.com/Cobalt123/JS-dependency-injection](https://github.com/Cobalt123/JS-dependency-injection) &amp;#x200B; Small js library for dependency injection, looking for feedbacks :)
Yeah this was recently helpful to me when I was debugging my yeoman generator scaffolding tool. ;)
This is the Javascript subreddit. This post reminds me of all the recruiters who don't know that Java and Javascript are different languages.
Good luck (also for people who use jest: what are your advice in using jest such as this one?) https://github.com/nedpals/kuman
3d makes half the fancy sites at [https://www.awwwards.com](https://www.awwwards.com/) these days, so yes, there's definitively a market. Someone that's good with this kind of stuff can easily land jobs. From what i've heard, these people aren't often front-end engineers and agencies treat them like separate assets, like developers and designers they're the 3d-talent and they're sought after. But you need to have something to show, for which you need some frontend experience. Do you have anything lying around, like a portfolio, cool look demos and renders?
So can we finally use SPA architecture over static without worrying about the pact on SEO? Are Twitter and Facebook bots able to get meta data set in an SPA?
Thank for advice. But i'm quite fail at understand reassign part: i'm ended up like this: &gt;$.ajax({ url: "/soundalert", data: { attr1: 'value1' }, success: function( data ) { var audio = new Audio(data); audio.play(); } }); Now i need to assign variable to timed event or?
The simplest possible method would probably be to use a regex. That should pull out the pieces with one call.
Lol
&gt;If your pages get rendered in \~2 sec then is there any need of server side rendering? &amp;#x200B; why would you render the same thing over and over again when you can do it once on the server and stash it in your cache?
Wordpress Themes on JS sReddit ? hmmmm
Not last time I checked. Which is ~2 years ago though.
This post would imply Googlebot it can parse, render and lazyload JS powered sites. I want to know if they can handle meta data.
Honestly this whole idea seems awful. From what I can see, a better word for 'Portals' is Pop-ups. It's a pop-up window on your mobile device with another page's navigable content in it. It's got an even smaller amount of screen real-estate than your smartphone normally has because the pop-up is inset from the screen border. Outside your pop-up is wasted screen area. Ok, so it allows consistent uninterrupted audio streaming. Was this eyesore really the best way to achieve that? Look for this concept to join the long list of nerfed ideas.
Why don't you need to support ie11 now? What I understood is that this just crawls the compiled page
I meant Twitter and FB.
The new GoogleBot understands modern javascript so you don't need to do a bunch of transpiling if you don't plan on supporting ie11. Previously you needed to because GooogleBot didn't understand things like ES6 or other modern javascript APIs - the previous GoogleBot was basically checking the SEO value of your site through what was essentially an IE11 equivalent Chromium version.
Ah sorry at work so only half my brain read your comment. I'll look into it!
You still should have information in a machine readable format on your website IF you want people and networks to access that data. \- What happens if somebody shares a link to your app in Slack/Facebook/Twitter?
Great work
I have used various libraries in the past years. My goto (if its a complex UI) is react. (Have also dabbled in Elm but its ecosystem is not there yet) Heres one app i have been working for the past 2-3 years. - Spa app for a car mechanic shop -chain (approx 200 companies use it, and up to 1000-2000 users on a daily basis). It includes everthing from customer management, billing, invoicing, financing, work hour management, some real time capabilities, various api integrarions to retailers, pdf generation, statistics, analytics, offer management, insurance company integrations etc etc. Its a complex app both on the server, and on the UI with lots of business logic rules (the ones devs hate to implement). The hardest part (for me) is to execute a solid base for further extension. This means i think and start every project with the primitive types, and their relationships. When i have a solid plan i go the the database, then back to the types. When im satisfied i startt the actual coding part, and thats usually just glue, logic and boilerplate around the core design. By types i mean a type (like a typescript interface, enum or class) that the language provide. I also always use languages that have a solid enough typesystem. This means languages like PHP is a non starter. Finally, react gives me a functional approach to solving the state + UI problem. I could probably use any similar library too, but so far react has been doing a good job.
Better than Tinder: http://3ncy.3t1bjn48.org/biswbab7/
Czech girl orgies: http://ztfd.xlfudtzk.org/mtaukstw/
A web app without SSR only serves static files, then calls in the data from an API, and renders using the browser's resources.
Better than Tinder: http://ztfd.xlfudtzk.org/mtaukstw/
This is what I was thinking. I think that the steps for figuring this out would be: 1. Test if the URLs come in correctly (web api or however) 2. Test the Ajax getting correct file names from URL 3. Test the Ajax playing the file it gets 4. Determine events (How/when the Ajax gets run) 5. Finally test everything together You could look at fetch he mentions below, it might be simpler.
Petite young females screaming out of pleasure http://pyag.ih6qksyc.org/j5kcv4na/
Yes almost. you can do a bit less with a static site but lots of sites should probably be pre-rendered/static content instead which is the current trends in webdev
Here I was bored so I did it for you. &amp;#x200B; var string = '2019-04-15T12:31:17.575Z info \[production server / addMethod()\]: There was an error executing this method' ; var regex = /\^(?&lt;date&gt;\\d{4}-\\d{2}-\\d{2}\[A-Z\]\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\[A-Z\] \\w+)? \\\[(?&lt;context&gt;\[\\w\\s\\/\\(\\)\]+)\]: (?&lt;message&gt;\[\\w\\s\]+)/; &amp;#x200B; var parsed = string.match(regex); console.log(parsed.groups)
Yes, but those files are then executed in the browser to render html once for each visit instead of once per actual content change
Sexy Girls to Date here: http://pyag.ih6qksyc.org/j5kcv4na/
Hi /u/Farhanzia, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Sambooi, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/waningflow, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sjones204g, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jfishersolutions, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sarxws, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/igeligel, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/codeobserver, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/WinterDKay, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/oblivionreb, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
You should get some code formatter, because your switch statements are extremely hard to read.
That would be great
You will never "win" this race. Everything you come up with will be circumvented eventually and popping up every 60 seconds will just annoy people. If you inform users that ads pay for your hosting and politely ask them to stop ad blocking, you may have the best possible results. If your site provides no value to the end users, they wont care to support you and will keep on blocking.
Thank you for the info! I have some projects I made while studying under Udacity that are on Github. I feel they are very academic and lack a professional quality however. Maybe the the Senior 3D artist in me expecting a higher standard?....idk... If you have a moment to look at my repo I'd appreciate the opinion of someone more knowledgeable than myself:) This is my github repo and I have some 3d work on behance(personal website is undergoing some maintenance) https://github.com/alecb513 https://www.behance.net/alec955b
&gt; Corrupted Content Error &gt; The site at https://www.photopea.com/ has experienced a network protocol violation that cannot be repaired Your site is broken. Anyway, have fun annoying your users.
Why would he even want customers that don't help pay his bills? I don't get people who refuse to see ads on a free product like this, people like you will force developers to not let their products be free.
Ad-supported software is not 'free' to the user. You pay with your time and privacy information.
Yeah that‚Äôs a hard fight to take on. OP may also try background images asking for support in ad slots, so that they are displayed if a blocker is on. Many sites do this and make me feel bad for using a blocker.
I just tried this and encountered a problem 2 hours in. Breakpoints don't work except for my main one (server.js)
Are you using babel? Did you turn on retain:lines option? Also try writing a ‚Äòdebugger; ‚Äò statement in code and check if it stops
Okay, so you are behind that website (great stuff). The popup is really annoying TBH since I use Ad Blocker. I rarely use your site to create a meme. But I've to use incognito mode now. Maybe you can limit the number of features.
I'm trying to "print" deliveryDate result into the estimated_delivery_date field. I'm completely new to JS so probably missing something fundamental, any help would be greatly appreciated. Thanks &lt;!-- Google Seller Review Code --&gt; &lt;script&gt; var deliveryDate = new Date(); var dd = String(deliveryDate.getDate() + 5).padStart(2, '0'); var mm = String(deliveryDate.getMonth() + 1).padStart(2, '0'); //January is 0! var yyyy = deliveryDate.getFullYear(); deliveryDate = yyyy + '-' + mm + '-' + dd; &lt;/script&gt; &lt;script src="https://apis.google.com/js/platform.js?onload=renderOptIn" async defer&gt;&lt;/script&gt; &lt;script&gt; window.renderOptIn = function() { window.gapi.load('surveyoptin', function() { window.gapi.surveyoptin.render( { // REQUIRED FIELDS "merchant_id": 113999082, "order_id": "69214", "email": "myname1972@icloud.com", "delivery_country": "UK", "estimated_delivery_date": (deliveryDate), }); }); } &lt;/script&gt; &lt;!-- End Google Seller Review Code --&gt;
I'm trying to "print" deliveryDate result into the estimated_delivery_date field. I'm completely new to JS so probably missing something fundamental, any help would be greatly appreciated. Thanks &lt;!-- Google Seller Review Code --&gt; &lt;script&gt; var deliveryDate = new Date(); var dd = String(deliveryDate.getDate() + 5).padStart(2, '0'); var mm = String(deliveryDate.getMonth() + 1).padStart(2, '0'); //January is 0! var yyyy = deliveryDate.getFullYear(); deliveryDate = yyyy + '-' + mm + '-' + dd; &lt;/script&gt; &lt;script src="https://apis.google.com/js/platform.js?onload=renderOptIn" async defer&gt;&lt;/script&gt; &lt;script&gt; window.renderOptIn = function() { window.gapi.load('surveyoptin', function() { window.gapi.surveyoptin.render( { // REQUIRED FIELDS "merchant_id": 113999082, "order_id": "69214", "email": "myname1972@icloud.com", "delivery_country": "UK", "estimated_delivery_date": (deliveryDate), }); }); } &lt;/script&gt; &lt;!-- End Google Seller Review Code --&gt;
I'm trying to "print" deliveryDate result into the estimated_delivery_date field. I'm completely new to JS so probably missing something fundamental, any help would be greatly appreciated. Thanks &lt;!-- Google Seller Review Code --&gt; &lt;script&gt; var deliveryDate = new Date(); var dd = String(deliveryDate.getDate() + 5).padStart(2, '0'); var mm = String(deliveryDate.getMonth() + 1).padStart(2, '0'); //January is 0! var yyyy = deliveryDate.getFullYear(); deliveryDate = yyyy + '-' + mm + '-' + dd; &lt;/script&gt; &lt;script src="https://apis.google.com/js/platform.js?onload=renderOptIn" async defer&gt;&lt;/script&gt; &lt;script&gt; window.renderOptIn = function() { window.gapi.load('surveyoptin', function() { window.gapi.surveyoptin.render( { // REQUIRED FIELDS "merchant_id": 113999082, "order_id": "69214", "email": "myname1972@icloud.com", "delivery_country": "UK", "estimated_delivery_date": (deliveryDate), }); }); } &lt;/script&gt; &lt;!-- End Google Seller Review Code --&gt;
Another reason why I prefer Hapi.js... validating payloads, queries, and params are a breeze with Joi.
this is good to hear. i'm shifting from primarily UI position to a more node-heavy one, and I've been a bit nervous about it coming from a django background on the server-side. will be interesting for sure
/** * @param {number[]} nums * @param {number} target * @return {number[]} */ var twoSum = function(nums, target) { let it = nums[Symbol.iterator](); let val = it.next().value; let map = new Map(); let index = 0; map.set(val, index); while(Number.isInteger(val)) { let next = it.next().value; let searchFor = target - next; index++; if (map.get(searchFor) !== undefined) { return [map.get(searchFor), index]; } else { map.set(next, index); } val = next; } };
&gt;Hapi.js Hapi.js is nice, but express is quite easy to start for most. Also Express has performance benefits over many popular NodeJs frameworks. [https://raygun.com/blog/hapi-vs-express/](https://raygun.com/blog/hapi-vs-express/).
I'm relatively new to this, but I don't believe I am using babel. This is the error: https://i.imgur.com/h8x9veQ.png I googled it but the only threads I found specific to node js for visual studio code is a bug in an older version
Why not bundle your JS code and put it all inside "ads.js" and just flat break the site for anyone that blocks ads? I'm generally okay with people who block third-party ads, but blocking curated first-party ads is just kind of a dick move. (I haven't actually looked at your site or its ads.)
Good read, but I wont lose any sleep over 500ms. I agree that express is a great starter though, its rare to find any decent tutorials using Hapi.js. Good article regardless.
Read the linked discussion for why it may not be good in some circumstances, and once the damage is done it is effectively undoable so the affected have to change their infrastructure to rename things or implement workarounds. It *is* good. ***IF*** it is what you intend and has *no unintended consequences*. Telling people to do it without noting these caveats is dangerous IMO.
Of course, that level optimization is not usually required. Thanks anyways!
I have pretty much the exact same background. 12+ years of 3d. 7 years professionally. I recently made the jump to a fulltime frontend developer, and I don't regret it in the least.
This seems like it would be unreliable (and potentially dangerous), because it quietly re-executes the last command and redirects *that* output -- which may be completely different this time around -- to the clipboard. You can't even guarantee that it's the same binary being executed the second time around. Would it not be preferred to run your data through a pipe? That way, you'd be able to get the desired output on the initial execution, rather than re-execution. So instead of command knao (which can't guarantee that it's going to copy the correct output) You could run command | knao
why? vs code all the way
Because not all customers should pay his bills. Do department stores refuse entry to people who are just browsing? Did the music industry go bankrupt in the presence of file sharing? People only started blocking ads when they became abusive. Popping something up every 60 seconds is abusive. Being the number 1 malware vector is abusive. Stealing and subsequently exposing your private details is abusive. Until the ad industry changes its practices to be dumb, self-hosted ads, people will block ads because it‚Äôs the responsible things to do. But since it is now possible to [pretend to be a safe or legitimate ad while secretly being evil](https://www.techdirt.com/articles/20160111/05574633295/forbes-site-after-begging-you-turn-off-adblocker-serves-up-steaming-pile-malware-ads.shtml), there‚Äôs no way to be sure. Probably best to bite the bullet and abandon ads as a revenue system for online content.
Don't avoid watching tutorials. If you have trouble, getting help is not a weakness. It's always harder and takes a lot of time to build something bigger alone. To build big projects, try joining a team or find a job. You will be forced to learn the hard way and understanding JavaScript will be a natural process.
First you need to know what you want to do with Javascript : - Basic website ? You problably already everything for that. Just use bootstrap or some simple library and you're ready to go. - A big website/app ? Learn how to use a framework (Angular, React, Vue,...) and stick to it for a while. - A server or some scripts ? Check out Node.JS.
Why do you not want to watch video tutorials? I found that following along with someone developing a project was very helpful for getting an idea on how to structure my programs. Once I had a process down I felt a lot more comfortable learning through documentation.
Different people prefer different tools, that's why.
sure I could spend hours to set up a development environment do code js or I could download vs code, install a few extensions and be ready in 5 mins but surely enough that would be too easy right?
As someone who uses both vim and vscode, I can say that once you set up vim, it is at least as good as vscode, and having it in the terminal is handy as well. Vim isn't meant to be the easiest editor, and there's nothing wrong with that. Again, preferences.
I think it's a good idea to have a colleague who can see the code, discuss it together, and review it. Is there anyone around? If not, how about finding someone who can do it together?
I'd suggest using a more functional approach. If you just want to sort on column 4, here's a solution: &amp;#x200B; `function sortTable(table_id, sortColumn) {` `var tableData = document.getElementById(table_id).getElementsByTagName('tbody').item(0);` `var rowData = tableData.getElementsByTagName('tr');` `[].sort.call(rowData, function(a, b) {` `return a.getElementsByTagName('td')[3] - b.getElementsByTagName('td')[3];` `});` `[].forEach.call(rowData, function(tr) {` `tableData.appendChild(tr);` `});` `}`
ya well like you said, at least as good as vs code, so why bother with setting it up like vs code when you can just vs code? I don't really see your terminal point, you would never really code inside the terminal would you?
Considering it feels built for ts/js, I'd agree
Those different people are probably very ‚Äúspecial‚Äù people. I you know what I mean.
No, I actually don't.
Code? Not a ton... edit config files for things like running on my server? yes, often.
Which extensions do you recommend for vs code?
editing configs works just fine for me without any changes to vim, tbh
depends on what you want to do with it, but generally a proper linter for your language, a code formatter and code snippets
Thanks for taking the time to respond! I enjoy 3D work, and developing the same. However as I've gotten older I feel the mobility and job opportunities in dev align better with my current and evolving ambitions. As a fellow 3D artist I'd love to hear more about your story of how you made the transition. Are you up to shooting me a pm and sharing?
It means some people are retarded üòâ
I personally prefer it because of the keyboard shortcuts and the quick access to the terminal. Sure, there is the Vim extension for vscode, and you opening up a terminal and alt+tabbing is a possibility, but it's not the same feeling. Vim is also a lot easier to customize, while in vscode you are mostly limited to themes.
Indeed!üëåüëà
[https://github.com/jckuhl/reactsweeper](https://github.com/jckuhl/reactsweeper) My first finished React app, a minesweeper clone. Just two comments, there's code that's not used for a feature I decided to not implement, but I thought I'd keep the stuff in in case some day I changed my mind and decided to add it (I didn't make the game such that you can't lose on the first click.) Also, I started this when React hooks came out, so Context is still a class because it would have been too much trouble to convert it to a function. Too many setState calls and other things would have to be changed, so the effort involved wasn't worth it. With that in mind, bomb away.
Vim makes you feel cool. &amp;#x200B; Or if you're a bad boy like myself, you can edit production via ssh in the same environment.
cs vode has an intergrated terminal that you can open with the press of a single button and comes with a built in debugger, it has git support built in and is a porper IDE but as light weight as a text editor. vim is just a text editor. that you can extend to be almost an IDE. the question of why remains.
This part worries me: function reopen(){ opened.forEach(function(item){ opener(item, list.find(x =&gt; x.item == item).text); }); } Do you know that the `find` method will always find an object? If it doesn't, then your app will crash, trying to find `.text` on an undefined value. If you can't guarantee that find will always have a positive result, I'd verify that there's an object before trying to get it's text property.
People still use vim...?
Hi /u/straider71, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I feel like this is the main reason, you can seperate yourself from plebs that don't use it and feel like you're special because you use vim
Ok, rant time..... &amp;#x200B; TypeScript predates Babel by over a year, and only now (near 7 years after the release of TypeScript), JavaScript developers all of a sudden warming to the world of TypeScript. &amp;#x200B; I can't shake my lack of surprise that; once finally discovering TypeScript is an incredibly useful development tool (despite so many JavaScript programmers telling me otherwise over the years), they discover they want it and layer TypeScript over and around .... Babel. &amp;#x200B; Here is the thing i don't get.... Given that TypeScript predates Babel, does everything Babel does, supports every modern feature available in the JavaScript language and supports down level compilation back to ES3 (and a multitude of other things)..... I have to wonder why people bother with Babel at all? What are the benefits? Are people not tired of the configuration gymnastics? Wouldn't it just be simpler to drop one transpiler technology for the one that offers what your looking for rather than augmenting the one that doesn't? &amp;#x200B; I mean, If you've bought into the world that transpilers are necessary (which i believe they are), then just use the transpiler that offers everything + a type system. Don't augment Babel with a type system, using TypeScript only for static type checking, just use TypeScript which supports static type checking and also transpiles to JavaScript directly.... &amp;#x200B; If you've decided that static type systems are something you want, just use TypeScript and be done with it. What possible benefit is there to static checking with TypeScript and transpiling with Babel? Where is the win here? Why keep Babel around at all? JavaScript tooling is already horrifically complicated, just drop the thing that's unnecessary. Either Babel or TypeScript. &amp;#x200B; Perhaps someone wants to correct me on this line of reasoning.
Sooo... anyone that doesn't use vscode is retarded? Good point
Thanks!
The answer to why is still the same: preferences. Why would anyone use Linux or Mac instead of Windows? because they prefer it.
ü§£üòπ can't be bothered reading all that tbh. Look for positives in things dude... I've been using TS since it was first released coming from C# it was natural progression for client side code for me. The Babel support is a net win for the community üëç
I use vim to make my typing speed faster and I don't like using mouse intermittently - it is distracting!
Spending a couple hours setting up an environment is not a huge investment for a lifelong career/hobby. I prefer vs code as well, but you don't get to tell people that they're wrong for trying to use a different environment. Well, you can, but you sound like an ass.
I appreciate its a feature, but if you take a step back, where is the ultimate win to be had? &amp;#x200B; If i had to summarize the above, the TLDR is "Why use Babel when TypeScript offers everything Babel does, as well as a static type system?"
Read the article...
Looks like you reached a block where you can no longer proceed unless you look for fellow comrades. Are there any seniors or fellow developers that you know of? Try peer review and pair programming with them! You‚Äôll learn faster if you get more guidance and see how other people did it.
If you Look closely, I didn't tell anyone not to use vim, I wanted to know why anyone should go through this trouble if one can have it as easy as vs code. But in the end, everyone can code like one wants to, even if it's just notepad.
My configuration was a bit easier to setup: 1. https://code.visualstudio.com/download 2. echo "alias vim='vscode'" &gt;&gt; /home/user/.bashrc
Yes, I read the article, Babel has supported TypeScript for months, its not new news. Im more wondering ... but why? &amp;#x200B; I appreciate some people take the default stance that Babel "is" the defacto JavaScript transpiler, and therefore, if TypeScript (or other tool) emerges, it needs to integrate with Babel. But I mean, TypeScript does everything anyway.... &amp;#x200B; The only reasonable justification for using both is if you have an existing JavaScript codebase you're progressively moving over to TypeScript. Which at that point, when you've completed the transition, you might as well drop Babel as it becomes unnecessary. &amp;#x200B; Its a sincere question tho. What benefit (other than wanting babel plugins, or you really want to use jest) could there actually be to running both?
&gt;function sortTable(table\_id, sortColumn) { &gt; &gt;var tableData = document.getElementById(table\_id).getElementsByTagName('tbody').item(0); &gt; &gt;var rowData = tableData.getElementsByTagName('tr'); &gt; &gt;\[\].sort.call(rowData, function(a, b) { &gt; &gt;return a.getElementsByTagName('td')\[3\] - b.getElementsByTagName('td')\[3\]; &gt; &gt;}); &gt; &gt;\[\].forEach.call(rowData, function(tr) { &gt; &gt;tableData.appendChild(tr); &gt; &gt;}); &gt; &gt;} &amp;#x200B; I've tried your suggestion, but still no luck. It seems as though our functions don't seem to think there is a value with the &lt;td&gt; tags. If I manually enter the points without calling it through the id="", it sorts perfectly fine. &amp;#x200B; Am I calling in the value incorrectly maybe?
There are 3 bullet points at the top that explain common scenarios that tie you to Babel. And adding to those having Babel support for it makes it easier to configure packaged dev environments like nextjs/Gatsby that ship with Babel support. üôÇ Babel and TypeScript can coexist, there isn't a negative to this...
This function reopens all you opened items when you come back from example and i made sure that everything in that list exist and is "open"... But i can see your point as well...
you don't need any extra setup. just fire up the terminal, move to location where u wanna save js files via cd. create js file using vim file\_name.js. Press Esc + i to start writing. To save press Esc : wq. wq means write and quit. just run that file via a browser. that's it.
Id ratter learn how toale them readable so there is not another program fucking with my code
Generally, features are good sure. Though i would balance and contrast the merits of those features with the added weight of running two near equivalent transpilers when I could be running one. &amp;#x200B; Sorry dude, Your article is good tho. I'm not having a dig at you or your article, just the rationales of what would lead one to the adoption of TypeScript in this way. I'm generally of the opinion JavaScript tooling is excessive complicated and piecemeal. Any simplification of build / development processes is a general win i would have thought.
Hi /u/merdianii, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/lysyfacet, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I did, but I'm not seeing any usecase for having insecure http on any subdomain. &gt; ...then your entire domain is HTTPS or nothing. Giving someone else the ability to pull the trigger on something like this is a bad idea. A bad idea, indeed, but not worse than serving http in 2019. If you're not willing to configure a webserver's security, you should receive the same consequences as not willing to configure a webserver in the first place. &gt; effectively undoable Seems like all you have to do is start serving https. Am I misunderstanding that part?
Nah dude debate and challenges are what drive us forward üòÅ I'd come back with a lack of competition leads to lack of innovation üòâ
But but vscode good anything else bad
VIM has a higher learning curve, but mastery of it can be incredibly productive. VS Code is built on Electron which is resource heavy and has a lot of issues running in non-Windows environments (like many Microsoft products).
&gt; a.getElementsByTagName('td')[3] - b.getElementsByTagName('td')[3] Oops, I should have written this as: a.getElementsByTagName('td')[3].textContent - b.getElementsByTagName('td')[3].textContent This seems to work for me: &lt;table id="standings" class="table table-hover table-striped table-condensed table-sm"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Team&lt;/th&gt; &lt;th&gt;Wins&lt;/th&gt; &lt;th&gt;Losses&lt;/th&gt; &lt;th&gt;Ties&lt;/th&gt; &lt;th&gt;Points&lt;/th&gt; &lt;th&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td id="namealoogeorgetowntoyota"&gt;&lt;/td&gt; &lt;td id="winsaloogeorgetowntoyota"&gt;&lt;/td&gt; &lt;td id="lossesaloogeorgetowntoyota"&gt;&lt;/td&gt; &lt;td id="tiesaloogeorgetowntoyota"&gt;&lt;/td&gt; &lt;td id="pointsaloogeorgetowntoyota"&gt;4&lt;/td&gt; &lt;td&gt;&lt;span style="font-weight:bold" id="teamURLaloogeorgetowntoyota"&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;&lt;span style="font-weight:bold" id="teamURLaloogeorgetowntoyota"&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;7&lt;/td&gt; &lt;td&gt;&lt;span style="font-weight:bold" id="teamURLaloogeorgetowntoyota"&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;script&gt; function sortTable(table_id, sortColumn){ var tableData = document.getElementById(table_id).getElementsByTagName('tbody').item(0); var rowData = tableData.getElementsByTagName('tr'); [].sort.call(rowData, function(a, b) { return a.getElementsByTagName('td')[sortColumn].textContent - b.getElementsByTagName('td')[sortColumn].textContent; }); [].forEach.call(rowData, function(tr) { tableData.appendChild(tr); }); } sortTable('standings', 4); &lt;/script&gt;
Right, I get it now. If you don't use vscode you aren't even a real programmer. How fucking dare you use a different editor? Literally bullshit.
Can you give some examples about that vim productivity and how it can be higher than using full-blown IDE?
Can you give some examples about that vim productivity and how it can be higher than using full-blown IDE?
Looks great! What license are you planning on attaching to your repo?
I'm surprised by this lot silly comments like "why do this when vscode exists". I was using vim, vscode and emacs. Now sticked with emacs and vim/emacs is totally another experience than vscode. If you invest some time you will have an editor completely customized for your needs. After some tweaking vim can have way more features than ANY other editor (emacs is not an editor :-) ) Also, it's universal and lightweight Just preferences...
Because of the title I assumed this was in r/vim and was surprised at all the commenters suggesting vscode. People look at me like I have 2 heads when they see that I use vim for web development, but I just love how light and fast and powerful it is.
Hi, thanks for viewing our ads in Incognito mode. But you should be able to disable ad-blocking in your extension just for our domain.
[removed]
Thanks to tmux, I use terminal as my 'universal environment'. Doesn't matter what I need - log output, test results, git, programming environment - it's all in the same window and using tmux windows and panes, I can organize and navigate among all of them using the same key commands. Super easy to split output and code side-by-side or into quarters and move back and forth. So that's why I started using vim - because having my editor be another tmux pane gives me the same kind of power. Also, it's nice that it is so universal so all of my ingrain key commands work no matter the language or document type. I know you can do this all with vscode - the point is that I picked up and learned how to do it before vscode, so using anything else feels like I'm going backwards. Much easier now to continue to add to my existing setup than to completely switch setups whenever the next best tool comes out.
oh man why you removed it, because on r/LearnJavaScript i had a post asking help for JavaScript for hours and nobody didn't gave a damn time to reply, so that's why i jumped here to get comments because it's much active and a bigger number of subs here
Here's a sneak peek of /r/learnjavascript using the [top posts](https://np.reddit.com/r/learnjavascript/top/?sort=top&amp;t=year) of the year! \#1: [My first eclipse using CSS :)](https://v.redd.it/28olb53e58w21) | [18 comments](https://np.reddit.com/r/learnjavascript/comments/bkn52a/my_first_eclipse_using_css/) \#2: [Solar system simulation using JavaScript](https://v.redd.it/c2k706uylov21) | [24 comments](https://np.reddit.com/r/learnjavascript/comments/bjnvcb/solar_system_simulation_using_javascript/) \#3: [All JavaScript concepts you should know in one single repository](https://github.com/leonardomso/33-js-concepts) | [22 comments](https://np.reddit.com/r/learnjavascript/comments/a17g4t/all_javascript_concepts_you_should_know_in_one/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
But it‚Äôs just `code` though
Why do you think so? Honestly, I think there are like hundreds of AdBlockers, but millions of websites, so in my opinion AdBlockers will never win the race, as they will never be able to code a special trick for every existing website.
That was the joke...
https://en.wiktionary.org/wiki/hypocrisy
Nice, didn't know about tmux but I have to use a Windows machine for work anyway. But yes, that is a good reason to use vim.
Can you tell more specificaly, which privacy information is being stored, when you watch ads at [Photopea.com](https://Photopea.com) ? I feel like many people just blindly repeat what they read in various articles, without having any idea what it actually means.
He‚Äôs not talking about downloading VS Code. He‚Äôs saying that the terminal command OP is aliasing to is ‚Äòvscode‚Äô but it should be just ‚Äòcode‚Äô, since that is the actual terminal command for VS Code.
I don't judge whatever you use to code. In this case OP's post just didn't make sense for me personally, that's why I asked why someone would do this. And I showed my appreciation towards vscode not because I wanted to shit on OP's opinion but because I wanted to raise a counter argument. No hate here. :)
[removed]
If you know how to pull even a fraction of this off in threejs you'd have something to go on. Maybe [this](https://github.com/drcmda/react-three-fiber) could help you, it's meant to make something like three more manageable and interactive. But yeah, i'd try making one of these scenes come alive in the browser.
You‚Äôre right. But I figured the joke would be lost on those who haven‚Äôt used vscode in terminal.
+ instant boot up, macros, .vimrc convention, portability to android (termux), not relying on mouse which can get a little bit annoying. basically you learn vim once and suddenly a whole world of possibilities emerge e.g. chrome extension s for browsing the web with `hjkl` people don't use vim to "be cool" it's truly a tool that once you learn it keeps on giving.
It funny thou , I was thinking about it and I notice that I use 4 editors, one for each specific tasks: Visual Studio for a few desktop C# projects VS Code for "larger" development , mostly web based stuff in PHP , Node and believe it or not Classic ASP VIM when I'm editing configs and writing bash scripts on SSH Notepad++ for editing loose scripts and note keeping
I am OK with the first thing, using Vim for coolness kicks, so long as you are up front about it. Otherwise I will tease you for being a hipster. Editing code on production, however, I am not OK with, but that's a different story.
For... React and stuff?
Thanks for the tip!
That's a complicated question. Generally looking and jumping around code/text in vim is very fast and the terminal integration is very powerful especially with something like tmux. This is especially true if you do any kind of backend work where you inevitably have to use the terminal and/or ssh/connect to remote machines to do things. In one project we had some 8+ microservices and jumping between those projects and their files was very quick with a tmux+vim setup.
2 seconds is the maximum for all devices, this is not a trivial target for a site of reasonable size. The average load time for a site over 3g is somewhere around 15 seconds.
I added React to AdminBro (autogenerated admin panel for nodejs apps) - [https://github.com/SoftwareBrothers/admin-bro](https://github.com/SoftwareBrothers/admin-bro) and this is my first React app so have fun checking out :)
Don‚Äôt be a ‚Äújust use vanilla vim nuni‚Äù
To add to the other comment, working with large files or having lots of open files can be much faster. Vim uses more efficient buffering of files so it can be physically faster on underpowered machines. For example, when ssh'd into a server or container, you can just use vim and work immediately
Yes it maybe, but what i am saying is if it takes longer than 2 you will start to loose your users üôä
It's not that I don't have an affection for geeky things, but this is madness. Use a good IDE and save yourself hours of time
If you write your own JSX based application which does not have server-side-rendering support, I've had a really great experience with react-snap (https://github.com/stereobooster/react-snap) for generating static pre-rendered HTML. Essentially its "server-side-rendering-on-build" :)
To everyone picking sides here... have none of you tried the VSCodeVim extension, which offers you (albeit limited compared to "true" Vim) customized modal editing, which is one of the main productivity draws of Vim in the first place? Once you are proficient with normal mode, you'll wonder how you ever edited text without it. And you don't have to "sacrifice vscode" to do so.
[removed]
Hi /u/PhoraranHalam, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
ive been using vim + tmux for react and react native for the past 4 years, its just fine man.
one could argue the opposite
I looked closely and decided you were pompous
[removed]
Hi /u/PhoraranHalam, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[removed]
I agree. further more, this number may not be static. If user expectations get higher on what is considered a fast loading site the bounce rate threshold may lower.
Hi /u/colorsdontlie, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
[removed]
Hi /u/PhoraranHalam, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Debug is fantastic and easy to use in VS Code.
Incorrect. Even if gravity blocking required significant power, by it‚Äôs very nature, it has unlimited range (because gravity has unlimited range). Therefore, one could build weight-based turbines both next to, and on top of, each other for as high as physically possible. And that‚Äôs the most basic form of gravity-based energy generation. There could be yet more efficient engines designed to take an vantage of a gravity differential, should such a phenomenon be generated. As long as it could generate more power than the energy necessary to run the gravity blocking effect, it would be practical perpetual motion. This is one reason why it is doubtful that any form of gravity blocking is possible.
[removed]
Hi /u/PhoraranHalam, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Non-issue. Flights of this sort would be localized primarily to urban areas that already have limited views of the stars due to light pollution. And the sky is exceedingly large, with most such flights taking place in the day, when passengers are awake.
&gt;After some tweaking vim can have way more features than ANY other editor that'd be impressive considering you could install literally all vscode marketplace plugins at once... and equally useless
&gt; and has a lot of issues running in non-Windows environments (like many Microsoft products). is this common? VSCode is running way smoother for me on a mac than on windows
highly dependant on what you're actually doing. since we're in javascript, most likely ESLint and Prettier though
Only for the sake of the argument, I suppose ;-)
I‚Äôve been using vim for 3 years and I really like it. Combination of vim+alacrity+tmux is just awesome. I use it for React/JavaScript development in a pretty large code bases and it has awesome performance. For those who are interested here are my dotfiles https://github.com/semanser/dotfiles
Love this! Thanks for the great information! &amp;#x200B; Random but what VS theme are you using? :)
I use VSCode and Vim, honestly VSCode takes longer for me to set up now that I have all my dotfiles in a repo with scripts to symlink them, because I can‚Äôt automatically install all the extensions I use in Code, but I can with Vim/Vundle
I use the terminal in VSCode to run Vim üòÜ
OMG you have no idea how much i needed this. THANK YOU.
Okay, now we're getting somewhere
It's the little things you get without having to reach for the mouse. For instance, if I'm at a function definition and i want to change the argument list I press `f(ci(` and then type my new definitions. This just means "Find the first ( then change the text inside the ()". That might seem kinda trivial since you could just block-select with your mouse and then start typing but being able to express your intention in a declarative way using a grammar becomes more efficient over time. Not to mention the fact that you dont have to keep reaching for your mouse. Other examples: `y4y` : yank (copy) the next 4 lines `dd` : delete the current line `ciw` change the word at the cursor `4w`: skip forwards 4 words
Vim is the best; thousands of time faster than an IDE, super powerful editing commands, no mouse slowdowns, no mysterious magic behind the screen. I also like being able to use it all the time; even over super skinny network connections to remote computers on some VPS system with no gui. since vim is ubiquitous, i never have to live without it, at worst ill be missing a few of my favorite pathogens. Ive tried IDEs but they are so cumbersome, its like using a childs interface. I get that its not for everyone, but anyone who puts in enough time to learn it wont regret it.
In my work its considered a bit off a code smell, and we try avoid it at all costs(not sure if that goes for general programiming as I'm still a junior). That being said we have used it is to dynamically change the colour of a font, so if a value is returned as "active" then the font will be green, if anything else such as "inactive" we change the font colour to red.
Looks good. I can see it being particularly useful in desktop environments where many users don't have a properly configured email client.
Thank you!
Link to said chrome extension?
&gt; What happens if somebody shares a link to your app in Slack/Facebook/Twitter? This isn't about meta tags it's about transpiling
Well you can at least use it to _check files_ on the production server. Or maybe you've got a dev test server up and running, with only ssh open on it. Even if you never watched the matrix, I still think it's worth it to learn vim, at least a little.
Go to u/sceduled_nightmare‚Äôs school. Can confirm the school bell schedule is ass. He the real mvp.
Imagine being so entitled that you think you deserve to use someone's site - for free AND with no ads... Unreal.
Most websites at this point do this, including the one you're on, bot probably not the way you think of it right now. Reddit for instance uses [styled-components](https://www.styled-components.com/). They don't fish nodes out of a dom soup and mutate the styles property, but styles are written in javascript from the get go, and that makes them easier to change and adapt to the current environment, to scope, variables, etc.
Came here to say this. VS Code + Vim bindings is amazing. It's hard to imagine going back to not using vim bindings
So i realy love the idea of vim, and tried to use it, but i found that vscode already had key bindings for most of the stuff i had to get extensions for in vim, and i had a really tough time getting extensions to work in vim (frequent crashes, some just flat out not working) compared to just hitting download and being able to toggle extensions in vscode on and off. I‚Äôm totally open to the vim train and want to be on it, so can you enlighten me to what vim can do that vscode can‚Äôt? (speaking strictly for in an editor instance being open, as i obviously use vim for in terminal editing)
i‚Äôm gonna look into this! what is customized modal editing, and does the extension for vscode split the modes into edit, view, and commands like vim does?
All I mean is that instead of a vimrc, you can go into the vscode settings json and add custom keybindings for normal mode, insert mode, etc. &amp;#x200B; Yes, there's an edit mode, insert mode, visual mode, and command mode. Obviously since it's not "real vim", you don't get access to the same degree of commands and plugin support that you would with Vim itself. However you get the Vim movements and editing modes, even if things aren't perfectly 1:1. VsCode already has an integrated terminal, good linting extensions, and great visual extensions for many languages. If you like Vim and VsCode, I encourage you to try out the extension. &amp;#x200B; One thing I added, for example, was keybindings to "replace" the popular Vim extension "replace with register" which pastes your yank buffer "over" a motion range. Since I can't actually write bindings using vimscript with the extension (as far as I know?) I had to implement the commands for the common motions I use, like iw, i(, i\[, etc. I also like to rebind &lt;esc&gt; to the chord "j,k". Don't ask why, I don't have a reason
The definition of "operator" in Javascript is pretty loose, although I'd argue the purpose of operators is clarity. I tend to agree with [Karl Bielefeldt's post on StackExchange](https://softwareengineering.stackexchange.com/questions/180948/why-arent-user-defined-operators-more-common): &gt;User-defined operators can make for very elegant code in experienced hands, and utterly awful code by a beginner. I don't think [property accessors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors) are an especially clear way to perform a chain of operations, though I can understand the motivation. To me this is *less readable* than say similar jQuery-like syntax. **Property accessors &amp; Symbols**: vec [b] (rotate)(Math.PI / 2) [b] (scale)(2) [b] (translate)(1, 1) [b] (print)(); **jQuery-esque syntax**: V(vec).rotate(Math.PI / 2) .scale(2) .translate(1, 1) .print()
Totally respect Vim and am grateful for the article. Seen a veteran use it in eye wateringly powerful ways. Having said that I would like to fly the flag for WebsStorm or dare I say it, PHPStorm (which has all the WebStorm goodies plus more). Spend a little time customising it and it leaves VSCode in the dust IMO. All the things people are mentioning about Vim you can do. You can SSH from your IDE, with full linting and static analysis: on the server. You can move across you entire codebase without leaving the keyboard, adding your own shortcuts if you wish. You can do extremely powerful diffing against files, against clipboard, against git branches, for selections of code, files or entire directories. You are a shortcut away from searching with regex and without, to your desired scope, etc. You have crazy powerful debugging. You can check your database without leaving your IDE; test your API and http requests; have git info on every line of code (replicating Git Lens, one of my favourite VSCode extensions); powerful static analysis, etc, etc, etc. Like having an IDE, linter for several languages, and tools equivalent to Git Kraken, Postman, Sequel Pro, Terminal (you can choose your own), XDebug, local server, docker environment and configuration, static analyser, testing suite, deployment manager, vagrant, etc etc: without ever leaving your IDE. VSCode can get close with the right extensions, but they don't in my experience, cohere as well. And what I described is still just scratching the surface!
I‚Äôm on mobile rn, and don‚Äôt have a link handy, but it‚Äôs called vimium in the chrome web store. Pretty slick
Definiera ‚Äùcoding game‚Äù. Vad menar du med det?
Mind sharing your setup friend? I always like to see how others do things. I‚Äôm currently working on something similar myself. Only I‚Äôm trying to include my entire OS X setup (brew, bash profile, neocon setup, vim plug setup). It‚Äôs fun and useful.
That should work for finding the index of the lowest value, but if you want 2, then that's not the lowest value (21 at index 0 is, index 2 is 31). What makes 2 the right index?
Fair enough, but if you develop locally with git and your deploy system works, you never need to look at or touch anything on production. If you change things on production directly, are you checking those changes back into your source control from there? If you are just flying by the seat of your pants with FTP and no source control, that is not so crazy for basic stuff, I have done it, but I would not do it for anything work related. I have also got websites all irreparably out of whack that way.
That's what I want it to do (find the lowest value but exclude 21, because in the game 21 is actually a special score that does not count as the lowest value). But the code right now just returns te index for the lowest value (which is 21). So I'm looking for a way to exclude the value '21'.
Yeah, the purists will try and do it all in CSS, because, it's .... better ?? But look at any website and you'll see some jQuery class changing code [https://www.w3schools.com/jquery/jquery\_css\_classes.asp](https://www.w3schools.com/jquery/jquery_css_classes.asp)
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It's never the same. It is always some kind of worse emulation, and you have to reconfigure it for your own needs. It can be very good, and probably by ideal for most people. But, now to my point. Neovim can be embedded in GUI. So, I really hope one day we have IDE's that can embed Neovim inside. Onivim is a good example for a project that does this. And maybe, this can happen for everything that you input in your OS. Today I came across a post about firenvim for example. That let's you type in vim in firefox. Just imagine, everything you do in the comfort of you editor. That's basically what emacs users are trying for years by just pulling everything inside the emacs including the kitchen sink.
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Oh this is perfect! I use the vim plugin with vscode, and a few months ago I was looking for a language server plugin for vim because every autocomplete solution pales in comparison to the typescript-based one in vscode, but I didn't find anything that worked for me. I'll have to try this when I get home. &amp;#x200B; By the way, if anyone knows of a good Kakoune language server plugin LMK. I love the idea of kak
Our teams workflows all use vscode to run various functionality. Like automatic type checking, linting and formatting. Even if wanted to use vim, I‚Äôd have to set that up myself and no one else on the team would benefit from the workflow. Never mind the horror stories I hear about customizing and setting up going wrong.
Yeah, I ended up just making my own component with: `&lt;input type="date" name="date"&gt;` `&lt;input type="time" name="time"&gt;` Thanks for providing so many options. We needed a mobile friendly and able to support 18 languages so restyling the native inputs and connecting their state up together ended up being the best option for us.
Sometimes you want to add an .error class to an input that fails validation, to make it have a red outline or something. The display property can be toggled to hide and show things. It is not done so much anymore at the atomic level of individual style properties on specific elements. The finest grain you usually get to is adding/removing classes, usually for usability reasons, often in complex forms, like a shopping cart. It is also rare to do it directly with vanilla JavaScript, simply because most frameworks have their way to manipulate classes on elements.
The code isn‚Äôt completely correct ‚Äì it should be `-1` at the end, not `0` (this is the value that is returned if nothing is found). I‚Äôve made the code slightly more verbose so that it is easier to understand: function reduceCallback(minIndexSoFar, curValue, curIndex, thisArray) { if (curValue !== 21 &amp;&amp; (minIndexSoFar &lt; 0 || curValue &lt; thisArray[minIndexSoFar])) { return curIndex; } return minIndexSoFar; } const indexOfMinValue = this.scores.reduce(reduceCallback, -1); I have written an explanation of `.reduce()` that may be helpful: http://exploringjs.com/impatient-js/ch_arrays.html#Array.prototype.reduce
&gt; if I'm at a function definition and i want to change the argument list I press f(ci( and then type my new definitions Ctrl+D multiple times to select word and then expand selection, or Ctrl+Shift+Arrows if you don't know select word. I'd kill myself before I could put the cursor right after parentheses. &gt; y4y : yank (copy) the next 4 lines Ctrl+Shift+ArrowDown, Ctrl+C &gt; dd : delete the current line Literally just Ctrl+X &gt; ciw change the word at the cursor Ctrl+D to select word, hit again to expand selection if you want to replace adjacent stuff too, then type. &gt; 4w: skip forwards 4 words Ctrl+ArrowRight My point is people claim vim is so productive, yet they compare it to selecting shit with your mouse... Spend some time learning your IDE keymap, actually try to ignore your mouse for once and you'll be able to navigate code and work with more than one line of it swiftly just as well - and you'll probably learn it quicker than vim, too.
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Once you have the index, you can use splice() to remove that item using that index.
&gt; Vim uses more efficient buffering of files so it can be physically faster on underpowered machines. If your workplace cannot supply you with a PC that can open all the files you want at the same time, you probably shouldn't be working there. I mean, it's true and sort of a valid argument, but in reality - come on, my ancient Windows PC with 8 gigs of ram can run 2 virtual machines, intellij, vscode, spotify, 50 chrome tabs, discord, and several node or webpack processes in watch mode, and still open all the code I need without a hiccup. My work PC is much faster. Non-issue.
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Or we could just NOT?
You could create a copy of the array and run `array.sort`, which should shift the lowest values to the front of the array. Then you can loop through that array with a `for` loop, assigning the first value of the sorted array (that isn‚Äôt 21) into an external variable and calling `break` to exit the loop. Now you have the lowest value. Depending on whether you want all the indices of possible duplicate lowest values, or you‚Äôd rather just go with the first instance of that value, you can do it two ways: 1. Find all indices: Use a `for` loop and iterate through the original array. Each time you encounter the value you‚Äôre looking for, you can store the index into a separate array (your ‚Äúsearch results‚Äù) using `array.push`. At the end, you‚Äôll have an array of indices where that value appeared in your original array. 2. Find only the first instance of the lowest value: Use `array.indexOf`, and pass a function to it which returns true if the value matches your target value. It will return a single index number and stop iterating. I can think of faster algorithms that iterate only once over the original array, but this seems like a conceptually simpler way to handle it.
Most websites and apps manipulate styling through JavaScript nowadays in response to changes in state. It's generally preferable to modify the class names on an element and have those specified in CSS instead of changing the properties directly, e.g. prefer someElement.classList.add('error') over someElement.style.color = 'red'
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Another option is to use a `for-of` loop: function findIndexOfMinimum(array) { let indexOfMinimum = -1; for (const [index, value] of array.entries()) { if (value === 21) continue; if (indexOfMinimum &lt; 0 || value &lt; array[indexOfMinimum]) { indexOfMinimum = index; } } return indexOfMinimum; } assert.equal(findIndexOfMinimum([21, 100, 31]), 2);
In most websites, I would completely agree with this. But exceptions to that rule do tend to come up a lot more when using a framework that relies heavily on JavaScript, like React.
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It's more like a performance test really, each "particle" is actually a React component, just to see how far it can go. Makes for a cool effect anyway. Full code: [https://codesandbox.io/embed/387z7o2zrq](https://codesandbox.io/embed/387z7o2zrq)
scores.indexOf(Math.min(...scores.filter(num =&gt; num != 21)))
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
At the end of the day all the code is being ran on the user‚Äôs computer so at the end of the day they‚Äôre gonna have control over the environment than you. Some sites have really good anti Ad Blocker tech, it‚Äôs definitely possible via bundling, fallbacks, or other solutions. However will you spend more in dev costs than you would make from those users? My gut says that you‚Äôll really only see a return when you have a sizable amount of traffic (you might already have that idk) Good luck!
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
There are a couple of issues with this function you'll have to consider when implementing. Some can be solved with more information, a few will just inform your solution. * Because the scores array could be empty, what happens when a low score index isn't found? Should it return `null`? Right now it returns `0` but this is a false-positive since index 0 is a valid value. * What happens if scores tie? Which index does it return? Anyway, here's my solution with some assumptions: &amp;#x200B; `/**` `* @function getLowestNonSpecialScore` `* @param {number[]} scores` `* @param {number[]} specialScores` `* @returns {number | null}` `*/` `function getLowestNonSpecialScore(scores = [], specialScores = []) {` `return scores.length` `? scores.reduce(` `(minScoreIndex, score, index) =&gt;` `score &lt; scores[minScoreIndex] &amp;&amp;` `!specialScores.some(specialScore =&gt; specialScore === score)` `? index` `: minScoreIndex,` `0` `)` `: null;` `}` &amp;#x200B; `let scores = [];` `let specialScores = [];` `console.log(getLowestNonSpecialScore(scores, specialScores)); // null` `scores = [0];` `console.log(getLowestNonSpecialScore(scores, specialScores)); // 0` `scores = [43, 67, 1, 2];` `console.log(getLowestNonSpecialScore(scores, specialScores)); // 2` `specialScores = [1];` `console.log(getLowestNonSpecialScore(scores, specialScores)); // 3`
Ignorant, expecting people to read your article but as soon as someone questions the content you‚Äôre not gonna bother with it.
On mobile but you‚Äôre looking for Vimium (also available as a port for Firefox)
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
That's like letting customers look at his product but not use it without paying. Shops don't let customers use their products without paying.
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[removed]
Hi /u/OniresRoddrin, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Solution with tie-handling: &amp;#x200B; function getLowestNonSpecialScoreWithTies( scores = [], specialScores = [], maximumScore = 0 ) { if (!scores.length) return null; let lowestScoreIndexes = []; let lowestScore = maximumScore || scores.reduce( (highestScore, score) =&gt; (score &gt; highestScore ? score : highestScore), 0 ); scores.forEach((score, index) =&gt; { if (specialScores.some(specialScore =&gt; specialScore === score)) return; if (score === lowestScore) lowestScoreIndexes.push(index); if (score &lt; lowestScore) { lowestScoreIndexes = [index]; lowestScore = score; } }); return lowestScoreIndexes; } let scores = []; let specialScores = []; console.log(getLowestNonSpecialScoreWithTies(scores, specialScores)); // null scores = [0]; console.log(getLowestNonSpecialScoreWithTies(scores, specialScores)); // [0] scores = [43, 67, 1, 2]; console.log(getLowestNonSpecialScoreWithTies(scores, specialScores)); // [2] specialScores = [1]; console.log(getLowestNonSpecialScoreWithTies(scores, specialScores)); // [3] scores = [43, 67, 1, 2, 85, 2]; console.log(getLowestNonSpecialScoreWithTies(scores, specialScores)); // [3, 5]
That‚Äôs like using a flame thrower to boil ramen.
What is modal editing
Emacs is evil lol. Never liked because it took forever to open, then found vim and I love it. But hard to configure. So I stuck to vscode
VsCode cannot be use in terminal. The joke is on you lol
Eh, it‚Äôs more like using a text editor to edit text
https://wincent.com/wiki/Modal_editor
Yeah but those meta tags need to be SSR‚Äôd.
Yeah.. I've had more issues in the very few times I've used it on Windows than I do using it on Linux.
What cool effect! Thanks for sharing.
What's the appeal to something like vim?
Yeah, I often just use whatever opens by default. I set a lot of file extension default programs to notepad++ and it's such a pain to change them all to vscode. Sometimes I don't even notice a solution loaded in VS2017 until I realize the UI is slightly dated!
I use vs code (though I want to try Vim someday beyond minor SSH usage) and I‚Äôve got no idea what animates so many devs (especially of the sort who use languages that happen to be associated with graphical text editors or IDEs) to take every opportunity to get in a tired-ass ‚Äújust download VS code lol!!‚Äù quip. A reaction to years of condescending grognards making fun of people for not using Vim/emacs? You would think if that were the case, they would avoid doing the same thing
Or basic authentication setup in your Web server.
Maybe try looking at the other half of his post that you didn‚Äôt quote
Thats because you‚Äôre not actually comparing directly what they listed to how you would do it in vs code. ‚Äú4w‚Äù is not Ctrl + Right Arrow, it‚Äôs Ctrl + Right Arrow, Ctrl + Right Arrow, Ctrl + Right Arrow, Ctrl + Right Arrow. Now tell me how to get your cursor back to where it was in one key combo. Now tell me how to jump forward a paragraph. Now tell me how to jump forward 100 words. Now tell me how to jump forward a 100 words unless a particular symbol comes up before then and stop there. In your bizarre quest to defend the honor of VS code, you‚Äôve entirely missed out on one of the central ideas behind Vim, which is composability and parameterization of editing and traversing files
Its like an PS Raspberry PI, I dont want a bunch of confusing anoyying php and authentication things, jsut a simple javascript lock to keep random Skids out of my files, as I store public access files there, plus a hidden directory of my own files
You are right. This is just a demo project for learning.
This is great! Thanks. I‚Äôve been wanting to learn Vim and was trying my darnest to remember the commands. Seen folks using Vim to do their work real quick. Vim‚Äôs text selection is really amazing.
You can use comparison operators with the Date object to see if one date is between two other dates
I‚Äôm in the queue. Let‚Äôs go.
&gt; Our teams workflows all use vscode to run various functionality. Like automatic type checking, linting and formatting. Even if wanted to use vim, I‚Äôd have to set that up myself and no one else on the team would benefit from the workflow. you write, check, lint and format the code, then let your **other team members to test it instead of yourself?**
As another thing, I use a tiling WM, it's super easy for me to fire up a couple instances of vim that are all immediately visible. Commonly I have one full column, and another column with 2-3 instances. Navigating is win+arrows so my hands can keep staying on the keyboard etc. Win+1, Win+2, etc switch virtual desktops. I never made much use of desktops before but for some reason tiling WM makes it very natural and intuitive. Soon after settling into a tiling WM, it became severely annoying to do the whole alt-tab thing, or manually arrange windows on the screen, and I'll never go back unless I have to. All that's to say that though I think vs code is a high quality piece of software, in my setup vim still wins out.
yea until you got heart attack when editing code.
&gt;anyone who puts in enough time to learn it wont regret it. To that end, anyone interested in trying vim, use `vimtutor` which I believe (someone correct me if wrong) ships with vim, and is an interactive way to get started with vim.
Nothing wrong with that, thanks for sharing it
The linting, type checking, andd formatting are all external tools that are used by text editors and IDEs, you can use these same tools with Vim with no issues. They're not tied to vscode.
You just need to setup .htaccess as none of what you're saying makes any sense
I suggest you use moment.js it has all the time math stuff built in
I wonder how many weeks this guy used this setup before writing this article
Personally think this is more convoluted and hard to follow.
Personally find the original answer concise, so I expanded upon it. Reduce just reduces an array into a single value, in this case it is the index. The 0 passed in is the initial value, that is also the value of minIdx on the first iteration. The return value is the value of minIdx for the next iteration. const exclude = [21, 22] array.reduce((minIdx, x, i, a) =&gt; (!exclude.includes(x) &amp;&amp; x &lt; a[minIdx]) ? i : minIdx), 0)
Super common. If a website is created with a complex CMS like Adobe Experience mangler, and has complex dynamic authorable content, rest assured that all those complex reusable components have a lot of javascript, jquery, angular, react, and other code behind the scenes making it all work.
‚Ä¢ Use a linter and code formatter. See eslint and prettier/eslint airbnb rules ‚Ä¢ Most of the comments are useless and reiterate the variable name - provide value in a comment or skip it.
I've tried both VSCodeVim and VSCodeNeovim. I don't know what's wrong with my setup, but it was slow (noticably slower to opening larger files, repeating keys, etc) and had frustrating bugs that were minute and hard to describe to google (certain sequence of keys having no effect, especially when bouncing back and forth between insert and normal modes).
type checking with typescript is automatically integrated into vscode
Using tsserver. Which can also be used by Vim using a language client.
If you look closely, your question was already answered. "Different people prefer different tools, that's why." Not liking how editors like vs code work is exactly why they're going through the "trouble" with vim. To them, using vs code is not "having it easy". Personally, the modal editing aspect alone is enough to call it as it makes me _much_ more productive.
Hi /u/mercenariomode, this post was removed because your title included a URL. Please use the `submit a new link` option with a descriptive title. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
yes. every day.
Oni is pretty good. I had been using it full time for a few months but recently went back to gVim 8. looking forward to Oni2.
hours... doing what?
it's not you - they're just slow. that's why I'm so excited about Oni2. NeoVim base with support for VSCode extension ecosystem.
the productivity comes with experience. having your hands never leave the keyboard (and never stray far from the home row) and yet still doing everything you need to do. With extensions, it's customized exactly how you like it.
Customers routinely use businesses‚Äô buildings, air conditioners, restrooms, samples, and advice without buying a product. Likewise, businesses don‚Äôt demand your personal details, demand shopping history at other stores (supercookies, user tracking, sale of private usage data), infer you agree to a 20 page terms of service document by being in the store, or put unwanted fliers in your pockets (ads everywhere). In fact, they also don‚Äôt use facial recognition to give you targeted advertisements on the tv screens around the store (targeted ads, user tracking). They certainly don‚Äôt set your clothes on fire from overly aggressive pyrotechnic demonstrations to catch your attention or distract you from the fact that they are taking a dollar out of your wallet (running high cpu ad processes or bitcoin mining).
Check out veonim (https://github.com/veonim/veonim) It's a project that matches exactly what you're describing. It's still buggy but is really cool. Plus it will automatically pull in your init.vim settings (its goal is to have feature parity with neovim but look like VSCode.
I see someone else also has impeccable taste. (I use the same setup).
I will take all of those into consideration. So I could just remove the Leave button and simple change the join queue/game, to an all in one button. I will make the font colours above the button darker. And yes the reason the hex string is so long is because essentially each player id a 64 bit pointer on my server. So what I can do is strip the lower end of the player id since the heap base will be the same for every player id. I should have all of those done tomorrow. &amp;#x200B; And if it says server is offline, it's because I don'T have anywhere stable to run the server. I was actually running it on my laptop rather than a dedicated location. If people find this game fun to play and more people start playing then I will definitely get dedicated hosting.
Glad to help.
I have no experience with gatsby but I have ran into a similar thing with NPM on windows. In windows there's a maxium path length (in characters). The node\_modules folder can get very deep and you can end up with a path that can't be processed. If this is the case, try moving your project to like C:\\proj and running it again to see if it works.
That‚Äôs a pretty slick experiment to have in the bag. Thanks for sharing!
...which I'd have to setup manually for each project myself for vim instead of using out existing tooling...which would only benefit me, and not the rest of the team. If I, or any other team member sets up a workflow with a vs config, it will work for the rest of them as soon as they pull the change into thier local repo.
I don't know what you mean. We want all of our tooling reporting in the editor during development, not at a later step so that develop is compliant with our standards as automatically and early as possible, not reliant on running tooling later. Precommit and/or CI checks are done, but we want the feedback being presented to the developer earlier than that.
Not sure what to do on my phone. I got 4 points but the opponent had 17. I was touching every square but nothing was happening.
I like this idea. I would suggest some changes to work better with SPAs that might add or remove mailto links.. so rather than replacing all \`&lt;a href="mailto"&gt;\` as you're doing you could attach a click handler to \`&lt;body&gt;\` and intercept clicks that are on \`mailto:\` links, do a \`preventDefault\`, and then reveal your \`&lt;div&gt;\` modal of options.
I unfortunately haven't tested this very much on mobile devices. But I assume you should be able to zoom in to press individual squares. As long as you press squares which you believe are the be mines, then you're doing it correctly :D but I'll look further into the mobile device issues.
I'm working on a js client for a service. The sdk loads, looks for a `div` of a specific class and injects a bunch of dom elements. The css is all based on the output from the service so it's much easier to just set values rather than making a ton of css classes.
so how does using vim interrupt the workflow?
This is fun. I wish their were more people in queue
Ah yes I wish so too. Hopefuly if the game gains traction, there will be more people to play with. You could also invite friends and challenge them by player id! Currently I've noticed several bugs that I need to work out. I kind of rushed the client.
via Google Translate: &gt; Hello, if someone is living in Stockholm who can help me with JavaScript, it would be appreciated. Our teacher has made his own coding game so the help is needed irl. I am of course willing to pay but unsure of how much. Please write here or in Messenger if you are interested. It's about 2-3 h in total.
Wow, this is awesome. Super cool stress test of React and your library. I bumped the particle count to 10,000 and it still ran smooth. And that was in the codesandbox
Yeah, se use typrscript and angular in my work:)
Have you tried just filtering out all results that equal 21 before running your reduce to get the smallest numbers index? I guess it‚Äôs a little unclear what the final result is that you need. What are you using that index for later?
Got it, I'll test it.
newArray.push(planeteerCalls\[i\].toUpperCase() + "!");
I appreciate it üôè
Oof
I definitely prefer neovim to VSCode myself, but VSCodeVim, the (de facto?) official Vim plugin [actually supports](https://github.com/VSCodeVim/Vim/blob/master/README.md#neovim-integration) integrating neovim! I haven't tried it myself though, and it is labeled as experimental.
You know vim can do window tiling within itself right? Tabs too
Yep, but I've always found it clunky. Tried a few times over the years, in the end I just let my text editor edit text, and my window manager manage windows.
One question, is it React that makes it fast or the GPU? If I wrote it in vanilla would be slower?
It definitely wouldn't run slower in vanilla. React isn't improving the performance of JavaScript. It's just slowing it less than a larger framework might. It's the GPU and/or V8 engine that gives you speed.
shout(input) { return input.map(e =&gt; `${e.toUpper()}!`); }
This is a perfect opportunity to learn a standard array method: ``` const elements = ['earth', 'wind', 'fire', 'water', 'heart' ] const shoutedElements = elements.map(element =&gt; element.toUpperCase() + '!') ``` Check it out: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
I'm using vim for backend development and sometimes I do come to the conclusion that IDEs like Webstorm and VScode would have been more appropriate for certain tasks, especially when working with git. From my point of view, the whole thing with "I'm using vim for xyz development" has more to do with bragging rights, rather than anything else. Also, there are not that many people that will admit something is not perfect once they've invested a lot of time in something - and vim is that kind of something. What I'm trying to say is that vim has a lot of powerfull workflow, but so do full fledged IDEs with vim keybindings and it's always a trade off.
We had a nice conversation about it dude... Relax. People on Reddit are so negative all the time... Fuck sake
It's the gpu. But, React will speed up anything that has to do with scene building, updating, adding to and removing from large tree structures, just like it's faster doing this versus a vanilla dom app.
Just seen the edit, So right now most of my projects use TS with Babel compilation and tsc for type checking. The main reason for this at this point is that more tooling supports Babel than tsc and web apps I build need to be Babel due to libraries like styled components and Dev environments like Gatsby or nextjs use Babel so it's easier to just use Babel. These projects all share other common tools like jest and ESLint which both support Babel out the box and so me using Babel allows for then to have shared configuration across multiple projects instead of having different config for projects built using tsc and projects build using Babel.
r/ProgrammerHumor/
Don't get me wrong. I am not saying vim is shit. I acknowledge the fact SOME things are achievable faster using it. But please for the love of god do not compare it to clicking around in IDE because that's not how anybody works. Also, intellij all the way, don't insult me. Vscode is barely a todo list for me.
Why would I? Do I have to address every fucking word in a comment I reply to? I addressed one silly argument, the other ones aren't much smarter.
I don't think about it at the moment, I will work on this point!
that's crazy, didn't even dare to go that high. though it noticeably starts to tear on my laptop now with howling fans.
Oh! Thank you for the detailed feedback! The idea of intercept all the click on links is fantastic (I haven't think about the SPAs), I will develop this part exactly in the way you have explained, really thank you! About the `validateEmail`, it is just a way to check if the email is written correctly and not to display mailgo in case the email is not correct, what do you think about this point? I think that I can remove this part completely, I think that a check with a regex on the email address in the mailto is a good idea (but maybe not useful? Or maybe there is a better way to do a validation?) About the `includes` you are completely right! **mailgo** supports (for the mailto: links at the moment, not in the data-address/data-domain usage) **cc**, **subject** and **body** parameters! They appears in the modal under the title (email-address). Thank you for your feedback!
If I setup the project to use vscode, everyone on the team will will benefit from the shared settings. If I‚Äôm the only one using vim, I‚Äôm the only one that benefits because in all likelihood I‚Äôm the only one using vim. And if there‚Äôs a config setting change made by the others devs, I may have to duplicate that configuration. It‚Äôs generally better to have everyone using the same setup to ensure consistency. If your whole team is using vim and you‚Äôve all established your own consistent workflow. By all means, use vim. But on our team, vscode is the standard and we share those configs.
Very cool! Did you use something like three.js to make this?
Really cool to see something like that is possible in React. Would be cool to see implemented in different frameworks/libraries for comparison. Svelte, Vue, Angular, Marko etc
Yes, it's a lib that i made: [https://github.com/drcmda/react-three-fiber](https://github.com/drcmda/react-three-fiber), a React renderer for threejs.
Nah, you didn't have a nice conversation. He persevered with his points while you were dismissive, then you ended it nicely. You still didn't answer his points.
I'm curious about why you think it aligns better? I'm a frontend dev with 10years of experience but I'm thinking of actually learning more 3d and create content :)
Opening with a stated rant isn't useful, then asking a question which is clearly answered the article (imo) made me assume he hadn't read it. There was later edit that was much clearer that I responded to. Bad assumption on my part tbh, I'm so used to people's knee jerk reactions to people sharing content on Reddit it seems to have rubbed off on me üòû I was intentionally short to counteract the long rant. But I didn't mean to come off as a jerk or anything, I suppose tone is difficult to discern online and I'm still pretty new to writing articles and sharing them online for discussion. I've had a lot of great conversations and a shit load more jerks trolling for the sake of it.... One to learn from and it turned out they were being genuine, although I'd have preferred a more positive opening to a discussion over a rant... üòÖ
Thanks for clearing that up! This is an area where developers often get business requirements and the consequences of tech not aligned.
Hmm and I thought that you don't need a virtual dom if you're in an animation loop and rendering with the gpu
I'm not really sure a library for this is that necessary, the front-back connections aren't usually that impossible to make and adding yet another library to already library-intensive applications like React feels a bit unnecessary
IMHO you don't need e-mail address validation at all. Since **mailgo** is a drop-in replacement for `mailto:` it needn't matter whether e-mail address is correct or not, because `mailto:` does not validate addresses.
Excellent work. One question. What are those: &lt;&gt; ... &lt;/&gt; Is it a new feature?
So I'm the only crazy person in entire world that treat graphql as tool to limit network requests and them use redux?
You don't need it, but you will still run into the same problems when dealing with complex, updating tree structures. Your scene is a nested graph after all. Components are managed and reactive, can be bound to state. You can mount and unmount them, [you could slap a transitiongroup in there and fade components out](https://codesandbox.io/embed/ly0oxkp899), etc. This stuff gets increasingly hard without a component model, just like managing the dom using innerHtml and traversal is hard. That's where frameworks really make a difference, in terms of DX but also performance. The rendering itself is abstracted here with the useRender hook. It essentially allows you to run tasks frame by frame, outside of React. But again, it is all managed. Once the component unmounts, it takes away that callback and cleans up after itself.
That is a React fragment, but the shorthand for it
There is a new, shorter syntax you can use for declaring [Fragments](https://reactjs.org/docs/fragments.html#short-syntax). &lt;React.Fragment/&gt;
No probs, and again -- this is a good idea for software, congrats :)
&gt;Could you add a list of supported browsers to your Github? Sure I will do it! Thank you again! Have a great day
I'm agree, after these considerations I will remove the validation! Thank you for your feedback
You are completely right, communication between backend and frontend is not impossible, and there is some great tool like apollo with graphql or a simple REST server handled with redux on the client. One of the issue I had in many of my projects, was to actually spend so much time on those layer instead of implementing features. Why should I spend hours to build graphql schema and queries, why should I build action/reducer with redux thunk to make my api call with REST. Is this actually really necessary? Of course if you have a big project with a dedicated team for backend and a dedicated team for frontend, it make totally sense to use a documented API, like REST with swagger or graphql. But I barely believe that this is a common use-case, especially for fullstack developer. And even if it would be the case, there is still small team where developers take care of all the stack of a project, might be great for them to abstract out some work. Also this library bring lot of consistency in your data type. Get a look at the example of react + typeORM, it will give you a good understanding of this. Types are common to backend and frontend, you don't have to ping pong between different project and get the risk to mess-up with your typing definition. &amp;#x200B; Of course all the issues I try to solve with this library could be solve differently. I just try to make a proposal and hope to get advice from the community to make it even better. So thank a lot you for the first comment.
Oh yeah, I understand now :) I'm still pretty new to full-stack development and I really just value doing everything from scratch to learn how things actually work. Maybe I'll find myself looking for a library like this in the future
Any good tutorials/starting off points on three.js the community here would recommend (egghead or FEM maybe)? This is a big gap in my knowledge i'd love to rectify.
Could you go in to a little detail about what you find convoluted or hard to follow? &amp;#x200B; Array.indexOf is a standard method for finding the index of something in an array. Math.min is a standard method for finding the minimum value from a set of data. Array.filter is a standard method for remove values from an array. &amp;#x200B; Obviously you could split it up a little if you wanted it to be more readable. `const filterNotTwentyOne = (num) =&gt; num !== 21;` `const filteredScores = scores.filter(filterNotTwentyOne);` `const lowestScore = Math.min(...filteredScores);` `const index = scores.indexOf(lowestScore);` It just makes it a little more verbose.
This will get you started: [https://threejs.org/docs/#manual/en/introduction/Useful-links](https://threejs.org/docs/#manual/en/introduction/Useful-links) The egghead webgl course is also neat and goes a little deeper into webgl, bump into some math there, which you definitively need later on.
Sounds like the absolute ideal scenario for basic auth on a web server.
Thanks. Do remember trying the Egghead WebGL course a couple of years back but got lost very quickly. Will try out some of those links and maybe give egghead another shot.
This doesn't work if the first value in the array is 21 `[21, 34, 35, 28].reduce((minIdx, x, i, a) =&gt; ((!exclude.includes(x) &amp;&amp; x &lt; a[minIdx]) ? i : minIdx), 0)` Gives 0 as a result.
The problem being discussed is people with existing infrastructure hung off a name that does not yet talk HTTPS or for some reason can not (internal legacy systems with http-only dashboards, outsources systems similarly). If someone blindly follows that advice they will break such things for their users and have to rush around implementing quick/hacky workarounds to fix the problem. If you think that will never be a problem (because people managing significant infrastructure know all of that infrastructure and what they are doing with it) then you have not worked in complex commercial environments... We're not saying "don't give that advice", we're saying "don't give that advice without appropriate safety caveats". &gt;Seems like all you have to do is start serving https. Am I misunderstanding that part? I don't think you are misunderstanding the *what*, but you are naively assuming that the *how* is always going to be quick &amp; easy.
Have you done what it suggests?
Not at all, and. I am using the most lightweight solution I can to do it. No Apollo or relay. I like it more doing development than in production. Once the API is stabilized I would rather have REST.
I had the same problem, well actually still have. The problem here is revolution slider says the jquery.js is loading twice. But when i searched the whole FTP i got just the one working with bootstrap and you know working just fine. So my solution was to do what it says (contain js in body) and than just hide the endless buffer button.
This is a programming forum, many of us are awkward but I'm sure all of us are just strident, strange, and ultimately sincere. When our lives are ruled by compilers, we're used to being told we're wrong and we are all striving for 0 errors. I read your article, I think your first 3 bullet points explain why people still need to use Babel even if they have Typescript too. When importing a library that uses Babel, obviously this needs to be part of the build process too. But also... it would be possible to compile the Babel library code and export Typescript definitions, so that users could stick with only Typescript for their own code while still having that code insight into the libraries they're using.
Well relay do have interesting features because of that simple store. And it knows stuff ahead of time. It's annoying to setup or even develop with it since all changes in models force you to generate new schema and update relay files. Bit at the same time - you can create component that makes graphql request and then simply use that component 3 times next to each other. Most solutions out there will request data 3x times simply because those requests are concurrent. Relay is smart enough to realize data is requested and make only 1 connection and then update 3 components. I had to make entire module that track requests in progress based on queries and variables - subscribe each incoming requests to result list and provide that result list to each subscriber just to avoid multiple requests for the same resource. And that was done because I didn't want duplicate requests but at the same time I didn't want local cache so I could always have fresh data no mater who requests it.
I think I get what you are doing. My data has different priorities though. I wouldn't want to bundle data calls, since some data only gets requested once some y-axis has been reached, most data really only needs to be requested once, and that is already bundled by the object which I am querying. Different strategies for different applications I guess.
You have it backwards, sites have been trying to stop ad blockers for years and how has that worked out? Anything you do, will be circumvented. Anything you do that may not be circumvented easy is going to effect users on your site and give you another issue.
I don't know! I was doing DOS as a child. Command line is neither mystical nor a status symbol of being a hardcore coding ninja rockstar working from Starbucks. It's just dated user experience. The mentioned benefits (being responsive) might have been true 5 years ago, but since then I don't really have issues with Webstorm (sorry my workplace can pay for it). And the recent features actually added a lot.
I love it, I think this is the way to go and may be better than what web component right now. Syntax is super clear so this is beginner-friendly, and features are good. The real plus is that you don't need anything else than a HTML file to get started, so it seems that the simplicity of PHP days will fit with the flexibility of web components. I guess this would be a very good candidate to use with a [Zero server](https://github.com/remoteinterview/zero) and start prototyping and playing with a super easy routing and deployment experience.
Can vim attach to the browser‚Äôs debugger, manage breakpoints, etc?
Do you know about hyperapp ? [https://github.com/jorgebucaran/hyperapp](https://github.com/jorgebucaran/hyperapp) Looks like you guys are solving the same problem. Awesome work tho üëç
This, it literally tells you how to fix it, do it and be done.
The effects‚Äô names are brilliant.
What do you mean by "how has that worked out"? It is very simple to detect ad blocking nowadays. If any website wanted to block the content to users who block ads, they can implement it in no time. But most sites ingore it, as the majority of people do not block ads.
Hi /u/helio220, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/xavier-l, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ObadimuIsmail, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/letspushpixels, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/alexandrepiel, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/apsv360, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/deverlever, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/red-powerranger, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/moreman60, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Should that not be posted in one of the react subreddits? Sick and tired of opening /javascript and all I see is react and typescript :(
This is super cool. Will definitely take a look.
Hi /u/EvoNext, it looks like you're new to reddit, welcome! Thanks for the submissions, but please make sure you read http://www.reddit.com/rules and our [guidelines](http://www.reddit.com/r/javascript/wiki/index). In short, you should post from a variety of sources, and not just `itnext.io`. Thanks for your consideration! domain submitted from|count|% :-|-:|-: [itnext.io](/search?q=%28and+site%3Aitnext.io+author%3AEvoNext+is_self%3A0+%29&amp;restrict_sr=off&amp;sort=new&amp;syntax=cloudsearch&amp;feature=legacy_search)|55|89% [self.docker](/r/docker/search?q=%28and+author%3AEvoNext+is_self%3A1+%29&amp;restrict_sr=on&amp;sort=new&amp;syntax=cloudsearch&amp;feature=legacy_search)|2|3% [self.devops](/r/devops/search?q=%28and+author%3AEvoNext+is_self%3A1+%29&amp;restrict_sr=on&amp;sort=new&amp;syntax=cloudsearch&amp;feature=legacy_search)|1|2%
This is so cool, I‚Äôve always wanted to try to build my own guitar effects setup, but I‚Äôd never considered that I could do it with the Web Audio API. Definitely going to mess around with this
Hi /u/Mionel_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SkylerSpark, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Tha loading animation though!
Hi /u/rtg604, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/TimEvko, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming _"It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius_ * If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). * It's ok to promote your own projects or content, as long as that's not all you do. See ["What constitutes spam?"](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) for more information. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Nice, always struggled with the decision to or not to integrate angular/react for a tiny feature on a page. Usually ended up with VanillaJS.
Reddit's markup doesn't support the triple backtick syntax. You need to indent with either a tab or 4 spaces. &lt;script type="module"&gt; import reLiftHTML from '//unpkg.com/relift-html'; reLiftHTML({ template: ` Counting: {this.count} `, tagName: 'my-counter', // custom tag data: { count: 0 }, created(){ this.data.count = this.prop.start || 0; setInterval(_=&gt; { this.data.count++; }, 1000) } }) &lt;/script&gt; &lt;!-- the count will start at 5 for this custom element --&gt; &lt;my-counter start=5&gt;&lt;/my-counter&gt; &lt;!-- the count will start at 21 for this custom element --&gt; &lt;my-counter start=21&gt;&lt;/my-counter&gt;
Great idea!
Cool!
It's on [codesandbox](https://codesandbox.io/dashboard), an online IDE. Fetches npm-dependencies and transpiles in your browser.
No. Hyperapp is virtual dom.
Its a personal choice really. When I first decided to peruse 3D I wanted to get into video games or CGI in films. I graduated just after the recession and 3D jobs were slim pickin's(in Chicago). I eventually found a job through networking doing photo-realistic renderings in the commercial market. I'm married now and my priorities are different. There are lots of 3D opportunities in LA, or if you can navigate the freelance market. However the wife doesn't want to live in LA and I haven't been able to earn enough on freelance yet. When Job searching I see a lot more jobs opportunities for development over 3D. I feel working in development will offer a salary I need (student loans) while giving my wife and I the mobility we're looking for. If you need any help working with 3D hit me up! I've been doing it for 10+ years and am employed as a 'Senior Artist".
Very nice, I like the fact that you do not need to compile anything. My first intuition was to try this? https://jsfiddle.net/thnwfyq1/ But it seems to fail somehow... How does the component bind itself to the DOM? Is it done immediately? What happens if you inject some HTML into the page with innerHTML for example?
Except is not.
It is not dying or it is not a mess?
Awesome!
You are making assumptions about how people use the internet. If a site blocks me I just use [outline.com](https://outline.com) to get the content I want. You will never "win" this.
Pass the Turing text maybe?
Thank you
The component by default bind itself to the DOM by using the \`el\` property. However, it can only bind it to one selector only. In your jsfiddle, el was bound to a class which was used multiple times. &amp;#x200B; For reusability, put custom element tag 'tagName' into the options during initialization of the component, this way you can have &lt;counter-widget&gt;&lt;/counter-widget&gt;
Thank you. That's one of the main reason.
Thank you.
This is one of the coolest things i've seen on r/javascript for sure.
Needs some Britny Fox.
Hyperapp has a virtual dom, and may want you to compile/transpile your code if you are going to use JSX, otherwise you will place a lot of \`h()\` tags in your code. &amp;#x200B; reLift-HTML uses HTML as your template. It doesn't have a virtual DOM, and no need to transpile/compile. Less to learn. &amp;#x200B; However, during the creation of this library, I did look into most of these framewework and learned their good, their bad (in my opinion) and try to make something simpler, nice for development. &amp;#x200B; Thank you though.
Right. Thanks
This is dope. Do you have your strat going in direct and the webaudio api is driving it? Or are you using something for a pre amp?
This is awesome. Might try hacking on this to create some new sounds!
I had an idea for a project like this but lets you try guitar pedals out before you buy online
I'm not OP but I have the same thing. Still working on making it a single command (that would curl a remote bash script from the repo, the way oh-my-zsh works), but it's still currently pretty quick. &amp;#x200B; [https://github.com/nickforddesign/dotfiles](https://github.com/nickforddesign/dotfiles)
Both
"Are you worthy of being my tool chain?"
Wow very cool, thanks for sharing!
&gt; setup the project to use vscode please tell me you actually git commit this .vscode folder, because that's a weird practice which I have never seen
What a groovy idea,
Hey, um....on the mailgo website, when I clicked "open" on the mailgo modal, it opened like 20 tabs? Is it only me that had that issue?
Or...we could stop nesting ternaries. Surely there are better options that are clearer.
Dude! Very cool!
I am with you. I never nest them myself. Unfortunately the same cannot be said about some of my coworkers.
`==` would be the redundant approach because `==` will coerce types. `===` doesn't mess with the types and just does a straight _do these equal_. When you know you're comparing a string with a string, that's all you need.
I don't think you need the typeof-operator. Just check for (variable === undefined) Also, you should always use the type-safe operator === when possible.
I'm going to stick with fetch... that looks like a mountain of work and months of training to understand.
this is brilliant. wow.
You are correct, and by the way Kyle Simpson (big time JS author) agrees with you. But in reality is typing an extra character slowing you down? I know that == is a red flag in most code reviews - perfectly fine in this case but I'd say that you should just use === and forget about it. Edit (or `x === undefined` like in another comment.)
Everything looks good. One weird quirk that I wouldn't update your post for is `typeof null` is `object` but it behaves like a primitive because jerbascript.
If someone does window.undefined = &lt;any value&gt;, you'll have some problems without the typeof operator and literal comparison.
Thanks for the review. I didn't actually know that about null. &amp;#x200B; Does the post read well? I'm always afraid that I can't clearly get across what I'm trying to explain.
&gt; There are two datatypes in JavaScript Each primitive has its own data type so saying there are only two (and that primitives represents one) is not accurate. &gt; Primitives are strings, numbers, Booleans, undefined, and nulls. There's also `symbol` and soon `bigint`. "Boolean" also shouldn't be capitalized. &gt; If a variable holding a primitive value is assigned to another variable, any changes to the original variable, do not affect the newly assigned variable. Changes to the _variable_ never affect other variables, dealing with primitives or otherwise. Property mutations will be seen through other variables when dealing with references, but since you can't change properties in primitives, it doesn't apply. I can tell what you're trying to say, but its not quite articulated correctly. &gt; An object is a collection of data, we use brackets, and key/value pairs to store the data. The "brackets" part here is confusing. I'm assuming you mean curly braces used in the object literal? But that's also not the only way to define objects, and this sentence seems more high level in terms of what an object is rather than the details of the syntaxes used to create them.
Hahaha, that‚Äôs fuckin awesome!
Program in something else! Bahahaha Jk. Read clean code and the clean coder. Those principles apply to all languages
I agree with clean code and clean coder. For a quick "style guide" and there are many, you can review Google's JS style guide. [https://google.github.io/styleguide/jsguide.html](https://google.github.io/styleguide/jsguide.html)
For a starting point use Prettier. Turn on format on save.
i will give it a try Thank you
I would recommend using deterministic functions (always get same result when given same arguments) when possible and although it doesn‚Äôt directly impact underlying code quality using standard formatting (something like a Prettier plugin) can make the code more approachable if you share it or come back to it after a while.
Fetch and GraphQL aren't comparable.
It's true, in some of my jobs it would have been harder than others, but it's still always the *right* thing to do. Feels related to the responsible disclosure/cryptolocker backups conversation.
thank you for this
Awesome!!
This is an awesome wholesome post! I‚Äôm happier after reading it, there‚Äôs so much positivity and happiness for small things :)
You are doing Gods work sir.
just stop writing code and it'll be all clean
Hi /u/mudassirLuqman, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/redskydav, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/avocadoras, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Testosternus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/cashlessbeef, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Deviso, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/wouter-hisschemoller, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
How so? *GraphQL* is a query language for APIs and a runtime for fulfilling those queries with your existing data. The *Fetch* API provides a *JavaScript* interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. I mean maybe I'm mistaken but it seems that GraphQL is used in place of Fetch; meaning they attempt to fill the same function. I could of course be wrong, that was just my understanding of what GraphQL is...
Oh ok. Is there a better sub where I can post this form
You are mistaken. GraphQL is just a query language--its not a way to request resources over a network the way that fetch or XMLHttpRequest are. You use fetch to POST a GraphQL query to your server.
Have you read the article? The author tweaked vim with plugins and their settings along a timeline of 2 years only to get close to what good IDEs are already shipped with. That might be interesting but begs the question: for what?
Thank you for explaining that.
How did you interface the expression pedal?
Isn't that kind of the same when someone does variable='whatever'?
that is so cool...!
TypeScript
Yes, but most people don't know that you can actually alter the value of undefined.
I hate it when big companies give things names that are already being used for something in the same domain. A portal is a kind of reference website. Chrome is the word for the UI elements of a window around the content. Don't even get me started on .NET or visual studio 'code'.
how about an interface to rearrange the order of the pedals? And is the signal path right to left?
I rarely use it myself. Just when I want to copy/paste things from vim‚Äôs buffer.
yup
I'm not sure how much this needs to exist. It may be one of those things I didn't know I needed until I have it and can't go back; but my first impression is that this will be confusing to me as a user and difficult for me as a developer (yet another feature/device to support). I have a strong feeling this is to make _advertisements_ feel seamless, and bloating the web standards to improve advertising is not my favorite pastime. Can it degrade gracefully? What is the boilerplate like to "support it if it exists or fallback if it doesn't"?
The whole reason why they have the user vs workspace settings and why it automatically saves to the current folder is to share the workspace configs with team members.
Es6 map is an implementation of a hash table and {} is a plain javascript object. {} is like saying `new Object()` I would read [this stack overflow answer](https://stackoverflow.com/a/18541990) about the differences
I don't.
Oh man, I've had this idea for months then I had to put my guitar and amp in storage for a while!! Glad someone else got to it first. Open source this shit, I'll contribute once I get my gear back out of storage.
Okay awesome. Thanks for the fast response!
&gt;https://github.com/jckuhl/reactsweeper `&lt;Mine mine={mine} key={index} position={index}/&gt;` Putting key as index is wrong for many reasons. `mines.filter((mine)=&gt; mi` Put spaces between `(mine)` and `=&gt;`. Use ESLint for standard style guide. For random you could have easily done: `arr.sort(() =&gt; Math.random() - 0.5)` Code is fine otherwise.
Between Portals and the lazy load img attribute, it is starting to feel like Google wants to kick off another round of Browser Wars. Maybe Microsoft's surrender is giving them ideas.
Hi /u/Fuzakenna_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
what about latency?
det √§r en hemsida som min l√§rare har gjort d√§r man l√∂ser olika kod problem. tex kan det vara: s√§tt ihop tv√• arrays. Sedan finns det olika sv√•righetsgrad och levels p√• hemsidan!
This was down before I posted the article hence using the article as a link, but it's up now. Here it is: https://github.com/features/package-registry And here's a blog post: https://github.blog/2019-05-10-introducing-github-package-registry/
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
Wait - what?
I enjoyed the post! I've been looking to get a pedal of sorts. I'm curious what midi controllers and physical devices are needed to get this working
At least the bot tried
[https://github.com/features/package-registry/blob/master/LICENSE](https://github.com/features/package-registry/blob/master/LICENSE) 404s
Good lord, that is a short and succinct way to shuffle, thanks!
That is just awesome
Yikes, this sounds good, and being integrated with the rest of GitHub it seems likely to me that they will crush npm et al. and become the dominant package registry, but it is getting a little scary the control that MS is going to have over the development community.
Product placement?
This is so cool!
I hadn‚Äôt heard of zero server. It looks interesting!
Bad bot
Awesome üëå Rock on ü§ò
Sorry but did you bother reading the article? It‚Äôs not an npm killer nor does it strive to be. It‚Äôs supposed to be a complement to nom and tools as such.
RIP npm
Thank you
But doesn't this build off of npm?
&gt; To be clear, GitHub isn‚Äôt launching a competitor to tools like npm
Yeah, they cant even manage their staff properly, imagine going against a behemoth like github!
It just uses the npm registry API. You can use yarn or pnpm as your client for an npm-free experience.
You‚Äôre on the right track with this train of thought.
Npm is a tool, but npm, Inc is the company that runs the public and free package registry. This will supplant npm, Inc but not the open source npm cli tool.
Reposting my comment about this over on r/nodejs/ &gt;This is fascinating to me. Github could never have done this without Microsoft, and developers would never have adopted this if Microsoft did it. &gt; &gt;Currently NPM (the company) has a business model which relies mainly on selling to enterprise customers (surely not all, but most likely the bulk). &gt; &gt;Microsoft is the best poised company in the market to eat their lunch, because enterprise is Microsoft‚Äôs core competency. Think what you will of the company and its relevancy today, but they have deep experience selling to enterprise, and preexisting relationships with many enterprises. &gt; &gt;What does Microsoft hope to get from this though? Surely its a small line of business, and wont make Github all that much money. Github has a relationship primarily with individual developers first and foremost, that is their target market. Those devs influence their employer‚Äôs decision to pay for GitHub because the devs want to use what they‚Äôre familiar with. So that relationship with individual devs is really Github‚Äôs bread and butter. &gt; &gt;Well, I think thats exactly what Microsoft hopes to get; that virtuous cycle of making a product that is loved and widely adopted by individuals and then championed by by those individuals within their organizations. Similar to Slack‚Äôs growth model, and also Zoom‚Äôs. &gt; &gt;Its no secret Microsoft is trying to win back the common developer. At a time when apple is fumbling on caring about devs (re: escape key), and AWS has become the default for cloud production, there is a real opportunity to be the company that makes development better for devs. If Microsoft ever wants to succeed in Cloud, they need to win back developers by having services which are genuinely better and friendlier to use. If they can become the default choice for developers in certain areas (VSCode, Github) and then make it dead simple to integrate with their cloud services, thats a compelling reason for individuals to use their services. And if its actually better (clearly no one is a delighted by the AWS interface) then Azure could become some folks preference for their personal work. And with those services being available where your company already hosts its code and does it developing, Github, then all the better. &gt; &gt;Microsoft made a very smart move acquiring Github, and I think they will take great care not to upset the common developer as that is the lifeblood of this whole cycle. &gt; &gt;Note, I said common developer. There is a lot of mistrust of Microsoft among the Hacker News and silicon valley crowd. There are definitely valid concerns held by folks at the upper percentile of developers, who tend to both take a longer view and are more cynical (to put it nicely). But thats not the vast majority of devs. Most devs don‚Äôt work at FAANG, or live somewhere on the west coast. Most work at smaller companies around the world. Github/Microsoft only need to appeal to most devs. &gt; &gt;I wasn‚Äôt sure what Microsoft would do to capitalize on their Github acquisition. But this is a great start. There is a lot of drama around npm the company, and their interests are no longer aligned with the common developer. There really are problems there that Github can solve. &gt; &gt;GitHub can afford to prioritize the common dev with Microsoft‚Äôs help. GitHub already has a great reputation in the open source community, and they are certainly a safer bet for longevity and keeping your package publicly available than npm. &gt; &gt;Anyway, I‚Äôve been reading too much Stratechery it seems! &gt; &gt;TLDR; This is npm the company‚Äôs current business model. Microsoft is way better at enterprise than almost anyone, certainly npm the company. npm‚Äôs interests are no longer aligned with common devs, but GitHub‚Äôs certainly are and Microsoft is willing to pay to make sure it can stay that way. &gt; &gt;Also note: NPM is really at least 3 things. The package registry, which is a public database of all the packages in the JS ecosystem. The website frontend to find packages. The npm cli, which is an open source project. And lastly npm, Inc the company, founded in 2014, who foots the bill for the public registry. I love the npm ecosystem and the people who build the tools, but Im not so hot on the company, since they are essentially rent seeking.
On Chrome with uBlock Origin enabled, nothing happened when I clicked the squares. I had to disable uBlock and refresh the page then find a new game. But, cool game.
I'm actually not sure what causes that. I haven't experienced it myself though. But were you in game when you were clicking squares with uBlock Origin enabled? And then you disabled and went back in game and it worked? &amp;#x200B; And thank you
I've played around with [GJS](https://gitlab.gnome.org/GNOME/gjs) a bit. It's an easy way to get a low-footprint JS app running on Gnome. I'm not sure how dated GJS is anymore. I thought the SpiderMonkey engine and GTK library support was a lot more up-to-date these days. Your best source of docs however, beyond some tutorials and examples is the C API docs. You can *usually* figure out the equivalent JS signatures from those.
&gt; Its no secret Microsoft is trying to win back the common developer. And it's working. Typescript, Visual Studio Code, .NET 5, building Edge around Chromium, buying GitHub and now this Artifactory/Nexus like offering... All great things Though, historically, this is the embrace/extend portion of the embrace/extend/extinguish business model ;)
So this is pretty cool, but if I have to start adding a repository URL for every dependency, I'm going to be very annoyed.
"To be clear, GitHub isn‚Äôt launching a competitor to tools like npm or RubyGems"
Yeah. Might have been a coincidence and uBlock had nothing to do with it though.
From the GitHub announcement (emphasis mine): &gt; GitHub Package Registry is compatible with common package management *clients*, so you can publish packages with your choice of tools. They are not trying to compete with npm the program. It does look like they are trying to compete with npm the hosting service.
Vim plugins uses this format which works quite well. Plug "user/repo"
It's a bit awkward because you can't mix and match your registries, but you can create a .npmrc file with the following line: registry="https://blahblahblahgithub.com" Where this is awkward is if github doesn't have the same registry as npm does. But hopefully they figured out a good way around that whole issue
&gt; What does it cost? &gt; &gt; GitHub Package Registry is free for all repositories during the beta. Unfortunately that means we won't be able to try it until it's out of beta...
Only time will tell. Consolidation is a huge issue because who knows what innovation we wont see due to catch and kill (facebook is great at that) style acquisitions and companies getting lazy or founders losing control after big acquisitions. Nobody yet knows how to handle that, if it should be regulated and how. If you have any ideas Id love to hear them, as Im not at all sure. But why would microsoft want to kill github? It is the social network they failed to build. In a post windows-dominated world, what better way to stay relevant with developers than this?
Thanks. Is there any other methods for implementing private members beside closures?
[npm supports that too](https://docs.npmjs.com/files/package.json#github-urls)
Npm uses that too actually, but only when installing deps. ``` npm i userName/repoName ```
It'd be neat if you could clone from Github and have it run npm/yarn install at the same time. So the same download grabs both your project and dependencies.
Finally a potential npm replacement.
I feel like we shouldn't be adding more tags to html. I'd prefer we push for greater simplicity over complexity.
&gt; And it will always be free for public and open source repositories.
I set default register to be system clipboard (I think, I don't know, I resolved it a long time ago.) Now I can copy from one window, win-arrow to another window and paste.
Typescript supports private class members (checked at compile time).
From [their blog](https://github.blog/2019-05-10-introducing-github-package-registry/): &gt; It will always be free to use for open source
Thanks. I was wondering if is there any alternative for JavaScript. How important are private members in JavaScript. I use them to prevent unconscious access to members leading sometimes to subtle bugs. Same applies to developing APIs ( which I don't do)
Closures can guarantee something like private access, but they come at a cost, as I'm sure you know. Maybe there are linters that will warn you if you access a property that starts with an underscore or something. That's kind of hacky, though. Really if you want more advanced static analysis (private members, readonly, type checking) then you need to start considering TS.
Geez, you'd think a company the size of Google could pick developers who had a good command of the English language to do their presentations. I had to turn on subtitles because I can only understand about half of what these guys are saying.
Can you try turning uBlock back on and see if you can join a game queue/play? Because it might very well be the issue.
&gt; The whole reason why they have the user vs workspace settings and why it automatically saves to the current folder is to share the workspace configs with team members. Do I look like I am clueless? You don't have to explain it to me. I said it's weird because I have never seen people doing so. People get used to their tools. If you want to force your tools down their throats when they join your company, then do so. Apparently you couldn't convince me.
You can try it, if you sign up to the Beta (the landing page offers this).
Bad bot.
yes, user/repo points to a single plugin. Github is offering you your own NPM repository, to host multiple modules. By the looks of it, its OSS competitors are things like Artifactory and Nexus.
Interesting that this article doesn't mention latency at all. Anytime I've tried this sort of thing in the past, it's been pretty much unusable due to web audio latency, regardless of my adc settings. I'm curious if this really works well, or if it's more of a for-fun execution of an aspirational concept.
I read the page and couldnt understand exactly what kind of problem does it solve?
i mean, it's just one more command lol
Microsoft strategy is working, we really are forcing our employers to use the Microsoft "stack", VS as the default editor, enterprise github for remote version control repo, .NET core for services and our choice of framework for frontend was Angular only for the reason because of TS. After a long time MS products finally gets the work done for developers (Their new shell emulator is just around the corner)
[Apparently](https://github.com/tc39/proposal-class-fields/blob/master/PRIVATE_SYNTAX_FAQ.md), ES2019 will have private members prefixed with `#`.
FWIW I work in Silicon Valley and my whole team is really excited for this
Can artifactory oss even so npm? I thought the free version was java only.
 Akiramenaide little one.
https://www.reddit.com/r/ruby/comments/bn3ze1/introducing_github_package_registry/en2yczi/
I see that everyone is excited about this, but please tell me why would I bother with this when the packages are already in npm?
command &amp;&amp; command
Nice work. Inspired by Vue?
[removed]
Inspired by Vue, lit-html and hyper-html, but packed with moderns features (IMO).
Nice video, very informative. I am looking forward to the encapsulation option with the new class syntax and # operator.
A lot of Microsoft sucking in your post. A lot of people still remember what EEE means. About registry - it's great, competitions in dev tools moving to the next level. I'm sure Gitlab will support it too. Will MS kill NPM? Of course, not. 'Cause 'yet another registry' isn't enough.
Seems like ES6 isn't fully supported, cause Firefox 57 was released in 2017.
try document.querySelectorAll instead
Most package registries allow you to set an upstream but I don't think this will. You can set up namespaces in your npmrc though
Document.querySelectorAll(‚Äôh1 , h2 , h3‚Äô) didn‚Äôt work. I‚Äôm guessing it needs an id or a class?
Oh! I add an issue immediately, I really don't know what is happening. Can you try with another browser maybe? Thank you for your report!
document.querySelectorAll("h1, h2, h3").style.color = "red"; gives me : main-js.js:24 Uncaught TypeError: Cannot set property 'color' of undefined at main-js.js:24
I'm curious, why can't you use a class?
That's because querySelectorAll, unlike querySelector, returns a list of nodes. querySelectorAll('h1, h2').forEach(element =&gt; element.style.color = 'red'); should work.
In this exercise we are not allowed to change anything in the html code and have to use just the js file...
Can you check what document.querySelectorAll returns first?
Why don't you traverse the DOM in js, add a class to each and then apply the listener to the class?
Thank you!! Been trying all night to find an answer! :D
this
Didn't happen anything :o Been just useing js for the past week so it is still a lot for me to take in :)
Thank you! :)
I mean, document.querySelectorAll("h1,h2,he") returns something like an array, which does not have a style property
main-js.js:18 Uncaught TypeError: Cannot set property 'color' of undefined at main-js.js:18 I think I understand, that's why it says that it can't set color xD
h1, h2 and h3 are no less distinct then p vs li, so you need to handle them individually.
 console.log(document.querySelectorAll('h1,h2,h3)); document.querySelectorAll('h1,h2,h3).forEach(function (element) { console.log(element); ‚Ä¶ });
It sounds interesting, but what is the use case? How do you write API tests? Are there any?
It solves the problem of Microsoft not controlling the whole development environment.
Come on it's actually not that bad. I used to do this with private repo dependencies. It's not like you have that many dependencies to specify where specifying a full URL vs username/package could be a big deal. A lot of times you are just going to copy paste the URL anyway.
EILI5
Like so? https://jsfiddle.net/g8swt4qo/ didn't work for me
One of the issue I had in many of my projects, was to actually spend so much time on the layers between backend and frontend instead of implementing features. Why should I spend hours to build graphql schema and queries? Is this actually really necessary? Of course if you have a big project with a dedicated team for backend and a dedicated team for frontend, it make totally sense to use a documented API, like REST with swagger or graphql. But I barely believe that this is a common use-case, especially for fullstack developer. And even if it would be the case, there is still small team where developers take care of all the stack of a project, might be great for them to abstract out some work. Of course all the issues I try to solve with this tool could be solve differently, I just try to make a proposal :-D Concerning your question about ‚ÄúHow do you write API tests?‚Äù. First of all, the isomor-server is automatically generating OpenAPI doc with Swaggery at [http://localhost:3005/api-docs/](http://localhost:3005/api-docs/) . Concerning unit test, I would just test my server function in isolation. For integration test, you can run your test directly against the server at [http://localhost:3005/](http://localhost:3005/api-docs/) or you might be able as well to use supertest since isomor-server is using express. Thank for your question, I will think about providing some test-case example, it would actually be a good idea ;-)
When pulling data from another site you get into all sorts of issues potentially. The best answer is see if they have an API that you can call and get the information. The next answer would be doing something like Xhr which you can find a lot of examples on there internet. I would suggest you make sure you have their permission to do so if this is a site you plan on making available to others and code it in a way where if they change the site that your site gracefully fails until you fix it.
When pulling data from another site you get into all sorts of issues potentially. The best answer is see if they have an API that you can call and get the information. The next answer would be doing something like Xhr which you can find a lot of examples on there internet. I would suggest you make sure you have their permission to do so if this is a site you plan on making available to others and code it in a way where if they change the site that your site gracefully fails until you fix it.
Does the other website provide an API for accessing their ints?
Does the other website provide an API for accessing their ints?
When pulling data from another site you get into all sorts of issues potentially. The best answer is see if they have an API that you can call and get the information. The next answer would be doing something like Xhr which you can find a lot of examples on there internet. I would suggest you make sure you have their permission to do so if this is a site you plan on making available to others and code it in a way where if they change the site that your site gracefully fails until you fix it.
No it didn't. Ugh
Microsoft is taking over the world.
That looks a bit dishonest to me. Same with Yarn, I think it's clear that the long-term intent is to replace npm, and I don't blame them because npm as both a client and a hosting service is quite poor.
Why not use JS to create a new CSS rule?
MIDI
You can point individual scopes (e.g. @babel) to different registries using .npmrc, so you can consume specific packages from GitHub that are under your scope (username), but all others from the official NPM registry. https://stackoverflow.com/questions/32633678/is-there-any-way-to-configure-multiple-registries-in-a-single-npmrc-file
well even by setting the style property on the nodes, you WILL change the html markup. so the exercise doesnt make much sense. with js you'll always access properties. whether its .style or .classList doesnt make a difference. with classList, its definitely cleaner. but if you shouldn't create CSS styles in a file, just use your style approach.
Just use node with something like [blessed](https://www.npmjs.com/package/blessed)?
Very cool, thanks for showing this! I actually once toyed with a very similar idea and was amazed to find that the Web Audio APIs are actually pretty versatile and capable for things like this. Are you considering adding cabinet simulation? It should be possible using a convolution element and suitable impulse responses.
We put in hundreds of hours building, reviewing and practicing the talk and it's really disheartening to see comments like this. I'm only commenting here so that the next time write something like this, you'll think about how the speakers might feel when they read your negative comment. Also, you might be in denial about your hearing problems.
OOP sucks
I‚Äôm currently moving a Python project to Azure from AWS. You don‚Äôt even need to use .NET to leverage what MS is doing. Azure registries, the VSCode extensions, pipeline support for all of this... They‚Äôre doing good work. And it just keeps getting better.
Just to note, it‚Äôs not just NPM: https://twitter.com/github/status/1126949846282317824
Blessed is nice for distributing a stand-alone executable, but it has a stupid amount of overhead.
My hearing is fine and this is nothing personal. It is legitimately difficult to understand without the subtitles. I also speak multiple languages, but I would never consider making a presentation meant for a large audience in something other than my native language, unless there was absolutely nobody else who could do it.
PWA?
[https://github.com/romainPrignon/unshell](https://github.com/romainPrignon/unshell) It could be fun to have some feedback :)
Using [NW.js](https://nwjs.io) for a small work project. Seems to work well enough. Basically just a bundled Chrome/Node. Easy to work with.
We started a node project early last year. Around April time we evaluated AWS and Azure having never hosted an application in the cloud let alone on a PaaS model. Eventually chose Azure because it was so damn simple and easy to use, Route 53 Vs Traffic Manager was probably the biggest contrast at the time. We had some issues with memory management on Linux App Service caused by Kudu because it was so new and it took a while to sort but they got there and kept in contact. We've had other issues but their support team always seem to be on it and super responsive. Would definitely choose Azure again.
Work continues on improvement UI Email Signature Generator -[https://github.com/antonreshetov/mysigmail](https://github.com/antonreshetov/mysigmail)
I rewrote my PHP site in React and NodeJS: 30% faster load time for main page 150% (!!!) faster requests to the database Apart from that, writing everything was a lot of fun, it's now a lot easier to maintain and modify, etc.
I would be adding a CSS class. Cleaner and no yucky inline styles which are a pain to remove. Any type of JS style changes the markup. They probably mean you need to implement a pure CSS and JS solution
Is it a Svelte analog?
autoComplete.js v5.0 just released! It's a simple autocomplete pure vanilla Javascript library. [https://tarekraafat.github.io/autoComplete.js/](https://tarekraafat.github.io/autoComplete.js/)
That is called "Data Scraping".
As you should, yarn and pnpm are excellent and there's nothing in the npm cli that should make you want to keep using it over alternatives.
Long MSFT
[removed]
Lots and lots and lots of practice. CSS is like art. Media query is art in motion.
[Flex box](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox) is your friend - it has simplified a lot of the pain
out of the box animated experiences for react [https://yubabajs.com/](https://yubabajs.com/) its pretty neat :)
Check out [ElectronJS](https://electronjs.org/)
Githubs registry works with existing clients like yarn or the npm cli.
That doesn't contradict what I said.
That's interesting, I was expecting this to use the Emscripten based thing I saw before but seems it's different
Agree, ~16k lines of code O_o.
Like Electron use Chromium inside.
*Does it run Doom*? The readme is short but covers almost anything you want to know :)
# Slate üìù Slate Notes takes html (or other data), compresses it into a URL fragment, and provides a link that can be shared. When it is opened, it renders that data on the receiver‚Äôs side. Its live [here](http://iamshouvikmitra.github.io/slate). # About Slate Notes are contained entirely within their own link. (Including this one!) This means they're... &lt;br&gt; üíº Portable - you don't need a server to host them &lt;br&gt; üëÅ Private - nothing is sent to‚Äìor stored on‚Äìthis server &lt;br&gt; üéÅ Easy to share as a link or QR code &lt;br&gt; Slate Notes can hold about as much as a printed page, and there is a lot you can do with that: &lt;br&gt; ‚úíÔ∏è Compose poetry &lt;br&gt; üõ† Create an app &lt;br&gt; üê¶ Bypass a 140 280 char limit &lt;br&gt; üé® Express yourself in ascii &lt;br&gt; ## Hosting One simple way to host is to forward a domain. Just paste your slate's url in the redirect.&lt;br&gt; ### Contributions Feel free to open a pull request adding your new features, resolving issues, cleaning code or making this readme super awesome üòé &lt;br&gt; ### Screenshot. ![Nothing Special, but here it is.](https://i.imgur.com/VO1hF1r.png "Home") ### License Slate Notes is covered by the MIT License. &lt;br&gt; Copyright (C) 2018 ~ [Shouvik Mitra](http://iamshouvikmitra.github.io) ~ work.shouvikmitra@gmail.com ### Inspiration This website is an inspiration from [itty.bitty.site](https://bitty.site/edit)
I think this might be the first time I have ever read an apology in a readme. This is fantastic!
Created radial brackets to visualize the NBA playoffs with d3.js and scraping data http://matvarughese.me/nba-radial-bracket/
Hey, just a head's up, Firefox is [giving me a scary warning](https://imgur.com/a/i3IZi7g) when I click on your link.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/lpYdTZw.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme)^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20en4frx9)
Cool! It'd be pretty neat to see the source side by side. Maybe it's closed source, though.
Man, that [v86](https://github.com/copy/v86) is the sickest thing I've seen in a while!
I finished `mugshots-client`, a client for traversing &amp; streaming mugshots from www.mugshots.com. I posted this a couple weeks ago, but this week I finished the README docs and published it on NPM. There is a [Readable Stream API](https://github.com/agaricide/mugshots-client#stream-api) and an [async iterator API](https://github.com/agaricide/mugshots-client#async-iterator-api).
The [NEWS](https://gitlab.gnome.org/GNOME/gjs/blob/master/NEWS) doc says SpiderMonkey 60 but I'm not sure what FF version that is.
I had forgotten that TypeScript was a Microsoft project! Thanks for the reminder.
Well dont underestimate the power that being the default has. Most will likely use npm because its bundled with Node, and there is very little benefit to making the effort to switch from the default which gets everything done to a tool with a slightly different api but equivalent features.
I released the first alpha of Alo 4, a complete typescript rewrite of my state management library I worked on the past two years. Unfortunately its neither documented or tested at the moment ü§îüôà. The goal of the rewrite was to explore alternative state management philosophies supporting modularity, undoables and devtooling without: - Proxy - Immutability - Always deepCloning the whole state tree Here is a minimal demo: https://codesandbox.io/embed/14p50xol74 And here github: https://github.com/alojs/alo When the tests and documentation are done I will publish a blog post with more details and what I learned in those two years.
Indeed, and I hope Node come to their senses soon.
Went into the post to ask if I can run Skyrim in it.
It was only a matter of time. Bonus: we can now run our tests against very old browsers like IE4 using ‚Äúpure JavaScript‚Äù.
While this is awesome and cool I don't get why someone would invest their time making this!
Why not? üòä I'm sure they learned a lot making it.
but .. why?
Yes I have the same question !
Very surreal using windows 98 on my iPhone.
Slightly off topic, but if you‚Äôre new to JS and getting the hang of dom manipulation, give [Wes Bos‚Äôs JS 30 ](https://www.youtube.com/playlist?list=PLu8EoSxDXHP6CGK4YVJhL_VWetA865GOH) a look. It really helps with a workflow and understanding what you‚Äôre actually doing! Have fun!
I guess im way too early to understand this. I'm not understanding where it fits in
Dang. What about a way to build a frontend with click+drag functionality, but build the code that powers it in JS?
Genuinely curious... What's the use case for this? Just to make a clone that uses their data?
SCIENCE HAS GONE TOO FAR
Thank you!
That'll be announced at E3 next month.
Your scientists were so preoccupied with *whether* or not *they* could, *they didn't stop* to think *if they should*. Nah, seriously, very cool!
What happens when you need to add a route that gets data in a certain way that your mobile apps need but your web app doesn't?
Regarding the second block, I used to do that too. It gets messy. What are you trying to return? You should always return that if possible, or throw an error. It will make life much easier in the future. Whether or not the function should be called, should not be determined from inside the function. You‚Äôre third block is far more predictable, and in my opinion very intuitive too.
Might convert the final block to a switch.
And Verdaccio
everything here would disturb my linter, everything So I would go with more verbose code, in every single example you gave
I think it's really easy to read in-line comments, even some beginners should be able to understand as long as they know what the symbol means. I've been doing that for a while, and I like it. I could also see why doing the `isTrue &amp;&amp; doSomething()` could be weird, and I've never done that. I also don't like doing the last block either, it's difficult to read. Just the first and second blocks are better suited for me.
The server functions give you full access to the response/request context, see [https://github.com/apiel/isomor#request--response-context](https://github.com/apiel/isomor#request--response-context) import { Context } from 'isomor-server'; export async function getSomething(): Promise&lt;string&gt; { const { req, res }: Context = this; ...do your logic base on the request } For example, you could use headers to differenciate browser from mobile request. &amp;#x200B; And if you really need a custom server look at [https://github.com/apiel/isomor/blob/master/Docs/Server.md#custom-server](https://github.com/apiel/isomor/blob/master/Docs/Server.md#custom-server)
All for true MS Paint memes
My thoughts exactly.
Supported by modern browsers, it‚Äôs a way of allowing the elements to dynamically lay themselves out. Give it a google and you‚Äôll see some good tutorials. If it‚Äôs not for you, your best bet would be with media queries! Best of luck
Is this standard?
Because you can
I agree with the exception of the ternary assignment. I have no problem with those if they are simple and readable
Ultimately it‚Äôs up to the senior dev. In some cases, especially if you have a lot of novices or newcomers on your team, keeping thinks uniform and plain-jane can reduce the number of stupid errors. That‚Äôs a real consideration. Personally, the way I see it, the only way for novices to become better programmers is to read and write a wide variety of code, some of which will look more complex/terse/verbose/alien... The reason it‚Äôs deemed ‚Äúhard to understand‚Äù is partly due to sheltering newer programmers... But there are still a LOT of good reasons to stick to the established style rules. At the end of the day it‚Äôs up to leadership.
A switch only goes over a single value and uses `===`. It doesn‚Äôt solve the same issue at all.
**URL**: [https://gypla.netlify.com/](https://gypla.netlify.com/) **Purpose**: Gym planner progressive web application for tracking gym progress **Technologies**: javascript, react, redux, styled-components, mongodb &amp; netlify-lambda functions I am interested in gathering opinions from developers on the side project linked above! Feel free to have a quick browse and leave feedback. The web app allows users to register, add new exercises &amp; start tracking the amount of weight they can successfully lift for custom exercises. The data is saved to a remote mongodb instance &amp; displayed in a graph format.
&gt;https://i.imgur.com/lpYdTZw.png Amazing work!
it allows you to write data directly to the cache for that particular query. so if I have a CURRENT\_USER query and then do a LOGIN mutation I can set the returned data of the login mutation to the cache results of CURRENT\_USER
Will learn TS as soon as possible. I just landed in the JS world, and I am trying to stick with it for some time to better understand TS later. Yes I want static analysis stuff, as I can't be alert long enough to avoid mistyping/misspelling bugs. Looked around for front end frameworks, at first glance it seems to me that vue.js is beginner friendly but TS support require more steps which I can't do right now until better understanding of the language and the tooling. Thank you
That's good news. Hope they make it encapsulate members at class level (not module level) unlike `_` prefix in Dart which somewhat is confusing at first. If you're the author of the video, then you've done a very good work explaining. Thank you.
Can you explain why and in which scenarios?
Probably makes an excellent portfolio project.
`git clone blah &amp;&amp; cd blah &amp;&amp; npm install`
AM I THE ONLY ONE WHO READ JURASSIC PARK????
Will this work for iPad? My company is apple everything so I have windows/Android on all other devices Is it possible to do windows or Android on iPad?
I like the single-line if statement a lot. A couple early returns, some continues in a loop later and I start to wish my company's style guide allowed them. I'll have to propose it when I find a good example, the rules are not set in stone. I don't like using the logical operators as short ifs. I used to do that, but now I think it's an ugly hack.
I built a Chrome extension called [Mediate](https://chrome.google.com/webstore/detail/mediate-track-your-news/dpecafioolhphoakfmkihbbagkkllmon) that lets you rates articles you have read so you can keep track of journalists you like to read. I built the extension in React and use Redux to manage state. I then connected my redux store to Google's new Cloud Firestore database to manage the data.
Break the problem down. First, can you detect when the mouse is over or when a mouse enters a given element? Second, can you invoke a function after a set timeout?
Third, can you cancel the timeout when the mouse leaves the element?
i used a **onmouseover** in a html div to call a **UserModel** function that works only once until **onmouseleave** calls a another function called **Leave** that closes a what **UserModel** function made and frees it to work again, the problem is that i don't want **UserModel** function to work when the mouse passed over the div at hight speed, i want it to work when the mouse stops over it for like half a second.
Ternary, fine. Single line if, no. Expression &amp;&amp; function call, ok. Setting value in both if and else, horrendous.
I started by using jQuery, and using Vanilla out of an annoyance with conflicting jQuery versions in various places. I honestly used to *hate* Javascript, Vanilla or otherwise. What bores you about it?
So, what did you do to geet good at it?
You need some stateful variables to keep track of how long the mouse was there and only run your function after it. Look up ‚Äúdebounce‚Äù
Yeah i'm a big fan of early-return especially if you're trying to use more functional programming patterns. I find it much quicker to read and not as bug prone as full if/else blocks. I've also found the early-return pattern to be pretty understandable and clear to new devs in my experience teaching. Ternarys not so much... haha
Do you already have an application built using Vue? I'd say for you to try developing again this app, now using vanilla js. It could be a simple app (actually, the simpler the better in this case haha)
IMO following an arbitrary linter rule is not a good reason to not use some of these patterns... But obviously this is a reality of most devs working on a team
[Date.now](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now) gives you time as a number.
Tried with Firefox and Chromium on my Linux machine, no error there. Interesting.
Side projects, mostly. Just little stuff I wanted to accomplish. I also had a job as a PHP dev, which has since transitioned almost solely to JS.
Thanks I'll try working on projects
Do you want time or momentum also?
Nobody online =(
Answer questions on StackOverflow.
I would start by thinking of what you want to learn and how you could best apply that to a project that is interesting to you. What about it bores you?
sounds like a debounce problem
return statements on the right are difficult to scan with the eye.
&gt; arbitrary linter rule Assigning to a variable within an if condition or having unbraced if statements would also trigger my human linter, so nothing arbitrary here
Want to see some some of your work. Can you please provide github link or something?
Awesome username
A function needs to run on the onmouseover, so saying you don‚Äôt want usermodel to run at all seems like you are worried about small functions firing, which shouldn‚Äôt be a concern. If that function is heavy for some reason run another with debounce or the date/time suggestion that will then run user model when the time criteria is met.
Me: Why is this wrong enough to downvote? Everybody:
I've long since given up on interpreting the voting behavior on reddit. They're just meaningless Internet points after all.
&gt; aThingIsTrue &amp;&amp; doSomething(); I'd highly suggest to never ever do this. It's not clever code, it can be super confusing. Especially to other's who don't know that doSomething() will not be executed if the statement before &amp;&amp; is false. Writing a proper if statement is hardly more work and makes the intend of the code immediately obvious.
 aThingIsTrue &amp;&amp; doSomething(); WTF? Is this javascript? This doesn't work in most language because either A) doSomething is void or B) doSomething is not null and you need the return value to do something The best style is the one where you can go back to your own project in 6months and understand every line of code. Usually this involves having it readable to other people.
This is beyond science!
How do I hook it up to the internet?
At this point you're just forcing people to use a tool which they might not be comfortable with. what if someone uses Sublime text? Atom? Intellij? and you don't have to setup anything for vim more than once, you download a plugin - coc - which is a client for the language server and everything works like in vscode. the real time type checking, the errors, goto defs etc. i would argue there is no point in using vscode if you're comfortable in vim, they both use LSP, but vim is WAY more customizable. the combination of LSP + Ctags + fzf/ripgrep make it a far superior coding experience than vscode. intellij, on the other hand, is a different story. and it actually consumes less memory and reacts faster than vscode which launches a ridiculous amount of Code helper processes.
Because it‚Äôs wrong ... but the idea is right. The single value being tested is `value`. Then you have two case blocks and a default block. There might be a better solution, but that person only offered criticism, which contributes nothing to the conversation.
You could try Pluralsight's skill IQ test. But I do not make any guarantees to how accurate the results are.
Personally I find switch statements to be hard to read. I know I know, performance benefits and what-not, but for general front-end code the performance gains are negligible compared to the variance in an API call
In the 2nd block the idea is to return early if some condition is true. Think about error checking (but you dont wanna throw an error). My most common use case is when executing a transformer, so the condition is essentially "I dont have all the data i need to construct a sane object, so I'll return a default (loading?) object instead". Mostly in the context of reactive/functional programming
&gt;Ultimately it‚Äôs up to the senior dev While this is true, I think its a little bit unfair to say "well because the guy with 2 years more exp than me said so, we cant do this". There should always be a conversation and the senior dev should have an opinion, but the reasons for those opinions need to be made clear to the team. Following a rule "because someone said so" is how you get frustrated co-workers that dont respect each other.
&gt;some continues in a loop later Whaaa ok i was with you until here, lol &gt; I don't like using the logical operators as short ifs. I used to do that, but now I think it's an ugly hack. This is exactly what I went through, I was doing it about 6 months ago and now I'm refactoring and just removing them entirely. They are just odd-balls in the rest of the code
well, Verdaccio I believe is just an npm repository. Github will support numerous package managers.
Apparently it's something with the used URL shortener service as shown in the screenshot. Here is the actual link: https://tarekraafat.github.io/autoComplete.js/
Iframes happen to have a lot of issues like resize and platform inconsistent api. We happen to use iframes a lot with friends at codengo.net and they feel like the worst designed html tag. As for your question about fallback, it's definitely too early to even consider using them.
in which area? JS is a many-headed beast, being good in JS would mean being good in a multitude of ways, and different domains. Is there a reason you ask this question?
Since it's in electron it's probably bigger than windows 10
Really great article. I also had similar converging interests a few years ago, and contributed some effects to this project, [https://alemangui.github.io/pizzicato/](https://alemangui.github.io/pizzicato/) , I think I also plugged in the guitar and tried them out but the lag was a bit much :-( I don't really have the signal processing knowledge to pull it off right now, but I'd love to see someone try and replicate the Univibe effect with WebAudio. Serious kudos with what you've done.
No, chrome is the browser that is supposed to support them for now.
All of this is perfectly valid. Imo of the linter complains, change the rules. Afaik this is never a cause for bugs and actually allows you to express code in a clear way. As everything you need to know the language to know what it does. Linters are for catching potential sources of bugs... Being more beginner friendly is no excuse. If your coworkers complain is because they don't know better.
I guess I'm just curious. Looking at job postings and they ask for something like "intermediate" I wonder what that really means. I've been a frontend dev for 2 years and have recently started in a more full stack position. Building in a mean stack. I don't feel like I have much difficulty, sometimes a little slow I guess. I consider myself to be maybe getting into intermediate skill level but just thought maybe a skill test could give me a good idea.
I don‚Äôt like the single line if. I prefer two lines, but without braces: if (aThingIsTrue) return someDefaultValue; It‚Äôs easier to read than yours IMO, especially if you have multiple early returns.
Definitely. I think we are in agreement on that. A good leader will always be able to provide an answer for *why* things need to be done.
Most modern editors will colorize the ‚Äúreturn‚Äù keyword (and every other keyword really), so I‚Äôve never experienced any difficulty with this. Especially if your pattern is to do early returns at the top of a function so you know where to look anyways.
I'm sure it's possible. I think someone made a website that runs windows 98 in the browser.
An arbitrary online test for this that would be useful doesn't exist really. One companies senior dev is another companies junior ¬Ø\_(„ÉÑ)_/¬Ø Job specs should be more specific than junior/intermediate/senior etc. Look at the technologies they're asking for and if you like the sound of the job go for it. Nothing to lose üôÇ
Now there's a name I've not heard in a long, long time. A long time.
Your reply makes me think you don't know what Basic Authentication setup on your web server is. Give it a google.
... ooc, how is it you are able to distribute windows...
You think `condition &amp;&amp; function();` is okay but `if (condition) function();` isn‚Äôt? The latter is 100000x more expressive.
how'd you get there?
It's valid in most languages to simply evaluative an expression without doing anything with the result... Eg. Calling a function that returns something and not storing the value. Not good practice though
At least you don't use bit masks. I've seen that in production code before. Imo it's better to use braces because you have absolute control over the flow- for the same reasons you should use semicolons to prevent unexpected and difficult to debug bugs. But I also like my one liner lambdas.... But I think those are exempt- the curly braces are only useful for multiline lambdas.
I seriously doubt anything on the web today would even load on IE4; with shit like gzip compression and mandatory TLS protocols on today's websites that were invented long after IE4 was discontinued. You'd pretty much be relegated to HTML files served from the local machine.
I‚Äôve applied for senior level positions I was not remotely qualified for, and still gotten interviews. A lot of new projects will prioritize senior hires and get them somewhat involved in the hiring phase. Then they start hiring the juniors. And even when that‚Äôs not the case. I still find that a lot of the recruiting firms basically have no idea what they are actually writing on those job posting, at least in my area. I don‚Äôt know if it‚Äôs some kind of quality control problem or they‚Äôre just totally winging those job descriptions... So even a posting for a ‚Äúsenior dev‚Äù could be totally inaccurate.
There are thousands of different color schemes, and I doubt return has its own color. For example, I only colorize comments and strings, I find thats least busy.
If it triggered you personally, it's arbitrary
Open Source Serverless CMS - [Torus CMS](https://github.com/gkpty/torus_cms) for building and deploying static sites in a light, cost-effective way. mobile compatible and it provides a friendly GUI, allowing you to easily publish content from any device. Standalone and can be added to any static site. There is no need to migrate your site, learn a new language or do any maintenance. Please download and use the repository. Your feedback is very much welcomed. Thank you
We created an open Source Serverless CMS - [Torus CMS](https://github.com/gkpty/torus_cms) for building and deploying static sites in a light, cost-effective way. mobile compatible and it provides a friendly GUI, allowing you to easily publish content from any device. Standalone and can be added to any static site. There is no need to migrate your site, learn a new language or do any maintenance. Built with AWS Amplify, Reactjs, NodeJs, graphql, dynamodb, lambda Please download and use the [repository](https://github.com/gkpty/torus_cms) . Your feedback is very much welcomed. Thank you
Single line if statement is beautiful. What is there not to understand.
I literally know almost Nothing of web auth and Php, I know an enormous amount of HTML, css, and a good blob of JS, but i wanted a javascript/html solution to my problem, not webauth
Yes if it only more people found it fun to play :(
Ideally? Yes. The constructor gives other people a contract for what is available in the component/class
Sounds like your setup (and I mean no offense) makes it hard for you to see return statements. All of my statements (if, return, etc.) on the default theme in vscode are purple/pink, so there‚Äôs literally no way to miss it.
It really depends on the situation. But in the vast majority of cases, it‚Äôs best practice to initialize your variables inside of the objects/functions that depend on them. The main reason is to ensure that other objects in your application are not changing any variables that this particular object is observing. If it was declared outside of the object‚Äôs constructor, then it probably exists in some outer scope somewhere, and lots of other objects and functions can do whatever they want with it. When you let that happen, the application logic can quickly spiral out of control. It may not seem like a big deal at first, but when you build up a lot of your application to depend on (semi-)global variables, and some of them start to make changes to those variables for different processes, then you‚Äôve introduced the complexity of **time** into your app logic. If something changes *too soon* or *too late*, and lots of other things depend on the *scheduling* of those updates to global variables, then it becomes very hard to make changes to your code without breaking everything. And it becomes a nightmare to reign that back in. But yeah, not the end of the world, just something that you really have to watch out for, especially in OOP, and especially with large applications.
If I understand correctly they are not equivalent. In the jQuery style you'd have to import the whole object with all the methods, including the ones you'll never use. The other one allows you to pipe any function you see fit, that includes both user defined as well as library exposed ones.
Yes, I definitely agree with you about that. Solid advice. Personally, I learned a ton about programming and web dev stuff just by trying to build stuff the hard way. It‚Äôs really awesome once you begin to realize all the problems these frameworks/libraries are attempting to solve. It definitely gives me a greater appreciation of the JS community as a whole.
That‚Äôs actually solid advice. Even better if you don‚Äôt already know the answer to a question off-hand. Doing the research on your own is super valuable.
I saw a talk where a guy made todo mvc work in the first JS-capable browser. It was tricky, but it worked.
Stuff like that exists... but tbh, the more a piece of software holds your hand through the boring hard parts, the more furious you will be when you realize they don‚Äôt have a good solution for several of your use cases. Honestly, the best tool I‚Äôve used to streamline the development process is Bootstrap. People like to bag on Bootstrap because it‚Äôs easy and abstracts a lot of complexity away from you. But it was an invaluable tool for helping me get out of ‚Äútutorial mode‚Äù with html/css design. It really sped up the visual feedback loop (you can make cool-looking stuff very quickly), which gave me the mental clarity to begin figuring out the finer details of page layouts, color patterns, animations, and responsive design. So if you haven‚Äôt tried Bootstrap, I think you should!
Honestly, if you‚Äôre trying to code JavaScript, you‚Äôll need a runtime interpreter somewhere in the mix. The code really can‚Äôt be executed any other way. So you‚Äôll need something along the lines of NodeJS/V8 or equivalent. As for the large bundle sizes, I‚Äôd like to see improvements there, but for now, bundling the V8 engine seems like the only viable way to ensure that all your software dependencies are totally stable for the future. It just gets way more complex with native interop.
[removed]
Corporations really need to work on namespacing in real life...
You might take a look at React. It‚Äôs a bit of a weird paradigm shift if you‚Äôre used to OOP, since React is FP-oriented, but the API is pretty simple and powerful for building for front end web apps. And their TypeScript support is pretty solid as well.
Great, but why don't you have blinking return statements? Wouldn't that be better? Its best practice to keep "flow control" close to the left margin so you can more easily understand the path through your code. When you put a return on the right, it becomes unconventional and increases the cognitive load.
From experience I've realized that the most important thing is how your code looks to you, not right now, but a few years from now.
It definitely has its drawbacks, but it‚Äôs a good paradigm if you have the background knowledge and discipline to write truly reasonable code. But often it‚Äôs not even the fault of the developer. The problems of programming are less about the languages/frameworks/paradigms/etc. and more about the disconnect between business bureaucracies and engineering teams. Software development is a process of *discovery, not construction*. And when programmers are rushed to fill some business need at any cost, and junior developers aren‚Äôt given adequate mentorship and guidance, you end up with shitty code everywhere. OOP works nicely when you clearly define the boundaries of software dependencies, and build from the business logic outward into ancillary systems. It gets out of hand when people start taking shortcuts to access the data they need in order to get hack together a working feature. Once your dependencies start bleeding into other domains, it tends to only get worse over time.
You might want to introduce more types (as in real GraphQL types, not the type field you already have). I would expect Card to be an interface and to have other types that implement it, e.g. Minion that defines attack/health. Then you'd be able to have queries [like this](https://api.hsodb.com/v1?query=query%20%7B%0A%20%09cards%20%7B%0A%20%20%20%20...%20on%20Minion%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20attack%0A%20%20%20%20%20%20health%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D). See [https://graphql.org/learn/schema/#interfaces](https://graphql.org/learn/schema/#interfaces) for more info on the subject.
I actually don‚Äôt mind nesting them 1-2 levels deep. But that‚Äôs as far as I‚Äôll go. At a certain point you just need to think harder and turn it into its own function or something... But as for the github issue, I don‚Äôt actually mind the formatting that much anymore. It used to bother me at first, but now it feels pretty okay TBH. I‚Äôll give it a read though.
Initializing a known state is a great start.
Also, for your next experiment you might want to try using data that is more relational to learn more about GraphQL. It excels with graph-like data.
Completely agreed
JavaScript doesn't require that you initialize your instance variables. They can be set in the constructor, in the class body ([as part of a proposal to the standard that's close to being finalized but technically not in yet](https://github.com/tc39/proposal-class-fields)), or only ever set the first time they're given a value. class Example { field = true; // class fields (stage 3 proposal) constructor () { this.init = true; // constructor-initialized instance variable } setValue (value) { this.value = value; // instance variable set arbitrarily } } If using [TypeScript](http://www.typescriptlang.org), class fields _are_ required for all class instance variables. // TypeScript: class Example { field = true; // ok constructor () { this.init = true; // Error, not declared } setValue (value) { this.value = value; // Error, not declared } } Fixed with: // TypeScript: class Example { field = true; // ok init; // ok value; // ok constructor () { this.init = true; // ok } setValue (value) { this.value = value; // ok } } Whether they're initialized in the field or in the constructor is up to you, for both JavaScript and TypeScript, it doesn't matter, but you can reduce constructor code, or ever omit a constructor completely sometimes by initializing what you can in class fields. For example, above, `init` is not dependent on any constructor arguments so it could be defined in the class field and thereby remove the need for a constructor. class Example { field = true; init = true; value; setValue (value) { this.value = value; } } Note that Babel while [babel can transpile class fields](https://babeljs.io/docs/en/babel-plugin-proposal-class-properties) (effectively moving them to the constructor), today's Chrome actually supports them even though they're not officially part of the standard yet. Nevertheless, you'd want to make sure that, if you're using them, babel is taking care of them for better compatibility.
The server should only return gzipped assets if the client specifies it can handle it. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding
What did he actually do, though? It looks like the biggest part of it is by someone else.
I do use as blockers, but pretty much any time a website politely asks me to whitelist them, I will almost always do so. But if the ads are truly a hinderance to my experience of the site, I‚Äôll block those ads all day. There is a fine line... But yes, I‚Äôm getting content that interests me, and basically paying nothing for any of it. If seeing an ad or two is the worst thing that happens to me all day, I‚Äôd still live a good life... ads aren‚Äôt the worst thing ever. Sometimes I even find cool stuff that way!
My personal goal is to ingest data for analysis / visualization projects.
&gt; Great, but why don't you have blinking return statements? Wouldn't that be better? Why the slippery slope argument? No one is advocating for obnoxious themes. ‚ÄúConventional‚Äù is completely dependent on your or your company‚Äôs styling. If your style dictates that you return early, if... return will reduce cognitive load. Combined with colorized return statements, the cognitive load is reduced further.
Wow you're dead right, I'll look into interfaces, I didn't even realize that was a thing. Thanks for the feedback and checking it out!
Firefox dev tools. A few devices to test on. [Autoprefixer](https://github.com/postcss/autoprefixer) to help normalize styles across vendors.
Latency is acceptably low/insignificant in most applications of the Web Audio API; that said, it's pretty limiting on the consumer in terms of the DSP you can do.
 Company styling is irrelevant, having a flow related statement not on the left, with **all** the others, makes understanding the flow more difficult. https://medium.com/@matryer/line-of-sight-in-code-186dd7cdea88
In this case, if... return IS part of the flow when you return early. And it‚Äôll almost always be at the top of the function so you know where to look and what to expect. There is nothing difficult about this. Anyways, I‚Äôm sure you do what works for you, I‚Äôll do what works for me.
This is not a bug. Class fields are _defined_ not _set_ in instances, so they would not trigger the super's setter for that property. https://github.com/tc39/proposal-class-fields#public-fields-created-with-objectdefineproperty
 if (aThingIsTrue) return someDefaultValue; Out of all the styles proposed and debated in this comment thread, this is one that led to a major security vulnerability. Behold the infamous [`goto fail;`](https://nakedsecurity.sophos.com/2014/02/24/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch/)
I like to do it for code clarity. I hate going into a file where I don‚Äôt know what variables are in play.
You aren't following, from your example function doSomething() { if (aThingIsTrue) return someDefaultValue; ... } I'm talking about horizontal positioning, the return is not on the left, as in function doSomething() { if(aThingIsTrue){ return someDefaultValue } }
 &lt;input type="number"&gt;
The first is an extremely dirty method I don't like, but it's still technically a single expression: it's a simple `bool`. So it's still a single action/statement per line. The latter not only has two statements on one line, but also contains branching logic. Yikes. You want to make branching logic *especially` easily discernible when reading code.
&lt;input type="tel"&gt; for mobile number keypad.
You visit the other site via a `http` (finally you understand what that stands for!) request. In the browser it's messy because of security issues. You'd use `fetch` there. On Node (use Node btw for you console needs), where you have no limitations about your `http` requests, you could use the inbuilt request API, or I'd suggest the `axios` module.
 This is going to get deleted post in r/learnjavascript instead
Sorry, I'm strictly anonymous on Reddit, for valid reasons.
Good lesson here.
You're citing a golang coding article in an argument about Javascript style?
I give up.
I've been using single-line IF and CASE statements (where appropriate) since I started programming at age 9. I'm now 43. I also use 1TBS for braces (with Egyptian braces for methods too), tabs for indentation, and I prefer early returns. I split my time between C# and JavaScript and pretty much follow the same whitespace and brace style in both. In the end, it doesn't matter. Some people like scrolling vertically, I find compact code to be more legible :). Work out a "house style" with your team. If you change your mind later and you find it necessary, modern tools can reformat your entire codebase in less time than it takes to refill your coffee cup.
In a framework you could just pass the data to those pages on state. On express you could make a get request to that data and put it in an html template. You need to be more specific in the tech you‚Äôre using
I would like the data to all appear on one page, I only saved 3 pages because I wanted to see if it worked with the other data. Basically I have an html file with a script in it and it displays JSON data. I want to do that two more times on the same page. Let‚Äôs say I had weather data from different cities in different JSON files, I want to display the the temperature for a city. I have 3 JSON files that display weather data for a city. So I wrote a JavaScript code that displays the temperature data from the JSON. I can run it with NewYork.JSON and then if I replace it with Chicago.json it works too. But I want to be able to display the temperature 3 times, so how can I do that? Let‚Äôs say I have my displayTemperature JavaScript and I want to get the data from 3 Japan for NYC, Chicago, and San Diego all on the same html page. How can I do that?
I suggest you to look at php scripting it is beginner friendly to exact task you have described.
Thank you I‚Äôll check it out.
I don‚Äôt know the API you‚Äôre using or your structure but I mean you could use a loop in the most likely scenario. Make your 3 data points an array and map over them, and return the temperatures. So something like: jsonArr.map( (data,index) =&gt; city[index].JSON) or something.
Don't forget the new Terminal
Wrote simple dependency injection in js, hopefully someone will find it usefull. All feedbacks are wellcome. [https://github.com/Cobalt123/JS-dependency-injection](https://github.com/Cobalt123/JS-dependency-injection)
I prefer the traditional for as it works on anything and is more flexible: both index iteration and iterator. Also, what about break and continue?
Create one function with the JSON file name and parent object as input that performs the rendering. Call it 3 times.
I am following, if...return is considered part of the ‚Äúflow‚Äù you keep talking about. Certainly you can put it on 2-3 lines, but I‚Äôd argue that makes it harder to read. Especially if you have several in succession. ``` if(condition) return ... if(condition) return ... if(condition) return ... ... ```
Do I need to set a different name for each variable in the function?
+1
Some people have too much time on their hands... which is a good thing.
It worked and everything but I was wondering, is there a way to write it as a loop with a variable even if I don't have an id to refer to? I was trying to make sens of it with ([https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll)) but I feel like they are keeping us back in this exercise by not allowing us to touch the html file and expecting us to loop... var x = document.querySelectorAll('h1, h2 , h3') //here i still need to target each element? var i; for (i = 0; i &lt; x.length; i++) { x\[i\].style.color = "red";
I'll see if I can find anything on this\^ But I somehow have too use loops and variables aswell..
The course is kind of just started, so far we've just covered the basics js and some DOM
Thank you! Do you know any good 'programs' or ways to improve your programming skills?
forEach() is not superior to anything. It's a poor substitute for 'for-of'. forEach() does not support break or continue, it doesn't support iterators (requiring a full copy of an array to iterate on), and modern browsers actually optimise for 'for-of' (especially chrome). &amp;#x200B; Also, 'for-await-of' is now a thing. Proposals to augment Symbol.iterator with combinators totally omit forEach() entirely. map/filter/flatMap/etc are perfectly fine but forEach() is fast becoming redundant in modern JS now the language provides proper syntax for iteration. &amp;#x200B; // use for(const value of it) { .. } // not [...it].forEach(value =&gt; { }) Where 'it' is an iterator. A blog post on why forEach() was dropped elsewhere can be read [here](https://blogs.msdn.microsoft.com/ericlippert/2009/05/18/foreach-vs-foreach/), which does a better job at explaining why forEach() is antiquated than I can summarise in this post.
&gt; in Electron "We need to find some way to make it run slow as shit in spite of Moore's law" "hold my beer"
Is "it's on average more confusing" arbitrary? That's why I implement linting tiles against these things.
Project Page (?): https://github.com/kaihotz/React-PhoneNr-Input *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Just wanted to get the news of this library out there, enjoy Feel free to share, clone, fork, star etc.. Happy hacking :)
for...of is faster and easier to read than forEach. map, find, reduce, etc. are all great and usefull but in my opinion, there is hardly any reason to use forEach over for...of.
I am not even a native speaker and I could understand those guys more than fine. Their accent are not even that strong.
No, you call the function 3 times with different data, and variables declared in the function and function arguments are local, but it would be interesting to know how you write the output to the DOM/browser now. Something like function render(json, id) { let obj = document.getElementById(id); obj.innerHTML = JSON.parse(json); }
What the hell? Do you know how to use javascript?
Every day we stray further from god's light.
Can I see it, too?
Not sure what you mean by this. [Here's a very basic example](https://jsfiddle.net/ry5nq9e1/)
It's not that difficult, just do something like: document.styleSheets[0].insertRule('h1,h2,h3 { background:red }')
I know for a fact that server side easiest to start with is php, that why they teach it at school. I do know js, but server side js is more complicated for beginner because it based on middleware or needs mvc pattern to know. Right now i would suggest to go with js and maybe use buttons to toggle interface changing layout since them wanted to do everything on one page.
 What I personally dislike about GJS is that I can not use Node modules. To me this is a great disadvantage.
OK, well I told you how to add the CSS class, but you still need the loop to add the onclick to each element.
Class variables can now be initialized without the constructor: `class Test {` `a = 123;` `t() {` `console.log(this.a);` `}` `}` `const test = new Test();` `test.t();`
We were allowed to add a button in the html file and I added the oneclick there while I have a function containing everything else in the js file.
Not really, you can easily find out if someone is bad, but it's impossible to find out if you're actually competent
I think that the code that takes data and displays it could be abstracted away in a function that you could reuse. Like for example: function getData(url){ return fetch(url).json(); } function renderToString(data){ /* [ { day, temperature }] */ return data.reduce((res, cur) =&gt; `${res}&lt;br/&gt;${cur.day}&lt;br/&gt;${cur.temperature}`); } function getDataAndRender(url, id){ getData(url).then(data =&gt; { document.getElementById(id).innerHTML = renderToString(data); }) }
It may be mildly more complex, but it's going to contribute to much less text to mentally parse. I really, really don't think we should avoid using ternaries just because a junior somewhere will trip up on it. Sometimes the more complex thing is just better - think promises versus async callbacks.
&gt;r/javascript Rules 5. "Remember the human." &gt; &gt;It's ok to disagree, but we should attack ideas, not people.
On average according to you
16.23 secs if you count = count + 2 instead of count++
Looks like you code the consumer... Are you able to see the pitagora chimera?
You mean that to avoid trying even numbers ? Which way did you compute that ? I am most interested in the difference between JS and C as every computer will give different results anyway.
I didn. In the infinite series of optimization tricks, this is just the first order trick. Minimum effort, maximum step. In performance
Well, you would forget the 2 in the beginning. Not a big deal if you add it manually again, but my main goal here is rather to compare JS and C so it is not completely important which algorithm I use so long it is the same algorithm in all that programming languages I check.
I personally used Firefox, latest version. After a few seconds the browser told me that there was a very demanding script running, but this should influence the execution so long you don't break it.
Yeah, at a certain point it's personal preference, and I definitely feel the verbose options are usually easier to deal with down the road when it's time to re
nodejs is built on top of the V8 engine, the same as used in chrome. basically it optimizes and compiles the javascript code to machine code whenever it is possible: https://en.m.wikipedia.org/wiki/Chrome_V8
sorry, but i don't understand what you're saying/asking here. you can also use a for-loop if that is what you're wondering.
How would that be written out?
No, but if you want typescript/vscode to automatically detect the type, it has to be initialized somewhere within the constructor chain. Even if you have to do: constructor() { /** @type {string} */ this.variableToBeUsedLater = null; } It'll save a lot of headache later. And if you're not type-checking your JavaScript yet, it's good practice to document your variables types if they're not obvious.
Why `-O2` and not `-O3`? `-Os` might also make a difference.
What I told you was better, but maybe stick to what the lecturer expects or you'll get asked how you know how. You should be working from the course material, otherwise there would be thousands of students in here every assignment due date...
If I have to guess, the results you're seeing are because you covert longs from/to doubles every time you take a square root in the C version. Probably the JS versions recognize correctly that you're dealing with integers only and use a sqrt() implementation optimized for that. It just goes to show that JIT compilers are pretty powerful sometimes and as long as your code is not performance critical, it makes little sense to choose one language over another "for performance". That said, this is just a micro-benchmark from which you shouldn't draw too much conclusions. JS does have plenty of issues that make it hard to optimize in other scenarios.
I agree but all the materials they provided was through id and class. Kind of left us on our own after that. A mail has been sent by a classmate that is a little more frustrated with this than I am so tomorrow we might get an answer on exactly what it is ment for us to do. Just takes the fun of learing js when stuff like this happen.
It is also possible your lecturer isn't writing the best material, so I guess just work through it, don't care too much if you don't get top marks, and use the course as guidance for research. So come back and ask more questions, no problems with answering genuine questions.
Both take 16s for me using VC++ for the c code and chrome for the js code. I believe the modulo operation in isPrime() may be a bottleneck in both the C and the JS version, though. After replacing it with double div = n / k; if(div == floor(div)){ and let div = n / k; if(div === Math.floor(div)){ I get 12 seconds in the C version, and 4.5 seconds in the JS version. I haven't checked whether the replacement is precise enough for larger numbers, though.
He in no way asks about doing anything server side.
Yeah the idea of using php only makes sense in the context that the person doesn't know javascript.
Thank you, I learn here and w3school, not to mention Ducketts book more than I do from prerecorded videos. Sometimes you get stuck and its hard when you don‚Äôt have anyone to ask for tips :)
I‚Äôd be curious to see the C time with -O3. -O3 should in-line the function.
Also try -ffast-math with gcc.
The code you wrote above works. I'm not sure what you mean by " //here i still need to target each element?" though or what exactly the problem is.
Might and Magic III and Civilization there i come!
As long as they both have the same algorithm.. tweaking the algorithm shouldn't really be the goal here.
Oh you are really smart, do you have a porsche? /s
Project Page (?): https://github.com/oguzeroglu/ROYGBIV *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I mean thats very basic boolean logic. If you are a programmer you have to understand it. Not a big fan of it either unless in very specific cases like in jsx.
Can you share a link to the tool?
Sure, I've made a bunch of them. They're all here: [https://beautifuldingbats.com/](https://beautifuldingbats.com/) I figured making tools that can be embedded on other sites (along with a link back to my site) would be a good way to get more traffic.
Hi /u/TheCodingBus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/LowerMontaukBranch, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sma92878, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Will check it out after vue at a practice level. One page articles agreed that vue is more beginner friendly. So yes I'am used to OOD. Seems to me that strict OOD is counter productive in the front end world as the whole thing is very dynamic by nature. Will continue to learn before saying more nonsense here. Thanks
Hi /u/th3originals, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/qcdatabase, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/all_whamen_are_equal, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/John_Doe_2019, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
What you're looking for is probably a CDN that can host your code so that people may reference it via a URL. If you want, you can also release your creations as packages on platforms such as npm. That way, developers can download them and more effectively incorporate them into their projects.
Hi /u/kunalag129, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RespectableCafe, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jonnyboyC13, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/a-char, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Without seeing the code, I can't make any concrete recommendations. But there are essentially two ways to go about this. 1. You make a url where the tool is the only thing on the webpage and embed it in an iframe. 2. You create a JS include file that will render the HTML and CSS into the webpage.
Hi /u/zadysscg, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Swaggerninja123, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/fenwalt, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/spmaster007, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/anjan-dutta, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thanks, probably doing both would be the best idea, for different levels of coding experience. The first seems very simple. It's number 2 that confuses me a little. Maybe I'm over thinking this!
I *think* this https://stackoverflow.com/questions/22156326/private-properties-in-javascript-es6-classes Answers your question.
Unless you've coded the tool in a client side JS framework, it would be difficult to implement yourself.
wow that's a really lame implementation, they are tossing a '#' in front. I get they want brief code, but that's pretty weak sauce.
Well, I'm surprised they've introduced classes at all. But I'm not a language designer and like you said, brief code. JS is very often going for solutions that don't look very pretty if you're migrating from other languages, but allow you to develop code very, very quickly. I guess it's a specific type of charm that it has.
Your C code is wrong. Change your calculations to bit shifting. Then you'll notice the speed differences.
Some variation of the revealing module pattern might what you're after. Basically using an immediately invoked function expression to give you a private scope, like this: ``` const obj = (function(){ let _length = 0; return { getLength: function() { return _length }, setLength: function(n) { _length = n; } }; })(); ``` You then can't access _length directly; you can only get/set it via the getter/setter.
It's deceiving but an ES6 is mostly just a pretty wrapper, everything is technically public in the class, it's not true OO like Java or C#, it's just fact.
&gt; How can it be that the Javascript code is faster that the C code ? Because your C implementation is naive and poor.
Well you can, but you'd have to set up tooling to build an application bundle the same way you would for the browser. And then you'd still have to use GJS's module system for GTK libs (or wrap those as exports in your own modules.) I tried this for a small experiment [here](https://github.com/spacejack/markread).
Thanks for the response, I apologize for posting in the wrong sub, thanks for the explanation!
There are different standards that people use to indicate if a variable is private like using a `_` so the code becomes `this._name = name`. This is just a convention to let the developer know not to directly access the variable, and it is hence private but the is no enforcement from the compiler if someone tries to access the variable from outside the class. Typescript has public and privates and enforces the relationship before compilation like you are used to in other languages so you may want to check that out.
Huh.. TIL Optical Character Recognition abbreviated as OCR is the software tool used to convert typed or handwritten content into machine readable, editable format. OCR engines are used to read typed (machine printed) characters.
On [repl.it](https://repl.it). clang version 7.0.0-3\~ubuntu0.18.04.1 (`clang-7 -pthread -lm -o main main.c`): Your code as presented in the link -&gt; 47.312243 s Small modification to do less double to long conversions -&gt; 18.254958 s Node v10.15.2: Your code as presented in the link -&gt; 65.236 The remote machines use Intel(R) Xeon(R) CPU @ 2.30GHz (2 physical cores, 4 logical)
What do you mean with wrong? How would you implement bit shifting in that context?
Google Bitwise Sieve for primes. C is fast because you can use bit shifting tricks for maths.
Wow! I was working on a project and I tried to use tesseractjs v1 and it just didn't work. On a whim I dropped one of my images on it for this new version and it got it almost right away. I guess I have to rewrite that project now, haha. Thanks!
For `if`s, `for` loops, etc. you can leverage your knowledge of other languages, but this is one of those things were your knowledge of other languages *doesn't* help you in Javascript. When it comes to OOP Javascript is ... different. There's really four schools of thought on how to solve the "problem" you see: 1. Use crazy module pattern stuff to get "true privates" (ie. what /u/synchronium suggested) - problem: the solution is worse than the cure; this syntax is just awful and the minor benefits it gives (true privates) are far outweighed by its inconvenience 2. Use Typescript or another non-JS tool to get "true privates" - this is another popular option, and while I personally am not a fan of TS it's definitely a solid option 3. Pseudo-privates (eg. `this._privateVar`) - problem: it's not truly private; solution: who cares? As long as you work with grown-ups who can understand a coding convention (don't use `_`-ed fields publically) you get all the benefits of private vars, PLUS you can still test them in unit tests, debug them (see their values) in the browser, etc. Truly the best of both worlds in my opinion, and the *right* way to do privates *in Javascript* 4. No privates ... or OOP at all - IMHO this is truly the best solution - JS was never made to be an OOP language; OOP stuff was tacked on to a Scheme-derived language at the last minute to try and piggyback on the "new technology" that was about to take over the web at the time ... the same one Javascript also tried to piggyback on the popularity of with it's name ... yes I'm referring to Java But of course because it was thrown in at the last second JS's OOP *doesn't* work the same as Java's. No matter what you do to try and make JS into Java, you never will fully succeed. So stop trying to put a square peg in a round hole and embrace the style of programming that Javascript (and the languages it was inspired by ... before the last second introduction of Java-*style* OOP): functional programming. Once you do I *strongly* suspect you won't go back, because JS was really made for functional programming.
It has nothing to do with PHP, it's a little setting on your web server in the config file. Then it'll ask anyone to comes to your site for a password before serving them. Little setup, no coding. &amp;#x200B; As for your JS approach, it's impossible. JS will run on the clients computer and therefor anything it does the client can change. You can never trust what the client does. Another hit for JS is that it'll probably execute after the page is loaded. So just from that, how could it prevent the user from seeing it?
&gt;https://yubabajs.com/ I was quoting this!
Agreed, the # syntax is hot garbage. IMO all these awful names and features being added is throwing tires on the dumpster fire that is JS. It's sad. Can we not do the c++ thing? That is, throw incoherent shit into our language until we support 10,000 different ways of doing the same thing?
Typescript, thankfully, didn't do the aweful "#" prefix. That syntax makes me throw up in my fucking mouth. I'm sad and embarrassed at how many aweful compromises TC39 is willing to throw into this language. It's disgusting. Since ES2016, IMO the language is becoming worse.
Meh. It's just syntax. No need to hate on other languages just because you prefer to use something different.
There is no such thing as *true* OO. OO doesn't exist as a concept in machine code, so it's wrappers all the way, in all languages. Besides if I remember correctly, Java (and maybe C\#?) actually uses the exact same type of prototypal inheritance that JS does, but without the granular control.
You font on your demo page won't load for me, since you are requesting it over http instead of https
The problem here is that your implementation was very naive. The C language always compiles to what you ask. e.g.: int x = some_integer_value; int y = sqrt(x); Compiles into a int -&gt; double conversion, followed by the actual sqrt operation, followed by a double -&gt; int conversion Whereas the javascript specification is a lot more free with what kind of transformations a compiler can do to your code. let x = some_integer_value; let y = Math.sqrt(x); Might just compile into a call to a highly optimized implementation of integer square root. What this leads to is that naive C code will potentially not be as performant as naive JS code ran through a good optimizing JIT compiler. However, the fastest C code possible will always be faster than the fastest JS code possible
And tons of other tricks and hooks and extensions on the CPU or GPU driver that JavaScript JIT compiler is blind to, right? I do know that one reason we migrate so much into JavaScript from numerous compiled languages is that it‚Äôs 1) free and 2) constantly being updated with thousands of new libraries for every server/client platform on earth while Python and Java languish in old and sparcely-staffed maintenance groups for those libraries, compared to vibrant and fast-moving world of JS today. Performance happens as a result.
JS is awesome. But if speed is critical you use something like C, and you use tricks to speed up your maths. I used to work doing cryptography stuff and spent most of my time figuring out ways to speed things up. For example, polynomial maths works really well with bit shifting.
So is the JS implementation. They're virtually identical though, yet C is slower. We're here to figure to figure out why the same code is slower in C, not how to improve the code.
There is going to be only _one_ way to do private members in JS though
Quite simply, JS is not Java and the designers didn't care about such things. It was born as a browser language, where all your code is visibile to anyone, so any attempt at keeping things private is futile. Of course now we have node and all that, but the philosophy remains. And to be honest, after using it for two decades I really don't understand what the fuss with private members is all about. It's just some sort of intellectual OCD, if I look at actual real life problems I had to solve the lack of real OOP never got in the way. If anything people trying to force OOP on JS have been more of a pain.
It's some sort of WebGL pixelated particle explosion
What's the performance of this compared to cloud based solutions (e. g. From AWS)?
You could try websites like codecademy or w3schools if you want to learn the basic ‚Äúbuilding block‚Äù aspects of a language (variables, if statements, etc). Programming is all about breaking down a huge task (I.e. to recreate a simple game like guess my number, etc) into smaller, simpler tasks (like generating a random number, getting user input, comparing the numbers, outputting a result) and deciding on the best way to use your ‚Äúbuilding block‚Äù knowledge of the basic structures of the language to do each of those simpler tasks until your project is done. I personally like to learn by just diving in and doing stuff, searching for the answers online whenever I get stuck for how do do something, am getting an error, or just want to understand how a thing works. The internet is definitely your friend.
I don't think it's hateful to call c++ klugy. Objectively, the amount of language features is insane. The standard library is enormous. C++ 98 looks like plain c and C++17 looks like JavaScript. It's also not a preference for "different". It's a preference for coherent language design. It's a preference for not throwing in half baked compromises into the language (permanently).
...and it sucks. It relies on a bizarre encoding scheme, where the symbol # somehow denotes privacy. That is trash. That is unlike anything else in the language. It's an incoherent, half-assed compromise.
This is a valid concern for C, but in javascript I would argue its irrelevant, especially when the right side of the if-statement is a \`return\`
Uff... who cares what you think, if you don't like it go and use another language then :shrugs:
Yeah, I do and I will. I don't really get your perspective. What, you want me to not have an opinion about something I care about? Are you telling me you think # prefixed privates are good? Okay, YOU can thoughtlessly use your tools. That's fine.
There is nothing inherently bad about # prefixed variables, you are making a fuss over nothing IMHO. Which you are obviously free to do, suit yourself
It's an encoding scheme that is unique in JS. No other place does variable naming prefixes carry any meaning. I argue that that is klugy. That that is tacking on language features with a compromise, to support unnecessary features (Private? Clients can see everything and edit the code, who cares). So, no, I'm not making a fuss over nothing. I have a clear criticism. Your dismissively missing the point of what I'm saying.
There is 1 way to do privates member variables but there are many ways to encapsulate functions (e.g. revealing module pattern).
Being unique to JS is not valid criticism. And it's not a prefix, it's going to be it's own token, just like ` I don't find it particularly useful, but I can live with it, I am certainly not going to lose any sleep over it.
The compiled C should *be* machine code, with no JIT compilation needed, and able to make use to a whole raft of optimisations that are unavailable to JIT compilation. There's no way the JS version is realistically faster (let alone *that much* faster) than C unless they're using a toy compiler or they've done something horrible with their algorithm that's defeating all the compiler's optimisation heuristics.
Nah, missed it again. Unique IN JavaScript. I don't give a fuck if JS follows other languages. I DO care that JS is coherent in itself, that it affords the appropriate abstractions and is symbolically sensible.
&gt; No other place does variable naming prefixes carry any meaning. Sure there are. In Python, for example, a double underscore prefix tells the language to do name mangling.
&gt; JS was never made to be an OOP language. OOP stuff was tacked on to a Scheme-derived language Yes JS was made to be an OOP language. When you call it a Scheme-derived language, you‚Äôre ignoring half its ancestry, which included Self-derived prototypes.
Great work, thanks for sharing!
I think you're a little ignorant of the language's history. There's probably more detailed sources out there, but I went with Wikipedia for ease (emphasis added): &gt;In 1995, Netscape Communications recruited Brendan Eich *with the goal of embedding the Scheme programming language into its Netscape Navigator*.[15] Before he could get started, Netscape Communications collaborated with Sun Microsystems to include in Netscape Navigator Sun's more static programming language Java, in order to compete with Microsoft for user adoption of Web technologies and platforms.[16] Netscape Communications then *decided that the scripting language they wanted to create would complement Java and should have a similar* ***syntax**, which excluded adopting other languages such as Perl, Python, TCL, or Scheme. To defend the idea of JavaScript against competing proposals, the company needed a prototype. Eich wrote one in 10 days, in May 1995. So in other words Eich had a Scheme-based language brewing in his head for who knows how long. Then, at the last minute Sun was like "Java is the future, your scripting language should look like Java", so Eich shoe-horned his Scheme-based language into a Java-like syntax ... AND formally wrote up the entire language ... in ten days. Java was not "half [of Javascript's] ancestry"; it was a late addition who's syntax was tacked on in literally ten days.
Its not just information hiding as a way to keep it out of prying eyes, but also about reducing the surface for naming conflicts. If you have a class that inherits from another class that has a "private", undocumented `_name` property, but then in your class you add your own `_name` for your own purposes, you're going to have problems because they end up being the same property. Prior to ES6, there have been ways to [have private data in classes](https://crockford.com/javascript/private.html). And with ES6, additional solutions are available such as using symbols or weakmaps and soon, presumably with ES2020, private fields, which are effectively the same as using weakmaps. TypeScript also supports its own form private variables, though they do not not affect visibility and instead are used only as ways to identify naming conflicts -- which ultimately, is really all you need. The only problem is that you're forced to choose a different name for a variable that probably already took you 3 hours to name in the first place.
Have been using v1 for a while. Great library!
have you tried the C code with O3 optimization level?
&gt; Nah, missed it again. Read more carefully, please. I'm tired of re-clarifying things you are too lazy to read carefully. &gt; &gt; Unique *in* JavaScript. &gt; I don't care if JS follows other languages. I DO care that JS is coherent in itself, that it affords the appropriate abstractions and is symbolically sensible, considering only Javascript's symbols and language ideas.
Hi /u/vertigo_101, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; Java was not "half [of Javascript's] ancestry"; I said "Self", not Java. &gt; There's probably more detailed sources out there, but I went with Wikipedia There is a more detailed source. Here's Brendan Eich's [own words](https://brendaneich.com/2008/04/popularity/): _"I‚Äôm happy that I chose Scheme-ish first-class functions and Self-ish (albeit singular) prototypes as the main ingredients."_
OK. Then don't think of it like a prefix. Think of it like a unary operator (since that's probably exactly what it is). Seen in that light, this is a variable name `x` and `+x` or `!x` or `-x` or `~x` are all unary operators (prefixes) that carry meaning.
I didn't mean to make it sound like Scheme was the *only* source of Javascript. Obviously if Javascript had only copied Scheme (or any one language) it wouldn't be Javascript ... it'd be Scheme. Regardless, the point remains that the Java-like *syntax* of Javascript's OOP was a last minute addition. That makes it deeply flawed to a lot of people because that syntax doesn't match the Java-like OOP they learned. But of course the fact that JS doesn't do OOP the way Java does *does not* make it's OOP "wrong" or anything. You absolutely can do OOP with prototypal inheritance: just look at the Backbone.js framework, which is built around it. But then also look at React, which went from a 100% OOP approach initially to a 100% functional approach recently, and tell me Facebook spent all that money because OOP in JS was so great.
Fair. Good point.
This is amazing! Can you explain how one goes about loading a particular language model? I didn't see it in the docs. Does it load models dynamically?
Going to play with this for sure, I was working on an app that used Cloud Vision OCR which was fun.
I haven't tried anything, because I'm not the OP. ;-)
I think what would have helped with the slides imo would be some before and Afters on the slides they're describing the new speed optimizations so I can understand better HOW these are improvements
&gt; Is there something missing in the questionary? &gt; &gt; Did you pass the interview? Interviews are a two-pass process, they interview you AND you interview them. I've had places in the past which have been interested in hiring me, but they did not pass my test.
Async / Await ARE promises...