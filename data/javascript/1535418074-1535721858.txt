They are right... 
I typically use TS to emit type declarations and type check, then use Babel to transpile. They’re two very different steps in the build pipeline, imo.
&gt; Frankly, I think the fervor for new features in JavaScript, and the desire to use them early, is way out of whack, especially in the online community. This is actually the main reason Babel has deprecated the `stage-X` presets- so many people were using e.g. `stage-1` that when TC39 changed something in a *working draft* it would break production code. It was just too easy. New recommendation is to use `preset-env` and specify what platforms you want to target, and if you want to use unstable language features on top of that, you have to explicitly the relevant plugins. Definitely a good move, I think.
I do have email. While I don't have a `v.isInteger` function implemented ATM (I do have isNumeric) it would be as simple as ``` v.field("age", "Your Age", [ Number, // Convert input to a Number instance of NaN Number.isInteger, // Already returns true or false if input is an integer num =&gt; num &gt; 0 "Please enter a whole, positive number" ]) // Which could be made more reusable via const isInteger = pipe(Number, Number.isInteger); isInteger(44) // =&gt; true isInteger('abc') // =&gt; false isInteger('22') // =&gt; true isInteger(22.43) // =&gt; false isInteger('25.8') // =&gt; false ``` Same of isBoolean ``` const isBoolean = input =&gt; typeof input === "Boolean"; ``` Email is mostly just what's below where EMAIL_REGEX is the regex the html5 email input validator uses: http://www.w3.org/TR/html5/forms.html#valid-e-mail-address ``` const email = input =&gt; EMAIL_REGEX.test(input); ``` Another option is create a generic isType higher order function like so: ``` function isType(expectedType) { return input =&gt; typeof input === expectedType || input instanceof expectedType; } v.field("prefer_dogs", "Do you prefer dogs over cats?", [ isType(Boolean), "Please answer if you prefer dogs over cats. It's really important.", ]); ``` Currency can also be implemented as a higher-order-predicate function from any other existing library or regexp. ``` v.field("price", "Price", [ isCurrency("USD"), ]); // naively implemented but hopefully demonstrates the signature here function isCurrency (currencyType) { return input =&gt; { switch (currencyType) { case 'USD': return input.startsWith("$") &amp;&amp; input.split(",").every(numStr =&gt; isInteger(numStr)) // resuses isInteger from above &amp;&amp; input.split(".").length === 2 &amp;&amp; isInteger(input.split(".")[1]); } }; } ``` So whatever is needed can be added fairly trivially but my goal was to provide a lighter-weight framework upon which people can use predicates (functions that return true or false) from many other pre-existing sources. 
I thought that TS was a full transpiler.
I’m really stoked for async generators! Both async functions and generators are hella useful on their own, but writing driver functions to get async to work properly in generators is kind of a pain.
You should put the [rotation buttons](https://www.google.com/search?tbm=isch&amp;q=rotation+icon) around the cube so users don't have to look back and forth between the cube and the buttons.
Ah, precisely what I'm looking for. Thank you!
Or better yet...just slightly change things.... to make people think they are insane...
Thanks Reddevit! Very much appreciated.
You can emulate mouse movements in puppeteer, but if the aim is to get past reCAPTCHA I don't think it will be enough. It would be quite difficult to program the movement of the mouse in a way that resembles a human, furthermore, it's not the only heuristic reCAPTCHA uses. There is a paper about [breaking the reCAPTCHA system](https://www.blackhat.com/docs/asia-16/materials/asia-16-Sivakorn-Im-Not-a-Human-Breaking-the-Google-reCAPTCHA-wp.pdf), which is very in-depth. There are services out there that you can pay where humans will solve the reCAPTCHA for you.
I would not recommend PhantomJS. It uses a fairly outdated version of webkit, it's no longer being maintained, and it's more difficult than puppeteer.
I think you can get extensions working by using Puppeteer with Chrome (rather than Chromium) and setting headless to false. It means you'll need to have a desktop environment and a screen/virtual screen for the server running it, but I believe it's doable.
closures are right...?
How is that true for python? There's the `self` keyword used in scope of classes and it behaves very similarly to `this`. All items in JavaScript are derived from `Object` and `function` which are derived from each other which is why there's always a value for `this`.
A type-check with TypeScript will still give you consistent results. If you have syntax errors, Babel will provide its own additional errors, but with TypeScript support in your editor, you'll likely catch these ahead of time.
I would think that if you use the `transpileOnly` flag with ts-loader, you'd see fast results as well, but I assume it means no type errors. So I wouldn't bank on Babel for speed before trying that out If you are looking for type-checking in a Webpack build, there's other potential ways of speeding TypeScript up with Webpack. We've already worked on improvements to provide more incremental checks, Webpack 5 is much faster in general, and I've heard good things about fork-ts-checker.
Nice! I look forward to trying Typescript as a plugin.
I agree with you!
This is awesome! I need to start looking into React.
There's no text response from the url you posted. but use https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
Can it compile a sausage egg and cheese sandwich into javascript?
And I'm pointing out that while the save button is easy to find, figuring out where they go when saved is not nearly as easy as just clicking on your history. 
I'm pretty sure I just upgraded to the last version before this lol. 
Building something from scratch is extremely difficult. Honestly the best thing that you can do is practice until you feel comfortable. I recommend Wes Bos’s JavaScript in 30 for quick practicing. It really boosted my confidence. It’s free online 
I had a conversation with the same developer. Lol. “This” is not that hard to understand. Glad you wrote an article that backs up your opinion. 
Any idea if this will make it easier to convert an existing non TS create-react-app, to a TS version? Hoping to avoid ejecting and or migrating code over to a new CRA TS project. Ps - is the typescript fork of CRA maintained by Microsoft, and does this announcement have any affect on that project?
Maybe jokes aren't your thing.
Use TamperMonkey browser addon. It provides Greasemonkey features. See https://www.greasespot.net/ to find out the Greasemonkey specifications and its limitations. Also check /r/greasemonkey and /r/userscripts for script related topics.
Software Engineering Daily. Best in class. 
Assuming a modern browser, use [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).
Same here! I experimented with them in Node.js and it’s so useful there: http://2ality.com/2018/05/child-process-streams.html
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://github.com/facebook/create-react-app/pull/4837) - Previous text "PR " ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
I don't think the need to set up a transpiler can be considered a downside, it benefits compatibility whether you use ES2018 or not. And if you're using a transpiler, then there is no downside to using the latest tools available to you. If the extra step of babel is too much in a professional environment, then I would question the professionalism of the environment. 
Hey all, I'm Logan, one of Babel's maintainers. I just wanted to say thanks for helping make Babel the awesome project that it is. Getting to 7.x has been a tremendous amount of work to get out the door, and having a positive community that is happy with the work that we do goes a long way toward making that east. While it may not seem like a lot from the side of the user side of things, Babel 7.x is positioned to keep Babel around for the long term and is really focused on ironing out all the biggest kinks that were keeping us from iterating more quickly moving forward. Here's to the future of Babel.
I think it's an "anti-joke" bot
Documentation is definitely something we can do better. Hopefully the new website with versioned documentation will start makings a little easier for us to maintain on that front. &amp;#x200B; Out of curiosity, is there specific examples you have in mind where you've run into issues in the past?
You guys are just awesome. Please keep going, we all appreciate what you're doing.
Haven’t read the updated documentation yet. &amp;nbsp; Is TypeScript support built-in now? The last time I read the docs, it wasn’t clearly written how to configure that together with Webpack.
It's not maintained by Microsoft and I don't necessarily think this will have any effect on it, but it depends on the maintainers. For regular CRA you may have to eject though. You'll need to configure babel-loader to pick up ts/tsx files, and modify your `.babelrc`.
I'm not sure about the terms but how come babel is not an 'organization' like webpack who can pay their maintainers ? It is a widely used lib as is webpack and I find it sad that Henry has to create a patreon to be able to do this full time.
I know 2 people called Logan and they're both douches. What makes you different, eh?
One big use case for me would be occasional use of typescript with including it into my current workflow. I can do this with flow by adding `// @flow` to the top of a file ( in addition to the eslint/babel preset &amp; webpack changes). However Flow is still lacking in IDE support and stability compared to typescript. I would really like to be able to use typescript like this in areas that typings help a lot, complex behavior, utility methods etc.
Yeah totally agree with your usage of default exports, I also tend to use them when I want to imply that it's the only thing that "should" be used from the file.
[It does have some money](https://opencollective.com/babel). (Compare [Webpack](https://opencollective.com/webpack).) I guess Webpack is more widely used (e.g. many TypeScript projects also use it), but perhaps just as important is that they're also spending more effort on marketing (blog posts, etc.). Of course, it's also not just a matter of being able to pay maintainers, but also of maintainers wanting to work full-time on that maintenance - I'm not sure what Babel's situation is in that regard.
I'd be interested to know the differences in more detail. Do you know if there's an article anywhere which spells them out? [This](https://babeljs.io/docs/en/next/babel-plugin-transform-typescript.html) says what's not supported but not that anything which is supported behaves differently to a tsc compile
Babel isn't go to help here as it doesn't do type checking. TypeScript has been able to do what you describe for a while now, you can continue to use Babel as a transpiler. [http://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html](http://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html)
What is it?
Probably the best JS community, amazing work.
I just started a new project last week and didn't even realize it was a beta. Great job!
Is using the TypeScript syntax plugin without the transform plugin unsupported? It's working fine for me, but I was curious.
Do people still use Babel? 
Your are right. That was a thing that I was not doing. After finishing some project try to further emprove my knowlege by implementing new features. &amp;#x200B; Right now I managed to get an Internship as a JavaScript developer at a small start-up and I have one month for training and after that they will put me on a small project in the company to get to learn how to work on it . But as I finished the first week I can tell you that It's monstly a bunch of video tutorials and books and after that some assignments that I will have to make. It's a bit weird because I was used to have somebody that will teach you and explain you stuff like in University. I think i have to adapt to this new learning environment so I can become a better developer.
I agree with the points laid out in the article but even with chrome extensions you can't assume your users are on the latest version of chrome. I made this assumption and people using chrome 20+ versions behind the latest still want to use the extension and their operating system doesn't allow them to update chrome. So just use babel like you would with any regular web app.
|`const nums = numObjs.map(obj =&gt; obj.num);` | 7,123 - 84% slower| |`const nums = numObjs.map(**function**(obj) { return obj.num; });` | 7,148 - 84% slower| Yeah. That's not it. I have never heard of arrow functions being any slower, and the above JS Perf results confirm that. Also, one of the for loops uses an arrow function and is no slower.
map() creates another list which you are working on. The bigger the list/array the more memory it consumes the slower it gets. 
All of the other for loops also create a new list.
As TS already transcripts ES6 to ES2015, whats the point on using Babel along TS? Sorry, never used Babel and now Im starting to learn TS, so Im curious.
This update looks phenomenal, especially the ‘builtins’ and the typescript plugin. thank you guys for all your hard work
Js Perf is not a good way to benchmark JS code. The code linked is not doing what you expected. JS is removing the code inside the loop. Here is a good explanation of the issue [https://www.youtube.com/watch?v=65-RbBwZQdU](https://www.youtube.com/watch?v=65-RbBwZQdU)
Array::map or Array::filter create new Array, so obviously it will be slower than iterate with for loop. You mentioned about business logic, yep that is point... If you writing game engine or complicated game, you don't use filter or map in main loop, because you need something faster because you need have high and stable FPS (limit Garbage collector runs). But in business logic, readable and less probability of bugs are more important. &amp;#x200B;
Thought maybe it had to do with how many function scopes you were creating, but that doesn't seem to make much of a difference either: https://jsperf.com/nesting-loops-in-scopes
I tested it without arrow functions and it didn't affect performance. If it were able to compile for loops to native code but not map, wouldn't we expect the custom map to get the same benefit since it is just a light-weight wrapper around a for loop?
Thanks for understanding my point and removing my ban ... sorry I saw all of this conversation yesterday only so enacted right now only As it stands, will refrain from posting it again on any place for now.
``` const nums = new Array(numObjs.length); for (let i = 0; i &lt; numObjs.length; i++) { nums[i] = numObjs[i].num; } ``` ``` const nums = new Array(numObjs.length); for (let i in numObjs) { nums[i] = numObjs[i].num; } ``` ``` const nums = numObjs.map(obj =&gt; obj.num); ``` These all create one list. And `map` certainly does not _n_ lists. 
No, numObjs is a list and map() creates a new one, now you have two lists
Also. One of the for loop tests uses push (it even says _push_ in the test title). It is 2x slower than assigning a value to a fixed-length array. That is why I used that approach in the other tests.
I'd say an even easier solution is to use the Telegram API. Sending yourself a message is just a matter of setting up a bot (from within Telegram), and then hitting their HTTP endpoint (using cURL or whatever). Not only is it free, but you'll get your notifications on desktop as well, if you have the app installed. Furthermore, the bot API is pretty advanced, so if you find that you need 'more' (say, sending messages or commands *back* to the server), you already have the bot set up.
IMO those explanations were correct. Here is the `Array.prototype.map` algorithm in [ECMA](http://www.ecma-international.org/ecma-262/#sec-array.prototype.map). If you're interested in deeper understanding of what is going on try using NodeJS with `--print-bytecode` flag. ``` function test2 () { const array = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; const arr = array.map((e) =&gt; e); return arr; } test2(); ``` &gt; node --print-bytecode test.js &gt; bcode.txt And search for `function: test2` line. You'll get something like this: ``` [generated bytecode for function: test2] Parameter count 1 Frame size 40 289 E&gt; 0x1cc83675d3ca @ 0 : a0 StackCheck 310 S&gt; 0x1cc83675d3cb @ 1 : 77 00 00 25 CreateArrayLiteral [0], [0], #37 0x1cc83675d3cf @ 5 : 26 fb Star r0 362 S&gt; 0x1cc83675d3d1 @ 7 : 28 fb 01 01 LdaNamedProperty r0, [1], [1] 0x1cc83675d3d5 @ 11 : 26 f9 Star r2 0x1cc83675d3d7 @ 13 : 7c 02 03 02 CreateClosure [2], [3], #2 0x1cc83675d3db @ 17 : 26 f7 Star r4 362 E&gt; 0x1cc83675d3dd @ 19 : 57 f9 fb f7 04 CallProperty1 r2, r0, r4, [4] 0x1cc83675d3e2 @ 24 : 26 fa Star r1 390 S&gt; 0x1cc83675d3e4 @ 26 : a4 Return // [generated bytecode for function: array.map] Parameter count 2 Frame size 0 366 E&gt; 0x1cc83675d592 @ 0 : a0 StackCheck 373 S&gt; 0x1cc83675d593 @ 1 : 25 02 Ldar a0 374 S&gt; 0x1cc83675d595 @ 3 : a4 Return ``` 
But in the one where you test the function call, you use the direct assignment method rather than push.
Yes
Map is generally understood to be slower than a for loop. I don't think the browser version is the main culprit here. Although interestingly enough Firefox did run the Custom Map as fast as the for loops. (Native Map was still slow, although 60% slower rather than 80%).
In all three of these cases one _new_ list is created for a total of two lists. There is no difference in the number of lists created for any of these three code snippets and nothing here creates n lists.
Is this that thing made by that 17 year old
Dotfiles are basically config files that are usually found in the home directory. These files are usually preceded by a dot (.) and thus are hidden by default on most Unix based systems. cd into the home directory (`cd ~`) and use `ls -A` to view these. It is common practice among developers to modify their dotfiles as per their needs and thus configure a system to their liking and get blazing fast workflows. [Here's](https://medium.freecodecamp.org/dive-into-dotfiles-part-1-e4eb1003cff6) an introductory article on dotfiles.
Okay. In every single test in the JS Perf link there are the same number of lists created. I don't think the point was relevant. 
 *waifu
probably because people expect some recursivity from the project name instead of providing a link [let's fix that](https://github.com/stimulusjs/stimulus)
This is because software doesn't exist in a vacuum, for-loop has been part of mainstream programming language for decades, so players like compiler and CPU vendor has been optimising it in the background for as long. There is a whole class of optimization for loops that had be developed which are yet to be implemented for map/filter: * Loop unrolling * Loop invariant code motiom * Vectorization/SIMD Just to name a few.
Ah now I know the type of humor this sub likes. 
Sure, but why isn't whoever implements `map` able to build it directly on top of a for-loop and take advantage of the same optimizations? Why is my Custom Map test, which is really just a light-weight wrapper around a for-loop, able to take advantage of those optimizations? I would expect some boiler plate around map to slow it down a bit, but with a 5x speed reduction it seems like it must be doing something fundamentally different. I don't understand what that is or why it has to be so different.
I got a good chuckle out of this. Don't stop being you.
Who's going to write the paper to proof said optimization still works for all use cases (and misuses) in map/filter? Is the closure actually going to fit into SIMD instructions? Is implementing this optimization going to take priority over other stuff Google/Mozilla want to do?
**For Loop (fixed length)** _45,627 - fastest_ const nums = new Array(numObjs.length); for (let i = 0; i &lt; numObjs.length; i++) { nums[i] = numObjs[i].num; } **For Loop (push)** _21,538 - 53% slower_ const nums = []; for (let i = 0; i &lt; numObjs.length; i++) { nums.push(numObjs[i].num); } **For Loop (fixed function)** _44,301 - 3% slower_ const pluckNum = obj =&gt; obj.num; const nums = new Array(numObjs.length); for (let i = 0; i &lt; numObjs.length; i++) { nums[i] = pluckNum(numObjs[i]); } **For Loop (push function)** _21,284 - 53% slower_ const pluckNum = obj =&gt; obj.num; const nums = []; for (let i = 0; i &lt; numObjs.length; i++) { nums.push(pluckNum(numObjs[i])); } What exactly were we supposed to learn from this?
Source available on Github: [https://github.com/vnglst/peter-and-the-wolf](https://github.com/vnglst/peter-and-the-wolf)
Thanks for the source, I'm a beginner and this seems like a fairly simple app to start with 
Sure, go and have look! I still need to do some refactoring, especially in the \`God\` class \`App\`. This now has way to many responsibilities (app state + handling sound etc). I will probably start on the tomorrow, so be sure to keep an eye on it! &amp;#x200B; If you want a really well thought out example (also a game) you could take a look at this official one by Dan Abramov: [https://reactjs.org/tutorial/tutorial.html](https://reactjs.org/tutorial/tutorial.html) &amp;#x200B; It covers all the best practices!
Maybe, your custom map has a callback function as a param which might make it difficult/impossible to compile native because the callback has to go *back* into JS land where the raw for loop example just has a property accessor.
Safari, for instance, sucks at some ES2016,2017,2018 features: &amp;#x200B; [http://kangax.github.io/compat-table/es2016plus/](http://kangax.github.io/compat-table/es2016plus/)
Firefox holds an 11% market share atm. And older companies with older employees still love IE. If you're writing Enterprise software it's something you can really ignore. Not to mention there are experimental features not merged into the production stage that even chrome hasn't implemented. Babel keeps everything standardized so you don't have to worry about which features will or won't break your entire application.
On Firefox the Custom Map function does as well as the for loop. Which is really confusing. Your idea seems plausible for v8 though. The for-loop with a function is able to compile the `pluckNums` function to native code because it is fixed, but the custom map has to be able to run any function, so the pluck callback does not get compiled until run time. Maybe. Sounds reasonable.
Thanks man I appreciate the effort of notification
If this is your only template Angular is overkill for what you are trying to do. It will actually make it more complex. If you are a quick learner you could abstract the logic away in a React Component but I wouldn't bother if I were you and just do this with native Javascript. 
Hey everyone, Kevin from Uppy here. We just added basic React Native support to our open source file uploader. For some reasons why we built a js fileuploader in the first place, check out https://github.com/transloadit/uppy/blob/master/README.md#why-not-just-use-input-typefile :) Happy to answer questions!
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [transloadit/uppy/.../**README.md#why-not-just-use-input-typefile** (master → ab79763)](https://github.com/transloadit/uppy/blob/ab797630023754aafe39e66e429e1471dd7e272e/README.md#why-not-just-use-input-typefile) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e4z5h2a.)
Hey thanks, so would you say that re-rendering the HTML by just Appending/Removing Divs with Jquery would be a lot better?
Obligatory shitpost to make sebmck pissy. :)
map/reduce/filter are not iterators: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols It's only dramatic because you are looking at a micro benchmark, in 99% of real use cases, 5k ops/sec or 14k ops/sec is not going to make a noticeable difference.
&gt; Js Perf is not a good way to benchmark JS code Not entirely true. It's a perfectly fine way if you understand how the V8 compiler optimizes your code and if you account for that (e.g. validating results)
ES6 and ES2015 are the same. Starting with ES6/ES2015 they wanted to move towards yearly releases and names instead of versions so that one release has two accepted names. You may have meant ES5, where there was no 'let', 'const', 'class', etc. One case where you have to use Babel is with React Native, you literally can't do anything without it. Another would probably be handling JS code or tools that only integrate with Babel. Just yesterday me and another guy spent an entire day on Slack re-configuring a project of ours so it could be used by another. The only changes we needed to make were in Babel and Webpack but it took us all day just to get it to run. In general, it's good for a community to have standard tools that work well together. The JS ecosystem has a huge problem with this but Babel-Typescript integration is a small step towards a healthier developer environment.
[Arrow functions are mostly syntactic sugar](https://stackoverflow.com/questions/44030645/are-arrow-functions-faster-more-performant-lighter-than-ordinary-standalone-f/44031830#44031830)
Oh yes I see, in fact it will be running on my PC, so there is no problem at all for this!! Thanks 
Thank you for this interesting document, I knew reCaptcha was a bit tough, but not as much ahaha 
Understood, thanks 
Generally speaking people will have experience in both front and back end development. Depending on what type of job you go for depends on where you should focus. Some agencies hire specifically front or back end developers but I much prefer to work in a smaller environment where you have to do both; it keeps your projects varied and fun. I currently work in Angular / .net core and MSSQL. My day never gets boring as it depends on what projects needs tackling next. Some people on the other hand prefer to be experts in one field and that suits them fine. I find some front end stuff boring, like CSS. I’ve got to a level with CSS where I don’t think I need to progress any further as I can do everything I want to do so it just becomes a chore writing the code. 
Would you mind not posting minified code?
[removed]
Or even without jQuery!
No matter how small, i wouldn't mess around with dom apis. What is the point, it's a terrible was of managing views, it won't scale and it's more work. https://codesandbox.io/s/0048k4xrlw
Hey Logan, just wanted to say congrats and thanks for all that you and all the contributors do!
According to [this video](https://youtu.be/EhpmNyR2Za0?t=17m31s) `for`, `for ... of` and `Array#forEach` should all be equally fast now. Not sure how map, reduce, etc. compare, but I keep hearing that their performance is approaching plain `for` loops. So I'm not sure what's up with those perf test results.
This. You should only use a primitive `for` loop as a last resort. [Off-by-one errors are one of the most common in programming.](https://en.wikipedia.org/wiki/Off-by-one_error) “If a feature is sometimes dangerous, and there is a better option, then always use the better option.” ~ Douglas Crockford `for-of` and `forEach` are better options. 
Sure. I’m not going to stop using `map`over these benchmarks. But clearly there is something going on under the hood and I would like to understand what. 
It probably would be good to have a list. The main one I had in mind was class properties, for example: ``` class Example { prop: string; } console.log("prop" in new Example()); ``` in Typescript will log "false" because it's a no-op when there is no initializer like `= ""` on the property. In Babel, it's identical to `prop: string = undefined` because as soon as you declare a property, it will get initialized with a value, whether you put an initializer or not. TS's behavior follows an older version of the spec, as did Babel 6.x.
Does a book updated for 2017+ count? If so, https://leanpub.com/javascriptallongesix
Yep, passing things through Babel with just syntax plugins is fine. I think there might be some cases that the parser still doesn't handle properly, but on the whole it works.
[Functional-Light JavaScript](https://leanpub.com/fljs)
[The Modern JavaScript Collection](http://shop.oreilly.com/product/9780648331551.do) was published pretty recently, and has garnered good reviews so far. All the books are focused on getting developers familiar with the state of JavaScript as of right now, so I think it's worth. The books are all pretty short (more like in-depth blog posts than full-blown books), but they're reasonably priced and professionally written.
[Refactoring JavaScript](http://shop.oreilly.com/product/0636920053262.do)
https://www.chromestatus.com/feature/5761300827209728 TL;DR: It's behind a flag in Chrome 69, other browsers are unknown
Vanilla
Ok thanks for your alternative viewpoint to [Mitchellangeloo](https://www.reddit.com/user/Mitchellangeloo)'s above. You're right, it could get bigger. Can you please just explain what you mean by "kneading views together with dom api?" 
I highly recommend learning some backend development. You can probably find positions that don't expect any backend experience, but I think in order to progress (as a web dev) you're going to want a decent understanding of the entire stack. I work for a small company on a small team and mostly write small/medium sized SPAs, so I'm often in charge of everything from writing the UI to writing the API to building the database. Nothing frustrates me more than having to stop working and ask/wait for someone to do something for me because I don't know how to do it myself (which is also a great reason to take a shallow dive into graphic design).
You might be surprised to look again. Combining some of the newer APIs with newish JS features like template literals you can actually make a lot of DOM manipulation surprisingly easy in straight JS now. let mahBox = document.getElementById('mah-box'); mahBox.innerHTML = `&lt;div class="link-container"&gt;&lt;a href="${address}"&gt;${linkText}&lt;/a&gt;&lt;/div&gt;`; This will work as expected, where it previously would have taken a bunch of explicit `createElement` shenanigans. I'm not saying don't use jQuery, just keep an open mind about what's possible now, and make sure your knowledge is current. (Note, I wasn't meaning to evade... appending is a bit more code than just straight replacement.)
Googling that now! Thanks for the tip! 
I plan on learning some Angular as well as React with the Bootcamp. But we haven’t touched on, nor have I done any side research on .net. Although I do hear it talked about often, so I might add that to my list of topics to study. Thank you! As far as choosing a side, I think I’ll continue learning both it seems the best way to progress as a developer. Plus I would like to continue working on side projects by myself. 
Why should Stimulus be popular? It doesn't look like it provides anything you couldn't get from a sprinkling of `querySelector`, `querySelectorAll`, and `addEventListener` calls. And in my experience, data-binding only gets difficult once you start dealing with dynamic lists and conditionally rendered content. I've never used Stimulus and only read the README and handbook, so maybe there's something I'm missing. I also work mostly on SPAs, so that might be contributing to my bias.
&gt; why isn't whoever implements map able to build it directly on top Try doing it yourself (i.e. implement custom map). Now implement the version that accounts for sparse arrays. Now one for an array with getters. Now implement a version that doesn't consume extra memory for the new array. Now optimize away the function call. Note that so far we're only talking about map-specific things, nothing related to loop optimization yet. Now write the JIT code to switch to the most appropriate strategy in C++. This small subset of the actual challenges illustrates why "just rewriting it as a for loop" isn't actually as simple to do as it sounds.
Not gonna stop edgelords from looking down on you for not using an array method.
I'm about 12 years into my career, graduated with a CS degree, learned about FE about 6 months into my career. I was full stack for a while, worked at several startups that required everyone to wear multiple hats. Been almost exclusively FE for 4 years now. Had to work for real companies with benefits once I started having kids. Boredom I think is relatively personal. Am I bored with FE, no; am I bored after 3 years of writing almost exclusively React apps, kinda. So I made a list of things I want to learn, Kyle Simpsons keep betting on JavaScript talk that was posted here yesterday was also a good reminder of how things are still constantly changing. &amp;#x200B; Career wise I am wondering what is next. I've gone from jr dev intern to lead FE (recentish) and I'm not sure what the road holds next. I've never had a dev manager that was formerly a FE dev and that makes me a bit concerned. I've considered going back for a masters or even teaching, but I'm god awful at that. &amp;#x200B; Larger employers I would say want to know you can work within a framework, (React, Vue, Angular, etc..) it doesn't really matter which one, just that you are competent to learn. I rarely look at portfolio sites any more. I used to judge almost exclusively off of portfolio sites, digging into your code and examples. But now a days, the cold honest truth is something you wrote 2 years ago is probably not a good example of where you are today, and has probably been re-written or even thrown out entirely by whoever took over after you left. My hunch is if you are going through a recruiter or a friend referral or have a tone of experience, the portfolio is much less important; but if you are cold applying for jobs or new to the job market it may be far more important. Do some coding events, doesn't matter if you win just gives you fodder to add to your site. Have an active github of your own projects, or even contribute to another open source project.
I mean. They are def better most of the time. They just aren’t faster. 
I wrote this up because I think that not enough people are aware of this process, or think of it as being more complex than it is. I personally have a strong preference to go to the original source of information. Becoming familiar with this process and where the information lives will enable you to gather information yourself, instead of reading "what to watch for this year in JS" blogspam posts. 
It goes both ways
Use let if you can. GC happens anyway, and with let, it knows it's out of scope instead of having to guess, like it will with var (because hoisting and whatnot). There's been a bunch of threads about it. This one seems fun. [https://www.reddit.com/r/javascript/comments/8hrr5f/function\_vs\_classes\_let\_vs\_var/](https://www.reddit.com/r/javascript/comments/8hrr5f/function_vs_classes_let_vs_var/)
eloquent javascript 3rd edition. https://eloquentjavascript.net/ 
I’m not sure I understand the downvotes of the disclosure (vs. the post itself, which reflect people’s taste). It is new stand-alone content that is relatively comprehensive and covers the latest JavaScript features.
Aren’t those scripts loaded in an async manner? I’d expect impact on perceived speed of users to be somewhat limited due to that. I’ve recently launched several projects using it and haven’t noticed a big impact on performance. In the end, Id expect performance and team efficiency improvements due to the fact that most all tracking scripts and pixels can be managed in one place.
Hey thanks for your input, much appreciated! Wait, so if JS by itself has these features where you can just spit out HTML with variables on the fly, then at what point would you start looking more seriously into using a framework? Like what would tip you over the edge into framework land?
http://exploringjs.com/es6/
The frontend is a fine place, but there are a lot of younger developers, and the landscape is ever-changing, dominated by trends, and full of hipsters that love to over-complicate things to feel smart. That is the main reason a lot of engineers move to the backend.
There's *plenty* of work in frontend. If that's your passion, focus on it. If you are a self-starter (which it sounds like you are), you will have no trouble getting exposed to backend dev while frontend focused. 
Thanks for answering! I just installed Chrome 69 beta. And will test later. Cheers!
I get bored of back end, it all feels very similar after awhile. Set up some database, create a few REST routes or GraphQL to query data, maybe a data pipeline for analytics, write some perf tests, rinse and repeat. I enjoy building user experiences more because it's always very different and building a front end app that scales well to many development teams contributing simultaneously with enforced quality is a challenge. Front end is easy to start, but very difficult to master.
Yes, GC can cause pauses, and those pauses certainly could cause delays in processing if they get long enough. It's much more likely to be because you allocated a bunch of unnecessary intermediate objects or arrays though, rather than because you used `let`. Also, if millisecond latency spikes are a serious concern, Node may not be the right tool for the job. Node is very good and very fast, but it's single threaded and garbage collected. If you're optimizing for consistent bare-minimum latency, either it's the wrong tool or you're optimizing the wrong thing.
Yea I enjoy some back-end stuff but ultimately front-end is more challenging and interesting to me. With back-end the interesting stuff is architecture and scalability and writing an app that scales horizontally according to the needs. A basic crud api that's gonna run on a single server is pretty straightforward and more monotonous than anything. 
I've been a front-end developer and a full-stack developer, dealing with Java and Node in the back end (on different apps). I actually like front end far more. Writing the same `app.use('/api/getdata', securityFunction, (req, res) =&gt; res.send('neat')` function over and over again is much more boring to me. There's still plenty to do on the back end, but I like the idea of building the front end more. The ever-changing landscape of front end is what really appeals to me; this isn't a job that you can ever say, "Good. Now I know everything." Because you can never know everything. I absolutely love that about front end. Back end though . . . it's been basically the same for 50 years.
I think you might have misread. None of the solutions are recursive. The last one uses a pre-allocated array. And while the push code does seem to indicate using a dynamic array costs you, it is still dramatically faster than map. Finally, do we even know that map uses a dynamic array under the hood? It knows how long the array needs to be so why not pre-allocate it as I did in my custom map?
Er, is that like a guy who programs in javascript for the front end back end and database? I can do that!
Thank you for sharing! The audio issues sound like fun.....
I am a full stack dev and I can tell you that having a solid understanding of both frontend and backend will go a lot further than just specializing in one.
I was 27 when I started a career in front-end development (I'm 37 now, FWIW). For me, it made sense to diversify my efforts and learn both the front-end and the back-end side of things. But I am a one-map shop. I don't like working with a team, and I'm pretty sure most people would tell you that they don't like working with me, either. So take what I have to say with a grain of salt. My resume is all over the place. I went from waiting tables until I was about 24 into a job as a graphic designer, which turned into a web design job, which led to to a career change into front-end development. From there, I started developing web apps on the side, which led to a job in back-end development. Then I took a weird detour into embedded programming, which led to a job developing software for automobile diagnostics hardware, which I left to focus on developing a hardware gadget and the software to power it, which I intend to bring to market some time next year. But I don't care how old you are, you are not obligated to stick with a single career path for the rest of your life, nor are you ever too old to learn something new. Do front-end development for as long as you find it to be fulfilling, then move on if the desire and opportunity arises. It's OK if you're happy doing front-end development work for the rest of your career. It's a constantly moving profession. So long as you stay on top of your skills, you will be marketable, whether you do back-end work or not.
The company works with clients like statefarm on their help windows. So essentially the client would say "ok I need the window to have the state farm logo, to pop up after 30 seconds and to switch to a manual person after three failed automated responses" and then you would be responsible for making that happen. So it would be front end developing working with JavaScript, Node JS, HTML, possibly CSS and it would be a plus to have experience in API. Do you have any experience with those?
I’m so glad you said this, I’m going to give backend some more time but I’m already so bored with it. I obviously have a lot more to learn but it already fells to me that it was just a bunch of connecting databases and controlling routes. Not a lot of room left for creativity, and that’s scary because I’m a creative person. 
Like I said, I’m pretty new to developing in general but especially to the backend portion, and- my god- I am already feeling so much of what you are talking about. After reading a few comments and other articles today, I think I will continue learning to be fullstack and see if backend gets better, but diving more into the front end sounds like so much fun! 
So you are thinking that the for loop which uses a function is getting it inlined?
I live eat and breathe nodejs lol. I host my own webserver, I've got a few sites up. I'm using no-ip so I can get free URLs to point to my webserver. However the webserver itself I programmed it, it's a little raspberry pi 3b+ running nodejs for webserver, mongodb for the database and socket.io for doing data input/output between the client and server side. The front end is a mix of vanilla javascript, the async library (I like the syntax better than promises but they work the same) and jquery because of its abilility to target dom elements. My portfolio is at thedeveloper.ddns.net, I haven't touched it in awhile because I'm busy right now at work using SSH to reach into my little webserver at home and trying to get sellnbuy.ddns.net up and running which I hope to turn into a small business. I've got a full on multi user real time chat that I setup with the socket.io technology as well if you wanted to talk. I use it so my wife and I can chit chat to each other while I'm at work. If you like though we could use it to have a real time chat. I would setup the 3 events so after they fire it would call up a little chat window just like the one I wrote for my portfolio. I really need to update that one though. I've been working with stream technology in anticipation of getting into webRTC. So I should probably pimp up my little chat to handle video/audio streaming and file sending 
Yes, they are loaded async, but I still feel the whole package is bloated. It installs jquery by default, and potentially hooks a massive amounts of event listeners on your dom tree. Surely older phones and people on slow networks will suffer from this.
This is a great book.
R ssr I gut dtygvv
Hahaha, nice :)
This is the right thing to keep in mind. The ecma definition for map has quite a bit of overhead. It's useful, in some cases, but it will slow it down. That's often why libs like lodash can put together an implementation of map which, while not spec compliant, is still useful for the vast majority of cases and can be quite a bit faster. Or at least that was how it was a year ago or so when I was profiling this stuff to see how a class extended array could perform in comparison. 
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
oh shoot forgot about that! Thanks for the heads up
Ignoring the body and replying only to the title, in my opinion no. People tend to start the frontend and give up on frontend problems revolving html/css so they move to the backend. Grant it, there are cases where devs discover the back end and truly just like it more, so they dedicate their time to learning everything about the back end.
&gt; Does that mean we could optimize v8 code by only using staticly defined functions? I'd be shocked if it wasn't able to go beyond staticly defined functions, but certainly for any optimizer the less dynamicism the safer/easier it is to JIT compile. We're getting beyond my JS runtime knowledge though. But super interesting way to start my day, thanks for posting!
I dare say that having a let variable in a function doesn't actually go anywhere near the heap or GC. The JS engine will be doing its best to allocate these kinds of local variables on the stack. When you create something to place in your variable, that may be a different story. If you make an object and "put" it in your variable, then yes, it will need to be GC'ed sometime in the future and may have a lifetime which is separate from the lifetime of your variable. What actually happens at runtime depends on the JS engine and how well it has been able to optimise things away. 
Nice. 
This. http://exploringjs.com/es6.html http://exploringjs.com/es2016-es2017.html http://exploringjs.com/es2018-es2019/index.html
I've been coding for 30 years, backend more than frontend, and I find them both very exciting still. Frontend has more colours. Whatever you want to do, it is not too late in life for you to do it.
Uhm, whats the question? Where is the start.bat?
node bot.js
Source: [https://github.com/crazycat9x/pokedex](https://github.com/crazycat9x/pokedex)
I agree with preferring const.
Really nice, I think a grass like background from the game would be cool too.
What issues did you run into with the large mp3s and service workers. Working on a project right now that might like to cache some larger files for offline use. 
Holy shit. I'm building a site now with a Node back end, and I never would have thought of this. With every request, I validate my jwt via auth0. Do you think that's vulnerable to this kind of attack?
Nice Lighthouse score!
I will take a deeper look tomorrow. At the surface it looks like a nice lookup with way too big buttons for the dex entries.
Yeah to each their own, I know many ppl who really hate front end and would rather work on services all day. You need both types of ppl to build a good team, but I much prefer front end. Not really the finite CSS stuff, that sucks tbh, but building whole front end applications is enjoyable to me.
I just decrease the poke ball size a little bit, thanks for the feedback :)
For anyone wondering, yolo doesn't stand for "you only live once", it's a real-time object detection approach called "you only look once"
You may not be familiar with online development forums, but it's considered incredibly rude to post your problem with no context, then dump your source code and expect people to just sort through it for you. Think of the reader
Looks like simulacra.js except with a really confusing API. I'm surprised it has over 6k stars on Github tbh
oh, sorry about that. I had no idea it is considered rude to do this
Those functions you mentioned imply new objects creation. Fastest code has a fixed object with fixed sized which is mutating on every loop. Each new object creation or even dynamic array like second example is putting new memory slots ( remember, each one of 8 ). So, declarative code also called functional programming tends to be slower than imperative code due to mostly that reason. Probably in missing something more which I do not know. However, that differences are decreasing in node. Nodejs team are improving that gap. code is written by humans for humans. We should bear that in mind. There are lots of articles running that for node 0.10.X Hope I helped you all
Using findIndex is faster, map is an unnecessary step that allocates memory - if your dataset we're large it would be much slower.
Exactly. Thanks for clarification :)
Visual Code
Visual Studio Code... free and available on macOS
Any chance you could use an Opus file instead?
Couldn't stop reading all of the amazing work in this article. Great job everyone!
I love it! I’m thinking about porting your app to an OBF model for my react-obf component, maybe I’ll use it in the styleguide as an example!
Also why do you have ‘soundFx’ and also ‘howler’, why not just howler?
Fun and lightweight IDE. Recommended! Link: https://code.visualstudio.com
Hey everyone, Check my real-time visualization charting library! Demo: https://shzlw.github.io/zeu/examples/my-command-center.html Repo: https://github.com/shzlw/zeu
I heard from another front-end developer that even angular people started to use webpack instead of their own thing. So that makes it definitely worth checking.
waht are you talking about?
yeah for someone just getting into the industry this is pretty hard. The technology is changing rapidly. I hear grunt and gulp are still great but webpack is the best to learn to land a job. But then these udacity courses are great, but are using grunt. Well I know webpack is different from grunt and gulp, but now with webpack 3, I heard webpack can do what grunt and gulp do... So now I'm just pretty lost lol. 
Test it out, even if the only thing available to you is the simulated cpu and network throttling in dev tools. Also check lighthouse scores and see if there are any major issues 
Again, depends what you need it for. Because I don't have telegram, it's honestly faster to setup the email stuff :P Last time I used this was when I wanted to be notified of my bot posting on a subreddit so I could check out the post.
I think it was already mentioned, but there are a lot of places to go from frontend dev besides just backend dev... Personally I'm much more drawn to UX and design than backend concerns. There's also frontend architecture, deployment processes, frontend devops, and mentoring. They all require additional skills beyond the traditional scope of frontend development and they expand your utility as an engineer. 
For someone who's been in the industry for \~10 years, it's not much easier. The tooling changes at an alarming rate, trying to stay on top of all of it is a losing battle.
It can be but, I have been creating generative designs with React and only wanted a React based component to extract colors from an image to create identical color schemes for loading designs. Take a look at this - https://generative-design.surge.sh
When you say gc is about values you mean "a" points to something which is stored in the heap right?, So how are literals managed in JS?
It’s garbage collected. The JS runtime is single threaded, that does *not* mean that the GC is. Vars and lets are garbage collected in effectively the same way. You really shouldn’t be bothered by this stuff. 99.9999% of the time you’re gonna be IO bound and not GC bound. If you’re truly doing something with JavaScript where you’re GC bound you’re in a very rare minority. 
Back end generally will get you more money. Full stack more yet.
Silly noob question but what can JavaScript do? I can program decently on arduino. How hard would this be to learn?
Map, filter and reduce functions clone the entire array at each iteration. This behavior comes from functional programming and the principle of data immutability that simplifies a lot the management of interferences in concurrency. 
Just to add on this, Grunt uses temp files which is slow. Gulp handles everything in-memory which means it is a lot faster. If you’re going down the Gulp route, use 4.0 not 3.9.1 - Gulp 4.0 has different configuration, saves you having to modify your config when Gulp finally releases v4. These days the masses tend to gravitate towards Webpack. Webpack is great but Rollup is superior. 
TL;DR: Don't trust user data. You can skip the article and thank me later.
Despite what functional afficionados might tell you, making the computer do less work is faster and better :-) Don't map and use callbacks unless you need to.
As someone working constantly with the Shopify platform which fails to support SPA theme development, Stimulus is a logical choice if you’re running Turbolinks, however if you’re not using Turbolinks then there is no point in adopting this into your builds imo. Rather you just event delegate and use ES6 classes to build your components. Turbolinks in itself is a shit-show to engineer and my experience with stimulus has been much the same. However with the tech world now moving towards SPAs becoming stock standard, Turboshit and Shitulus are really a good solution to achieve PWA like experience for users rendering HTML the old fashioned way, I mean we’ve got Shopify stores and Turbolinks has been good to us but only because pjax is dependent on jQuery and the GitHub team won’t maintain it anymore. Getting maintainers from Turbolinks or Stimulus to listen to anyone besides their core team is near impossible. Plus, they write their code in coffee and that was cool maybe 3 years ago, but not nowadays. 
I was curious too. Looks like he discusses it in these comments: https://github.com/vnglst/peter-and-the-wolf/blob/master/webpack/webpack.prod.js#L46 Usually, when I hear of issues with audio files being cached in a service worker my head goes to thinking it's a problem with how service workers handle range requests, as mentioned here: https://stackoverflow.com/a/37614302/2510393 But based on his description I'm not sure if it matches with his symptoms exactly, but it's a possibility. It sounds like he had other concerns that dictated how he decided to solve the problem anyway.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [vnglst/peter-and-the-wolf/.../**webpack.prod.js#L46** (master → d67031a)](https://github.com/vnglst/peter-and-the-wolf/blob/d67031ac606eb42a653739c33541ff3ff0ac33b9/webpack/webpack.prod.js#L46) ---- 
For me learning Gulp was one of the best time investments I’ve ever made! For the purpose of building apps and appealing to more employers sooner Webpack may be better. Gulp introduced me to streams which is an incredibly versatile, powerful, and expressive means of modeling problems from tooling (Gulp) to reactive state (MobX or RxJS). It may be a bigger time investment but with effort you can come out with a stronger engineering sense and appeal on a more knowledgeable level to employees over “I know how to configure Webpack”. Which may likely be surpassed by another toolset in the near future.
Am I missing something? I think what you're asking is how to access a value in a map when an array is they key. I think the part you're missing is that arrays are objects and thus two arrays with the same values are not the same object/instance const arr = [1, 2]; const map = new Map(); map.set(arr, "val"); map.get(arr); // "val" map.get([1, 2]); // undefined
oh wow, that solves my problem. yeah, i was missing that, thanks
This is really great. Listened to the whole thing. Thanks. 
Great :) Cheers
Even if you don't trust user data, it's important to know how to sanitize it before displaying it. In the case of CSS-in-JS injection attacks, you could remove all `&lt;` and `&gt;` characters and still be vulnerable. IMO, the best bet is really to just avoid interpolation with CSS-in-JS at all. The problem is when 3rd-party libraries make you vulnerable without you even realizing.
They all suck, but webpack has (somehow?) become the industry standard. I still use gulp on personal projects though.
I would like to know the reasoning behind having arrays as keys. Can you enlighten me?
You have a html file, it contains a bunch of nodes, you fish out some container with ids or tags, then append your own nodes that are mashed together in code, when something should trigger an update you have to remove old nodes again and remember all the places where updates should happen, usually you update plain everything because it gets even more complex if you want to update performantly (as in: only the parts that should be updated). State is generally kept inside the dom as class name "toggled, loggedIn, ..." and so on, the complexity of this just increases as you throw one implicit wire over another.
Javascript can do a lot. It was originally the browsers language but it can now be used outside browsers thanks to node.js (and the v8 engine it's built upon). If you want to program arduino, It is possible to do so in js with johnny-five but that would require a pc running node to be connected to your arduino. I think it's not much more complicated to learn C for arduino... Unless you want to create a webinterface that can remotely control a system automate with an arduino (in which case Johnny five will be great). Good luck and good fun with your project. 
I'm curious. Assuming a site uses SSL, how would a malicious actor be able to inject props into a user's page?
FindIndex won't work on IE11
Same way it used to work in SQL injection attacks. If you set your name, address, or some other data to something like this: ``` James, Tokyo";} html:not(&amp;) {background-color: blue;} .test{ ``` And then that data is added into the stylesheet as a "content:" prop by something like this popular [`&lt;Tooltip&gt;` component](https://github.com/jxnblk/rebass/blob/master/src/Tooltip.js#L14), then you're pwned. Even if the entire app is static and just pulls data from firebase. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jxnblk/rebass/.../**Tooltip.js#L14** (master → 2d0ebd3)](https://github.com/jxnblk/rebass/blob/2d0ebd34ad865d35deb5b57b08707fadf851c3f1/src/Tooltip.js#L14) ---- 
I love it! Im still recently new to web dev. The site is completely clean and the animations are amazing. Well done! 
One of the options is to separate drawing from tracking the mouse position. You will save a given amount of mouse positions and draw a line between them. You’ll never have a gap because the lines will always cover them. You can find more information in this incredible detailed page http://perfectionkills.com/exploring-canvas-drawing-techniques/
Why in the hell would you set and array or an object as a key?!?!? &amp;#x200B; If you think you need array as a key then you are doing something wrong
It's really cool. Great job. your idea is impressive enough. Can you upgrade this idea by replacing buttons with only mouse control and rotating the cube in 360 degrees ? 
Quality site, and from the looks of it quality product as well. Great stuff! GSAP has always been one of those things I've known about but never really paid any attention to. That might need to change.
Still new to JS didn't know you could check it that way, now excited to put it to test, il try it! Ta 
I'm not sure I entirely understand what you mean is unsafe Using arrays as keys? As you said, using an array as a key is probably a code smell, but sometimes it legitimately can be correct to use an object reference as a key. I can't comment on the legitimacy of what /u/mlops214 wants to comment without knowing more. If you mean that it's bad that you can use the array to set/get/clear values in the map despite them both being const, then I agree. const just means the reference won't change, not that you can't use the value or instance methods
&gt; If you’re going down the Gulp route, use 4.0 Gulp 4 introduces `.parallel()` and `.series()` which makes controlling when certain tasks run SO MUCH EASIER. [Read more on this topic over here.](https://fettblog.eu/gulp-4-parallel-and-series/)
I really appreciate it! 
Honestly this is a _very_ solid editor. Kudos to Microsoft for providing something this good to the community for free.
I didn't say you can't use the map functions I mean that the key is a reference not a value and imo that's bad practice, cuz if you lose that reference i.e. you delete the object/array that value becomes inaccessible... There might be some strange use cases where you want to do this I don't know, but this is JavaScript so you can virtually do anything you want
Fucking awesome dude, works nicely and the UI is incredible!!!. Good for you man!.
Be sure to read their license. That's the main reason people ignore GSAP. It will bite you in the ass, if you are not careful. 
Man that is some clean work. The standard is upto the level of the biggies. Kudos mate. 
Also found it to lag a bit on mobile about halfway down the page 
@BrutalTheory. I agree with your statement. Yes, 90% people in Software industry maintain code rather than developing one. &amp;#x200B;
This site is 🔥🔥🔥! I'd like to know more about who you guys are, your background and expertise. I'll give your web so a go today at work as we use Slack. Would love to see more Medium posts added as well. All the best DF
I've 3 different JS Video series tutorials, let me know if you need it. I will share the google drive link.
That's great! Keep me up to date on this (via PM). I'd love to see that and maybe help out. I'm also still in the process of cleaning up + refactoring the code. This is just the initial working prototype and the code still is kinda messy.
That's actually a good idea. I didn't look into this yet, but I want to optimize it as much as possible. I did notice that the opus format is not supported by Safari: https://caniuse.com/#search=opus But howler offers a nice fallback functionality for that!
Thanks, still working on that 100% score ;-)
Caching larger files itself doesn't seem to be an issue (even though I did notice a lag in the iOS Safari app when downloading was in progress) but caching audio/video is (see my comment below). 
Staying on top is definitely difficult. For example: We were debating about using angular2 or angularJS at the time for a new project. At that time angular2 was released just couple months ago, there was lack of course material and a new learning curve, so we decided to go with angularJS for the sake of the project timeline. By the time we finished the project, angular 4was released..
The search feature, anchor and filter would require the whole data-set to be pulled from PokeApi and cached. Which is probably what I should do in the first place, instead of requesting for it dynamically. So I'll prob do that now :) As for the evolution tree, maybe I'll make the icon shake every now n then
Nice looking little app for kids! I did somehow manage to get two audio streams playing at once, I think it was because I abused the fast forward button and before it loaded I switched to another option. I also found that the progress bar didn't reset once I clicked a new option. Anyway, great little learning piece! Hope your kids love it.
Thanks for the reply! So the malicious user can store a CSS string in, let's say, the 'first name' field in the database. Assuming this DB field can be shared with other users then those users will execute the malicious CSS if they view a component that grabs the malicious 'first name' ?
Yep, exactly!
Doing frontend work for 10+ years. Still love it. There's huge demand for good frontenders.
Great website but scrolling is really laggy.
Cool! Stay tuned!
Ah okay, that would explain the animation stutters on edge as the data is pulled from an external Api. I would also recommend an hover effect in addition to the shaky effect so the User will be able to discover that this element isn't just only animated but would also react to the mouse and is clickable.
mmmm, that is definitely not intentional. I too hate scroll jacking, the only scroll event should be the 'snap' to the demo just under the hero :/ Perhaps it is something to do with the parallax effect, I implemented it as per: [https://developers.google.com/web/updates/2016/12/performant-parallaxing](https://developers.google.com/web/updates/2016/12/performant-parallaxing). I'll certainly look into this, I agree that is not good UX but it is not intentional! I just don't have an iPhone to test with. Thanks for the feedback!
Thanks so much! Yeah I'm the same, I actually used AnimeJS on another site I did (r/https://layers.envato.com) and, for whatever reason, completely disregarded GSAP. I found it really simple and intuitive, the only thing I didn't really like is that the [ease functions](https://greensock.com/ease-visualizer) are each their own JS class, which is really only an inconvenience as you have to explicitly import them. The flip side to that is that you can import just the ones you want and make use of Webpack tree shaking 👌 Thanks for the kind words 😊
oooo, care to provide a TL;DR ? 😉
Thank you 😊
ahah, I appreciate that! Thank you 🙏🏻 🙏🏻 
Thank you, what browser are you using? I'll be doing some work to fix the scroll issues as per the top comment
It is good but not for complete beginners. People should have basic knowledge to go with the flow of [https://javascript30.com/](https://javascript30.com/)
You can try using `-webkit-overflow-scrolling: touch;` on the scrolling container. That should kick iOS into scrolling properly again. Let me know if that works out!
Ooooo, amazing! I'll try this now
This book looks good to me. Please add some few complete projects at the end of the book. 
oh pheww, thanks 
You're missing the ending paren `)` to your forEach call.
You are missing a closing parenthesis on line 7. this.processSceneData(mdData).forEach((frame, index) =&gt; { if (index &gt;= 2225) { this.mdData.push([]); } else { this.mdData.push(frame) } }) ^ Here! 
Very sneaky! Thanks for sharing!
&gt; cuz if you lose that reference i.e. you delete the object/array that value becomes inaccessible You can still get to it through the Map via iteration or something like keys().
This bugs out a lot for me on firefox on mac. getting a console error: [Show/hide message details.] ReferenceError: webpackJsonp is not defined[Learn More] Don't know if that is related. But in any case the animation jumps start to end and back and forth. Worth looking into. 
Weird, I don't think that console error is related, but ill look into firefox. What version are you on?
Great work. We use greensock on some games at the company and it's good to know that it could be useful on vue projects.
GSAP looks great... but is there a free version? 
Chrome 68
Vue ? Meh
Hey man this is awesome, I'd love to do animations like this one day. &amp;#x200B; I have been working as front-end developer for one year now, and seeing sites like this makes me very excited. &amp;#x200B; After inspecting the code one thing that I can't wrap my head around is the background, I see you have different layers with different images, and gradients. Can you go into more detail on how you have achieved this effect? &amp;#x200B; Thanks!
This is thw worst website for learning. W3S is for people who already know the language but want to know the syntax.
Of course! Just added vue-numeral-filter - [http://www.vuetoolbox.com/projects/vue-numeral-filter](http://www.vuetoolbox.com/projects/vue-numeral-filter) 👌
Just pushed this update live! It works! Thanks so much for this tip, didn't know this was a thing!
I just pushed an update with [ProjectVII](https://www.reddit.com/user/ProjectVII)'s suggestion. This should be fixed now! Thanks for calling it out
Hey, yeah I'm pretty sure it is free! [https://greensock.com/licensing](https://greensock.com/licensing) There is a business license, which you may be getting confused with
The first version is what is known as immutable, and your version is mutable. Imagine this: const a = new MutableVector(1,1) const b = new MutableVector(2,2) a.plus(b) // Now a is (3,3) as opposed to const a = new ImmutableVector(1,1) const b = new ImmutableVector(2,2) const c = a.plus(b) // a is still (1,1) For small code this may be managable, but once the project gets large, immutability can save you a lot of headaches huntimg down bugs caused by some linear algebra functions somehow mutating your vectors. But immutability does come with some costs. For instance, if the data stucture is large, having to clone it every operation may have significant time and memory overhead. At the end of the day, there is no right and wrong about mutability, understand the pro and cons and pick the suitable thing.
Well u sure know a lot better than I am, idk why I never notice all those little things :p
Awesome thanks :D
[Getting a real weird animation issue...](https://gfycat.com/MadImpishArmednylonshrimp) &amp;#x200B; Firefox 61.0.2 (64-bit), Windows 10
Nice! Yep I found it very useful. What games have you made with it?
Looks great in chrome mobile, good job with the animations. That said, the animations in Firefox mobile render the site nearly unusable. 
Thank you! Yeah it was actually a bit of a pain to get it working on mobile, especially the demo flow cause most of the screens needed a different layout, but i'm glad you like it!
I would recommend to pre-order the new Refactoring by Martin Fowler. The previous edition has been the de facto bible on refactoring and the new edition is entirely focused on Javascript. I believe it's coming in October. https://martinfowler.com/articles/201803-refactoring-2nd-ed.html
Very nice website ! It’s super on iPhone 8 ! Well done :) Do you have any examples of tree-shaking configuration with webpack and animejs ? I use a lot of times animejs with vue, but I should definitely start to check how to use GSAP
I like Matts example, it shows some cool stuff you can do now with ES6 and transpile them with a tool like [https://babeljs.io/](https://babeljs.io/) &amp;#x200B; Also this is beyond the scope of your question. And you should ask yourself if the purpose of your app or script you are writing needs something like Angular to abstract DOM manipulations away and just focus on the your business logic. If you are eager to dive deeper into the wild world of Javascript @drcmda is right that you can learn React in under an hour to create something you are trying to do now in native Javascript. &amp;#x200B; If you want to see the differences for yourself try and create [http://todomvc.com/examples/react/#/](http://todomvc.com/examples/react/#/) in vanilla javascript and then try and build the same with a framework. 
Just when you think something is safe from the toxic effects of American media and politics, here comes some moral self-licensing to diminish the foundations of another long-standing institution.
With [Bracket Pair Colorizer](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer) extension.
It's called semver. [Angular releases](https://angular.io/guide/releases) are on semver. Angular 1 to 2 was a completely different framework. Anything 2+ is the same framework.
This also means TypeScript integration for Lerna [just got cancelled](https://github.com/Microsoft/TypeScript/issues/25376#issuecomment-416795555)... And [here's](https://github.com/LernaOpenSource/LernaOpenSource) the first competing fork.
Thanks for the detailed response, appreciate it. I will have a play around and see what I come up with. I'll keep you updated. Keep up the great work!
It isn't fixed. Scrolling is still weird for me.
Are they also banning contributers who use Windows computers? Or what about ones who work for Microsoft (Sean Larkin from webpack comes to mind)? This seems like a really dumb idea that wasn't really thought through
Hey thanks for the explanation, really appreciate it! To just summarize really simply, I think what you're saying is that it's better to keep track of State *not* based on HTML classes and ID's being within the DOM, but instead based on "components" within JS itself, which is where a framework comes into play. &amp;#x200B; Cool thanks, I will look into React for this one. Looks like you just need a couple Script tags to get started.
Hi /u/bigjoebegs, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/BeneficialSweet, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Thanks for your understanding.
Hi /u/redditorbeginner, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
I support their intent, but I'm not sure how I feel about mixing politics and software licensing like this. I do think this is how your shit gets forked pre-license change and you fade into obscurity though.
Yup, works much better now!
I use lerna in a couple of projects and this is quite stupid. Politics in code is **always** wrong no matter what, let it be for SJW trying to enforce their thoughts or this... Does the guy know that those companies have offices and lot of employees also outside US? It's at the same level of those hilarious guys who went paranoid about Github to Microsoft and moved to Gitlab, losing a mountain of features "just because"
looks amazing, but I would have just given up and put a video there haha
It's bugging out for me as well FF 61.0.2, I see the error mentioned 7 times and \`Error: Smallchat initialized without required config properties.\` Looks great in chrome tho.
Just use it, it's yet another "protest" that will end up on them restoring the license OR being replaced (anyway it's easy to adopt or replace) ... remember fb/React changing license? it's that but in a super smaller scale
The people in power have no qualms about mixing politics into everything under the sun. That's why they're in power, and it's how they stay in power.
Using an os from ms, or being employed by them does not make you a ”subsidiary thereof”.
As other commenters have said, you can't directly do this. An indirect approach would be to construct a string key from your values (could be as simple as `key =JSON.stringify(array)`). If you go that approach, just make sure that the values are either ordered defined by the construction of your array or in some deterministic order if otherwise.
I was going through your Django React tutorial when I saw this post and I thought to myself "I have heard this name before" :) Thanks for the material btw!
Hmm, Lerna came up in a discussion the other day, but now I'm not so sure. Does the Amazon ban prevent us from running it on an EC2 instance?
Allright thanks! Will do, I'll look into React, based on what yourself and drcmda are saying, that seems like the way to go.
Politicians need to know their own limitations. https://github.com/lerna/lerna/issues/1621
Anyone who agrees with this doesn't see the bigger implications and this is a terrible road to go down. This type of political grandstanding has no use in opensource. Even if you agree with their sentiment, imagine if the shoe was on the other foot. Would you like software that revokes license for anyone who don't support ICE? No, of course not. This can go tit-for-tat and it's immature. Just focus on software people.
I'm getting similar issues on Firefox 62.0 (64-bits) Windows 7. [screenshot](https://i.imgur.com/JKbgGml.jpg) I guess there's some repaint issue, because the affected areas change with the animation and when scrolling.
GSAP is the bomb. I'm a long-time proponent of GSAP. I use it in all of my games and I've even put them on Steam (not saying much these days, but still).
&gt; Would you care elaborating why SPA is not a good choice for Shopify? I think you misunderstood. Shopify does not support SPA theme development which I find absurd in 2018. The entire liquid rendering is just slow, bloated and old. The only way to render a SPA theme is hooking into a shops API but this can be tedious. The fact they don't support SPA theme development is a real ball breaker because this means limitations on so many fronts. We use Mithril.js to handle our Ajax-Cart implementation which is the only API implementation in Shopify themes that would require you to use a SPA framework but everything else is liquid snippets and liquid rendering, I mean that great if you're a junior developer who thinks jQuery is cool (which it's definitely not). Shopify is now stuck with an almost legacy approach of doing things because it's build on Rails. &gt; if it's not with Stimulus, then jQuery, or anything else that will eventually be the same. What is the other sane alternative for a hydrated MPA? The idea and approach we take is pure Vanilla in conjunction with Turbolinks and Mithril. You can engineer a fairly good PWA if you know how to architect the application correct. For example, we use an internal routing system based on data from a Turbolinks `load` event. This means that each route or page the user is browsing different components initialise. This idea was somewhat inspired by the Mithril.js router system and with this approach we can use components based on specific view. The advancements in JavaScript nowadays using jQuery is just silly, so instead would have somewhat unified Mithril.js and Turbolinks together, the end result is a hybrid application, some sections are rendered purely with JavaScript, other use ES6 components with querySelectors that are fed through the data from turbolinks events. &gt; The Rails devs are a bit stuck in the golden days of Rails. This will be the demise of Rails. I cannot count how many Rails devs have moved onto Elixir on Phoenix because they are sick of being subject to this "Rails-way" type of development. I for one never used rails but am an avid user of Elixir.
You might want to check this out: https://greensock.com/why-license - it explains the "why" behind the license. I think sometimes people get the wrong idea initially. I'd guess that less than 5% of GSAP users ever pay a dime. The vast majority use it for free. Plus the whole thing is built around the honor system. 
For those who still want to use/support Lerna, there's a vanilla MIT fork here: https://github.com/LernaOpenSource/LernaOpenSource
You weren't kidding: https://github.com/palantir/tslint/issues/4132
Yeah!
What is ice?
Interesting thanks for sharing. Not something I had considered when comparing CSS vs CSS-in-JS
But you are the one complaining about what amounts to a basic release. Semver is pretty popular in the industry these days. What you should learn from that is version numbers are mostly meaningless. Not that just because ng4 was released means that angular is moving too fast to stay on top of (or any other product on semver, the point isn't meant to be angular specific).
Immutability vs mutating an object
As pointed out already, "You Don't Know JS" is simply best. If you can master everything in there, you are in a really good place.
Big ups for direct action. Abolish ICE!
&gt; Politics in code is always wrong no matter what It astounds me how many people can say this with a straight face.
I agree with someone just using an OS they licensed from Microsoft, but I am pretty sure that the license does not allow you to use lerna if you are employeed by Microsoft.
All software is inherently political. Complacency is a decision as much as any other.
Very interesting study
Thanks :3 
Mh pressing ctrl+a in a key press event would register as 'a' with modifier ctrl: true. Or am I mistaken? 
This a million times. 
Yeah kids are dying and communities are being uprooted. Hard to focus when the world is burning.
Political post in /r/javascript. Thanks Trump. Entirely their prerogative. If a company can afford to take a stand on concentration camps, good for them. They are on the right side of history.
&gt; Just use it That's not really an option if there's even a *chance* you could be in conflict with the new license. Plus a project where 1-2 maintainers can (and apparently do) make sweeping license changes with no notice or technical/business reason is *not* something I would want to depend on. Even if they revert the license now Lerna is already off the table for anything remotely business-critical. &gt;remember fb/React changing license That was completely different. Apache noticed that the license React et al. were *already using* (for 3 years) could potentially cause business conflicts, and FB eventually decided to re-license to MIT as a result.
only if you work at amazon (ianal)
Please address the argument I just laid out instead of trying to go for people's emotions.
Protecting your creation as you see fit is not harassment. 
It was only an example.
The point is clearly to put pressure on big companies to cut ties with the American Gestapo. It wouldn't make any sense to ban contributers who use Windows. As to it being dumb, I strongly disagree. If Lerna is the only project that does this, it probably won't matter much, but if others follow suit, they could actually make a difference in the world. ICE is disgusting and its staff are sadistic chuds. Protests like this may not be important on a micro level, but on a macro level they can make a real difference. 
I am very impressed and pleased with the actions of Jamie. Abolish ICE.
No, you guys are bringing politics into programming. Don't pass the buck here, they're completely separate things. Doing this is inviting politics when it was no ones concern before. Do whatever activism you want in your own free time, no one is stopping you.
I like how the Microsoft team handled that.
USA's Immigrations department. There's a bunch of bitching about how the department is supposedly separating families when detained because Trump. But it's a policy begun during the Obama years, so now there's a shitload of virtue signaling and "Abolish ICE" bullshit going on. Fun times. 
Are conservatives for 100% free market with absolutely no limitations? No. You realize there's liberals who agree with ICE's actions too, right? This is just a poor thought out argument.
The post is political in nature and I responded with a opinion about Lernas ability to decide its own politics. Who said systematic genocide? They are concentration camps, and kids are dying and are being abused in them. Take your outrage somewhere else.
Is this somewhere on github? Would like to study your source :).
Kids have died from illegal immigrants too, so I'm not sure your point here. It's a horrible issue going on and you're introducing it into programming willingly. What you just outlined that software is emotion, you realize that IBM did a great deal for computers and they helped the nazi's, right? Not only that, a lot of major breakthroughs in science are from horrible research that no one would condone on unwilling participants. So where is your argument going? That we shouldn't use these things?
Every sentence in your comment is wrong. &gt; No, you guys are bringing politics into programming. Politics was always in programming. Every larger piece of software ever created has political consequences, every license used has political consequences, every dollar paid has political consequences. &gt; Don't pass the buck here, they're completely separate things. Refer to the above. &gt; Doing this is inviting politics when it was no ones concern before. Refer to the above. &gt; Do whatever activism you want in your own free time, no one is stopping you. The project is owned by the Lerna maintainers, they are doing this on their free time, so what is your point? &gt; And concentration camps, really? Yes, that's what the ICE camps are. [Internment is the imprisonment of people, commonly in large groups, without charges or intent to file charges, and thus no trial.](https://en.wikipedia.org/wiki/Concentration_camp) &gt; Systemic genocide? Never mentioned. Your idea of what constitutes a concentration camp is flawed. &gt; Don't you think that's offensive to people who are Jewish? Bruh.
Any demo url?
The only thing this will do is further radicalize people on both sides. If that's your goal, congratulations. Do you really think Microsoft, Amazon, etc. are going to bow down to this? They all literally allow NSA to tap into their data. No one is stopping your political beliefs, just don't introduce it here. The same way others don't.
I hope the project does implode from this. This guy is a piece of garbage and should excuse himself from contributing to open source projects in the future.
I understand, and I'm glad that you explained it to me.
Your name has "fag" in it. Do I really need to say more here? You're either a troll or so disconnected with reality that even if you were a gay man you realize it's self defeating for any debate to call a straight man a "fag". (Who I assume you're talking about 4Chan creator Moot)
or maybe it would simply say "I dont care about your circlejerk, I need to get work done, I can fork the work and move on with it"?
Funny title. Node.js comes with a CLI. You don't need OpenCV and NN models to make one!
Maybe... Expose a bool, switch it t/f then check for that in your async routines. May have to declare it differently since you're doing async coding. I'm no js deep level guru sorry, i could be wrong. 
Aight you got me my name sucks. Care to respond to any of my points anywee?
Kids have also died from white heterosexual males with much more frequent occurrence. If you want to use anecdotal emotions we can take that route too.
Opening a bunch of issues on another company's repos and calling them racists is harassment.
The only one that's angry is you, friend.
No worries dude - as someone who works in Incident Management for a job, having only a description of the issue makes it *really* fun to try and diagnose. Screenshots + Videos are life savers haha
It isn't a binary issue
No but harassing people is harassment.
How did that strawman feel in your head?
I 100% agree. Doing this stuff though will take it on that road though and bolster opinions on both sides. That’s incredibly dangerous. That’s why it’s best to avoid it completely as it has no place in programming.
I wonder what is considered collaboration here. I have no problem with this as an expression of free speech, but I do wonder about unintended harm, especially if ICE is only a small part of a contract and pulling out of the contract could harm others. This is just idle speculation, though as I am unlikely to actually look it up. 
As questionable as the ICE practice is and against whom any reasonable human being would resist, this is certainly the wrong move. Adding politics to the open source world is shit 
Do you even know what Gestapo means?
/close fix: change fetch('/getnums') to return fetch('/getnums')
Really, guys? He's supposed to keep his mouth shut and give his volunteer work to corporations that support separating children from their parents? Doing what's right isn't always easy. It definitely isn't good for the open source community and I doubt it's good for the LERNA project. I still applaud them for standing on their morals. I'd ask that you entertain the idea that he's not a piece of shit for preventing his volunteer work from being used for evil. If you really can't get over it, then go build something better and license it how you want.
Oftentimes eslint can automatically correct usages with the no-var rule https://eslint.org/docs/rules/no-var
&gt;I don't get how difficult would it be to either rewrite it (obviously it will be more clunky) or for it pre licence and add your requirements? So I should rewrite and/or maintain the code myself? Why would I ever do that instead of using something else or rolling my own solution?
I disagree. But if you insist that this advice is useless, you still have to find a different article...
&gt; `bitbucket` also hosts at aws, so bitbucket is out
&gt; those companies have offices and lot of employees also outside US Not saying whether he was right in his move, but your counterpoint here is irrelevant. His concern is about those company's affiliations with ICE. Whether they have offices outside the US doesn't really matter.
Pretty good write up thanks!
I’m sure this will go over well. Just reeeeealy well. No unintended consequences here!
They’re all built with vanilla JS. Some just use lesser known features/technique and can therefore look a much different. An example would be $() in JQuery. Many people are unaware that $ just a valid JS variable, so it may look funny if you’re unfamiliar with the framework. 
&gt; $() in JQuery so using this variable in JS provides the same speed as jquery or are they implemented in a different way in these frameworks? 
Knowledge is built off other's prior work. If you're using a computer right now, you are using a lot of work built off of nazi's. A lot of medicine you used is built off research from unethical testing from Japan. The list goes on. Contributing to open source means anyone can build off of it, no matter how horrible or how good its deemed.
No, that's not how MIT works. If the code was GPL then they would need permission
Just as soon as I don't have to support IE I sure will.
I held off from for so long, but as soon as I also got into Typescript &amp; Flow, the step to compile down to IE-compatible JS became natural. Just saying, having to support IE might be required, but not using modern JS features is a choice. 
Ah. I think I agree with your understanding. I didn't consider personal projects when I wrote that.
Do those actions of Jamie you are impressed and pleased with include this action: https://imgur.com/LpyiCnQ - https://twitter.com/jamiebuilds/status/1034685522734505984 &gt; Jamie K - "I'm so sick of straight men"
&gt; there is no tit-for-tat when kids are dying. Can you point to a 20-minute timespan in the last 500 years where no kids died?
&gt;We appreciate your concerns based on the article you linked to. We would like to clarify that Palantir's contracts are with Homeland Security Investigations (HSI), the ICE directorate responsible for investigating serious transnational criminal activity such as human trafficking, child exploitation, and counter-terrorism as opposed to the activities theorized in the article. We're happy to discuss your concerns in person if you're interested, please get in touch. Can anyone attest to the accuracy of this?
If you want to wait for a script to load you need to listen to the `load` event of that `&lt;script&gt;` tag. One simple way to achieve this is defining a global function that gets called: ``` &lt;script&gt; function run() { alert('done'); } &lt;/script&gt; &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.matchHeight/0.7.2/jquery.matchHeight-min.js" async onload="run()"&gt;&lt;/script&gt; ```
Serious question: Why do you have to support IE? I’d be interested in a short description of the environment that you work in.
He's saying you can literally copy the thing you're dependent on and maintain that by following what happens in the lerna project. You can then take improvement ideas and implement them yourself.
I rather like this Ryan Cavanaugh fellow. It's always pleasant to see such things being handled with class.
Still doesn’t work for me. Are you preventing any default event scrolling behavior? That might be why. Let the events bubble up if you are, it should fix it. 
At least you're honest with needing a lawyer, what's to stop them from expanding it to _include_ microsoft employees so it puts more pressure on the execs to stop interacting with ICE?
Stop spamming this obsolete trash
Please show me all those liberals supporting ICE
Yes. Do you? Because you were in the army, anybody who wears a uniform and a weapon must be your brother, right? Whatever value the armed forces have, ICE is not the army. You don't have to get defensive. 
Pretty harsh!
I hope this doesn’t come off as inflammatory, I don’t mean it to be. What exactly is the right side of history? In your opinion, what is the solution to the problem of illegal immigration? Set aside for now how you feel about kids being separated from their parents. What should be done with people crossing the border illegally? What should the consequences be and what do we do with the children they bring along with them? This is a very nuanced problem and requires a bit more thought than pointing the finger at the agency enforcing the rules. Illegal immigration brings heavy consequences. Of course in a perfect world we wouldn’t have or need borders and we could all come and go as we please. That isn’t the world we live in. Changing software licenses to further political agendas also gets us no closer to anything resembling a solution to such a complex problem and will probably have more negative unintended consequences than we even realize. Taking unwavering ideological stances on perceived moral injustice is basically a fast track the type of society that breeds fascism. Just look at the various posts this guy has put on various projects around github. He has taken quite an authoritarian tone that’s becoming more and more common on the far left. This isn’t the type of attitude that brings solutions. This is the type of attitude that seeks to destroy the opposition at literally any cost. It’s a dangerous road to follow no matter how I feel about ICE’s actions. There is no “right” side of history. There are only facts and interpretations of those facts.
I have retrieved these for you _ _ *** ^^&amp;#32;To&amp;#32;prevent&amp;#32;anymore&amp;#32;lost&amp;#32;limbs&amp;#32;throughout&amp;#32;Reddit,&amp;#32;correctly&amp;#32;escape&amp;#32;the&amp;#32;arms&amp;#32;and&amp;#32;shoulders&amp;#32;by&amp;#32;typing&amp;#32;the&amp;#32;shrug&amp;#32;as&amp;#32;`¯\\\_(ツ)_/¯`&amp;#32;or&amp;#32;`¯\\\_(ツ)\_/¯` [^^Click&amp;#32;here&amp;#32;to&amp;#32;see&amp;#32;why&amp;#32;this&amp;#32;is&amp;#32;necessary](https://np.reddit.com/r/OutOfTheLoop/comments/3fbrg3/is_there_a_reason_why_the_arm_is_always_missing/ctn5gbf/)
STOP. You're shattering the poor guy. This is an ethical issue that you seriously could not understand less. /u/toaster-riot needs to be slowly taught, with biscuits, that kneejerk politics and software licensing have huge consequences.
Not to mention these mega corporations have the engineering power to build lerna-like project, probably better too.
The way you set up the context here is what I think anyone reasonable would say is outlandish and offensive. Not only that, you're setting it up like you're actually willing for a conversation on this. Look, I get your side of it, I just don't agree with it. If you're framing the argument as I enjoy watching illegal immigrants die, you're unreasonable or ignorant. This is the exact behavior that erodes any political discussion. It's like setting up an abortion debate as people who like to kill babies and people who don't. Further radicalizing means someone who is an opposing view systematically silencing your view point (by any means necessary). Does that sound good to you? That will get dark very quick and forces people to pick sides. This isn't the place for a debate on illegal immigration. The main argument here is to keep it out of programming.
Thanks for making me audibly laugh. Going to keep this line around...
Immigration and Customs Enforcement, a US government organization that has come under intense scrutiny as of late because they have been using child concentration camps.
Is he the babel creator though? I'm genuinely too lazy to check who have made the first commit to the repository, but according to babel's contributors page he's an inactive member, so saying stuff like "stop using my tools (such as Babel)" wouldn't be entirely correct.
You sound like a liberal fine arts major that is trying to attribute art culture into software.
ProTip: You have provided 0 actual support to any of your arguments. Try responding to /u/demoloition with something of substance.
Did I say license agreements are going to make them nazi's? What I said that this road it gets worse and worse and yes, that does make people lack empathy even more for opposing view points. I don't think you realize how scary things can become. People are forced to pick a side and that polarization is never good. I'm not the only one who wants to keep this out of programming.
I'd wait a few days before jumping to that project. They might get enough backlash to relicense and _step down_.
I think its a damn shame that you're being downvoted. There are more important things going on here than technology. I see a comment in here suggesting that since we use some technology invented by nazis, that we should not fight back against inhumane organizations. This is disgusting. 
Immigrations and Customs Enforcement, although they're less notable for customs than for their immigration enforcement, like [deporting a green-card-holding doctor who'd been living here over 40 years](https://www.washingtonpost.com/news/morning-mix/wp/2018/01/22/ice-detains-a-polish-doctor-and-green-card-holder-who-has-lived-in-the-u-s-for-nearly-40-years/?utm_term=.3cfa25ad1256) or [arresting a father escorting his pregnant wife to the hospital](http://nymag.com/daily/intelligencer/2018/08/ice-arrests-husband-who-was-escorting-wife-to-give-birth.html). As much as the job is necessary, the agency and the people doing it right now are fucking __*evil*__.
Frozen water.
So Transpile your code but you should still write it in ES6
Depending on who you ask, IE still has around 3-7% market share (4-11% if limited to desktop). That's a lot of potential customers. Also some legacy systems were built specifically for IE and considered too expensive to update. Banks are notorious for this. I met a guy at a conference last year and he was - working for a bank - supporting IE 9, I believe.
Yes. https://imgur.com/Rfyd2up
No, of course he doesn't. He likes the sound of the word and it feels like it's a hard hit to supporters of those corporations or governments.
&gt; It's basically a police force that enforces the federal government's immigration policy. Tangential, but I heard an argument that one of the big problems with ICE comes from the way America's law enforcement is specialized, leading to specialization in who applies to work there. Like, people apply to the local fire department because they don't want people to burn to death, or to animal control because they want to help animals, or to ICE because they *really* like kicking brown people out of the country.
Would that I could. Would that I could.
Oh I completely agree this won't cause any damage to any company named. Lerna puts themselves as if they have the install base of lodash or babel itself. I think overall the license change got the recognition it set out to produce, now it's time to wait to see what they do with it.
Lerna seems to be encouraging illegal immigration. I can see this backfiring on them soon.
I don't equate a lone developer with a fascist government - that sounds silly. He's welcome to be that guy if he wants to. I'm fine not shopping at the anti-LGTBQ baker as well, I'm sure someone else can bake a cake. If either of those were corporations not serving a great majority of people I would take more issue with it. The "how" matters with regard how we solve immigration. What that answer is is complicated because the measure of success is different for everyone. I also disagree that it has no place. At the very least we are having this dialogue.
Because of the service workers' spotty support for `Range` requests?
First off, really? That is just petty. Second, to compare anyone involved with ICE as the Gestapo is **rediculous**. One of there jobs was to round up Jews to be put in camps for either forced labor followed by death or immediate death. All of this shit about calling people Nazis these days that have different political opinions then you is really cheapening the horror that people, who actually dealt with Nazis l, went through. So don't call ICE the Gestapo. I don't like their practices and policies either, but we need to realistically frame the problem rather than make inflammatory remarks.
Hi /u/JSislife, [Last warning.](https://old.reddit.com/r/javascript/comments/9aq5jm/errors_handling_for_vue_class_components/e4y2qdn/)
You're assuming that open source is a zero sum game when in fact, it's not. He may be volunteering his time for free (even though he hasn't contributed to lerna in a very long time); however, other people contribute back to the project in ways that benefit him. Moreover, other source projects exist that directly benefit him and lerna. These other contributors and open source projects don't necessarily share his political views. &amp;#x200B; Open source code is politically neutral in the same way that math and science are politically neutral. Mixing the two is wholly inappropriate. Moreover, this behavior is harmful to open source software at large. Imagine how fragmented OSS would be if every project's maintainers used their licenses to ban use by those who they disagreed with on politically.
When you see `$(...)` it's the same as `jquery(...)`. `$` is just a function. You could write your own functions with dollar signs: function $$$() { return 'Cash!'; } const a = $$$();
The argument on your side is ICE is a horrible government agency that should have software banned from them and any businesses associated with them. The opposing view point is introducing the idea of banning software from agencies/businesses for political reasons is a dangerous road, and this is all political grandstanding since it's ineffective. You showing videos of ICE doing bad things does nothing to convince people of the opposing view point because that's not their argument. You can not like ICE and still think politicizing programming is a bad road (which you can see other comments of people stating that same thing).
&gt;Why would I ever do that instead of using something else or rolling my own solution?
If you read the thread, he actually says exactly that. Both of the prior contributors were called out by name, and both gave approval to merge it.
Why can't you if it all transpiles down to runnable ES5?
Like I honestly can't tell if you're trolling me. You really can't see any parellels between the guys who wandered Germany looking to throw Jews in camps and the guys who wander the Mexican border looking to throw Mexicans in camps? As to calling people Nazis, you're absolutely right when you say you should call everyone who disagrees with you a Nazi. That doesn't mean that it's impossible to find real parellels and point them out. Can I call the guys with the tiki torches changing "Jews will not replace us" Nazis? How about the guys chanting Hail Trump? How about the ones who self identify as Nazis? There are enough open white nationalists on the right, including the president, that it's not really a stretch. 
Ok yeah I did not see that he made a bunch of them.
The most viable alternative is forking the version before the license change. Lerna will die and the fork will live if they don't change their minds. And unless every contributor agreed to the change, I consider it illegitimate and unenforceable.
Thanks pudendumReferendum! Great name btw. React is an awesome tool, Three.js was definitely the critical piece. If your interested in modelling id look into that as well.
Hey amersshaik, thanks! That's excellent feedback and I'll certainly add it to my roadmap. I think itd be a huge help with usability. Cheers.
Oh, the drama only gets better. One of the contributors (#11) explicitly disagrees with this relicensing of his code and wants all his code to be removed/rewritten. https://github.com/lerna/lerna/issues/1622 Would love to hear Henry Zhu's stance on this.
Don't get caught up in the difference between a framework and a library. It's just semantics, and the definitions will change depending on who you ask (and what languages/tools they use). Libraries are just pre-packed solutions to various problems you might encounter while building things. You don't need them, but you will end up solving problems that have already been solved (and tested) by the community. Most javascript libraries are either written in plain javascript or they're written in a language that can be compiled to javascript. Some libraries will use javascript features that aren't yet officially supported, so you need something like [Babel](https://babeljs.io/) to compile your app down to something that browsers can run. For example, [React](https://reactjs.org/) uses JSX which is basically just HTML in Javascript. When you compile code with JSX, the HTML turns into regular function calls that the browser can understand. Or [ReasonML](https://reasonml.github.io/) which is an entirely separate language from Javascript, but it is intended to be compiled to Javascript. Some libraries use templating languages to support writing HTML in javascript. For example, [Ember](https://emberjs.com/) uses the [Glimmer](https://glimmerjs.com/) templating language. There are a lot of libraries that don't require any special syntax though. [Lodash](https://lodash.com/) and [Axios](https://www.npmjs.com/package/axios) for example.
&gt; I’d wait [with my backlash] &gt; they might get enough backlash [even though I decided to make it an chicken/egg problem]
I wonder if his [twitter suspension](https://twitter.com/thejameskyle) was related to this in anyway? Twitter found at: [https://github.com/jamiebuilds/itsy-bitsy-data-structures](https://github.com/jamiebuilds/itsy-bitsy-data-structures) towards the bottom.
It's funny because he's breaking his _own_ code of conduct. &gt; Examples of unacceptable behavior by participants include the use of sexual language or imagery, derogatory comments or personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.
Exactly!
How have politics entangled programming? Do you have reasonable examples? You keep doing anti-ICE arguments when the discussion is not about that, it's about keeping it out of programming. There's comments here for people who are against ICE but still disagree with this notion of what the author is doing. If you think people cheering for illegal immigrants being detained is scary, then you don't understand how bad things could really get by accelerating this by politicizing programming too. This would only get people who empathize with your cause but disagree with politics in programming to not empathizing at all, and much, much worse. People are forced to pick teams.
It's funny how any time somebody protests the right, the voices from the_donald are loud about saying that the protest is evil and ineffective. 
Doubt they're going to do anything other than sit on their hands and wait until everyone just agrees this is the new license and that's it.
This is a great move. I love seeing Open Source maintainers stick to their guns and support social initiatives that they believe in. Life is politics.
Add the whiskers templating library to the client and append or create element the result of rendering a template with given arguments. [https://github.com/gsf/whiskers.js/](https://github.com/gsf/whiskers.js/)
I wouldn't want to either, and at the time I posted this I didn't know [FOSS Lerna](https://github.com/LernaOpenSource/LernaOpenSource) was a thing. Now it is.
Oh I agree, jamie has put himself on a blacklist at many companies and organizations because of this. Although he would probably reason it as "I wouldn't want to join such bigoted companies anyway". Thus reasoning away all the responsibility of his decisions.
Ah, who’d have thought he’s a SJW nutjob?
Please learn what a Nazis is and what there ideologies where. It was a Facist movement that had more to do with it than just white nationalism. The difference that I see is that ICE isn't delivering people for extermination. If it came out that ICE was delivering illegal immigrants for extermination, then absolutely they are like the Gestapo. They are enforcing the **law**. That law is deeply flawed and needs change. The way that they are enforcing the law is also deeply flawed. I don't like what they do, but they are not a part of a paramilitary organization that is a part of a system doing genocide. You're also only describing the extremes of the right that are getting more attention these days because of the political climate. The left has the exact same problem with extremists that take the narrative away from the majority. Please stop trying to win. Asking dumbass questions like that is a really shitty tactic attempting to undermine my point. It doesn't, it just makes you look foolish. Anyway, I hope you have a good day 😊
Or maybe we should stop treating libraries as if they were a core part of the language, because TC39 goes to _extraordinary_ lengths to ensure backwards compatibility?
Anyone else getting a lot of 404 error pages for some of their documentation?
The irony here is that one could say the same for the companies in the blacklist, at which point one might rightfully wonder what is the point of this whole thing...
ELI5 please?
The developer causing all of this is poison if working on your code... &gt; I left the Lerna project a long time ago, I've gone as far as to replace Lerna with a new tool called Bolt. https://github.com/lerna/lerna/issues/1628
Chud
They want to have their cake and eat it too.
This is the first high profile case I've seen where contributors are explicitly asking for their code to removed from future releases. e.g. ["Remove my contributions to Lerna"](https://github.com/lerna/lerna/issues/1622) on lerna/lerna's github. In my opinion, this shows the power of the open source model. Someone decided to have a power trip without consulting the people that contributed to the software's growth. Contributors then request their code be removed as it is no longer licensed after the project relicense. Nearly nobody is a lawyer, but it seems that Lerna has effectively terminated control of their own project. In order to release a new version, they need to rewrite every line of code written by a dissenting contributor. They either do that (which will be a challenge) or never release another version. The good thing is everybody can simply go back "one commit" and fork to a new project.
Yeah there is a term to describe that behaviour. Virtue something or other...
&gt;I went through the [vanilla JS](http://vanilla-js.com/) site and there's a speed comparison table for JS and other frameworks and I see each of these look completely different from each other. This doesn't make sense to me. Are these frameworks developed to be a sort of different language altogether but build on top of JS? These libs are just implementing functions. It's nothing like a different JS. it IS JavaScript. Nowadays anyway with latest ES standards and all the new useful APIs (classList, Map, ect) you won't probably need libs like these. Even lodash. Still sad to see that lib inside "90%" of npm packages.
Surprisingly you can do both. 
Honestly impeding Microsoft's workflow seems to be his aim
Eh, corporations using it have a legal obligation and monetary risk. Lerna just has risk of the project being terminated. 
fucking obnoxious. i don't like ICE in the least, but i like tech companies / projects that push the political views of the loudest voices associated with them way less. this is a really stupid and potentially dangerous precedent to set. people in tech companies really need to get smarter about fighting their battles.
Hah, they're banning the company that hosts their git origin?
An adult and a child show up at the border with no identification. They have never been in your country before. How do you determine whether the adult is the child's parent or a kidnapper fleeing the jurisdiction where people are looking for the child? Do you allow the adult to remain with the child while you verify whether they're actually related?
Here we go again #leftpad 
Awesome. Thanks OP!!
&gt;Hard to focus when the world is burning. where do you live that the world is burning? MY GOD WHY ARE YOU ON REDDIT AND HOW CAN YOU FOCUS WHILE THE WORLD IS BURNING? the world is safer now than it has ever been in all recorded history. literacy, access to clean drinking water, education and birth control and life expectancy are all higher than they have ever been. get a grip.
Also worth mentioning is i've been trying everything i could think of to fix it. my player still moves when in the air, but as soon as it lands back on a wall piece, it won't go left or right
Hi /u/flatlandr, please don't use such terms here. Thanks.
&gt;The open source community is better without companies like yours. You are not welcome. who the fuck does this clown think he is lol.
&gt;any work carrying this license may be modified and must carry this license &gt;this entity supported a political decision i didn't like. they can't use my software how are you even comparing these two situations
The Immigrations and Customs Enforcement division of the U.S. Citizenship and Immigration Services has been implementing a policy at the U.S./Mexico border that results in families of asylum-seekers coming to the U.S. from Mexico getting put in separated holding cages. This is widely seen as bad - with shades of WWII concentration camps. The second-most prolific contributor to Lerna lobbied for and got the Lerna project to deny the open license Lerna uses to companies that are known to "collaborate" with ICE, via a change in the language of the license - though, the nature of said collaboration is not specified in the language change nor the pull request. In this thread, a bunch of people are unironically claiming that open source and politics should remain separated, despite open source itself being a pseudo-political stance, and OSS work being affected in many ways by politics.
You have the wrong profile: https://twitter.com/jamiebuilds/status/1034594832876879872?s=19
I'd be interested to see the outcome of this. I've thought about this after I received a job offer (that I then declined) from a defense contractor. I am a pacifist and I would hate to see a library I create to be used, for example, to operate nuclear weapons. But I'm mostly doing web dev and I don't think any missiles have a React front-end, so I haven't had to worry about it.
Jesus: https://github.com/palantir/tslint/issues/4141
I'm so sick of SJW bullshit infecting everything. Why is it so hard for these people to keep politics out of non-political things?
Thank you.
poor murderer not being able to see his new child born :( so evil of ice to arrest him...
[I think this is almost more malicious than left-pad.](https://github.com/palantir/tslint/issues/4141#issuecomment-416773459)
No prob, bob. Question: what's your situation that you were unaware of this? I'm not being accusatory or anything; I'm genuinely curious as to what's insulated you from the last few months of political news.
Hi /u/andreaubaska, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
He literally just locked all conversations to collaborators to silence all the complaints. https://github.com/lerna/lerna/issues/1630 Also marked anything criticizing him as Off-Topic. Is he something like 10 years old?
&gt; software is emotion Sorry but your projections don’t hold true to reality. Software is literally emotionless, even AI emotion is all fake :(
The accuracy of what? You certainly will never get to see Palantir’s contracts and if you are taking about ICE’s involvement in investigating or assisting law enforcement for those crimes you listed, well yeah they do and was one of the main reasons it was created. 
I know that is one of the main purposes behind ICE. I was more referring to the accuracy of palantir's statement about their involvement in combatting those items. 
You mean like if you built a nation, formed a government, passed laws and then wanted those laws enforced? That kind of protection? 
I am from the border. My world revolves around an imaginary line and the occupation of the land to enforce it. It may not be burning where you live.
"Lets bring politics into our open source software and then still call it open source". This is no longer an open source project. The idea that a political ideology can revoke licenses of use of thought is ridiculous. If I (and no, I haven't, and don't think I ever would) make an anonymous ICE report, then I can no longer use this software now? Next I'm going to have my licenses revoked because I'm a centrist who at times votes republican and other times democrat? (With the copyright holder being that of the opposite party). Software *may* be a place for software related politics. Software *shouldn't but unfortunately often is* a place of corporate politics. Actual politics should never hold ground in software. Unless of course, that software is literally meant to collect/interpret some political statistic.
I’ve been following him on Twitter for ages and he is certainly talented and funny at times, but my god he is one salty boi in need of a daddy to keep him in check. If he disagrees with someone he just goes on mini tirades in Twitter threads and links the person he disagrees with to his thousands of followers.
Because they're the entitled children who they are complaining about. They literally can't stop talking about themselves. 
Eric Raymond weighed in too: http://esr.ibiblio.org/?p=8106
Thank you for saying this. The first thought that popped into my head was what would have happened if someone took a stand like this for a topic that I did not agree with. And the trouble/beauty of any democracy is that you will always find someone who disagrees with you on many issues. In my view, open source fails to be open and free when you restrict its use to those who share your political views.
I'm sure it'll affect him down the road career-wise. Shame because I agree he is talented.
Just what we need, trash politics in open source 
No, and the vast majority of his commits are accepting PRs, wording changes, and other superficial shit. He is not currently a major contributor on any of the projects that these companies actually use. You can't just mow someone's lawn and claim ownership of their house.
IIRC from what I ready this morning, the plan was everything prior to this decision is on the old license, everything after is on the new license. So Microsoft, etc. could continue using the old code, but not the newly licensed stuff. Again, I don't know fuck all about licensing. That's just what they were claiming in those comments.
He's on a power trip, which is worrying. I don't know, he may be very passionate about his projects and his politics, but looking at this from the outside makes me thing he's going through some shit and he's acting out. I followed his previous twitter account and seem to remember he changed his profile picture to a black image and said something along the lines that he was tired of all this shit a while ago (but take this with a grain of salt, I'm only about 80% sure it was him). Maybe someone who knows him should reach out? Regardless, this behavior in unjustifiable. He even goes so far as to say that he removed himself from Lerna a long time ago and produced an alternate tool (Bolt), but then uses his power as a contributor to push his own political agenda, at the same time silencing those who do not agree with him, preventing any kind of civil discussion and harassing people on other project's repositories. The best outcome for this would be for his powers to be stripped from the Lerna repo and for the license to be reverted. 
You say “unironically” in an attempt at making fun of those who just want to keep politics and OSS. Your conclusion that “all policy is political” has absolutely nothing to do with this. You can keep science and politics separate, and as a matter of fact you should want it this way, because otherwise one day some other government will be able to tell you “make 2 2 =5 because we want it to be 5”. You are absolutely free to protest however you want, but these actions speak of an incredible lack of professionalism and immaturity, and under the worst possible conditions because Lerna isn’t even that big of a deal to begin with, people will just abandon the project. Not how much of a half assed attempt this looks to the everyone else: of you are serious about this, why are still using Github? Finally, why don’t you say what you actually want to say? Why not naming names if you are so sure of your convictions? Just say who are these “people you’d expect”? Conservatives? Right wingers? Libertarians? Anyone left of yourself?
I doubt that this won't have any consequences, and only gives that fag a big ego stroke. 
&gt; American Gestapo Lmao.
Having a good understanding of callbacks, promises (and async/await) is pretty important now-a-days. Tutorials for NodeJS and React will probably help introduce these concepts as well. My only word of warning is to realize that node and react are two different ecosystems with different styles and paradigms. With that in mind, there's no reason you can't learn them as you go through their respective tutorials.
I don't agree with many of the policies that ICE are taking today and I respect anyone who wants to take a stand. But this is wrong. To change a software license to be proprietary after so many years of contributions, I can only see this as being done in bad faith. Making software proprietary for the sake of political gain is exactly the kind of thing that the GPL/LGPL is meant to protect users from and if this kind of thing continues, I hope that more people are willing to license and use software under the LGPL instead of more permissive licenses. I think that I would be OK with Lerna taking such an approach on new projects with new licenses. Personally, I think that restricting others from using a service or piece of software for their political affiliation or views is harmful to democracy, but I will reluctantly accept that if that's what people want to do, they should feel free to do it.
I don't want politics introduced, but I don't consider "unnecessarily traumatizing children" to be a valid political position, so I don't have a problem with this one.
I read something he said that he only worked for the big companies to get paid to do open source work. Now that he doesn't have to hold his tongue and can enact his world view he is doing it.
That, on the other hand, would be relicensing the current code, not sublicensing. Relicensing requires the consent of all contributors to the current code, while sublicensing does not (AFAIK). But yes, Microsoft and others could just continue using the old versions.
And [here's some irony](https://www.reddit.com/r/node/comments/6whs2e/multiple_coc_violations_by_nodejs_board_member/dm9afd3/) for you. Same guy, stating how serious he takes codes of conduct, right here on Reddit.
If you sincerely think that's the political position hold, then you are clearly willfully ignorant on the subject. If you truly wish to change people's minds on this then I recommend you have less hostile conversations with people with views that differ from yours. The majority of people discussing this here aren't talking about if ICE is good or not, they're saying programming is not the place for political grandstanding and it's ineffective. If you are saying you don't want politics introduced here then we're on the same page.
Some people don't live in the US, and don't really care about US politics as it doesn't have much of an effect on their daily life. Just my 2 cents. 
I remember that. And the brainchild of that split was [Ayo](https://github.com/ayojs/ayo), which looks like a dead project. The moral of the story is that feelings aren't sufficient to drive an open source project. You'd think they would have learned that by now.
Fair enough. I suppose there's also, "teen that just doesn't really follow politics" as well, and "I've been under a project for the last six months; do people still eat foods, or have we finally gotten nutritional IVs to market?"
Thank you for all of this! I am working on a project right now and I barely know what I’m doing. It’s taking me forever to do what I’m sure others could do in a couple hours, but I’ve learned a lot since starting. Hopefully, I don’t get stuck and can figure out each of the features I want to add. 
According to babel he is not even a major contributor,
yes pls :)
I'm going to put a vote in for https://github.com/MithrilJS/mithril.js It's a lot like React but should also satisfy all your other requirements.
So I did some basic testing. In an empty HTML page, with only Tag Manager being added (no tags in the container, or anything else) the bundle on it's own is 19.1kb and does not include jQuery or bind any event listeners to the DOM Tree out of the box. I suspect that you have jQuery on the page already OR have already added some tags to the container that add jQuery themselves. To re-iterate -- folks can add things to the container that will bloat the page/payload. That's why I think a review process is critical.
Maybe this person doesn’t live in America 
Would love to see MS create their own and release it as open source as a fuck you.
That makes sense. I went through and checked all my apis, and it looks like I'm safe from this, because it checks for authorization headers then validates the token. Unless they can forge the decoding, I don't think there's a way to get past it.
He's also a maintainer on babel, styled-components and a member of TC39. Terrifying that this guy has the ability to do anything aside from pull up his pants.
&gt;How do you determine whether the adult is the child's parent or a kidnapper fleeing the jurisdiction where people are looking for the child With a DNA test. I'm not being contrarian, that's typically how these cases are handled in court. &gt;Do you allow the adult to remain with the child while you verify whether they're actually related? You can keep them separated within the same facility. However, parents and children are often being sent to different states with limited or no ability to contact one another. Make no mistake, the separation of children from parents is being used as an immigration deterrent. Whether or not that's OK is open for debate. However, it's not dishonest to say that they are being separated due to concerns over the child's well being.
This kind of meltdown often precedes suicide or coming out as trans.
Here is a list of some JavaScript fundamentals to know before learning React - [https://www.robinwieruch.de/javascript-fundamentals-react-requirements/](https://www.robinwieruch.de/javascript-fundamentals-react-requirements/) I'm using it myself to get my knowledge to a basic level while starting React learning.
Thanks, you've inspired me to search for one for Atom: [https://github.com/Evpok/fancy-bracket-matcher](https://github.com/Evpok/fancy-bracket-matcher) Works nice after playing with config file to tone down the animation.
He's inactive and I believe the creator of Babel is on his side but decided to step down as well a while ago. Time will tell if this guy will singlehandedly destroy the ecosystem we enjoy today.
Well, what's the sequence?
This change was a PR. 
oh I meant 2, 6, 10, 16, 18..etc... not 2, 4..., So the sequence is add by 4 each time starting at 2.
Yes, what I meant was instead of instamerging he could have waited to see what the feedback was.
That's nice! It's always good to have some alternatives. 
Just another shitbag authoritarian with power. Liberal, conservative, it doesn't matter, an authoritarian is and authoritarian.
&gt; With a DNA test. Agreed. Those take a minimum of a few days, with some testers having multi-week backlogs. &gt;You can keep them separated within the same facility. https://www.law.cornell.edu/uscode/text/18/5035 "The Attorney General shall not cause any juvenile alleged to be delinquent to be detained or confined in any institution in which the juvenile has regular contact with adult persons convicted of a crime or awaiting trial on criminal charges." I'm not 100% sure that applies to these cases, but I would not be surprised if there weren't similar rules covering detention by ICE. What's the point of keeping them in the same facility if legally they can't be allowed regular contact with each other? 
Hmm, I wasn't aware of that rule. Perhaps I'll try to keep more of an open mind then. Although I'm still skeptical that it's not being used as a deterrent. 
Could he have waited? Yes. Would have made the same impact? Definitely not.
It's just a math. Your sequence can be described as 2+4n, n ∈ N. So for any value x that's part of this sequence: (x - 2) % 4 === 0
Sounds like homework
I agree. Maybe this is good, because at least it gives us a reason to discuss if this is the direction we collectively want to take open source. As for the project, it could go either way, people will still use it unless a more popular alternative comes along after this. I still think that he's not behaving reasonably, and taking a more nuanced approach could have given better results long term, but we live in a world where "we want it all and we want it now", so I might just as likely be wrong.
how dare these people consider the consequences of their actions instead of relegating themselves as drudges 'just doing their job' for the machine 
Pardon me but get your politics out of my code please.
Writing the sequence in mathematical terms would help It looks like the sequence is this; The sum of n from 1 to Infiniti is 4n - 2 
Oh he's entirely overreacting and this will be an example of how to properly license your project. Your project just won't be picked up and contributed to unless there are protections for the users of the library. That's the big issue with this. Ignoring the political reasoning behind it, a singular person decided to update the license with a list of companies he personally curates. This doesn't belong anywhere in a major package.
I would have thought someone like Jamie would be an avid supporter of destroying families.
He's a member of TC39, which controls the ECMAScript standard.
I know you'll read my other comment and ignore any edits I make so here's another comment just for you. If you're so ignorant to not understand the ramifications of the issues of _how_ he is protesting I can understand why you still support him. The issue everyone has with lerna is a single (singular, one, jamiebuild, no one else) controls this list from hereon out. That list right now is because of companies who work with ICE. What stops him from adding other companies randomly? For whatever reason, that is what this license opens itself up to and *that* is the problem. For you to maybe understand it you may need an example from a strongly opposing viewpoint. Let's say for this exercise babel is run by a very far right wing person. They decided that because Lerna is taking a stance against ICE that they want a say. Babel is now released as MIT + exclusions. Who is excluded? Anyone who doesn't agree that ICE is a required agency. *Anyone*. Guess what? This effectively halts webpack development and anything that relies on it. What can you do? Nothing, the creator has disabled all comments from anyone who hasn't contributed before. Oh wait, what's that? Someone at node.js is getting inspired to do something radical again? Oh wait, before you realize it Zuckerberg wants to throw his opinions in the ring and relicense react to exclude the companies and people who don't support ICE. Shucks, we've lost the ability to use babel, react, webpack, angular, vue... Oops Microsoft heard something fun was going on and decided to relicense typescript to exclude companies who have stated an opinion on ICE that makes them feel bad. :( :( :(. Typescript is out the window. If you can't see the issue if **open source** projects are no longer **open**. You can't be helped, please leave. 
TC39 is highly involved with babel, so he might be booted from that project?
We found lerna super useful and a game changer, and because of this stance I'm happy to continue using it. We should be talking about big tech contributing to ICE in this thread.
Hi /u/eggtart_prince, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Morphray, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/GitW_85, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Thanks for your understanding.
Hi /u/OddDiabetic, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
That would be the case for end users... But lerna is a project that other projects depend on. They're more of a provider, and if they have the capability of doing this kind of protest, they should go all the way through. They stopped offering their solution to Microsoft, but are still using Microsoft's solution.
&gt;SJW bullshit We don’t support this or anything like it. Flies in the face of what open source stands for. 
Has the same drama queen license though
Yeah, it's the guy that's against ICE that's authoritarian...
I live in Brasil...
Man, does ANYONE in these comments have a conscience?
Even though I am totally against what he did. I think it is important to put attention towards it. This kind of attitude/stance of authoritarianism needs to be stomped out and made an example of. He introduced his politics to open source programming and tried to get a social mob to influence it. He had followers commenting on repos on irrelevant tickets and saying not to contribute anymore. No one should be doing this, even if you agree with him.
That's for my team to work through. Mainly, we have a few non-devs on the team that wouldn't be able to keep it all straight, and it adds unnecessary complexity to the process. It's just what it is.
One has nothing to do with another. The Nazi's fought the communists in the streets of Berlin while struggling to gain the hearts and minds of the German people and control of the German government but that didn't make them any less authoritarian than the communists. 
Well. I'm not that big of an SJW but I did a google search: &amp;#x200B; [https://theintercept.com/2017/03/02/palantir-provides-the-engine-for-donald-trumps-deportation-machine/](https://theintercept.com/2017/03/02/palantir-provides-the-engine-for-donald-trumps-deportation-machine/) [https://gizmodo.com/turns-out-all-kinds-of-tech-companies-are-working-with-1827006046](https://gizmodo.com/turns-out-all-kinds-of-tech-companies-are-working-with-1827006046) [https://www.nbcnews.com/tech/tech-news/tech-companies-quietly-work-ice-border-crisis-continues-n885176](https://www.nbcnews.com/tech/tech-news/tech-companies-quietly-work-ice-border-crisis-continues-n885176) &amp;#x200B; &amp;#x200B;
/r/badhistory
[It's not like I don't know that](https://old.reddit.com/r/javascript/comments/9b8sue/lerna_revokes_license_from_companies_who_are_ice/e51io7i/). I'd say an even larger percent don't want to deal with the politics of this change and just want something that works. They won't take the time to fork and maintain it.
It's not authoritarianism, it's just one individual making their own stance. If you don't like it, use something else and/or protest against it. But please, there's nothing authoritarian about it.
Where am I wrong? The main point too is we got here by building knowledge off of knowledge. Sometimes that information originated from horrible means or people.
Did you see what was linked above? If not, I think it's important you read it. http://esr.ibiblio.org/?p=8106
Anything this guy has ever written or ever will write can no longer be safely used in the world of OSS without first forking it as is to make sure the license won't get fucked in the future.
You are either being disingenuous or you do not know what Godwin's law is. I did not compare the guy to Hitler nor did I suggest his actions were Nazi-esque. What I did do was compare two different branches of authoritarianism to counter your ridiculous and patently illogical insinuation that OPs actions couldn't be authoritarian because he was against ICE.
This shit again. And James Kyle, not surprised
Agreed 100%. I contacted TC39, but the code of conduct only covers things done in TC39 areas (like in-person meetings, their GitHub, etc.)
mmm, did you visit the page before I said it was fixed? It could be cached, the page is served with cloudfront so it might take a bit to propagate, are you able to do a 'hard refresh' ?
100% agree. Thanks again!
weeeirdd, Don't really even know where to start to diagnose these issues ahah. Im going to give it a shot today tho! Thanks for the screenshot!
ahh, yeah that smallchat thing is todo with the chat widget on the site, I didn't see those, will update today 👌
Refusing to be complicit isn’t being authoritarian. 
I'm not sure if I agree with politics in a license. Haven't given it enough. But you're completely mischaracterizing his stance and his motivations. He's not complaining about immigration enforcement in general.
https://github.com/lerna/lerna/issues/1628#issuecomment-417052979 - he specifically says that.
Thank you! I don't *think* AnimeJS makes use of tree shaking. To my understanding the package has to be broken up in a particular way so that Webpack can just import what is required. I might be wrong on this, but I believe Anime is just all bundled into the parent `anime` object. Whereas GSAP is structured into individual libraries like `TimelineLite` , `EasePack` and `TweenLite`. To get an idea of a library that supports tree shaking, check out how `lodash` is structured, with each function defined in its own file. You can then just import `map`, for example, like `import map from 'lodash/map'`. I may be wrong though, have a play for yourself and inspect your bundle with something like: [https://www.npmjs.com/package/webpack-bundle-analyzer](https://www.npmjs.com/package/webpack-bundle-analyzer)
😂 Many times I wanted to ahah
I think it's an informal fallacy, appealing to hypocrisy.
Try assigning two and three from main.js into window globals: `window.two = two; window.three = three;`
Thanks 🔥😊
Its not public, sorry, but PM me and I can invite you 
Could you explain the benefit of LGPL over MIT, MPL, and BSD in this case? I always go to legal TLDR but I don't quite get it.
 Not particularly catchy ;)
Unless you are procedurally generating your code it's an expression of a human being just like writing something down on a piece of paper.
Ah you know, I actually upvoted you at first and was willing to have an actual discourse, then you said this. &gt; Trying to avoid triggering snowflakes like yourself, I suppose. I suppose I've failed in that. Ah, well. Disagreeing with you isn't "getting triggered", grow up.
Except for the fact it's effectively no more open source after that.
yu don't think wages are political??
Sean tried to get Microsoft removed from the list too: https://github.com/lerna/lerna/pull/1631
Refusing to be complicit isn’t authoritarian 
[removed]
Responses here concern me. I agree that this particular move was an ill-conceived one, but it's not the case that code in wide use can realistically be apolitical. Consider that open source licenses are, themselves, political; copyleft licenses have been repeatedly compared (mostly by corporate mouthpieces,but still) to Communism. The present ascendancy of permissive open source is considered by many to be a triumph of the industry over the community, in that it has bred a generation of open source developers who produce value for free. The appropriate criticism here is "Lerna is not important enough for this to have a material effect on the operations of ICE, and this change is likely to kill the project", not "Get politics out of my software licensing".
Fair point, my mistake
How? That seems difficult. Choosing, e.g., MIT over GPL is not an apolitical decision. Neither is choosing whether or not to have a CoC. I don't think Lerna is doing the right thing - their project will die and have no effect on ICE - but asking for "politics free code" is nonsensical. Code we write encodes our assumptions about the world and gives our users more power, in some domain. That is an inherently political act. For instance, consider writing a program which handles text (most do). Do you use a system (or write code yourself) which handles only ASCII correctly, or do you provide tests and appropriate implementation code, perhaps quite a lot of it, to fully handle, e.g., complex CJK Unicode stuff? If you don't, you're making the political decision that you don't care about Chinese, Japanese, and Korean users. If you do, you're making the political decision that you care more about supporting CJK users than about (insert other feature you could have been working on). Code deployed beyond the personal is inherently political.
What thin skin.
Lol sounds like a load of nonsense to me
Also wont be legally binding. You simply cannot update the terms of a license wily only on users. The users downloaded the code with the old license, the old license stands. 
been wanting to try my hands on Vue. Lets see. 
wtf is lerna
Hello there 
I don't see anything there that could particularly be faster. Also, clearing a canvas by overwriting with a box is standard practice, so I wouldn't call it janky
I don't think he's working on my code. He's too busy causing drama on Twitter to be working on much of anything.
That what I was thinking. Lerna is a pretty cool tool, and has becoming popular, but they're not nearly prominent enough to be making demands to companies like these. They also aren't even close to the only solution for monorepos
It's not my call, unfortunately. We'd be using TypeScript if I had my way. 
You would be surprised at the lack of fundamental knowledge people have with 20+ years of experience let alone the bootcamp devs. Not everyone has turned this career into a hobby, some people just want to punch the timestamp and collect their cheque.
"just focus on software" What about the impact that software has on the world and society? There is such a thing called "ethical computing". When scientist created the atomic bomb as part of The Manhattan Project... They all later signed petitions asking governments of the world to stop the nuclear race. Science had enabled something terrible. Would you have told scientist back then to "just focus on science"? Regardless of if you agree or not.... As developers we should be aware of what the code we write can and is doing. We can then choose to do something about it or not. 
Ask your company to stop support ICE. Pretty easy. 
Can you even read ? Where would you possibly get that?
For the Manhattan project yes I actually would. If we didn’t make it someone else would. I get what you’re saying and it’s a good question, this does not fit that. This is someone with a widely used JS tool being political and clearly uneducated on the matter. Open source licensing was not meant to be used the way he was attempting (one of the originators blogged about this and it’s linked here). And I mean not educated on the subject by how is framing the discussion. (Calling people racists.)
That’s made up shit you are spouting. Go look it up on factcheck.org. There may have been some separations for emergencies or exigent circumstances, but it most certainly was not a policy. That’s a lie Comrade. BYW, reading this thread, I had no idea so many of my fellow software developers were such cold hearted fucking assholes with such a slim grip on reality. Yikes. 
Indeed, you can write very concise components even when using ES5, without transpilers or template preprocessors. Also faster than offloading that work to the client.
James Kyle's lawyers vs Microsoft lawyers. Find out who's going to win right after the commercials.
Maybe both are bad?
The answer will not surprise you, or will it?
Technically since lerna's license still allows sublicensing (as long as you're not one of the affected companies), someone could just set up \`LernaOpenSource\` to mirror \`lerna\` and then add a commit updating the \`LICENSE\` file to standard MIT (i.e. sublicensing it). Then anyone on the affected list of companies can just use that version instead. &amp;#x200B; This is trivial to automate and allows anyone to use the latest version without the additional restrictions.
You can still use react. Just load the scripts for react and react-dom in scripts tags then have your UI script load next. You don't need to use jsx 
MIT allows for a more restrictive license to be applied without approval of previous contributors.
100% can get behind this.
I don't know anything about the canvas API, but can you do it with just one path, rather than one path for each line?
ASCII vs Unicode isn't a political decision, even you said it: &gt; do you provide tests and appropriate implementation code, perhaps quite a lot of it, to fully handle, e.g., complex CJK Unicode stuff? Not supporting unicode perfectly because it hasn't risen to the top of the todo list is a coding problem not a politically charged problem. "I won't accept any PRs for unicode because I don't want those communist Chinese to use my code" is the kind of thing being referred to here. There is a difference between code you can apply your own political motivations on to and code which is actually political.
Or just fork it before the change: https://github.com/LernaOpenSource/LernaOpenSource
Changing the drawing context all the time is not a cheap operation, especially with all the string operations etc mixed in. lots of individual line draw calls. I suspect this code with all the random colors would be faster if you create image data in that size and fill it with random bytes you don't need to string format, also no line calls. At the end you have one expensive write back to the canvas, but it could end up being faster. You need a bresenham line or so though.
This is brilliant! I hope more big open source projects do the same. 
If I’m understanding this correctly, you wouldn’t pass a variable into the template. Once jinja parses your template your left with static html basically. You’d need to use JavaScript to update the DOM in some way. You say you’re using {{}} in jinja which makes perfect sense, but that should be removed from the output before it is served. Then you mention you use {{}} in JavaScript, but what does that mean? Are you using something like vue which would also use that style of interpolation? I guess the recommendations would vary depending on how you answer that last question. 
open source is pro seperating kids from their parents?
- Vanilla JavaScript = JavaScript. - ES5, ES6 ES7 = versions of JavaScript. - JQuery = Shitty framework compiled of functions to help make JavaScript coding easier. - React = JavaScript SPA framework that allows you to write JavaScript rendered HTML. - Vue = JavaScript SPA framework that allows you to write JavaScript rendered HTML Node.js = An environment that executes JavaScript code outside of a browser. Electron = JavaScript framework the allows you to write native applications (so applications you can run on your computer natively without a web browser. JavaScript allows you to somewhat extend the functionality of the web browser most commonly. It’s also highly versatile, so you can write back-end code not just client side code. Hope this helps 
I boycotted IE support. I refuse to comply to its absurd standards. Fuck IE. 
Yea I thought it was a controversial stance. I didn’t know MIT stood for Making Immigrants Transfer
Posting to top comment for visibility. Looks like it’ll be reverted. https://github.com/Microsoft/TypeScript/issues/25376#issuecomment-417174902
Looks like it’ll be reverted. https://github.com/Microsoft/TypeScript/issues/25376#issuecomment-417174902
Same way as always, pull it with your own server and take control of CORS.
This is an awkward tone to use regarding reddit's CORS policies while posting to reddit. Read the reddit API documentation.
Not looking to grab the json data. Looking to scrape the HTML.
Very awkward, but hey Reddit typically gets the job done.
Why? What is there thats not in the JSON? (Genuinely curious)
SOLVED: Using [all origins](https://multiverso.me/AllOrigins/) and using the 3rd "method=raw" call I was able to get the shit I needed. Thanks
Yeah, you can do that with the API all the info is there... I'm actually taking to you through RiF.
Looks like the #1 contributor will be reverting this soon [https://github.com/Microsoft/TypeScript/issues/25376#issuecomment-417174902](https://github.com/Microsoft/TypeScript/issues/25376#issuecomment-417174902)
Tried this approach, it seems like u still need to use ES6 to write the components (things like createClass no longer exist) so it won't work with ie11, at least i couldn't find any up to date documentation about it
I like how you squeezed both "lightweight" and "micro-library" in the same headline. The buzzwords are strong
@evocateur revoked his stance: https://github.com/Microsoft/TypeScript/issues/25376#issuecomment-417174902
No, you're dumb. That's not what it means. Stop it. Take a psych or sociology class you literal moron.
Lightweight alternative: [https://github.com/iamkun/dayjs](https://github.com/iamkun/dayjs)
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://www.newsweek.com/g00/children-families-separated-border-patrol-979766?i10c.encReferrer=aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnLw%3D%3D&amp;i10c.ua=1&amp;i10c.dv=14) - Previous text "[1]" [Here is link number 2](https://www.theglobeandmail.com/opinion/article-the-unspeakable-cruelty-of-trumps-child-migrant-camps/) - Previous text "[2]" [Here is link number 3](https://www.vox.com/2018/7/5/17536984/children-separated-parents-border-how-many) - Previous text "[3]" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
@quotesThePresident
aye, shit makes me sad. you should check out this thread from r/node \--&gt; [https://www.reddit.com/r/node/comments/71snxa/npm\_ceo\_if\_you\_are\_not\_a\_white\_dude\_and\_have/](https://www.reddit.com/r/node/comments/71snxa/npm_ceo_if_you_are_not_a_white_dude_and_have/) just read the comments. pretty awful. i imagine it's largely because of the main demographic found on reddit (and in programming circles in general)... middle-class to upper-middle-class white men who don't really have much of a grasp on these things. you get a lot of "GET YOUR POLITICS OUT OF MY CODE" kinda shit.
Looks like Jamie has also been removed from the Lerna group (or he chose to leave)
Yup, they just reverted it 10 minutes ago or so. https://github.com/lerna/lerna/pull/1633
Yep, here you go: https://github.com/lerna/lerna/pull/1633. 
There is no need to be rude, libraries like LitHTML and HyperHTML do exactly what we need just aren't ES5 friendly as they use template literals. &amp;#x200B; I am not anti-builds or tooling, I was just hoping for a solution that doesn't require them as it's one more thing that the team have to learn, one more thing the team has to set up and one more thing that can break on our 18 year old Frankenstein's monster of a product that is already full of technologies, dependencies and complication. &amp;#x200B; Getting the company to train our team is not an option and if there was a budget for training I'd rather it be spent on accessibility and backend things I've been trying to get people to learn for ages. &amp;#x200B; If transpiling and more builds are the only way to go it's the only way to go, I just wanted to know our options before I chuck a bunch more technologies into the soup and condemn myself to being the react guy or whatever cos no-one else has time or motivation to learn it
Was wondering why we can't do `await` at the top level and came across this great explanation. It's also interesting discussing exactly how things are loaded - it's not something I often hear/read about in the JS community 
read rule number 5. &amp;#x200B; edit your post to point out flaws in the argument without being mean
I'm glad they reverted, but I am even more glad they kicked out that unstable character James Kyle. I really hope that TC39 will likewise remove him. Not as any sort of punishment or retaliation, but because individuals like him have no business being in any sort of leadership or power positions. It's frightening to think that he may yet be able to affect JavaScript as a whole.
There are so many red flags in what you've just said, the only place to start is: why aren't you trying to find a job at a different company? The world is short, not flush, on competent developers and there's no reason for any engineer who is competent enough to ask the questions you've asked with the perspective with which you've asked it to be working in such a seemingly terrible place, technically speaking. Especially not now that the era of remote employment seems to be beginning in earnest.
Wording seems to imply that he got kicked out due to code of conduct violations.
Who could have seen this coming...
Wow. Ok, thanks for doing that. I guess marketing has bloated our container then.
You can use var mapAsc = new Map(\[...map.entries()\].sort());
Thanks for the update, added an edit to my previous comment.
Welcome to open source. An unfortunate number of self absorbed narcissist in that lot
It's something like Vue . So basically, JavaScript will update all the {{img}} , with image paths dynamically. If you check the above link you'll see the implementation
Hi /u/redditorbeginner, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/ALRN00777, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
That’s not what Palantir said though, that’s why they said “such as”
Wow lmfao losers
No problem! It only took a couple minutes and I was interested in the size after our discussion. If you have other questions I can try to help out.
Sorry, use this var x = new Map(\[...map\].sort((a, b) =&gt; a\[1\] === b\[1\] ? 0 : a\[1\] &gt; b\[1\] ? 1 : -1));
If you look at the repo contributors, he hadn’t even made significant contributions to Lerna in over a year .....
I understand the sentiment, I just don't agree. I get that most programmers want their software world to be beautiful and pure and unperturbed. (That personality is probably why they like computers in the first place). I just don't agree that they should always be allowed to have that. I don't think there's an ethical justification for that stance, it's just a want. Especially since the ability to ignore the outside world is something granted only to certain lucky groups. So I'm not really worried about a "dangerous path" where software people get their jimmies rustled and are occasionally forced to get involved with the world around them, I'm more worried about a dangerous path where the rational people stay furiously agnostic and do nothing. And I [don't think that human rights violations are a "political" debate](https://www.amnestyusa.org/immigration-a-human-rights-issue-not-a-political-issue).
If you don't need stateful class components, you can do a lot using just functional components. Then no need for JSX--use React.createElement to define the component structure. Of course these don't have any lifecycle methods either. If you need state, maybe take a look at Hyperapp: https://github.com/hyperapp/hyperapp. Its only about 4KB. It provides state management out of the box. Is written in ES5, and you can use its h function like React.createElement to define your component's markup. It gives you lifecycle hooks on the elements, unlike React. You can just load Hyperapp from a CDN and define your app in ES5.
Thanks for sharing, your links are helpful and very useful for someone like me. On my way to learn javascript!
There is an existing [Stage 2 proposal](https://github.com/tc39/proposal-top-level-await) for allowing top level `await` though.
This has been reverted so congrats
Hey im apart of the Lerna core team now and we've addressd all license issus. You can check here for more information! And the changes approved by myself and Henry Zhu from babel who joins me on the newly formd Lerna Core team! Sean Larkin &lt;3
I guess the silver lining of dealing with a megalomaniac is that it's easy to find out what he's worked on (and hence what to not touch with a ten foot pole): https://jamie.build/
Heh, well that was *fun* while it lasted. It was interesting reading about all the problems and unintended consequences it was going to cause. Though hopefully this is the last time someone will try something similar.
They're a good bunch of people, we are just seriously constrained financially which means we don't have enough devs to do everything as well as we would want. Staying afloat and reducing our massive backend technical debt is the priority so simple and robust solutions are what we tend to look for :) 
The FOSS community already suffers from infighting and fragmentation due to internal politics (systemd vs. sysvinit, the Gnome vs. Unity fight); it's a bad idea to mix political activism and code, which will only exacerbate the infighting and lead to big tech companies getting scared off from contributing to FOSS.
It'll be fun to watch [this article](https://motherboard.vice.com/en_us/article/8xbynx/major-open-source-project-revokes-access-to-companies-that-work-with-ice) get revised.
That's good to hear! Thanks for all the awesome work you're doing in the JS community!
You could do sth like `url_for('static', filename='photo')/{℅ raw℅}{{ img }}{℅ endraw ℅}` In jinja2 anything inside a raw block will not be interpolated.
I thought I was the only one who thought this ... In the current environment of witch hunting anyone having a dissenting opinion I must admit I never had the balls to call him out on stuff. Even on twitter &amp; on some of his github projects his been quite aggressive towards people asking questions/clarifications or suggesting changes.
Imagine spending all this time to write an article about something that lasted less than a day
Add a value property corresponding to the year (as a numeric type) to each object and then just sort by this property 
[#1630](https://github.com/lerna/lerna/issues/1630) TL;DR: He was opening tickets in other repositories calling people racists and telling them to quite their jobs.
I was wondering how long the rollercoaster was going to go. 
That guy seems like a madman, would hate to work with any individual with those kinds of tendencies. Narcist, almost psychotic. Best for him would be to delete all his social accounts and go for a 1 year mental break. Some counceling could do good too. 
Oh yeah, I'll probably change the project name if I ever come up with ideas for a regex library :)
I think he meant sth like this ``` getYear = y =&gt; Number(y.year.split(' ')\[0\].replace('+', '')) years.sort((y1, y2) =&gt; getYear(y1) &gt; getYear(y2)) ``` 
I am to believe that other extremists will follow his example and try the same bullshit to enforce ones agenda...
Unfortunately, I doubt this will be the last time there's politics brought in to a project that can have such far reaching consequences. Even for all the good intentions, it turned into a nasty crusade on an unsuitable platform. I do think it'll serve as a lesson to many who might consider trying something similar.
Each option could be something like {“year”: “1 year”, “value”: 1} etc, and then in your sorting callback, you just would do (a, b) =&gt; a.value &gt;= b.value ? 1 : -1 (this assumes you don’t need algo to be stable) Now you might also wanna sort by the string directly but you’ll be relying on the specific formatting and the fact there’s an actual number there, so sorting by values instead should give you more flexibility.
The right call. Unfortunately, he banned the majority of people who called him on on the Lerna repo so there's not going to be a great deal of support for this in the issues there.
Not really. Nobody is arguing that his argument is wrong because of the hypocrisy, they are calling him a hypocrite for using a platform owned by Microsoft to ban Microsoft from using his project. Frankly, I haven't seen anyone attack his position, purely his methods.
Yeah it’s not easy at the start, but keep at it, only way to get better at it is on pure perseverance and just not giving up! Doing projects is the best way to learn. You will inevitable get stuck at things (for a while), but that shouldn’t stop you, I would say the reward of figuring it out after hours of frustration is quite worth it. Good luck!
I think there is a nuanced angle here though, and it applies less to OSS than to tech in general. Take, for example, developers refusing to add crypto back doors to their software for government agencies to make it easier to spy on their customers. I realize it is not identical, but the Venn diagram of code and activism does have some overlap. Protecting users is a slightly different from than banning other developers.
What do you mean? You can't really "ban" people on GitHub?
&gt; avoiding static external stylesheets Why would you want to do that. I swear, the JS ecosystem is perpetually stuck at reinventing the process of reinventing the wheel.
Good luck not touching JavaScript (as he's in TC39), and when you're still touching JavaScript, good luck not touching Babel
I'm actually just now struggling with a task that I tried to use date-fns for. The problem is this: Given two dates and a time period in milliseconds, return all the time points within the range that are a multiple of the period (locale aware) with regards to the closest 0 moment (eg. 20 second period should be 0:00, 0:20, 0:40, 1:00). date-fns offers pretty good functions for this, startOfDay etc, that when combined with an imperative loop of adding the period to the first 0 moment until we pass the second time point gives me the points but only usually. If the day has a DST change between midnight and 6 AM, adding 6 hours to the midnight time point will return 5 or 7 AM depending on which direction we're changing to. I expect leap seconds will cause similar havoc. Weirdly enough, this approach seems to work correctly (6 AM in DST changed with 5 or 7 hour difference) when tried out in the console on the date-fns website but both the latest release and the alpha prerelease always return a punctual 6 hour difference time point when put into development. I'll probably need to find a better way to generate the time points (like halving the range until length is less or equal to the period and finding a potential time point within that range...).
He said Babel was his project, and he’s made no contributions to it since 2015 (!)
The same is true for MarionetteJS (end of 2014) and Lerna (mid 2017), but it's still listed on his site and according to the comment I replied on we shouldn't touch those with a ten foot pole
You can at the project level. It's supposed to exist to rid yourself of abusive people, but in this case it was the abuser doing it. It's called blocking on GitHub I think.
Well my point is that there’s we shouldn’t not touch Babel or Lerna just because he was a contributor in the past. Projects he owns on the other hand should be avoided (like Glow, which I was a an excited user of, but for which he has left PR’s open and ignored and hasn’t updated in months). 
Nobody here actually got the point or supports the idea behind it anyway. Maybe the way he did it was not much acceptable but he got his name and the point out there in the world. 
yay! Im glad to hear its fixed for you 😊
[This take](https://github.com/lerna/lerna/pull/1616#issuecomment-416820399) is interesting: &gt; all contributors implicitly agreed to the existing license, of which I am the original license holder, when they submitted code meaning we are within our rights to relicense. I'm not a lawyer (but neither is @kitten's, I'd presume), but I can't imagine this holding up. That would mean they can also turn the project closed source, including someone else's contributions? And if so, why is anyone bothering with CLA's?
Jamie didn’t create Lerna. The owner of the Lerna repo and organization, Daniel Stockman (who has made many many more significant contributions) booted him. Jamie was just a collaborator with push access who hadn’t made major contributions to Lerna in over a year. https://github.com/lerna/lerna/graphs/contributors That reviewer (Sean Larkin) is one of the maintainers of Webpack. https://twitter.com/evocateur/status/1035021975981154304
lol "coup"
You may want to check Module and revealing module design pattern. [https://addyosmani.com/resources/essentialjsdesignpatterns/book/#revealingmodulepatternjavascript](https://addyosmani.com/resources/essentialjsdesignpatterns/book/#revealingmodulepatternjavascript) 
In case you haven't gotten the update yet, just wanted to let you know that they have officially reversed the changes to their license: [lerna/lerna#1633](https://github.com/lerna/lerna/pull/1633) So you and your team should be fine continuing your use of lerna.
### That's simple 1. Your array is wrong. It should just contain the numeric value. That way you can sort it easily, and then add the text to it. 2. If you can't change the array's values and the information is coming from somewhere else, then tell the somewhere else person to sort the array values for you. 3. If that's not an option then you can do something like this: ### Javascript example: /** Your original array example. */ const years = [ '1 year', '20 year', '2 year', '10+ year' ]; /** Test a string for containing the + character. */ const testPlus = (str) =&gt; str.indexOf('+') &gt; -1; /** Take just the first number from a string. */ const filterNumber = (str) =&gt; Number(str.match(/\d+/)[0]); /** Return a number, or if there is a + character, also return that number times 100. */ const getSortNumber = (str) =&gt; filterNumber(str) * (testPlus(str) ? 100 : 1); /** Iterate your array, map it to add the numerical sort value to it, and keep the original string value. */ const sort = arr =&gt; arr.map(str =&gt; ( { number: getSortNumber(str), value: str } )).sort((a, b) =&gt; a.number &gt; b.number); // Store the result. const result = sort(years); // Log it. console.clear(); result.forEach(item =&gt; console.log(item)) ### Result {number: 1, value: "1 year"} {number: 2, value: "2 year"} {number: 20, value: "20 year"} {number: 1000, value: "10+ year"}
Yeah, mine too, so we agree!
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
You can be banned from projects. At least posting issues. I was banned by this guy when I called out his BS: https://www.reddit.com/r/golang/comments/57w79c/why_you_really_should_stop_using_iris/
&gt;let c = e.key; if (c &lt; "0" || c &gt; "9") { e.preventDefault(); } if you put limit, the issue i say stays.
Great, thanks! I was not aware of such list existed.
&gt; or, if you need to support older browsers and don't mind a bit more transpiled code, via Babel with the ES2017 preset. I didn't think there was _any_ plugin or transpilation that turns async/await into ES5/6 compatible code? I've seen a few WIP projects, but nothing ready for production that would polyfill back to a promise so something like ie11 could be supported. Wrong?
I worked on a Government healthcare app January this year, and the RFP we responded to clearly said "IE only" was a requirement.
As with any code base: you ether have to be fluent in a specific language -&gt; understand what the code is doing -&gt; think about the way it is done -&gt; therefore become better in using a language or know exactly what the code is doing (know the results) -&gt; become more familiar with the language itself &amp;#x200B; So, in you case, find something you what is doing and start reading the code.
I wonder how this would have played out if the modified license was in place from the beginning. Theoretically it doesn't sound so crazy to restrict a company from software you write if you have a grievance with that company (I know it stops being "open source" at that point, but that's a separate issue).
Wauw... I'm lost for words really. He sounds like someone that I would not want to spend any time with at all.
https://codepen.io/Ryuukaze/pen/rZWpJw
On the other hand, it's at least partially thanks to everyone who wrote serious articles about it that it *only lasted a day*. 
There have been many groups that went through *hell* trying to get everyone that contributed to approve a relicense, and many that have specifically required pre-agreement for relicensing. If all they needed to do was say that statement above, they wouldn't have gone through all that trouble.
What kind of odd spam is this? Anyhow, a little tip for you: Java is to Javascript as Ham is to Hamster.
Thanks! I’ll try this.
I found it! So basically a repo owner just needs to block a user and that will prevent the user from opening issues and viewing their repo repos. You can also block users at the organization level. 
That people with those beliefs are unstable? Is that the point? That is what a lot of us got out of it
After looking at it, I admit I didn’t look originally. Sorry. What if you changed the JavaScript to look for something else? For example {&lt;&gt;} or {||}? 
Ahh yes, makes sense. Thanks for reporting back about it.
Sounds like he might be mentally ill
Yes, I wholeheartedly agree! Thank you for posting this, u/biyanigroupofcollege, you really contributed to the discussion.
Really well stated. Thanks for sharing. 
Sublicenses are not relicensing. Kitten doesn't understand how licensing works apparently.
In particular note the part labelled "Isn't top-level await a footgun?" which links directly to the gist OP linked. They're keeping these things in mind while discussing/developing the proposal.
Very good!
Nice. An outdated web technology on an unrelated subreddit.
&gt; What kind of odd spam is this? About what I expect is on offer when I get emails offering SEO services tbh.
This might be just what you need: [https://bigmachine.io/products/the-imposters-handbook/](https://bigmachine.io/products/the-imposters-handbook/). I've not yet had time to read it myself but I've heard good things.
I like this! Thank you for sharing. It's going in "This week in Web" on [The Web Platform Podcast](https://thewebplatformpodcast.com/) \- hope you don't mind?
We need to stop hobbling JavaScript because of a fear of breaking compatibility with a stupid decision of nodejs to do sync require a decade ago. 
If I was a contributor and this license change was not rolled back within 24hr, then the maintainers and repository host would most certainly be hearing from my lawyer. Regardless of the stance, I would not tolerate my contributions to an MIT licensed project being appropriated for political grandstanding.
Hey man, not sure if this will help you but I had to do the exact same thing a while ago: &amp;#x200B; *// This function returns an array of intervals starting at exactly the given start time.* *// The last interval will be either exactly at the end time (if they precisely add up) or some time before.* **function** getIntervals(start, interval, end) { **let** intervals = \[\] **let** currentTime = start **do** { intervals.push(currentTime) currentTime += interval } **while** (currentTime &lt;= end) **return** intervals; }
jQuery is neither shitty nor is it a framework. 
JQuery is shitty and a framework. Check yourself kid. 
Nice! Here is a good looking AST visualizer you might prefer to [https://astexplorer.net/](https://astexplorer.net/) \--&gt; [http://resources.jointjs.com/demos/javascript-ast](http://resources.jointjs.com/demos/javascript-ast)
Chefs 😂
It’s a *library*. You basically described a library in your description of it. Perhaps your judgment of jQuery as a “shitty framework” is due to you failure to comprehend the difference between a framework and a library. Also, this “kid” is probably twice your age, kid.
&gt; Nobody here actually got the point ...kinda contracdicts &gt; he got (...) the point out there in the world. While I'm very much sympathetic to his dismay and certainly wouldn't call him many of the names he's been called on just this page, I do think this was a very ineffective (and possibly _counter_effective) way to get closer to the world as he'd like to see it. (For example, I've observed that it's far better to just _be_ a vegetarian, than to _tell_ people that you're one or even that they should be one - at least in terms of getting other people to lower their meat consumption.)
Not quite sure what you mean by putting a “tag” inside a function. Can you elaborate?
He may not be in TC39 for long. They're looking into it.
&gt; "I won't accept any PRs for unicode because I don't want those communist Chinese to use my code" is the kind of thing being referred to here. That may be what you meant, in which case I agree with you, but it's not what you said.
MIT let's you take it closed
Hi JS devs, I've written an article about implementing *MVVM* architecture into *React* project. I love *Redux* and functional way of writing Javascript code but I wanted to emphasize that it's not the only option that we have. Therefore, I implemented *MVVM* architectural pattern into *React* and made it more *OOP*. I'm wondering what do you think about *React* with *MVVM* and have you tried something similar?
lol. One persons framework, another persons library, same shit different smell. Listen here old man river, just because you’ve sat behind a screen most of your life, married an unattractive beach whale and have nothing else to grasp onto besides your precious knowledge of writing code, it doesn’t make you anything special. In fact, it just reinstates that your nothing but the person you were in your youth, that same kid that people through food at and used a comparison of ugly against. Don’t sit there and try your blown out persona on someone sharper than you. Don’t forget who you truly are inside, you’re the same old weak individual you’ve always been, the same person who would allow someone to push in front of you in a line, call you wife a fat hooker and you would do nothing to defend her. Go fuck yourself you dwindling fool, I’m not someone you can impose your cocky attitude against, I’m alpha and you’re beta. Know your place and know yourself. 
He claimed Microsoft stole all his Lerna code for their own project and Microsoft handled it very well: https://github.com/Microsoft/web-build-tools/issues/673
Hi /u/SophiaBrereton, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
``` function outer(a) { function inner(b) { return a + b; } return inner; } var f = outer(3); // f is a `inner` function that has available `a` variable in clousure f(5); // inner has only one argument `b`, so `a(3) + b(5)` = 8
Right, new contributions can be closed, and you can take old versions and distribute them without having to share the source. However, I don't think you can prevent anyone from using the already-published code under MIT, and it wouldn't be a very useful license if you could.
Not what I said when? I only made one comment.
Hi /u/pm_me_ur_happy_traiI, please refrain from personal attacks. Thanks.
Do you perhaps mean this one? [https://caniuse.com/#index](https://caniuse.com/#index)
maybe [https://caniuse.com](https://caniuse.com/)?
Use /r/LearnJavascript for this. Ask them about closures. Or just search the web for explanations about closures. There are probably about half a million things written about them. Or even use the search feature in reddit. There have already been explained about a couple thousand times already.
`f` is a higher order function, which means it is a function that return a function (here with a fixed parameter, a kind of _partial_). ```js f(3) = function (x) { return x+3 } ``` Here f(3) could be named `add3`.
I found it: [http://kangax.github.io/compat-table/esnext/](http://kangax.github.io/compat-table/esnext/) Thanks! I was interested in particular in the: [`optional chaining operator (?.)`](https://github.com/tc39/proposal-optional-chaining)
outer() returns the function *inner* where **a** has the value 3. So basically var f = function inner(b) { return 3 + b }; The outer-function sets the scope for the inner-function. Inside outer, **a** is 3. So for the inner-function **a** is 3. You return inner() with **a** scoped to 3.
Source?
Is there a good distinction between the two subreddits written up somewhere? And no problem! Happy mods make for a happy Reddit!
I'd refer to [this comment](https://www.reddit.com/r/javascript/comments/8u12gz/converting_for_to_foreach/e1c0k71/). The process could use some improvement, but it's hard to do much with the tools we're given.
You could use the search feature on this subreddit and find a fair number of answers already given the various times this has been asked before.
From /u/GamesMint &gt; Hi &gt; I have posted something similar on Quora and medium. I wanted to share on Reddit as I find more active JS learners here :) Any reason for asking this? The reason I ask is because your post was filtered on submission, and thus not visible to the public. And yet, somehow it still got 40 upvotes? That's highly suspicious.
&gt;highly suspicious I am still not getting why this is highly suspicious. Any action you want from my side? &amp;#x200B;
Could you please link the source of this information?
Do you have a source for this?
Usually I associated "programming" and "mentally ill" with the creator of TempleOS, .i.e. talented and productive. This other guy has gone the other extreme.
I haven't read your article yet, but one of the reasons I love React is _precisely_ because it doesn't use MV* in any of its various incarnations... it's simply too awkward in web browsers (I don't have problem with MV* itself, I used it successfully with Flash in the past)
The project wouldn't have taken off if it was in place in the beginning.
That's at stage 1, I really wouldn't bother with it unless it reaches stage 3-4.
True, but I use babel 7+ and I wanted to use it to try it out.
How did you increment the time? 'Cause this is what I'm already doing and using date-fns eg. 'addHours(currentTime, 6)' to increment. Tjis will not, however, succesfully take into account DST change and on a DST morning will thus show 5 AM or 7 AM instead of the wanted 6 AM. Taking the date and setting hours to the next number seems to work, but it is quite a tedious method.
Oh, sorry; I mistakenly thought you and /u/Death2Marxism were one and the same.
Thank god, but it's not enough. He can no longer be trusted to be in a position of "power". He should be booted from TC39 and all other organizations he holds ground in.
Why is the ability to reassign considered so bad? It never hurt me before, in all the years I used the horrible 'var'.
`var f = outer(3);` This is synonymous with `var f = function(x) { return 3 + x; };` Calling `f(5)` returns `3 + 5`, which is `8`. You'll note that the function `outer` _returns a function_. So whatever variable you assign to outer(x) will be a function that you can call later. // addX takes a number X and gives you a function // that takes a number Y and adds X to it. function addX(x) { return function(y) { return x + y; } } // a function that takes a number Y and adds 3 to it var addThree = addX(3); // y=2, 3+2 = 5 addThree(2); // y=5, 3+5 = 8 addThree(5); // a function that takes a number Y and adds 7 to it var addSeven = addX(7); // y=1, 1+7 = 8 addSeven(1); // y=10, 10+7 = 17 addSeven(10);
Like I said in the original thread about this. &gt; Progressives don't quit. They are burned out. BTFO
There will always be ways for bad devs to do bad things. The fact that someone MIGHT screw things up in a module shouldn't prevent me from using top-level await in the many many use cases where it makes my life easier. If people want others to use their modules, they'll follow conventions that attract other devs. There's no rule that you have to have a "tests passing" icon on your github project, but it's the sort of thing people expect to see from a module they're considering using in production. So, we're already vetting projects, and I don't see why a top-level import can't be handled in the same way. This is sort of like how if you use document.write after the DOM is parsed, it will blank out your page. Moving to a world where we expect almost everything JS to be async, we ended up in a place where all kinds of previously good third party JS modules were killing peoples' webpages intermittently (depending on how quickly the code downloaded and executed). Third party devs heard lots of complaints, and their approach changed or they were dropped. Doc.write is still a thing, and it still has cases where it's useful. Should we have considered removing doc.write from the spec because of this whole interaction?
Thanks so much for this answer! I understand it.
But it has *5* letters! This is bogus, man. I don't wanna type const, its stupid looking.
Thanks for the response yeah too bad animejs doesn't use three shaking but its a great tool too ! Have a nice day :)
Good answer!
Thank you!, i'll check it out.
It looks cool. I've added it into Tools.
Ok, I've added it. I looked at this AST Visualizer before but I didn't remember its name or address.
You mean you want to talk about this in "This week in Web"? It seems ok.
I had a similar idea! https://i.imgur.com/KUAh9vH.jpg
You mean like http://play.inginf.units.it/#/ ?
Thank you
The answer is quite similar to why someone might use a static typing system. By increasing the strictness of the language, it makes it more robust and less likely to introduce bugs. It might also make your code more readable, because you can communicate intent a bit better. Another similarity might be a language that has public/private/protected modifiers. You can definitely live without them, and maybe it won't hurt you that much.
Glad you got it working. Prefer to use url_for though, notice that the raw block doesn't contain url_for (see the snippet above). Should have made that more clear :).
Glad you got it working. Prefer to use url_for though, notice that the raw block doesn't contain url_for (see the snippet above). Should have made that more clear :).
This thread shows he pretty clearly only had malicious intentions: https://github.com/lerna/lerna/issues/1628 **hallister** &gt; You're going to introduce a major license change, refuse to change the license name and do it in a minor version bump? What the actual hell is your goal here? **jamiebuilds** &gt; To screw with companies that support ICE, was that not clear? Then further down. In response to this comment, "The best thing feasible for Lerna at this point is you leaving the project." **jamimebuilds** &gt; I left the Lerna project a long time ago, I've gone as far as to replace Lerna with a new tool called [redacted - because]. ----- He basically throws Lerna under the bus because he's "moved on". He basically came back to abuse the project. 
No-op means no operation. A function which does nothing.
You're right ... maybe he's changed his mind after all of this. *checks his twitter* https://twitter.com/jamiebuilds/status/1034975020684988416 Jeez, is this guy 12 or what? Yikes.
Yes. When you call `outer(3)`, you return a function that takes in `b` and adds 3 to it.
This sub isn't for homework questions.
&gt; IDOANAL I don't own... already not a lawyer? What? What does this mean?
Babel isn't required for JS projects. I've never used it directly, and don't plan to. Never understood the appeal.
I reached out to both and both they have confirmed they're looking into it.
ffs, if you want someone to do your homework, at least format it so that it's readable.
Cool, thanks for responding!
We use it because we have to support IE11. I'm fighting this, but so far am not winning the fight.
Hi /u/ziyad-177, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Thanks for your understanding.
I agree. I don't hate XML. I just know I'm usually happier when an API returns JSON, and usually less so when its XML only.
I was in a similar situation, took almost a year to move from sourcesafe to something better - svn. My choice was git but apparently that wouldn’t work for us. There is really no way to change a lead developer who is stuck in their own old ways. You can mention it to the dev but I wouldn’t cause any problems because of the version control. Stick with it or if it bothers you so bad, freshen up your resume and look for a new job. 
I read through your article. Before I say anything else, note that I do not think common architectures of nowadays are well defined. MVVM at a high level is the solution to the problem of the existence of conditions that do not allow the "business logic code" access to the view. Such conditions include the existence of multiple views doing the same thing talking to one "business logic code". In this example, the 'V', the view, would be in different technologies, developed by different people. Hence the "business logic code" / 'M' / "etc" can not talk directly to 'V', and hence the existence of 'VM' as a translator between the two. Think of events. Code can not be listening directly to events on 'V', because it does not know 'V', and instead it provides API to 'V', which is in 'VM', and leaves it to 'V' to call back when an event happened. If you ever developed a SPA, you used MVVM. Your 'V' was the code on the browser. Your 'VM' was your exposed API on the server, and your 'M' was very roughly the rest of the code on the server. In any case, if you are solving the problem of multiple views doing the same thing, or any condition where views are across technological barriers from one "business logic code", then use MVVM. Otherwise, it is just nonsense, I think.
Way to have a nice civil discussion, u/sieabah 
There really isnt any prerequisites as long as you have a good javascript fundamentals. If you have to pick one to learn first, i would suggest react. If you understand es6 instantiation pattern, how ‘this’ works under constructor function, and basic html. Then you can learn react easily. 
He’s gay and very proud of it, judging by his Twitter. That tweet reads “I do anal,” literally. 
Thanks for doing this and for your response
Thanks
What a cunt
www.regexcrosswords.com
Yeah, easier backwards compatibility is a good reason. I mainly do backend Node.js work, so it bothers me when I see it used there for mostly superficial syntax support. I'm more and more a TS fan though.
Currently in the same situation, except my company built it's own VC system... It's god awful too... I asked if there was a merge feature and was promptly hit with the response: "Copy, paste"... Ya I'm already trying to find a new employer. To be clear it's not just the VC system, but maybe this example alone can give you a general mindset of the company.
I agree. Bad VC probably means lots of old legacy code on platforms/frameworks that are no longer supported. We still have ActiveX and Com components. Run away if you can or stick it out if the money is good
I’ve used this example a few times now. You want to throw out the rule book because this is something you care about. You need to think about when it’s something you don’t. What if I said we need to stop “baby murder” and created a mob of people against abortion programmers/doctors. Forcing any programs where I contributed to change their open source license to restrict against the doctors. I imagine that wouldn’t make you happy. You simply can’t throw out the rules when it fits your cause. That’s a horrible precedent. If your cause does it, then causes you don’t agree with will do it next. Then it gets worse and worse. Just keep this crap out of programming. You will ruin it.
A lot of people are on TC39. You have people like Kat Marchan (from NPM), who was using TC39 membership as some sort of credential validation when she went on to trash talk Devon (Parcel author) on Twitter, but you also have the likes of Brian Terlson, who are extremely professional and who've actually championed proposals all the way to stage 4. In terms of who's just padding resumes and who's actually doing the legwork, this page speaks for itself: https://github.com/tc39/proposals/blob/master/finished-proposals.md I spoke to Henry (Babel's main maintainer) when he was here in SF, and I'd say he cares very deeply about the OSS community, and he's got integrity. Incidentally, he was one of the people to approve this PR to revert Lerna to vanilla MIT.
Take a look at the post yesterday: https://www.reddit.com/r/javascript/comments/9b8sue/lerna_revokes_license_from_companies_who_are_ice
Take a look at the post yesterday: https://www.reddit.com/r/javascript/comments/9b8sue/lerna_revokes_license_from_companies_who_are_ice
Thanks!
We can try to help, but what you are asking is a bit unclear. Also a bit unclear what is your knowledge level about the subject. Did you build the website, or did you hire someone and now trying to figure out how to fix the code that person wrote ? 
Thanks so much! I have no experience with javascript. I did the design for this site, it is a Wordpress/Woocommerce installation.
Over the 8/23-29: 200 users visited our site. Number of people on the site yesterday: 26. How would something like that be traced down?
Babel is primarily maintained by Henry Zhu, who incidentally approved this very PR to revert Lerna back to MIT. Jamie also contributed to Yarn but someone had mentioned that he had no ownership powers there to be able to do any real damage. I believe the same stands for Flow. I will, however, stay clear of projects like unstated, bolt, react-loadable and glow.
Yes murderers with pregnant wives should definitely be let go, especially if they are brown :(((((
He contributed a few hundred lines to Yarn so I wouldn’t worry about that one. And it’s been years since he’s contributed to Flow. But yes, stay away from his other projects 
Hi Sophia, this is the site you are talking about? https://www.carexportcompany.com 
I'm saying that accused murderers should be *arrested on the spot* if there's a warrant out for their arrest. You're being absurd if you think otherwise.
Get a Trello board and break the project up into small tasks. Prioritise the tasks on the board and pick them up one at a time. Learn what you need to learn for each task.
Okay, I will see if I can figure something out looking at the logs. The site is https://emportllc.com. I think even looking at the logs isn't going to help much, since I am not sure what I'm looking for. Is it possible that one of the plugins got damaged somehow? Thanks for your patience.
I don't recommend overpriced courses. Udemy's "everything is always on sale for 90% off" business model really irks me. That said, I don't think there's "too much" in that course, let along "way too much". There are a couple things in there that you might not use directly, but you'll probably use in some form or another eventually. If you're making a web app, HTML, CSS, and Javascript are the very minimum of languages you'll need for the task. 
&gt; Because you know what murderers do? They kill people. It's in the name. Wanna have an innocent's blood on your hands if they kill another person while you oh so &gt; compassionately wait for them to see their kid born? Dude was driving his wife to the hospital. I don't think he'd have gone off and murder anybody while *he* was waiting for his kid. I also love the black-and-white morality inherent in that. The dude was wanted in connection with a guy who was beaten to death more than a decade ago, that does not mean he is an unrepentant killer who yearns to strike again.
That's not how plugins work. The culprit is likely one of the following: - You have a buggy plugin - You have an unreliable provider - Your server/database/application is misconfigured Without knowing why it went down it's impossible to know what caused it.
Just npm install nosleep and you're good!
[https://twitter.com/jamiebuilds/status/830575350039982080](https://twitter.com/jamiebuilds/status/830575350039982080)
first-class function principle
That's actually wrong, you can transpile it like it is a promise (everything past await goes inside the `then` function), and you can polyfill promises. So it's possible and not even that difficult Both Typescript and Babel have been able to use async/await in IE9 for years now.
Wait, that's the same guy? I remember reading about this a few months back and thinking that it sounded like a bunch of kablooey (as it proved to be), and my opinion of him has just dropped a few more notches.
He is also the guy who [claimed that Microsoft's Rush stole a bunch of code from Lerna](https://github.com/Microsoft/web-build-tools/issues/673) a few months back, a claim that was eventually proven false.
My idea/Concept for university project: [https://github.com/stepanvanzuriak/Finite](https://github.com/stepanvanzuriak/Finite) 
Hamburger artists.
Well, I was going to respond seriously to this post, but the following two lines have convinced me that you're not engaging in good faith. This response, then, is for others who come across this post, and not for you. &gt; Most people don't even pay attention to such details. The encoding used for text is not a "detail", it is fundamental to integration in to the larger software ecosystem, and not supporting Unicode is a massive problem for anyone who doesn't speak English - or even anyone who wants to use smart quotes, math symbols (e.g. β, ∉, →), or Emoji (🍰). &gt; an anecdotal perspective not based on any science whatsoever. What we are discussing is not empirical. No experiment can determine what a word means; it's a code of communication on which some humans agree, not an objective fact. Bringing the word "science" into a discussion about what is, basically, software ethics and philosophy, is a tactic used by many to derail conversations. You're right. I can't give you data to prove that code is political. You can't give me data to prove it isn't. We're not having an empirical discussion, and you seem unwilling to acknowledge that.
And that's a frankly retarded position to hold. You don't hold off arresting someone who allegedly killed someone else. 
The case is a decade old. A few hours delay won't make a difference to justice, but it will make a big difference to the mother and child. Plus, the murder warrant wasn't even [the justification ICE gave](https://www.cbsnews.com/news/ice-detains-joel-arrona-lara-driving-pregnant-wife-to-hospital-wife-and-attorney-claim-mistaken-identity/). They stated originally that he was detained for illegal residence in the country, and only later brought up the murder warrant, which is still kinda uncertain.
That is not much traffic for anything really. Traditionally for a website, the server sends full pages to be viewed with the browser. With Ajax, the webpage would have a JavaScript program that would request only the needed information from the server and modify the current page to show the new info to the user without having to bring in a whole new page. Is there any thing in your pages that could be making hundred or thousands of those little requests ? 
See, this is what I thought, too. We really don't have a buch of dynamic content. Thanks so much! 
This is the official one: https://github.com/tc39/proposals
not sure if this will help or fully address your needs but it seems pretty close. tried following this a few months ago for my own purposes and i must hav done something wrong along the way, hopefully you'll have better luck. https://hackernoon.com/full-stack-web-application-using-react-node-js-express-and-webpack-97dbd5b9d708?gi=8af15323fe8f
Heres so intuition as to why: &amp;#x200B; \`Infinity\` is a number. \`0\` is a number. Therefore \`Infinity / 0\` is a number. Therefore \`NaN\` is a number. QED
Someone uncovered even more dirt here: https://www.reddit.com/r/programming/comments/9bgq0u/chore_restore_unmodified_mit_license_by_evocateur/ &gt; James has been sucking up to [Seb McKenzie] by writing docs, linting code and fixing typo [...] At first it looks like more than 255 commits, wow but [...] most of it is updating version in package.json or adding one liners to the doc. This guy is the biggest fraud ever and took advantage of 16 year old McKenzie to gain prominence in the open source world while being a toxic parasite and a bully https://github.com/babel/babel/commits?after=15f456651abcb6102728f2e6f214aac3e07b935b+34&amp;author=jamiebuilds 
Keep in mind though you’ll add like 60kb to your JS script in the meanwhile in polyfills and transpiling garbage. I went down this rabbit hole building a heavily used script for my company and ended up rewriting it all without using async/promises.
&gt;I assumed that meant it was a Ruby app but apparently that is not the case....this is a javascript app. the readme says you need ruby because compass, the library for css, depends on ruby. but it may be possible to work around it. is it possible to use [compass with npm?](https://www.npmjs.com/package/compass) did you try runing `npm install compass`?
I mean that's the reality of open source: People can explicitly tell you/your company to fuck off and there's not a thing you can do about it unless your lawyers can find a way around it.
Name not withstanding, it makes perfect sense to me. It is "not a (valid) number" which is part of the possible set of number-type data.
Mentioning mobx and react-select is a little strange; but then leaving out redux and react-esque view libs like preact and inferno make me a little suspect of this article.
Man. I should start committing version numbers and see where that gets me.
was there any real friction between frameworks? at least amongst the grow ups
if you want to prevent selected text from being erased/replaced when a key is pressed too, then use this. if (e.selectionStart === e.selectionEnd) { let c = e.key; if (c &lt; "0" || c &gt; "9") { e.preventDefault(); } } else { e.preventDefault(); } 
That didn't age well.
Haha thanks, man. I've never really looked in 3d modelling but this has definitely piqued my interest!
Thank you so much for this. It’s a great read and explains a complex topic really well. 
After minifications? This sounds strange. I know the polyfill is around 7KB, not sure how much the transpilation adds but in my minds they just rewrite the code using promises. It shouldn't be much different from the solution (callbacks?) you used. Anyway I would take the 60kbs for productivity in most of the cases
Also requires runtimeRegenerator which is this: https://raw.githubusercontent.com/facebook/regenerator/master/packages/regenerator-runtime/runtime.js + the promise polyfill recommended by MDN appears to be 20kb + about 30% more code by volume through transpiling (in my experience). If this was a web app I wouldn't have a problem but it's a script that runs on large publisher's sites and so if I can be inconvenienced and send out a very optimized 8kb script vs a 70kb script with polyfills, async, etc., then it's better for them and my server. :)
I have never seen anything like "framework wars" between Vue/React. Dan a few months ago was tweeting about how he was impressed with Vue. Just for the record though React is better and Vue devs still wet their beds
Sooo... no demo... no code... and some screenshot of dark gray bars...
Hi /u/jimbarbara, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/3deTech, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/SEPTEMBREE, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/bigblue2k2, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/lip3k, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Thanks for your understanding.
Hi /u/Phycist161, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
It’s deleted now but I remember a few months back he posted a Twitter poll asking if he should kill himself, the dude needs serious help.
Selectively excluding consumers of the project is actually a violation of open source. It wouldn’t be open source anymore.
Glow-in-the-dark CIA something something.
FWIW, he was opening tickets in Palantir repos and saying that Palantir was a racist company due to their $43 million contract with ICE. Palantir responded saying that their contracts were with a specific part of ICE that's less objectionable than the border stuff. Basically, he attempted to do something reasonable (open a discussion within the open-source community about how these projects can be used by bad actors -- ICE border separations and passport denials to Latino Americans), but he did so in a hasty, childish way that was clearly not going to work. The open-source programming community doesn't have a great way of discussing these types of usage or ethical issues (and perhaps it shouldn't), but if reasonable people don't have these types of discussions consistently, then it regulates the conversation to outbursts like this one, from people like him. IMHO, it is reasonable to open a ticket asking to move away from TSLint due to the alleged practices of Palantir (tslint sort of acts like free advertisement to engineers by Palantir). It might also be reasonable for the open-source community to open tickets within palantir's repos questioning the practices of Palantir, who is a member of that community. But, yeah, this guy missed the mark and lerna's response has been terrible
the best javascript resource out there is at mozilla website, yup don't underestimate their tutos, it has exercises at the end, DON'T SKIP THE EXERCISES !! [https://developer.mozilla.org/en-US/docs/Learn/JavaScript](https://developer.mozilla.org/en-US/docs/Learn/JavaScript)
Which is weird because Apple is supporting Opus for webrtc and several other components (carplay I believe), but not audio file support. https://webkit.org/blog/7726/announcing-webrtc-and-media-capture/ https://developer.apple.com/videos/play/wwdc2016/722/?time=514
thank you for suggesting \^
Not sure if you would have the same success with this method, but it has worked for me and I’ve taught myself many many many languages since. JavaScript is a very relaxed language, so it’s sometimes easy to make errors and not know it (browsers sometimes are more or less lenient). What I would do is go to codepen.io and find some cool pens that you find interesting or cool, then go through and rewrite the pen from scratch (codepen if you don’t know has all of the source code there in a live editor). I used other sources when I was learning, but only bc codepen didn’t exist yet. The method is the same one that I’ve used to learn every language I have ever learned. Only difference is that when I was doing it I had to find websites and extract the code to rewrite them. The reason I think this works (my opinion) is that when you take this route, you are looking at results that you find interest in, then rewriting that exact code. When learning anything, it’s 100x easier (and more pleasant 🙃) when you have an interest in that thing. Best of luck!
This is a question asks almost(?) daily in this sub, and there are innumerable sites &amp; books to choose from. Unless you give us some more information - e.g. do you know any other programming language, why did you choose to learn JS instead of another language, what do you want to achieve with it or even what your background is (middle school, high school, college or finished?) - you won't get a better answer here than from google.
This is a question asks almost(?) daily in this sub, and there are innumerable sites &amp; books to choose from. Unless you give us some more information - e.g. do you know any other programming language, why did you choose to learn JS instead of another language, what do you want to achieve with it or even what your background is (middle school, high school, college or finished?) - you won't get a better answer here than from google.
1. Learn about the fundamentals of programming with JS (variables, data types, boolean values, conditionals, arrays, objects) 2. Learn about DOM Manipulation and event handling. 3. Start building stuff (start simple), and google everything you don’t know or understand. 
#HAHAHAHAHAHAHA
If you don’t want to use the API then the only way you have is a webpage scraper. Retrieve the page, parse its HTML, look for bits that interest you, store them and compare with previously stored values.
Yes..I have not shared this post anywhere. I have edited this post multiple times so you can check that also.
No problem, I thought it was worth a shot. I did take a look at the sidebar, and didn't see anything about it not being appropriate.
I'm assuming the last part was a joke too. A joke Vue devs wouldn't get.
It is worrying that the JS community has a lot of these figurehed characters mixing politics with open-source software. First with the Ayo fork trying to push out Rod Vagg, and now this. Is this happening in other communities too?
Type "TracersyMedia" on Youtube and buy his courses (on Udemy), do some projects on your own and you're set! &amp;#x200B; Brad teaches about everything, I learn how to work with APIS with his videos, I learn PHP to a level in which I can defend myself on Interviews, etc. &amp;#x200B; He is just the best. &amp;#x200B; I recommend you learn Ajax and Fecth API.
good series. 
watchandcode.com if you’re looking for tutorials about practical JavaScript. 
What's the bare minimum you need for a PWA (to get the "install" prompt and to have it run offline) if your entire app is baked into a single HTML file (inline scripts, css and images if any)?
Spelling JavaScript correctly is a great start. You're already on the way. 1. Lynda has great videos, they can be accessed free if you have a public library card. 2. The MDN website is a great resource. 3. Code doesn't exist in a vacuum; learn DOM manipulation, HTML and CSS to understand the 'big picture'. 
Get a job where you have to code something in JavaScript by Friday(this means before Monday at 6:30am for most companies). If you don’t get it done you get fired and can’t make rent. Source: Someone who made the deadline. 
I just ignore the haters and continue to learn whatever is in demand. Rather spend my time coding than arguing about which framework's dick is bigger. 
Hmm.. not sure if you're looking to develop your own extension or just use one already out there. If you just want a simple solution, i'd reccommend **User JavaScript and CSS** extension. I've used it for years and it saves code and executed it whenever you hit a matching URL. I have tons of pages where i inject JS to create a button fixed on the screen and execute some function whenever I click it. It's perfect for me. I'd assume you would just need to have it spawn a button (document.createElement) then just use a simple loop to pick up all of the selectors of the links you want to open &amp;#x200B; something like this: var openProfiles = (limit) =&gt; { let count=0; document.querySelectorAll('a .linkselector').forEach(link=&gt;{ count+=1; if(count&gt;=limit){limitwindow.open(link.href);} }) } &amp;#x200B; hope this helps :) &amp;#x200B;
this won't work if the page uses a framework and not simply static html files in that case you'd have to use something like [nightmarejs](https://github.com/segmentio/nightmare), which has some... quirks.. you have to learn to navigate through use
If you expand it out, remove the loop and multiply the values out manually, it becomes this: setTimeout(() =&gt; console.log(5), 0) setTimeout(() =&gt; console.log(4), 300) setTimeout(() =&gt; console.log(3), 600) setTimeout(() =&gt; console.log(2), 900) setTimeout(() =&gt; console.log(1), 1200) setTimeout(() =&gt; console.log(0), 1500) So it sets up a bunch of `setTimeout` calls immediately -- and as time plays out, each one gets executed - once `1500ms` is up, the last one fires. &gt; if I make it (5-4)\*300 or (5-2)\*300 or anything else without 'i' `i` is the variable that gives each interval the dynamic nature.... if you replace that with a static value, -- e.g., the first one you specify -- it becomes the following: setTimeout(() =&gt; console.log(5), 300) setTimeout(() =&gt; console.log(4), 300) setTimeout(() =&gt; console.log(3), 300) ...etc... so they will all fire at the same time.
&gt; In first iteration i=5, it makes setTimeout (5-5) You are starting with i = amount -1, so i = 4 and it's logging out 1, but in 1200ms. Then it asks to print 2, in 3*300 = 900ms Then it asks to print 3, in 2*300 = 600ms Then it asks to print 4, in 1*300 = 300ms Then it asks to print 5, in 0*300 = 0ms When i run countdown(5, 2000) I see 5 printed instantly then the rest in 2 second intervals. 
Thank you! You're right. It seems to be an issue of class attributes, still unresolved now. Thanks anyway!
haters get out blub is da best.
These jokes are worse than Vue devs
Maybe with [exercism](https://exercism.io/tracks/javascript)
the first iteration (5-i/5) does print immediately. As for the following iterations, 5-4=&gt; 1\*300 (300ms), 5-3=&gt; 2\*300 (600ms) and so on. Therefore the time is increasing with each interval, which is why it takes longer to print the remaining intervals. Because each interval is run near-instantaneously, each interval is in fact slowing, you just don't notice this because the times are NOT stacking, therefore, the times are equalizing at print time.
Do you happen to know any good resources about dom manipulation and event handling? Learned python and trying to figure out JS but every tutorial just starts busting out JavaScript browser APIs that I’ve never even heard of. So even though I’m comfortable with fundamentals, frontend JS seems very different than your normal backend language in terms of how it’s used.
An exhaustive, but very complete way is to set aside 3-6 months and go through these books: \- Javascript: The Definitive Guide by Dave Flanagan \- Javascript: The Good Parts by Douglas Crawford As you progress: \- Study Javascript framework source to see best practices and clever designs. Leverage them too. \- Use MDN Mozilla as a supplemental guide. \- Keep the current ECMAScript spec next to you when you need a deep understanding of the language
&gt; it sets up a bunch of setTimeout calls immediately exactly. I finally got this. Brain keeps thinking that second print starts after first is finished, but not the case. they all done immediately, so time interval is set from the beginning, and not one after another! funny staff, I realized it during watching tv-show, not during coding session :) Now I hope I won't forget it easily :) 
yeah, wish they could explain it as good as people on reddit :) 
Be right back. I’m gonna go comb through the docs for a big project like React or Babel and submit a pull request for a typo and when it gets approved call it “my project.”
Be right back. I’m gonna go comb through the docs for a big project like React or Babel and submit a pull request for a typo and when it gets approved call it “my project.”
Somehow this is the most upvoted answer on this post
Why did it boggle people's minds? Don't know anything about.
Babel is fun when you realize it was built by a 17 year old. 
Thanks for this tutorial series. I learned so efficiently.
Programmers with different tastes are natural enemies. Like Java devs and PHP devs! Or Python devs and PHP devs! Or NodeJS devs and PHP devs! Or PHP devs and other PHP devs! Damn PHP devs! They ruined web development!
The code is working fine for me. Are you missing something? 
if there was a bracket mismatch issue, how would it work fine for you?
i just figured out that it works on [repl](https://repl.it) but not on codesignal.
Excellently worded, the only thing I would improve is when you're showing the Promise's resolve being passed into the setTimeout, maybe actually show a long(or short)hand explicit function. And then calling the resolve within it, just for clarity's sake. Lesser experienced peeps probably don't understand passing by reference, or maybe they do, who knows!
I have read this and I have literally no idea what this package is for. Does it format your computer? Make doritos? You really need more detail. Actually, maybe **less** detail and a better overview.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Are you vue dev?
This was a great read! Thanks!
I hate when that happens. That's why I don't comment....jk
Why would I need babel to convert typescript to JS. Doesn't typescript do it for me?
\&gt; [http://kangax.github.io/compat-table/esnext/](http://kangax.github.io/compat-table/esnext/) &amp;#x200B; Ah, that's pretty cool! This reminds me of [https://node.green/](https://node.green/) &amp;#x200B; Now we need a table that shows the intersection of those tables.
It does, using the typescript compiler. Some folks, however, use typescript with react applications. May be thats where it is used. I've not tried it myself, but that's my understanding so far. 
I think you should know why JavaScript had callbacks in general. Callbacks are basically a way to deferring the processing until a specific condition is met. It is important because it steps your browser from freezing white waiting indefinitely for the condition to complete. In your case, the API call may take a long time to complete. You don't want the browser to do nothing while waiting for the request to compete. That's why all these processing is done asynchronously with callbacks. Now if you are just angry with callback structure, there are better ways to solve the problem with promise and async-await. I suggest to have a look at the syntax of Async/Await.
This always ends up as a huge mess
How is this project different (and/or an improvement) from `yarn`, `pnpm`, and other third party clients?
Thanks for the feedback! That's actually something I agonized over. I had the same thought that maybe passing functions around by reference might be a little too difficult for the target audience. I think I'll leave it for now though, as if somebody doesn't get that at first, then figuring out exactly what is going is probably going to help their understand of asynchronous JavaScript anyway. 
Yes, I'm pretty much angry with the callback structure. I may begin to work with promise and asyinc/wait. &amp;#x200B; Thanks for the reply.
What do you mean by the "device tools"?. &amp;#x200B; I'm not sure what you're asking but if you're working with CSS/Sass you may check this website which is pretty good.... I don't use it but since you said that you "copy" the style you want to your files, then this website will obviously help you: [https://css2sass.herokuapp.com/](https://css2sass.herokuapp.com/)
I meant the chrome dev tools, sorry
&gt;let c = e.key; if (c &lt; "0" || c &gt; "9") { e.preventDefault(); } } else { e.preventDefault(); } it already being erased/replaced. the issue is about putting limit.
This sounds like a shill post
The best way to learn how to write good apps is by writing a lot of apps. Like everything else, it takes a lot of practice
I've been writing javascript for a long time, and using truthy tests still bites me in the ass. I've no one to blame but myself and my own laziness. Just the other day I was banging my head against the wall trying to figure out why passing `0` into a function was throwing validation errors -- lo and behold, the following appears: if (!some_param) { throw new Error('provide some_param!') } Kicked myself in the pants when I finally put a debugger on it and stepped through. The article provides an example for dealing with this for an options parameter -- this also works: if (some_param == null) { throw new Error('provide some_param!') } Note the double-eq -- this ensures both `null` and `undefined` will raise the exception. Another option may be default parameters -- but these won't be used if the param is `undefined`, i.e. if null is explicitly provided, the default is not used.
The book Head First Javascript is really good, it's in english though, not sure if you are fluent or not, but it's a good book for getting the basics down
Yes, but Babel compiler is more reliable now. Now with Babel you can (finally) extend from built-ins (arrays for instance) without errors. Typescript compiler has always had this issue.
Definition from Wikipedia: &gt;copyright holder grants users the rights to study, change, and distribute the software to anyone and for any purpose. Since it got restrictions on who it can use (basically license got revoked from said companies), it doesn't fit.
Glad to hear :D
Very interesting, thank you!
Definitely weird, but Safari is left behind in many respects, adoption of standards is even slower than Edge at the moment. Which is really a shame, cause it’s holding back mobile web development as a whole 😢
I'm very confused - is this a parody article or..?
FTFY: You (probably) shouldn't use truthy tests (in JS) This is far less of a problem in other languages.
What kind of json? Why would i want to generate json file? One parameter is a path. Path to what? You have to write better description. Besides that, it's great that you made your first npm package, good for ya, but work on that description :)
Did you just... ? What? Really?
The modern method to render a countdown in Javascript would be to use `requestAnimationFrame` (or NPM raf package) to render the current difference of `Date.now()` to the end time.
Thank god! The debate raging in my mind was leaning towards that conclusion but with the amount of utter idiocy I've seen in the form of Medium posts I could not be sure.
1. Yes ES6 2. Not sure, but i belive book is updated regullary 3. Dont know about c/c++ but deffinitly, in js world frameworks changing and replacing one another fast, JavaScript always stays. 4. Dont think so, WebAssembly would be overkill for many things on the web, so js will "always" be there.
Honestly, yes. People can be surprisingly tribal about JS frameworks. And in my experience the Vue community is by far the worst. Even the mildest criticism is is met with downvotes and abuse. Like, personal abuse, not technical counter-arguments. 
Personally I find this approach fastest for most things. Occasionally I’ll debut something tricky in the dev tools. But using gulp, scss and browser sync is pretty efficient. 
&gt; there are a few things that evaluate to false: ... And the mysterious `document.all` (...sometimes)
Thank you for your opinion. So basically I should thoroughly test redux part of the app - but what about certain logic that is part of the (Container) components, sometimes even presentational components could have state, which handles certain UI stuff - is it okay to cover such components with "just" snapshot testing? Snapshot testing is basically comparing the output of the component with certain props to a snapshot? If I recall correctly, snapshot testing is not a preferred way to do tests, I guess it just depends what exactly is expected to be tested? 
The typescript compiler (sans babel) supports JSX, so react isn't a problem and babel isn't required.
maybe you should consider doing something else.
It's still stage 2: https://github.com/tc39/proposals#stage-2 It's been there for a while. There are some things to figure out, but I'm pretty sure everyone expects it to make it in, especially given how Typescript supported it early on and angular's dependency on them now. If you're interested in what's preventing it from moving forward, you can check out the issues: https://github.com/tc39/proposal-decorators/issues
It's not really over. Lerna was just the highest profile project with the licence change. If it wasn't for that, it would have gone largely unnoticed. He's made the same licence change to all of his projects, including many published NPM packages.
Did I say something offensive? I was just wondering about a doubt that I was having, I was not intending to insult JavaScript or someone, so next time you reply to somebody, try to be polite(or don't answer) and less rude.
Because it was labelled as an "unstable API" for years, and its use was always discouraged. Then the new version came out, very different, and everyone was wondering if it would replace Redux or something like that.
No, real question. I asked it here because I know a lot of JS folks use/build various docs services.
How much it took you to do all these animations? Are they really hard(near impossible)? Your website is awesome btw. 
1) ES5 is a subset of ES6, so you may as well start from ES5 2) A book from 2011 is likely to be outdated unless it's constantly updtated. My go-to book is "You don't know JS" by @getify 3) are there any fields where the more you know the _worse_ you will be???! 4) who knows, in any case not for a while
Where's the sound? For it to be perfect, I want to hear the key presses and the end of line bell. And why not a typewriter font in the demo?
Well you just got me started on GitBook so thanks for that...
Please elaborate.
You can read here: https://babeljs.io/blog/2018/08/27/7.0.0#class-c-extends-htmlelement Fix available from Babel 7
[Parcel](https://parceljs.org/) does exactly what you're looking for, but keep in mind that it doesn't automatically set up your project for you like CRA does. That just doesn't really exist, outside of maybe using snippets and emmet in VSCode.
Straight into ES6. It has a lot of quality of life features for devs.
And how would you use a framework with no javascript knowledge?
Have you looked at [Yeoman](http://yeoman.io/learning/)?
In fact, the WebAssembly FAQ specifically states it is not there to replace JavaScript.
http://www.initializr.com
Thank you! Forgot where this left off. 
Javascript is one of those languages which I found easiest by practice, you don't need to learn anything until you actually have a play with it, which is notoriously easy (your browser console, for instance) Get to know what functions are, how to declare variables, different key words. THEN learn about the JS event loop, this is what pushed me personally further in my career and I was able to understand more about how JS code is actually interpreted and executed. I honestly wish I had learned that sooner in my 5 years of JS. You should then head over and become used to checking out the MDN Web docs. They are my goto resource for learning new javascript (standard library if you will) functions and types. Not everyone will agree with this process as I encourage a try-before-you-learn process, however this is exactly how I learned and I have a very solid understanding of the language. I cannot/have not found any decent books that focus solely on the language itself, rather than the browser and libraries. This annoyed me until I found YouTube, where you have people like MPJ and other who discuss the purity of a functional language like javascript. If you didn't read this properly then you won't get the best from it, which is lesson number 1 with learning to program. So Learn it and and learn it good. If you did, well done and I hope it helped you. ~LS