Looks like you deleted the repository, and the public files with it.
Same on Firefox
I’m getting 1 FPS in Safari on an iPhone 8.
GIF
Not much server side knowledge here, but I do believe this works: const express = require('express') const app = express() const app2 = express() const port = 3000 const port2 = 5555 app.get('/', (req, res) =&gt; res.send('Hello World!')) app.listen(port, () =&gt; console.log(`Example app listening on port ${port}!`)) app2.get('/', (req, res) =&gt; res.send('Hello World 2!')) app2.listen(port2, () =&gt; console.log(`Example app listening on port ${port2}!`)) 
you can pry my console.log from my cold dead hands
Same here, and apart from being used to it and ease of use I have a scenario where I have little choice: I have a library that performs (bluetooth or network) communication between peers, and if I were to set breakpoints and stop one side there would be timeouts. Even without a timeout, the whole timing would change, I really want the communication to proceed in real time and only collect what's going on in real time *(not on the network, packet sniffing is not necessary, in the software)* and look at it afterwards.
The only potential issue with this is that people tend to package and nobody JavaScript files together. Even if you do pretty print in the console it can be a pain to find where you need to debug
"vanilla" js isn't an actual thing, it's more like the absence of using a framework that performs tedious tasks on your behalf, allowing you to focus on writing application logic. a framework will hide all of the dom update code for you, if you write your own dom update code that's typically considered "vanilla" 
/r/learnjavascript
you should not avoid console.log() completely, it is still good for simple tests like if the code had executed or to echo a single variable, it's simple and fast but I agree when it comes to bigger problems, some more sophisticated ways could be done
I am learning Js hence the homework. 
They meant this is better suited for that sub. This one is more for project releases, advanced/technical information, etc.
I messed it up I want to delete this post to avoid confusion 
oh ok, sorry noob here. 
Thanks, yes and no - it is what I was searching for, but vs code still doesn't recognize it always, so I've given up on implementing it this way.
ok I will looking into this. thanks. 
Why would you delete your entry?
Some advice I got once: If you can't easily debug your code with console.log your code is overly complicated and should be simplified Whether that's true or not is up for debate, but I think there's at least some merit to that school of thought
I preffer these 2... [https://www.shadertoy.com/view/Xdlczl](https://www.shadertoy.com/view/Xdlczl) [https://www.shadertoy.com/view/4dSBDt](https://www.shadertoy.com/view/4dSBDt) &amp;#x200B;
What made you choose Konva over the others?
Console.log will show you were it was logged from, which is huge in unstable code that you're still working through. 
Here's fine. Try it again. 
Isn't this what source maps were made to solve?
As someone who has worked hard to make the Firefox debugger better, I generally disagree, you can use the two in ways that compliment one another. 
I would like to point out, in last browsers versions, **svg + ecma6** is really kicking about performances. Svg use graphics acceleration, canvas is not (with getContext2D). For high refresh rates with a lot of elements, identical rendering on all devices, css on elements, scaling, mobile usage, svg is better. It can be shorter to code too. **But** to feel good with svg, learning complex javascript canvas manipulation is really advised. 
I think they were primarily meant to deobfuscate/debundlify (is that a word?) production code when there's a need for a readable information on where the error/bug actually occured, etc. So yes, they were designed to simplify debugging, but on a different level.
Yeah. I've had to cut down a lot on my usage of debuggers. Since it causes me to write less tests
I really think it's at all levels. If your toolchain is creating sourcemaps then debugging is a breeze no matter where you're investigating. I use it daily when debugging angular 6 code, and only use console.log if for some reason I can't figure out where I need to set my breakpoints (or I need to easily inspect objects from a stream).
That's true. :) Modern webdev can utilize sourcemaps in many different ways (i.e. we, among other code like JS, use it to get back to SASS when analyzing CSS rules). What I meant was the basic reason they were created to begin with, although it's just my speculations. ;)
I got you a present, don't open it until you're home: \`(new Error()).stack\`
I didn't even know you could go from CSS to SASS :P
Understandable, it happens pretty often.
Right, I usually use it when hitting an endpoint real fast just to make sure I set up my promises and async/await correctly. "Oh it came through, good, now I can start building the component that uses this."
This is a Code Smell. Don't mistake this for necessity. You will need to learn other debugging strategies for networking, other non-determinism, meta-issues like memory leaks, non-accessible legacy code.
It depends on how early in your build process you start moniyoring changes for the sourcemaps. We did it in an early stage before SASS got compiled and bundled down to a single CSS file, so with the maps loaded, the browsers show SASS files instead of the generated CSS.
Yeah, I actually can't remember the last time I needed a debugger thanks to redux and react chrome dev extensions. With that stack at least, if you can't solve something with a quick console log or 2, then you can switch to the dubugger. 
There was a quote posted last time something similar was posted, along the lines of "what my CS professor told me" (I'm paraphrasing from memory as my search is failing to find it): &gt; A beginner developer relies on console.log, the intermediate developer uses the debugger, and the expert developer uses console.log.
On my side (LAN &amp; localhost): **Chrome:** 60 FPS **Firefox:** 16 FPS **Edge:** 12 FPS **Android Chrome (Mi 5s):** 30-40 FPS &amp;#x200B; It seems like V8 is really good at optimizing JavaScript.
this really is cool but i have 0 experience with game decelopment :(
I have a chrome extension called "Fuck It" that lets me right click and remove elements from a website. I do that every time I read a medium article
Excellent work, thanks for sharing it
Hmm interesting. I'm mainly annoyed by it on mobile though, anything for that?
&gt; If code is making your life harder, it is bad code and should be replaced with better code. Unless it is code that makes your life harder now but much easier later on.
I wrote a reply, and before posting it I realized it's saying almost the same as you! I'll post it, since I took the time to write it, but it's pretty much the same thing I think... There's a benefit to console.log()'ing that using a debugger misses: one consolidated view of what's going on. What I mean is that sometimes it's really nice - and I would argue more efficient - to have 20 log messages in one place you can read through and spot the issue rather than having to step through the code little by little. Sometimes, that holistic, consolidated view is exactly what you need to solve the problem and the little mental break that occurs when you step through each line of code can actually get in the way. Plus, stepping through code means that you're focusing on the CODE, which when you're debugging is often times counterproductive. I know that sounds weird, but I'm concerned with what the code is DOING when I'm debugging, not immediately what the code actually is. I need to see the problem before I can solve it, and the code itself rarely matters when you're just trying to see the problem. A debugger forces me to think at the code level whereas console.log() gets me a level above that, which is what I need. At the end of the day, any article that says or even implies that you should always use a debugger over console.log() - or one that says the exact opposite - is an article to be ignored. Both have their places and uses. Right tool for the job and whatnot. Dismissing one out of hand is folly.
Download the app, it's better
I updated the site to generate 33x20 mazes instead of 20x16 mazes.
It’s so true. Logs are simply more productive most of the time. 
If the choices are HTML radio buttons (circle that's either empty or filled depending if it's selected) then that for loop in the setAnswers function is going to always end up choosing whichever is the final element in the array `buttons`, no matter if it's A...D or A1...Z17. If you want to pick a specific answer you'll have to do something to figure out which to pick inside that loop. You should really edit this post to remove the username &amp; pass. Handing out a username and/or password online is a terrible idea, no matter if the username or password are used anywhere else or not. Once one account is stolen it's far easier to chain to others. Different passwords are a great deterrent, but a cracker (malicious hacker) finding out your email address is not a good thing and can easily lead to multiple accounts being stolen, and not all sites properly hide email addresses from the user themselves (as they should). I've only got a mobile so I can't easily view the source as it is on the page even if I do login, but if you'd like to try sharing the source from the page I can try to give it a look. I think it's going to come down to a need for a "database" of Q -&gt; A though for the loop, which of course will require knowing all the answers so points to it being easier to just do it by hand. Lol. Is this an attempt to automate homework, or some actual homework, or what?
I have never seen code in a higher level language that could not be debugged with logs. Same is not true for the debugger - though mostly for multithreaded environments. Anyway logs are simple to use and work almost universally 
Here's some hints for you: `const tableContainer // = TODO: find that DOM element by ID "mountains"` `const table = document.createElement("table");` `for (let i = 0; i &lt; MOUNTAINS.length; i++) {` `// TODO: create new row, cells` `// TODO: populate data into cells` `// TODOL set style on every cells` `}` `// TODO: append table to tableCointainer`
I love the fact that you can edit variables in debugger at runtime, sometimes it really speeds up development/debugging.
Here's some hints for you: `const tableContainer // = TODO: find that DOM element by ID "mountains"` `const table = document.createElement("table");` `for (let i = 0; i &lt; 0 /* TODO: change to array size */; i++) {` `// TODO: create new row, cells` `// TODO: populate data into cells` `// TODO: set style on every cells` `// TODO: append each cells into row` `// TODO: append row into table` `}` `// TODO: append table into cointainer`
While that is true, as far as I'm aware, the only time pausing execution on one machine could become a problem is when there's a race condition.
Now I feel dirty reading the list. 
It changes the whole behavior. For example, my code takes care of sending just enough to minimize how much stuff either side needs to have in memory. It iterates over a graph of objects on disk on each side, and I control the speed of the iteration by feedback from the other side. Without it I'd possibly read waaayyyy ahead and have more and more stuff sitting and waiting in memory that cannot be garbage collected. So, very different behavior. In addition, lots of lower level components have timeouts. The code runs in node.js, low.js, React Native, browser, over websockets or over bluetooth. If I pause for a minute somewhere there's going to be a timeout. 
Ohhh. I see. Yeah that would make sense actually. 
Yeah I found fiddling around with breakpoints and stepping through debuggers to be tedious compared to just logging a lot of the time. It's a bit like comparing a GUI vs CLI. Different tasks suit one or the other better. But often the CLI/logging is just less fiddly and frustrating. I'll still use an interactive debugger for certain issues, but often just typing a few lines for logging is quicker and takes less distracting thought.
Open 3 terminal windows and run 3 diff processes... each bound to a diff port
This is a good article, but yet it is another rehash of many popular guides to canvas already. I am waiting for the day where an article actually goes more in-depth with the canvas element.
You only need CCS
What do you already know about building a website? This will be helpful in terms of where you should start.
Use the JavaScript debugger, client side code runs on your machine (browser) and you have full control of it. There’s no need to crack the hash, just use the debugger to modify the hash to a know value, or flip the == to a != (only invalid passwords will then work), or just remove the check entirely! There is never a safe way to check passwords client side, it must be done by the server!
I recently took over a project where the previous developers hadn't ever used a debugger. It blew my mind. I do use console logs often, but I'm not sure how I could ever manage without constantly being attached to my debugger. I feel like this is something that should be learned and implemented when you are getting your foundations.
https://i.imgur.com/qsqnoIu.jpg
and then sometimes the debugger jumps into React specific code for what seems like 800 function calls so you just hit 'resume'
This might help. https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889 
Lol
The debugger has its place. Sometimes it's just easier to follow something through because you're not sure where everything's going FUBAR. But yeah, 99% of the time console.log's faster and easier.
Not recommended. Using many videos as background animation will reduce the performance. Instead, you should approach canvas animations.
Does anyone use any logging libraries on the browser side, similar to Winston in node?
There's an extension called "Make Medium Readable Again" that I use to get rid of it.
!RemindMe 100 hours OP 🙃🙃🙃 where you at
I will be messaging you on [**2018-11-09 06:15:00 UTC**](http://www.wolframalpha.com/input/?i=2018-11-09 06:15:00 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/9u26kq/the_html_canvas_guide/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/9u26kq/the_html_canvas_guide/]%0A%0ARemindMe! 100 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Last one is a arrow function. 
Did you maybe mean &gt;= instead?
Exporting a frozen object makes it a singleton. That should be enough information to know if you want to use it or not
Oops
Still returns true
You must really be shit to manage to achieve memory leaks with JS.
I LOLed at this!
Because functions are truthy.
Yeah, click on react in the console, there is a little target icon you can click and then click on the DOM similar to how inspect element works. In the right hand pain you can see the props and state. I actually don't use react dev tools much (not sure if I should be). I even have a shortcut to insert a log, so it takes about 5 seconds to see those props, and then see them change along with other props/vars in other components you have logs as you use the app.
Gonna be super honest, console.log("here") is way easier than using browser tools.
I think that's the key of why the debugger cannot substitute console.log, as it won't ever catch a race condition. 
You're mean and incorrect. En garde!
The debugger is a god send when working in node
Found the author of Javascript.
This is a pretty weird edge-case, which basically never comes up in practice, but if you want a detailed explanation of why `null&gt;=0` evaluates to `true`, check out [https://blog.campvanilla.com/javascript-the-curious-case-of-null-0-7b131644e274](https://blog.campvanilla.com/javascript-the-curious-case-of-null-0-7b131644e274)
`null` is being coerced to a number (namely 0) in the relational comparisons, while the equality is handled by the [abstract equality comparison algorithm](http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3).
Except the expert is putting the \`console.log\` as the statement in a conditional breakpoint in the debugger instead of adding it to the code, saving, reloading.
Thanks!
Thanks!
Im creating the videos in after effects and exporting as .mp4. Do you recommend a different format for canvas animations?
And you can control the profiler with console.profile()
how do you debug GTM tags then?
I can't play with the source as I only have a mobile phone right now and no PC, so I can't easily be of much more use. I also tried to explain the issue with the code above, but I'll try to make it easier: getElementsByClassName searches the page and creates a list of elements, in this case the answer "buttons". Then it uses a loop to go through that entire list and "check"/mark each one. If those answer buttons are radio buttons as I suspect that would explain why it's only "checking" the last one -- radio buttons are generally in groups where you can select one choice from multiple; this is in contrast to checkboxes which instead allow multiple selections from multiple choices, which seems to be the behavior you're expecting. As the other user was telling you there is no logic in this code to pick a correct answer; it's just going to keep picking the final answer each time until something is implemented. This will require knowing the correct answers though and creating some form of question = answer "database" for the code to manage that. Seems like the original developer had a skeleton but never finished the project once they figured that out.
 console.log('HERE?'); console.log(myVariable);
Newbie here. For what is this exactly for ? 
How is Prisma? Do you still recommend it? Any gotchas? I'm not sure yet how it scales against postgres.
I'd be more likely to use the debugger if the support on Windows wasn't absolute garbage. It's especially terrible when you have an app in docker and trying to remote debug that. Very hit or miss, I save more time unfortunately adding console.logs, or implementing a proper logging library.
Word
Great now we have to deal with diferent debugging tools for each browser. F#ck it, console.log is universal, efective and simple.
The website url is required but you don’t have to ever use it. I’ve made tons of Twitter bots and I’d always put in something stupid like “uselessWebaite.com” Since your app won’t be public it doesn’t matter. They use the website url so that they can provide info about your App to users.
1) Micro-benchmarks can be gamed to show whichever result you want. 2) Functional-like programming brings a level of rigor and predictability to a code-base that's leagues ahead of bog-standard C#/Java OOP code. A better comparison would be F#-to-JS or Scala-to-JS, where the former languages shine since you don't need to bring in other libraries (like Ramda or Immutable) to get the best functional benefits. 3) No. A rising tide raises all boats. Web Assembly is improving Javascript just as much as it's improving statically-typed compilation to the web. 4) The rate at which new and better tooling is made *is literally* what non-Javascript programmers complain the most about with regards to Javascript. Do you want improvements to happen, or don't you? (I, for one, prefer having an embarrassing number of choices available for my projects.)
I got my professor involve she's helping. thanks. 
I know a minor amount of HTML CSS. 
I usually have to use it for timing issues nowadays. 
Hey did you use any of them ? I am also thinking of building a component that can be used by React + Vue SPA.
Hey, that's pretty cool!
You should probably be using const over let in most places.
Reactive stuff 😃
what am I looking at
I use the debugger, if the problem at hand is too hard to reason about. But in general, \`console.log\` is just fine.
What if I use JS in a non-browser environment? 
You probably need to compare the xy of the triangle and then the xy of your shape and then calculate where the your shape and the diagonal line could intersect. And as a result you add the appropriate behaviour. If that makes sense
I am a beginner been doing this for a year but I've found both to be helpful in different situations.
All I can say is I've thrown hashcat at this, using rockyou.txt and combination attacks. With GPU acceleration and an hour of running, it's got nothing. If brute force is the answer, it's a particularly painful one.
I strongly disagree with you. In French we call it "mepris de classe". And that describes when somebody rejects something just because it's not part of the bourgeois culture. If a recruiter thinks I'm stupid or ignorant I don't want to work there. And if a recruiter thinks that a bad thing to be poor I could get crazy mad at his stupid ass. &amp;#x200B;
Regarding 1), the TechEmpower benchmarks are far from microbenchmarks. And regarding 2), lmao at thinking JS is in any form more rigorous or predictable than C# (TypeScript/Flow perhaps, but those still have ugly gotchas bubbling up since they transpile to JS to be run.
I wrapped all my asynchronous `await`calls in try/catch to add the local stacktrace to the existing one using that expression. This way I get a full asynchronous stacktrace - at the (annoying) price of having to wrap every single `await`. try { await myAsyncCall(); } catch (err) { err.stack += (new Error()).stack; throw err; } 
Thanks for the heads up!
&gt; My goal is to use exported .MP4s and create a full page video background transition depending on the time zone the user is in when they access the site.
What about SessionStorage? Similar to LocalStorage but is cleared on page session end https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage
I have no experience in game development but I'd be interested in teaming up!
Thanks! I'm a relative beginner. Do you think this article is a good starting point? Where do you recommend we beginners learn debuggers? 
Sounds like you would still be subject to XSS attacks.
&gt; My goal is to use exported .MP4s and create a full page video background transition depending on the time zone the user is in when they access the site. Please don't. Really. Unless your goal is to create a website that is as annoying as possible, which certainly prepares you well for today's web... /s
Ugh try/catch around await is an insufferable weakness of the design. They baited us with beautiful, concise examples, but we the public did not read the fine print. I much prefer to directly use Promises for known exceptions inside an async function, because the interface is functional. For example, if instead of `return await myFunc()` I had `return callAndWrapResultInPromise(myFunc)` there would only one call site to make your change, the ridiculously named function (which my new framework conveniently saves as window.$) 
Your tutorial is all well and good but it fails to note the security risks behind allowing CORS to all (\*) requests which I think is especially important to newbies. &amp;#x200B; [Which Security Risks Do CORS Imply?](https://mobilejazz.com/blog/which-security-risks-do-cors-imply/)
In the article, the main reason you should avoid using localStorage is because if you using some shady library it can get access your local storage. This is true but then it is your fault to use shady library. Shady library can interfere more than just localStorage,
Then why not prevent XSS attacks in the first place. If someone can xss attacks your side, localStorage is not the only thing in risk.
I think u/metronome has listed the best approach so far. I'd add that based on the previous 7 levels, in addition to the password likely starting with "level8-", the rest of the password is also likely a lower-cased English language phrase concatenated with or without underscores (e.g. "level8-hello\_there" or "level8-hellothere"). Since the password has to be part of a URL, the characters must be url safe. Moreover, the input box is length 40, so that suggests 40 is the maximum length of the password. &amp;#x200B; That said, I tried brute-forcing "level8-" prefixed, lowercased alphanumeric + underscore combinations out to 14 characters (total, including the prefix) as well as with a passphrase wordlist (lowercased with spaces dropped or replaced with an underscore and prefixed with "level8-") to no avail. &amp;#x200B;
Besides why, the link is 404. 
I will have you skin pierced in less than 10 second! This wasn't a you pointed toward YOU, it was a generic you.
I also feel console.log() is not good. Especially when you have no idea what to log and where to log. Today, all projects are using webpack or other bundling tools. The JavaScript bundle is huge in my project, 20MB. If I open source in web dev tool, the browser simply freezes...
To your point ("The problem will tell you which tool to use to solve it"), one of the most compelling advantages of debugging this way is that you can live edit the code in place, in the current state, without reloading the app. Sometimes it takes many more steps than laid out in the example to reproduce a bug, in which case using the debugger is a vast improvement.
I really feel honored, Sir! :)
Saw BrainJs and thought: https://github.com/BrainJS/brain.js Still pretty cool though. Working my way through your well commented code. Thank you for providing a working AI/neural-net example in JS 👏
&gt;A beginner developer relies on console.log, the intermediate developer uses the debugger, and the expert developer uses console.log. Nice, exactly what I was thinking. I am an expert now!
It works, and it's cool, but you are loosing many level of debugging this way. If you use this inside a module with import, it will basically stay quiet for basics errors, like undefined variables. Too much of this can slow down the rendering a lot. I am keeping as my own rule to use try/catch only to prevent networks breakage.
Another LPT: Use debugger; statements for code that is hard to put breakpoints on. It was especially useful for async code before they improved async debugging in last few versions of chrome. 
Agreed 100. The following: &gt;Console.log(this.that.this.return.that) Error! This.that is undefined at line 9847 Is where object oriented programming is failing. Functional programming is better just for that. 
How exactly do I lose errors?
You must not practice a lot outside frameworks, probably.
There are, probably, other subreddits which can give you much better help than this one. Depending on what, exactly, your question is really about, maybe /r/cscareerquestions, /r/ITCareerQuestions or maybe something like /r/learnprogramming may be able to give you better advice. In any case, I'll tell you that I feel there's is something important missing in your text above: your goals. Nobody can tell you what you _want_ to do with your life, or even what you _should_ or _can_ do with your life. So asking if you should study this, or that, or going for a business career or whatever, is a futile exercise. I, in fact, think that there is no clear question in your text (there are many questions but none of them give a clear picture about what kind of answer you're seeking) precisely because you don't have that clear picture yourself. You just wonder, what should you do with your life, and see too many options. Well, I'm sorry but only you can answer that question. What is _more valuable_? Which option will give you a better chance to _succeed_? Who knows what the future will bring. Now ask yourself these questions: What is more valuable _to you_? What does it mean to you to _succeed_ in life?
FYI even the 2D context is hardware accelerated
I must admit I have no idea what your second paragraph says.
Similary in firefox «store as global variable» is extremly useful to me.
&gt;The JavaScript bundle is huge in my project, 20MB. This is crap, sorry. 
You use whatever the output is! It can be as simple as blinking a led!
I think it's very very interesting... but I hope your code doesn't have the same quality of your documentation...
Hey really cool!!
Clicking left of the line number in your editor to toggle a breakpoint is way easier than writing a new line and then possibly recompiling and reloading while usually also losing the current program state.
Like a server like node? Hope that they chrome debugging protocol. &amp;#x200B; For node, run \`node --inspect-brk code.js\` and connect your chrome or editor to the debug session.
With just async functions there's usually no big problems. Breakpoints work fine, but stepping through awaits might not work as expected. Unless of course there's some transpiling of async/await which breaks source maps, which babel did at least recently. For those cases I built a special dev version without transform regenerators and debugged the problem there.
A wrapper that will wrap and object and log when anything is done to the object, be it a function all or access or set a parameter.
Can't really understand why TC39 won't move forward with this proposal, it looks like it's there for about three years. Really liked this proposal so I've added it to the post but yeah, it looks stuck even though the "champion" assigned to it wrote its ready to move on..
I meant exactly that. Transpiled code is usually difficult to follow along.
Thanks! Let's keep this proposal alive! My guess is that there was a debate about one implementation details and they could not settle, then too many other things happened and here we are. I love them in React and in Classes. I think its way better than wrapping everything into a function for readability and clearly state its intent. 
&gt; The author has chosen not to show responses on this story. You can still respond by clicking the response bubble. I would advise anybody to not take articles that do this serious. Trust me and don't read any reply to this comment ;)
I know right, if only there was some way to stop execution inside the context you need so you can investigate any local variable...
There's no need to start your statement with "Men ...". It adds literally nothing to your argument and marginalizes some of our members.
Not to be confused with yew, which is a rust lib for ui
or firefox
I think for you it is important now to get from a hobbyist programmer to a real professional programmer. For me this means; basic software engineering education plus real world experience. I live in Switzerland and what I am going to choose because of that is 60% school at an university and 40% work environment for four years which will get me an Bachelors degree in CS. After those years I will have a network of people which will make it easier to get into new jobs and I have to required experience and education for most CS jobs. I do not know if something like this is possible in Hungary though.
yes
i always use console and never debugger, for ten years lol
Why did you choose the license that you did?
Thats interesting! Thanks for the tip :)
It kind of does. So pretty much if you had a triangle say in the center of the canvas you would get its xy values and place dots around those but not past them correct? 
Hi /u/cheap_blanket, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Both Google and Facebook use monrepo architectures, so it clearly works. The whole idea is CR's become easier because the shared components are stored in the same place as the app. At Amazon, we ended up building a tool that allows code reviews to cross repos but that's kind of the point: your internal tools really dictate which solution works best. 
******Spoiler alert****** for those who haven't started angular yet.
...ok... Its true I went with a comment wrote as if I was talking. Where I'm from, we start complaints with this noise: "Mennnn this sucks". There is actually no gender involved despite its original meaning. Boys and girls altogether use this and nobody feels discriminated. It didn't add much that's true... It's like a decoration. Makes me sound immature but I am not that mature... Really didn't think I would trigger anyone. Only on the internet can i find people that get triggered by everyday things. The other day I said "Thanks Guys" even though we can hear it on TV from girls talking to girls... someone got triggered. I actually don't speak English, I'm a French-Canadian. I've learned from Media. I tend to repeat stuff I hear. One funny thing that happened at my new workplace is English speakers are way more polite in real life than on Tv :) Which is perfectly fine and make sense but media makes it seems like everyone's super straightforward and slightly vulgar like its nothing. But it's not like that! Offended someone once. Anywho good luck on your endeavors. 
My guess is he/she meant to say "man" like "man... these pretzels are making me thirsty!"
Security in layers.
Still no pipeline operator? :( https://github.com/tc39/proposal-pipeline-operator
You are the chosen one.
Sounds more like someone couldn't write clean code and blamed the framework.
[KingomTrek](https://www.reddit.com/user/KingomTrek) \- it's a great question. And I am new to Monorepos, so my feedback will probably lack nuance. (as [soft-wear](https://www.reddit.com/user/soft-wear) points out, many tech giants already use Monorepos). KingomTrek - it's a great question. And I am new to Monorepos, so my feedback will probably lack nuance. (as soft-wear points out, many tech giants already use Monorepos). &amp;#x200B; In my case, working on an enterprise project is the what has pushed me into using a Monorepo. As an enterprise, it is essential to maintain consistency and quality across a range of products. Focusing on consistency and quality naturally introduces some overhead into the process. &amp;#x200B; If we maintain consistency by sharing components across multiple applications and platforms, then we increase the overhead of managing those shared components for numerous teams. That means one PR for a commonly used component, could turn into many PRs across a whole company. &amp;#x200B; For example: &amp;#x200B; Let's say one button component update to add an ARIA role for accessibility, effects four larger components. That button and those components are used in 5 apps in Team A. That's 10 PRs in 10 separate repos. And let's also say there are two other teams (B &amp; C), managing four products between them that each has 3 of their components built from our original button component. That's another 10 PRs in 10 separate repositories. &amp;#x200B; Now you have 20 Pull Requests in 20 repositories across three teams in 4 locations (distributed teams). How will all the teams across all the company's locations understand that the PRs for different apps are related? Each team has to run their set of tests, go through their team's review process, approve, build and deploy their changes. All we did was add a \`role="button"\` to our Button component, but we had to update the \`package.json\` file of 20 subscribing components and apps. &amp;#x200B; Naturally, this does not scale well; you're overloading the engineering pipeline of the company for small changes; which is why Google, Facebook, etc. are forced to use a Monorepo approach at scale if they want to move quickly. ("Move fast with stable infra." - Zuck) &amp;#x200B; The tricky part is that the Monorepo tooling is different (and more complicated). For example, the CI pipeline needs to understand that it should only build what has changed, rather than rebuild everything. But once you are set up, you can stop playing games of air-traffic-control when you need to ship small changes fast.
Unfortunately this proposal is still in Stage 1 and in it's early stages (not ready to move forward yet), it wasn't mentioned in the last TC39 meeting (the one that took place in September).
React Native: https://www.reddit.com/r/programming/comments/8qqhlz/comment/e0ll1dt/
BLAS ported to JS, new docs [https://github.com/jacobbogers/blasjs](https://github.com/jacobbogers/blasjs) 
[Office UI Fabric React](https://github.com/OfficeDev/office-ui-fabric-react) 
.net does not run in the browser. If you compile .net to wasm, that is still wasm running in the browser.
I believe the disconnect for many people is that it wasn't immediately apparent how important Custom Hooks were going to be. In the past, React components have been "a template + logic (and sometimes, only logic)." Now, logic is instead atomized into reusable Custom Hooks, and the component's job is to consume them into a template (or just run them). At least, that is how my Hooks code is trending, and it seems in line with your article.
Nope I haven't yet.
Is learning python better?
Thanks for the reply, I see your point with the exponentially growing Pull Requests and changes, I guess I was thinking more of creating a repository that was just the component library and then the apps consume that library to import their components, thus adding an ARIA label would be as simple as updating the component library that the children apps consume. I'm guessing that there is internal tooling most of these large companies use that allow them to compartmentalize code reviews and changes so you don't have to sift through as much to make small changes &amp;#x200B;
That makes sense, my only concern was creating a huge repository that is hard to manage via source control, but I think internal tooling would make that easier, plus strong consistent rules on the management would probably make it extremely useful, thanks for the response.
Good lord, just use Vue.
I ve never used any framework. I'm a C++ dev, Memory error is something I know, just not in JS that I've used for a while now.
Oh snap
Lol so much drama 
No, but why would you want to do this anyway? It sounds like you’re trying to work around a serious design flaw in your system.
Good point. If you're managing all your shared components in one repo, that's great. We thought about doing that for the project I'm working on here, but we have five apps that share components. We kept coming back to 5-6 PRs for a common change would create too much lock-up for us. I think you're right on the internal tooling. I believe Facebook and Google use homegrown tools like https://bazel.build/ and Yarn Workspaces and then release them publicly. Facebook had so many changes at such a large scale that they had to switch away from Git and use Mercurial: https://code.fb.com/core-data/scaling-mercurial-at-facebook/
You can achieve it with eval() but you shouldn't do if is not for testing purposes. You can declare the arrays as object properties, like `let accessibleArrays = { array1: [...], array2: [...], ...}` and use that function to get the array from the object with `return accessibleArrays[array_name][index]`
unfortunate lol
I found a way to get this to work. Instead of passing in the name of the array, i pass in the array instead which in return allows me to circumvent my issue. 
A common counter for this is that people build 'builders' using a fluent interface. More code and boilerplate but has the advantage that it is a single source of truth describing the contract which has to be mentioned vs a myriad of snapshots which get out of sync. 
but why
Now that's what i call "metal as fuck"
Since many months I am working on a new project template for webpack/"babel based ts"/postcss projects which can include front- and backend code (separated by "namespace"). Its still hugely work in progress, but after my mac almost didnt boot up, i just had to version it xD. https://github.com/witneyjs/witney (In the coming weeks I will add an introduction to the readme and enhance some last details)
Does anyone know the code for this?!!
That's a disadvantage of compiled js, not of console logging. 
[removed]
Decorator-based method caching? Sounds very interesting. Thanks for sharing!
[removed]
Reloading and losing current program state applies even with uncompelled js.
[removed]
yap &amp;#x200B;
Do you have any idea what the alert might read?
Sorry it was late. That was all to explain my idea: you can write a function that returns a Promise. Then use that function everywhere you now use await (yes you can do this!). Then, to add the cool stack trace construction you did, you'd only have to put that in one place, that function. Hope this helps
I don't have too much knowledge regarding XSS, but I'd imagine reading a cookie wouldn't be that much harder than to read SessionStorage?
It's your friend's name in ASCII encoding. Super easy to figure out. 065 = a 066 = b . . . 090 = z
I don't understand. You already have to do this exactly only once where it is needed. Or do you mean a wrapper function around async. calls? I tried that, I tried many things, including how stack traces look like when using `.catch()` instead of try/catch. What resulted in the best stack traces - and across platforms (my particular code needs to run on node.js, react native, browser, a backende library that.. "does stuff") - was this method. At that point I stopped micro-optimizing any further, because it really sucks to do this and I'm really just waiting for runtimes to produce async stack traces on their own (which should be relatively easy when `await` is used, teh "real async." option probably would/will have considerable runtime cost, in comparison, because it needs to keep track of a stack that's no longer there).
https://www.reddit.com/r/programming/comments/8qqhlz/office_365_ms_teams_skype_code_and_the_edge_debug/e0ll1dt/
As a matter of fact, [Microsoft _has_ used React and Redux to build Word Online](https://medium.com/@christiango/a-new-architecture-for-word-onlines-ux-platform-196e04c7528a). 
I will also like to know this as well. Since you have pg as your db, did you also consider Postgraphile (https://www.graphile.org/postgraphile/) ? I've been trying to research how these generators affect performance.
It’s meant to fail if a component’s render has changed. It’s useful if you update a component that is shared throughout the system. It highlights exactly what was affected by the change. Also useful if you don’t expect your component to be shared. Multiple failing snapshots would be a red flag. 
You said "the annoying price of wrapping every single await". My idea was to mitigate that by creating only one place that had to happen. But as you say, if you tried .catch and it didn't work for you than it's not helpful :-D
Well, Microsoft has used React. But would you have used React over Angular? My question was not about what Microsoft used really, but which framework would individual developers think is better for achieving such task.
Reading the article more it seems that the __snapshots__ are still there, but you can now just point them somewhere else. Which is a big difference 😅
Thanks for the answer, I've updated the question's details, please have a look. Thanks
&gt; If you're thinking that JS's garbage collection makes one immune, think again. No, I don't. &gt; So when you say one must be bad to do it, you're just wrong. One must be human to do it. Well bad dev are humans too, never denied that.
?
because you can
Okay so when I provide a good counter argument and you merely say no, I think you don't have any good arguments and are trolling. Prove me wrong pls and let's actually discuss.
Nice! I have switched our company over to using your grid and I'm loving it so far! You are quick to respond on Github and listen to the community. Please keep up the awesome work!
You could keep a KV hash of the arrays where the key is the name and the value is the array itself. Of course it may not be ideal if there's too many different arrays though. This would remove the need for passing it to the function, at least if you change it to something like: function selectFromArray (arrayName, index) { return this[ arrayName ][ index ] } And then call it like: selectFromArray.apply(hash, arrayName, index) Where hash is the KV of name -&gt; array and will be used as "this" inside the function. It would also be possible to use bind if you'd like to attach it as a method of an object, and use that same selectFromArray from above. Kinda like: const obj = {} obj.selectFromArray = selectFromArray.bind(obj) And then use it like normal: const item = obj.selectFromArray(arrayName, index)
Maybe I edited the comment after your posted yours not sure, read again and tell me. I'm not trolling, the first comment was a low effort reaction yes.
This small community is one I started as an extension of our other server's coding channel that grew too big for a single channel. Some of us are professional JavaScript and TypeScript people. Others are students. https://discord.gg/HwG8XX
Nice, thanks
That's not a bad github.
Can't wait for the followup: Why I Can't Find a Job in Development
hurray for no pay work!
Custom maps would make this a great tool. Festivals, tourism, neighborhoods, etc.
&gt;folders :)
Oh ye of little vision. That's like tossing the very first screwdriver out the window "why?" because actual screws didn't yet exist. This is nothing but a tool. What it enables is the cool part.
If you can swing it, a standing desk. 
[KingomTrek](https://www.reddit.com/user/KingomTrek) Hi, that was exactly my problem with current projects - we needed to share some packages (preferably in monorepo) but leave possibility to have single repository to e.g. give for the client (he don't have to see other related products using shared packages). I've bump into [https://github.com/mateodelnorte/meta](https://github.com/mateodelnorte/meta) \- and it was exactly what we needed. The biggest advantage is that it's simple - bunch of Git repositories/folders symlinked with each other. You can work on them using built in \`loop\` package that ease working on included projects/directories. 
[Varidesk](https://www.varidesk.com/?c3api=2863,8634424922,306536262665&amp;gclid=EAIaIQobChMIo8rNtoa-3gIVx1SGCh2MFgh8EAAYASAAEgK3tPD_BwE) is a pretty good option
i'll look into it, thank you
Here's a demo with more complex equations: [https://pshihn.github.io/math-ml/examples/torture.html](https://pshihn.github.io/math-ml/examples/torture.html) 
well she has been having on and off wrist problems because of the extensive time on the computer, she got a trackball mouse about a year ago and she said she really liked it BUT I have noticed in the last couple months she hasn't used it, is a track pad easy on the wrist as well?
programmers are very opinionated people. one thing we all like tho is a nice big monitor. get her one of those super wide ones.
I second this option.
I agree such projects are not for everyone. Thats good old choice of investing our time and skills. I might be wrong but how do you think great things are happening? Because of putting effort in advance. Not many shortcuts here. No must, its for people interested in this field 
Yeah, a trackpad will behave a lot like a mouse, except you don't drag you wrist on the table. You have to hold it over the pad, which is a little more "work," so it's perhaps not ideal for someone with arthritis or anything, but a programmer typically has their hands on the keyboard, not the mouse, so the real work is moving your hand from the keyboard to the mouse, not holding your hand over the trackpad. If the trackpad is connected to the keyboard, like right below the spacebar, I think it's wonderfully close. I don't know what her "wrist problems" are or what caused them, so I can't say a trackpad won't cause the same. My problem was merely callousness from the friction with the table, so levitating my hand over a trackpad solved it.
that's a good idea, would you recommend a separate keyboard and mouse outside of her laptop?
thank you for the insight, i will look into it
I use a separate mouse with my laptop at home, but stick with the built in keyboard. I dont use a separate screen tho. if she's hooking up her laptop to a new monitor a mouse and keyboard are a good idea.
I can feel your pain :) But in my opinion trying to solve it with the JSDoc approach you mentioned will not make it much better. This solution is not very maintainable and may result in even more mess in the code :(
An Arduino kit or Raspberry Pi.
ok, thank you! 
not to sound stupid, but i just googled these things and how can these help someone with a javascript profession? i dont know anything about programming 
&gt; What my question is really about which framework individual developers think is better for achieving such task and why, Whatever you choose is best. Why: 1) You chose it, you must have a reason, probably because you already know it. 2) Human brains have the uncanny feature to make you like whatever you chose, evidence be damned. Since in this case evidence isn't an absolute anyway that's especially relevant. However, spending a lot of time selecting the "right framework" still is a good idea psychologically, because that makes you brain defend whatever random choice it came up with even more. Technology is largely irrelevant for your question - all those options work, your skill is the determining factor. After all, you could write it all without framework too (and roll your own), so you sure can work around whatever issues will arise. What actually matters is all "human stuff", how will the other developers think/react, etc. 
@haksk, your quote (.. that guy is called Blas? He's gotta hate his parents...) \-its not nice to troll haksk and i Have also reported you, BLAS = basic liniear algebra subprograms ( its the first sentence in the github repo) 
Wow this looks promising, thanks!
Hi /u/haksk, please refrain from personal attacks. Thanks.
Hi /u/brainhack3r, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Hi sorry, wasn't intended to be. 
You will get some hate but I have the same questions for most AR applications like this. I was very interested in developing AR solutions but I ran into one issue that I just couldn’t shake: Most AR apps are better without the AR. You can manipulate an map like this from your phone without have a meaningless background behind it that does nothing for the context of the application. It uses less battery to boot. I find that AR shines when you need a sense of scale or interactive visuals with your background/environment. Without that though, it’s a little gimmicky. 
You can control both with Javascript with the right libraries
As an opinionated programmer... no thanks on the super wide part. 
In fact, try using const in all places except where you can't. Also, no problemos.
why? you prefer window swapping? 
I prefer organizing my windows by screen quadrants, using multiple workspaces for different contexts. Window swapping sucks, but I rarely end up doing it. Something slightly wider than 16:9 would be nice, but 32:9 is just overkill. I'd rather use a second screen, and have the benefit of intuitive organization, without needing any specialized software. I use a single 4k monitor at work, and three smaller ones with thin frames at home. I've never had the urge to span multiple monitors with a single window. 
I would use [jquery and clippy.js](https://github.com/smore-inc/clippy.js)
here's a better way to get all the native functions using regex. getting an MDN link to each one dynamically is not going to be so easy though. ``` var n = window.top.toSource(); var re = /([a-zA-Z0-9_]+)(?=\(\)\s*\{\s*\[native code\]\s*})/g var match = re.exec(n); var functs = []; while (match != null) { functs.push(match[0]) match = re.exec(n) } functs = [...new Set(functs)]; console.log(functs); ```
Are you mad, bro?
You 12 incel?
Yikes, I did indeed; the new comment editor tripped me up. Ah well.
&gt; one thing we all like tho is a nice big monitor Well that's just not true. After getting used to multiple desktops on my Macbook Pro, I have never wanted an external monitor
Is it the future? Who knows. It sure seems like a step in the right direction though.
Its invitation to be a co-author in solving a problem. Our skills + your skills. We bring innovation, we get credit for solving a problem. Plenty of people are giving here time, no$$ at this moment, however we were able to find trust and value in giving time I respect your point of view. You have every right to assume that we dont value each other Lets agree to disagree, there is for sure no right angle in looking on such projects 
Interesting idea, but I think the main issue for most developers is the performance and memory problem, not necessarily the disk storage. I can not imagine Carlo could solve these issues, because it still relies on Chromium/Chrome which is the true bottleneck. On top of that, I can imagine having to depend on a chrome version which you can not control is really challenging for the developer and could cause a lot of bugs. I really do not think Carlo is a good idea. I’d rather use Electron or other alternatives. 
But what does it do?
I was thinking about desktop computers when I wrote that. like I said, i dont use an external monitor on my laptop either, but of course reddit never fails to bring out the internet contrarians with nothing better to do.
Ugh. This uses AR.js (or could). In any case, like /u/Shadaez said: why! It's cool as an experiment, but not something to showcase like this.
That's ok! If you have experience with JS i'm sure it would be helpful. Or even just having extra people to bounce ideas off of would be cool. Join up on the [slack channel](https://join.slack.com/t/skillcamp-io/shared_invite/enQtMzgxMjM5NjU1OTU4LTIzNDIzZTA3YTY0ZTY1NWVmMDUxZDllZjVmZjNiZDRiZTdhN2RhZjhhZTI5MGQxNzY1ZDlhNTAxYTlmNWRkYzA)!
Gotcha. If you ever find the time, even just to pop in and say hello, feel free to Join up on the [slack channel](https://join.slack.com/t/skillcamp-io/shared_invite/enQtMzgxMjM5NjU1OTU4LTIzNDIzZTA3YTY0ZTY1NWVmMDUxZDllZjVmZjNiZDRiZTdhN2RhZjhhZTI5MGQxNzY1ZDlhNTAxYTlmNWRkYzA)!
The official sub is /r/angular2 - so about 3x larger. We wanted to merge subs for years, but /r/angular mods don't seem to exist..
Here's a sneak peek of /r/Angular2 using the [top posts](https://np.reddit.com/r/Angular2/top/?sort=top&amp;t=year) of the year! \#1: [Angular 6.0.0 released](https://github.com/angular/angular/blob/61265b4/CHANGELOG.md) | [35 comments](https://np.reddit.com/r/Angular2/comments/8gta2r/angular_600_released/) \#2: [Chronological list of resources to learn Angular from complete beginner to advanced level](https://np.reddit.com/r/Angular2/comments/9dilmf/chronological_list_of_resources_to_learn_angular/) \#3: [What does React honestly have over Angular?](https://np.reddit.com/r/Angular2/comments/960sbe/what_does_react_honestly_have_over_angular/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
I think you took my response a bit too personally. I was just offering another perspective
Sometimes your component will render something different based on prop values - for instance, you may show or hide something based on whether a prop value is present. These are where snapshots would make sense to use.
In the sidebar as [Subreddit Guidelines](http://www.reddit.com/r/javascript/wiki/index).
If your application requires specific versions of chrome you're still ignoring the point of electron.
Remember that Google doesn't want you to protect yourself. Google exists to be profitable. They are profitable by marketing what they know about you. And the easiest way to know about you is to track your every move using javascript.
everything I've read about testing either says it implies that testing the words on a page is adding brittleness.
Obviously won't work since password is the variable and the name of the page it directs you to.
The snapshot is the recorded behavior of your component: instead of you having to write the assertions yourself, they are recorded in a snapshot. That’s how I look at it; it replaces the work you’re doing when writing assertions. Now when a component gets updated, you either have to update your own written assertions in your test, or you confirm that the changes to your snapshot are as intended. It’s not so different from one another.
I use snapshots outside of react. We are building serverless apps and services. Our payloads can get large. I write my unit tests and then toss in a snapshot or two to ensure the results stay the same. Works great. In Java I found myself doing an expected/actual full comparison using ReflectionTestUtils. Not much difference here with snapshots. 
Script size is significantly smaller and render performance is also better. Everything happens on the client side using mostly CSS and some javascript. (MathML makes server calls.) I don't have actual benchmark numbers yet but through ad-hoc testing math-ml components are much faster. Also, they can by styled using CSS, and attached to events like any DOM node. 
Yeah. This. Capturing snapshots on data allows you to see what your data looks like and how your code diffs change how the data looks. This is invaluable. I think the problem is that there aren't any articles using snapshots outside of testing React components. You can snapshot anything. It's great.
https://github.com/pakastin/teston
You can use snapshots for more than just markup.
no, there's no way to make an async function synchronous.
Disclaimer: Original author of snapshots here. Think at what you do when you test: you get some inputs, pass them to a function and test that the result (and possible side effects) meets your expectations. Snapshots do exactly that, you will run a function with some inputs, only difference is that the tooling the first time will store the output for you so you don't have to. We can do this by assuming that the same inputs will be able to generate the same output, which is almost always the case when testing. In fact you can replace any assertion with a `toMatchSnapshot`* and it will work (not saying you should do it though); Snapshots just automate most of the chore of writing the expected results for you; you JUST need to check that the output is correct. What are they helpful for? Imagine you have two teams working on project A an B, both decide it's a wise choice to share a common library C. Now, Team A needs to make a change because they spotted a bug in C, so they'll fix it and call it a day, right? Well... not exactly... as it happens they may discover that the bug was an unintended "feature" team B was relying on in their code. Luckily both team have good coverage and when running the code team A see snapshots of B breaking in multiple places, the two teams talk to each other and fix the issue together. Case above is true of any codebase with good test coverage, snapshots are only a quick way to have basic tests up and running with low effort. Until now I didn't mention UI at all, that's because I wanted to stress that snapshots are not as UI centric as some people thinks they are. Snapshots were originally designed to work well with ui that are pure, or again, produce the same output if provided the same inputs, this applies very well to React as to any template based ui. Snapshots don' t work with functions that are not pure, like random or time related functions, for those you need to mock them out of the equation, luckily with jest is pretty easy. Anyway point is if UI can be considered pure, then UI is just a byproduct of your code; just a different, more verbose output. This means that when you snapshot your ui, you can indirectly test the right behaviour of your business logic, or better you can catch regressions as in my example above. This also mean you don't need to open a browser to test if any of the pages has changed, as you will get notified by your tests. You can have always reproducible (almost) e2e tests that don't rely on phisically run an expensive (as in time) e2e suite *as long as you checked that UI was at least one time correct*. (You still may want to have e2e tests and that's ok). Snapshot works especially well in monorepos, if you can't have monorepo it still valuable if you run all tests of code that shares a common lib in a CI environment, also by design they generate no false negatives as some e2e tends to do (as they don't open browsers, wait for browser to talk back to test, wait page to load, inject code in browser, wait for scripts to trigger, wait for some animations to stop, and anything else that can break at any time) TL;DR: automates most of the process of testing, good for UI and normal code, less flaky e2e tests.
Being able to use brands new features without having to supply a polyfill is a thing I love about Electron. Having to worry about outdated Chrome versions just seems tedious now. Also, full control over start parameters is often useful. I'm not sure how well Puppeteer can handle those. 
If you could block the eventloop, your async function couldn’t run either.
Sounds like what you're trying to do is abstract out having to make an http request or something that will return a value after some amount of time and then use the return value then to do whatever you want in a single function. I could be wrong with your intentions, but basically your first function, myasyncwasmfunction, is basically returning data after some amount of time and you will need to wait for that result. So you can use Promises with the resolve() method, promise chaining, or you can use async, await to achieve a synchronous flow for sync\_version\_of\_func function. You could also use closure and return the async function then call the variable the function value was assigned too.
I'm thinking of replicating this learning for React Native
I think it misses the point entirely with what people have problems with.
You mean prisma.io? How is that related to Knex?
I'm actually not planning to do anything that's IO bound. I'm actually trying to use some elliptic crypto functions from Go, compiled to a wasm binary. The problem though is that Go will not support synchronous functions until February in Go 1.12... and in testing, none of the functions are computationally expensive enough to need to be asynchronous and many functions get combined in different, but specific orders to do certain actions. In node, I can just use libuv to make a while-loop recursively check for a variable to be updated, and run the event loop manually, but that's not possible in a browser unfortunately. lol The problem I run into with promises is that it still doesn't block additional tasks. Ideally I want to block additional queued tasks, but not the event loop. With all the features that have been added to the ECMAscript specification to do hacky things, I'm honestly surprised we have no event loop control at all. =/
How many ops per sec are you getting?
As other folks pointed out you can't magically transform async code into sync code, but I think maybe this is what you're after? // wrap a call to function f in a promise const invoke_in_promise = f =&gt; new Promise(resolve =&gt; f(resolve)); // call and await the return value of function f const await_value = async f =&gt; await invoke_in_promise(f); // then you can write "as if" your code was synchronous const value = await_value(myasyncwasmfunction);
it sounds like what you want to do is run a bunch of async functions in series, is that correct? 
&gt; This is not true for how wasm works with Go. They've managed to get around this, but what I can only imagine is a task queue inside the wasm application. I get no promise, unfortunately. I'm just referring to how JS works. I'm not sure how the go transpilation you're working with is implemented. In either case, if you get no promise. Just wrap the call to the wasm function in a function that returns a promise as I've written above. Should work just fine.
I developed with Adobe AIR too! And it had the benefit of that MXML which looking back, was actually pretty cool. You could vertically align, for one. 
Every startup event I've been to for the last 6 years there's a new company doing exactly the same thing and it goes nowhere. It's basically a pointlessly over-engineered QR code.
If so, here's some code to do something similar to what you're after. // just an example function that takes a callback const myasyncwasmfunction = callback =&gt; { console.log("ran"); setTimeout(() =&gt; callback(true), 1000); }; // wrap a call to function f in a promise const invoke_in_promise = f =&gt; new Promise(resolve =&gt; f(resolve)); // a recursive invoker const invoker = async (f, n, res = []) =&gt; res.length &lt; n ? invoker(f, n, [...res, await invoke_in_promise(f)]) : res; // run an async function n times in series const async_n_series = (f, n) =&gt; invoker(f, n); // make the call, then log the results async_n_series(myasyncwasmfunction, 5) .then(results =&gt; console.log("done", results)); 
Book stands are pretty useful 
This. I ripped snapshots out of my old project when I realized devs were just updating them, bugs included. It was infuriating. Dev mentality just became "changed code, update snapshots," not "changed code, make sure nothing broke."
Thanks for the work on it. I'm a strong believer in snapshots. Love it!
That doesn't make sense. An asynchronous function, by definition, is not synchronous. 
What do you mean? What's wrong with saying your app requires the latest version of chrome because chrome now supports,e.g., new webgl features that are not polyfillable, or because it relies extensively in DataView which is now 10x faster?
You'd think this warning on MDN (about `substr`) would be enough to cover that part: &gt; Warning: Although String.prototype.substr(…) is not strictly deprecated (as in "removed from the Web standards"), it is defined in Annex B of the ECMA-262 standard, whose introduction states: &gt;&gt; … All of the language features and behaviours specified in this annex have one or more undesirable characteristics and in the absence of legacy usage would be removed from this specification. … … Programmers should not use or assume the existence of these features and behaviours when writing new ECMAScript code. … For that matter, you'd think that the general documentation on MDN would be enough to cover the rest of it.
Another question to ask these companies would be "How much of your developer time do you allow to be put towards open source projects?". /s I am sick of every company asking for open source contribution history, but themselves using self hosted repos
Well, you can use Prisma server (db agnostic data layer) and then on the top of it you can add yoga/apollo-server and handle authenticated requests and customized response. Or, you can just use apollo-server &amp; knex/objectionjs and deal with db specific code. I'm just exploring which approach is good for long term.
To me, companies that put too much attention into the applicants github / bitbucket are red flags from the start. They don't understand that people have a personal life and might not want to write code in their free time. Usually these are the type of companies that expect you to stay up to date with technology, but don't give you the time during working hours. They're just taking advantage of you.
If the user does not have Chrome (or Chromium) installed, Carlo won't work. I don't think this would be a good user experience because not everyone has chrome installed (some of our customers only have IE installed). One advantage of Electron apps is that it comes with all the dependencies. Just run it.
You can now do them inline as `*.js.snap` and avoid creating a new folder
That’s cool! Wasn’t clear from the article, to me :) 
Get a tat of that QR-like thingy and you can have maps on your body! Lol
I mean that's what I was thinking but does that take into account multiple levels of nested arrays? That's the part that's hurting me. 
You also may be interested in `.toMatchInlineSnapshot()` if you've never used it before :) 
Uhmm yeah. math-ml makes NO server calls for rendering. 
Thats exactly how i feel! Well put! When i first started coding as a career i would work so much over time and spend hours learning new technologies off the clock to keep up with the 10,000 other developers.. I survived, but i felt like i was constantly burnt out. Now where i work, 8 hours, then im driving home. Occasionally staying late if its really needed. 
Require a few specific assertions with every snapshot assertion. It'll help catch big data structure changes when people are blindly updating snaps
“Could not connect to host” “Dammit. These tats are useless when I cannot connect to the Internet” .... .... “I’m sorry, I can’t update this QR code. The updated maps are here and this is the QR code for that. This graphic shows all of the black dots from the first QR code that are black. Maybe you should run your own server with the QR Codes pointing there?”
Yeah! And mankind by definition can't fly! That's why OP tries to resolve his problem and not just whining 
I'd be tempted to rip the devs out of your project instead. This isn't just a snapshot issue - they just make it more automated. There's little more infuriating when a dev decides (as happened to me last year) "I rewrote the date routine and the test for UTC/BST conversion didn't work anymore, so I've changed the test and everything is fine" (except for the fact that the application doesn't work properly now, of course).
I'm the same, my first few years was me just working relentlessly to try and keep up with everything. Now I put in the work during working hours, I'm more than willing to stay late if needed, but I need to feel like my company appreciates that, and more importantly, gives me the time to improve myself. I've worked for companies where staying late was the norm, and what do you get back for it; absolutely nothing, not even the decency to thank you. At my current company I usually try to push for some "technical time" in the sprint, just to improve code, or try something new.
Sorry, this is not my project, I just found this interesting project and shared it.
If you were hiring a carpenter you’d ask for samples of their work—I think that’s totally a fair part of the exercise. As a hiring manager I’d love to have someone ask me for samples of what my team produces. Frankly, if there isn’t significant enough of it in the public domain already I’d start looking elsewhere. Just ask for examples of the types of work they do—what are the conventions and patterns, tools, etc, and are there examples they can point you to? They aren’t going to call you a dick, and if they are you don’t want to work with them. Ignore the children in this thread that are trying to say “code samples are bad”—this just isn’t how the world works unless you’re very well known.
Ah, so you need someone to budget every minute of your time? Or is it the case that you ONLY code for work and don’t care about it otherwise?
If you're going to quote me, at least do it right. What I said was: "Usually these are the type of companies that expect you to stay up to date with technology, but don't give you the time during working hours." I'm all for staying up to date with the latest tech, but if a company expects me to do so, then I expect said company to give me the time to do so. After all, for them it's a requirement, so why should I put in unpaid time, just so that they can benefit from it? Don't get me wrong, I definitely stay up to date and use my weekend to play around with new stuff. But I'm really tired of these expectations that software engineers should constantly be reading up and doing side projects outside of work. Some people have other hobbies as well.
Calm down and read again. His point was not that you shouldnt keep up with technology, but that employers should facilitate learning within the job and not expect it in free time.
They missed a HUGE opportunity. I blogged about it seven years ago - https://www.hacksparrow.com/adobes-greatest-blunder-adobe-air.html. They has "Node.js" in their very hands and failed to see it.
Good thing you posted this, I missed that line in your post, signed up now 🙂
I don't see how they could be so concerned about less than 100mb, especially now that storage is so cheap. Having electron be built with a specific version of chromium is much more reliable. I couldn't care less about this project in practice but in theory it's a nice idea.
like what? copy / paste crud app?
Do you think you should be evaluated as a potential employee on the same terms as someone who cares more deeply about the industry and state of the art such that they spend their own time in it? To take the argument to the extreme, which surgeon do you want: The guy who clocks in 9-5 and goes home or the guy who is pushing research, speaking at conferences, getting published, etc.? Guaranteed, by the way, the difference between those two is NOT “which employer gives more time to learn.”
&gt; I definitely stay up to date and use my weekend to play around with new stuff But that's not even the business of your employer And this is a situation of just a potential employer
Well it looks nice, and the OS support looks good. Just a bit of an involved license
Like anything he's the author, even if not based on the technologies we're using or our field. Or unfinished. If he can speak a little about it. I'm an OS author myself, I perfectly know it's hard to finish everything when you have a life. 
&gt; If you were hiring a carpenter you’d ask for samples of their work Samples of work they did and got paid for or samples of work they did for free just so somebody could ask to see them? If you're drawing analogies like this without making the difference, I can only shrug
It wouldn't be fair to ask carpenter in which library, city hall or park (public space) can his work be seen. Normally you'd get photos just like we share stories and portfolios when we have something visual.
&gt; And the reason is the same than for asking if you have a public OS repository what if one says yes, but refuses to disclose the name? it's public - go find it yourself some free software authors prefer to release code anonymously and there's a chance their number will only increase now that SJW psychopaths are on rampage
I'm not trying to get the correct answer. Would you atleast know a way for it to fiil in for the letter B instead. This is what I get when I hover over the answer bubble and inspect element. At least help out with this &lt;input class="answer-choice-button" type="radio" name="AssessCtrlb19ed591-2c9f-4150-abfc-89cc51164bac_2" id="AssessCtrlb19ed591-2c9f-4150-abfc-89cc51164bac_2_B" value="2_B"&gt;
Try adding slowMo and play with the latencies to see if that improves anything. You can also try: `await page.goto(URL, {"waitUntil" : "networkidle0"});` That will ensure all assets are loaded before the test continue to run.
I have always turned down companies who ask for things like this. There are a million other jobs.
don't you think it's better to ask the guy to name a few projects instead? it for sure doesn't feel as invasive
That's not bad if you can explain it during the interview. However I'd expect some creativity from a developer.
The top comment hits the nail on the head, but as someone who's started helping out with the recruitment for our company, this would not be a rude question at all if we were doing a face to face interview. "Any other questions?" "Yes, I'd like to see some recent code for the project you expect me to be going on to"
You’re missing my point. And if you really think the only way to excel is to find an institution that will give you permission to do so then that’s..a sad outlook for humanity.
I would understand “I can’t produce examples because of NDA” just fine. I would not tolerate “I can’t produce examples because I think that’s dumb.”
wat
I'm drawing some computer network topology without much animation or interaction other than tooltips and right-click context menus. So I didn't need anything too fancy. We were initially using Cytoscape. But it was more for scientific networks and was too hard to customize for the layout I wanted. Fabric.js seems like a great library, but it requires an additional 3rd party library (Cairo) and I didn't want to have to install some library outside of standard npm packages on our server. Konva is simpler than Fabric.js, but had all the features I really needed/wanted.
&gt; But there are also a lot of employers out there who will not be forgiving or accepting or understanding at all. They would burn your 3 year old hurried personal project to the ground, or use it as a reason not to invite you. i doubt that you will be very happy with them if they didn't have chance to not invite you. really. if they are that kind of employer, trying to hide you profile to join them won't do anything good.
I've never had a problem. Rarely ever am I asked for a Github account. I've been asked for samples of my code once or twice - I usually just skip those guys and move on to the next company.
How else do suggest a company can understand the quality of your work? If you want to hire a videographer, you ask for their showreel? My suggestion is create a channel that is only for your job search. 
so you never saw github with a code that looked like from /r/programminghorror ?
it was working with domcontentloaded earlier. but when i need to goto another link it didnot work ?
Oh I did. But in such cases we would discuss that code in the interview. 
it was working with domcontentloaded earlier. but when i need to goto another link it didnot work ?
*You* are applying to *them*. It's called leverage and unless *they* approach you - or you really are a stellar developer - I would guess that the approach might actually backfire on you. Nobody wants to hire someone with an ego, let alone distribute private IP to an outside party. I've been involved in hiring many times, and I cannot tell you how revealing &amp; valuable code samples are via GitHub, BitBucket, GitLab, anything will do, etc.
Thanks for your kind words, it is great to hear that Tabulator is appreciated!
I just got my first developer job working for a big company with what appears so far to be a great culture - they didn’t care about my github. I even actively tried to show them some projects to help with my lack of experience. I took a tech test and went through hypotheticals in the interview. That was enough to satisfy them. I got told after they’re more worried about a suitable fit for their teams. Loads of people can write good, clean code, not everyone can fit into an agile team. 
Lol how does the underside of that boot taste
As somebody who has neither LinkedIn or is active in public Github repos, I can see where you're coming from but it's never held me back applying for jobs. At the end of the day as a dev you're a fat commission for a recruiter in a market of low supply and high demand - walking away from an unreasonable employer is always an option and if you can afford to be picky with job hunting you're much more likely to land a position that's right for you OP.
We (my company) spend millions on AWS infrastructure / services. You would think this unlocks doors but it does not! I can tell you the only way to find out how things work internally to their products is via this link: https://www.amazon.jobs/
I haven't used the default version of puppeteer in a while, but isn't there a "wait for element" Promise or equivalent?
Try it here against rxjs: https://jsperf.com/rxjs-vx-raex/1
Hi there! We're looking to make first round tech interviews hassle free for both engineers and companies. Any feedback is highly appreciated!
I've been writing closed source software for 17 years across 10 companies. My Github contains tons of contributions to private repo's, and 1 Christmas surprise project that I quickly whipped together. The code is *absolute crap*, but it works. If they ask me for open source contributions or my Github profile I would tell them: &gt; "I have only worked on private repo's and my personal work does not reflect my professional standards." &gt; &gt; – me Still, I think it's fair for the applicant to want to review the employer. Here's my checklist for any freelance gig I'm considering: - What project will I be working on? (I once had a client where I had no assigned project for 3 months, it was boring as f) - Is any development outsourced? (I once had a client where I learned after taking the job that their 20 developers were all in India, and I would have to figure out how to work with them, it was hell) - Can I meet the team? (I once had a client where the "team" was all sick. The "team" was also 1 person.) - Please show me the project backlog. (A client who refused to work with any sort of backlog and the Big Boss took full control of what he needed and when he needed it.) - What's the test coverage at right now? ("What are unit tests?") - How long does the average programmer stay with the company? (No answer = flee the scene. I had one where the average developer fled the company after 3 months.) - Have a lot of people left the project/company in the past 8 months? (Sometimes recent management changes make people RUN. In which case: RED FLAG, DO NOT COMMIT.) - What are the current project struggles? (If they don't know, red flag.) - Do you do code reviews and pair programming? (Tells you major things about their way of working.) - Can you show me the code of the project I'd be working on? ("No" means "we're ashamed" and "Sure, if you sign this NDA" means "Sure, if you sign this NDA".) It's a big bad frustrating world full of crap out there. Good developers are in high demand. Crappy employers aren't.
Can you put a workable sample in a gist or pastebin? I don't feel many of us can work with code samples in reddit's markdown. That said, I'd suggest a recursive solution is what you're looking for.
I did my best to quickly write a small collision detection for you with 1 square and 1 stroke, thus it might not be the best piece of code the principal is the same for other shapes or multiple shapes the diffrence is there would be alot more math involved to achieve a similare result. I hope it helps, if you want to learn more about this you could check out : [https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D\_Breakout\_game\_pure\_JavaScript](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript) &amp;#x200B; `&lt;!DOCTYPE html&gt;` `&lt;html&gt;` `&lt;head&gt;` `&lt;meta charset="utf-8" /&gt;` `&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;` `&lt;title&gt;Page Title&lt;/title&gt;` `&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;` `&lt;style&gt;` `&lt;/style&gt;` `&lt;/head&gt;` `&lt;body&gt;` `&lt;canvas id="canvas"&gt;&lt;/canvas&gt;` `&lt;script&gt;` `"use strict";` `// set up base canvas` `// draw function` `class Canvas{` `constructor(){` `this.canvas = document.getElementById('canvas');` `this.canvas.width = window.innerWidth - 25;` `this.canvas.height = window.innerHeight - 25;` `this.ctx = this.canvas.getContext('2d');` `this.lineSettings = {` `startX: this.canvas.width / 2,` `startY: 0,` `endX: this.canvas.width / 2,` `endY: this.canvas.height` `}` `}` `turnOff(){` `clearInterval(this.loop)` `}` `drawSquare(obj){` `this.ctx.rect(obj.x,obj.y,obj.w,obj.h);` `this.ctx.fillStyle = obj.color` `this.ctx.fill()` `this.ctx.stroke();` `}` `collisionDetection(obj){` `const center = this.canvas.width / 2,` `largestValue = obj.x +obj.w,` `smallestValue = obj.x` `if( largestValue &gt;= center &amp;&amp; smallestValue &lt;= center ){` `obj.color = '#ff0000'` `}else{` `obj.color = '#999'` `}` `}` `drawLine(xStart, xEnd, yStart, yEnd ){` `this.ctx.beginPath();` `this.ctx.moveTo(xStart,yStart);` `this.ctx.lineTo(xEnd,yEnd);` `}` `moveObject(obj){` `console.log(obj.x, obj.speed)` `const speed = obj.speed` `if(obj.x &gt;= 0 &amp;&amp; (obj.x + obj.w) &lt;= this.canvas.width){` `obj.speed = +speed` `}else{` `obj.speed = -speed` `}` `obj.x += obj.speed` `this.drawSquare( obj )` `}` `update(){` `let cycle = 0,` `square = new Square( 0, this.canvas.height / 2, 50, 50 )` `const self = this;` `this.loop = setInterval(` `function(){` `self.ctx.clearRect( 0, 0, self.canvas.width, self.canvas.height )` `self.collisionDetection(square)` `self.moveObject( square )` `self.drawLine(self.lineSettings.startX,` `self.lineSettings.endX,` `self.lineSettings.startY,` `self.lineSettings.endY` `)` `}, 10` `)` `}` `}` `class Square{` `constructor(x, y, width, height, color){` `this.x = x;` `this.y = y;` `this.w = width;` `this.h = height;` `this.fill = true` `this.color = '#999'` `this.speed = 2` `}` `}` `let board = new Canvas()` `board.update()` `&lt;/script&gt;` `&lt;/body&gt;` `&lt;/html&gt;` &amp;#x200B;
I would recommend people to join the SpeakJS server instead. Typescript is not separate enough from js to warrant a whole separate server, as most discussions are better fitted about js.
 I did my best to quickly write a small collision detection for you with 1 square and 1 stroke, thus it might not be the best piece of code the principal is the same for other shapes or multiple shapes the diffrence is there would be alot more math involved to achieve a similare result. I hope it helps, if you want to learn more about this you could check out : [https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D\_Breakout\_game\_pure\_JavaScript](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript) &amp;#x200B; good luck &amp;#x200B; `&lt;!DOCTYPE html&gt;` `&lt;html&gt;` `&lt;head&gt;` `&lt;meta charset="utf-8" /&gt;` `&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;` `&lt;title&gt;Page Title&lt;/title&gt;` `&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;` `&lt;style&gt;` `&lt;/style&gt;` `&lt;/head&gt;` `&lt;body&gt;` `&lt;canvas id="canvas"&gt;&lt;/canvas&gt;` `&lt;script&gt;` `"use strict";` `// set up base canvas` `// draw function` `class Canvas{` `constructor(){` `this.canvas = document.getElementById('canvas');` `this.canvas.width = window.innerWidth - 25;` `this.canvas.height = window.innerHeight - 25;` `this.ctx = this.canvas.getContext('2d');` `this.lineSettings = {` `startX: this.canvas.width / 2,` `startY: 0,` `endX: this.canvas.width / 2,` `endY: this.canvas.height` `}` `}` `turnOff(){` `clearInterval(this.loop)` `}` `drawSquare(obj){` `this.ctx.rect(obj.x,obj.y,obj.w,obj.h);` `this.ctx.fillStyle = obj.color` `this.ctx.fill()` `this.ctx.stroke();` `}` `collisionDetection(obj){` `const center = this.canvas.width / 2,` `largestValue = obj.x +obj.w,` `smallestValue = obj.x` `if( largestValue &gt;= center &amp;&amp; smallestValue &lt;= center ){` `obj.color = '#ff0000'` `}else{` `obj.color = '#999'` `}` `}` `drawLine(xStart, xEnd, yStart, yEnd ){` `this.ctx.beginPath();` `this.ctx.moveTo(xStart,yStart);` `this.ctx.lineTo(xEnd,yEnd);` `}` `moveObject(obj){` `console.log(obj.x, obj.speed)` `const speed = obj.speed` `if(obj.x &gt;= 0 &amp;&amp; (obj.x + obj.w) &lt;= this.canvas.width){` `obj.speed = +speed` `}else{` `obj.speed = -speed` `}` `obj.x += obj.speed` `this.drawSquare( obj )` `}` `update(){` `let cycle = 0,` `square = new Square( 0, this.canvas.height / 2, 50, 50 )` `const self = this;` `this.loop = setInterval(` `function(){` `self.ctx.clearRect( 0, 0, self.canvas.width, self.canvas.height )` `self.collisionDetection(square)` `self.moveObject( square )` `self.drawLine(self.lineSettings.startX,` `self.lineSettings.endX,` `self.lineSettings.startY,` `self.lineSettings.endY` `)` `}, 10` `)` `}` `}` `class Square{` `constructor(x, y, width, height, color){` `this.x = x;` `this.y = y;` `this.w = width;` `this.h = height;` `this.fill = true` `this.color = '#999'` `this.speed = 2` `}` `}` `let board = new Canvas()` `board.update()` `&lt;/script&gt;` `&lt;/body&gt;` `&lt;/html&gt;`
I don't think there are any special rules to make your app cross-platform. Just don't use platform-speciefic modules. You can use `ts-node` and it doesn't have to be installed globally - once you install it locally, `ts-node` will be available as a command in your package.json scripts. However, compiling with `tsc` is the best practice since it doesn't require user to install a runtime module. 
This reminds me of old VB apps which required Internet Explorer to be installed on client. Oh boy...
You are incredibly unrealistic. You expect the employee to do stuff for free, and that's it. If you don't give them time to learn on the job, you cannot expect them to learn during their free time - it's a bonus you have to pay for. Requiring people to dedicate literally their entire life (because that's what you are doing right here), and paying them for a 9-5 is what is toxic. Not the reluctance to learning on your free time.
yeah tried that it didnot work last time. 
Some customers just want to buy words like "augmented reality", "app" or "AI", nobody is actually going to use them.
I asked for this too and they let me see. Their code was the reason I didn’t accept the job in the end lol
that worked now navigating to a page last problem 😂😂
Why don't you give candidates access to your financial records? Choosing which job opportunity to accept is hard and after some mixed experiences I know I'll prefer companies that can show some history of being financially stable. It's not ideal, of course, but it makes sense. It sounds like you have far bigger problems in your company than how to hire. Any developer worth their salt would be turned off by that kind of request. 
The o ly thing toxic as shit here is you 
And you just made a big no-no by sharing code. If it is yours - there is no problem. If you made it in a closed off project, that's a fireable offense, and I wouldn't want someone, that did that in my company.
Who would say that though? Either you can share or you can't. If you can't, and the hiring manager says "sorry then, we want someone who we can check the quality of code of", then that's idiotic. You understand, but the thread is about people, that don't.
This exactly. Ask a carpenter you are hiring for a table he made for a client - that's the accurate analogy. And not for a picture, but for the table itself.
Not sure if I completely understood, but here's some good ol' ES5: var pizza = document.getElementsByClassName('message-text'); var lastElement = pizza[pizza.length - 1]; var gwt = lastElement.textContent; 
As a lead who often interviews to hire for our company, I disagree that your side project for fun is not relevant. We do like to see people who really enjoy coding and aren't just doing it to earn money 9-5. It's not that (at least in my case) we're looking for people who will log long hours; we're looking for people who got into coding because they really have a passion for it. They tend to make the best developers. It's not a requirement, but it can help be a differentiator. And frankly, since we're all geeks many of whom have similar side projects or at least are gamers, it would help humanize the applicant. We've had tangents in interviews discussing video games. I don't doubt there are companies that would use it to take advantage, but just asking the question isn't evidence of that. Be forward, ask your own questions about work life balance/etc. if those are important to you (and they should be). I don't have any problem with applicants asking that, candidates that know what they're looking for and are sincere are preferable to those who treat the interview as a poker game. As an employer, there are as many shady applicants as there are shady employers. It's a two way street. In the end we're both trying to find the right match - we being good employers and good applicants. It's hard. 
OK so I do a fair bit of hiring, GH/BB are useful and nice to have, but I write zero code in my spare time. We afford devs time to learn on the job, because let's face it...it is part of your job! So it would be pretty hypocritical of me to expect you spend your free time coding as well. When they interview, I give devs a choice to either go through a piece of code they have already written and use it as a jumping off point to discuss architectural/technical choices they have made and challenges they have faced. OR they can choose to do a sample bit of work (unfortunately we can't let them loose on the actual prod project, though I would love to), and we'll pay them at a contractors rate for half a day. That seems to be the fairest solution I can come up with, but I'd love to know if we can improve on that. 
they're hiring you, you're not hiring them. if you think you might deny a job offer based on the company's code base you should at least wait until an offer is made. if they ask for sample code and you just retort with "well lemme see *your* sample code," you'll just sound like a petulant child and likely the only thing they'll show you is the door.
Ask them to do a small coding exercise/project? That's what we do in our hiring process
Thank you so very much for sharing these. You are a hero and a scholar. Cheers. 
How do you find people respond to tests? My experience is that developers hate doing those also.
Why, yes, I was jesting. Thank you for your detailed and unsolicited explanation Herr Kowdermeister. Your caveat warrants greater consideration than the tomfoolery in which I was engaged.
I'd much prefer to do a given project rather than having my 6 year old github projects looked at
Shhh, they are learning, don't take away all the fun! 
If your "giant fucking mech battles" won't give an employer any insight at all into your approach to coding, that means that your approach to writing professional code isn't ingrained muscle memory, but instead is just a process you follow sometimes, when forced upon you. That tells a prospective employer a lot about you.
Why is that any conflict in your mind? No sane company would allocate work time for you to build your resume. Your open source or passion projects are just as much your resume as that piece of paper you handed them.
&gt;Even though React’s initial footprint was just 45kB, removing React, several libraries and the corresponding app code from the client-side reduced the total amount of JavaScript by over 200kB &amp;#x200B; Seems like some detail is missing here - they mention they rewrote the functionality in 300 lines of JS - so why were they pulling in all those extra libraries in the first place? If the libraries weren't needed in the rewrite it sounds like it could have been removed from the original React code too. They mention lodash (easy to get rid of) and context data (was this really hundreds of KB?).
People complain about that too.
I experienced a bug with the isPalindrome section. It came up with an empty code block, but it wanted me to fix existing code. I had to refresh to see it.
&gt; The "team" was also 1 person. Not necessarily a bad thing. Some of the best teams I have worked in/near have been just 2-3 developers. As long as everyone in the team are compatible and can work well together of course. Sounds like a bad idea for joining a new company. Better if you have already worked somewhere for a while and a small team is hand-picked to work on some project. Can't beat a small team that is allowed to do their thing without managers interfering in how they do their job (and in my experience they are allowed to do their thing as long as they deliver; higher up management only starts to whine about processes and adding overhead to the work for teams that do not deliver).
You wrote exactly this: &gt; Any developer worth their salt would be turned off by that kind of request. And read again what I said. I never never mentioned asking for a private repo, but for any public repo if they exist. 
As an employer, "did some lazy things in the less interesting parts of the project" is definitely something I would take note of. A lot of work projects are nothing but boring parts, but those still need to meet basic standards. If you are just experimenting with things in a public repo, hopefully you have a readme.md that explains as much. There are a huge number of public repos with no annotation, no notes, no comments, no nothing. Those are a red flag too.
Actually many sane companies will, and do, allocate time. My current employer makes use of a whole host of open source software, and we're encouraged to contribute to it. If we run into a bug with a tool during development, we fix it and submit a PR. If we develop something useful as part of a project, we package and release it. It's code that we would have written anyway, but we're 'giving back' to the open source community without which we wouldn't be able to do our jobs 
If you read carefully, I didn't say that companies don't allow employees to work on open source **when it benefits the company**, I said they don't let you work on your resume. It's great if a project is something you can add to your resume, but assuming that a company is bad because they don't give you time to build your personal portfolio is just silly.
Because I’m interviewing the company as much as they’re interviewing me. I’ve been doing this for a while, and I’ve gotten an offer from nearly every company I’ve ever interviewed with. I turn down roughly 80% of companies that want to hire me. If you’re paranoid that I’m building my resume when I work then you’re not someone I want to work with.
Actually that is in the companies benefit, many companies uses in one or any way open source projects, so is just fair that they invest on it. Specially if they look for developers that has contributions on open source projects. Now, I don't think that contributions to the open source community is sign of how good a developer is, as you get more experienced and live "happens" and you have less time/energy to work on that. It can be an indication of the developer code style but it should never be the decicive factor. Definitely if the developer doesn't have/provides one doesn't mean that is a bad dev.
&gt; If a company expects me that I should write code for free just for the sake of some interviewer being able to ask for it either to satisfy his curiousity, or use it as argument when negociating the salary ...or, you know, maybe to see whether you write competent code? You seem to be assuming that you deserve the job, and anything an interviewer wants for evidence is just their own perverse whim. That's a pretty adversarial approach to an employment situation.
I'm perfectly willing to do things right in all areas of a project if I'm being paid to do so, or if I'm intending it to go out into production. Not necessarily if I'm just playing around.
&gt; as a dev you're a fat commission for a recruiter in a market of low supply and high demand ... is that really how you want to consider your career? Shouldn't you want to put a good foot forward and get the best position possible?
&gt; or, you know, maybe to see whether you write competent code they are welcome to query my previous employers and get the proprietary code i wrote to look at it. but you know the outcome of such an attempt, don't you? &gt; You seem to be assuming that you deserve the job i am assuming nothing, an interviewer is very welcome to find out if i qualify for the job without treating me like a tool &gt; That's a pretty adversarial approach to an employment situation it's called self esteem
I think Carlo is very interesting for Linux where you have package managers to control dependencies. This way chromium would be like shared library.
&gt; they are welcome to query my previous employers and get the proprietary code i wrote to look at it. but you know the outcome of such an attempt, don't you? So, you want them to hire you blind... got it.
Yeah, that's honestly still not an attitude I would want on my team. I want people for whom fundamentals are just that... fundamental.
OS commits *Can* be in an employer's best interest or can be totally unrelated. that has nothing to do with the quality of the employer. my statement is that no company should HAVE to let you write open source code, just so you will prep your resume. There are loads of people on here acting like code samples should be totally unnecessary to hiring, and as a hiring manager I can't begin to tell you how many people interview well, but can't code their way out of a paper bag. Interviewers need something to go by. People complain about code challenges and complain about github, but without them the employer is flying blind. Gordon Ramsey makes every prospective chef cook eggs 4 ways, before hiring them... why should hiring a dev require a complete leap of faith?
Yeah you're right, I ended up hitting that wall. I'm just going to live in some callback hell today. Such is life, until Go 1.12 releases next year. 
An article I wrote and published through the [JavaScript foundation](https://twitter.com/the_jsf/status/1057286244315602945) exploring the world of evergreen web application development through the lens of language specification, browser, and tooling. Really excited about the potential of the web and the great community here and around the internet all doing great work to make building web apps easier for themselves and others. Hope you like it! 
This is not about being paranoid... my statement was a response to a "dev" who feels that it is wrong to be asked to show code samples by a company that doesn't provide time to contribute to OS projects on the clock. I disagree not because OS is wrong, but because one is unrelated to the other. Your github is how you advertise your code quality. if you don't have any open-source work or don't like the quality on your normal account, just make a repo and write a few 2 hour projects. Consider it part of your resume. I've never seen someone turned down because their commit history wasn't full... I've seen plenty of people turned down because they couldn't code their way out of a plastic bag.
Am I the only one that wants to sit down and talk to people from the company from the beginning? I understand the purpose assessments like this serve, but as someone with almost 10 yrs experience in my field, these are mostly a waste of time as it's not indicated what metrics qualify you as a good candidate or bad. I've nailed and bombed shit like this and been turned down because of it. I've also declined to take an assessment and the company still wanted to bring me in for an interview. It just feels like this is just another way to automate part of the hiring process, which I personally feel should be a much more integrated experience for a company that you may be potentially working for.
Oh, will take a look right away. Thanks for letting me know! Any other feedback about the interview?
I get why some companies would want to do that. I wouldn't want to work for any of those companies.
nice insinuation
Electron has built in support for automatic updates. It is written on the front page of the web site. Try that first. 
Hi /u/its_std, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Hoollick, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Right. I was confused since Knex is basically an SQL query builder, and Prisma is something else entirely, but I see your point. Sorry, I haven't used Prisma in production, but I'm very skeptical about it. Most people that use ORMs go back to raw SQL queries because it's simply the best way to talk an SQL database. Objection for example has to make multiple queries to be able to build related data which is many times slower than making a single SQL query. I don't know how Prisma solves this, but I would imagine they make a new SQL query for each resolver. It would be nice to see some benchmarks.
sorry not gonna spend 70+ mins on any interview why I need to spend 70 mins for test and get auto rejected this things do not work like that
If a developer is expected to give code samples, why isn’t a company expected to do the same? I’ve done a lot of hiring. In fact, we’re wrapping up a round of hiring at my company right now. We didn’t provide any example code to the interviewees. In fact, we gave the candidates a coding challenge that none of us had previously solved. I think that’s a kinda shitty thing to do to someone. Lo and behold, it turns out the challenge had some much trickier edge cases than we expected and every single candidate had serious bugs as a result. Not a great interview experience for these people. I’m criticizing myself as much as anyone. I’m one of the senior-most developers in the company. I should have done a better job with this. Many companies have a broken hiring process. We put candidates through a hazing ritual by asking brain teasers to which we already know the answers. There’s a certain kind of person who enjoys humiliating the candidates who can’t adequately answer the brain teasers. I’ve seen great candidates rejected by teammates who got off on the feeling of superiority they got from beating up on people. I’m fortunate because I’m great at brain teasers. I spend huge amounts of time working in obscure languages for fun. I can competently write Haskell, Common Lisp, Prolog, lambda calculus, etc. That gives me a big advantage with ridiculous interview questions. Does that make me a better developer though? Probably not. If I were to use too much of my obscure knowledge in my day-to-day work then none of my co-workers would be able to maintain my code. In fact, I might be a little worse than your average developer because I get bored fairly easily when working on unchallenging code. It’s good to have someone like me around if you need to do something crazy. Need to create your own programming language? Need a game engine from scratch, or a search engine, etc.? I can do that. Do you need a basic CRUD web app? I’m probably going to get bored and spend too much time slacking. You’re better off hiring someone less experienced because that kind of thing is still exciting for them.
It removed a lot of the framework we built around React: bot detection, AB testing code, interaction tracking, other cruft we had tacked on every page load. It saved a lot of speed but we had to rewrite a decent amount of that functionality. Source: I was on the team that did this experiment at Netflix. 
This is the same as me. My Github code is ugly, has no unit tests for the most part, etc. I just want to solve my problem and move on. Also because I'm writing for an audience of one, it's the densest fucking functional programming you've ever seen. Impenetrable to all but the most amazing pure math majors ;)
What reservations do you have against using a CDN
Just ask for it. Over the course of interviewing tens of candidates and hiring a small team, I’ve only had one guy ask to see our code. At the end of the phone interview when we asked if there was anything he wanted to ask us, he asked if we could send some code across. Just bear in mind the industry you’re applying to work in since it won’t be possible for them all to send you code samples. I work in a bank where everyone is highly security-conscious. The guy was applying for a front end position, but I still had to get it signed off before I could send him a code sample. So if people decline your request, know that they probably have a good reason. If they could simply copy a project or a few files into an email they would, but a lot of companies are careful with their software. Thing about us asking for code, is that we’re not going to base our entire decision to hire you based on some Github repos. We’re also well aware of the date it was written, so we’re not going to pay as much attention to something written a year ago vs something written a month ago. It’s just nice to see who enjoys coding in their spare time, that’s what I’m mainly looking for. We know you’re technically competent since we have our own technical tests, so right now we’re looking for enthusiasm and genuine interest. There is that guy out there who strictly writes code as a 9-5 and it is just a job to him, he doesn’t think about it when he gets home and doesn’t care, and he’s a truly brilliant developer... but in the majority of the cases this isn’t true. In 99% of cases the guy will be inferior to a similar dev who does code in his spare time and this gap is much larger when comparing juniors.
I don’t have any ideas for projects or “websites” to build outside of work. I wish I did but I don’t. And if I had a profitable idea, I wouldn’t share it on Github.
What environment do you guys use to run test cases? I couldn't run tests on the last challenge and I think it may be because I used Object.entries?
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
A carpenter doesn't have to work on wood after work (it can but is not a requirement), a carpenter doesn't have to spend countless hours on internet researching about the new and trendy way to carve wood. If you want to see how someone codes, create a short fake (or real) bug/feature and ask the person to work on it, that will tell you if that person knows how to code and if it can adapt to your work code stile. I've met the most amazing devs that has no time to contribute to open source projects or that even has a gh/bb account, actualy a lot of senior devs are like this and if you limit yourself to that, you are gonna miss a great workforce.
That makes sense, I’m curious from your perspective how would you like to be “tested”. What sort of interview process would you like to go through? 
Couldn't you put effort into code splitting and dynamic loading for some of those component, as well as experimenting with smaller renderers like preact, seems like those benefits could have been passed on to other pages in your stack as well? This doesn't read as much like a case study of options as it does explaining a single path they went down for the home page, which was reducing the bundle size and prefetching(not that I'm saying that is a bad solution), it would have been interesting to compare different methods.
Use a `&lt;canvas&gt;` instead.
Yeah, and that's honestly not an attitude I want out of my teamlead. And this is speaking as one. You might think something to be a fundamental in the professional setting. It might not be in gamedev or small projects. Naming a class "DickbuttTwiceDamned" in a private project is fine. And you wouldn't want me on your team because of it. If you focus on stupid shit just for the sake of having perfect code^(tm), instead of working on actual functionality, then that's a flaw. Because you'll always find something somewhere in the project you don't like and could refactor. It's a neverending story.
&gt; it shouldn’t be weird that we’re also allowed to work on personal projects on company time. There are a few companies that do this, and that's great, but it isn't some "Gotcha" to identify bad companies. In fact, many of the companies that offer "lifestyle" amenities do so at the expense of their employees private lives. It's nice to have ping pong when every other week you work till 10pm.
I can't suggest FreeCodeCamp enough. 
How do you define data schemas? Directly in the client, or in the statsbot server (console/panel)? The sentence "Cube.js uses Data Schema to generate and execute SQL." would indicate the former but the lovely diagram would indicate the latter. Good luck with the beta from a fellow creator of a soon-to-be-launched serverless analytics framework (though with very different purpose). 
&gt; DickbuttTwiceDamned Unless that class is defining a character of a certain known class, you are correct that I wouldn't want you... that is completely unintelligible bullshit, and doesn't belong in a naming convention. Code has to be readable and intelligible to be useful. The guy who names all his classes "AnotherStupidClass" is just as bad as the guy who names his classes "A" and "B". It's a sign that the person doesn't care about naming conventions of their own volition, which means getting meaningful conventions out of them on work time will be a continual problem. However, more commonly what you see is things like multiple nested and repeated loops to perform a job that a single loop could have done easily, or recursive code that doesn't correctly define a base case. or just unnecessary copy/paste spaghetti. There are some skills that should be evident even in your worst code. If they aren't... well, you just aren't good.
[https://codepen.io/jeffreyyourman/pen/WYQbGj](https://codepen.io/jeffreyyourman/pen/WYQbGj) &amp;#x200B; So you're right thats what i was thinking but i'm struggling trying to put my psuedo code into javascript syntax. inside the codepen i put the json array that I need to loop through. 
Man... I don't downvote very often, but I had to here. &gt; I want these Go compiled functions to LIVE in the main even loop with other queued tasks. I can guarantee you that you can do this without running blocking code by utilizing async/await, promises, callbacks, etc. &gt; Just because you think something is not the right way doesn't make something the wrong way when you don't know the use-case. More and more and more code is pushing to be asynchronous, and you just happen to be the one person that found that one use case? I doubt it. You're doing it wrong. And I'm not the one that says so; the people who wrote the language say so. Otherwise, they would have synchronous code for your use case.
This scope sounds like a perfect match for https://underscorejs.org/ and I've already used it with similar and larger data sets, though some complex tasks were slow.
Awesome, I guess its more than enough to start. Thanks a lot!
I personally don't use chrome because I don't trust google at all. I disagree that simply removing chromium from the bundle solves Electron's problems.
Did not want the job.
Same here.. 
Candidates complain... About lazy employers or copy paste a shitty logic test, or give a highly specific test with little time, all the ego stroking shit that lands them an interview hacker instead of a programmer.
Take a look at your browser's dev tools and look for the post information (under network tab) when you upload an SVG. There's a good chance that your SVG is posting but the server (backend) is the one declining your file and returning a message back to you through Javascript. &amp;#x200B; If your application is using PHP - Google search setting your php.ini file to allow larger uploads. The global parameters you'd set are **upload\_max\_filesize** and **post\_max\_size**. &amp;#x200B; Without source code or a link to your demonstration, there's not much else I can recommend since I can't the cause of the issue.
To highlight differences in the industry, some of your red flags are signs of interesting work to me. A team of 1 is a good size if we're talking funded, pre-Series A. Of course, "How is your company financed and what is the future plan?" is probably the most important question to me.
I really like using freecodecamp and watchandcode.com
\+1 for snapshotting data...just random JSON stuff works great
They have a subreddit. Share your projects there if you want, you'll get good feedback. 
Electron does not package your code as an executable, you need third party tools to do it. Without things like electron-packager you'd have to manually rebrand the Electron's executable, package your app into an ASAR and put it into the resources directory and make an installer.
IRC and freenode is good, I learned most of what I know from there
MDN docs, they are extremely thorough and well written.
Each time you open your discord, it usually has like 3-4 updates, daily. It's also electron, no problems. As soon as they restart the app = autoupdate
Just compile your ts to es and its all good
In terms of that example: I've done a lot of video work, and my reel is almost entirely made up of paid projects. Clients give me rights to use the footage for self promotion. That makes a huge difference. I'm not expected to produce professional videos with no budget and no client just to convince someone I can do it. Definitely I see the point, but the analogy doesn't quite cross over.
You hit on a really good point. What you just said is one of the big fundamental flaws in hiring today; that they are hiring you and not looking for someone to work WITH them. I don't know about you, but I am always turned off by this behavior. If you want to hire good people, have good partners, then you need to hire in a manner that recruits and retains those kinds of people. No person wants to feel ingratiated or owned by someone or some thing; we aren't serfs and corporations that don't realize treating employees as partners and resources to unlock further value are dinosaurs in my opinion.
Wow. I would apply for a role with your org any day. So respectful! I'm being sincere btw. Congratulations n getting it and making people feel valuable.
Hi /u/draemonn, please use a real title. Thanks.
Hi /u/nghminh163, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/oczekkk, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Eriane, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/icelandico, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/SilentIphone, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Shivam_RawatOxox, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Thanks!
Anyway you can open source this on GitHub ?
I'm far older than any definition of a millennial and I've owned businesses for 15 years; successfully and I've been a paid speaker to the UK, Canada and US. Additionally I'm a workaholic and don't ever plan to retire. BUT no one talks down to me. I'm humble and cocky; I don't pretend to know what I don't know and I know what I know, yet I treat everyone like an equal and I expect the same no matter my role definition I'm still a human being. You can of course consider it a win and if that's your definition of winning then good for you; I'm genuinely happy for you, but I don't see this situation or my comments as win lose, so much as a discussion. FYI I looked back to see if I down-voted you and noticed that I did not. I don't believe your divergent view from mine means I should seek to silence yours; actually I distaste that and have up-voted you. 
if I cared about votes I would post controversial thing. that said, nope, you're definitely not a millenial responding like that. I still dont agree with you tho.
Yep, I already do that, but that downloads a whole new 60MB file, which seems like over kill for front end changes. I might ultimately stick with that, but I wanted to see if others were using a CDN with success.
Can't actually see any improvement claims they make ... looks still like a bad performing website: Mobil: **1,9s** FCP**2,8s** DC Desktop: 1,5s FCP1,4s DCL [https://developers.google.com/speed/pagespeed/insights/?hl=de&amp;url=https%3A%2F%2Fwww.netflix.com&amp;tab=desktop](https://developers.google.com/speed/pagespeed/insights/?hl=de&amp;url=https%3A%2F%2Fwww.netflix.com&amp;tab=desktop) &amp;#x200B; Of course, it might be better than before, but i think its far from good. &amp;#x200B;
Pretty much, this, you’ll program in TypeScript, but to distribute it you’ll need to compile with it with `tsc` giving you regular JS/node that can be run on any platform with node installed. There are a few minor details you need be aware for 100% cross-platform compatibility, like path handling, but if you use the standard node apis (`path` and `os` if you need some OS specific code) you should be covered in most cases. If you’re unfamiliar with these apis, or want a refresher, [this article gives a pretty good overview for node cross-platform programming](https://shapeshed.com/writing-cross-platform-node/).
Let's not forget NWjs is a thing.
I have done this in a large electron application due to the same points you've raised and because our electron application had a intensive installation process that included drivers and other goodies. I would recommend a strictly versioned and strongly typed interface for the integration points. If your application has any offline aspect then this makes things more difficult but one thing you can do is to store the last downloaded version locally and use that instead whilst ensuring that the front-end is developed using 'offline first' techniques.
We use https://github.com/gajus/postloader for generating data loaders and Flow types. It is so simple yet so nice to use. The API is literally a single function. The performance is incredible since it simply executes plain SQL that is generated before runtime. GraphQL and dataloader do everything else. 
Sure... you may believe you are very good, but as a team lead, I want people who can leave their ego at the door, and actually work on a team.. the way you describe yourself sounds pretty unmanageable.
Yeah my work life and my real life are different. I go home and I spend time with my friends and family, I ride my bike or work on my hobbies... none of which are tech related. Does that have any bearing on how I perform at work? Nope. In fact, maybe it leads to less burnout.
This is epic!
Yeah. And that is you, reading my code, and seeing a weird class name, and thinking "omg this guy is unmanageable I don't want him here". That is your failure, which you seem to miss, despite it being right in front of you. As a team lead myself, I don't want machines. I want creative people with different ideas. It is that simple. Seeing a weird classname in a private project doesn't raise a red flag. Seeing a great idea for a project, that someone came up with on their own, and made their dream a reality makes me see their creativity and intelligence. And I value that above machine-like perfection in code, where it doesn't belong.
You’re trying to change the topic of conversation and I’m not interested in having that separate discussion with you. You said that it would be silly for a company to pay you to contribute with your personal account to open source work that’s unrelated to your job. I pointed out that many companies do that very thing, and provided some background on how that sort of philosophy isn’t silly but actually makes sense. You got defensive, perhaps because you think I’m implying that your workplace is inferior, or perhaps because you don’t like being told that you’re wrong about how the world works outside of your personal experience. Whatever it is, that’s not my concern. I’m not making a value judgement on how you choose to view the workplace, but instead of digging your heels in you might want to think about why you’re trying to persist in searching for arguments that provoke these negative reactions.
It might not be an issue where you interview and work for. But for other places it 100% is. Outside of work I maintain packages others use in production (which, btw, is fucking terrifying to me) or some stuff for funsies or to help out my gf's nonprofit employer. But I also have a life and hobbies outside coding, so the bathroom tiling pattern on my github is a little lackluster. Should that be counted against me in an interview compared to someone equally qualified but has a better public contribution appearance? 
I get what you're saying. But it's a seller's market when it comes to coding. If a company is so short-sighted as to use a lack of github contributions as a negative, then you probably don't want to work for them. I've never counted it as a negative. Try the other shoe on though. If someone spends spare time coding and contributing to open source projects, especially if those contributions somehow align with the requirements of the job (language proficiency, the specific technology, whatever), should an employer ignore that as a positive for that person? Shouldn't someone who demonstrates a real passion for this kind of work not be given the opportunity to express that in an interview? Or should applicants withhold relevant ability and experience for some bizarre reason? If a company is using any one thing as a litmus test for an applicant they're interviewing wrong. And frankly to me that's a red flag for the organization. There should be nothing held against an applicant for not having a github account or declining to share it. But it's silly to think it somehow offensive to ask.
I guarantee your inability to do what you are trying to do is caused by your own incompetence, so maybe cut back on that extremely unjustified superiority complex &amp;#x200B; &amp;#x200B;
so, in other words, you have metrics that would benefit from seeing code examples... bam, you just argued for having potential employees share their github.
&gt; I guess having conversations with a candidate and trying to get to know them during the process is a shitty way to operate. No, only hiring people who code outside work is a shitty way to operate. &gt; they don't work more than 40 hours a week officially... but unofficially they better be coding personal projects after hours, amirite? 
&gt; I am sick of every company asking for open source contribution history, but themselves using self hosted repos. and &gt; No sane company would allocate work time for you to build your resume. I see your issue with my response to the statement above. What I failed to make abundantly clear is that I don't believe the issue is related to Open Source in any way. Companies are not asking for "open source contribution" they are asking for examples of work that they can see. dominic_rj23 is saying "how dare they want me to share my open source work without having open source work of their own!" and I'm saying "They don't care whether your work is open source or not. they care that they can see it." making a public github profile and publishing some readable code is a personal responsibility for job hunting. It's like creating a resume. Sure, it's nice if you can do that concurrently to performing work on OS projects, but it isn't actually the same thing. So, while companies may let you work on OS projects on work time, they are not doing so for the purpose of improving your resume. They are allowing you to work on passion projects and give back to the projects the community uses. As such, it's a nice plus, but is totally unrelated to the process of job hunting. A company that asks for public examples of your code before putting you on closed source projects isn't being hypocritical. They just want to know what they are getting if they hire you.
Hello everyone. I super excited to share The Road to GraphQL. I have been working on this the last 10 months and did everything to release it today as quality yet up-to-date learning resource to learn GraphQL with JavaScript (React.js, Node.js and PostgreSQL as database to make it well rounded). I hope you like it! **That's included:** * 350+ Pages (on 8.5 x 11 inches) * 45+ Exercises * 400+ Code Snippets * 4 Applications + Bonus Applications
There are 2 aspects to updating Electron. You can decouple Electron and node-side updates from the web code by bundling your web code in an ASAR. You can bundle an ASAR with the deployed package, and then check for updates using something like Squirrel, which can also handle the Electron-side updates. [https://electronjs.org/docs/tutorial/application-packaging](https://electronjs.org/docs/tutorial/application-packaging) [https://github.com/Squirrel](https://github.com/Squirrel)
That's another way to say it, sure.
Looking at "real" prod code is hard because candidates probably aren't going to sign an NDA just to do an interview. &amp;#x200B; We used to have people we interview come in for at least a 1/2 day (and we buy lunch) and do a code kata with a couple of other devs. The whole point is to see your code and how you think through a process. &amp;#x200B; Sometimes even ask if they would be comfortable doing it in a language they don't know. We would be looking for how they think through the challenge, not necessarily their knowledge of a language. Is your code "clean" (are your functions and variable names good, separation of concerns, etc.)? Are you going to start writing unit tests without being asked? Can you talk through what you are thinking about? I don't care if you have to google how to insert into a hash in C# if that isn't your primary language, but you should be able to communicate "I wan't a hash here so that this lookup is efficient" &amp;#x200B; You wouldn't commission a painter or a get a tattoo without seeing their work. This is along the same lines.
How does this compare to backstop.js?
thanks for explaining this, perhaps you could add some arrows, or numbers on the diagram so it is clear that everything starts with creating a schema - then a user like me wouldn't have to wonder how come "createdAt" dimension reads data from "created_at" column. Anyway, I find it all very interesting! The service I'm working on provides a JS lib to collect data (like classic web analytics do) and then read some of that data back (segmented, aggregated...). For example, you could track which products users are buying and then show the trending ones on the home page. Take a look at http://datadrivenjs.com for some quick code examples. 
Actually, a lot of developers dislike that approach, because the problems are rarely the sort found in day to day work, and they rarely include the sorts of complexity of real problems. So, there are two approaches that people rail against quite loudly... personally, I do both. I look at code examples provided by the candidate and I provide coding questions in the interview. One tells me "how does this developer work on a day to day basis", and the other tells me "how does this developer react when thrown a curveball".
cringe
How much data do you need to process in the browser? Where does the data come from - the server or from user? In many cases, the transfer related latency will have much bigger impact on the performance than on which end you crunch it. How many users are going to crunch it at the same time? Do you have enough memory on the server to support all of them? Do users have enough memory on their computers to process the data?
Did you guys hear that? That sounded like a goal post moving.
Interesting idea, the key issue here though is that functionality for certain features varies greatly between chrome versions. For a distributable desktop application where deploying updates is more intrusive for your users than a hosted web application, this is a slightly more risky approach. NWJS and Electron guarantee that your users are getting the exact artefact of your entire app that you’ve shipped. Nice alternative, though, might be fine for some apps. 
The title of the post is a bit misleading. I expected a link to download the ebook, but instead I have to signup to your website and enroll in a free course.
My interviews have all involved technical aptitude tests, where I’ve been asked to map out system design based on a set of requirements, or name/describe any useful design patterns. There have also been some logic puzzles, to see how I go about solving problems, how I break them down into smaller chunks and the like. There have even been a couple where I’ve been asked to write pseudo code for a function like factorial, or moving averages.
I've asked to sit with a developer or two to go over their code base after I've been offered the job. I've asked to see what they think their best and worst code bases are that I'd be working on. It doesn't take that long, you can carve it out in 30 minutes. When interviewing people, I'm always amazed at the lack of any thoughtful questions interviewees fail to ask when they're asked at the end. 99% of people don't have any idea what working there will be like before they walk in on that first day.
My crypto skills may be a bit rusty — is sending IV in the open secure in this case?
It definitely is a good question to ask even if they don't ask for your code. The reason is because their code maybe really really bad and organized extremely poorly and you'll be working in it for hours per day. Working on code that you really don't enjoy is not fun. You asking them is more important than them asking you because you can always conform to their coding standard. The question is do you really want to? 
I can't speak for anyone else, but I'm not looking for polished in people's github's or code samples shared in an interview. In general, I care about it more with junior end of the spectrum positions. Intermediate to senior level applicants I find it easier to vet their knowledge conversationally. So with a GitHub I'm looking first and foremost to see that you actually can code, and to get some idea of how you code, how you tackle problems. I'd rather see someone's messy, stream of effort, late night commits than some polished project uploaded in one go.
Click bait
Sorry, I had no bad intentions. I cannot edit the title, but if someone else can remove the free, I am fine with it. I just thought people would be happy to get such an extensive book for free.
Because answers are already here, I will give you a real one: Don't use Electron, it's apps are terrible in anything, except for being made fast
Clickbait wtf 
Is it worth 1 million internet dollars normally? 
Yeah, sending the IV in the open is fine. From the [wikipedia](https://en.m.wikipedia.org/wiki/Initialization_vector): &gt; An initialization vector has different security requirements than a key, so **the IV usually does not need to be secret**. However, in most cases, **it is important that an initialization vector is never reused under the same key**. For CBC and CFB, reusing an IV leaks some information about the first block of plaintext, and about any common prefix shared by the two messages. [From a StackExchange answer regarding this](https://crypto.stackexchange.com/a/2287): &gt; Depending on the mode of operation, transmitting the IV encrypted (with the same key as used for the rest of the process) can actually *weaken* security a lot. To be able to get the seed, and be able to decrypt, you’ll need not only the IV, but the key as well. And, if you’re securely managing the key, then it doesn’t matter who can see the IV. The IV just allows you to reuse the same key, without exposing yourself to pattern recognition vulnerabilities. So if you encrypt a bunch of messages using the same key that end with “lol dickbutt”, without an IV, an attacker could detect the similarity of the encrypted blocks, revealing some information about the message contents, with an IV though, this isn’t possible.
could simply reference the clicked element's id to get the index, otherwise you'll need a closure or something, what exactly is mineclick? you're calling it when you assign it to the onClick function, which leads me to think you're actually already using a closure or assigning it wrong
Probably assigning it wrong, I'm new at js. How would you reference the elements id?
mineclick(i) executes the function and as a result the return value is assigned to the onClick attribute of the div. What you want is assigning the reference of the function to the onClick attribute. You could do something like this: div.onClick = function() { mineclick(i); };
Immediately-invoked function expression, you can read about it [here](https://en.m.wikipedia.org/wiki/Immediately-invoked_function_expression) . You are assigning element id here: newdiv.id = i
Immediately-invoked function expression, you can read about it [here](https://en.m.wikipedia.org/wiki/Immediately-invoked_function_expression) . You are assigning element id here: newdiv.id = i
do div.onClick = function() { let index = i; mineclick(index); }; or do div.onClick = mineclick and in mineclick let i = parseInt(this.id); should work
Such this. I have been a full stack degreed developer for almost 20 years now and I have literally zero code in public repos and no intention of ever doing so.
Alright then you're probably declaring the function mineclick in the same function scope as the for loop. Move the function mineclick out of that scope and you'll be fine. Var declared variables are function scoped not block scoped, always fun. 
Thanks! It's nice to see what this new feature looks like in the trenches.
The problem is that the function is called when an item is clicked. The value of i continues to iterate as the click handler is added to each div. As such, when you go to click, the value of i is now at its highest value. An immediately invoked function expression (IIFE) uses a closure to store away values while still having access to variables in the outer function. It’s a useful tool. However, adding click handlers to every single div is unnecessary. You can attach a click handler to the parent element and rely on event bubbling. Then, you can use event.target to know what element was clicked on. You can store data on the element using attributes (using setAttribute) that can be accessed at a later time. 
Alright then you're probably declaring the function mineclick in the same function scope as the for loop. Move the function mineclick out of that scope and you'll be fine. Var declared variables are function scoped not block scoped, always fun. 
Fair enough, thanks! Better too cautious than pwned.
I've been waiting for this! I learned a lot from your Road to Learn React book. I have no problem signing up for an account to get this excellent content. &amp;#x200B;
pretty much by definition, every web application that works today- as well as 5 years ago using jquery v1.3 - is "evergreen". to say that apps written with web components, shadow dom, css grid, etc. are more evergreen than what came prior is a bit myopic. none of these shiny technologies are perfect either since they have to interop with the existing landfill of compromises. css, the dom, html5 has so much kludge in it that i wonder if it won't be replaced at some point in the far future with something much more polished. for better or worse, the web platform takes backwards compatibility very seriously.
Doesn't work with either, still calls 135 every time.
How do I use event bubbling? That sounds much more efficient
Ask for their open source repos!
Either im not doing it correctly, or it dont work: newdiv.onclick = (function () { alert(newdiv.id); })(); It just alerts them all when i start the loop and it doesnt work when i click on them
Actually I am hiring them. Getting a high paying dev job is a snooze once you have enough experience, getting the right job is still quite difficult.
ok you cocky tard that's not what the word hire means.
Yeah the way you do it won’t work. So after the first reading your code i thought that your click function returning other function. Is that like so or no?
oh no, I got the person and the idea. see how I managed to both call you a tad and explain that isn't what it means to "hire" someone.
the mineclick() function does not return anything, right now it just does alert(/*id on the thing that was sent to mineclick*/) 
Yeah i get that, but how would i know which one i clicked on? Is there some magic i dont know? (probably im a f'ing noob)
Yeah that works!! Thank you :) Im gonna listen to the others giving me advice on better ways to do it now, thanks for teaching me this method :)
What a bare-bones article. What am I encrypting? Why do I want it encrypted? Base64 is an encoding scheme, not encryption... How do I store the key? 2/10
It's really easy. Instead of adding an event handler to each div, attach it to a parent. It can be any parent in the DOM, even the document object itself, but it's usually best to attach it the closest container element. Then in your "mineClick" function, check to see which element was actually clicked. So you'd have something like parent.onClick = mineClick() function mineClick(event) { if event.target = i { do something } } 
Oh, im gonna try to see if i can implement that into my code, thanks :)
http://temp-mail.org/
Thank you.
Wow, it's either one extreme or the other with you eh? I couldn't care less what my guys do in their off hours. But yeah, if they really enjoy coding and like to spend their free time checking out different technologies that's a plus for a person working in my field. I'm sorry that's such a hard concept for you to grasp. It sounds like you're just insecure and PO'd that somebody who enjoys coding so much that they do it even when they're not getting paid for might have an edge over you when vying for a job. Is it required? No. Do I want them to if they don't enjoy it? No. I have a number of quality coders who don't. They're very good at what they do, and they have families and lives outside of that. My guys DO NOT WORK more than 40. I don't allow it. It's a recipe for burnout. And you know what? I have the same core group of guys for the last 8 years since I started building the team. We have had ONE person leave, someone who had an opportunity with a startup on the west coast. And we still keep in touch. Sorry, not sorry if I don't fit your stupid stereotype. Get over yourself.
It's refreshing to see someone trying to learn vanilla JS these days, it's worth it, and it'll help you understand fundimentals before you get exposed to too much magic in frameworks! Ok, so you didn't mention your implementation of `mineClick`, so let's say it looks like this, so we're on the same page: function mineClick(index) { console.log(`Mine ${index} clicked!`) } You wrote: `newdiv.onClick = mineClick(i);`. That shouldn't work because it should be `onclick` (lowercased), and also if `mineClick` was called like that it'd be invoked within the `for` loop, not when the div is clicked. Ignoring that, and sticking with out implementation of `mineClick` above, this is this fix: // ... newdiv.classList.add("cube"); newdiv.onclick = (function thisClosureFunctionStoresTheIndex(index) { return function thisFunctionIsCalledWhenTheDivIsClicked() { mineClick(index) } } /* We're calling our closure here, and creating a new scope that will store the value of `i` */(i)); document.getElementById("gamediv").appendChild(newdiv); // ... This will create a [closure](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures), that will store the value of `i` for each iteration of the `for` loop. Note, if you don't use a `for` loop, and instead create an `Array` and use `forEach`, you get the closure for free: Array.from({ length: CELLS_WIDE * CELLS_HIGH }).forEach(function(_, i) { var newdiv = document.createElement("div"); newdiv.id = i; newdiv.style.width = positionInfo.width / CELLS_WIDE; newdiv.style.height = newdiv.style.width; newdiv.classList.add("cube"); newdiv.onclick = function() { mineClick(i) } document.getElementById("gamediv").appendChild(newdiv); }) And because I'm niggly, here are a few other nit-picks that have nothing to do with this bug, mostly performance related: 1. You should cache your DOM references (`document.getElementById("gamediv")` should be put into a variable outside of the loop) 2. You should leverage [event bubbling](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Examples#Example_5:_Event_Propagation) for this sort of thing, and only create one event handler on `#gamediv` to handle the clicks (event handlers are expensive!) 3. You should probably use [addEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) instead of [`onclick`](https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick)
Well duh? :p Dont see why this would need a case study. Developers would already have known while working on this project. Figure the main reason is just lack of time and now they to handle such a story.
Have a look at this: https://codepen.io/anon/pen/LXpWmw
So, you can "define" your api. Some routes will have only a body, and no query ever. That is when you would use withBody in your definition. Some routes will have an optional query, so the definition of the api needs to support the query. For example: (a very contrived example, and not actually reflective of the library, but shows the issue). Lets say you have a route "POST /create-contact/" with a body of all the contact fields, and returns the instance that was created. Then, the route could take an optional query parameter to return more than just the instance, but also the related customer. You may control the return via a query string like "?with=customer". In this case, you want to "define" the api with the ability to pass in the query params. const api = { createContact: withQueryAndBody, }; But in many cases, you just want to create the customer and get the instance back, you do not need the contacts as well. In this case, you can call both the following: api.createContact({}, contactFields); api.createContact({with: "customer"}, contactFields); But mostly, you will be calling it with the empty first field. 
Also, this is a typescript library, so the definition would actually be typed like: const api = { createContact: withQueryAndBody&lt;IQueryInterface, IBodyInterface, IReturnTypeInterface&gt; };
This should be highest voted. Event bubbling is what you want to use. Adding an event listener to every single dov is not only inefficient, it's bad practice 
I'm not saying to withhold it, hell the only reason I got my job with no prior professional experience and no formal education was because of open source. It is another data point to consider, especially if they file or triage issues. How they handle themselves publicly is probably a pretty good picture of what you'll get professionally. But saying shit like "developers who are passionate instead of just treating a job like a paycheck" is a huge red flag to me. I'm not passionate about programming, I like it but it's a means to an end for me, and for a lot of people, and at the end of the day it's how I secure shelter and food and some fun. 
No problem! &amp;#x200B; Here's a pen with a few more ideas that might help you simplify things in the future - [https://codepen.io/anon/pen/XymamE](https://codepen.io/anon/pen/XymamE).
I’m seeing that reddit’s mobile web client isn’t handling code blocks properly. Apologies to anyone reading from there.
What's the selector you're using?
Oh hi. Thanks for The Road to React! It helped me a lot :)
Looks pretty bad on desktop too. Seems like you're trying to use triple-backticks for Markdown code blocks, and I don't think Reddit supports that - just four-indent blocks. You might want to paste that into a CodeSandbox and link it or something.
There's something you're doing here which is a pretty classic anti-pattern. Start with the behavior you want to achieve, then design your implementation, otherwise known as putting the cart before the horse. You're stated goal: &gt; take an asynchronous function and wrap it up to make it synchronous. is a) not possible in JS, and b) isn't your actual goal. Your goal is to run your wasm function in a manner which produces the correct results for your use case. Since you haven't described your actual use case, no one here can help you write JS to accommodate that use case. Raging about how you hate javascript is a clear indication (as are other statements you've made) that you're unfamiliar with the language; that's fine. There are plenty of people who can help you find a solution, but they can't do that if you're a) unable to articulate the *actual* problem you're trying to solve and b) getting all aggro about it. I'd be happy to help you find an implementation in JS that solves your use case if you can state your use case without reference to an implementation.
Ah, good point. Since it's only for a single element the loop would not be needed any more, and so this could replace lines 356, 357, 358, and 359 with the following. Updated to make sure it's only able to grab answer buttons instead of any input with a value ending in B, as it would with the last version: var button = preview.querySelector('input[class~="answer-choice-button"][value$="B"]') button.checked = true Not 100% sure without testing, which I still can't unfortunately, but this should only select the answer B.
Here is the code for the coding app https://github.com/joshborup/justcode Here is the code with some tests for a chat app I recently built that may help clarify sockets as well https://github.com/joshborup/pwa-chat-app Hope this helps! 
[removed]
I think you're not understanding my point. You want asynchronous code to run asynchronously. That tells me that you are using the wrong tool for the job. Find the tool that achieved your goal how it was intended instead of finding an anti-pattern to cream your desired result into code that wasn't built for what you want. Again, it's not me saying you're doing it wrong; it's the creators of the language. Sometimes languages don't always suit a specific purpose, and that's ok. That's why there are so many languages.
I am a hiring manager. I disagree with several of these statements. 1. Where you post your public repositories doesn’t send me a message about you. Use what you prefer even if that means not posting public code. 2. I always ignore forks. It’s much more time consuming for me to know what your actual contribution was to another project. 3. I don’t care if things are unfinished or unpolished. It absolutely does not tell me whether or how much you care about your trade. I don’t know the context of the project or your goals: for all I know you learned what you set out to learn and moved on and that’s a fine thing to do. 4. Having public code (that you explicitly reference in a resume) can help me get an idea of where you’re at but I’m going to get that information anyway when I screen you. At best it can help you get that initial screen but only if specific repos are called out on a resume.
&gt; "giant fucking mechbattles" won't really hold up during the hiring process. Why on earth not? 
The value 'res' inside of your map function is not an array, it's an object so ... results.map(( res ) =&gt; res.artists[0].id ).
Why no intention? &amp;#x200B; Have you used open source libraries in your full-stack work?
Just saw your React course, whats the diff from the free and non free
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/sIdexOn.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Initial impression would say to order `body, query`, as that’s what I have frequently encounter in other libraries api/http methods across a few languages. It also allows you to take advantage of default values, which makes the api easier to use. http = (body, query = {}) =&gt; // http(data, query) // with body and query http(data) // with just body http(undefined, query) // just query As you can see the last one is where the argument api is weird and unintuitive. Which brings me to the approach I’d recommend, which is the one libraries like axios use, which is just a single object payload argument. http = ({ data, query = {} }) =&gt; // http({ data, query }) // body &amp; query http({ data }) // just body http({ query }) // just query With this approach, you can still apply any of the combinations of arguments mentioned in your post, while still being able to take advantage of default arg values for when you want to omit something (or everything), without having to put placeholder values or using multiple different function names. However, I tend to prefer a functional style with currying, in which the opposite order would be preferred, as you want the data the function is operating on to be last. So, if these are curried functions, the `query, body` could make sense: import { curry, flip } from “ramda” http = curry((query, body) =&gt; //) httpData = http({}) // partially applied for just data requests httpQuery = flip(http)(undefined) // partially applies for query requests http(query, data) httpData(data) httpQuery(query) // you can also use the httpData for to achieve the same result as passing neither httpGet = httpData httpGet() // same as http({}, undefined) However, TypeScript’s support for typing curried functions is really great (actually a huge pain in the ass), and unless you are already programming in a functional style codebase, this approach likely will be weird, and unfamiliar. I’d go for the object payload approach, as it accomplishes all your needs in the post, is easy to type in TS, and is common api for these kinds of libraries, so it won’t be hard to grasp/remember when you/someone else uses it.
Puzzled by the desire to bend over backwards to shave 100kB of JavaScript code when the first page that a user sees when they log into their account loads 40MB of data for video previews that play in the background of the top of the page. You want to get the user to sign up on a slow 3G connection but then what happens? How are they supposed to watch anything even on the lowest quality? I just throttled to "slow 3G" and even after 2 minutes I was still looking at a loading spinner waiting for the video player to appear after selecting my first video. The article is interesting, but this is like a car maker like Ferrari talking about their optimizations to boost fuel efficiency while the car is driving at under 25mph. The concerns seem out of place.
It does nothing it seems but not fully sure. Is there a way I can give you the sites inspect element scripts? I looked at the view page source, but there are things that don't show up on it that do show up on the inspect element.
Companies ARE looking for open source contributions so they don't have to waste the time to figure out whether you're a good developer or not by looking at your code themselves. Not saying that open source contributors are better developers; just pointing out that the mindset is that if it's good enough for open source, it's good enough for us. Open source contributions, especially an open source project with significant traffic, is pretty much a golden ticket for a lot of employers, mostly non-tech companies who are looking to hire tech skills and don't know how to properly vet a developer because they aren't a tech company.
I don't think we disagree all that much. Given candidates of equal or equivalent technical skill I think most engineers draw at least some amount of differentiation from 1, 2, and 4 simply because they add depth to the candidate not as the final say in the decision necessarily. I've clarified #3 better because I didn't complete the thought that even unfinished work adds value weighed against none. Maybe I've misrepresented your thoughts, but I know for us in a recent decision it was a case of "it would've been nice if there was more in the public repos" but that wasn't the deciding factor for the hire.
&gt; I got told after they’re more worried about a suitable fit for their teams. Loads of people can write good, clean code, not everyone can fit into an agile team. The last 'real' job interview I had they didn't give a damn about github.com. They assumed my technical skills were more than adequate, based on my experience and past projects. They spent an hour or two simply asking me hypotheticals about team interaction, personality questions, etc. Basically they wanted to know if I was an asshole, and if they thought I was, they weren't going to hire me. I got the job. 
I graduated from the University of Oklahoma in 2005 with a degree in Computer Science. My first time programming was in college in Intro To Programming, using Java. Some of the students had been programming for years. Projects that took them an hour took me days. My first test, I failed with something like a 50. Somewhere between my first and second test, it clicked and I got ~95 on the second test. Even after it clicked, it was still really hard. Pointers took forever for me to understand, but after programming for years I really can't remember what was so hard about them (indirection conceptually is hard, but doesn't feel that way now). If you enjoy it, stick with it. It gets easier and becomes second nature, but then you tend to tackle harder problems, which places you right back at the limits of your comprehension. It's fun if you can deal with the occasional feeling that you have no idea what you're doing.
Thank you
Does it help? https://github.com/mbeaudru/modern-js-cheatsheet
Thank you, that seems really good just skimming it. I'm gonna read it :-)
Is their an app for that or something. This is what surrounds the answer choice button: https://pastebin.com/UJMg57gk It's probably not everything. And what about this one. It has more too I think. When I use it for the site, it shows every question as completed but bugs out and such. https://pastebin.com/zBFB8EGt Is there a way I can use this to get correct answers and such?
You are using the rest (...) operator on your then function. This makes an array of the arguments, which you then map over. However, two of the arguments are not results from your query, but informational arguments from jQuery, not results from your query. The arguments passed into the then functions are on the jQuery site. &amp;#x200B; If you have to use jQuery, I recommend reading about it here: [https://api.jquery.com/jquery.when/](https://api.jquery.com/jquery.when/) In a nutshell, the $.when() function calls the .then() function differently depending on the number of arguments originally passed, which makes it more difficult to use. (I'm guessing if you had a query of more than one artist name, the way you've set things up might actually work). &amp;#x200B; If you can, it would be better to simply use native Promises: let search = artists.map(artistName =&gt; app.searchArtist(artistName)); Promise.all( search ).then(( results ) =&gt; { // results is an array of the results each finished query. }); Or, if you a can use async/await ... let search = artists.map(artistName =&gt; app.searchArtist(artistName)); const results = await Promise.all( search ); // results is an array of the results each finished query You may also want to look into whether or not the API you are calling will allow you to pass in an array of artist names, so you are not slamming it with lots of requests if there is a long list of artists to query.
We have a large electron application that supports an app in a modular fashion. Each part of the app is built by different teams with different release cadences. The approach we took as to have the electron app itself a very small app with a few integration points. The modules themselves are hosted on an nginx server that the Electron application downloads and runs as normal web-apps (with Electron bits). We used to use squirrel for auto-updates because it is so seamless (be careful, with squirrel, it has no roll-back mechanism, only roll-forward), however the organisation took over updates and pushes it now with Microsoft SMS. Our pain points have been not to properly version our integration piece. It's a gap in our tech and something we need to deal with. At the moment the Electron application is updated with breaking changes without: 1. A good communication to module developers 2. Any backwards compat 3. Any proper versioning This is the biggest pain you'll feel if you start separating out, however this is a truism of any API integration.
**Defaulted to one day.** I will be messaging you on [**2018-11-08 03:06:35 UTC**](http://www.wolframalpha.com/input/?i=2018-11-08 03:06:35 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/9uqt7n/the_road_to_graphql_free_ebook/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/9uqt7n/the_road_to_graphql_free_ebook/]%0A%0ARemindMe! ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
looks like 2019 will be the year of hiring managers coming out on reddit :D
Dear community thank you for surprising me everyday. Keep Rocking!!
Please someone helping willing to pay $30 if I can be fixed lol
It's worth noting that `Object.prototype.toSource` [is only supported in Firefox](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource#Browser_compatibility)
Here's a sneak peek of /r/learnjavascript using the [top posts](https://np.reddit.com/r/learnjavascript/top/?sort=top&amp;t=year) of the year! \#1: [If you're looking to learn javascript, a professor at my college made a really cool free to use online textbooks that includes: exercises, clickable links, and lots of example files.](http://profsamscott.com/javascript/) | [4 comments](https://np.reddit.com/r/learnjavascript/comments/7xd7x0/if_youre_looking_to_learn_javascript_a_professor/) \#2: [To everyone currently enrolled at a college: don't forget to get your Github student developer pack. It contains a free domain name, digital ocean credit and much more.](https://education.github.com/pack) | [13 comments](https://np.reddit.com/r/learnjavascript/comments/8b81be/to_everyone_currently_enrolled_at_a_college_dont/) \#3: [Algorithms and data structures implemented on JavaScript with explanations, examples and links to related YouTube learning videos](https://github.com/trekhleb/javascript-algorithms) | [6 comments](https://np.reddit.com/r/learnjavascript/comments/8l09o2/algorithms_and_data_structures_implemented_on/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
If you have the funds for a monthly sub, I couldn't recommend JavaScript: The Hard Parts 1, 2 and OOP by Will Sentance on FrontendMasters website. The way that Will interacts with the live students there, and his enthusiasm for technical communication make it a joy. And even better, I feel like I have a deep fundamental understanding of what JavaScript is doing. I guarantee I sound like a shill for this site but damn if I haven't really accelerated my frontend skills, as compared to sites like udemy where you just build something and hopefully glean the knowledge while you do it.
It looks cool, the guy sounds enthusiastic and seems to teach well. But it's more of an actual class than a refresher, isn't it? After watching the free 20 minute preview in x2 speed, I'm afraid the 10+ hours might not be for me.
&gt; Do you do [...] pair programming? (Tells you major things about their way of working.) I don't know anywhere that does, and I live in SF/SV. (Pivotal Labs maybe?) What would it or should it tell me?
Registering provides a lead, which isn't free. Glengarry, Glen Ross 101
Pretty good books: [https://github.com/bpesquet/thejsway](https://github.com/bpesquet/thejsway) [https://github.com/getify/You-Dont-Know-JS](https://github.com/getify/You-Dont-Know-JS) [https://eloquentjavascript.net/](https://eloquentjavascript.net/)
If you've already covered these topics and just need to reacquaint yourself, then yes this is overboard.
On the other hand, I never feel secure in my ability to code... Ah ah.
Hi /u/andr813c, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/dr_error, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
The leads are weak.
Weird, at least shows up as a code block for me on New Reddit
Most likely it's due to not waiting till document fully load and it's ready or you did this on SPA page 
Huh. I actually have no idea if new Reddit supports backtick code blocks or not. Then again, I don't use new Reddit :) 
A big, meaty, hairy cock
It does!
If you can use css for this its pretty easy..on mouse over.. visibility hidden or display none..otherwise you will have to use removeChild from parent node
I saw a discussion on here the other day where someone was trying to say everyone should be using the browser debugger and a lot of people pointed out that it's often better/easier to just use `console.log()`. It made me realise that a lot of people don't seem to know that there's more to `console` than that, and it actually has some pretty cool and useful methods. 
What kind of projects have you done before? 
The primary issue is that reading into any project without the context of what it was, why it was, and why it’s in the state that it’s in can lead to misinformation and that is worse than no information. I’m sure some hiring managers and recruiters do this but it’s a bad idea which is why I generally ignore anything that’s not explicitly called out on a resume. If I do look at something then the only information I may be able to get is some lower bound on current skill. At best it’s a weak signal. I haven’t had a case in which a public repository was a significant or even minor point of differentiation between two people. There’s just too many other factors at play. The thing that is a differentiator is a few sentences about a personal project or two even if those statements aren’t backed up by a public repository.
As an alternative, you can set conditional breakpoints which themselves emit logs while also breaking on a condition. Set the condition to `console.log(whatever), condition` and let the comma operator be your friend. You get the benefit of logs without needing to resort to only printf debugging like a Neanderthal.
Thank you!
Glad you liked it! I hope I can continue the series with this book :)
Perfect! :)
:D
Canvas element is good for raster graphics applications, like: * Games * Animations * Graphs * Drawing/painting apps
It's about their landing page when you're not connected tho. And too be honest, by the looking of how small their landing page is, using react for it was overkill in the first place.
Sure. But if you’re going to be a Neanderthal, there are some more advanced Neandering techniques I thought might interest people. :)
I have made a simple text editor, a pong game, a brickbreaker game, some random animations with interaction using mouse input and some very basic procedural generation stuff. I have completed lots of little projects, but I am struggling to find an idea for one that is a little more complex.
Scope. Closure. Asynchronous stuffs, Promises etc. You likely need to join one of the React / Angular / Vue clubs, get your framework tattoo and prepare for battle.
And still no-one want to talk about `debugger;`. 
This is amazing. I wonder how the hell have I survived this long without...
I’m a writer. I like to write. I like to present things my way, to teach or explain in a way that I think conveys information I think is interesting. Not just post other people’s articles. 
On the subject of `log` vs `dir` (and vs `dirxml` if you felt inclined to mention it), using only Chrome's console may have left you with a particular but not necessarily correct impression. Tools are actually mostly _free_ to use whatever presentation they feel interesting for each method. As an example, the console in the current version of Firefox (trying this right now, as I write), will present _exactly_ the same output for... let e = document.querySelector("someSelector"); console.log(e); console.dir(e); console.dirxml(e); ...with the _only_ difference being that `dir` will print it with the first level _open_. In fact, all of the representations are, according to the specification _implementation dependent_. So if you're going to focus any part of the article on the differences in representation, I think it should at least be mentioned that the actual representations you get may (and will) in fact depend on which console you're actually using.
An asynchronous function is asynchronous because something outside of Javascript is called, which takes time - network, disk, timers. What is called depends on the user code. The "waiting" actually is for this external (non-JS) thing, so what needs to be canceled is the underlying I/O or timer. So given that that is different depending on what the code actually is - did it call a fetch, or a disk read/write, or whatever - how do you cancel this *actual* asynchronous operation? The Javascript part only is a representation, the actual asynchronous part lies outside of Javascript.
„Yet another article about console ApI” :)
Alright, thanks for your help anyway.
I do write code in my free time, but I don't always write professional quality code in my free time. A lot of it is a bit hacky, most is unfinished, none is unit tested. I spent so much of my "discipline", at work, keeping code clean and tested, keeping the scope tight, and generally being professional, that when I'm at home, mostly I wanna hack about and try shit out. But it means that I'm not showing work quality code on GitHub.
I **was** going to write a fresh take on React’s Hooks API...
Savin this for later
I know this is not answering your question, but it seems like you're already got the technical part done, if I was you I would focus on learning about pair programming, doing a code review, writing tests, Agile, development processes and stuff like that. Seems like you are looking for your first programming job and signalling that you're knowledgeable in how software development is done is a good start.
There are a lot more posts written about console API than a lot of people seem to realise
Always bet on javascript
When you are working on a code you know is going to break (creating new function and checking if library got you a correct format), you might as well add a \`debugger\` call to it, so it instantly stops instead of you visiting browser "Sources" tab. Also, works like charm with live page reloads and such.
I didn't realise how many other methods console had until now. Nice article and surprised to see you are also from Brisbane!
Its FREE, duh. 
/r/learnjavascript
Thank you for letting me know, fixed this! 
Thanks for writing. I did learn a few things, and I enjoyed your writing style. 
Neanderthal's where the creative distant cousins than interbread with the other more vicious and stupid violent ones...
Fixed this. Thanks, again! :) 
yea i kinda know i have to use removeChild and this element but how would I write this?
Could have sworn I tested it out... hmm. Guess not, but you’re right 
Decentralized Reddit alternative.
if you're trying to show people how rich the console api is, why not just link to [chrome's docs?](https://developers.google.com/web/tools/chrome-devtools/console/console-reference) it shows the full api, not just the parts you've discussed, it's the same format as this post, and it's probably more likely to remain up to date. like, not even a link in the conclusion of the post to let people know there is more information out there? https://developers.google.com/web/tools/chrome-devtools/console/console-reference but with less
Hello fellow Buckeye! &amp;#x200B; Let me start out by saying -- Yes, it is a common feeling. I dropped my desire to be a programmer in College because of that first Excel Macro class. Fast forward ten years later, and now I'm self teaching because it's always been my passion, and I should have known that. My advice to you is to USE YOUR TUTORS. You're paying \~$25k a year (probably), so do your best to buckle down and use the resources you currently have to learn the things you are worried about. I would kill currently to have those resources. Trust in the process, and aim to get incrementally better every day. I promise it will slowly but surely come to you. Lectures are boring, and might not be the best way for you to learn, so mix up your resources. &amp;#x200B; Also, I strongly recommend coming to Free Code Camp's meetups, or another programming meetup in Columbus. Tons of awesome people, sage advice, and great resources!
I will try to put it as simply as possible. Const is an abbreviation for constant. It means that once a variable has been declared, its reference cannot be changed. const val = 3; val = 5; // will throw error Let on the other hand is similar to Var except the fact that it is scoped. Js uses housing techniques to push up declaration of variables declared using Var which in turn is bad of scoping. An example will make it easier to understand. for( var i = 0; i &lt; 10; i++ ); console.log(i); // will give 10 even though I shouldn't be visible here for( let i = 0; i &lt; 10; i++ ); console.log(i); // will give undefined Now why didn't they just replaced Var definition instead of creating Let? Simply to ensure backward compatibility. Most of the programs today actually depends on the fact that scoping doesn't work. So to make sure they don't break anything in the process, they created Let. Hope it helped.
`var` is globally scoped. `let` and `const` are locally scoped. Example: ```js { var globalScope = true; } console.log(globalScope); // =&gt; true ``` ```js { let localScope = true; } console.log(localScope); // =&gt; throws Uncaught ReferenceError: localScope is not defined ``` Difference between `let` and `const` is that `const` allows only one assignment: ```js let multipleAssignments = true; multipleAssignments = false; ``` ```js const singleAssignment = true; singleAssignment = false; // =&gt; Uncaught TypeError: Assignment to constant variable. ``` 
Put very simply, they're two different types of variables with the idea that const can't be reassigned, meanwhile a variable declared with let can be reassigned. Both can still be mutated. Here's a stackoverflow you could read https://stackoverflow.com/questions/22308071/what-is-the-difference-between-let-and-const-ecmascript-6
Usually the transpileres are way too conservative. If you have a problem you want to debug, then most likely you should be able to use a modern browser/node that understands most of the code as is. Even with transpiler, most of them generate source maps that make debugging transparent. The big problems are transpilers that change the order of execution or break sourcemaps. Babel plugin for async/await was one of those. With proper setup, debugging async/await and generator functions is pretty simple again.
Thank you, would you mind explaining what you mean by mutated? I know what assigning and reassigning a variable means.
One correction: js uses hoisting*
Can’t wait to read the rest
lol seems legit, sounds like you work in the biz
Is there anywhere I can learn more about hoisting? It's a new term to me. 
Gotcha, cheers! 
Or so I've been told. I did look over them. The basics seem simple enough that I can pick them up in a day or 2, and I'm not gonna build expertise before I find a job, so I'm kinda waiting to see what they use where I get hired!
Is there anywhere recommended to learn more about debugging? Ive "learned" JS mostly by breaking apart code and seeing what makes what work, but I never learned how to debug things Ive made
Hi /u/Cor3y_123, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/jonathanlee06, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Came to the comments just to understand if this was really the case. The bonuses that Carlo brings to the table are cool, but if I was planning on pushing a desktop app to market I'd be extremely hard pressed to move forward with an approach that relies on a specific web browser already being installed on a client machine. When an app asks me to install another app that's generally a red flag for me, considering it usually ends up with my homepage somehow becoming Bing, a giant Yahoo toolbar attached to every browser I own, and 17 clown ass anti-virus and anti-malware apps all notifying me my trial is about to expire and I need to buy a license immediately to fix the 17190018 issues that are apparently preparing to cripple my machine.
Ok, No problem. Thank you
function drawCircle(radius, color, x, y){ var circle = new Circle(radius); circle.setColor(color); circle.setPosition(x, y); add(circle); } function drawRectangle(x,y){ var rect = new Rectangle(120,350); rect.setPosition(x,y); rect.setColor("#737071"); add(rect); } These are the function you'll need. However, I don't know the center of the screen so good luck with that one...
It's not for parameters. The comma operator is for combining expressions like ; is for statements. const test = () =&gt; (console.log('test'), retVal);
[removed]
Hi, author here. The idea was to first run the article through Readability to fetch just the main content and to strip some of the styles, then add in a custom stylesheet and print it to PDF — all while avoiding the way normal PDF printing will sometimes split images across many pages. 
It is a continuous interview path that loads "cards" in sequence to gather customer information. The 10 or so cards that come before this all appear the same and use similar selectors. Point is, I think the document is fully loaded at that point, but I guess I'm not 100% sure on that.
It's a CSS selector, I should've mentioned that. I'm using javascript and my locator file is populated with locators such as this: [data-simplebindhandler='cardSubmit:__repeat3-question3,updateInterviewState:__repeat3-question3']
Oh my bad...it auto corrected
Hey, do you mind elaborating on this with an example or something? I'm not sure what you're talking about here...
In Chrome’s developer tools, for example, go to the line you want to add logging to and add a conditional breakpoint. Suppose your code is function foo(bar) { return bar + 10; } You can set your breakpoint on `return bar + 10;`. Set the condition to `console.log('bar is: ' + bar), bar &gt; 15` and this will log the value of `bar` every time the function is called and break only when `bar` is greater than 15.
Hi /u/mikekreuzer, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding.
Hi /u/Kagerjay, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/dsibinski, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
You always have the option to put nothing there until they select a file. 
Hi /u/FunctionalFlavia, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/fatgirlstakingdumps, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/budross, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/crypto_shill97, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/SilentIphone, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
I suspect you might be asking about a specific set of debugging tools, but you're likely to get more mileage out of learning debugging practices at a higher level. My favorite talk on this is [Debugging with the Scientific Method](https://www.youtube.com/watch?v=FihU5JxmnBg) by Stuart Halloway. It's technically a talk about Clojure/Script, but little, if any, is language specific. TLDR: a framework of the right approach and questions to ask is generally better than the best debugger tools.
Before anything, you need to define what is a 'component'. A- Is it simply a software module, or plugin, or self contained software piece? B- Is it a custom HTML element? If A, I can not comment. If B, I can tell you this is a very large task, assuming you want to do it correctly. Angular, React and Vuejs are more about A, even if it is claimed they are about B. If about B, they are far from doing it correctly. The current web components standard is closer, but still not there, and unless it addresses certain fundamental issues, will never get there. Point is, Angular, React and Vuejs are certainly not a good example to follow if you are after B. First decide whether A or B, and if A, you need to have a well defined problem first. After that, and only after that, can you tell exactly what your challenges are. My advice to you, never start a software project with wishful thinking and call it challenges. Start with a well defined problem, and then the challenges present themselves to you. Treat your code like you treat your mathematics. Practice by trying to find out what are the well defined problems that define exactly each of Angular, React and Vuejs. Chances are, you will not find one for any of them, unfortunately, but it is still a good exercise.
Last week I received some great feedback from a couple of you guys, thanks for that. I've updated my repository, please check it out. [https://github.com/ProticM/plazar-js](https://github.com/ProticM/plazar-js)
This project has got a lot of traction recently, and I want to know how to make it more accessible to anyone wanting to contribute: https://github.com/CharlesStover/reactn I've received a few Issues and PRs, but would like to encourage more of the community to get dirty and participate. I've had some suggestions from users on how to improve the documentation to encourage more people to adopt _use_, but I don't know much about how to encourage people to _contribute_.
look, point taken. I didn't mean to troll and merely pulled a pun of associating a picture of a person with the title. I am not defending myself you're pretty spot-on. All I ask is for you (and a fair few mods) to accept my apology.
So, as I read through this I realize I've over-complicated things for myself again, but reading through helped me recognize that so I'll consider it a win. Extremely simple fix. I hyphenated the states in my original array of states, then used \`replace()\` to change spaces in the incoming JSON to hypens so it appends to those containers. Not the prettiest, so I'll welcome any improvements, but resolved the issue. :)
Yea but it can save a lot of time in cases where it is a pain to get to the line of code through sources. I add the `debugger;` save, then Ctrl-Z so it will be removed on next save, then reload the page and I am at the line in about 5 seconds. It is also useful when you need to inject something into a system that processes JS and there is not a clear place to find it on a page.
It's critical to point out when the API is 100% impl defined. It's like saying "the navigator API is alot richer then alot of people realize", which might be true, but watch out!
Thank you for this. 
Definitely a good point to include the link in the post, but I think an overview of his favorites/a subset is worth the article
Quite a fun idea. Nice!
Why not use react? Great API and it won’t change on a whim. 
So. I am statr to learn front-end and have some repo's. I will be glad if someone gives me feedback. [https://github.com/calvuscaput](https://github.com/calvuscaput)
Huh, I had no idea setting conditional breakpoints was an option. Thank you!
This is similar to the Either monad but without it actually being a monad, why not just either Either?
Thank you for your input. I see your point about maybe eliminating `withBody`, and just having the optional parameter for query.
Thank you very much. I figured the more "appropriate" way would be optionals last.
Last week someone was asking if we should deploy this via Babel for our React project. I needed to tell him that question had been obsolete for about 48 hours.
Currying does this kind of: https://ramdajs.com/docs/#curry, it lets you create one function that when called with a subset of arguments will just return a function that needs the subset 
While it's nice to use proper tools for the job, you'll soon realize that nit everything can be debugged with using a debugger instead of console.log. An example would be any "digestible" JS framework, which runs the refresh cycle few times a second in some cases, like AngularJS/React/*insert other here*. With a debugger you'll find yourself stoping multiple times on single use-case execution, often not having the certainty that it's the one you want. Another thing: race conditions (yes, it's possible in an event rich app). The debugger can affect the order of code execution in parallel events, thus masking the race condition itself. You'll never find it this way (sometimes you just need a split second delay for the code to work or not). console.log in non-blocking, so it's influence on the way the code executes is minimal (if you're not logging tons of things at least). The debugger block a part of your code, so you might just miss the issue.
[Here](https://developer.mozilla.org/en-US/docs/Web/API/console) is the corresponding documentation for Firefox's console. Seems like the functionality is pretty much the same.
Sometimes I worry that JS is evolving to be needlessly difficult to learn. I’m all for better standards and simpler code, but if it comes at the cost of readability and and comprehension then maybe we should stop and think. I’m the only UI developer in a company full of Java devs. My code reviews are done by seasoned developers learning JS (well TS) from my code. You won’t believe the amount of questions I’ve answered with something like ‘it’s standard practice in JS’. Introducing them to the words truthy and falsy was also a hoot.
Seems like a fairly straightforward pattern to understand so I'm not sure it needs to be cleaned up/compressed. You lose the ability to easily partially apply functions which is a really useful thing to have.
How would you feel doing code reviews of advanced Java or erlang code? Don't you feel that code reviews should be ideally done by a seasoned dev in the language? I feel like your pain points are specific to your unique circumstances and not abstractions in JavaScript itself. By the way, you would learn more under a strong leader in your language. Alternatively, you could use that opportunity to learn Java (no shortage of leads to ask questions and make you grow)
Iv’e been imagining a day where I see a linked Medium article which isn’t subscribe to view.
Currently working in a non web development position and have been learning front-end web dev for about a year and a half now part-time. My goals have changed over this time as to what I'd like to do, but I am curious if I have enough code base to begin applying for something related to web dev sometime next year. Opinions greatly appreciated. [https://github.com/tkuchar](https://github.com/tkuchar)
JS **Composition** is like function husbandry. It’s like combining and mashing multiple functions together to spawn or build a brand new one. As simple as that. Straight to the example....
One way of doing it might be to use the sort() method on your queue array to put it in order, then just comparing your destination floor to the items in the array. Something like: queue.sort() for (i = 0; i &lt; queue.length; i++){ If (destinationFloor &gt; queue[i]{ return queue[i] } Else { return destinationFloor } } I'm pretty new to JavaScript but I think something like that should work
In what ways is it not better?
I'm kinda confused by what you mean. Do you have examples of this pattern that you're actually seeing? Normally, there's just two functions - the outer thunk action creator returning the inner thunk function itself.
More than 2 "levels" feels really smelly to me.
&gt;Sometimes I worry that JS is evolving to be needlessly difficult to learn Only sometimes?
wasnt a help post but okay.... lmao 
Why not use the two letter abbreviation? No need for Mississippi_container, use MS_container. You'd have no trouble with New York or West Virginia, NY and WV. 
the example above is actually called a curried function, it's just in JS you have to define 'how' a function can be curried, whereas languages like Haskell will infer it from how many args you've provided.
That describes the API, not just Firefox's implementation.
Java developers in particular have the hardest time getting on board with Javascript in my experience
I have to support ie8. 
So what you're describing are arrow functions which return another arrow function when called. In particular, arrow functions written in concise/short syntax, with no other statements but the returning of the inner arrow function. Personally I find such combination of syntax in one line to become confusing very fast. I don't think it's considered an antipattern, and personally I wouldn't restrict it through linting. However in most cases, seeing multiple of these arrow functions opening on the same line causes me to want to convert the outer arrows into long syntax to improve readability (ie wrapping the body in {} and multilining it). Finally I don't really see a good reason to adopt a more concise syntax for this behavior, and I feel like it'd do more bad than good. The syntax combines different things that aren't necessarily related, which can make refactoring more difficult.
Thanks, but not necessary, the HTML is generated by a few lines of JS and is only used as an internal tool so I'm not putting too much into it. Thanks for the help, I'm working on that now.
1) you shouldn't check in the node\_modules directory to github. 2) where is the package.json file?
"a lot of people" means OP.
If you are using JavaScript doesn’t it have to be .forEach(function(){}) or something of that nature? 
The ez way to do it to store everything in an array and sort it every time you get a new element. The snazzy way is to use a min heap and also sort it every time - but that’s only necessary if your elevator had a very large number of floors and people.
Use [withCredentials](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials) to allow cross-origin requests.
Great now I have to check caniuse.com and weigh the incompatibilty risk for log statements?
Oh, ok. [Here](https://tylermcginnis.com/javascript-private-and-public-class-fields/)'s a post I wrote about it. 
No, _you_ are saying that.
This is not a TypeScript feature, it’s an ES6 feature: If you set the target to es6, you’ll see classes in the output. But even there, they are still mostly syntactic sugar for functions.
Amazing, great job. I know many times I needed to convert colors or do some advanced operations with them. But I have been too lazy to deploy a package for that. So that can definitely be useful for me. Quick suggestion. How about implementing tweening &amp; easing with colors?
Well that is a remarkably simple solution if it works. I’m not sure I really understand what “Credentials” I am sending here. Seems like they will get my root domain which will be checked against a white-list that the external server sets?
Can you write a blog post that just points to docs and nothing else?
I'd be interested to know if that works for you, just at a glance it appears to me that has more to do with sending authorization headers over an already enabled CORS endpoint, and has nothing to do with allowing CORS. 
I didn't bring up currying because I have less of a problem with that if that is your use. The pattern to which I am referring is usually a way of nesting or supplying callbacks.
Combining things that use thunk patterns creates longer chains. If you setup an action creator to also be an event handler, which also receives render phase data, you might end up with something like: `(data)=&gt; (e)=&gt; (dispatch)=&gt; ()=&gt; {}`
I'm still confused by what you're showing there. How would you use that in actual code? Where are you seeing this pattern being used? And fwiw, I personally would _not_ pass an event object directly to a thunk. It ought to be the component's job to extract whatever's needed from the event object, and call the thunk with those arguments.
"For security reasons, browsers restrict cross-origin HTTP requests initiated from within scripts. For example, XMLHttpRequest and the Fetch APIfollow the same-origin policy. This means that a web application using those APIs can only request HTTP resources from the same origin the application was loaded from, unless the response from the other origin includes the right CORS headers." https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS You might want to think about running the scraper on a server in express/using cloud functions, there isn't a way around it in the default browser environment because otherwise I could just request all your Facebook /messages from any other website (just spoof the auth key until one that works is found)
&gt; mostly gj
I don’t really understand the readability complaints about this pattern. I think it is a very concise and readable way to create higher-order functions. 
What's stopping you from spoofing from not inside of a web page?
I work in a Go shop where the devs don't \_necessarily\_ know what an Either monad is. This approach is a bit more familiar to them. :) A lot of people have brought that up though! Will have to look into it.
Seems you could achieve the same with native Class getters/setters
IP address check?
I'd second this. Putting your 7 different API calls into a cloud function that acts as a gateway means you: - can use keep-alive connections on the server to improve performance - can better cache (where appropriate) upstream results to improve performance - can finely tune your CORS behavior to make it work across multiple situations - can hide your third-party credentials (such as api keys) from your client code
&gt; a lot of people pointed out that it's often better/easier to just use &gt; console.log() But that's dumb. const a = { foo: 'bar' }; console.log(a); a.foo = 'baz'; Now if you look at the console, it will say "baz."
That looks like it should work. What's in d3queue.js? It's the only one loaded from a relative directory and not a CDN... is it there? d3js appears to host it: https://d3js.org/d3-queue.v3.min.js
Read https://reactif.js.org/guide/basicidea.html, you will see Reactif can solve the issues you have to encounter while dealing with too much getters/setters. Try to define individual getters/setters based on the prop user called, you will see the repetitive steps. Reactif solve these with FRP's Observables.
Watchandcode.com - the free course is the best resource evah.
const whishes = { name : "A Car" } whishes = object name name = property name A car = property value
Thank you for posting 
just place some ads
Oh I think I understand them now thank you for the explanation. An object can be a string or a number. A property can be the length of the string or number .length . A method is like a transaction console.log() or parseInt()
Hi all, a bit late to the party but hey, better late than never. &amp;#x200B; My github: [https://github.com/Ladoli](https://github.com/Ladoli) &amp;#x200B; I'd mainly want my pinned repositories looked at! Also just published my first NPM package (ripplescript) so I'd love some feedback on that as there are bound to be some errors or things I can imrpove on it: [https://www.npmjs.com/package/ripple-script](https://www.npmjs.com/package/ripple-script) &amp;#x200B; [https://github.com/Ladoli/Ripple-Script](https://github.com/Ladoli/Ripple-Script) [https://github.com/Ladoli/React-Ladoli](https://github.com/Ladoli/React-Ladoli) [https://github.com/Ladoli/mealmate-webapp](https://github.com/Ladoli/mealmate-webapp) [https://github.com/Ladoli/Translink-Live-Bus](https://github.com/Ladoli/Translink-Live-Bus)
You could have user accounts linked with paid upgrades.
I *HIGHLY* recommend [Eloquent Javascript](https://eloquentjavascript.net/) It's a fantastic resource, free, and teaches you some of the quirks of JS too
The other answer are good, but I'll try to expand a bit. There are certain primitive data types in javascript (undefined, null, boolean, string, and number), everything else is an object. Everything. (Arrays, Sets, Functions, Iterators, Symbols, etc) Object's are a key/value collection. const obj = { 'one': 1, 'two': 'two', 'three': [null, null, null] } Key/value just means if you want the value in a location you call `obj.one` to get `1`. A Property is any key whose value is not function while a method is just a key whose value is a function (there are exceptions like getters, which by that definition wouldn't hold up, but we'll move on). ``` const obj = { 'property': true, 'method': function(parameter) { return parameter; } ``` So in this object if you called `obj.property` you'd get `true`. And `obj.method` would return `&lt;Function&gt;` while `obj.method('whatever')` returns `'whatever'` Hopefully that made sense. Now Arrays are objects. Notice when getting something out of an array (say `const arr = ['foo', 'bar']`) you call `arr[0]` to get `foo`? That's because Arrays are in a sense objects with the key being incremented integers (not exactly, they have more to them but it helps to think this way I find). ``` const arr = { '0': 'foo', '1': 'bar' } ``` That would get the same thing for `arr[0]` (the integer 0 is type casted to a string). And you can call methods on Arrays like sort because those are the methods which are in every Array object. ``` const arr = { '0': 'foo', '1': 'bar', 'sort': function(a, b){ // return this sorted by values } } ``` Plenty more to get into like inheritance and prototypes, statics, etc.. But hopefully that helps out a bit
Another downside to using arrow functions as class methods is that they're not easily tested. You can't spy on them when mounting the component (still possible with shallow render though).
Awesome collection !!
I really liked https://github.com/getify/You-Dont-Know-JS And after 2 years I still come back to it
Thank you, that's very kind! Re: tweening/easing, do you mean something like this? This gets 10 colors from the red-blue spectrum, distributed along a bezier curve. My idea here is to just provide the `samples()` method to get N evenly spaced values, then you can use whichever easing function you wish on them. let culori = require('culori'); let easing = require('bezier-easing'); culori.samples(10) .map(easing(0, 0, 1, 0.5)) .map(culori.interpolate(['red', 'blue']); 
Alternatively, these are called "key" "value" pairs. 
Either shovel a ton of tracking scripts down your users throats &amp; sell their personal deets. Or sell them logins. Option B is a lot more work, but it’s honest work.
Would people actually spend money on a game that's that small, though?
It also gives you the opportunity to select exactly those bits of info you need from the various APIs and rebuild them to your own spec. For example, your server could make periodic calls to each API, cache the last X periods of data, reassemble it for your personal needs from those caches, and have it ready to dispense. So when your front end makes the call, it sends the request for data it needs when it needs it, instead of making three API calls to just to get X Y and Z for one game. Also ensures that if one API isn't functioning, you can still make decisions based on the latest data set, even if it's outdated.
Ask yourself this: Why would anyone pay for such a thing?
There will be no TL;DR but bear with me as I am living of JS games since Canvas was introduced. Try to monetize it to learn how it's done. The fact that you are asking that question is a sign that you have no experience in the market you are hitting so anything you do will give you some enlightenment. If you are making a game for money then monetization is the FIRST decision to take. Example: I am desiging the game for ads - so I need something that will let me display an ad as often as possible (probably I will go with quick death/respan mechanics) and a great traffic (How do I achieve that? Do I have a fanbase to utilize? Maybe I will upload my game to all "Flash" game portals? Maybe I will use some existing niche like iogames). Other options, license the game, pack it as a native mobile app, go for Steam, utilize IAPs or ads or both. I can't tell you which method suits your game - be sincere with yourself - look at your game - look at the markets and think about what makes a game successful in that market? Then comes the last point - you can have a great game and a great monetization plan - it will be worth nothing if you can't get your game in front of your audience - contacting press, youtubers, posting on social media, licking asses, having debilitating conversations with players and non-tech people in industry. Of course you can be this lucky 1% who throws his game anywhere and it goes viral - remember that nobody tells the story of the other 99% tho. Also this talk assumes that your game has some value - be sincere with yourself - if it's just another variation of some tutorial then throw it on newgrounds and move on.
Eugh. This is good advice but I would hate to think of money before fun when making a game. Reminds me of why I gave up being an artist. I'm happy to keep my creative outlets as hobbies.
Unfortunately things change when you have kids to feed and no savings to pursue your creative endavours. Ultimately I believe that most independent games that achieved the success came straight out of heart - but too often it's not an option. My most appreciated game is wanderers.io - I made it just for the sole experience of tiny people sitting by the campfire - it's also my least earning game.
Thanks for the response! Because I am so new to game monetization, I think that I will take your first advice and move to a paid server to use Google Adsense. It'll most likely end up as a raycasting tutorial with some minor upgrades, so failure is certainly an option.
Yeah. I understand that's how things work, it's just not for me! It's cool that you're able to do JS games for a living.
the website looks like someone came to know about css slide-in transitions and included 3 libraries just to make that happen
Forget about the ads for a moment. Focus on getting traffic. Go online and see if you can get at least 1000 unique users daily. Google Analytics is your friend. When you see that you have the traffic implementing ads even for the first time will take you 1 day. The last point - if it's not a heavy text based game you cannot use Google Adsense - it's against the rules. Contact AdInplay instead. For 1000 Users daily you can expect like 0.25 - 0.50 EUR a day - that should cover the server cost.
Okk, thanks!
&gt; medical Nopes. Banking.
The App Store explicitly forbid apps that are just glorified WebViews. You need tot actually use device functionality in some way.
If you have access to the external server, you can set the `Access-Control-Allow-Origin` response header on its responses to permit your request domain. Then you don't need a CORS proxy at all. Alternatively, the CORS Anywhere app's code is opensource, so you could roll it yourself. There's also some simple code to set one up [in Swift](https://gist.github.com/sciolist/2e741ff651ffe58b28f4); just a single file. I'm sure there's code for seting up a CORS proxy in JS out there, too.
That was going to be my next guess
Just code a proxy back end which takes the requests and sends it to the client
Maybe
Just use Hyperhtml for JSX without the compiler.
Said no one ever
I like the idea of templating my HTML snippets. I really hate using Javascript to piece it together in realtime. I do use that in 2 situations: 1. I'm on the bus, on my tablet or phone, and building a prototype where I don't have access to real tools like an IDE or a bunch of servers; 2. When I feel so arrogant I don't have to care about accessibility or security-aware and privacy-aware users who have javascript turned off. But otherwise, I much prefer having the templating handled at the server.
I used to not like JSX... now I like it.
It's not that bad. ES file manager has a good one built in
What prevents you from rendering jsx on the server?
&gt; When I feel so arrogant I don't have to care about accessibility or security-aware and privacy-aware users who have javascript turned off. TIL ignoring the &lt; 1% of web users who likely fully expect a broken browsing experience by default as a direct result of their own choices is “arrogant”.
I found an exceptional JavaScript UI control library. [Syncfusion JavaScript UI controls](https://www.syncfusion.com/javascript-ui-controls) It offers 50+ controls in material, office fabric UI and bootstrap design. It also supports multiple frameworks such as Angular, React and Vue.js.
Has anyone had much luck getting TypeScript, Vue and JSX to work together using a class based approach for components? 
Nobody can get very far these days with JavaScript turned on. Accessibility?... that’s on you man.
&gt; ES file manager Just had a glance. It wants more permissions than a megalomanic. I get it needs folder access. But device ID, identity, wifi connection. This app knows everything about you.
Apparently the new hotness is hooks instead of components. I can't wait for global variables and gotos to become popular again.
You need a lot of screen space to program, and when the keyboard uses up 2/3rds of your phone screen... how the fuck do you see anything?
And I greatly dislike having to activate javascript for the most basic of web sites. I refuse, and I will deal with the consequences. I will find a competitor whose devs are smarter. I also don't get tracked or spammed with ads. And I don't pay huge premiums for my mobile phone data consumption
I use a small keyboard called the Hacker's Keyboard. And I don't need to see a lot of my code at the same time, either. I'm not saying it's a fun experience. I'm saying it can be done for I'm doing it. 
Hey, here is how I do it. When you are used to it it takes only few minutes to setup from a blank server. This example use **php 7.2** . It can be adapted to any server langs. 1/ You need SSL, an adress that start with https://. You need a domain name. \---&gt; [https://caddyserver.com/download](https://caddyserver.com/download) will do the job very well. Include the **http.cors** plugin at install. Basic Caddyfile config with php cgi: myapidomain.com { root . cors gzip log ../caddy.log fastcgi / /var/run/php/php7.2-fpm.sock { ext .php split .php index index.php } } At first launch, all the ssl keys should be set automagically, and the server will respond at [https://myapidomain.com](https://myapidomain.com). Php code, a simple json api handpoint, with **CORS enabled** header, and json header. if ($_GET["what"] === "me"){ header('Content-Type: application/json'); header("Access-Control-Allow-Origin: *"); // Retrieve whatever here, for example file_get_content("http://closedAPi.com/..."); // Remote data, database, etc. echo json_encode(["Hello","World","!"]); exit; } From javascript in the browser, using es7 await and fetch: (async() =&gt; { try { let response = await fetch("//...myapi.com/?what=me"); let data = await response.json(); let r = JSON.parse(JSON.stringify(data)); for(let t in r) { console.log(r[t]) } } catch (e) { console.log("Async is safe") } })() Output: **Hello World !** 
I like that: server-side rendering. By default? Are you implying that having javascript active by default is a good thing? Oh boy. 
Nothing. I will start doing that. Thank you!
One more option is Chrome Extention for example. You could send a message to the background page and then send a request from it to any server you want.
Instead of components ? Why do you think that the hook hype is built at the expense of the component ?
I just build a form with automated markup generation and validations for surveys including extended constraints and conditions. It can be configured through a json and is fully customisable. It can define it like the following example: \`\`\` { "currentPage":0, "pages":\[ { "pageId:":0, "fields":{ "city":{ "title":"Where do you live?", "elementType":"select", "options":\[ "Boston", "New York", "London" \], "validators":{ "isRequired":\[ true, "Custom: The field is required!!" \] } }, "name":{ "title":"What is your name?", "elementType":"input", "inputType":"text", "validators":{ "isRequired":\[ true, "Custom: Please enter your name!" \], "isLength":{ "min":4, "max":10, "message":"Custom: Your name has to between 4 and 10 characters" } }, "constraints":{ "visibleIf":\[ { "pageId":0, "name":"city", "conditions":{ "equals":\[ "London" \] } } \] } }, "longname":{ "title":"Why is your name that long?", "elementType":"input", "inputType":"text", "validators":{ "required":true }, "constraints":{ "visibleIf":\[ { "pageId":0, "name":"name", "conditions":{ "isLength":{ "min":8 } } } \] } } }, "commonErrorMessages":{ "isRequired":"Default: Please answer the question.", "isRange":"Default: The value is out of range.", "isLength":"Default: The length is not supported." } } \] } \`\`\` (Not all properties are shown here...) You have the option to set constraints like \`enabledIf\` or \`visibleIf\` along with conditions like \`isLength\` or \`equals\`. Of course it is possible to set an atomare value like a string or several values in an array for equals to apply and with similar behaviour for other properties too. It has about 250 lines and does everything perfectly, I used VueJS for the generation of the form and exported the logic into a package, so it can also used along with nodejs for backend validation of the poll results. If you are interested in the source code, I could ask my employer if I can publish the project on github. &amp;#x200B; And I learned Yesterday that, setting a property in an object equal to \`undefined\` and not using \`delete obj.prop\` is actually an anti pattern as it can lead to a memory leaks.
You would not like how Elm renders templates, here's an example: `view model =` `div []` `[ button [ onClick Decrement ] [ text "-" ]` `, div [] [ text (String.fromInt model) ]` `, button [ onClick Increment ] [ text "+" ]` `]`
Yeah, but no. An object doesn't have a length. Arrays does. const myObject = { propertyOne: [1, 2, 3], propertyTwo: 'hello', methodOne: function () { return this.propertyOne; } }
"Programming" css and html and copy paste js snippets I'd imagine.
hahaha, oh man... I used to use something that did hyperscript style rendering a loooong time ago. It was in PHP. 
They are still components though, stateless functional components
No. Accessibility is on all of us who develop GUIs. Many javascript developers get it wrong or simply don't care. Just like many developers in other languages. Accessibility is hard. Javascript doesn't make it harder or less hard. Thus the onus is on us, developers.
My sarcasm was not directed at the notion of server-side rendering. I prefer it over real-time client-side rendering. My bad for not having made that clear enough. The point about javascript being required for a reasonable user experience is exactly the one I deplore. I understand that it is how it is. I don't have to like it.
I'm having trouble understanding this. How are they still stateless with hooks? Isn't there a `useState` hook? Or does it just depend on the component now? 
*for* lets you loop over a numerical sequence *foreach* lets you loop over the elements in a container
[https://thejsguy.com/2016/07/30/javascript-for-loop-vs-array-foreach.html](https://thejsguy.com/2016/07/30/javascript-for-loop-vs-array-foreach.html)
gzip negates that issue
&gt; According to the proposal, you can create a private field using a `#`. Yes, you read that right, `#`. These decisions remind me of the C++ committee ones.
Good luck using any web apps whose core functionality isn't implementable without JS. What would you prefer, devs go back to using forms for everything?
I’d love to know too. 
Good lord this sub is so toxic to anything disagreeing with something not invented by Facebook.
Or, fire up the inspector and “display: none;” that garbage. 
There are some good points here, but I'll add one that is outside the context as its something I've been thinking about a lot. The less you can make yourself come across as a commodity, jumping through hoops like this to get hired for a skillset you're competing against hundreds of thousands of others over, the better off you'll be. IMO once you've got some experience and feel at least somewhat comfortable being able to take features and implement them without much guidance, it's time to start focusing on distinguishing yourself from the rest of the herd. You don't want your resume and list of experience to come across a hiring manager's desk with something like: &gt; 5 years experience Node, 3 years experience React, implemented all features on time or even ahead of schedule, [insert skills and experience almost everyone else has] Sure, if you have some open source projects that might help set you apart, but it's becoming such a requirement for hiring nowadays that you still end looking like yet another developer in a sea of developers. Unless you are someone like Dan Abramov of course... I think often we as developers shoot ourselves in the collective foot by not highlighting, quantitatively, how our skills deliver value (in terms of decreasing costs, or increasing revenue) for the companies we've worked for. And so we end up having to compete against each other via interviewing with these weird take home tests, day long whiteboarding quizzes, requests for examples of "your best!" open source commit, etc. When, instead, we could be having conversations in our interviews like "I implemented a feature that resulted in 20% increase in revenue, here's how I can apply my technical skillset to help your company achieve the same". And (hopefully) the silly code games would just go away. I know many companies will still insist on making us jump through these hoops - and assessing technical skills in some way is absolutely important - but I think if we can learn to portray our value in a different way, we'll make it easier on ourselves when it comes to the interviewing process. Not trying to preach or anything, just want to offer a different perspective.
gzip and brotli are your friends
That what happens to all kid friendly tech like PHP, jQuery, etc. Kids are just way too offended by truth.
I made a full blown native Android app on my Nexus 7 tablet over one hour bus trip. It even had some C code, which I also compiled on a tablet. I made UI nice over the weekend and earned nice chunk of money over a year after publishing to Play Store.
Why not? That doesn't look much different from hyperscript to me?
and now for a way to make that permanent each time you visit medium...
Had the same XP a month ago for other tech. It's simply the shoot-the-unpopular-opinion-messenger subreddit over here.
Explain please how it breaks the principle of separating concerns. Looking for a discussion not a flamefest. 
Use Safaris Reader Mode, or the equivalent in your favorite browser.
Indeed, the hyperscript function is the core of the idea, not so much the XML to JS translation.
I have a present for you, [f*ck overlays](https://chrome.google.com/webstore/detail/fck-overlays/ppedokobpbdajgiejhnjfbdjlgobcpkp).
Ah, I didn't even look at the hyperscript and assumed that the reason for disliking JSX was the whole markup in JS thing. My bad!
You have hit the nail on the proverbial head. The joke for me is that, as a developer who gets to interview potential candidates I really don't care about your repositories beyond maybe that you know what version control is. I do like it when they tell or come with a story, but it about isn't necessary. I care that the person is going to fit culturally with the team, and provide value. Laugh over generalizations of personalities based on where their repos are hosted? Great. Totally embarrassed by the shoddy work in your public repos? Join the club. Totally bomb a chunk of the technical interview? Who doesn't? The true measure of the quality of a candidate is when they can verbalize the value and passion they bring to their work. Don't settle for working for companies that make you jump through the hoops, and sell yourself as something of value not a commodity. It'll benefit you and the perception of our trade.
Hi /u/leonardomso, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Sometimes all you need is a hammer
They are most assuredly not stateless. They are absolutely functions with internal state. 
I sometimes become worried that considering everything a component will lead to a degradation of separation of concerns, but I still love JSX
You need a 10min-tutorial to understand and use jQuery to its fullest. I'd say that qualifies as kids friendly. Compare thar with WebGL, where you first have to spend a few years learning linear algebra and *then* the rendering architecture of graphics cards to get anything out of it.
can you tell me why the google sheet doesnt pick up this formula when i put the script in the scripteditor?
Both examples you gave are immensely exaggerated in opposite directions
That’s my personal experience. I think I didn’t even use a tutorial for jQuery, I just saw a few examples and started to use it.
**JSX is** **~~a stellar invention~~** **PHP** &amp;#x200B; FTFY
Views should not contain any business logic whatsoever. This is a concept lost in web dev community many years ago, both on front-end and back-end. For example, the linked article states that: &gt; Regular **javascript logic applies**; no need to re-invent **‘if’ and ‘else’** in yet another templating language. Presentation layer should not contain any ifs or elses or whatever. Your template should only contain layout-specific mark-up and data bindings if applicable. This is how FXML looks like, for example: &lt;GridPane minWidth="200"&gt; &lt;Label text="Inline value" /&gt; &lt;Label text="${counter}" /&gt; &lt;Button text="Subtract 1" onAction="#onActionMethod" /&gt; &lt;/GridPane&gt; There are no ifs, no loops, no logic at all. Only one way bindings as inputs (data being passed into a component) and outputs (event handlers for events generated by a component). Such approach gives you proper separation of concern and isolates your views from any business logic completely. And once you have this separation, you can do a lot of cool stuff with your templates! You can easily create designer tools to mock up UIs quickly and painlessly, you can easily create plugins for existing tools like InDesign to export designer work straight into templates or import them back, you can create automated validation and inspection tools for your CI, you can use the same templates for different rendering back-ends and even share between frameworks if really needed. Possibilities are unlimited. Oh, and you can also write your code without worrying about your presentation. You only worry about an interface between your view and code, which is a set of bindings and event listeners. You can also re-use controlling logic between different views or switch it to a different implementation. Just like you would normally do when using interfaces to link different parts of your application. If you do a proper separation of concern inside JSX, then you will end up with a plain HTML file without any JS wrappers like a render function. So what is the point of JSX? None.
You have probably missed the days when every other question on SO got "use X jQuery plugin" answer...
It's the complete opposite. PHP is a complete programming language embedded in HTML. JSX is a DSL that maps directly to JS constructs and which is embedded in JS, a generic programming language. This approach is 1000x better than the PHP approach.
Are you interested in fintech? &amp;#x200B; I strongly recommend you spend some time studying Big O notation and algorithmic complexity. Whether that's a CS degree or not I won't say. There is plenty of online material, and I'm sure you would find plenty of CS material. &amp;#x200B; &amp;#x200B;
Well yeah you block those and use mock gps
I completely agree with you as far as business logic, but it's useful to have the ifs, loops, and logic available for UI logic. If your viewmodel exposes a boolean flag, then your view needs some kind of conditional logic to alter the view based on that flag. You can get far with binding to classes and attributes, but that can get more complicated and harder to follow than the logic you're trying to avoid. It's ok to have tools. Just learn not to abuse them.
I find the component/module based approach so much more intuitive. Far more likely that you’ll want to access css and view logic together than accessing all views at the same time or all models at the same time. In a large code base having easy access to related files makes it so much easier to find what you’re looking for without thinking
Which bits are you having difficulty with?
Did you click save in the script editor? Did you click run in the script editor to see if it worked? What happens when you type the name of the function into your spreadsheet?
You can create a micro-controller, which you can bind to a specific component in your view and which will listen to data changes. This way this logic will once again be isolated from the view itself. It is always better to have a minimalist set of tools and enrich it, than to have a do-it-all machine which will become a nightmare to manage and support. KISS is another great principle abandoned by web devs.
can you come up with the Js doc of it? or i cannot use it in google sheet
I don't understand what you mean.
Been programming professionally since ‘95 actually. Something being popular and used in many solutions doesn’t make it kid friendly. 
I love JSX when I started using it with StencilJS. 
I changed `public void` to `function`, and `int` and `short` to `var`. The result is valid javascript.
Do you like PHP also?
Tbh I don't really understand what you're buying with JSX that you can't buy with simple template strings.
Something being popular and used in many solutions doesn’t make it good.
Is it working, but just not showing up in autocomplete? I'm no longer going to respond until you start answering my questions lol
From their [Basic example](https://github.com/WebReflection/hyperHTML#basic-example), TIL you can pass arguments for your callback into `setTimeout`
&gt; There are no ifs, no loops, no logic at all. Only one way bindings as inputs (data being passed into a component) and outputs (event handlers for events generated by a component). But I want an image to show up if `${counter}` is `5` or more when the user has previously visited...
I disagree but respect that it's an opinion, but I will say the ability to specify ids and classes in the tag name is awesome.
Maybe they just mean syntax for embedded markup isn't exactly a new idea. Because obviously JSX is not a programming language. Just giving them the benefit of the doubt idk downvote me.
Adobe Flex's FXML doesn't use any "presentation logic". Android XML doesn't use any "presentation logic". JavaFX FXML doesn't use any "presentation logic". WPF XAML doesn't use any "presentation logic". I haven't seen any "presentation logic" outside of web dev for a decade. And business logic is not separated in React/JSX at all because JS inside and I've seen tons of ugly React components with heavy logic inside. Because nothing is stopping people from shooting themselves in the foot. I haven't seen such mess in any Android or JavaFX apps I have worked with. Saying that business logic is somehow separated in JSX is the same as using PHP as your template engine and saying the same.
You should use for when you know how many iterations you want, like I want to go through elements 0 to 10. You should use forEach when you want to go over all elements in the collection. You can use ifs and breaks to adapt one to be like the other, but keeping it simple is the best.
You create a controller, which listens to data changes (observer/stream pattern) or has a setter (for old-school guys) and bind it to your component of interest. And this controller will toggle visibility of a component independently from view, strictly based on a data set you have there. Here's a functional example: function showHideController(observable, component, conditionCallback) { observable .map(conditionCallback) .subscribe(isVisible =&gt; component.setVisible(isVisible)); } ... // Inside your code which controls the view showHideController(counter$, imageComponent, value =&gt; value &gt;= 5); This is re-usable from the start, with a bit of functional magic you can make it composable as well. You also avoid template pollution, which makes it easier for designers and 3rd party tools to work with them and you end up with a declarative way of describing your view behaviour outside of presentation layer. In the end you can separate your app into three separates areas: business logic, presentation and behaviour.
I tried it multiple times, I don't see any benefits. And I made plenty of comments here already explaining why.
Facebook is pure shit and anything from it should not be touched even with a stick 
It's pretty funny, writing JSX made my PHP cleaner. I was re-writing a website I made for my wife and when I was done I had a hard time distinguishing a few classes from React!
Mozilla Developer Network - reference W3Schools (but I think it just covers ES5, in 2018 you should learn ES6 for many reasons, but for basics it's ok) Codeacademy
Sorry, it was about 2002, and I inherited the code so don't remember the actual project name anymore. I do remember I hated it though, because it took 2x as long as just writing the html and didn't use any custom components or anything. 
Several good answers, so I'll offer another perspective: `for` creates a block, while `forEach()` is a statement. This is important, not so much as it concerns `forEach`, but more so adjacent array methods like `map()`, `filter()`, and `reduce()`. They can loop over an array *and* create new data from it, which is normally the reason you are looping in the first place. Also, since they are all statements, you can use them as mechanisms in JSX templates rather cleanly.
Mmmm... no... I haven’t logged into Facebook for years, but their libraries are some of, if not the, best in the industry. 
I kind of understand. Components are essentially switch-gates for reusable Custom Hooks. [I wrote a bit about this in another thread.](/r/javascript/comments/9uqnnp/react_hooks_rewriting_less_early_impressions/) This is a good thing, because Custom Hooks create smaller units, as well as incentivize you to make your functionality more generic (less bound to a particular component's purpose). Think of Custom Hooks kind of like decorators.
&gt; statement I think you mean expression
I tried to like JSX, but shit gets out of control way too quick. It's impossible to write clean code with JSX.
Hi /u/gomorizsolt, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding.
Hi /u/skatedc4455, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Llama_Trauma7, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Hi /u/trifek, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/th3originals, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Xx_pu55y_s1ay3r_xX, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/SilentIphone, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index). Posts must directly relate to JavaScript, and content regarding CSS, HTML, general programming, etc. should be posted elsewhere. Thanks for your understanding.
Back then I only needed that, now I need to use import/require... but I abandoned Webpack once I realized I was just going down the rabbit hole wasting hours I didn't have.
Template strings leave a lot to be desired. Look at lit-html or hyperHTML as libraries that use template strings to achieve what JSX is trying to do. I agree template strings are a better way because they are standard JavaScript, but you need something on top to send complex data to properties, do declarative event handling, and probably more but that's all I've really needed so far
Here is my first article on Medium. I am looking for some feedbacks and suggestions that may help my articles to become better, readable and enjoyable.
Really don't like what they're doing with private fields. I hope they don't move forward.
This looks much more complicated than a simple if statement in the view code. The if statement is also re-usable. I once believed strongly like you, but I move so quickly now and my code seems so much cleaner and more concise than ever before. I use web components with lit-html, but the concepts are the same
I prefer something like lit-html or hyperHTML, why do you need to create a new DSL, and not use standard JavaScript as much as possible?
The many companies using GraphQL would disagree: https://graphql.org/users/
yes
I just verified that this does not work. The external server in question does not CORS enabled. I wrote up a quick PHP script and set up a CRON job on my server. I’m having a difficult time get a functional version that will upload the corrected file back. Idea is grab the initial file that sets the week then pass that string to the external API to create a cached version for each of the individual API calls. Set it to run every 3 hours
Does not work. The external server does have CORS enabled.
I mean that's technically true. But we weren't talking about whether jQuery was any good, right? We were talking about whether it was kid-friendly. You answered with a non-sequitur. I tried to relate it back to the original comment and you answered with another non-sequitur. I'm not even sure what we're discussing at this point.
Thanks for typing this up. It's basically how I intended to respond after posing my question to Auxx earlier. I've never encountered a front end library that does a better job of cleanly separating concerns than React, and I've been in this game a long time. Your distinction between presentation and business logic is particularly critical.
I use delete node
Three thoughts. First, citing Adobe Flex when lecturing about best practices is probably not a good plan. Second, just because you can shoot yourself in the foot with something doesn't make it inherently bad. You can shoot yourself in the foot with anything. And a lot of times, well-intended library and language designers trying to make something that prevents devs from making mistakes just leads to more code to maintain, weird workarounds, and different kinds of mistakes. A perfect example of this is Java and its checked exceptions. The whole idea was to prevent a certain class of problem from ever occurring. The actual consequence is a lot of unnecessary lines of code, often just catching and re-throwing an exception five methods up the chain. Now your method has to throw the same kind of checked exception if you don't want to handle error conditions there. More code, more to maintain. Or you can avoid the problem by catching it and throwing a new, unchecked exception. More code, more to maintain. Third, if you haven't seen "presentation logic" outside of Web dev in a decade, you don't know what presentation logic is. This right here is presentation logic in Android: &amp;#x200B; `Button btn = (Button)findViewById(R.id.thebuttonid);` `btn.setVisibility(View.VISIBLE); //View.GONE, View.INVISIBLE are available too.` &amp;#x200B; If in response to a button being clicked, in its handler, wherever that lives, you disable the button so that the user can't keep tapping it, that's presentation logic.
The fact that the semantics are dramatically different is a very good point. And there are always tradeoffs in engineering, so JSX has it's advantages. But, it still leads to many of the same problems that arise when you mix code and markup. Separation of code and markup concerns is something web devs have strived diligently to maintain a thousand ways in a thousand frameworks and languages because it's a good idea. All of a sudden it just collapsed again in JSX. Not as badly as it does in PHP and to equate them is an unfair exaggeration, but, there is still valid criticism against JSX on this front.
There is no one way to separate concerns.
What are you are advocating is the complete opposite of KISS. And look dude, rather than attacking the community as a whole and throwing aspersions on broad groups of people, try constructively debating principles. 
The whole point of the exercise is to learn how to use a for loop. Don't complain that he forces you to use a for loop in an exercise designed to help you learn for loops.
Android is imperative, it uses layout inflating, the presentational logic is in Java, it is very similar to Jquery. It is one of the hardest approaches. They've added a second 1st class language to Android that uses Reacts approach. WPF uses uses declarative conditions (for instance MultiDataTrigger) and/or conditional bindings via controllers, which is an *insane* overhead. Flex actually could take real conditions as well. Both were hard and inflexible, and it's mainly the reason why they're in the grave. &gt; And business logic is not separated in React/JSX at all because JS inside and I've seen tons of ugly React components with heavy logic inside. Again, you don't understand what business logic is. To go on like this doesn't make sense much. Either read the link i posted or don't. Just don't be surprised why the world is using that paradigm.
Adolescents and their cliques.
Thanks for the reply. I already learned for loops but I guess if this a review I just found it to be an inefficient way of solving the problem. Anyways I just don't fully understand how to apply this to a for loop.
The reason it looks much more complicated is because it is. And JSX is highly composable. I remember my reaction to JSX the first time I saw it. It was somewhere between throwing myself off a roof while screaming "Is this ExtJS all over again" and writing a manifesto about how I was going to punch a kitten every time someone asked me to learn yet another templating syntax. A couple of weeks later when I had let go of my initial reaction, I decided to try it by rewriting a small part of my production app using React and Redux. I was interested by the end of the first hour and completely sold by the end of the first day. Now I look back and feel so thankful that I will never do MVC again. It's an old pattern, and it held up for a long time, and deserves its rightful place in history. But it just feels quaint by comparison now.
I am trying to develop a space invaders game in JS using OOP but i'm lost. Can you please help me with my code?
&gt; It's impossible to write clean code with JSX Want evidence? Look at your code-base. Doesn't matter how good a developer you are, you're not going to have clean code with JSX.
I don't believe I understand that concept, I'm just looking for any way of writing the problem as a for loop.
Try explicitly requiring the file, rather than leaving up to the resolver: `require('./moment.js')`. Additionally, your thinking is a bit off - Browserify will bundle all dependencies in with your code, so you can easily use npm modules for your frontend.
hyperscript is nice because it's usually more concise than html and you don't have to type awkward angle brackets.
Hi /u/letmebeletmebe123456, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
The main reason JSX is so confusingly controversial is that it was invented for different reasons than the benefits discussed in this article. There was never a fundamental barrier to making a well coded dynamic UI that JSX somehow transcended. Prior to it, you could achieve the same things with vanilla JS doing DOM manipulation on regular HTML. When you say that, people bring up pre-framework spaghetti code and jQuery, as if JSX fixed that. But fixing framework-less code sprawl was not the point of JSX. The original point of JSX wast to facilitate a virtual DOM that was more efficient inside the lowest common denominator cross-browser environment. That used to be a big problem for Facebook, as their site was ridiculously heavy. It would never have been invented today, because browsers are just so much better now. You can write just as elegant a framework that utilizes the native DOM and JavaScript in the way the browser naively provides. Also, bear in mind JSX fans, browsers are not changing to be JSX native, and they never will. The DOM is permanent.
I don't agree, it's e4x but worse.
Hi /u/Gh05t_97, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
...applications?
Just to point out. I think what he meant with "presentation logic" is logic inside the view declaration, not how it is manipulated, but I can be wrong of course. &amp;#x200B; In your example you are manipulating the view with Java, but the actual "view declaration" is writen in XML, what (for what I undestand) is fine for him, what he is debating is putting the same logic inside the "view declaration" language, e.g (Vue: v-if, v-for) 
i'm using DOM to DOM diff now (with the diff-DOM library) without React and a virtual DOM. it's actually not that bad, what matters is to start with a immutable model. When it comes to performance i'd imagine it would be slower than React since there is no virtual DOM but I did not benchmark it. React definitely helped me understand some concepts. i really believe that an efficient DOM to DOM differ should be part of the HTML spec. This coupled with web components could really make React and clones obsolete.
I don't understand them at all.
Here is my first article on Medium. I am looking for some feedbacks and suggestions that may help my articles to become better, readable and enjoyable.
How so? 
I was assigned a freaking goofy assignment from my boss. Part of it is: basically I just trying to create a function in google sheets that enables me to sum up the same cell in multiple sheets (for example cell G7 in sheet 1, sheet 2 and sheet 3). The most important reason why I use java is because I don’t want to change the formula every time when a new sheet is added. &amp;#x200B; so this code I came up worked all fine in google sheet except it won't automatically pick up the new sheet(the last sheet), i have to manually add a new sheet every time. Anyone can help? &amp;#x200B; function getTotalSum() { return [Array.prototype.reduce.call](https://Array.prototype.reduce.call)(arguments, function(a, b) { return a + b; }, 0); var logbook = SpreadsheetApp.openById("my key code"); var totalSheets = logbook.getNumSheets(); var lastSheet = logbook.getSheets()\[totalSheets-3\]; var lastSheetName = lastSheet.getName(); var currentSheet = SpreadsheetApp.setActiveSheet(lastSheet); var sheets = SpreadsheetApp.getActiveSpreadsheet().getSheets(); var sum = 0; for (var i = i+3; i &lt; sheets.length ; i++ ) { var sheet = sheets\[i\]; var val = sheet.getRange(5,7,366,12).getValue(); &amp;#x200B; if (typeof(val) == 'number') { sum += val; } } &amp;#x200B; return sum; } &amp;#x200B; what in my cell is: =getTotalSum(BMGF!G5,'sheet4'!G5,CZI!G5,'sheet5'!G5,'sheet5'!G5,'sheet6'!G5,'sheet7'!G5,'sheet8'!G5)
So you are telling me that thousands and thousands of teams and devs that are all using React and JSX are terrible developers that are unable to write clean code? The React team is filled with a lot of very intelligent people, so I highly doubt that.
Why would you need a "component" on the server? There is no DOM, it has no lifecycle, you're just outputting an HTML string. Given the same inputs you're always returning the same thing, so it can be a pure function.
You obviously haven't updated webpack yet then. ;) I'm sorry you're stuck with supporting IE, but why build a huge walk towards the future instead of progressive enhancement? You're shooting yourself in the foot.
Thanks for the comment, I agree with you that the sentence should be supported by evidence, but it was not focus of the article. I will add to the article the following link to this large scale study [http://web.cs.ucdavis.edu/\~filkov/papers/lang\_github.pdf](http://web.cs.ucdavis.edu/~filkov/papers/lang_github.pdf) to support the sentence. In the study, there is the the following paragraph *However, as a group, strongly typed languages are less error prone than average while the weakly typed languages are more error prone than the average. The contrast between static and dynamic typing is also visible in functional languages. The functional languages as a group show a strong difference from the average. Compared to all other language types, both Functional-Dynamic-Strong-Managed and Functional-Static-Strong-Managed languages show a smaller relationship with defects. Statically typed languages have substantially smaller coefficient yet both functional language classes have the same standard error. This is strong evidence that functional static languages are less error prone than functional dynamic languages* This leads to me to the fact that with introducing TypeScript or Flow into your Javascript code you will decrease the number of defected commits. As for your statement "I've worked on such applications, often in environments where the server-side was statically-typed (eg. Java), and it's not like the server-side had any less bugs than the client per line of code written." I believe that dynamically typed frontend and statically typed backend cannot be compared. On server we are building completely different features than on the frontend and there are much stronger effects that will override dynamic vs static correlation with bug density. In addition you would be likely to be biased and the sample is too small to say that there is the same amount of bugs with dynamicaly or statisticaly typed languages. In general I would go for similar studies and significant statistical samples where the statistics will remove the biased personal experience. But as I said I agree with you that the sentence should be supported by evidence so that it does not seem as just my opinion.
We have over 300k lines of JS and TS in our app and since we introduced TS the rate of bugs has gone down significantly! I'd never go back to vanilla JS if I could choose and I've been writing JS for over 4 years now as a full time programmer. We also generate types based on our gql schema and it's simply awesome! For instance if the backend team changes something that would result in an error in the frontend, our automated build now fails and we catch those errors before they make it to production. TS + gql = &lt;3
The latest JS features are always going to be way ahead (1+ years) of their complete implementation in browsers. So embracing the future is a build step :)
No, I said no matter how good a developer you are, you're not going to write clean code using JSX. I'm sure they can write clean code with literally anything else. JSX is a forced concept. It's cool in theory but terrible in practice.
You forgot the code my friend
Sure, but what he actually said was he hasn’t seen any presentation logic outside of web dev in a decade. I responded by citing presentation logic in one of his listed platforms. Whether it should be inline with the declarative part or in a separate controller class is different from whether it exists at all. He said it didn’t which was factually incorrect regardless of opinions about MVC vs inlined components. 
Poly/future-filling upcoming features (ES2018+) and locking yourself in a walled garden (using proprietary libs — React, JSX — instead of the platform — web components) are different things. :) The former you should, the latter not.
Yeah, can I see your code?
I see what you are saying and I mostly agree. It is very important to weigh any dependency that you take on. You want to be sure a library is not going to be abandoned or dev stop, or for it to stray too far from the language spec. In the case of React, I see a long future. That is a decision me and my team have decided to make. Maybe React will even use web components in the future! The point is, React for us is nice. We can be more productive and our code is nice and clean. It works well for our team.
I think it's good to joke about lol, I got your back bud
What is clean templating in your opinion, then? JSX reads extremely similar to what it outputs, I'm not sure what could be cleaner.
Right, so, like a function that renders a table of data with n rows and columns? const renderTable = rows =&gt; h('table, rows.map(columns =&gt; h('tr' range(columns.map(column =&gt; h('td', column.text)) )) ) Although this would also be doable with ES3, I imagine in 2002 that PHP would have been too limited and therefore could not have had anything like a hyperscript function.
I work with a team of 10 devs on a Laravel and React codebase, and we uniformly agree that the code is clean :) You could make the same claim that Vuejs templates is a forced concept, for probably the same reasons you say about React, but I see you have a blog post professing your love for Vue :/
To me clean code is something that doesn't look like a tornado grabbed a bunch of JS, HTML, and CSS files and jumbled them up along it's path of destruction.
Damn right I love Vue. You should try it.
I surely hope React goes that path too. The signal does does seem so though. Facebook has been very web hostile in these regards. I do not trust them in making the right decisions. Just look at the recent licence problems. Facebook cares only for its own revenue, not about the better good for the web.
A user below said: &gt; hyperscript is nice because it's usually more concise than html and you don't have to type awkward angle brackets. Do you agree these are the main benefits? Anything else you'd like to add? This is my first look at it and it seems like a lot more typing to JSX. Which is not to say it wouldn't be worth it, but just curious how. Also the docs are using `createClass` and commonjs, which seems a little dated to be honest. 
It is a new templating language tho
Make Medium Readable Again is an excellent chrome extension. 
Can you confirm that the file `public/dashboard/javascript/moment.js` exists? Also, perhaps your `moment.js` file (or one of its dependencies) requires something unusual that is breaking, providing you with this error message?
JSX isn't a templating language though - it's just sugar for `React.createElement(type, props)`. Templates return a string; JSX returns JavaScript.
I do all of those things with choo, which uses template strings.
p.s. AMA if you're wondering about more stuff that I could add to the FAQ :)
It's HTML + JS, it's not a new templating language, nor does it have new syntax like Angular/Vue does.
It's not straight HTML though, more XML and furthermore it's case sensitive, className instead of class, htmlFor instead of for, there are lots of differences (albeit minor), self closing tags? nope.
If it were a templating language it wouldn't be controversial. JSX is a superset of JavaScript that happens to have some syntax that resembles HTML.
XML because it is strict. HTML is not.
Why not learn anything other than JS? There's a lot of world out there: - PHP - Go - Elixir - Erlang - Ruby JS ecosystem is hard as fuck. It's not a welcome language and will never be if the growth continues. You see. JS was created in a week when it was invented, it was supposed to do simple tasks, like DOM manipulation and events. Nowadays, people expect it to do everything. I've seen people using it from embeeded systems to large enterprise applications, and the truth is, it does work everywhere. But it does not a good job comparing it to the competition, let me specify: - Embeeded systems: JS is slow, and needs a whole interpreter in the controller. Bad against C. - Web backend: Node users tend to say it's because of it's concurrent model that's the best out there. Wrong, Elixir (the Erlang VM) is built for concurrency. Also GO was created with that idea in mind. JS just happens to have a closure based concurrency model that does part of the job but the competition wins again. JS is not famous because of it's way of organizing the code either. The only JS framework I've seen is Adonis. At this they try to provide a full enterprise ready framework like laravel (php) or ruby on rails (ruby). - Web frontend: Nothing much here, JS is the king because there's no other alternative and probably will never be. Browsers do only read JS. It's already hard to have +10 browsers support a single JS (frontend) website, imagine if other languages were introduced. You would end up with a lot of polyfills. You want alternatives here? Check out Svelte framework. At least it's not loading a bunch of framework each first request!! - Desktop applications: Really?? Have you seen electron's (or others like nwjs) app size? btw; code protection is also a lie (normal, by using an interpreted language). Speed is ridiculous. C, Rust, C++, etc are just way out of scope. This comparison seems funny, but suprisingly enough, people use electron. Also system resources are fucked up when few electron based apps are opened. - Mobile applications: Aparently, the native wrappers that some of them provide starts getting close to what's expected in performance but Kotlin and objective C will still be the king there. Hybrid and webview JS mobile apps are crap, slow and non-native feeling. Choose a platform where you're interested in, Start with JS since you know it already and move to the great alternative on it. Eventually, I doubt JS will ever overcome any of the mentioned better alternatives. But it's gaining popularity, hope native platforms starts competing :D
Ok can have sct but it needs the closing slash. I was wrong there
So many react jsx faggots downvoted you. I agree with you 
Saaame... Knocked it for a few months, then tried it and was hooked after 4 hrs
Wait I think I see the difference now... Template Language: var foo = '&lt;h1&gt;{{title}}&lt;/h1&gt;'; JSX var foo = () =&gt; (&lt;h1&gt;{{title}}&lt;/h1&gt;); See the first one needs to be processed before it can be used inside of the browsers, while the second one ... needs to be processed before it can be used inside of the browser. Shit I'm lost again
it is if u suck
One of us. one of us...
[removed]
We (Step Functions team) adapted the visualization code from an internal tool created by another Amazon team; I believe (but am not 100% sure) that they cooked it up from scratch. AFAIK it’s never been published on an open-source site. The actual editor is just one of the JSON-editing libraries, there are a few out there.
check out this repo I was experimenting with this exact thing in [https://github.com/HIMISOCOOL/vue-tsx](https://github.com/HIMISOCOOL/vue-tsx)
Nah you're not lost since your goal is clearly to he as reductionist as possible.
thank you very much. Looking at the docs and the vue-component thingy I think I have a fair idea of what I have to do, but it is always useful to see a working example and how others have solved the problem. 
I recently wrote a smaller wrapper that creates _native_ elements using JSX. It's seriously 22 lines, and some of those could be collapsed down. Saves a fair amount of time in understanding what exactly happens, and how.
That approach makes sense when you are publishing pages of content but not for web applications. 
You realize they relicensed to MIT, right?
&gt;but it was not focus of the article. Write, but I mean, if I'm writing an article about backyard gardening, and I make the claim "Roses are the superior flower!", it doesn't matter whether that line is the focus or not: you can't make wild inflammatory statements without support (or, I mean, you can, but people like me will complain). As for your article, you conveniently leave out stuff like the following that contradicts your claim: &gt;It is worth noting that these modest effects arising from language design are overwhelmingly dominated by the process factors such as project size, team size, and commit size. However, we hasten to caution the reader that even these modest effects might quite possibly be due to other, intangible process factors, e.g., the preference of certain personality types for functional, static and strongly typed languages. On top of that the authors are (and I give them major props for this) *very* clear that there are inherent flaws in their methodology. The way they relied on keywords to group bugs for instance, or the fact that: &gt;even large datasets become small and insufficient when they are sliced and diced many ways simultaneously, i.e. when the underlying connectivity between variables is rich. The implications are that the more dependent variables there are, the more difficult it becomes (vis-a-vis the amount of data available) to answer questions about a specific variable’s effect on any outcome where interactions with other variables exist. So, it's *certainly* an interesting study, and I'm impressed both by it's author's attempt to objectively consider the issue, and to be up front about the limitations of their inquiry. But really I think that if you asked them directly the authors would be the first to admit that this study does *not* prove that static typing results in less bugs. It's an interesting study, and an interesting data point in the larger conversation, but it does not in any way prove your extremely inflammatory point.
After WordPress threatened to not use it because of Facebooks original hostility; yes.
Reformatted using 4x spaces at the start of each line of code: function getTotalSum() { return Array.prototype.reduce.call(arguments, function(a, b) { return a + b; }, 0); var logbook = SpreadsheetApp.openById("my key code"); var totalSheets = logbook.getNumSheets(); var lastSheet = logbook.getSheets()[totalSheets-3]; var lastSheetName = lastSheet.getName(); var currentSheet = SpreadsheetApp.setActiveSheet(lastSheet); var sheets = SpreadsheetApp.getActiveSpreadsheet().getSheets(); var sum = 0; for (var i = i+3; i &lt; sheets.length ; i++ ) { var sheet = sheets[i]; var val = sheet.getRange(5,7,366,12).getValue(); if (typeof(val) == 'number') { sum += val; } } return sum; } what in my cell is: =getTotalSum(BMGF!G5,'sheet4'!G5,CZI!G5,'sheet5'!G5,'sheet5'!G5,'sheet6'!G5,'sheet7'!G5,'sheet8'!G5)
Holy that doesn't look fun to read or write 
lol
I once wrote up a short set of comparisons [here](https://github.com/spacejack/hyperscript-cookbook). Other benefits would include not needing additional build tooling or editor tooling, not having problems mixing typescript generics and JSX, not having to constantly context-switch between JS and JSX syntax, easier to add comments in views. You also get nice shorthand features like: h('input.foo#bar[type=text]', text) Instead of &lt;input className="foo" id="bar" type="text"&gt;{text}&lt;/div&gt; 
It sounds like you have a lot of applied knowledge, but perhaps not theoretical. I'm not sure exactly where you have gaps, but I can recommend a few resources for really understanding JavaScript: * [Exploring JS](http://exploringjs.com/) - A series of books that very approachably details just about every feature of JavaScript, old and new. His ReasonML book may be worth looking into as well, as Reason has several language features that are useful to understand for JS devs. * [MDN JavaScript Reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference) - A straight list of wiki articles on every aspect of JavaScript. Combined with Exploring JS, this should give you a very deep and complete knowledge of the language. There are a couple magical parts of JavaScript that are not only handy to understand, but can actually save you from bugs: * [Garbage Collection](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management) * [Event Loop)(https://www.youtube.com/watch?v=8aGhZQkoFbQ) * [Event Loop (node)](https://medium.com/the-node-js-collection/what-you-should-know-to-really-understand-the-node-js-event-loop-and-its-metrics-c4907b19da4c)
Exploring JS, impressive as it may be, gives me flashbacks of arguing about C++ standards with my university professor, which is not be a memory I'm fond of. Education should be at least marginally fun.
There is much more good than bad since ES2015 transformed the language. Just comparing `.prototype.` to `class` shows a pretty extreme improvement. Destructuring may be difficult to explain to a beginner, but it genuinely improves assignment readability. The most confusing thing about JS is that there are so many different kinds of syntax. At various times, you might calling a global function like `setTimeout`, calling a static member of a built-in object like `Number.max`, instantiating objects like `new Set()`, using keywords, or using operators. I was once in an interview where the interviewer was miffed because I preferred to use `for-of` instead of `forEach()` in a demo. He was satisfied with my rationale (I wanted to exit early from the loop), but it's weird that this would be a discussion.
[Link!](https://github.com/r-spacex/Enceladus-LTI/blob/master/src/js/modules/createElement.js) Using some experimental features, but that can easily be edited out if wanted. The license of this whole repo is GPL-3, but I can certainly release this on npm and license it appropriately if there's the desire.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [r-spacex/Enceladus-LTI/.../**createElement.js** (master → a914444)](https://github.com/r-spacex/Enceladus-LTI/blob/a914444f847b9aa867d9216584679dcf4c82e6f1/src/js/modules/createElement.js) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e9biye1.)
Not really! Have a look at this https://blog.hasura.io/hasura-vs-prisma-9ffc7271eda8
You are immediately returning Array.prototype.reduce.call(...), so the rest of your getTotalSum function won't execute. It's been a long time since I've used Apps Script or Google Sheets in general, but I can help you approach the problem better. If I were you, I would do something like this: // Give the function a name that makes sense. // Its args determine which cell to sum. function sumCellInAllSheets(row, column) { // You don't need to store all that other stuff, just an array of sheets. var sheets = SpreadsheetApp.openById("my key code").getSheets(); // This is the value we will output after iterating. var sum = 0; sheets.forEach(function(sheet) { sum += sheet.getRange(row, column).getValue(); }); return sum; } Row and column need to be positive integers btw. So, to get the sum of all 'G7' cells (G is the 7th letter), put =sumCellInAllSheets(7, 7) I think this would work, but I'm not 100% sure about the syntax within the output cell itself. You could also write a function to convert a text representation of row and column into the two values you need, then pass those in. Also Java != Javascript. Not even a little ;)
This is pretty much the gist of it for me. `h()` is a pretty common pattern even outside of React (e.g. w/ snabbdom, which is used in CycleJS), and tends in my experience to be a lot more terse and less XML-ey than JSX. There is (as was mentioned elsewhere in this conversation) the added benefit of not needing to push this code through a transpiler to get useful output. Another side to this is just how jarring it is to go from "code" to "markup" and back. It's a minor thing, but there is a slight context switch in my mind when working with JSX. Otherwise, I realize that JSX's popularity is only growing, and for some people it is more readable than hyperscript. I recognize its value and accept that it will probably be the de-facto standard going forward.
Sorry, what do you mean by : "you definitely need to think about your architecture" ?
but every comparison with other ways of managing templates uses gzip, so, how would gzip negate if react templates are bigger than compiled or even unchanged ones?
You won't learn about the world if you stay in your little town. The best way to become a better developer is to learn different languages.
Pay attention junior devs! All the negative people who are posting non-arguments or just no argument at all - for example “jsx is php”, are just extra chance at a career. You can race past these kind of people with an open and adaptive mindset. They will stay stuck in one place for not adapting or at least trying different solutions - where you will learn and become a more valuable developer. Not saying every new thing is the bomb diggy, but it’s always worth it to look in to.
This list is pretty amazing! My slight brag with vanilla JS components is that each one needs to replicate cross-browser hacks. Therefore, using jQuery plugins (or any framework encapsulating DOM manipulation) should lead to lower budle size.
because the extra boilerplate it compiles into is repeated and compresses to a size only marginally larger. that's how compression works
Thanks for the (uncommonly) rational and level-headed response to criticism :)
It should also be mentioned that levelling to the point where you can wear Mithril armour in RuneScape was a truly great feeling for a young me
My point exactly. Accessibility is on the dev, whether they use JS, JSX, server side etc.
Here's an extension of your example that might help you understand the distinction: Handlebars: var title = 'foo'; var foo = '&lt;h1&gt;{{title}}&lt;/h1&gt;'; JSX var title = 'foo'; var foo = () =&gt; (&lt;h1&gt;{title}&lt;/h1&gt;); What will these 'templates' render, respectively? JSX is genuinely a superset of JavaScript, and you have all of the power/libraries/tools/etc. of the language available to bring to bear on whatever problem you're working on, which is just awesome. But what's even more important (to me anyway) is that your knowledge of JavaScript (its semantics, scoping rules, debugging methods, etc.) are 100% applicable (and sufficient) to reason about your code. You don't need to also know the weird rules and the frustrating edge cases of the template language, you don't need to track down whatever is the template context to some far off area of your application entirely separate from your templates to figure out why `title` isn't rendering as you expect. In my experience, JSX just naturally tends toward a much more localized reasoning about your views, which makes development and maintenance faster and easier, and just generally reduces cognitive overhead to allow more time to focus on more important things.
woah, dude
Take a look at knockoutjs I think it might be what your looking for.
Some people don't have the time to waste rewrapping hundreds of third party libraries. Solution seems worse than the original problem ... 
This is such a better answer than all those other ones about learning different languages. Is learning different languages great for one's overall development as a programmer? Sure: I know Java, Python, Ruby, Javascript, enough PHP to be dangerous, and random stuff like GW Basic. But even so, I would never recommend any of those to someone trying to become a better JS dev (instead I'd recommend reading like the above).