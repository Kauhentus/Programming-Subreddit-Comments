Well, that's prime level bullshit.
 &gt; that can be achieved through unbiased inclusion, not biased inclusion And yet here it didn't.
You sure? Just clicked and it took me to Lin Clark's presentation about wasm
Yes, I didn't realize the logs were inside the loop. The tutorial would be correct then.
I assume the conference information was posted on github and as such the applications would be representative of githubs userbase. How would you recommend they reach a more diverse group of githubbers than through github? That's only possible if you're deliberately exclusionary to non-minorities. It's not like they only posted advertisements to klanklikker.exe.
Heh. Engineering manager at Udemy. Heh.
That's just plain retarded
Yes. Most of my friends are woman. There's been many times when I was the only guy when we were hanging out. I've even been the only one in a big group of girls on field trips. People would even refer to us as "girls" or "ladies" because they didn't see me or they forgot me. You know what I did? I got the fuck over it.
&gt;racism these days isn't an issue, not even close (though I'm not denying that it exists in the US), and if you think it is then you must be crazy. Sry but i feel like i am more confused than ever in my entire life. I have no problem with being labeled crazy but the evidence is staggering and i can't believe how people can still deny that this is happening by looking the racism openly in the eyes. Yet again this is exactly how i felt as a kid as they told us about the history of Germany. How on earth could those people(our grand grand parents) not see this. Its not that those groups work undercover. No they're presenting their ideas openly in the public and people proudly cheer them up. As if "you present this openly in the public, it must be right". Look if there is a Company in the US that encourages racism and sexism in public and nobody cares – then you have an issue these days! Reading the racism and sexism in the Code of Conduct from Githup makes me shudder: Our open source community prioritizes marginalized people’s safety over privileged people’s comfort. We will not act on complaints regarding: * ‘Reverse’ -isms, including ‘reverse racism,’ ‘reverse sexism,’ and ‘cisphobia’ * Refusal to explain or debate social justice concepts * Criticizing racist, sexist, cissexist, or otherwise oppressive behavior or assumptions This is just frightening to read. As if reverse racism is a thing. This word just don't exist outside of the US and is just a thing to allow what other people call "ordinary racism". And this is exactly what we see here This is openly conducted racism and sexism tolerated by a large amount of the society – you do have a problem with racism and i find it disturbing calling other people crazy just because they disagree with you that every thing is fine. 
I would suggest teaching console output instead of alert messages.
This is impossible unless you allow bias in the other direction to begin with. This industry is dominated by white men, like it or not, for whatever reasons that could certainly be debated; what do you bloody expect and what is the harm? What does it matter?
I run a large community of latinos in tech and we have done stuff with github in the past and we never heard about this conf, and we have members in the community and friends that could have given a good talk. If they wanted a more diverse applicants they should have reached out to more communities. If they wanted an even more diverse group of people they could have offered better incentives, like maybe some training or help to people that wanted to talk but have no experience to help them gain confidence. I remember them doing like an electron workshop in sf that we sent a few attendees to but not sure if they continued that. I see a lot of this companies like complaining and saying they want more diversity but when it comes to the actual doing there's a lot to be said. And maybe it's just me, but I don't care if all the speakers are white or whatever, if I'm learning and having a great time. 
Then address the cause, not the symptom.
This was a fun comment chain to read. Cheers!
In a zero-sum game, being biased towards !$X is the same as being biased against $X.
The tweet that called their attention and ended it the cancellation said "congratulations github you created an all male conference" or something like that. 
That reads like bullshit crisis management PR to me quite honestly.
PR wise this seem to be worst. Most people didn't even know electron conf existed and now we all heard about it because of this. If they wanted more women or minority speakers then they could have done better outreach or give more material to encourage new speakers to talk. Cancelling after the fact it's disrespectful to the attendees and as someone considered a POC I don't like this thing of we're choosing your talk not because you're the best but because we have a quota. 
Gender bias? I see.
Weird. That tweet is not from a white dude. Meaning there are poc speakers. Why can't that be enough to make people happy, or where do people wanna draw the line?
&gt;Why? Because their's some omnipresent racist force out there stopping those people? Yes. It's called systemic sexism/racism.
this is not diversity of perspectives. 
The leftists don't understand, that equal opportunities doesn't mean equal outcomes. It contradicts their ideology on a fundamental level.
Equal access is a fundamental right, everything else (keeping the job, retribution, career, being the best etc) is personal and unique to the engineer.
Your git ax ?
Does it seem odd to you that millennia of evolution made men and women different enough that we can tell them apart from a bazillion different physical, intellectual, social and cultural markers (ask advertisers), but we should absolutely not expect a difference in favored occupations, when averaged across a population?
Oooooh. This is where it gets sticky. Everyone agrees that equality of opportunity is a basic right - you shouldn't be unfairly disadvantaged by your gender, colour, sexuality, etc. However they **did** that here - submissions were through a blind review, and it's just bad luck (or possibly a matter of proportions) that all the talks selected were given by men. To then disregard the results and fiddle the system to ensure diversity of speakers is demanding equality of *outcome*, not opportunity. There are arguments for an against it, but it's undoubtedly a much stickier proposition because it means abandoning a pure meritocracy and artificially privileging certain groups on the basis of their gender/colour/etc, and inherently therefore elevating at least some individuals because they're in the "right" group, and not because they've earned their position through merit.
Yes. Like why activists insist that a community of mostly self taught, self sufficient and mostly text oriented systems thinkers should be artificially skewed to include people who only show up if you give them special perks, because of identity politics. The early internet and open source was identity blind, full of misfits these "diversity" mongers wouldn't recognize, because you can't tally them by color or junk. On the other hand, colleges in the West are now 3:2 women vs men, but you don't see a giant moral panic over what is inescapably a systemic bias regardless of major or origin.
`git ax` Is that like a swifter form of `git cherry-pick`
Username somewhat checks out (papa smurf)
No but kicking out men under the guise of inclusion is. Just like going after people's jobs because they refuse to parrot back divisive dogma about equality that doesn't match reality. Only half as many women study CS now as in the mid 80s. Even if feminists were right, and they're not, they suck at accomplishing their stated goal.
Pseudoscientific bullshit.
Add in collision detection against each other, that will help filter out cars that don't work in packs
So you want to replace speakers based on unquantifiable, unmeasurable; therefore meaningless means on the grounds that "we *could* be missing out on what others have to say" instead of actually keeping things the way they were with actual qualified speakers who *do* have insightful things to say? Sounds like an amazing idea
why? sounds reasonable to me
That is valid, it might be useful depending on your use case to throw an error instead on invalid properties instead of returning a boolean e.g.: this.settingsProxy = new Proxy(this._settings, { set(obj, prop, value, receiver) { if (prop in obj) { return Reflect.set(obj, prop, value, receiver) } else { throw new Error(`Invalid setting ${ prop }`) } }) // And then when setting invalid properties page.settings.A = 'Banana' // Throws error about A not being a setting page.settings.numberOfPages = 2 // Does the same as a normal object Also note the effect of `page.settings = "A"` has nothing to do with the `Proxy` that is just because there's no corresponding `set settings()` setter to deal with that so it just does nothing.
Are you fucking kidding me? I'm moving to BitBucket. I've used it as an experiment, and I look forward to messing around with it.
Mainly because the reality is that the so-called channels that they sent out requests for proposals from were channels likely frequented by people who were the most qualified to begin with. You would expect that right, to get the best possible speakers for your toy framework because at the end of the day it's one big advertisement for it. So instead they're now side-stepping merit and retrofitting diversity because the merit didn't fit their made up idea of what they want to be perceived as. They were fine with it (as they should be) until they decided to cater to [people like this](https://twitter.com/fox/status/870761439094489088) who don't care about the actual content, just the perceived faults in society that such a meritocracy contributes to.
&gt;No but kicking out men under the guise of inclusion is. No, it isn't, not even a bit. Fascism has to do with nation states and nationalism. If you're running a conference, feel free to choose speakers in a 100% meritocratic way. GitHub doesn't have to do that though. Their disagreeing with you doesn't make them wrong, and it certainly doesn't make them fascist.
They'll talk about process over and over but never care for anything but the result. They are their own worst enemies: they told everyone tech is toxic (and not, say, finance)... that our conferences are hostile, that women can't tech without focus on feelings, that non whites can't make it without hand outs. They are everything they hate.
This is true to an extent. Unfortunately when you trace it down to the root cause, you find the biased system is biology and human evolution. And that's a conclusion diversity activists refuse to accept. So instead they insist they want process, but ignore their own rules when it turns out that didn't produce the outcome they wanted. They insist upon committees for inclusivity and tolerance, but use them as a political power grab for the most exclusive, intolerant clique. They claim their ways will improve the industry and produce better output, but establish rent seeking positions and diversity consultancies that are politically required and practically ineffective dead weight. It's not that I don't understand intersectionality or systemic bias, it's that upon reflection, I reject their selective application and their necessary hypocrisy to support it.
Just curious - what was the blind review process and who were the reviewers? 
In your opinion, what specifically makes women less suited to be engineers than men?
How about binding the animations function to an object that contains all the data ?
Okay, let's assume some people in the industry are sexist and therefore some of those speakers might be sexist, too. How's that relevant? We aren't talking about dropping particular speakers because they said something questionable on Twitter. It's about giving an interesting technical talk. I don't care about the speaker's gender, sexual orientation, political views, race, or whatever. As long as they have something interesting to say and deliver it in a coherent manner, it's worth watching.
Given a company that is comprised of, say, 15-20% Bay-Area employees, but is very politically/ideologically activist in ways that don't represent the other 85-80%...should that be surprising to those 85-80%? Or should they just have to live with the idea that being in the employ of Person X over in the Bay Area means that they're now considered Person X's property to use for his/her own ideological ends? I guess what I'm asking is, at what point is it considered "not cool" to have a small minority-power-group (I think the word for this is "oligarchy?") wield the majority-non-power-holding group as a tool against the interest of the non-power-holding majority?
we all know women don't poop so when we finally ban males this issue is going to solve itself
Because the minority quotas weren't filled
Why do you think she's obliged to work specifically in this industry? You know, there is not so many white people playing basketball professionally, but for some reason I don't see anyone complaining about it. Maybe because white people on average aren't that good at basketball, huh? So maybe the reason why you don't see many female programmers has something to do with the fact that men with their straightforward analytic minds on average have better predisposition for it? 
- I assume you're just inventing the 15-20 and 80-85 numbers? - Very activist is an odd way to describe it. The stakes involved in who speaks at ElectronConf are about as close to zero as you can get, and it is their own event, they are not trying to influence anyone else to do anything. - Githubbers are not coal miners, they are part of some of the only upper-middle class white collar laborers with any power in US society left. The idea that they have no options but to remain silent here or that the activism only comes from the top is ill-motivated in my opinion. - It happens ALL the time and constantly throughout US history that owners(oligarchs if you like, though applying this to github seems odd, maybe the google guys or zuckerberg who are basically running surveillance monopolies) are opposed to the interests of their workers, from our literally violent early labor battles to the best of modern workplaces(eg. do you think most Googlers are for dismantling internet privacy rules even as Google lobbies for it?)
I have no idea what the ideal is, or what numbers we _should_ be seeing. I do know that in an industry like ours, getting 100% dudes out of a blind selection process means something was wrong with the dataset before selection started. For me, there's not — and shouldn't be — an exact ratio; I don't count up the passengers on a train to make sure we have an equal distribution among race and gender, but I'd sure as shit notice if the _entire train_ was full of only white dudes. 
I live and work in a largely diverse city. I'm not sure how things are elsewhere, but I work with a large number of different ethnicities and those of different cultural backgrounds. I have not throughout my time here, however, worked with many women. Typically, I've experienced a 20:1 ratio of male to female developers. In my previous company, there were zero. I understand that competence should not be compromised, but we need to make efforts to include women so that we can bring diverse talent and perspectives into our industry, at least until the gap narrows.
I think you missed my point. Let's say that this conference received 100 proposals. And let's say that 95 of those submissions were from white men. The blind selection process worked, and of those 100 talks, the best 10 were selected, and all of the speakers are white men. Cool. Probability says that makes sense. What we should be trying to do is encouraging and welcoming everyone in tech — not just the people we feel most comfortable approaching, who tend to be similar to us (e.g. other white dudes) — so that we end up with twice that many proposals, with those same 95 white men _plus_ proposals from the rest of the people who work in our industry. Then we go blind and pick the best 10 again. If all of the best talks were submitted by white men, I'd defend that conference lineup as a fair selection process. (And if it turns out GitHub had a ton of diversity in their submissions and this is what happened, I'd defend their lineup as well.) **There would be nothing "less intelligent" about a speaker chosen from this bigger pool. The talks are still chosen blindly. These talks would arguably be _more_ intelligent, because they overcame tougher competition in the selection process.**
It depends, please define: &gt; discourage or filter out minorities and women due to inherent biases which must be recognized more specifically.
&gt; I believe this kind of male over-representation is self-perpetuating. My precise thoughts.
&gt; I will look at what synergies I'm out. Edit: OK, I decided to bite. I don't agree with this proposal. GitHub is Git as a service with a complementing UI, which is used to manage the source code of OSS. npm, on the other hand, is a repository of distributable modules, which in some cases result from transforming the source code. They serve two different purposes. Note you _can_ use Git repositories directly as npm dependencies, but this should usually be avoided unless one has a strong reason (e.g. temporarily pointing to a forked repo until it's merged into the main repo and released.) I'd also argue that the birth rate of repos will not decrease to zero; new languages are always being released and gain popularity, for which new libraries and software will be required and thus developed. With the advent of WebAssembly, it's likely we'll see a successor to JavaScript; interestingly, Brendan Eich, the creator of JavaScript, has been heavily involved with the WASM spec.
Agreed.
obviously! that’s the basic reasonable idea behind policies like this. it’s some people taking it too far who led to reddit’s hate for SJWs. and it’s a pity, since it shines a bad light on good ideas. the sensationalist headline of the other thread also didn’t reflect the truth. the truth is that the blind reviews [came *after* the male bias happended](https://www.reddit.com/r/javascript/comments/6f8u2s/githubs_electronconf_postponed_because_all_the/digz7hb/), i.e. they had a blind review process on submissions from almost exclusively men.
I don't understand how persecution relates to basketball. 
Depends how diverse the input into the blind selection process was. I'm assuming from the output, and the fact that women can talk about interesting things, that for some reason the input wasn't diverse. You'd hope given diverse input you'd automatically get diverse output from a blind selection. Perhaps not the level of (artificial) diversity some would want, but that's probably better than good talks being given the boot in favour of mediocre talks.
I don't know what the rates are for JavaScript, but only 9% of software developers in the US are female. I find this number somewhat strange, because the percentage waffles between 25-30% at the big dot com I work for. That said it shouldn't be surprising when a panel of speakers should be all male as there is a 91% chance of each speaker being male. While this gross sex misrepresentation is a horrendous problem, it is really one of many institutional/cultural failures in software. I am thinking that if the bigger picture of these many problems are solved the sex inequality topic will be halfway solved for free. Here are some of the problems as I see them: * No regulation, not even self-regulated. Software is the largest unregulated industry that has ever existed. As an absurd example the slave trade was never this large or wealthy and even still it did have forms of regulation. People would lose their damn minds if any other professional skill were so unregulated. Absent regulation invites incompetence at every level. * Many other areas of technology self-regulate through certification. Nobody in network operations cries that the Cisco certs are vendor specific. These certs have become the gold standard and everybody happily takes them and used them for accreditation to separate the competent from the incompetent, and so it is a form of regulation that defines various levels of competence. Most software developers actually believe CISSP is a vendor certification (ignorance of regulation), and judging by comments on Hacker News, sufficient amounts of crying must occur at its mere mention. The mere thought of any form of regulation often results in many software developers crying because so many are so utterly uninformed about regulation and because so many are so grossly incompetent. * Solving for the regulation problem is hard because it is potentially expensive and (more importantly) it is a cultural problem. In many cases it is simply easier to hire people who are grossly inadequate and hope the problem solves itself. This is called enabling. https://www.reddit.com/r/programming/comments/66hpqs/less_than_5_of_indian_engineering_students_are/dgioklc/ * Most places don't know how to interview and in many cases don't even really know the skills to interview for. There is more to being a good developer than, for example, writing a game on the command line in about 15 minutes under high pressure. This isn't reality. On the other extreme interviewing solely for current trends without any depth or substance is just as bad. If I were running my company I would mandate that developer candidates have an online portfolio, like Github repositories, and all other candidates would be immediately disqualified. This tells me software is a hobby as much as a profession and frees up the interview time to talk about other things that are far more relevant than *how to write code*. * Because of the prior points nearly every interview I have been party to, with 3 notable exceptions, have almost entirely focused upon **how to write code**. This is so bad. Being able to write code doesn't make a candidate qualified or even competent. This is a minimum *literacy* requirement that shouldn't even be in question. Nobody, for example, gets a reading/writing test when they apply for a developer job even though ompetent communication is just as important. * Universities are not adequately preparing their students. If all a software developer needs is to write Java and create interfaces (as in the class-based Java convention) on globally defined classes in a Java like language then the universities are doing great and those CS degrees are awesome. This isn't reality, though. Stack traces from software written this way are often worthless and reveal the deep level of incompetence. Bear in mind developers were taught to perform in this manner. Try telling a Java developer to put a lambda expression inside a lambda expression and you typically get confusion as a response. Now, let's get really crazy, and forced them to work in web technologies without any training at all. * Historically gross incompetence results in a wonderful phenomenon called corruption. Most of the time it is benign and frequently limits itself to selection bias due to things like self-preservation or defensiveness. Incompetent people tend to prefer being around people of roughly similar levels of competency and skill set to limit perceived inadequacy. These little bits of incompetence and corruption add up over time though. Solve for these problems and the sex inequality problem will half way work itself out. So long as developers are grossly incompetent and that incompetence is the norm women will be less welcome and less interested to enter the industry. I am pretty convinced I get paid what I do to put up with the stupidity as much as exercise some amount of technical skill.
That's very true - I assumed it was an open call for submissions, but if Github selectively approached potential speakers for submissions (or similar boneheaded move) then you're right - that would justify the twitter poster's position.
good points! i think there’s one piece of flawed reasoning there though: it’s free open souce and they don’t profit from electron in any other way (they don’t offer consulting or anything). so there’s no reason for advertisement. therefore i think they can afford to act out of what they think is right, and don’t have to do what benefits their baseline here. --- conclusion: they simply think that a more diverse lineup is for the “greater good”, as people who aren’t white men wouldn’t come otherwise. (assuming you’re white: would you have gone to a rap festival in the 70s where you would’ve been the only white person? i don’t mean it would be intimidating, just not welcoming)
I've given a similar response to other comments on this thread, but the baseline argument I'm making is that we need to make an effort to reach out to developer groups (the ones on Slack, Twitter, Meetup, Facebook, LinkedIn) that women and people of color belong to and invite them to submit. If we take the time to say, "Hey, you're welcome here," that can go a long way toward fixing this problem, no draconian measures or quotas required. 
What if I was going to invent a cure for cancer, but those evil guys at university discouraged me from becoming a biologist due to my low grades? What if the next great coal miner was supposed to be a female, but the lack of female representation in that industry prevented it from happening? That's a poor argument. The women are still represented in this industry, and a girl can always find someone to relate to. If she really wants to become a programmer.
They aren't interested in diversity of ideas... they had that with blind selection. They are interested in diversity of sex organs, that's all.
The meaning of the quote can be readily taken as allegory if you insist on taking fascism in its traditional nationalistic sense. But fascism has widely accepted meaning outside of national political structures so there's not much of a need to. Forcing the inclusion of certain individuals at the exclusion of others purely on account of their gender is an explicitly political and discriminatory move. It is authoritative &amp; needlessly meddles with social dynamics probably under a barrage of completely untested, ideologically-driven assumptions. Beyond the political though, it is just a disingenuous move to put on a conference under the guise of exploring a particular technology while underhandedly using it to pursue ideological aims. It also signals to the very people that spend their time, frequently unpaid, exploring and developing your product that they are not valued on account of their sex organs.
It's kind of disheartening quite honestly, and these things are a self-perpetuating cycle. We had a group of girls in at work recently as part of our community work, from an all girls school. A lot of them were really interested and had been doing Python. It's part of the curriculum at the school. We paired with them for an afternoon running through our API in C#. Apparently, before coming they were not overly excited as (and I'm using their words here) they thought we were all going to be stereotypically geeky, all fat etc. One student told us how their mum had told them that programming was a "male job" and that she should do something else even though she was really interested in it. And that's kinda sad. I remember even at University, out of a group of maybe 100 students, 3 or so were women on a CS course. By the end of the course, down to 1. I can see why ElectronConf did what they did. I don't 100% agree or disagree with it. I think that some people need to understand that perceptions are important, it's not just about having a token woman there and leaving it at that. Maybe they should have made sure they had an additional slot open in the event something like this happened so everyone got a shot to speak instead. On a side note, kind of disappointed that by far the most commented and upvoted story on here in months and months is once again something to do with gender politics. EDIT: And now lots of people jumping on OP saying he needs to raise his child better. Way to go everyone.
No, they said the *list of speakers* doesn't reflect their values. Subtle difference, but I think they're trying to say that they somehow managed to introduce bias into their unbiased selection process. 
We can start from [this](http://homeschoolerpost.com/Files/graph2.jpg) Boys are better at math, that's a fact we can observe. And nobody cared about it in 80s when programming was meant for nerds and bald, bearded men with awful glasses. But when it became a cushy, comfortable job, suddenly we discovered this great inequality that needs to be fixed.
I don't think her seeing more female representation in conferences would cause her to doubt her acumen. Can this be the part where we agree to disagree?
I think John's point wasn't that there's something wrong with blindly picking people from a pool of candidates, instead the problem is with how we populate the pool of candidates to pick from. The process in which candidates get into the pool is set up in such a way that it filters out people from particular groups and over-represents people from other groups. If we're blindly picking from a group that has a bias towards one type of candidate then it's not much help. What he's saying is that we actively need to pursue under-represented groups and make sure that they're not being filtered out. Edit: I think noahcallaway-wa did a better job of explaining this is in [another comment](https://www.reddit.com/r/javascript/comments/6fg5hg/thanks_electronconf/dii7nbn/)
what the fuck are you expecting them to request from, instagram? this is fucking absurd. you're arguing that a giant software company like github was incapable of reaching non-white-males. that's ridiculous. they promoted on github and other places where they could reach coders.
But they didn't... The issue is that no or very few women submitted talks. The bias occurred before the selection process. It's systemic.
No?
Disagreed.
Women are leaving our industry all the time, it's not a zero-sum game.
Non-Mobile link: https://en.wikipedia.org/wiki/Ada_Lovelace *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^76402
Yes? She has nothing to do with CS.
That's impossible to assess without knowing the selection criteria used by the judges.
Alright first of all Babbage made the machine and you should read the "Controversy over extent of contributions" section. Second. Even if we take it as a fact that she did all that "programming" on her own it still has nothing to do with CS.
This is the part where we agree to disagree.
Considering this is about the biggest open source service provider rolling over in the face of a loud, vocal minority on social media, your premise seems more than a little ridiculous. What you're observing is preference falsification, nothing more: activists control the public discourse, even when the majority in the industry—both men and women—think it's ridiculous and counterproductive. They're just all keeping quiet, because they've seen what happens to others. Furthermore, to assume that a difference in gender brings in a difference of opinions is extremely gender-essentialist, the very thing gender activism is suppose to oppose. Just like privilege rhetoric ignores that being able to loudly complain about a lack of privilege is a sign you have access to platforms and channels most people lack. If anyone is unable to recognize a different point of view, it's activists who cry oppression even as they successfully bully companies and destroy people's careers while doing so.
GitLab is an excellent product. I love the CI integration.
Why not?
&gt;I'm a male software engineer with a 2 year old daughter. As she grows up, she may notice dad's work friends are all males. She may notice that all the lecture​s he watches on engineering and science are done by men. She might notice that in media portrayals of hackers and programmers these roles are played by males. How might this affect her desire to work in this industry? How might it affect her understanding​ of what she's capable of? Does dad ever sit down with his daughter on his lap and show her how cool programming can be? Maybe a little bit a parenting is in order.
You have a good point and that's a problem in this sector : many companies still use old frameworks and legacy code but want the front-end to be shiny new (consumers don''t care about the backend), rather than creating a whole new project they just change the front-end. If you look at startups and 'fresh' companies I doubt that they use php+vueJs 
~~does `Reflect.set()` change the value of `this._settings` ? (I was following the [mdn docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy) and it never speaks about the `Reflect` method)~~ [yes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set); &gt; Also note the effect of page.settings = "A" has nothing to do with the Proxy (...) Yes, that was a bad copy-paste, i do have the "noop" trap for the set as well (`set settings(v) {}`)
I don't understand how you can claim to be a software engineer and not understand what CS means...
How would that be so if, presumably, the members of the underrepresented group will have the worst content based on the selection process?
&gt; other places where they could reach coders. I'm not disagreeing with that. Next time, I hope they add a form email to developer groups like ChickTech and Black Girls Code while they're at it. It's not about GitHub being incapable, or malicious, or anything sinister or patriarchal or otherwise untoward; it just can — and, with a bit of effort on our part, _will be_ — better.
chicktech and BGC are almost entirely newbies. they will always be worse on average than platforms that don't arbitrarily cut the userbase on something that's not merit. you honestly think 2 minority groups for newbies are going to turn out better submissions than platforms that give no fucks about race/gender? that's absurd. diversity for the sake of diversity is a joke. the industry is laughing at people like you.
&gt; Every time a company tries to take action to improve things, there's a backlash Because, presumably, the process to include women or non-whites will lower the quality of the conference. People aren't paying for conferences for feel-goods.
Sry. Php jobs
I used to tread the meritocratic line until I read/played with http://ncase.me/polygons/ It has a nice demonstration of self-perpetuating, large scale segregation built of small individual bias. Positive discrimination is a temporary stop gap but it is needed right now. Edit: spelling
Black people are not the major minority race in the US. Latinos are. Black people only make up about 12% which makes me question why they are so disruptive to our society and way of life. Not that there haven't been or aren't issues but ... 12%.
&gt; It is to show young girls (or minorities) that hey, you can belong in this industry. We're gonna see if this even works in this way. I know another way to determine if women/minorities belong in the industry -- get good fucking grades in the relevant subjects.
Interesting if true. Do you have any evidence there was a total lack of submissions by women? (I didn't downvote you, BTW)
Not much meat there, but I'm glad he's positive about Javascript. I &lt;3 it, too. 
Also, with an attitude such as yours, I would request that you never work on anything vaguely related to the security of our users. You're the one making the grandiose claim that you have succeeded in anticipating all browser injection syntaxes, I'm just saying "here's one you didn't", and "don't even try, its useless and dangerous and slower".
&gt; lack of social skills, Complaints about someone else's "social skills" indicate that the speaker was s/h/itself unable to deal with a person who didn't act as they preferred. Think an actually royal princess in victorian times being hugely traumatized by a pleb not immediately falling to his knees and kissing her shoes.
I appreciate anyone willing to help educate people on Javascript. Not sure how much bezier curves has to do with JS, though. 
Right, and how can you expect more women to pursue CS degrees, when the programs are dominated by men? GitHub isn't delaying this conference because they want a 50/50 gender split; they want a few female speakers now, so that next year there can be a few more, and so on. This is how you solve the root problem, as you call it. 
I don't know what thread you thought you were in, but no one here is talking about race nor nationality. The demographic the GP mentioned is "men", regardless of race or nationality.
If they're all newbies and the content isn't good, what harm is it to have their submissions in the pool of submissions blindly voted on for quality? No one is asking anyone to remove merit from the equation. If you're truly in support of merit-based talks you should want as much competition as possible. 
That's a really neat representation, thanks for sharing.
No, that's just my read of the situation. If it turned out the applicants were 50% female though I'd be shocked. That's the problem. It's not the filtering process, it's the pool that process operates on. The problem be it's systemic.
Likewise.
I intend to, but she's not quite 2 yet. I really appreciate the shots at my parenting though.
I agree with you. I was a PHP dev for about 15 years, but after using Node the last 1.5 years in a new job, I can't imagine going back. I don't think PHP sucks or anything, there's just nothing I can do with it that I couldn't also do with Node. Node lets me stay in the same language all day. That's a big win. I believe more in the future of JS than the future of PHP.
Heck no. If you don't know React yet, consider picking it up. It's actually very similar to VueJS components. I would not expect most Laravel/Vue shops to be on par with the professionalism or sophistication of a full stack JS shop ... in most cases. The two tools attract a different quality of programmer. Of course, exceptions exist ... but I think more beginners go with Laravel.
Or, it's GitHub's conference and they can do what they want. Feel free not to go, if your righteous indignation is that strong.
The input was 'anyone with a keyboard.' Github held an open, online submission. If the input lacked women, it was because women weren't interested in submitting, not because Github discriminated against them.
"Muh meritocracy" GitHub wants the speakers to represent their values, and those values clearly don't place meritocracy above transformation. All you're doing is bitching to try and enforce your values on a company that doesn't share them.
Bitching about what? 
Good to see you're back :) But it's unfortunate to see you still don't understand the purpose of this benchmark. Maybe I didn't communicate clearly enough, but it's only relevant if you're dealing with large JSON responses and you care about the responsiveness of your UI while you process the response. The amount of requests has nothing to do with it though (though I guess your UI freezing up once is less of an issue than when you're dealing with multiple such requests).
I can only chalk it up to a cache behavior, but anyways, thanks, Lin's explanations are awesome
The meritocracy circle jerk can't be stopped Edit for tone: I'm against the meritocracy circle jerk, if that wasn't clear
I was referring to women engineers being asked to do administrative/secretarial tasks like organizing lunch for a meeting. Nice job on singling out my most benign allegation without touching the more serious stuff. Seems like a common tactic in these discussions.
How will the daughter seeing that programming is cool inoculate her from being put off by it being perceived as a male-only field? 
Yeah, obviously not, so they noticed the mistake and are rectifying it.
They don't show that, no. They show that women on average earn less than men, without controlling for occupation, hours worked, experience, education, and so on. They also show that women have an easier time getting a job out of college as well as getting post-grad positions. They show that unmarried, childless women under 30 out-earn men in the same categories, and that it's the choice to have a family that pushes women into working less and men into adopting a providing role. This choice about who gets to spend the most time with their own offspring vs who works more is then rephrased into a slight against women, to suit the narrative of female oppression. Even if statistics also show that women control the majority of consumer spending despite all this.
wasm gives access to openGL and SDL libraries... low level graphics stuff that can paint? I'm not exactly sure on the details.
I think that's a bit of a stretch. They aren't judging people by race, sex, etc. They aren't saying that the chosen talks aren't great talks or that the rejected talks aren't bad talks. There is nothing in that statement that ranking or prioritizing the speakers themselves. There is nothing in that statement implying they would take a talk that they'd consider to be worse than the ones they have currently if it were given by someone with a different gender. Indeed, if they wanted to go that route they could conceivably have the conference now using some of the currently rejected talks.
They lost me on the section about turning the bias down to 0. &gt;See what doesn't happen? No change. No mixing back together. In a world where bias ever existed, being unbiased isn't enough! Everybody in that example is happy. What's the problem?
Ahh, and yeah, that's exactly what happened here too @fox: Congratulations @Github for hosting an all male conference! http://electronconf.com/ @nmsanchez: You're right. This was a major mistake. We've decided to postpone the conf until we can get our speaker line-up right. ... @fox: Good call, although this shouldn’t have happened in the first place, especially knowing Github’s history. **It’s not good enough.** It's not good enough? Seriously. They've put off a conference where some people probably already bought plane tickets for or otherwise adjusted their schedules, to appease this... when they already had a reasonable effort (blind review process) in place.
Klien_knopper might not be a JS dev. He might be a jQuery warrior. I have tried pointing out the exact same thing as you using an extreme example of a 20mb JSON payload. He seems very concerned with CSS vs JS animations and is completely disregarding the impact parsing a large JSON load could have on things such as mounting objects to the DOM like you would in a JS framework.
&gt;The meritocracy is inherently bias Were the women prevented from submitting? If not then there is no bias which needs to be countered. Additionally, my question was of his daughter (which he introduced to the situation) - not of the women who didn't submit talks.
Updated for your pleasure.
&gt;There is nothing in that statement implying they would take a talk that they'd consider to be worse than the ones they have currently if it were given by someone with a different gender Except that's exactly what they're saying: they chose the best talks, found out that they didn't like the innate characteristics of the people giving the talks, and this postponed until they find people with characteristics they like.
What you are advocating is not fair at all. The selection process was fair, so if there existed women in CS that had the desire and expertise to be speakers at the conference, they would have been selected regardless of their gender. By definition, if no women are selected without biad and you thus bias the selection process to favor them, then the women selected will be inferior to their male counterparts and the consequences will be counter productive as : * people at the conference will see that women speakers are inferior to men speakers * thus, they will develop more sexist views * thus, women will be even more excluded from the CS environment. **You just cannot unbias a system by biasing it even more than it is.** As an aside, I find quite stupid the idea that more women speakers in the industry will motivate young women to sign up for several years of CS in college. I mean, most young women are not stupid, and only stupid people would think of such a reason as motivation to study a field, IMHO. If Bjarne Stroustrup, Linus Torvalds and all the other dinosaurs had boobs, that wouldn't have stopped me from studying CS! ^(Arrgghh, I just imagined Bjarne Stroustrup with boobs....) Again, if you want more women in CS, then find something motivating for them.
I guess it all really just comes down to whether you think you need to discriminate to reach a society without discrimination. There are reasonable opinions on both sides of that debate (and unreasonable ones too). The conference switched when they didn't get the result they really wanted. That's a betrayal for those that favored the previous viewpoint. Personally I favor immediately going to non-discrimination. Identity policies beget identity politics in my opinion. Identity politics are useful to drive wedges and bind people to idealogogues.
You're missing the point throughout this thread. This is an example: if there are one hundred relatively *equal* submissions, on merit, to a talk, and there are 90 that are male, and 10 that are of any other sex, then there is a much higher chance that the so-called slate of speakers will be male dominated. The problem with this, is there is more to an experience than just the technical merit of a discussion. You are making incredible assumptions that there weren't any toss-ups between two speakers, where one was female, and one was male. Diversity in and of itself is a merit, because it offers an alternative minority viewpoint which greatly increases the benefit provided to viewers of a talk. Nevertheless, the male dominated status quo doesn't believe this to be true, because they aren't exposed to it. Here's an example. In my last conference, a speaker provided their personal experience dealing with clients, and how those clients, because of their own unique experiences, interacted with websites, forms, both online and offline, and how that affected their ability to mentally process what they were seeing online. This anecdote had no inherent technical superiority over any other discussion. It was an anecdote that provided an alternative viewpoint that provided a critical thinking exercise as to how we, as developers, are bias in our approach to our own experiences. Had the anecdote been removed, the remaining talk would have been just as technically sound as it had been with the anecdote. It was the exposure to diverse experiences that provided the entire assembly an alternative viewpoint that significantly changed, at least my, outlook. 
So how would introducing a sex bias reduce the quality of the presentations if the quality itself is a subjective measurement?
&gt;Diversity in and of itself is a merit Diversity of thought, sure. But not something as irrelevant as sex or race - unless you believe that someone's race/sex/etc. changes their ability to code.
&gt; perfectly rational, unbiased The answer is no, and its always going to be no. Your criteria is subjective and its not possible for any criteria to be unbiased. The whole point of having criteria is to bias some results over others. The bigger question here is what was the process for soliciting speakers, and what was the gender/racial breakdown of those that entered. It's likely the issue happened long before the selection process even started.
You're accusing them of pandering, but they could just be part of the "specific crowd" Their actions are in line with their stated values as a company. Not pursuing this agenda would be hypocrisy. 
Yeah, but this is a major cause to the gender wage gap. Men tend to be funneled into higher paying jobs that require more risk, while women take lower paying jobs like nursing.
&gt; If it turned out the applicants were 50% female though I'd be shocked. Which are you arguing here? Nobody expects 50% of the submissions to be from women in a field as gender-imbalanced as computing, but the issue was that **none** of the selected talks was from a woman, and you were talking about a *total lack* of submissions from women. Which are you arguing? You keep changing the terms from "zero" to "less than 50%", but those are completely different cases.
I'm confused, are you arguing that #1 was the issue? It sounds like you're saying they should intentionally create situation #1 by seeking to bias their input set in favor of minorities.
&gt;Well it's up to Github to reach women and encourage them to submit talks. Did they do that at first place? There is plenty of women which are JS developers out there. Did they contact them? Obviously not. I strongly encourage you to take three minutes to read these two pages: http://www.computerscience.org/resources/women-in-computer-science/ http://fusion.kinja.com/survey-says-92-percent-of-software-developers-are-men-1793846921 So you're saying that it's Github's job entirely to undo a systemic issue? Would you be totally okay with Github not accepting any male submissions until an equal number of minority submissions were accepted? 
If only men submitted talks then the selection process isn't the problem.
They were prevented from entering the arena through a variety of reasons. If only ~10% of submissions were female, because there is a bias of nearly 90% of male domination in the field, then the meritocracy was inherently bias due to a systemic issue. Source: http://www.computerscience.org/resources/women-in-computer-science/ 
These are not irrelevant because they change the way people perceive, adopt, and apply technical knowledge. You may not be exposed to diversity, but you have the ability, and resources, to do your own research to understand why it's important. 
I'm not sure you understand the impact of what you just said: that is the same argument used for racial segregation and slavery.
I don't have to, I work to ensure the candidate pipeline is more diverse. We sponsor local user groups and host meetups which represent these groups, for example. 50/50 isn't a target I set, but I'm certainly not unhappy about it.
You really need to do some critical thinking, and maybe start questioning where you get your information from.
There are no meritocracies. Meritocracy is a myth that makes some people feel good to believe in.
&gt;the submissions process was biased towards men The submission process had nothing preventing women from submitting, ergo there is nothing to be fixed.
&gt;for the better of all mankind. There was a charismatic painter a little while ago who had the same idea.
The problem is that segregation is bad on its own for many reasons that I could go into if you want. The point is that, given a segregated society (like many places in the US), even if every individual does not want it to be segregated, it will remain segregated.
&gt;That's not a systemic issue, that's the natural and expected result of giving individuals free choice. No one is preventing women from entering CS or other STEM fields except themselves. To others viewing this comment chain, I already understand that stubborn individuals defending a lost argument generally have no interest in helping themselves become exposed to the reality that is segregation in something as modern, as software engineering. I urge everyone else who is a mere observer to ask themselves this question: **Are you satisfied NOT knowing the raw statistics, and the meaning behind those statistics, related to discrimination in this field?** There are more ways to prevent someone from entering a field than simply barring them at the door. http://www.computerscience.org/resources/women-in-computer-science/ https://depts.washington.edu/sibl/Publications/Cheryan,%20Plaut,%20Handron,%20Hudson,%202013.pdf http://www.npr.org/sections/money/2014/10/21/357629765/when-women-stopped-coding http://www.businessinsider.com/7-things-keeping-women-out-of-science-2013-10 http://theconversation.com/why-girls-are-put-off-studying-computer-science-70691 http://www.aauw.org/research/why-so-few/ http://cs.furman.edu/~ktreu/csc101/docs/17women.pdf
This thread is full of sexist men who are threatened by giving women a fair playing field. :/
Yeah I was being sarcastic. That's exactly my point. There's no nuance or understanding. No individualism. They just want to group you by your skin color and gender and stamp you on the forehead. It's evil.
&gt;related to discrimination in this field? What discrimination? Women **choose** not to go into CS. No one is stopping them, in fact there are a plethora of programs encouraging them. Why are you not OK with women having individual choice and freedom?
Toxic masculinity looks at men as disposable, which is why we send them to war, into coal mines, etc. The flip side of that is that those jobs today tend to pay more, because otherwise people wouldn't do them. Aside from breastfeeding, there really isn't any biological reason why men couldn't be the ones taking care of children. It's a structure that our society sets up and reinforces. Change takes work and time, and we are always going to be stuck with the status quo until we put that work in.
... And he's still on Github's side. He has erased the tweet, and is now actively defending their actions as being perfectly appropriate.
I commented on the value of diversity [here](https://www.reddit.com/r/javascript/comments/6f8u2s/githubs_electronconf_postponed_because_all_the/digq4i1/), by way of analogy. I think there is some value in diversity, but of course as someone who does not immediately benefit from it (I am white and identify as male), I have to see this through empathy with other parties.
How did the beatings I took in the school yard not deter me from being a geek? I did it because I loved it, so I kept doing it. No matter who you are or what you do there is going to be someone out there that will doubt you, the secret is to not give a fuck. This isn't a gender issue.
Yep f8 reaches out to a lot of communities with invitations and discounts and you can really tell how diverse their attendee base is. 
I know you thought this was clever, but that's actually the opposite of 'organically'.
&gt;a fair playing field Is a meritocracy.
If speakers were being removed from the conference due to their gender, I would readily agree with the charge of discrimination. Instead, I believe it is postponed to give the organizers a chance to reach out to people who may add diversity to the speaker list. In which case, the "best talks" are still present. It's hard for me to see what you would have to lose, other than the inconvenience to speakers who might have made plans around this conference being held at a particular date--several of whom have already spoken on Twitter that they agree with the postponement, whatever logistical frustrations it might present.
log off m8
&gt; Or, it's GitHub's conference and they can do what they want. I'm not sure how the legislation in the US works, but that statement is most certainly not true.
&gt; what harm is it to have their submissions in the pool of submissions blindly voted on for quality? Maybe they were in the pool, and not selected, because there were much better submissions that just happened to be put forth by white men.
Turns out the pursuit of happiness is not the ultimate goal.
From that comment. &gt; I think it's quite understandable that if you chose to get into that field, you might welcome acknowledgment that your being at an industry conference is not abnormal. Either the person is imagining the imbalance or it is abnormal, but abnormality is not bad thing. There are no actual issues posed here, only circular ones (must be diverse -&gt; lack of diversity is bad -&gt; must be diverse).
Its best to model a many to many as a separate third table group_users [ {group_id: 1, user_id: 1} ] than to attempt to embed them inside the other tables
Has the number of diverse candidates increased over time?
&gt; I believe this kind of male over-representation is self-perpetuating. It's your job as a parent to give your kids all the tools they need to succeed in life. You know this...you seem like a pretty alert parent. The problem is...you can try to force society into appealing to your needs, but in doing this you may depend on the world to change when the only thing you have control over is you changing yourself. I think selecting a group of people on blind selections is more than fine. No matter how you make a selection, people are going to complain. My wife works in a "male dominated industry" and when she goes to conferences it's for the content being presented, not the gender or sexual preferences or any unimportant things unrelated to her betterment. I personally think it's important to have diversity, but I think the worst way you achieve it is by forcing it. I think it should be natural and if a kid wants to do X it is because they want to do it. I think what makes web development great is that you can work anonymously almost. I told a friend that one of the reasons I loved the internet is that you can have a conversation with someone and they don't get the fast judgements we all make about someone based on their appearance. You can't tell if I'm male or female based on my internet handle, what colour my skin is, what sort of social upbringing I have without me spelling it out. You can make assumptions, but really you'll more than likely be wrong. If we are all about equality in terms of representation of genders in specific roles, we need to stop hiring female nurses, female primary school teachers, female social workers, female councilors, female accountants, female psychologists, female dental hygienists, etc. We need to move those people from those positions into construction, mining, long haul trucking, basically all "hands on" trades, and software engineering. Do I think it's a problem? To a point. If a woman doesn't feel comfortable working at a particular company because she's a woman, than I'd rather focus on what that problem is...and not focusing on hiring more women just to have them leave for the same reasons. A lot of children end up following in their parents footsteps mostly because they have a lot of support to achieve the same goals. If you want your daughter to be a software engineer...show her the path. Show her why it's awesome, and the appeal will follow. I think the issue of women being pushed out of industry is a minor one. My uncle teaches at a local college...we had a conversation about how the men in their class treated her and it was basically "like she's a person, like she should be treated". The college is very keen on making sure everyone doesn't get excluded. He teaches Millwrighting, which is hugely male dominated, and his job is to make the females the best Millwrights they can be, not the best female millwrights they can be. If your child believes they can be whatever they want you have succeeded as a parent. If they look at an industry and only see gender, that's a quick conversation you need to have with them. Also kids don't see gender. They don't see colour either. Not like we do. They just think that X person looks different from them, and that's 100% normal. It's the rest of us that force them into their roles. You have to shut as much of that garbage down as you can. Most kids need 1 example of the contrary to whatever nonsense they've been told and they're fine. The participation ribbon of adults is being given something you didn't earn. Using a blind selection process is a perfect example. Imagine the blind selections were rejected and then as a female you were given the opportunity. How would you feel? "Hi there, we chose the best people we thought, but then we didn't have enough of your gender, so that's why we chose you!" It doesn't encourage you to work harder or be more interesting. You were given an opportunity for how you were born.
Right... I'm not sure what my gender has to do with using a piece of technology, sitting at home on my couch and typing JavaScript.
I'm not sure what your point is? You managed to keep doing something even though you were bullied? Cool. But what does it have to do with the issue of gendered fields. You didn't exactly take up a traditionally pink collar job. This is a gender issue, and being dissuaded by a profession's gender make up is a real, quantifiable thing. You never addressed the point.
Assuming women are equal to the physical tasks you mention along with others. And there really, really is a difference in the psychology of thinking between the two. There's a reason, thousands of years ago, these tasks were divided the way they were. Some don't make a difference anymore but some remain the same.
Just wrap it in while (true) { /* code */ }
Seems I misquoted. Someone in a twitter thread specifically quoted 37% female speakers, but apparently they were referencing another Con.
GitHub tried to eliminate bias through a blind trial, but got it wrong, realised that they started a step to late, and the sample was already biased, so they discarded it and started over. Where was the meritocracy? Avoiding bias isn't remotely the same as being meritocratic.
Unfortunately these are Silicon Valley types (or Austinites) who are at the top of the industry. Going against them puts a stigma on yourself and can isolate you from an industry which highly values community involvement. Other areas in tech are less like this, but it's embedded deep into web culture now.
&gt; The conference switched when they didn't get the result they really wanted. This isn't entirely accurate. The conference switched after it had already made public announcements and extended invitations. That's a huge difference.
Male over-representation doesn't matter because computers don't care who programs them.
&gt;I don't have experience from other industries to tell you if it's worse This. Unless there have been large scale surveys that directly indicate that expected sexual harassment is the main reason for women not going into tech, your entire post is a bunch of unverifiable speculation. [This survey](http://www.huffingtonpost.com/2015/02/19/1-in-3-women-sexually-harassed-work-cosmopolitan_n_6713814.html) indicates that women in tech do not experience significantly more sexual harassment than in other professions, with food service and retail seeing rates at 42% and 36%, and with STEM, arts/entertainment, and legal being at 31%, 31%, 30%. Even female dominated fields like education and health care have reported rates of 23% and 21%. Considering that [there are dramatically more women in these fields than men](https://www.bls.gov/cps/cpsaat11.htm) (73.1% and 75.6%), can we really conclude that male dominated fields are the reason women experience sexual harassment? Bottom line, sexual harassment and gender distribution in professions are massively complex issues that cannot be simplified to just "Women are in the minority and some are discriminated against, therefore this is why most women do not go into tech fields. We should fix this with affirmative action". This kind of thinking is incredibly naive and does not definitively lead to solutions; in fact, it can be counterproductive since it can create exaggerations of perceived risk of sexual harassment and further discourage women.
I'm just gonna go right into white vs POC, instead of triangles and rectangles. Segregation exists in the united states because of decades of government and private programs enforcing it. This has led to uneven distribution of wealth, which has led to worse schools, worse homes, worse health, and worse other things for communities of color. "The ghetto" in your town is likely not populated by poor white people. It doesn't matter if people are "happy" where they are, in their segregated communities because segregation is a drain on society that brings everyone down, white and of color. There are brains going to waste in poor communities of color, and in jail, that would be leading our economy if they had been given the resources and trust they needed. That's the point of this exercise: each individual is happy, but the society is worse off than it could have been if the individuals actively sought diversity.
Use right tool - https://greensock.com/
Can't disagree with that. People arguing from a self-interested position can't ever be seen as truly unbiased. For example, I wondered if OP would feel the same if he had a son instead of a daughter. We all have unique experiences, no one can ever be truly neutral. I think we just have to acknowledge that and then do our best to think about the issue critically from multiple viewpoints. I put OPs family situation out of my mind and carried on with our conversation as if he were acting in good faith. I can't ever know if he is or not, so the best course of action to have a fruitful discussion is to assume that he is.
I would expect the panel/speakers to reflect the ratio of gender/nationality of users that are in attendance, or of the industry the conference represents. If 97% of the attendees are white males, then the panels will probably reflect that. In other words, the world of software development and IT is mostly male. Not saying that's good, I'd love to see more diversity in my industry. But to enforce a ratio that does not reflect the industry sends the bias the other way. The same would be true if the panel ended up being all Indian for example. That doesn't reflect the makeup of the entire corpus of devs in the world, so the panel should need to be adjusted then too. If the industry is 97% male and 3% female, then in a panel of 20 there needs to be .6 females on the panel. This is my own opinion, and none of these numbers are real, they are just for example.
how :/ can you help me :S
The thing that inspired me to be a programmer was playing video games and tinkering with computers. Given how pervasive technology is, there are very few people of any gender these days that don't have access to an electronic device to inspire them. Kids literally grow up holding iphones and ipads these days. There are massive campaigns to get women into STEM, and it doesn't appear to have made any difference. Maybe programming just isn't appealing to most women? Most people on the planet will probably tell you it looks like a boring career.
wrap your code in a function that calls itself after your code is done running ;(function animationLoop () { /* code */ animationLoop() })()
&gt; the applicant pool would have resembled typical software engineering male/female distribution. IE the bias occurred before the selection process. How is that bias? If N% of software engineers are female, and N% of submissions are from females, then the submissions are actually representative of the population, they aren't biased. Bias would be if N% of software engineers are female, and M% of submissions are from females, where N != M. Your definition of "*bias*" seems to imply that the sample shouldn't represent the population, which is exactly the opposite of what I learned in statistics. Or is math sexist?
Poor whites are not ignored. They benefit from desegregation as well. When you raise the bottom of society, everyone benefits. You will have less poverty for everyone. Integration is not evenly distributing poverty, it is fighting it. Edit: Furthermore, I'm talking about ONE problem, and ignoring others because they are not in the scope of this argument. White poverty is a problem, but I am not addressing it right now. Society does not have a choice between helping POC rise out of poverty and helping white people rise out of poverty. Both can be accomplished through many methods which do not conflict.
The word "segregated" often does not have a negative connotation. Water segregates from oil. If you always associate segregation with bad, then you will often misunderstand people who use the word in its fullest sense. Sometimes words stopped being used due to negative connotations. In my parents time molest was most commonly used to mean annoy/disturb. But now people avoid saying it because it is strongly associated with sexual molestation. The same thing might happen with segregate. But, at least for now in some regions it is still used in a fuller sense. If you're reading something that might have been written from such a place, it's worth understanding how it might be used. 
&gt; The only way to reach something close to 50/50 while keeping the same total number of people is for 45 of those 95 white males to be pushed out of the way in favor of minorities, regardless of their talent. This shouldn't be the goal, nor is it the point I'm trying to make. All I'm attempting to say here is that we, as the dominant demographic in software development, need to be sure that we're welcoming and encouraging everyone to participate — and that means sending an explicit invitation at first. When I'm in a new place with a group of strangers, whether or not I feel welcome is typically decided by someone from the group saying hello. It's a small thing, but it signals that I'm not intruding and my participation is welcome. We don't need to impose rules, bar white guys from participating, condemn any diversity ratio that isn't exactly 50/50, or any other heavy-handed solution. We just need to make a tiny bit of effort to let everyone know they're welcome here, and — if their talk makes it through a blind selection process — we'd love to hear what they have to say.
 Background.prototype = new Drawable(); This should be outside your Background scope
I'm sure they'd love to hear my story of being told I couldn't do anything as a child--as opposed to simply not being told I could do everything--yet doing all those things I wanted as an adult.
https://stackoverflow.com/questions/11401535/how-to-loop-animate-jquery
Thanks for the insight. Really great stuff, Jeff. I'll be following this GIT now
 Background.prototype = new Drawable(); This line needs to be outside the Background function. Edit: Damn, had this page open too long and beaten by 10 minutes :P
thank you sir :). 
&gt; An object as it comes from x=JSON.parse("{}") is semantically identical to one coming from x={}, excluding the magical __proto__ behaviour that is explicitly special cased in the ES spec because of backwards compatibility requirements. Yes, certainly once you parse a JSON string it is not really different from an object literal. &gt; /However/, assuming that you have a JSON literal that you are pasting into a source file there is no difference. There really isn't. I wrote the JS and JSON parsers in JavaScriptCore, and in fact the JS parser will initially try to just parse JS input by throwing it at the JSON parser (give or take a few tokens for function calls/assignment). So you are saying that JSON is truly just a limited subset of the JavaScript Object Literal syntax? Thus, by dumping JSON into a source file as a variable it will behave identically as if you made it a string and ran it through JSON.Parse (if we ignore the prototype). I was under the impression that there were edge cases where JSON was not quite a true subset of the Object Literal notation, and thus doing this would behave oddly at times. But, the more I think about it I can not think of a single JSON has the the other notation is missing, which would make it a subset.
its, okey :) but ty for the help sir 
Back in my day, we had a saying, "two wrongs don't make a right"; I never hear folks use that one anymore, and that makes me sad.... 
Amen to that. The problem would be quickly solved if we didn't treat "women who code" as a special thing that rarely happens, but instead have them integrate seamlessly in the work environment.
What's my position?
My gripe was just that you focused on sexual harassment as a strong correlate to gender ratios and the implication that increasing diversity would reduce such harassment.
&gt; I'm a male software engineer with a 2 year old daughter You're presenting a counter-argument to what has been demonized as a meritocracy bias with an emotional one. That's some skewed logic, Mr. "software engineer". Also, it's your job, as a parent, to teach your daughter that she can be whatever she wants to be, not for everyone else to shower her with trophies for coming in last place.
&gt;1) the selection process isn't where the bias comes from; It's blind review, how could it be bias? &gt;2) the conf promoters are manipulating the selection process to obtain the outcome they prefer; The conf promoters are disregarding their current selection process because the overarching pool is tainted. Therefore, the selection process is not functioning to their existing expectations. They preferred a "diverse" result, and they had a diverse result in terms of talks, but not a diverse result in terms of speakers. &gt;3) no one is actively working to counter the bias at its source; There are people actively working to counter the bias, however, the majority group (90% men) are not overwhelmingly doing so. &gt;4) no one is worried about selecting for other bio-based biases; The reason they used a blind review was because they were worried about other biases. Now that it has failed, they have to make a decision as to how to adapt their system given the systemic problems. &gt;6) everyone (conference planning committee-wise, at least) assumes that a single occurrence of all-whatever is too damaging for future prospects to simply shrug off, or even use for inspiration to try for a counter-distribution of submissions for the next one; You're using a lot of absolutes here, which I think are tainting your argument. I do believe however, you appear to be correct. They appear to have felt they needed to stop this now, instead of "next time," if there was a "next time." &gt;7) anyone hoping to submit a paper in the future will either be okay with being skipped to fulfill the quotas later, our will just shrug that off; I think nearly anyone hoping to submit a talk will realize the importance of diversity and will understand being bumped if their talk isn't as good as others within their chosen demographic. &gt;8) those submitting papers won't be observant enough to know the selection process is rigged, even when it's to their benefit, and be offended by it; The problem here is that this isn't some government protected freedom of speech argument. Those submitting papers know the process is rigged because it's done so by a private entity. ElectronConf could have just picked who they felt was best based on personal relationships. They made the decision to set a precedent for some type of blind review. There are other talks out there that do not do that. &gt;9) if #8 occurs, they won't be so offended that they submit papers to other applicable conferences, but deliberately skip this one, as a response; If they protest this conference, then so be it? I'm not sure why that's necessarily a problem unless everyone protests the conference and it fails. They'll also have to protest literally every other conference that works in diversity. Do you know of any that do not? Every single one I've attended prides itself on diversity. &gt;10) no other people in under-represented classes Wil ever wonder whether their paper was rejected due to not being in the preferred selection class (disclosure: I am a black hetero cis-male); The hope is that under-represented classes will be represented appropriately, no? If their paper is being rejected due to preferred selection for the majority, then we've got a problem that this particular ElectronConf is experiencing? &gt;11) pandering is okay for a good cause, and has no adverse effects on any concerns of professional ethics in a new field of work; How is this pandering? Professional ethics dictates quite clearly that to remain ethical, you must promote diversity, inclusion, and acceptance. Sometimes that is at odds toward analytical reasoning. It's about compromising to find the best possible outcome, not the best analytical result. I'm sorry but your concerns seem biased toward the status quo, and not toward inclusion. Maybe I'm misunderstanding you. Could you expound a bit more with actual opinion instead of telling me how you're interpreting what I'm saying? 
No, each entry in the group_users key should contain a single group Id and a single user Id. Also the users key and groups key shouldn't contain any link to the group_users key 
I'm stating that a woman's choice is being augmented by her experiences, none of which you have ever experienced. Did you read any of the studies and articles that I posted in this thread? I'm not continuing this argument until you can answer that question. 
&gt; My friend and his girlfriend ended up getting interviewed at the same company. the guy has a first in CS, won hackathons, and published a research paper. The girl has a 2-2 in CS, did fuckall else. The girl was also the one who got the job. In the real world a lot more goes into choosing a candidate to hire than their resume. &gt; It's honestly really tiring and abusive at this point. It seriously feels like a slap in the face to get rejected simply because you don't have a vagina. They represent such a low amount of applicants and filled positions overall that you are actually still getting beat out mostly by other dudes. 
So you believe that github. Should have a conference for github developers, and spend money and effort contacting people who haven't seen the front page of github where it's advertised clearly? &gt;it's just a nod to everyone in the community that this is an event for all of us. At what point does something become not githubs fault? They explicitly hardwired racial/gender/more equal than other preferences into their selection process and it still didn't get the desired results. How could they be LESS exclusionary outside of putting in quotas?
Nope, just suggesting that we should be reaching out to as many groups as possible. My suspicion is that the input set is currently biased toward white men; by broadening the outreach, we can hope to see the input diversity increase.
We are all the product of our experiences and our genetics, none of that changes the lack (and in fact as I said before, the programs encouraging women into STEM fields) of barriers women face. Here in the West women are free to pursue any career they wish, if they choose on average not to go into CS sobeit - that is their choice to make. &gt;Did you read any of the studies and articles that I posted in this thread? I have, and they have failed to establish a causal link.
Cool! Did you use something to create a virtual MIDI device and pass the MIDI signals to that? Or some other approach?
You should be able to chain the requests together like this: function req1(key) { return axios.get(`api/foo/${key}`) } function req2({ key }) { return axios.get(`api/bar/${key}`); } function req3({ data }) { return axios.get(`api/baz/${data}`); } req1(123) .then(req2) .then(req3);
Thanks a lot for your help. I think I got it. It's been a rough day for me so I'm not quite thinking straight. 
&gt;I wasn't aware you were a statistician, by the way Econometrician, to be precise. &gt;I do wonder what bothers you so much about diversity Nothing. It is diversity of innate characteristics *as a goal* which bothers me because it is literally racist/sexist/[innate characteristic]ist - judging the worth of someone based on their innate characteristics. &gt;What do you believe created that drastic change? It's be interesting to learn the **cause** of this, even if it doesn't matter. Why doesn't it matter? Because people are free to pursue whatever they would like - if men don't want to be nurses, they aren't forced to be nurses.
Absolutely not, because the positions are completely unparalleled. You're missing so many points here, I'm absolutely astonished. 
There are biological differences between men and women that highly impact what they like and care about. Generally, men like dealing with things while women like dealing with people. So men will overwhelmingly pick fields that deal with things while women overwhelmingly will pick fields that deal with people. People are not socially constructed like you'd like to believe and their biology makes their decisions for them more than most people want to accept. Your daughter will likely not pick a technology field not because she notices biases about how all your friends are male, but most likely because her body will simply not get anything out of toying around with things like most men do. And as you remove cultural biases that may in fact exist, all that happens is that the biological differences are heightened. For instance, Scandinavian countries have successfully removed as much gender bias as possible in all sorts of ways from various fields, but doing that has only made the problem more pronounced, and so in those countries women pick technology related fields even less than normal. It's important to understand that these differences between sexes exist and that they are a big reason as to why things happen. https://www.youtube.com/watch?v=ewvqEqIXdhU, https://www.youtube.com/watch?v=P5kFukqFKhw
https://www.youtube.com/watch?v=P5kFukqFKhw There are multiple studies that show that men tend to like dealing with things while women tend to like dealing with people, and so they will choose the jobs that fit their biological/personality make up better. It's 100% not speculation. https://www.youtube.com/watch?v=p5LRdW8xw70 In Scandinavian countries where cultural biases have been reduced a lot, it turns out that problem wasn't solved because the biological differences between sexes only became more pronounced, and so in those countries the problem of women not choosing tech related fields is even worse (even though you'd expect it to be better). All this is not speculation. People have studied it and these things have been tried in multiple countries. All you have to do is inform yourself to understand that biological differences between men and women exist and that they are a high part of what makes up all this supposed bias that you people are trying to fight against.
SECTION | CONTENT :--|:-- Title | Jonathan Haidt: How Social Justice Prevents Equality Description | One thing I would like to point out that he got wrong, is that when a a field of science prefer women to men with a ratio of 2:1, simply because they are women, is NOT the definition of anti-sexism, rather the textbook definition of ACTUAL sexism, just towards men. Other than that, it's a very good presentation, with a great message! Source: https://www.youtube.com/watch?v=Gatn5ameRr8 Jonathan David Haidt is a social psychologist and Professor of Ethical Leadership at New York University's Stern School of Business. His academic specialization is the psychology of morality and the moral emotions. Haidt is the author of two books: The Happiness Hypothesis: Finding Modern Truth in Ancient Wisdom (2006) and The Righteous Mind: Why Good People are Divided by Politics and Religion (2012), which became a New York Times bestseller. He was named one of the "top global thinkers" by Foreign Policy magazine, and one of the "top world thinkers" by Prospect magazine. Length | 0:13:42 **** ^(I am a bot, this is an auto-generated reply | )^[Info](https://www.reddit.com/u/video_descriptionbot) ^| ^[Feedback](https://www.reddit.com/message/compose/?to=video_descriptionbot&amp;subject=Feedback) ^| ^(Reply STOP to opt out permanently)
Define progress.
JSC has supported full ES6 for quite some time (Safari 10, which was released back in September 2016, and the Technical Preview had supported it since May 2016), this post is about designing an ES6 benchmarks (and explaining the choices made) and *optimising* ES6 features.
&gt;why would you not want to learn more about that? Because that has nothing to do with coding. If you want to make your gender the focus of your presentation, perhaps you would be better received at a gender studies conference. &gt;Would that not change your behavior? If anything it may change it in the opposite way you intend: if people inject their politics into business, I'm not going to look kindly on them. &gt;Your entitlement and biases show themselves brightly My treatment of all people as equals. &gt;The problem isn't about "forcing" someone to do something Except it is. &gt;It's about the systemic and societal impressions Which have not been shown to be causal in nature, only correlated. Consumption of chicken has increased over the period you selected, ergo chicken causes women to not select CS as a career - That is your reasoning without a demonstrated causal mechanism.
Wait - is it taking React 100ms to render one page or multiple pages?
I don't think that the average man is better at programming computers than the average woman. The programming industry is heavily skewed against women, AFAIK for cultural reasons. For example, teenage schoolgirls perform worse a math tests if they are reminded of their gender before taking the test. There's no such effect in men (and they perform identically when not reminded of their genders). They literally come to match society's expectations when you put them on their mind. Boys/men are susceptible to similar effects, off course. Segregation is the practice of keeping things of different arbitrary categories separated. In this case it doesn't come from top down authority, but emerges from individual bias. &gt; Pick one. You cannot have both. It's a matter of time scale. It may be true right now, but promoting diversity helps recruiting great people who would otherwise have spontaneously opted out of the STEM career path.
Out of curiosity, so I can hopefully better understand your perspective, do you not agree that there is problem with gender disparity in the field or is your issue with the actions taken by this conference specifically?
But I would argue that greater gender equality would likely reduce harassment. Gender disparity affects the hiring process and company culture significantly. I work at a woman-owned company, our employee makeup is at least 50% female across all roles (except developers which is about 35%). Granted my experience may just be anecdotal, but I think a strong female presence in the company positively affects the environment and makes us a stronger competitor in the market as well.
&gt;Because that has nothing to do with coding. If you want to make your gender the focus of your presentation, perhaps you would be better received at a gender studies conference. So, as a JavaScript developer you **only** care about coding? You don't know anything about how businesses work? You don't know the laws surrounding sexual harassment in the work place? You aren't aware of what ethics are involved in being part of a community? **You don't care about external factors that affect coding and development**? I think that explains a lot. &gt;If anything it may change it in the opposite way you intend: if people inject their politics into business, I'm not going to look kindly on them. How is this political in any sense? This has everything to do with community and culture, and most importantly, fair and equal representation. &gt;My treatment of all people as equals. If you treat all people as equals, then why not have non-men as part of the talks? Their experiences outside of coding influence how they have evolved as software developers. Are you saying that men are the only one chosen because they are somehow unequal to non-men speakers? Could it possibly not have anything to do with the method of choosing, but the systemic problems that exist before choice is calculated? We keep circling the point of this thread, but I'm not sure I'm getting through to you, or ever will. &gt;Except it is. How? Are they forcing you to attend? &gt;Consumption of chicken has increased over the period you selected, ergo chicken causes women to not select CS as a career - That is your reasoning without a demonstrated causal mechanism. I'm not a statistician, so I just don't have the ability to provide the right sources here. Would you be so kind as to provide the [actual](http://www.psychologicalscience.org/pdf/Women-Academic-Science.pdf?utm_campaig) [causation](http://paa2011.princeton.edu/papers/111625) for [women](https://www.researchgate.net/publication/297503876_Fixing_the_Leaky_Pipeline_to_Break_the_Glass_Ceiling_An_exploratory_study_on_the_economic_impacts_of_gender_equality_initiatives_targeting_female_representation_in_the_STEM_industries) not wanting to be part of STEM fields? 
Though I'm pretty much a nobody in this, I've been on the fence on giving a talk. What's going on here seems to make it impossible to throw in a bit of humour, which is kind of a core 'ideology' of mine that helps concepts stick. Makes learning less boring. I don't blame you for not going anymore. Why would you?
And yet, my SO has seen blatant sexism in the interview process (legally open and shut even, but then she gets labeled as a troublemaker in the industry).
&gt;there is problem with gender disparity Only if there are real barriers causing this disparity. If women are freely choosing not to pursue a career in CS, then fair enough - they're free to choose whichever field they wish. &gt;is your issue with the actions taken by this conference specifically? Actions like this are an annoyance because they infantilize the people they claim to want to help - and will cause women (or other "minorities") to second guess every hire and promotion they receive in their career.
&gt; The "social barriers" where every company eats up female CS grads just because? But they really don't. My SO has seen blatant hiring discrimination. Legally acting on that gets her labelled as a troublemaker though.
You're right that using React for templating only is a bit silly, but writing dynamic views remains a large reason to use React.
Since a lot of JS includes Dom manipulation, you should learn HTML before jumping into JS. Html is pretty easy anyways, you should be able to grasp it in two days tops. Basic CSS positioning would not hurt either, but if you want to focus on Js for now, leaving css for later is perfectly fine. Stop overthinking it and dive in. 
Yep, that's exactly the primary use case for React SSR. Render the initial page contents on the server for SEO and initial loading, and then the client-side React code attaches to the SSR'd HTML and continues from there. (Also, why do you say that "React seems overly complex"? Are you specifically pointing at use of React for SSR, or in general? If the latter, what concerns do you have?)
I wonder if you're actually as insufferable in person as your writing would have us believe.
 &gt; but I believe true racism is when you're given more opportunities based on the color of your skin You should probably rephrase this because you sound like a total fucking idiot.
&gt;I don't think that the average man is better at programming computers than the average woman. However, the average man is much more interested in programming computers than the average woman. Which then has a predictable outcome: if most people in a field are male, then most of the top people in that field will probably also be male. &gt;The programming industry is heavily skewed against women, AFAIK for cultural reasons. Going to need sources on that. There is a far higher percentage of women in STEM in countries like India, than countries like Norway. No doubt due to Indian culture that treats women equally and Norwegian culture that treats women as inferior. /s Or for that matter, the explicit STEM bias in favour of women (quotas and affirmative action), or the covert bias: http://news.cornell.edu/stories/2015/04/women-preferred-21-over-men-stem-faculty-positions &gt;For example, teenage schoolgirls perform worse a math tests if they are reminded of their gender before taking the test. Nope, [stereotype threat](https://www.psychologytoday.com/blog/rabble-rouser/201512/is-stereotype-threat-overcooked-overstated-and-oversold) is just another exaggerated and misrepresented claim. &gt;It's a matter of time scale. It may be true right now, but promoting diversity helps recruiting great people who would otherwise have spontaneously opted out of the STEM career path. There is no evidence that promoting diversity does anything other than waste money, discriminate against men, and have inferior results. Those who want to program, will. Those who don't, will not. Some people don't want to admit it, but the fact is that most of those people who do are men. And not due to bias or discrimination - if that was the cause, we wouldn't see far more women in STEM in societies like India as opposed to societies like Norway. If women were not willing to join a male-dominated profession, then we wouldn't have seen veterinarians go from a male-dominated field to female-dominated applicants. &gt;Veterinary medicine, previously a male-dominated profession, has experienced a significant increase in the number of women studying at veterinary colleges and practising in all fields of the profession. In Canada, and in the United States, women constitute approximately 80% of the veterinary college student population. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC340187/
That's the very definition of bias. Tendency to one over the other.
It seems pretty clear that we cannot rely on merit (by which I mean "quality of a talk proposal") alone to provide a diverse speaker lineup.
So, pray tell, what stopped them from doing so?
Excellent point w.r.t to Scandinavian countries (2 years in Stockholm here). Women in tech are basically absent in those "enlightened", "bias free", "utopian" socities. One wonders why.
&gt;Except it wasn't. Well yeah, that's what I'm saying -- because assuming that 1/10 of the submitted talks were women, and also assuming that 1/10 lines up with the percentage of women in the field, this is as unbiased as you can get with respect to the set of all developers since the relative representation was equal. &gt;Nobody is arguing the bias is in the selection algorithm. The bias occurred way before that. Then how does GitHub plan to solve this discrepancy without invoking literal bias, if their selection process relative to the set of all developers wasn't good enough? Again, assuming equal representation between those who submitted talks and those who are developers.
&gt;That's the very definition of bias. Tendency to one over the other. Okay, let's run with that: *Tendency to one over the other.* What is "*one*" in this instance? Well it would be a certain individual. That is if certain individuals are more likely to be selected than other individuals then the sample is biased. This is supported by the definition of "[*sampling bias*](https://en.wikipedia.org/wiki/Sampling_bias)" from statistics. Who is the population of people who are liable to submit talks to ElectronConf (i.e. who is being sampled)? Well it would be the population of all JavaScript developers. Let's assume that the population of JavaScript developers is 900 men, 100 women, and that 10 talk ideas are submitted. Which of the following breakdowns of submissions would represent a biased sample wherein **some individuals are more likely to have submitted talks than others**: - 9 talks by men, 1 by a woman - 5 talks by men, 5 by women - 1 talk by a man, 9 by women Let's look at the likeliness an individual submitted a talk in each instance: - 9 / 900 = 1% chance a given man submitted a talk, 1 / 100 = 1% chance a given woman submitted a talk - 5 / 900 = .56% chance a given man submitted a talk, 5% chance a given woman submitted a talk - 1 / 900 = .11% chance a given man submitted a talk, 9% chance a given woman submitted a talk I.e. if we grant that the number of male and female JavaScript developers are not the same, then a representative sample will **not** include the same number of male as female samples. If it does then it is biased, **not** the opposite.
Why, does it cuck you out?
Ah those are some great points about SEO that I hadn't thought of. I've faced this issue before and I hadn't thought about doing pre-rendering like that because you're repeating a ton of logic to basically build the same thing your JS is also building, and keeping those two codebases in sync would be pretty treacherous. So I'm guessing with SSR you basically reuse React "components" which actually contain the template code, but different "containers" that contain the logic and data retrieval/manipulation type code? This really creates a new wrinkle in how I think about HTML rendering, interesting stuff.
I would think so. At least the basic for HTML and CSS And Frankly, HTML and CSS do not require much effort.
It was fun. Really good stuff. I have no idea how it works. 
While JavaScript is a language that is capable of many things, both in the front-end of the site ( visual stuff and behaviour ) it also works well in the back-end development too. I highly recommend you focus on HTML and CSS before you touch JS. Most of the JavaScript on TreeHouse is for Front End Devs, so you'll do a lot of DOM manipulation ( changing how the page animates and changes based on user input ) and adding behaviour. If you want to program before using Markup and Styling, try a non-web programming language first, like Python or Ruby. I highly recommend learning programming principles if you can first, and go from there. This course is great on Treehouse: https://teamtreehouse.com/library/introducing-patterns It'll teach you basic design patterns for programming.
&gt;Then how does GitHub plan to solve this discrepancy without invoking literal bias, if their selection process relative to the set of all developers wasn't good enough? Again, assuming equal representation between those who submitted talks and those who are developers. I think the plan was to include more women developers ;) and I'm guessing that's a bias they are ok with, because unlike you they see "corrective bias" as morally acceptable. That's really all this comes down to. It's pretty axiomatic: either you're ok with that or your not - but it's their conference.
I wonder how much of the perception is FROM women, i.e. they don't want to appear nerdy/unfashionable. Most of the "great" women in computer science have the nerdy dialed up to 11. Like this body positivity stuff, most guys simply dont care that much. And the ones that are super critical don't even like women.
I'm guessing that's a bias they are ok with, because unlike you they see "corrective bias" as morally acceptable. That's really all this comes down to. It's pretty axiomic: either you're ok with that or your not - but it's their conference.
Hardly matters, "learning" html and css is a trivial affair. Mastering them is another matter, but take a day to cover the basics and move on, go back when you have issues. 
&gt;I think the plan was to include more women developers ;) Heh, sometimes it's all so simple &gt; It's pretty axiomic: either you're ok with that or your not - but it's their conference. Hey, I'm all for the axiomatic, so that's fine with me. Though this wasn't a problem until some idiot on Twitter drew attention to it, so I do wonder where their true motives lie. Again, not that it matters -- their conference, not mine.
Almost certainly.
Thanks for missing the point entirely.
Don't you think you should figure out what the acceptable number (or number ranges) are first before you start attempting to fix the problem? Before you can even begin to assess what the roots of the problem are (and thus what needs to be done to fix them), you need to know what things are like when the problem doesn't exist. Otherwise you're just imposing on others what your view of "right" is, as you'll come up with an arbitrary value that in your mind is correct levels of diversity. You're taking a very broad brush approach to this problem with very little data or facts to back you up. 
&gt;No thanks. Well, I guess by the rest of the world's determination, this is a problem. I'm glad I don't work with you, and I am also glad you are not spearheading the inclusion of people's in programming or JavaScript specifically. See ya!
You have to know the distinction between javascript and angularjs first. Javscript is a language. AngularJS is a framework build on top of that. There are tons of resources to learn javascript - I guess you start there - without even thinking of angularjs. Once you have a foothold on javascript, you can explore the various applications of the language. - Node.js for backend systems - Angularjs as a front-end platform to build website UIs - React as a UI view-layer library - etc. Angularjs might be too daunting to grasp for a JS beginner. So, don't go there first. And there's plenty to do in javascript even without knowing any angularjs.
Looking at your script, it makes no sense you can not get access to the markers inside the if. What it seems is that "directionsService.route" is an asynchronous function and you may be doing actions before the "markers.push" happens inside the if.
Interesting rebuke. But both that and eating lead paint went out of style a while ago, so you can quit doing both.
I hate anime.
I found it useful for static site generation: pages are displayed quicker, can be viewed even without JavaScript, yet can be as dynamic as a normal React app. And I can use React for templating; I don’t need a custom templating engine (along with custom syntax). Details: http://2ality.com/2017/03/static-site-generation.html
Oh? How exactly? You say that lack of diversity is a problem. You say that the lack of diversity in your company happened because you hired people based on their merits. You think this was a mistake and that you should have made "explicit diversity hires" (= tell white male applicants to piss off for what they are). Isn't this what you mean when you say &gt; it takes action, not just good intentions and an absence of prejudice ? You're even admitting that you're "embarrassed" to have 6 "middle-class, cisgendered, straight white men" in your company. 
What the fuck lmao
I believe that the argument is that their personal choice isn't their choice at all, but that of society, and that regardless of peoples' preferences, that disparities are bad.
Instead of starting a new thread why didn't you just comment on the original? 
Female CS grads are eaten up as a direct reaction to a lack of them. The issue doesn't start at the hiring level, it starts in elementary school and with social norms.
Aurelia has good core javascript in my opinion. Broken in to modules which are relatively easy to follow 
&gt;You can bet the percentage of talks submitted by females was proportionate to their representation in the industry, so probably 1/10. If 1/10 submissions was made by a female, and 1/10 of the total submissions was accepted, you can see how they end up with all males. Do you have a source for this? Github tries to push women in tech almost more than any other company out there. There is no way that this happened. Why do you have to make up excuses for why there were no women being chosen to speak?
Sounds exactly like what I said. 
Even better: in most cases you only need to swap out the renderer and that's it. No need to duplicate logic for server and client.
Sources please?
Great - I am glad you had time to check Passport out. We have a concept called applications that has worked for everyone who has needed groups. Can I connect you with our lead developer to see if this might work for your use case? 
You can pass a callback function to initMap and execute after markers.push inside the if block. Execute the callback passing markers array so you can access the variable inside callback as argument with the final result. Or maybe all you need to do is move the last line into if block. The line where you are instantiating MarkerCluster to the variable markerCluster &lt;script&gt; function initMap() { var jsSpots = {{ spots | serialize | raw }}; var map = new google.maps.Map(document.getElementById('map'), { zoom: 6, center: {lat: 46.788, lng: 2.241}, }); var skateparks = jsSpots.filter(function(spot){return spot.discr == "skatepark";}); var markers = skateparks.map(function(skatepark) { return new google.maps.Marker( { position: {lat: skatepark.location.latitude, lng: skatepark.location.longitude}, label: skatepark.name } ) }); var directionsService = new google.maps.DirectionsService(); var onroads = jsSpots.filter(function(spot){return spot.discr == "onroad";}); var roads = onroads.map(function(onroad) { var request = { origin: { lat: onroad.waypoints[0].latitude, lng: onroad.waypoints[0].longitude }, destination: { lat: onroad.waypoints[1].latitude, lng: onroad.waypoints[1].longitude }, travelMode: google.maps.DirectionsTravelMode.DRIVING, unitSystem: google.maps.UnitSystem.METRIC }; var directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true, preserveViewport: true}); directionsRenderer.setMap(map); directionsService.route(request, function(response, status) { if (status == google.maps.DirectionsStatus.OK) { directionsRenderer.setDirections(response); markers.push(new google.maps.Marker( { position: { lat: onroad.waypoints[0].latitude, lng: onroad.waypoints[0].longitude }, label: onroad.name } )); var markerCluster = new MarkerClusterer(map, markers, {imagePath: 'https://cdn.rawgit.com/googlemaps/js-marker-clusterer/gh-pages/images/m'}); } } ); } ); } &lt;/script&gt;
i think you use selenium via protractor, since protractor is the end-user API and selenium is being under the hood. Protractor is the crack for selenium's cocaine? Hash for its weed? Demeral for its poppy seeds ... 
Nice. Do you have something else that has something to do with the topic?
##Sex differences in psychology Sex differences in psychology or gender differences are differences in the mental functions and behaviors of the sexes, and are due to a complex interplay of biological, developmental, and cultural factors. Differences have been found in a variety of fields such as mental health, cognitive abilities, personality, and tendency towards aggression. Such variation may be both innate or learned and is often very difficult to distinguish. Modern research attempts to distinguish between such differences, and to analyze any ethical concerns raised. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://www.reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://www.reddit.com/r/javascript/about/banned) ^| [^Information](https://reddit.com/r/WikiTextBot) ^]
If you want to be productive with your effort, just learn them all incrementally, in the order of _what you want to accomplish_. e.g.: I want to output text: &lt;input /&gt; (HTML), DOM and event handlers (JS), make it look nice (CSS). 
Do you acknowledge that systemic discrimination has _already happened_ by the time that people our applying to our open positions? It's not that we shouldn't hire based on merits—we should. The real problem is that we didn't cast a wide enough net. We posted on job-boards and social media channels that we are familiar with (like HN and reddit). Our social networks are inherently biased. So, maybe we hired the best person from our application pool, but our _applicant pool_ was inherently skewed toward while male persons. Maybe we would've made a _better_ hire if we had gone slower and intentionally cast a wider net. Our lack of diversity as a company doesn't imply that straight white males are the best programmers. Our lack of diversity reflects that unless we actively try to reach out on a broader basis, we will naturally be messaging to people that are like us. Maybe EletronConf will find _better_ speakers by going slower and casting a wider net. I wouldn't advocate that they take worse speakers for their conference. I would advocate that they find _better_ speakers for their conference by searching across a wider set of potential speakers.
yes. Once you do, leveraging templating engines and scss/sass will make make sense.
I mean, we sort of did. My grandparents still see nothing wrong with blackface.
&gt; You say that the lack of diversity in your company happened because you hired people based on their merits This is where you've missed the point. The point is that we didn't _seek out_ a broader pool of people. It's about casting a wider net, and _actively seeking out_ social networks that we're not immediately plugged into. It takes _positive effort_ to not discriminate against people who are not like us. That's because, by default our social networks tend to be made up of people like us (this is pretty true for all people). The discrimination didn't happen at the step of "decide who is the best applicant" (acknowledging that some unconscious biases probably _did_ happen here, but we did our best). The discrimination happened at the step of "we didn't seek out and find a set of applications who aren't like us". This is the step that we failed at. I'm willing to bet this is the same step that ElectronConf is re-evaluating. 
There's really not much to WebMIDI -- it's just a wrapper for connecting to MIDI devices and sending/receiving MIDI messages. When I was working with it I just [read the spec](https://webaudio.github.io/web-midi-api/). Agreeing with /u/supdawg86 though, I'm not sure what exactly you want to work with MIDI for -- sounds like WebAudio is more what you're looking for.
I don't see the discimination there. I mean, qualified non-"white middle-class cis males" would be present on the regular developer channels as well. It's not like there are obscure social media only for minorities who deliberately ignore your job offers and prefer unemployment unless you message them directly: "Please work for us. Apply here! You have the right genitals and the right skin color!"
&gt; Every women who speaks at electronconf this year will now know that their talk was technically inferior to those initially planned and they will know that they wouldn't be speaking if they were a man. This is bullshit. Unless they specifically said they were only going to consider talks that had already been submitted, this is just not true. There's a difference between casting a wider net and trying to create a more diverse applicant pool and elevating a talk based only on the gender or race of the speaker. If they were going to do the latter they wouldn't need to delay the conference. If they are delaying the conference it's because they are seeking _new_ speaker applications.
I feel like forcing people into careers they don't want just for the sake of "equality" is worse than allowing people to choose the paths they want, but I guess I am just behind the times.
I would say of course unless you are learning Javascript purely for systems engineering stuff(building an API, etc.) and focusing exclusively on NodeJS. Honestly, I wouldn't spend more than an afternoon learning HTML/CSS. If you're not into graphical layout, it is absolutely mind-numbing to purposely study concepts like display elements, the box model, etc. I learned a lot faster when I tried to build things and ran into layout/style problems. (Hint: google+github search is every coder's friend) Then I'd hop on over to some css framework like Bootstrap, Semantic, or the oh-so lovely AntD. This way you can build applications without deep knowledge of HTML/CSS being a blocker. You can have a responsive layout with a navbar menu, siderbar, and main content window in a few minutes instead of a few taxing hours adjusting your page pixel by pixel =P Making pixel perfect, responsive front-ends isn't too difficult. How well it cascades depends on how detail oriented/anal you are about design.
&gt; Which is essentially what you're suggesting we do by saying "lets ignore merit and just GIVE spots to people with different genitals" Nobody said that. You're arguing against a straw-man. Have fun in your pile of straw. People are saying "because there is inherent systemic racism, you need to proactively spend more time and effort on getting a diverse applicant pool". Once you do that, you can decide based entirely on merit and things will sort themselves out. &gt; Nobody is arguing the bias is in the selection algorithm. The bias occurred way before that.
In a way, though, this is a version of the [Wrench Wench](http://tvtropes.org/pmwiki/pmwiki.php/Main/WrenchWench) trope.
Is it that "insufferable" to be encouraged to stop and think about possible unidentified sources of bias that could be part of a selection process?
What does this have to do with racism? ... So transparent. 
&gt; Is there any proof of that systemic discrimination? Yes. &gt; are you saying that a majority of women that choose to become programmers can't find a job in IT? There's a gender gap in math skills by the _8th grade_. That's a result of societal pressures on women and men. Men aren't inherently better at math. So, yes, women that choose to become programmers likely can get a job in IT (though it's harder than it is for men*). But far fewer women _choose_ to find a job in IT because society has pushed them away from it all the way through high school. &gt; No Ha, like I'm going to concede the point that easily. &gt; and ending up sitting on a chair in front of a computer writing unit tests ... for 40 years might not be their first one. That's fine. I don't want to force anyone into something that they don't want to do. I want it to be easier to _make_ that choice if they want to. Right now it's harder for a women to make that choice than a man. THe same is also true for people of color. &gt; and ending up sitting on a chair in front of a computer writing unit tests **all day** We don't think anyone should sit in front of a computer all day. We consider a 20 hour work week to be full time (while offering a full time salary). See [Work Sustainably](http://www.apsis.io/blog/2015/04/23/work-sustainably). --- \* See [Why does John get the STEM job rather than Jennifer?](http://gender.stanford.edu/news/2014/why-does-john-get-stem-job-rather-jennifer) for a study or [This Female Exec Changed Her Name to a Man’s to Get a Job. Should You?](http://fortune.com/2016/06/08/name-bias-in-hiring/) if you prefer anecdotes.
Thanks!
To diversify the attendees, seek to improve the diversity of the field at large. Oh, right, that's what everyone's whining about.
&gt; and ensure you hire person who is not white/male it's We said no such thing. You just made this up, because you're not reading the words I'm writing. And you've rested the rest of your comment on this straw-man that you've created. So...strike that, and then re-evaluate your argument, I guess?
Can you tell me the criteria for determining if you're cast a wide enough search for applicants. Edit: Also how did you determine that the previous search was not wide enough?
Sure. The _end goal_ would be to have our applicant pool reflect a representative sample of the nation. That is, ideally 50% of our applicants should be women. An interim goal would be to have an applicant pool that is representative that have the highest rate of women graduating. For example, in 2015 the UW CSE department graduated 32% women. Edit: Our previous search had much lower applicant ratios than these numbers (~5%). u/odisant and I are the full owners of the business, so we can determine it by fiat. "We decided" is pretty much enough. (also a foot-note, I refer to gender specifically here, but this absolutely applies to other factors as well)
So, regardless of other factors, you've failed if you don't have the appropriate representation pool profile. Given this you're telling us that if you accept less qualified/interesting applicants but attain the wanted representation profile you judge this a success. 
should look into a css alternative, JS animations can be rather inefficient.
&gt; So, regardless of other factors, you've failed if you don't have the appropriate representation pool profile. Yes. &gt; Given this you're telling us that if you accept less qualified/interesting applicants but attain the wanted representation profile you judge this a success. No. This is the part that you're making up because you like arguing against this straw-man. I never said this. u/odisant never said this. You just _want_ this to be true, because it's the only thing you can mount a decent argument against. --- This is really simple logic. It's a difference between if and if and only if. It's a necessary condition, but not a sufficient condition. "A -&gt; B" != "B -&gt; A"
So your argument is "that's the way it is, why bother trying to change it?" Man, that's a sad perspective you have on life :(
Because I'd rather not publicly broadcast that
I get where you're coming from, but as a counter point take something like "color blindness" with regards to race issues. It *seems* noble but it also means that discriminatory practices or realities, whether the result of deliberate bias or not, are ignored because "I don't see race" unless you can prove that there is conscious racism behind it. So in my opinion this statement: "Personally I favor immediately going to non-discrimination." really is a point of view that just allows people who *haven't* historically gotten the short end of the stick to feel good about themselves but shut down any efforts to balance the scales because it seems unfair to them. Even if totally well meaning because I believe you are. I do agree that Identity politics gets extremely misused and drives wedges, but "reverse racism" and dismissing efforts to lift up disenfranchised groups as somehow equal to the kind of discrimination faced by those groups is not noble nor is it the high road. It's self-interest. "I guess it all really just comes down to whether you think you need to discriminate to reach a society without discrimination." - is a nice question to ask, but one that feels a lot different when you aren't part of one of those groups that has been the victim of widespread societal discrimination. Like you said, "People arguing from a self-interested position can't ever be seen as truly unbiased."
define blatant? I have only seen blatant discrimination where they literally say "hire her over him so we get a girl"
It's because Soros paid me to do it ;) Also I killed Seth Rich. I'm the deep state actually.
100% of our applicants must prefer Cooler Ranch to Nacho Cheesier. #fiat
ok, fair point. But do really you not see that making fun of people for being ignorant doesn't make them any more ignorant, and doesn't encourage people to understand why other people find certain things offensive? I understand we're talking about full grown adults but a lot of issues like that don't cross the barrier from "ok, yeah some people will probably be offended but whatevs, SJWs get offended by everything, why is blackface bad but whiteface ok?" to "holy crap, there's a lot of history and context to why this could be really offensive or hurtful to a group of people. Maybe it's not the right thing to do". Until we can talk more openly about why something is offensive, I think it's a lot harder for people to have a sincere understanding and at least some empathy for issues like that, and to start making choices because they believe it's the right thing to do, rather than because 'someone somewhere might get offended'. I realize it's not the token minority's job or even their role really to speak for all members of their minority, but even just their presence could start putting issues like this on people's radars that they wouldn't have thought of otherwise.
Triggered the runaway timer in Chrome once and continuously in Firefox. Maybe those benchmarks should run over in a worker. Somewhat OT: The horizontal scrollbar disappears if 100vh is changed to 100%: @keyframes wipe-in { 0% { width: 0; } 100% { width: 100%; } } The right edge of the lines isn't properly aligned: https://i.imgur.com/GhUhLAx.png
&gt;I never said this. I'm sorry but you have, literally in the post. I think the problem is you're getting called out for making the success criteria the racial/gender profile and not the professional qualifications of the applicant pool and perhaps you're uncomfortable with that. Is entirely possible to have the best candidates fit that profile? Sure, but you've put forward that regardless of other factors, such as quality and skills, the criteria to judge success is that profile, so you're inviting skepticism.
&gt; I'm sorry but you have, literally in the post. Quote it. **Quote me a single place where I have said I was willing to accept less qualified / interesting applications.** We're literally posting to all the same job boards that we used to be, so we're _literally getting all the same applicants that we otherwise would have_. We're just getting _more_ applicants that we would have otherwise. And your assumption is that they're less interesting. I don't know why you assume that, since all I've told you about those applicants is that they will have a higher ratio of women or people of color. &gt; I think the problem is you're getting called out for making the success criteria the racial/gender profile and not the professional qualifications of the applicant pool and perhaps you're uncomfortable with that. The success criteria for _how broad the applicant pool_ is related to the racial and gender profile of the applicants. That's different than the success criteria for a hire decision.
I am not courageous enough to wade into these discussions but as someone who works a lot on diversity and inclusivity issues (enough to know I'm fairly clueless) let me just say: keep on keeping on and don't let the haters block necessary progress :)
It's not courage, it's what my mother used to call "willful, stupid, stubbornness." I appreciate the kind words, and thanks for everything you do!
Isn't it interesting how we classify animals down by each and every physical and intellectual quality and yet somehow the most complicated species to ever exist is completely and universally equal for both sexes across all continents?
Talk about that at a friendly lunch or something. Otherwise keep it out of a tech environment where people are there to further their careers not hear your lifes story. 
I figure change can only happen when you engage people that have different opinions.
&gt; You are working under the assumption that there is a single standard for html. You are wrong, standards for html such as html5 are the common denominator of html that happened to be parsed the same way. Nope. You just made that up. &gt; This means that it describes how to write to ensure correct parsing, whereas preventing this injection means preventing every grammar of every browser which would accept that string. Nope. You just made that up. &gt; I showed you a very simple example where you failed to account for what browsers will accept as white text Nope. You just made that up. &gt; so your code will not protect the user adequately. Nope. You just made that up. &gt; I'm just saying "here's one you didn't" Nope. You didn't provide that. &gt; its useless and dangerous and slower Nope. &gt; You're the one making the grandiose claim that you have succeeded in anticipating all browser injection syntaxes Well I thought it was just a minor contribution, but thanks.
And crush them.
Try var arrayMenuLinks = Array.from(menulinks) And then iterate over that And when you're looping to add events, forgot if js only registers last i. If that's a problem, try using let i instead of var i when initializing it
That the people presenting the "meritocracy" argument are basing it on racism. Especially in this context, where race wasn't in play in selecting the participants
Am I the only who doesn't care wether the speakers have a weewee or a hoohoo?!
Now I don't get the error message, whereas it does not add or remove the specific classes given in the eventListener function. I simply tried to replace the `menuLinks.length` by the actual length of the menuLinks, which is `6`. That also did not make any difference. How come it works when I manually enter a number instead of `i` but does not work with for loop?
I agree that anyone invited to present should not be uninvited, that is insensitive and disrespectful of the effort they already made to prepare.
No effect :/
https://i.warosu.org/data/sci/img/0081/88/1467878341276.jpg
Most nurses are female and nobody sees a problem with it.
Why not both?
SECTION | CONTENT :--|:-- Title | The Gender Equality Paradox - Documentary NRK - 2011 Length | 0:38:53 **** ^(I am a bot, this is an auto-generated reply | )^[Info](https://www.reddit.com/u/video_descriptionbot) ^| ^[Feedback](https://www.reddit.com/message/compose/?to=video_descriptionbot&amp;subject=Feedback) ^| ^(Reply STOP to opt out permanently)
proving once and for all men are objectively better at stuff
I found codecademy's free HTML/CSS courses very easy to understand. I finished them in a couple days and had enough skills to fully re-create a few of my frequent homepages.
Is something messed up when most Lumberjacks and Crab Fishermen are men? What are we going to do to address this imbalance? Maybe genders are different and that's ok?
That's textbook *argumentum ad hominem* though.
How you spend your time: Sad!
&gt; reverse racism" and dismissing efforts to lift up disenfranchised groups as somehow equal to the kind of discrimination faced by those groups is not noble nor is it the high road. It's self-interest. I don't see how that's incompatible. People usually act in self interest, but that doesn't mean they are wrong to do so, in fact I'd say it's usually morally right to stand up for yourself. Ending racism of any kind is in the interest of everyone anyways. But if people would stop acting like race is a thing that we need to acknowledge it, we'd sure be closer to that goal instead of diving into identity politics. &gt;feels a lot different Feelings are irrelevant here, just because I ain't white doesn't mean i have some sort of magical insight into what is and isn't moral, or that my view of the situation is of any more importance, that's Hegelian bullshit.
We're just not going to see eye-to-eye on this. You're treating conferences as infotainment while I and many others could care less about stuff such as that *especially* if it's going to cause an organizer to reject more technically qualified speakers based on some quota. If there were 20 spots and the 20 most technically accomplished speakers were all corgis I would want to hear from 20 corgis not 10 corgis 5 Chihuahuas, 2 poodles and 3 retrievers. 
Yeah, so allegations of 'racism' are even more stupid in that context.
I really am not seeing the controversy in stating that people with fundamentally different experiences will view and approach the world in a fundamentally different way. You could, at most, make an argument that I am assuming those experiences automatically are compared relative to those of a white male, but in the context of the conversation that is actually implied.
I've been meaning to write another​ emulator with the intent of targeting webasm. I think basic emulators are a great why to test new languages or platforms! Plus they are fun to make!
Then again, any character can be reduced to a trope if you squint enough. Not to mention every story has already been told in some way before.
good riddance this comment got deleted, what an incredibly fascist statement haha
The issue, for me, is not what they are doing so much as how they are doing it. Here is the statement: &gt; We published a list of speakers that does not reflect the standards to which we hold ourselves. We will be postponing this event until we can deliver a more diverse slate of speakers. The problem here is the fact that they went through with publishing the list of speakers and are now, presumably, rescinding those invitations. They've created a public spectacle at the cost of people who did nothing wrong. If they truly were committed to diversity they would never have published in the first place. So why did they publish and rescind?
&gt;What false dilemma? What I said is simply a fact, not a false dilemma. You said, essentially &gt;A or B. Pick one. You cannot have both. But the choices are not limited to A and B. &gt; Yes we are. That's the entire discussion. Whether Github should, or shouldn't, prioritize diversity (that is, fake diversity of gender rather than real diversity of thought and argument) over excellence (that is, presenting the best and most interesting ideas that were selected by blind review). No it isn't. You just came in here spouting bullshit unrelated to what anyone was talking about to promote your MRA agenda, the main thing you are on Reddit to talk about. &gt; So Github's primary goal in having a conference was to make money, and not to present the best topics? No, Github's goal as a company is to get users for their services in order to make money. All other goals are either complementary or secondary to that. Holding conferences that pay for themselves through ticket and workshop sales, and that promote brand awareness in a major way, yes are complementary to their goal as a company to make money. &gt; Any proof of that, or did you just make that up? Any proof that Github's only two goals as a company or at their conference could possibly be to "promote excellence" or to "promote diversity"? No? Go fuck yourself.
True, but I don't see how being black or a woman counts as *fundamentally different experiences*, at least not ones relevant to the profession. There are so many better indicators of this than race or gender. Logic doesn't change if you're black or a woman. Perhaps in more artistic fields your cultural background will matter, like how we have different styles of music created by people from different cultures. However, programming in particular is very much blind to all of that. Your programming experience across different fields (eg. embedded, web, machine learning, etc.) is far more relevant to the kind of ideas you might have. That's what's great about it IMO; it's one of the few fields where the work can be judged objectively without any regard to who the author is.
Javascript is not perfect, even Google has chosen Typescript as a language for Angular. Sone people don't like it, some people hate Php or Java. Just try it, you will not find a perfect stack. 
There have been many influential and groundbreaking women in computer science. If you want to something to go off of to show your daughter that women have been, are, and can continue be computer scientists, then this is an ok place to start https://en.m.wikipedia.org/wiki/Women_in_computing I like to think that our field is not oppressive when it comes to demographic. It makes sense that such a technical field evaluate on merit, IMO, because that's the way that scientific minds think. I would bet that many of the influential women in the wiki article above would agree with evaluating based on merit... conjecture, and maybe I'm flat-out wrong, but that's what I would guess. My most honest opinion is that the supposed burden on tech companies of outreach and diversity is a load of baloney. Companies have an obligation to their shareholders, bottom line, and customers to provide the highest quality product in the most profitable way, and nothing more. They also get to define their own core values and if active outreach and diversity are part of their core values, then that's fine, but that's also, importantly, up to them (I think Github is in this camp, but I can't find their core values anywhere, so I can't say for sure). If I wanted to be a hairdresser, interior designer, or clothing designer, then maybe I would go to school for it, get my chops up, and start applying for jobs. But I decided that I wanted to be a programmer, so I busted my ass day and night to self teach, scrappily carved my own path, and now have an excellent career. If I had gotten a spot in that conf, after all I've put myself through and sacrificed to get where I am today, only to get it taken away because "sorry, you have a penis", boy would I be pissed; and I would probably be driven by that event to become outright resentful of the notion of inclusivity, which I am not currently, thus creating or furthering a community divide. I realize I'm really just brain dumping my opinion here, but I hope that link is helpful and if your daughter wants to some day, then with your help and encouragement along with her own burning passion, she can be a programmer too.
Non-Mobile link: https://en.wikipedia.org/wiki/Women_in_computing *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^76678
But the best ideas can be excluded from the conversation if the dominant group acts in their self interest to exclude them.
&gt; The simplest way to explain the behavior of any bureaucratic organization is to assume that it is controlled by a cabal of its enemies. - Robert Conquest
&gt; My question to Reddit however is did you learn HTML and CSS before JS? Yes. &gt; What are your thoughts on learning JS before HTML and CSS? Not a good idea if the goal is to create websites / pages. Even if you use react or some other library to create custom HTML modules you're still required to understand the DOM and how CSS affects it. &gt; JS can be used to do a lot of things besides web design so what have you done with JS besides create websites? You can run a local node install and use it as an automation / testing tool in your workflow.
So why would you thank them for botching this? There were real people who were hurt because of this decision. It's not something that deserves praise.
But aren't coed groups of soldier way worse than all male troops? 
&gt;There's a difference between casting a wider net and trying to create a more diverse applicant pool and elevating a talk based only on the gender or race of the speaker. This is the fundamental point that many are missing in this conversation. They chose the best from a smaller pool. It's not a reflection of reality that only men have the best ideas to share.
&gt; what you said makes them feel good about themselves What you're saying is just making you feel good about yourself my dude. Don't pretend you're not virtue signaling. Or do, I really don't care. Everyone approaches problems in different ways. I'm for diversity of thought, no matter who it's from. You're wording this to imply other people don't want women and you know thats not true.
One thing to remember, is that Github have a history of being less than welcoming to female staff (there are recorded incidents, have a look around). When you've a history as such, it's important to go above and beyond to ensure that women will apply to the CFP. One way to do that is to write to prominent ladies who clearly work with electron (there are many) and encourage them to CFP. That's one way to improve the numbers. If they'd done that, I'm certain it would've helped. Source: I run a number of events, we do that. It helps. 
&gt; var menuLinks = Array.from(document.querySelectorAll('.menuLinks')); &gt; for (let i = 0; i &lt; menuLinks.length; i++) { You can also just use for-of. It works with any iterable: for(let link of document.querySelectorAll('.menuLinks')) { ... } Makes the rest of the code look much nicer, too.
Interpreter emulators for chips with fixed width instructions are the easiest to tackle. NES and Gameboy emulators are fairly popular for that reason, I think. Source: I started to write an emulator for the Amiga 500 and realized my mistake too late.
Men and women are fundamentally different. To assume with absolutely no reasoning that areas of interest and career choices would be chosen equally between men and women is absurd.
not sure if you're joking or actually trying to compare working in the military to an office job.... but to answer your point, my gut feeling would be that coed groups should fare better in areas like group decision making but would likely do worse in purely physical tasks. That said, my 2 minutes of googling seems to suggest that there was a big burst of articles around September 2015 when the marines decided to release only the summary of a controversial article, and then some more analysis came in later that year when the remainder of the study was leaked. To put that into context, it looks like the federal government was making some big decisions on changing policies for the us military so there was likely bias from all parties involved. In case you feel like actually reading about it: Original NPR story:http://www.npr.org/sections/thetwo-way/2015/09/10/439190586/marine-corps-study-finds-all-male-combat-units-faster-than-mixed-units NPR story after leak was obtained: http://www.npr.org/sections/thetwo-way/2015/11/04/454672813/controversial-marine-corps-study-on-gender-integration-published-in-full 
But it's so rare in this field that there is one true answer to an issue, even relatively trivial ones (take, for example, nearly any kata on codewars). In fact, if it was so cut-and-dry and there was no creativity involved, we wouldn't care to have as many conferences and read so much about novel solutions people find at all. While, yes, of course other experiences matter a ton--and I never indicated otherwise--it is not only your programming experience that will shape the way you tackle and solve any given issue. And, as I stated further down the other thread, those experiences will factor extremely heavily in the problems you *choose* to solve, which is arguably more important.
Let companies hire in whatever way they want and let the free market decide. If companies want to hire based on gender or nepotism or even Tarot cards, then fine. Eventually they will fail against companies that hire the best performers. And if GitHub decides that they're not interested in a meritocracy and want more women/men/trans people/pot plants giving talks then let them. And if they announce one thing and then do something else, let them do that too. If it annoys you, don't go to their crappy conferences and stop giving them your money. They'll change their tune quick enough. It's always the same with these anti-meritocratic moves. All great until the money stops flowing because performances suck.
So what if the actual structure of your brain isn't as good at learning abstract concepts and solving problems as the actual structure of the brain of a different sex/race? Since we can apparently now acknowledge genetic and sexual differences can we now freely examine what those differences are and what they mean?
&gt; So why would you thank them for botching this? I said it could be executed better, not that it was the worst thing ever. I'm thanking them for their commitments to diversity. That doesn't mean I think their actions are _perfect_. --- Do I wish they had managed to take these actions in a way that were better managed? Yes. Can I still thank them for the actions, even though they didn't execute perfectly? Yes. Do I hope that they do everything they can to help mitigate inconvenience caused for speakers? Sure, of course. --- &gt; It's not something that deserves praise. Your words, not mine. I came to a different conclusion. 
I wonder if Jews and Gypsies are too white to be diverse.
This article makes my brain hurt. 
Why generate. Just have that BE the unit test
&gt; We're just getting _more_ applicants that we would have otherwise. You just figured out what a sample size is. 
It's not that there is harm, it's that it won't accomplish a goal of trying to have more diverse submissions.
That's still confusing, though. The whole time I'm asking for a false value (and false is falsy). It's essentially if false, shift. I read that it will not pass through the if statement.. Is it because you cannot run a falsy value through a while statement, and it 'skips' that segment of code? If so, why am I able to request for while the statement returns false (falsy)
A state machine that implements webassembly in the browser. You can then paste snippets and step through the code
They didn't give the women the special equal consideration they deserve. /s
This comment just links to another comment that sources nothing.
Paste what that function is supposed to do. Write what kind of input generates what kind of undesired effect.
&gt; I was the only guy when we were hanging out. I've even been the only one in a big group of girls on field trips. Do you really think a man hanging out and having a good time with a group of women emulates the exact same scenario as a woman at a tech conference in an industry where she is trying to make a career and is constantly surrounded by practically zero other women? &gt; You know what I did? I got the fuck over it. I'm glad you were able to get over the supreme difficulty of hanging out with other people. Unfortunately, the situation is not NEARLY 1:1.
Yes, but many of us have been using ES6 for a while now. We've been using Babel to transpile into ES5.
So, someone needs to explain to me this initializer: var jsSpots = {{ spots | serialize | raw }};
No surprise, their 'diversity officer' is a lunatic http://www.latimes.com/business/la-fi-himi-sanchez-20160306-story.html and their CEO looks like a cuck. https://i.forbesimg.com/media/lists/people/chris-wanstrath_416x416.jpg
&gt; I get that it might result in a "biased" conference in the sense that some speakers are elevated over others due to the desire to be more inclusive, but isn't that a price worth paying? Don't we want to actively try to make the future of our field more diverse? Why is diversity inherently a good thing? If the people doing the best work are all one demographic... Well, so be it. I didn't bitch and moan that the best sprinters are Kenyan when I did track &amp; field.
Well seeing as women are disporportionetly hired in STEM, I don't think it's a big deal. And I've never seen anyone complain about how hard it is for women to get into the sewage or lineman business. Funny how that is.
&gt; Men aren't inherently better at math. It's not that simple, and you'd hate to admit that there are differences in cognitive abilities between genders, but the fact is there are an infinitude of differences between genders. A higher level of testosterone during pregnancy has been shown to affect the child's empathy, speech, and interest in systems. Minds and hormones are extremely complex things, it's laughable to pretend men and women are exactly as good as each other at everything. 
As a dude who believes in merit... I don't see the fucking outrage over this. They want to promote diversity to get more women into tech. The female speakers they choose will still give great talks, these talks weren't ranked either. While it might feel unfair that your talk gets bumped in the name of diversity, over the long run these negligible bumps for men are going to keep giving tons more exposure to women, which will hopefully show more and more women that tech is an accepting place for them, to the point where we won't need safeguards like this because the higher participation from women will make it a non-issue (or at least, that's the dream). I know I know, a bunch of nerds can't accept the idea that being the best nerd isn't the only thing that matters in the world. The majority of talks, I'm sure, will still be given by men. Don't panic. You're safe. This isn't to slight male engineers or researchers, either (of which I am one). The point is that, it's not going to do harm to bump a few dudes to promote a better gender ratio in tech. Keep your eye on the greater good.
Oh, please. Get over yourself.
It's not *me* that has to get over myself mate ;)
Yes it is. If you're going to buy a shittier product (Bitbucket or Gitlab) because you can't handle that Github wants to promote gender diversity.
Let's not.
They wont because they have no clue what they are talking about and are just parroting dogma crafted especially for useful idiots on the left.
/r/thathappened
As I see it, diversity isn't so much the goal as a way of measuring equal opportunity. So if you see a diverse community, that is a sign that the community is giving people of diverse backgrounds opportunities to get in. On the flip side, if the community is very uniform, it _may_ be a symptom of the opposite. Or it may just mean something else is at play. Women in tech is complicated, because there is so much cultural and sociatal pressure keeping women out of engineering in general. I'd say we hire proportionally just as many of the female candidates as male, there just aren't many of them.
and a dingy basement is ok. replace men with blacks and this person would be chased with pitchforks "blacks are free to talk in that dingy basement over there all they want, just not up here with the mixed crowd"
It's our fault their parents bought them makeup and dolls instead of computers :( We should have been doing something back then.....
What is with all this representation thing anyway? Why does a gender need to be represented? Why? It's a profession and not a Star Wars parliament. The whole thing is stupid beyond comprehension and does quite a bit of harm and is super divisive. It's toxic. No one cares about representation in oil drilling. I wonder why.
DIVERSITY GOOD! MERITOCRACY BAD! /s
Something you might be able to do is return the object with a current font styling state; c.bold() &lt;-- returns 'c' with a bold state c.bold().font('serif') &lt;-- returns 'c' that is bold and serif This would allow for something interesting like: c.bold('This is bold\n').font('serif', 'Bold and serif\n').clear('No font!') 
Or a basketball game because of lack of white representation. Sorry guys, Final 4 is cancelled this year, not enough white guys on the teams. 
Exactly! Thanks. I found myself writing more tests and having more coverage because this makes it be less grunt work. And the test spec is co-located.
The people who scream the loudest about racism and sexism are often the racists and sexists themselves.
&gt; Clearly, good programmers, engineers, and scientists can come from ALL walks of life. What a bunch of baloney. Someone born to low IQ parents who do not value education is almost certainly not going to be any of those things, and trying to force them to be something they are not is a horrible form of cruelty both to the person being unjustly promoted and society as a whole.
No, it's more like if GitHub chose to specifically hire a few women when choosing resumes. You really think it's sexism to not have a 100% male workforce or speaker list? You have very typical bias here. When there's a cultural issue like there is in tech, where women feel like it's not the place for them because no women do it, companies like GitHub make the sensible choice of promoting those disadvantaged groups to improve the industry as a whole. Pretending this is sexism against men is delusional. Men have a million places to succeed in this industry. If GitHub giving a few chances to women really provokes a fucking boycott, yes, you need to get over yourself.
&gt; ou really think it's sexism to not have a 100% male workforce or speaker list? It's sexism when you pass up a qualified candidate / speaker based on their gender alone, which is what GitHub has done. Why is that too complex for you to understand? &gt; You have very typical bias here. No mate, YOU do. Stop projecting.
This seems to be a material library for Vue.js. Looks really good. Docs are in English too which I couldn't find at first but it is throwing a https cert error for me when I visit this link: https://www.muse-ui.org/?lang=en#/install
Indeed, it's a cool but little-known feature!
&gt; It was a nervous chuckle because I have no idea what I’m doing, but as Marcel Marceau once said... http://i.imgur.com/himZD0M.gif
&gt; First, hacker culture rewards "programming for the sake of programming". That culture is the norm here and is at odds with the reason some women gave for going into CS: &gt;These women emphasize the importance of having computing and their programs "do something." So, men just want to program to no end, while women want to program to accomplish something. But "hacker culture" discourages the latter, so women don't want to program. That's quite an insulting and farfetched claim, that will need actual evidence for all its propositions - not "some women said so". &gt;They have no intrinsic motivation for CS, they see CS as an economic opportunity to provide for their family. Exactly. They are less likely to want to get into programming. Which is exactly why they don't do it in egalitarian countries. &gt;Finally, regarding women in veterinary fields the article you cited does not portrary this as women perserevering in the face of male opposition. I didn't say it was. I said the field went from male dominated to female dominated. Women didn't care that there weren't female vets. They just became vets. But they aren't becoming programmers. Why? Because they don't want to. &gt;Income of veterinarians declined. Male veterinarians cited salary as a primary motivator so naturally they looked for greener fields. Problem solved. Let's just cut the salaries of STEM, that will reduce the relative percentage of men in i. Great argument (/s)
&gt; It's sexism when you pass up a qualified candidate / speaker based on their gender alone, which is what GitHub has done. Keyword here is *a*. It's not sexism when you pass up on one of ten qualified candidates or speakers based on their gender alone, when there's another sufficiently qualified candidate or speaker of a different gender, because otherwise you would have picked 10 of 10 speakers or candidates of the same gender, when the entire industry has an overwhelming issue of being comprised of only that one gender. &gt; Why is that too complex for you to understand? You are the one who doesn't seem to be able to think beyond the most basic, obvious, trivial example. You need to grow up and try and take the bigger picture into account. To promote more participation of women, necessarily, some small number of men will have to be moved off to give the women a shot. To think about this in the lazy self-centered fashion and whine about sexism (as this entire sub seems to want to do right now) is immature and vapid. Use that big nerd brain to think about something other than computers for a second.
X-ism requires prejudice and power, you fucking white male. And no, not the kind of power that allows to you to kick people from arbitrary jobs and cancel events like this on a whim. /s
It's actually undefined &gt; 0, but that doesn't make a difference: &gt; null &gt; 5 false &gt; undefined &gt; 5 false &gt; How is it not an infinite loop[?] It is. A better condition would be: while(!func(arr[0]) &amp;&amp; arr.length)
&gt; It's not sexism when you pass up on one of ten qualified candidates or speakers based on their gender alone, when there's another sufficiently qualified candidate or speaker of a different gender, because otherwise you would have picked 10 of 10 speakers or candidates of the same gender, when the entire industry has an overwhelming issue of being comprised of only that one gender. If you're using gender as a tiebreaker, that's sexism. There is literally no other way to cut it. You can attempt all the mental gymnastics you want, but using gender as a tiebreaker is sexism. 
There's no mental gymnastics. You keep throwing context in the garbage and pretending this decision is in a vacuum in an otherwise ideal world. That's not reality, but I'm getting tired of pointing out the same concept to you over and over. Clearly you have no interest in learning anything which challenges your misinformed view of what's being done. Enjoy your ignorance, I guess
You can use es6 getters and setters if you dont want the brackets. Won't be as cross browser if you do tho. If you do use getters and setters it wont work as a function as well though. You could do something crazy like define bold as a function and then constantly Object.assign `this` to the bold function so the function itself can standalone as its own instance of classy. I wouldn't recommend it though. 
It think autogenerated unit-tests just point out that you didn't really understand which tests you should write. If you just want to have a high "test-coverage" which is just a measurement, spilled out by some tool. Then yes, autogenerate useless tests. I would recommend to more focus on finding out which tests are worth writing and which are not. 
Performance boost comes from the migration from Crankshaft to TurboFan javascript engine, I suppose.
I have to say that after all of those affirmative action measures, I always have this thought in the back of my head. I can't trust achievements anymore, because I never know who was artificially propped up. It sucks to see your girl friends get amazing internships and scholarships just for showing up. They deserve it, but so do many others. I am starting to see a growing resentment in the field because of this, and it's making me sad.
No quotas.
You shhouldn't do anything. People are all presented a field of work. Some like it, some don't, you don't have to ram it through the throats of people so that you have a fictional, artificial politically correct number. Stop creating this sob story where people are magically prevented from sending submissions. The process is already blind, this is what has happened here. There is nothing preventing people from sending a submission. This is how these things work: you give the topics of the conference and some dates. People send their work. They are reviewed and selected. There is no bigger pool. The pool is anyone who wants to send a submission. Please, shut your mouth if everything that is going to come form it is nonsense that shows you don't know what you are talking about. There is nothing intelligent about selecting terrible works from a random black or woman because they are "da diversity". The current selection process is purely based on merit, unlike your absurd, ignorant, proposal. So WHAT THE HELL ARE YOU TALKING ABOUT WITH THIS RETARDATION ABOUT FEELING WELCOME??? There is no feeling welcome, there is just a set of conference tracks and a submission deadline. But it looks like white men have what it takes to work on somethign deserving being published while other groups rely on guilting others into gifting acceptance. THERE IS NO REACHING, there are just the people who are willing to work, and those who come up with petty excuses.
Just wanting something specific for everything isn't a smart choice aswell.
Gypsies are certainly not white. They look more Indian than white.
It might be fair locally, but it's not fair over the larger picture. That is to say, github might be "fair" by selecting from the input they were given without regard to race, gender, etc. But what if that input is biased? And there are a great many bad reasons the input might be biased, and that github can do something about. The best conferences actively look for speakers from communities that are underrepresented and encourage them to submit. So they'd be doing quite a bit more work to fix a problem they didn't create. It's not fair locally, but it is fair over the larger picture -- it can be clearly demonstrated that women and minorities face biases that harm them over their careers -- lower pay, fewer promotions. This has been studied at smaller levels like comparing the language used in performance reviews and how that affects the outcome (hint: it's not good for women). This is one way Github can actively push back against the inequity these groups regularly face and try to rebalance the scales a little.
How do you know they're going to degrade the conference as a whole? There could be plenty of issues that were not just "white men are the only ones with good CFPs." That's an ugly assumption.
It doesn't have to take this much time. You can also hire juniors from disadvantaged groups, who haven't been able to have the same opportunities, and train them to be as good as you want to hire. People sometimes think this is anti-meritocracy, but expecting people to come with exactly the credentials you want encourages bias -- if most CS graduates are men, you're going to hire more men. But I'm a woman, and I can program, and I didn't get a degree in CS -- specifically because many adults encouraged me not to. And many of the best engineers I know were people who came from these unconventional paths.
But the problem is there's already an existing bias! We're not just arbitrarily picking race and gender. We talk about those because the industry is already heavily biased towards selecting, promoting, and praising white men.
&gt; Considering the enormous amounts of aid and encouragement for women and minorities to go into STEM, especially programming and technical positions, that's a result of people choosing not to pursue these fields, not any bias. Huh? I'm a woman in STEM who didn't get to pursue a CS degree, where's my money? :P
It saddens me more to think about women and/or people of color getting rejected because a conference selection committee thought less of them because they were a woman and/or a person of color.
Because meritocracy is a myth. The best people and ideas aren't rising to the top, because people actively hold non-white-men down. This is well-documented. Sexism and racism are still real. We don't want to not have the best things. We do believe that people from all groups are capable of contributing equally to the industry though; so then there's got to be something wrong if white men are so vastly over-represented.
Meritocracy is a myth, bias towards white men in disguise, and people make themselves feel better about it by pretending it's merit. Hard to see when you're the beneficiary of it, easy to see when you're hurt by it.
WebTorrent doesn't support DHT unfortunately.
It's the Twig syntax. I'm using JS inside Twig template files.
deleted ^^^^^^^^^^^^^^^^0.7832 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/56723)
Time is not infinite. They selected a panel of speakers to speak at assigned times during the conference. There is a limit to the number of slots. In order to make the set of speakers more diverse, they will have to remove some of the men who were originally selected to make room.
They have the same problem in their industry. Male RN make $5000 more than female on average, and there is the same kurfuffle about pay. The hiring trend is reverse, male nurse would get hired almost immediately because they are in short supply, while female nurses would need to do a little work. Source: have friend who is a male nurse
your neckbeard is showing
Agreed. Thanks. Will do. 
They reached out to the entire github community. 
&gt; because people actively hold non-white-men down. Prove it. There's literally no barrier to entry in programming. Other than just owning a computer. That's why people from all classes of society can so easily get into it.
Not enough midgets on the basketball team. 
IT WAS A BLIND PROCESS. They didn't know anything about the people submitting talks. What the fuck dude.
While the gender discrepancy is something of an issue for the industry, I don't think it should be an issue in her upbringing. Just because no one else has done it (gender, race, etc), doesn't mean she can't be the first!!! While having an industry role model would allow her to have someone to follow (and potentially a female mentor), but to make it on her own would be an even greater achievement. Think of it another way, let's say 20 years from now, she were to submit her proposal for an RFP, what would you rather happen? Regardless of which way the industry goes, we would all want her to be accepted on the merits​ of her proposal. AND that should be the goal. There are a lot of women role models who were their first class without needing "selection" help -- Marie Curie, Amelia Earhart to name two. You can inspire her with them instead of someone from the industry.
It's not about the left, it's just authoritarianism in different shades. We have it here to a previously unseen extent under Theresa May. You can see it in the "alt-right" in the U.S. as well. Liberal values are taking a beating on each end of the political spectrum. It will not end well.
Couldn't either of the earlier accepted attendees sue GitHub for sexism? I mean, their talks were literally cancelled because of their sex.
Not sure why you've chucked those two in the same group. There's a lot of Harris love from those who particularly dislike Islam however Dawkins is just popular in an "I've just discovered atheism and he makes sound, unapologetic arguments" kind of a way. He's equally as brazen and sound talking politics as well which is nice.
what a fantastic argument, you win.
**How?** I'm part of the 'github community', I'm personal friends with a few githubers, some of our members got free tickets to github universe last year, we sent attendees to their first pilot electron workshop, one of our members is an electron contributor, they hosted one our meetups in January, and they have gotten great candidates from our member base; I found out about this conference by this post. Edit, disclaimer: I even once contracted for them in the past, the 'survey for open source contributors' was translated in a few different languages, and I sent a PR to their spanish version.
&gt; Meritocracy is a myth, bias towards white men in disguise It's certainly possible for that to happen in specific instances, but it's nonsense as a general statement about the universe. For example, how could you claim an open call for submissions and a blind submission process (where the selectors don't know the gender/race/etc of the submitters) is automatically biased against women or minorities?
null
&gt;This is a weird hill to die on. So you are under the impression that posting it there somehow disadvantages your chosen groups? Any hypothesis why? Also noones even getting harmed outside of your chosen subgroups that are according to you incapable of participating in events unless they're pandered to, so I don't have any skin in this game.
It is a 100% a Estadounidense thing (if someone knows a better word to refer to gringos lmk), when I grew up in south america I was just a random nerd, but once I moved to the bay area everyone started treating me as a person of color and up to this day I don't know what I'm supposed to do with that.
It was not ever *exclusively* women dominated. Up until the 80s, programming required basic admins to transfer the punch cards. These unskilled employees were **not** engineers nor scientists, but were instead menial positions almost always staffed by women But the BS statistic is still used by many people these days to ascribe false blame on the modern *brogrammers* who are so mean to the poor little ladies trying to work in the industry. 
Actually it's easier to get an interview as a woman so, no.
I couldn't find that stat. I must be completely missing it. All I can see is the dev mode React numbers? That said, you need to cache if you're going to do server side rendering in React. Cache both in the application and in the backend architecture. Edit: I've just seen where it references ~100ms. Hur dur, don't know how I missed that. But yes, I found that this was the case in production but using something like https://github.com/walmartlabs/react-ssr-optimization drastically increases performance. 
If your unit tests feel mindless than maybe they provide no value ;).
Dude, cut the programming crap off and ask us how to sell drugs already
Quite the contrary. They feel mindless because there's a lot of things that could be abstracted away that don't get abstracted between projects, yet are essential, so you kind of have to write them. Examples would be virtual dom testing using enzyme, or using spies. There's a lot of boilerplate code getting written, but no way to abstract it away.
Generate to memory! :)
Yeah, that's what it does. It generates to memory. Generated files are never written to the fs.
They literally postponed their conference because there were too many men.
I want everyone to think that this industry is for them, it's the only way we'll end up with the best people. I understand that people don't like the idea of "tokenism", but in practice, stuff like talking at a conference isn't actually some elite-level stuff, and you just need somebody competent, and anyone who's at this a while and up for talking at a conference is as likely to be competent regardless of whatever they've got in their pants, or what colour it is. It's not like they're limiting pull requests to the main project based on gender, I don't think there's anything to panic over. And ultimately, their gaff, their rules; people who have a problem with their diversity efforts can get over it.
&gt; because people actively hold non-white-men down. Oh yeah, all those free scholarships totally keep PoC out of STEM. /s
Damned *quotation marks*. I was doing this: &amp;nbsp; var element = "{ sources: [{ type: 'video/mp4', src: 'video/intro4.mp4' }] }"; &amp;nbsp; instead of this: &amp;nbsp; var element = { sources: [{ type: 'video/mp4', src: 'video/intro4.mp4' }] } &amp;nbsp; Thanks a lot... I feel stupid as crap :-(
&gt; How is this not textbook fascism? It is not textbook fascism. It is ideology, and a pretty dumb one, but not fascism. Word fascism is overused to the point of meaninglessness. I agree that it is a bad decision, but don't abuse the dictionary.
Don't most people using Babel *not* use native ES6 modules? Isn't everyone using Webpack right now?
If you are completely new you could try a chip 8 interpreter and/or a well documented system like the gameboy.
https://en.wikipedia.org/wiki/Impostor_syndrome is real. Incidents like this can really undermine ones confidence in their abilities.
[removed]
&gt; This sort of thing is just an unfair shortcut that hurts more people than it helps. Does it though? What makes you think this?
Oh thanks! I will take a look!
Can't you simply do something like altText ? &lt;there goes the caption&gt; : {do nothing }
You know, those "risky" jobs like senior software engineer or financial executive.
&gt; Unless "widely accepted" means "common among people with next to no political education" then, sure. /r/iamverysmart
Random, blind selection - i guess the dice were cheating.
No, make the display of your black bar conditionnal Display it only if you have text to display in it Edit : some more informations My first comment was an example using a tertiary condition, you can do something like If (alt ) { Display the black bar }
Thanks for the feedback, I would be glad to let him know! :) 
I am a brown developer from Pakistan and English isn't by first language, all conferences are by mostly white people who speak perfect English, same with the books, this doesn't demotivate me. It shouldn't demotivate your daughter.
We have women's basketball because nobody disagrees that the very tallest, most athletic women in the world are no physical match for the tallest, most athletic men in the world. The are two problems with your analogy, though: 1. The thousands of people who speak at conferences every week are not remotely as elite and selective as the few tens who play for professional basketball teams. 2. While women are on average less physically capable (strong/fast) than men, nobody in their right mind thinks they're less mentally capable. Also, comparing "women speaking at tech conferences" to "special Olympics" is so ridiculous it barely even merits a response.
You definitely share his passion! :D
&gt; I said they had an equal hand in creating it. Absolutely -- every single great computer scientist was born after his mother and father had sex and his mother gave birth. Equal participation -- one gamete from each sex. But the great computer scientists are still 95% male
&gt; I used to feel this way, but I'm a white male ... I think you need to whip your self a bit harder for committing such a horrific crime
&gt;When a qualified person gets rejected from a job based on his race or gender, that hurts. Agreed. &gt;When an entire industry is stumbling over itself trying to hire the same 25% of the available candidates, the job hunt is harder for the remaining 75%. Also agreed. But that's assuming that the entire industry is trying to do the same thing, which it isn't. Some companies do, some don't. For the remaining 75%, they'll have no shortage of opportunities elsewhere. For those that suffer from discrimination, without these process that select for them, they'd find it much harder to get a job. Yes, in a perfect world we wouldn't need this and behaviour like this would be stupid and discriminatory. But [we don't live in a perfect world](https://www2.deloitte.com/global/en/pages/technology-media-and-telecommunications/articles/tmt-pred16-tech-women-in-it-jobs.html). Positive discrimination has a place to try and close the gap and balance things. Yes, it can be done poorly. But it's important to remember why we should be striving for these things. Because there is an unfair imbalance somewhere along the line and steps should be taken to correct for that.
Fascism uses violence, they do not. Let's not exxagerate their poor behaviour
Stop parroting this smae shit thinking its somekind of ultimate answer to everything. "SYSTEMIC RACISM! SYSTEMIC SEXISM!" "Where is it?" "YOU ARE PART OF THE PROBLEM! SYSTEMIC RACISM! SYSTEMIC SEXISM!" This is literally how every thread about this topic has gone so far.
&gt; To others viewing this comment chain, **I already understand that stubborn individuals defending a lost argument generally have no interest in helping themselves become exposed to the reality** that is segregation in something as modern, as software engineering. Said the idiot without a hint of self reflection.
&gt;They chose the best from a smaller pool The white man only pool? What am I missing...? 
Also, race is a thing when you walk into a doctor's room, but NOWHERE ELSE!!!! Any possible genetic difference automatically disappears as soon as you walk out of the doctor's office apparently, and it's utterly impossible that there could be genotypical differences as well as the obvious phenotypical differences. It's insane. It's like thinking you can make a problem go away by holding your breath. No. You have find out exactly what the issue is before you can effectively form a plan to resolve that issue and in this case, we're not even allowed to acknowledge that there is an issue to be resolved, even though we ALL know there is.
You can solve it by reaching out to underrepresented groups and encouraging them to submit submissions. They already had to reach out to speakers and encourage them to submit talks (or else they wouldn't have received any submissions). It appears that they believe the methodology they used to do this under-represented some groups. It's questionable about how Github decided to handle the situation, by delaying the conference and picking new speakers. I think it would have been better if they just learned from this experienced and corrected it next time.
xD, no problem my friend =) On stackOverflow you would have get downvoted to hell haha
 &gt;Real talk, in 2017, if this is happening to you, you just suck. You are referring to any woman speakers who didn't make the cut for the conference, right? 
&gt;How is this not textbook fascism? Probably it not being a government, for starts.
You can either do it line 11, before adding it, or line 23, before displaying it. Test and see which one work the best for you
Error 0x2 ... It means you're using Microsoft Edge, and you're doing cross-domain requests, or requests to localhost. Just use another browser to get the real error (i.e. 120.0.01 is not bound to localhost, or a certificate is invalide).
Replace myExpression... by the expression needed to get the value of alt
&gt; Don't we want to actively try to make the future of our field more diverse? Why? Honestly, why is that something we should want? I want people hired to work with me who are good at what they do, who have been hired not due to the color of their skin or whats between their legs, but hired because they're good at what they do. In a world where we're meant to be not caring and focusing on race/gender, the whole notion of "diversity" playing a part in anything to do with an individuals skills is insulting. You honestly don't think its batshit insane racist/misogynistic to hire someone or let someone speak simply due to their skin colour or genitals? 
Heh, just like the most homophobic! 
This SJW shit belongs in two x chromosomes, not here. 
I personally know people who have left the industry specifically because of sexism. Having heard their experiences I'm not surprised they left.
in some cases like not using DOM, it's helpful 
This is kind of the point of this plugin, if two website using it have the same version of the same dependency, this dependency will only get downloaded once :)
It's possible to use a different cdn, but it's not that straight away (for the reason you raised!) It's using https://unpkg.com for most of the dependencies You can see the mapping here: https://github.com/mastilver/module-to-cdn/blob/master/modules.json
We value, that is to say pay, certain jobs more because they require rarer skills or produce more value. Teachers is a weird case because it's not really subject to the same market forces as engineers. But take daycare workers vs engineers, we pay the engineers more because it takes a much more specialized skill set to be an engineer and an engineer produces much more value for a company than a daycare worker, we do not pay the engineers more because they are more likely to be male.
Standards are sexist?
My mother was an engineer and one of my biggest role models in life. Women are absolutely suited to be engineers, the question is whether as many want to be as men, it seems pretty clear that they in fact don't want to be at the same rate. The more egalitarian the society the more stark the job sex preference is displayed. Encourage more women to become engineers, absolutely, but lets not throw a fit when they decide they'd rather not. Celebrate the men who become teachers, but lets not lose our minds when most teachers are women.
I 100% agree. I've been working on a hobby project that I built from scratch with vanilla JS. I wrote my own templating engine and router which suit my needs perfectly. My entire site payload (which is cacheable) is 40kb. Had I included jQuery, or the React runtime, or the Handlebars runtime, those *alone* would have put me way over that size. Unless your site is doing crazy complex data interactions, there's really no need for two-way data binding, DOM-diffing, and the like.
It sounds like that's hardly his team's fault, the agency sending out the resumes is to blame. I guess there is some merit to protesting him to put pressure on the agencies but as a society shouldn't we be more concerned about the root of the problem?
Fossil fuels still have a lot of merits as a fuel source and plenty of applications beyond fuel. 
What if you had a son? Would you care that he's more likely to be depressed and suicidal, less likely to end up in college, and even if he does, one false accusation away from being branded a social outcast and expelled? Feminism is myopia. It's putting ever more bubble wrap around women and then getting upset when they complain more about increasingly trivial things. Life is hard. Being good at a job is hard. Getting along well with people who think differently is hard. Being a good parent is hard. If you are worried about media messaging, you should worry far more about those who want to tell you and your daughter she can't accomplish great things because the omnipresent and invisible patriarchy is holding her down, and the only solution is more of the poison convincing her of it.
"Fossil fuels" is a very broad category. There is no reason that anybody should risk their life for the dirtiest, most poisonous type of fossil fuel. 
Why do you phrase it as "funnelled into"? That gives it an ominous tone of active oppression.
:-P pronounceable is debatable. Sounded a bit Irish when I gave it a go. So a shredded dictionary / books and some stats based building? Or something cooler? :-) 
Do you think that white males are more likely to use the front page of github than no white, nonmales?
The only study I've ever seen where women were adequately represented in actual computer science is from cold war days in the Soviet Union. Women have never beem keen to develop software in the West. 
Hmm, I don't think this is a React Issue. [CORS](https://developer.mozilla.org/en/docs/Web/HTTP/Access_control_CORS) is generally a server side issue. Can you post the stacktrace of the error you are getting?
Before I read this in its entirety, can someone please explain why we need WebAssembly? Like, this is the language assembly but in a web format right? All I've heard about assembly as a language is that it's unwieldy but i might be misinformed
Why does it seem like 'use vanilla JS' always synonymous with not using build tools and writing es3? I'm all for not using frameworks when they don't make sense, but when we're writing IIFEs instead of just using modules, and writing out a for loop instead of .forEach when you don't truly care about the index, it makes me question the intentions of the developers.
liar
Vue is only popular among php'ers and laravellers who shoudln't concern themselves with the front end in the first place. One might stick with jquery!!
It allows you to run C/C++/Rust programs in the browser. Say you have some type of video processing library written in C and you want to use it to make silly filters to amuse the child-like minds of your users. Wasm allows you to compile your C library and interface it with your webapp -- minus the bumps in the road. Also, because wasm is a virtual instruction set, or byte code, it takes the browser far less time to parse and does not need optimisations. This allows for the capability to load large web applications quickly (run a AAA game in browser). Alon Zakai once spoke on that saying the purpose of wasm was to run large application efficiently in the browser (paraphrasing). 
They don't. All you have to do is listen to them when they talk about the treatment they get in STEM fields. It's shit that white men like myself have historically been completley oblivious to/dismissive of.
&gt; I'd say it's usually morally right to stand up for yourself. In general, sure. But a white person can't pretend like he's doing black people any favors by arguing we're in a "post-race" society or something. He's just doing so because talking about it is uncomfortable. &gt; But if people would stop acting like race is a thing that we need to acknowledge it That right there is the problem. In your personal life, nothing wrong to ignore race and treat everyone the same. It's what you should do most likely. But as a society saying that the way forward is to ignore things like race when we still have some groups that are systematically discriminated against and treated differently. &gt; Feelings are irrelevant here Feelings was the wrong word. What I mean is there is that there is a lack of perspective that necessarily comes from a lack of experience and that when one party has nothing to lose by keeping things relatively the way they are, their arguments for not changing anything are easier to make. &gt; just because I ain't white .. You're one person, something as complicated as race issues can't be argued in terms of individuals. Otherwise it would just be an endless back and forth of examples and counter-examples. All I'm saying is that people don't get a pat on the back for using their personal egalitarian views to dismiss efforts to equalize imbalances that come from society. If one wants to argue a specific idea or policy is not a good idea, is wrong, or that an imbalance somewhere is not something that needs addressing, then that's totally fine but must be explained more. 
&gt; If it's an infinite loop how is it returning anything at all? It doesn't. It loops forever. &gt; Why does it not error and state that the loop is infinite? Infinite loops aren't necessarily an error. E.g. games are like that. See also: https://en.wikipedia.org/wiki/Halting_problem What environments can do is killing programs which take too long: https://en.wikipedia.org/wiki/Watchdog_timer
I'd say that child- and teen-targeted media, entertainment, and marketing is packed with subtly sexist biases, thus ensuring that the talent pool entering higher education is already way off-center. Fix that, and in two decades things will finally start to improve. In fact, it could have already been improving 15 years ago and we wouldn't have clear evidence. Worse, it would coincide with recent forced-equality fads, so the cause of improvements itself might be misattributed! Don't forget that parents and communities also help pass biases on, so it could take upwards of 50 years to fully reach inherent equality.
I see a clear displacement of coal in Germany's energy mix: https://www.cleanenergywire.org/factsheets/germanys-energy-consumption-and-power-mix-charts You can see that coal is stalled as far as gross production, and is diminishing in proportion to other sources, notably wind and solar.
&gt; Does Javascript have a watchdog timer? No, but the site you're running it on might have something like that. &gt; When I say how is my infinite loop returning anything I mean how is the code getting through line 2 to get to line 5 and return []. It doesn't. If you execute this in the console it will simply hang forever.
It's not my "insulting and farfetched claim" it's what was self reported in interviews with CMU CS students. It's not insulting either. It's just a different point of view on what gets you excited about programming. The broader point about women from India who graduate with CS degrees is they don't have the same opportunities. American women can choose to do something else when faced with a sexist CS culture. Regarding vets, you're ignoring the article's point that the industry changed to make it more appealing to women. 
Why?
Interesting. So raw code would make this a truly infinite loop and it would never resolve. It must be something on the back end. Thanks for your time!
The issue seems to be basically the library is not designed to be used in the browser and has its headers of the request set up reflecting this. This is beacuase in a client side application your "secret keys" would be accessable to the end user. Getting to grips with nodeJS if you have a javascript background is not tremendously dificult. For your application the server code will look like this hello world example. [Express Hello World](https://expressjs.com/en/starter/hello-world.html) But the code would look like const express = require('express') const twitter = require('twitter') const app = express() var client = new Twitter({ consumer_key: '', consumer_secret: '', access_token_key: '', access_token_secret: '' }); app.get('/tweets', function (req, res) { var params = {screen_name: 'nodejs'}; client.get('statuses/user_timeline', params, function(error,tweets, response) { if (!error) { console.log(tweets); } res.send(tweets) }); }) app.listen(4000, function () { console.log('Example app listening on port 4000!') }) Then when you make a request in react to localhost:4000/tweets you will get the tweets for said user. If need help with the making a request consult https://daveceddia.com/ajax-requests-in-react/ 
They've become a household name in their field. I feel like they've passed the critical mass where people will still complain about them but continue using their services. If anything, their antics will prove how much people are willing to take from them. I'd hope they'd reach a point where they'd lose a significant market share but sadly it seems they can still pull off worse and get away with it. I trust them to do and worse and show us the limits of what their users will be willing to bear.
People keep saying this but I think at the end of the day some people just find it "easier" to wrap their head around mustache templating vs JSX. Though I think you're being slightly hyperbolic. This is the first thing you see when you open up the vue docs and it's a very simple concept to grasp that pretty much speaks for itself. &lt;div id="app"&gt; {{ message }} &lt;/div&gt; var app = new Vue({ el: '#app', data: { message: 'Hello Vue!' } }) 
Exactly everyone has different strengths and abilities. There is probably a reason besides cultural that blacks are overrepresented on NFL teams and the idea of diversity quotas for NFL is ridiculous. As you said not talking about a problem does not make it go away, everyone is scared that if you acknoledge that nature plays a role and nurture cant solve everything that the KKK will be empowered and racists will eise out of nowhere and yada yada yada. But in reality not discussing it only makes it worse, and again as you said prevents it from being resolved Edit: deleted the accidental comment spam
Time doesn't have to be infinite, they could extend the conference. Unless you want to cite some speakers being removed? I'm aware of none.
Many companies are all but forgotten now after being the biggest in their sector once. I'm thinking of AOL, Yahoo and the like. Github has several serious competitor already, and it would be a mistake for github to rest on its laurels.
[My attempt](/s "Array(90).fill(3)") Apparently this is how a spoiler works? 
This is 17 characters, for the record
tried to, let me know and I will. 
Exactly, API surface area doesn't always trump familiarity imo. React's complexity and surface area also grows the more you need to add additional functionality. Take Vue's computed properties for example, if you want the same thing in React (performance-wise) you need to pull in and grok Recompose or something similar. Redux? An additional layer of complexity that (imo) is harder to learn than Vuex.
Then men = things and women = people study is this one https://www.ncbi.nlm.nih.gov/pubmed/19883140. And as for the Scandinavian countries thing I've never looked into it myself, but since I've seen multiple professors in psychology and social sciences mention the same results of those studies when talking about the issue I have no reason to believe they're false.
Of course they're triggered, you made an incredibly stupid and incorrect statement.
&gt; Apparently this is how a spoiler works? No, you need to put a space after the `/s`, like this: [Spoiler](/s "write spoiler-text inside quotes") Which gives: [Spoiler](/s "write spoiler-text inside quotes") If you notice, when you hover "Spoiler", it gives the spoiler text. 
Have you even read any of the actual studies that support those arguments? 
I provided studies that backed up my claims. How is that stubbornness? 
&gt;...seems to be pissing off the right people, they must be doing something right. That's circular stupidity, for lack of a better term.
It's only faster if you're doing some heavy number-crunching. E.g. if you write a game, you could do things like pathfinding or physics in a Wasm module to improve the performance.
Let's deconstruct this, your example in React would be a plain javascript function: const Message = () =&gt; { let message = 'Hello Vue!' return &lt;div&gt;{message}&lt;/div&gt; } render(&lt;Message&gt;, document.querySelector('#app')) or as a stateful class, if message is supposed to be reactive class Message extends Component { state = { message: 'Hello world' } render = () =&gt; &lt;div&gt;{this.state.message}&lt;/div&gt; } Get a beginner, switch off the internet connection and tell him/her to *re-use* that component in another component, say `container`. In React this is straight forward, because it actually has *scope* and therefore real, declarative components: const Container = () =&gt; ( &lt;div&gt; re-using is simple: &lt;Message /&gt; &lt;/div&gt; ) In Vue it would be impossible to figure out without scrambling through the documentation again, and what you then do is a hack, you "register" the component. It forces you to to jump through such hoops because it rests on old, imperative mvc ideals. And this goes for literally everything: looping? documentation. conditionals? documentation. local data? documentation. Everything you do there goes against your natural instincts and hence has you learning arbitrary stuff, if you understand this, you can write React. React isn't like this at all. You learn it once, which takes minutes, and mostly ignore documentation, because most of it you already know. It revolves around the simple idea that layout can be expressed functionally, if you understand this you can write React.
I'm still amazed at how this is legal to ask for businesses in the anglo-saxon world. Here in France that'd be begging for a lawsuit. But then again, we have (almost) no quotas so no need to enforce them I guess.
https://pastebin.com/yPsKcj8E I hope this work :)
I'm sorry, what echo chamber?
Dude brought up racism and argued against that, when it isn't even at play here. Is pointing that out attacking a strawman? I'll admit to naming fallacies for fallacies sake, but you should have told me you were an idiot before we started chatting, man. This way I have a reference level.
I mean you usually end up meeting your employer face to face so it's a moot point if he really want to discriminate and is willing to be subtle about it. Not that you'd want to work for such a crafty bastard anyways. I'm just perpetually shocked at how it's legal in, say, the UK, to reserve employment to a certain group of people. My gut just yells at me that it's grossly racist. But hey, if people want to be multicultural and all, it's their choice I guess. I prefer my one and indivisible republic myself.
Except in the article they specifically state they wanted to use latest cutting edge tech only available in Chrome and Firefox (WebRTC)
Pointing out that anecdotal evidence is not valid evidence of a widespread trend is not a shitty argument. It's a totally valid argument and point. Your response is not a valid argument. Calling their argument "shitty" doesn't do anything to advance the discourse. It's an ad hominem that doesn't strengthen your other arguments in any way. Instead, a better response would have been to go get _real data_. Use actual data instead of an anecdote to make your point.
To be clear, I'm not arguing the merits of React. I'm just pointing out that Vue isn't difficult to grasp either. Everything you're saying still applies to Vue. You learn things once and you don't have to look at documentation all the same. I can't remember the last time I looked at the Vue docs outside of copy/pasting that example from above. Even though I fully understand it, while looking at your example right here the Vue one still "looks simpler" in my eyes because it fits my mental model better. Perhaps that's because I have a lot of experience with mustache templates and the like. To that end, which is easier is entirely subjective. There are also other benefits to Vue that are advantageous to beginners such as dropping it into an html file and immediately being able to mess around. There are other merits that have been argued in circles every time someone mentions Vue vs React but you get the idea. In the real world a beginner isn't going to switch off the internet and try to figure out how to develop front end applications. Also come on, you're still going to be looking at plenty of docs to do things in the React ecosystem even if React itself can be "learned in a couple of functions". That seems somewhat disingenuous to me.
No, at least not in the United States because React is backed by Facebook. I hear the Chinese and Taiwanese communities love Vue though because the author and the community does a really good job at writing docs for it in Mandarin. I hope both can grow and challenge each other and learn from each other.
&gt; I'm arguing that all men being chosen for "merit" is not actually better than having a diverse panel that represents everyone. And why is that?
Why do (function(){ var x = 2; console.log(x) //2 })() console.log(x) //error when you could just do { let x = 2; console.log(x); //2 } console.log(x) //error
I've been playing with Vue 2 over the last week or two. So far, there hasn't been anything that has made me want to switch from React. It's just meh (not Vue itself, the difference between the two). The reactive based programming is nice, but we can get that in React with Mobx, too. So I think it boils down to first mover advantage at this point. If React didn't exist, I'd definitely use it.
The code you posted isn't really relevant. It is making a link to whatever the image alt attribute is. Change the image alt attribute from "Excel Workbook" to whatever you want instead.
It acts mostly like babel and does not try to be fully spec compliant, not really an option for Node.
r/iamveryignorantsobasicstuffseemsliketryingtobesmart
Just for fun and to check out the [Spoiler](/s "[...'3'.repeat(90)].map(Number)")
I don't understand the problem. Your argument seems to be that older syntax shouldn't be used because newer syntax exists. What problem is solved by turning the ElementList into an Array (which is never used) instead of just iterating through the Nodes? I guess it's a slightly higher-level linguistically, but it's not any more scalable (and certainly not more efficient). What is wrong with a for-loop? I think the *real* issue you and karathos have with the code is that it isn't the same style you use.
I think it's because your first image doesn't have an alt Try changing the order And no, I don't see the results :)
/r/drippingwithconceit /r/doesntrealizetheyrerespondingtosomeoneelse /r/impactedrectum
Read the studies, articles, or comments I've made so far. 
The *real* issue is that people seem to conflate "no framework" with "need to use old-school JS, despite all of the pain-points". It's actually a disservice to the "no framework" argument, because people see this old-school code and assume that it's necessary to code that way to avoid bloat, somehow. Sure, fair point, maybe there's a good reason to use a `for` loop here, not the ES5 equivalent, but that's a tangent. There's not really a good reason to use `var`, or to avoid arrow functions, or to use IIFEs instead of proper modules. It just feels "old school for the sake of being old school". The author can code however they like, of course, but I do think it hurts the code's ability to stand as an example of a good way to do framework-less JS.
I have no clue what your point is. Do you always feel this way when people talk about education, or is there something special this time? And for what it's worth, I was talking to you. Pointing out that fascism as a word is commonly misused because people doing so aren't familiar with its basics is pretty neutral, so I can only imagine it's offensive to people it might concern. Either way, try to stay on topic. "Please be professional; trolling and abusive language are not permitted." is one of the subreddit rules, thanks.
It's not whataboutism. Mr. Yellow is attacking your underlying premise that there there is no biological differences between the population of men and women that disposes them to certain jobs. Mr. Yellow is doing this by providing a clear example of a job that men clearly disproportionately disposed to do and women are typically not. You're dismissing the example because your post modern cultural marxist ideology has no good response to it. 
You pull in mobx &amp; mobx react and then _literally add two decorators_. @observable on the thing you want watched ... and @observer on any component that uses it. I'm not quite sure it could be any easier.
I have never heard of Preact and I would argue that using the official React is preferred in a production environment because of the level of support (bug fixes, etc) it receives in comparison. According to the [installation instructions](https://facebook.github.io/react/docs/installation.html#using-a-cdn), you should include React and React-DOM. The minified and gzipped version of [React](https://unpkg.com/react@15/dist/react.min.js) has a transfer size of 7.3kb The minified and gzipped version of [React-DOM](https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js) has a transfer size of 38.3kb Including these on my site would double my payload. And payload is absolutely an issue when it comes to spotty mobile connections.
&gt; Society expects people who were born with a uterus to sacrifice their comfort, health and put their life at risk in order to ensure the survival of the group. This is the opposite of true. In reality, society expects people who were born without a uterus to sacrifice their comfort and health, and put their lives at risk, to defend the lives of those born with a uterus, in order to ensure the survival of the group - because said survival, from an evolutionary standpoint, is dependent upon those uteri. Reproductively, sperm are expendable; ova are not. If women were the ones sacrificing their comfort, we would not see men putting in most of the overtime hours, and we would not see laws that protect the genital autonomy of female infants but not of male infants. If women were the ones sacrificing their health, we would not see almost all men in the coal mines. If women were the ones putting their lives at risk, we would not see men dominating the workplace fatality statistics and casualties of war. &gt;a topic masterfully explored in Tim Schafer's Broken Age FWIW Tim Schafer is an asshole partisan hack who lacks self-awareness of his own asshole behaviour. He has advanced his career on ideological bullshit, and writes that bullshit into his games. There is nothing "masterful" about it and nothing he says or does should be considered insightful on any topic. &gt;*Math is hard, let's go shopping.* Not only is that not a commonly held attitude (everyone thought that line was in horrible taste and it was a marketing disaster for Mattel - not that anyone remembers, since it was in the days before social media), it also doesn't relate in any way to what you were saying. &gt; this seminal study Your paper is from 1998. Not only has the field of sociology advanced quite a bit since then, but the way we educate children has changed radically. &gt;Could it be that the "girls suck at math" meme is more prevalent in northern Europe than in India, regardless of their position in society? Really? You imagine Norway as a land of sexist stereotypes? If you haven't already seen it, please have a look at [this video series](https://www.youtube.com/watch?v=E577jhf25t4&amp;list=PLd9_g7lAICxtlGbxh4_z8ik178o8CDPnv). You might learn something.
The problem is: Now I also have to trust your generator to function correctly ;).
A more practical application would be doing WASM vDOM diffing to offload expensive layout computation.
&gt; Having to use webpack and CLI tools for .vue components will scare off the newbies. [vue-cli](https://github.com/vuejs/vue-cli) sets all that up for you, you just pick the template you want, (`vue init webpack-simple`) and, bam, you're off writing single file templates/components. Very "newbie" friendly.
Maybe for you friend, but I'm not sure how you can definitively say that when it's subjective. After all, you just said it doesn't match *your* experience. Clearly my experience has been different with it. For me, everything has been far easier with Vue but different strokes for different folks and all that. What builds on my knowledge as a JS programmer is being productive.
Computed properties ≠ props, they have specific optimizations on them that makes them cheaper to use.
&gt; First, hacker culture rewards "programming for the sake of programming". *As it should.* If the idea of "programming for the sake of programming" doesn't appeal to you, then *you don't really have an interest in programming*; you have an interest in pulling a programmer's salary in exchange for a programmer's working conditions. &gt;These women emphasize the importance of having computing and their programs "do something." This is *not a different thing*. If you don't intend for the program to "do something", then you aren't really programming, you're just writing code. Just like if you call yourself an artist but you don't want your painting to look like anything (or convey some idea), you aren't really making art, you're just putting paint on a canvas. People who "program for the sake of programming" are absolutely trying to make their programs "do something", even if it only has meaning to themselves; that's what it means to program. It's possible that Margolis is making a distinction between social purposes and personal purposes for the code. Whatever. Hacker culture doesn't particularly care - but dreaming too big gets in the way of actually getting started (and dreaming too small might not open any opportunities for others to collaborate). &gt;They have no intrinsic motivation for CS, they see CS as an economic opportunity to provide for their family. IOW, they *don't want to program*. &gt;Improvement in chemical restraint for large animals.... Income of veterinarians declined. Male veterinarians cited salary as a primary motivator so naturally they looked for greener fields. IOW, the men *no longer wanted to do veterinary medicine*, because the nature of the job changed. (Also, note that the four reasons you listed are ones that Lofstedt identifies as being common hypotheses, not her actual findings. She doesn't appear to have actually done any real science here; it's more like an opinion paper citing other studies.) You know how there was that time when most programmers (i.e. punch-card operators) were women, and then that trend reversed? Did that happen because men had male programmer role models? No; it happened because it became technologically easier for the engineers to do their own programming. Again, the nature of the job changed.
There's nothing about this whatsoever about who's *better* at what, it's who's *interested* in what. More men tend to be interested in CS than women. More women tend to be interested in teaching than men. 
The functionality you're after is exactly how chalk handles chained styles (example: `chalk.bold.red('foo')`). Might want to check out their implementation. 
I'd love to play around with this, but I'm unsure how to approach. What approach did you take? MVC? MEAN? Freestyle?
Looks like quandl has more properties than just stock data. May need to change data to data.data. Also, they both look like they format the dates different.
I meant whether the initial selection criteria contained any obvious gender bias.
It offers a compatible (hence "compat") layer, there are many actually like inferno-compat and even a semi-official one, react-lite, that simply cuts out all the bulk. These layers retain the same api. At least react-lite is almost guaranteed to function, though in many projects i alias the production build to preact, which cooks it down to the smallest size.
Actually, while using ReactJS along with Redux, the MVC/MEAN pattern didn't match. Its freestyle coding. I'm working on the system overview doc where these details will be included. Once it's done, I will update it.
Look, the author of that article is the one that made claims without backing it up. I have given you lots of things to consider, not just my personal experience. Api size isn't subjective at all, neither is having to depend on a full blown template language. At some point it becomes tiring to go on if arguments aren't being addressed. Otherwise i agree, if you're productive with it that's awesome.
##Oxytocin Oxytocin (Oxt; /ˌɒksᵻˈtoʊsɪn/, /ˌɒksi-/) is a peptide hormone and neuropeptide. Oxytocin is also used as a medication to facilitate childbirth. Oxytocin is normally produced by the paraventricular nucleus of the hypothalamus and released by the posterior pituitary. It plays a role in social bonding, sexual reproduction in both sexes, and during and after childbirth. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/javascript/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^] ^Downvote ^to ^remove
True but the way you normally use it the outcome is the same. In React a re-render occurs when your target property changes, it is the [same criteria under which your computed property would run](https://vuejs.org/v2/guide/computed.html). If you are going for deeper result memoization (and i don't think computed props do this in Vue), in React nothing changes from how you'd always do it: import memoize from 'lodash/memoize' const memoizedHash = memoize(password =&gt; generateHash(password)) const Hash = ({ password }) =&gt; &lt;div&gt;{memoizedHash(password)}&lt;/div&gt; &lt;Hash password="p@ssword" /&gt; // generates &lt;Hash password="p@ssword" /&gt; // cached &lt;Hash password="p@ssword" /&gt; // cached Though you're right, recompose would probably make this more re-usable.
Do you mind explaining what is going on here? I'm new to javascript and I'm not sure why the errors are being logged.
&gt; You're one of two people, out of 326 comments, that thinks otherwise. Having actually looked at the rest of the comments, this is not actually the case.
In his first example, everything is scoped to the IIFE, so afterwards none of those variables exist, hence the errors. In the second example, let and const are block scoped declarations, so they don't exist outside of the block, same errors as the first example. But, var and function declarations are not block scoped, so they do still exist after the block. No errors because they're not isolated. 
&gt; Avoiding bias isn't remotely the same as being meritocratic. Yes, it is. How could you argue otherwise? "Accounting for" the bias of others by explicitly attempting to counter it, is a) not actually avoiding that bias; b) *actively disincentivizing* anyone from addressing that bias properly; c) enabling suspicion that certain people are undeserving (both on the part of the individuals themselves and observers); d) a form of bias in itself. It is morally wrong.
&gt; just how tone deaf the comments were to their own misogyny. You think other people ITT *hate women*, and that you can discern this fact *better than they can themselves*, yet you unironically write about &gt;the "muh meritocracy" rhetoric as if you don't think you're being a jerk? Reported.
Thanks for putting this together, author! I love the idea of WASM but it's gonna be awhile before I'm ready to dive into it for real. I appreciate being able to see the voodoo required to make it all work right now, though.
Hi /u/Ryanrh, I've removed this post as it's not javascript-specific. There are many resources on how to manage people, and /r/javascript isn't one of them. Thanks for your understanding.
Interesting to compare with this laravel + vue solution: https://github.com/laracasts/Lets-Build-a-Forum-in-Laravel
It's not weird at all; of course C is going to be faster than JS. JS semantics are inherently slower than native code for a lot of reasons. When you really think about implementing JS behavior natively, you realize that native code is simply doing less on the CPU and thus is faster.
Why mongodb?
Yeah I heard both Chinese Google and Chinese Amazon have adapted vue as their web front end. 
what's the advantage of reactive based programming?
Actually we've found two. If you tell people your acceptance criteria is racial/gender based you are obviously de-prioritizing professional and other skills. Once you make it known you are doing this you create an atmosphere were people will view the selected applicants as diversity hires and right or wrong people judge their performance in that light, which is not useful to anyone or responsible. You likely have the best of intentions but are screwing this up 5 ways when you don't need to. The skills that make for a good developer are not the same skills that make up good company leaders or public relations people. Again I get where you're coming from but you're presenting your position terribly.
I get what you are saying, but in JavaScript it's important to think of those braces as a block, not scope. As grinde pointed out, it's only a scope for let and const, not var and function.
Explicitly blind, perhaps, but they could have encoded implicit biases. As the Jon Stewart clip makes clear, anonymity is insufficient.
Thank you Mozilla for the awesomeness of the MDN docs, it's incredible how many things I've learned just reading it.
You can shave a char off this [like so](/s "[...'3'.repeat(90)].map(a=&gt;+a)")
&gt; Your method only works for let/const, not var or function declarations It works fine for functions in strict mode. (Classes and modules are always in strict mode.) So, it only doesn't work for var which you shouldn't be using anyways. [CC /u/Geldan, /u/swan--ronson]
Yeah, I'm really excited to see if the big players (Angular/React/Vue) integrate an optional WASM vDOM.
In fairness, Marko is actually older than Vue.js, slightly. 
How is it different from minified JS that we have today?
I mean... not really. But you will need to get comfortable with S-Expressions.
Not sure if this is exactly what you want, but check out 'pkg' by ZEIT.
There is no throne
They are judging their process for choosing speakers. We should expect to choose a distribution of male and female speakers that roughly matches distribution in the field. If we do not then perhaps the process we used is selecting out speakers that we would want to have. There are several areas where this could be the case. Perhaps the evaluation of the talks is biased and so good speakers are filtered out unnecessarily. Perhaps the request for talks is biased and so good speakers aren't submitting proposals. Perhaps there's some other filtering in the process that is excluding otherwise good talks. None of this depends on the chosen speakers other than the initial evidence that the final gender distribution doesn't match the expected distribution. Of course there is the possibility that they explicitly are looking at gender and explicitly want to add women as speakers. I'm not arguing that they didn't or whether they should or shouldn't here. I'm saying that it's possible to believe your process is biased without judging the people that the process presented as output.
You can't because JS is dynamically typed. This is mostly why it is slow for heavy numerical computation. There are some efforts to create a strongly typed variant of typescript that compiles to wasm called turboscript.
Just like most tech companies, eBay does develop and open source technologies that overlap with other existing technologies. They all do that. Also, you shouldn't associate Dust.js with eBay -- that was created by LinkedIn (and nobody should use it because of its bad implementation). I don't work at eBay but I know that even with the choice, most teams at eBay prefer Marko over React. It's true that there is a popularity contest and Facebook gave React a good start but that doesn't mean that it is superior. I will agree that community support is a huge advantage -- I just hate to see innovate products be ignored because of that.
You're right, I misattributed dust.js, and innovation is always good. I would still personally advise against using Marko and would never approve of it on any of my projects, but to each their own.
So you know about machine code, right? When you compile a program with a language like C, C++, or Rust, the code gets translated directly to machine code, which is the code that gets run directly on your processor, and it's all binary data, 1's and 0's. Machine code was the original language built for computers. It was written by hand. Well, it turns out that's really hard for many reasons. One of the big ones is that every time you want to move a variable or function somewhere else, you need to change literally everywhere that it is used, because processors don't have a concept of names, they use direct addressing of data and code. So assembly was made, which is a small human readable sugar over machine code. Every command in machine code was given a human readable name, and you could use labels to specify locations in the code so you don't have to change everything anytime you make a change. Other than the human readability and label translation, assembly is a 1:1 representation of machine code. The next issue was that companies started building all kinds of different computers, and every processor had a different set of machine code commands, and thus had its own assembly language. Suddenly people had to build separate programs for each processor architecture. This was one of the reasons high level languages were made. Now each processor only needs its own compiler, and programs only need to be written once and compiled for each system. Well then we got even lazier and decided that we didn't even want to have to compile more than once. We wanted to "write once, run anywhere." So interpreted languages were made to fill this purpose. You could take a program in one of these languages and run it on any platform as long as there was a runtime (also known as a virtual machine) for the language. Then we realized that these languages can be slow, so languages like Java were made, which are halfway in between compiled and interpreted languages. When you compile Java, you are compiling down to an optimized bytecode, which is a kind of assembly that is made for a virtual machine, in this case, the Java Virtual Machine. You compile your program once, and then any machine with a JVM can run it. When JS was made, this same idea fit very well into the environment. Each browser implements a JS engine, and then any site that has JS code can run in any browser, regardless of architecture. But JS is still an interpreted language, so it's still slow, way slower than a compiled language like C. Enter WebAssembly. WebAssembly is a bytecode specification, so it's like Java. It's way more low level than JS so it runs a lot faster. And it's made to be like assembly, so languages like C, C++, and Rust, which need to be compiled to run, can now compile down to WebAssembly. So now you can run these fast, low level languages in the browser. And because it's a web standard, it fits in the browser VM world where you only need to compile once and it is runnable in any browser. So, WebAssembly is not meant to be written manually. It is what is called a "compiler target," which is just a fancy way of saying it's a binary format like machine code that is meant to be used by compilers, not humans. Hope that clears it up for you!
Well, there is the problem. You first have to master ES6 before learning React. 
Available in Edge v.499.3.1
Times are changing
Plus Alibaba, Baidu, Tencent, Xiaomi, Didi Chuxing, DJI, Ele.me, Line, Nintendo, and Sainsbury’s. 
You could compile a JS interpreter into WASM then use it to run your normal JS, but no one should do that.
Technically it is not immutable, you just can't reassign it. That being said, I think the general sentiment in the industry is to prefer `const` and use `let` if you know you need to reassign for some reason. So, I agree with your other point. From [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const#Description): &gt; The const declaration creates a read-only reference to a value. It does not mean the value it holds is immutable, just that the variable identifier cannot be reassigned. 
That quote doesn't really contradict me. A "read-only reference" seems like just another way of saying an "immutable reference". 
Ah...so you don't necessarily have to be *obviously* biased when hiring time comes along...
It also actually says &gt; does not mean the value it holds is immutable **EDIT**: To clarify a bit, the reference to the value is immutable, but the actual value is not. It's a subtle difference, but it is different. If `const` made things immutable you would not be able to manipulate Object properties or utilize `Array.prototype` methods that mutate Arrays.
Would the pool not be every submitted application? Im not that informed of the entire process. If its blind it would suggest to me that the pool would have been included in the process. If it were not, then i could see some bias happening.
Yes, I never said "the value the variable holds is immutable", I said "the variable is immutable" (which is true). In fact, I specifically said in my original comment: &gt; [const] doesn't make the object referenced by the variable immutable. You're the one who is seemingly failing to differentiate between "the variable" and "the value held by the variable". You're contradicting me to say things that agree with what I've already said.
Interesting. I'll just have to play around with it to figure out all the nuances I think. Maybe I'll have an ah-ha moment, but right now I'm not seeing how it's useful to push anything other than rendered HTML to the client. Thanks for the explanation though, my interest is thoroughly piqued.
The first year since I stepped into Front-End world, 50%+ of my HTML, CSS and JavaScript knowledge came from MDN. I wonder if MDN would show us a data report of PV of every doc. Let the world know how many developers they have helped.
npm install nothing &lt;input type="color"/&gt; Sadly we just have to wait a bit for all browsers to catch up with a native implementation :-/
Man, the backlash against this really is not allowed to stand is it? We must all engage in "important conversations," about "necessary progress", and if we don't, we're neckbeards? That's called a sermon, and labeling unbelievers as lesser. Your opponents do not have trouble grasping the sociology 101 arguments and their unfounded imperatives, they've seen exactly how it doesn't work, how the rules are only ever for others, and how it's used by a particular middle echelon to acquire the relevance their skills don't bring them. There is no reason to believe men and women are equal in preferences or skills, on average. It would not be the end of the world if engineering was destined to remain mostly male and caregiving to remain mostly female. It would just blow progressive blank slatism out the window and risk instilling a sense of responsibility and accountability in people who prefer to coast on their status as a sanctioned victim. There are plenty of women and other minorities in tech who don't like this stuff one bit, myself included. 
It's like inversion of control for logic flow. It's almost like event based programming where instead of specifying actions one after another you specify what happens when something else triggers. I'm finding it hard to put into words better but basically you write code that responds to other things happening rather than writing strict logical flow. Then later when you need to change the initial action or tie it in to something else all the other logic that is reactive still works correctly without any changes.
It'd be nice for them to be categorized and then alphabetical for each category. 
Great summary!
&gt;By your logic, that should be an issue. Is it not an issue?
Not the author, but there is one difference: With the "FP version", the parameter is explicit. It can only ever be what is passed in, and there's effectively only one way to pass it in. With the "OOP version" (`this`), the parameter is implicit. It's not listed in the actual function parameters, it entirely depends on the context of how the function is being called, and that context can and will change if you're not careful about how you do things. Don't get me wrong, I use classes by default with React and have no problems doing so, but the arguments about `this` being confusing and difficult for learners are entirely valid. When someone renders `&lt;ChildComponent onClick={this.handleClick} /&gt;` (and `handleClick` does something like `this.setState()` ), they now have to ensure that `handleClick` has `this` bound correctly one way or another, because when the child component calls `this.props.onClick`, it's definitely not the same as calling `parentComponent.handleClick()`. It does add complexity, and it does get confusing. (Source: I spend most of my time hanging out in the Reactiflux chat channels and answering questions from learners. I frequently have to point people to articles on how `this` works, and how to bind methods in React components.)
Im a minority and know you dont fix exclusion with more exclusion..
Easy =/= simple, though. (I'm not saying that Vue is simpler, I'm just saying let's not equate 'letters typed' to 'ease of understanding', or we'd all be using APL.)
Girls aren't interested in tech. Period. Just like boys aren't interested in make-up or horsies. 
You don't need to know ES6 to use React. [Here's](http://jsfiddle.net/69z2wepo/80343/) a Counter example using ES5.
&gt; Bingo. Having to use webpack and CLI tools for .vue components will scare off the newbies. That's probably why it's so popular with the Laravel (newbie) crowd. FYI the default Laravel application uses single-file Vue components and has a task runner built over webpack and vue-loader.
How is "Slate Star Codex" on the same level of rigorous studies and research papers? This is laughable. This is your expert resource? A blog? https://www.quora.com/What-are-peoples-biggest-criticisms-of-Slate-Star-Codex 
My greetest apologies. 
Hey, don't knock it. `for` loop can be roughly twice as fast `forEach` for when you are doing small tasks for each element in a large collection. I've made a three.js-based renderer handle previously unusable models smoothly just by replacing a whole bunch of `forEach`-es with straight loops.
if it's a blind review, it's as unbiased as it can be. If there weren't submissions from females, or they were of low quality, then you can't blame an unbiased review for the outcome of there being no accepted submissions from females. That's the entire point of the process, to be unbiased. Equality of chance, not equity of outcome.
So you're arguing willfully that seemingly uncontrollable aspects of one's life are irrelevant in determining their thought processes, methods, and approaches toward encountering certain situations? So everyone is on the same playing field, regardless of sex or race? That claim is insane. &gt;Race, sex etc. are poor proxies for this. They're not proxies at all. That's not even remotely the right concept. Race, sex, and so on, are seemingly uncontrollable elements of a person's life that shape their personality, how they act in society, and most importantly, how they approach certain problems. &gt;but then reveal that by "diversity" you mean different skin colours and genders, then you are playing semantic games That makes no sense. These are not semantic games. These are literally different experiences that cannot be experienced first-hand by those who do not have those characteristics. As a white person, you cannot experience what it is like to be black. As a black man, you cannot experience what it is like to be an asian woman. Are you arguing differently? Are you saying that, if I'm regularly targeted by law enforcement because of racial profiling, that those who are not racially profiled take the *same* approach to an exchange with law enforcement? This applies to all things, including sex. If I'm a female, born into male dominated society, and I am constantly told at an impressionable age where my sex belongs in the employment hierarchy, then I'm definitely not going to have the same approach to those environments as someone who has not experienced that turmoil. https://www.youtube.com/watch?v=LvNZt1T5rAQ Do you believe that women who were primarily secretaries in the 50s and 60s, didn't want to be executives because that's just how women are? I guess women's suffrage really makes no sense if you think about it that way. Why did it even happen? Maybe this is too "political" for you. Let's focus back on the web. If you lost your arms, and wanted to use the web, how would you do so? Let's say you decided to view the web through voice commands, but most websites are not designed to be easily traversed by these technologies. **Would you rely on people who have never experienced life without their arms to determine how best you should use the web?** https://www.w3.org/WAI/intro/people-use-web/Overview.html People with the privileges to use their extremities with absolute freedom take advantage of the fact that they can do so. This is not something that can be argued. It is a fact of life. Let's go back to the topic at hand here. Minority representation at web conferences. Women make up 10% of software engineers today. In the 80s, women made up 30-40% of software engineers. Men make up 90% of software engineers today. There are many reasons why those numbers declined, but they primarily had to do with young girls being told not to seek out those positions, women being continually harassed by the so-called boys' club, and the resources and opportunities not being shared with women. If you were a woman, would you feel comfortable being represented by the people who continue to passively prevent women from working directly with this medium? Would you want only men determining how the Web evolves, in a world that is almost split between women and men? I wouldn't. If I were female, I would want both equal representation and the best and brightest, at the same time. Because the experiences that each speaker has lived outside of their time engineering, has evolved how they approach certain situations, even if they aren't technically the best engineer as determined by blind review. You can be as verbose as you wish, but at this point, when faced with tremendous knowledge all around you, you're actively contributing to the problem here. I realize that your reply was a strawman, but I'm hoping that others will read and learn to look at the world with a more inclusive approach. 
&gt; I mean it's a bit weird that C to WASM runs faster then pure JS. Wasm isn't some JS subset like Asm.js. It's some platform-independent bytecode which gets compiled to platform-specific machine code. It's native code running in an airtight sandbox.
For example; I didn't know they had open applications, did you? 
&gt; We will be splitting ~~out~~ **up** the navigation If you're writing documentation, at least learn to grammar first grumble grumble
For now the login html page is shown but when I press submit, the server show this error: TypeError: Cannot read property 'email' of undefined at $path$/server.js:30:24 at Layer.handle [as handle_request] ($path$/node_modules/express/lib/router/layer.js:95:5) at next ($path$/node_modules/express/lib/router/route.js:137:13) at Route.dispatch ($path$/node_modules/express/lib/router/route.js:112:3) at Layer.handle [as handle_request] ($path$/node_modules/express/lib/router/layer.js:95:5) at $path$/node_modules/express/lib/router/index.js:281:22 at Function.process_params ($path$/node_modules/express/lib/router/index.js:335:12) at next ($path$/node_modules/express/lib/router/index.js:275:10) at Immediate.&lt;anonymous&gt; ($path$/node_modules/express-session/index.js:489:7) at runCallback (timers.js:641:20) And then I'm lost... I don't really understand why the server does not receive the posted data, and I don't know how to use the data received for socket.io.
I would like a circle. Can we do circles yet in HTML6?
&gt; So you're arguing willfully that seemingly uncontrollable aspects of one's life are irrelevant in determining their thought processes, methods, and approaches toward encountering certain situations? No. &gt;So everyone is on the same playing field, regardless of sex or race? Probably not, but that's a) irrelevant and b) completely unrelated to the previous bit. You don't come across as if you're even *trying* to understand the argument, which is disappointing because it was very simple. I gave you "X is only correlated with Y, not the same thing" and you extracted "so X and Y are totally independent?". Bizarre. &gt;They're not proxies at all. In this context, yes, they are. People are using justifying the importance of actively seeking out racial and sexual diversity in the workplace, using arguments based on ideological diversity. The only way that makes sense is if you expect one to lead to the other. But instead of actively seeking out the latter, they search for the former. That's what proxying is. &gt;As a white person, you cannot experience what it is like to be black. As a black man, you cannot experience what it is like to be an asian woman. **Experiencing** things isn't diversity of thought. **Thinking** things is. You have done exactly nothing to demonstrate how these experiences lead to "changing the way people perceive, adopt, and apply technical knowledge". &gt;Maybe this is too "political" for you. The entire topic is political, no scare quotes, whether you like it or not. &gt;Would you rely on people who have never experienced life without their arms to determine how best you should use the web? This argument is bizarre, because accessible interfaces for computers have existed for a very long time. Most of the people working on them have been fully abled, and this has not prevented them from understanding the issues in the slightest. I can't even make sense of the concept of "how best you should use the web"; nobody dictates that to anyone, and half the reason web UX is so terrible overall is that everyone is constantly inventing their own new nonsense to look flashy. It's a problem even for the fully abled. &gt;In the 80s, women made up 30-40% of software engineers. They did a different job. &gt;young girls being told not to seek out those positions This is a lie. They are actively encouraged to seek them out. &gt;women being continually harassed by the so-called boys' club This is not only a lie, but its propagation is effectively bullying introverted men who just want to write code already. &gt;the resources and opportunities not being shared with women. This is not only a lie, it's the opposite of the truth. You are going around in this very thread trying to back up your own claims with a link to a website promoting opportunities exclusive to women! &gt;You can be as verbose as you wish Said after replying to a short post with a long one. Incredible. &gt;I realize that your reply was a strawman This accusation on your part doesn't even make sense. Arguments cannot be strawmen; strawmen are misrepresentations of the arguments of others. Which you have done here, at the top.
That's from elsewhere in the thread, and most of those are *still* not academic. Most if not all of them are, in fact, the exact "citations" of the computerscience.org piece I was complaining about. &gt; It looks like you've got academic resources turned off. Extension maybe? No, I did not use a browser extension to hide links to "academic resources". This is a bizarre claim and suggests to me that you are not actually interested in anything remotely resembling intellectual honesty. I am now blocking you. Good bye.
You can do circles in SVG
Automatically reflecting state changes in the view does not make a framework reactive. Notice that neither React nor Ember or Angular calls itself reactive.
I do know what mongodb can do. Let me rephrase my question: Why do you think mongodb is a good fit for a board software?
It seems like it, i know what you mean. This is because React ends the traditional approach, it is very different from older principles on which frameworks like Angular and Vue rest. But when you take it up you will quickly realize that you don't learn React, you knew it all along. I've mentioned the egghead curse: https://egghead.io/courses/react-fundamentals Try it and you'll see.
This is childish. Every now and then i come, by accident, across a baseless claim like the one in the article and i add my arguments, that is all there is to it. I don't think any of them are "anecdotal nonsense" btw. 
I doubt they'll ever implement it (on iOS at least).
Soon hopefully
It's English as a second language and the intended meaning is entirely clear even if the syntax sometimes isn't quite right. Cut the guy some slack. 
Split up implies the same page with different section. Split out implies a separate page. The grammar is fine. 'learn to grammar' is not however.
It's talking about navigation, so split up or separate out would both be fine.
X-Post referenced from [/r/node](http://np.reddit.com/r/node) by /u/keithwhor [StdLib Now Supports Node 8.0.0 + new "FaaSlang" Function Definitions](http://np.reddit.com/r/node/comments/6fsaog/stdlib_now_supports_node_800_new_faaslang/) ***** ^^I ^^am ^^a ^^bot. ^^I ^^delete ^^my ^^negative ^^comments. ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)
Then, presumably, there will need to be a somewhat sophisticated way to interface with JavaScript from WebAssembly. The WebAssembly website does seem to suggest that they wish to explore interfaces for the DOM, and perhaps also JavaScript, but they recognise that it is a challenge. Also, one area which could benefit from 'heavy lifting' is gaming. It will be interesting to see whether games can benefit in any way from WebAssembly.
Nope.
Great initiative! Thanks Mozilla.
`border-radius` would work
You started out making a few straw man arguments about OP: you used exactly nothing as a platform on which to attack him, and the idea that maybe we can force a little more variety into the industry. And I'm the one being belligerent? &gt; "lets ignore merit and just GIVE spots to people with different genitals". Did you know that penises and vaginas have nothing to do with code? That's you being belligerent again, and strongly implying that the female speakers they might eventually find will be merit-less. &gt; pity speaker spots That's you being condescending. &gt; Just don't show up and tell me about my problematic existence in the office using examples from the 60s. That's you dismissing the problems that smart women who want to be in the industry face, today. &gt; But you clearly have never considered you might be wrong. I'm often wrong. Actually I said that already in the comment you responded to here: I recognise that I'm wrong, in public, and don't see any need to delete those cases. Here I'd struggle to be "wrong" per se because I'm not asserting very much; just that your advice is not sage and that you should think more about what you say. &gt; stop treating people like your moral and intellectual inferiors If I thought anything of the sort I wouldn't be replying to you; I'd have better things to do. Perhaps I should rephrase my position: I understand your concern that giving out speaker roles to merit-less women doesn't help. I think your perspective/thought patterns are precluding you from considering that merit-ful (not a word... hmmm, "valuable" seems a poor antonym in this case :\) women might not have the same opportunity+enthusiasm+motivation to be in the position to submit valuable (ok, I'll use actual words) talks. I'm spending my time replying to you in order to cajole you into merely considering what would be different were you a woman with exactly the same interests &amp; expertise as you have now, and were faced with such a comfortably male-dominated and sometimes misogynistic (overtly on occasion, but most often unconsciously) industry. Hopefully with the result that the first thing that springs to your mind when someone mentions positive-bias won't be "pity spot". I'm on a pretty poor "high horse" admitting that I say things sometimes that I look back on and can't rationalise, and in the same vein I will consider what you're saying about how I'm communicating. Perhaps I'm on a moralistic high horse saying that I'm trying to improve myself and I think you should too, and I'll give that some more thought. I'll finish off in saying that you offend me saying I have a "ton of ego": I spend so much of my time and effort criticising myself, my abilities, my choices, my instincts, etc. that it's a wonder I can carry off such an impressive performance. So I can really only respond: touché! Edit: it's telling that [merely suggesting](https://www.reddit.com/r/javascript/comments/6fdj6u/female_representation_in_our_industry_and_the/diidj0q/) that I might have it easy because I'm a white male is enough to provoke such an idiotic response and also downvoting. This is why I have little respect for the karma in threads on this topic. I would say I do pay attention to the karma in technical discussions though :) 
That is not how selection works. If the 1/10 submitted by a female was in the top 1/10 of total submissions, it would have been selected.
Call it Mozilla Document Network then.
Ah I see. It's subscribing to an observable. Thanks for your explanation. 
I do find it amusing that the writing an application without some trendy framework is so astonishingly bizarre that this conversation should exist in the first place. It is telling of a couple of things, indicating (generally speaking): * Developers have no confidence in the technology without added tooling to work from. * Developers lack sufficient training and education to work in these technologies. * The work place imposes unrealistic expectations where their developers cannot achieve product completion without added help from supplemental technology. That is the nice way of saying things. More bluntly: * the technologies are too hard * developers are generally incompetent when writing web technologies * workplaces expect magic but aren't willing to make the necessary investments
I avoid working in the global scope. Node provides a reference named *global* which is an empty object that can be assigned to and exists to mimic the browser's global scope. In the browser I create an empty global reference named *global*. If I then need a globally available reference I then assign it as a property of the *global* object. This prevents global references and a creates uniformity between Node and the browser.
&gt; If the 1/10 submitted by a female was in the top 1/10 of total submissions, Why did you assume this condition?
No I did it because I didn't feel it was appropriate to single out one minority over another. I'm Mexican first generation immigrant and I'd rather not have people in my profession believe I got to where I am through a quota system rather than technical merit. Again you haven't given a single professional reason for excluding better qualified speakers because they all look *too* alike. I want to learn about the technology not about the humanities. I took plenty of AFAM courses and Latin American history classes already I don't even know personally what I would say that would be in anyway useful to a CS professional crowd about what it is to be Mexican and doing software development. It isn't pertinent and just forced diversification for publicity relations' sake is hollow in and of itself. Get off your high horse and mingle with real people who make connections not based off arbitrary conference quotas but real interactions between colleagues. 
If you can forgo server side rendering for now (its a pain imo anyway) i would suggest create-react-app,it will register service worker and cache static stuff. so your app will be pretty effin quick. Server side rendering when you don't know much is a lot of hacks. prevent libraries from loading, taxes your servers.. its shitty at this time. Next.js has an insane folder structure which prevents you from searching in folders which i like. Also it uses its own router.. and its overall slow and weird. 
Hi /u/shadesofwonderlust, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index).
I would like a short description or glossary, because when I don't know which one I'm looking for, it can be quite a bit of searching and hopping around.
ya literally in the header of the prepack site that it is not prod ready, and if that wasn't enough { "name": "prepack", "version": "0.2.4-alpha.0" }
Definitely not required, by default all you really need is to put your tests in a ./test folder. https://mochajs.org/#the-test-directory
Why do you think so?
They allow for multithreaded JavaScript execution. Could be concerned about performance on dual core iPhones?
By the way, Array.from accepts a [map function as the second parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from?v=control) so in your original you don't need an explicit call to `.map` and could save a few characters: `Array.from(Array(90),()=&gt;3)`. Unless you're filling with 0s, this is often more useful than `fill` as you can perform some logic to initialize things: `Array.from(Array(90),(_,i)=&gt;i)`
&gt; We will also be investigating ways to ensure that search results direct users to exactly what they were looking for without confusing Web and product documentation. THANK YOU FOR THIS. Search was always the blemish on an otherwise fantastic resource, IMO. I'd get better results searching Google for my question vs. MDN's internal search. Sometimes MDN wouldn't give me *any* results, even though the property or method I was searching for did exist. Really looking forward to how they improve it.
(or no females applied) which is the problem I was trying to highlight.
Careful. You're making fun of a woman on github. That's against their code of conduct and a bannable offense.
What? In a .vue component it's literally just &lt;template&gt;&lt;div&gt;&lt;message /&gt;&lt;/div&gt;&lt;/template&gt; &lt;script&gt; import Message from './Message.vue' export default { components: { Message } } &lt;/script&gt; I love both React and Vue (probably prefer React at this point), but I personally found Vue much easier to learn having come from Angular previously. After learning Vue I then found React dead-simple to learn since they're fairly similar. Vue tends to make a lot of sense for people who have used server-side MVC frameworks like Rails or Zend; I wouldn't say there's anything wrong with that. Also, Vue supports JSX now.
Luddites...
Wait, what was wrong with the W3 schools?
Mozilla did some implementation of view source for wasm. Was a higher level s syntax. Not sure what happened to it. I think they scrapped it, but it's fair to expect some browser to implement a debugger for wasm in the near future
I like using them for a handful of memory leaks, maybe some endpoints that are never used, set a flag to false with a comment saying it's important and to never set it to true, even though it's never used, redefine some built-ins, stuff like that.
The current prime minister of the UK.
&gt; The primary problem with npm and webcomponents is that npm installs dependencies nested, while webcomponents require deduplication. I do not understand why the application would require a certain folder structure for your dependencies. Obviously it's great to deduplicate dependencies, but it shouldn't matter if I have two copies of `library.js` in my `node_modules`. Just use a proper bundler like any sane person and it's not problem. `Bower` is fine, but there are better solutions these days.
For the love of all that is good, can we please keep politics out of this sub?
Well, I see it like some people have nothing more to do and invent problems.
I loathe some of the politics but as long as the discussion is civilized I am ok with the overlap. Maybe some way to enable members to filter out posts that have a political angle?
That's good.
I love these types of article. Javascript should be used, but I always felt sometimes I'm asking too much of my user's computer. However, I can't stand to reason when the author says every site should work without js. Especially on web apps, the overhead needed may be too much to be worth it.
Shemay be Theresa she maybe not...
It's a unique mix of Javascript, Politics and Comedy. It's unlikely that Politics or Comedy will fully appreciate it. Javascript/webdev subs OTOH ... Honestly, it's probably the best, if not only, appropriate sub for it.
Do you follow his twitter? I don't doubt his sincerity, he really always is this lighthearted and cheerful
Last time I used it, it did.
I understand where you are coming from, but we are saying that Marko enables developers to build "Reactive UI components". That is, with Marko (and React, Vue, etc.), the view is a function of the state and the view automatically reacts to changes to state and that frees developers from having to write imperative code to update the DOM. The paradigm of [Reactive programming](https://en.wikipedia.org/wiki/Reactive_programming) is much broader, but still very much in the spirit of what we are talking about here. If you can think of a better term to describe UI libraries that free developers from having to write imperative code to update the DOM/view please let me know.
##Reactive programming In computing, reactive programming is an asynchronous programming paradigm concerned with data streams and the propagation of change. This means that it becomes possible to express static (e.g. arrays) or dynamic (e.g. event emitters) data streams with ease via the employed programming language(s), and that an inferred dependency within the associated execution model exists, which facilitates the automatic propagation of the change involved with data flow. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/javascript/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^] ^Downvote ^to ^remove
If you're using it with Mocha, Mocha itself handles promises now, and lets you use Chai with them invisibly. Using a function that takes two numbers and promises their sum, const promiseAdd = (x, y) =&gt; Promise.resolve(x + y); You can write this Mocha &amp; Chai test: describe('Example', function() { it('adds two and two', function () { return promiseAdd(2, 2).then(result =&gt; result.should.equal(4)); }); }); Note that you *don't* pass `done` as a parameter to the test, like you would for a callback-style one. Also note the `return`. 
I'd be interested in seeing some data concerning users who turn off JavaScript, particularly the amount of users who do so. I can only assume (albeit with confidence) that the number is extremely low, which is an immediate deterrent for spending development resources on creating content without it.
This is a community I participate in and a platform I use to build 2d based games, other wise known as RPG Games, since thats what the main focus of the platform is for. It's so easy your kid could do it, but it could become as complicated as you want it to be. These are just my thoughts and my journey through it.
That supposed to contradict what I said somehow? I said it was smarmy. Cheerful + rude = smarmy. 
&gt; You'd need to navigate to a new page every time you tried to move the map view Well that is how maps worked before Google Maps came along. You'd have to click an arrow on one edge to view the next 'page'.
&gt; You'd have to degrade to like mapquest circa 2000 or some of those government survey sites level of functionality... :) 
Speaking generally, there's a very good (in my opinion) [blog post by Reginald Braithwaite](http://raganwald.com/2015/02/17/lazy-iteratables-in-javascript.html) that goes into details of lazy streams/iterables (plus, [he recently revisited them and trsnducers](http://raganwald.com/2017/04/19/incremental.html)), but TL:DR; version is that in: Collection.from([1, 2, 3]) .map(x =&gt; x + 2) .map(x =&gt; x - 2) .reduce((a, b) =&gt; a + b, 0) if `Collection` is eager (like normal JS array), each `map`, `reduce`, etc. will apply a function to all items and introduce an intermediate collection, whereas if `Collection` is lazy, then `map`, `reduce`, etc. will work one after each other on one item from source collection at a time. Hopefully that made some sense :)
Why are you quoting your own comment back to me?
&gt; You'd have to degrade to like mapquest circa 2000 or some of those government survey sites level of functionality... which is... &gt;how maps worked before Google Maps came along. You'd have to click an arrow on one edge to view the next 'page'. ? same same but different? https://www.youtube.com/watch?v=7tTfL-DtpXk
This. Much as I would love a web that worked in command line browsers back there's virtually no incentive for anyone to do it.
???
Why can't you just hit hide and move on? It's a clever joke. No one's forcing you to comment here.
/r/ProgrammerHumor would also work. In fact, it will probably be (re)posted there shortly. Though, given the subject matter, it should go in /r/ProgrammerHumour, right?
You are totally spot on, this probably is the most relevant place for the content.. I just *really* don't want to see polarizing stuff like this become a trend here. That being said the post is funny.
This was pretty far over my head but interesting to scan nonetheless. Thanks for posting it.
Hello again :) try this ~~https://pastebin.com/dMCi035h~~ Edit: wrong element, try this https://pastebin.com/2rJWZu3J
please keep the political trash talking to *literally everywhere else on reddit*. 
I used to work at Yahoo and they measured this on their main home page (yahoo.com, what they call their front page). I believe this was back in 2010 or 2011 and if memory serves me correctly, it was a tad over 1% for overall visits (all countries), 2% for US traffic. I'm not sure if mobile was in this, they might have had a separate m.yahoo.com site back then. It's been a while, but I'm pretty sure the percentages above are accurate (for that time). 
This is a programming sub not a politics sub. I shouldnt have to make a freaking filter to filter out politics from a programming sub.
You're not the only subscriber to this sub. Tough.
Instead of complaining, why not just hit hide? Or do you enjoy making mountains out of molehills?
The finest code comment ever.
&gt;If it becomes a problem... But then... &gt;aside from a few reports This thread and that a some people dont want it is evidence that *it is already a problem*. You are getting reports and negative comments on it but then say "it's not a problem". I consider the programming subs to be just that. /javascript not /javascriptPolitics - Memes and other low-effort content is prohibited. - NOTE: The fact that a site was made with JavaScript does not automatically make it eligible for /r/javascript
Went through a month of your comments and you don't post anything related to programming. Why are you here pushing this shit?
Thanks for running me through the purity test there, champ
This is why _hide_ exists. You could have been over this hours ago!
By "problem", I mean either of 2 things: 1. It requires an inordinate amount of mod attention. 2. It results in copy-cat or follow-on posts. Neither of those has happened thus far.
Yeah ignore my question.
Ignoring for a second that any performance argument should be backed by actual numbers and even if you don't stop and think how the loop would ever terminate if at every iteration of the loop `i` would be reset to `0` (unless I misunderstand how exactly `i` is being "created multiple times"), if you look at [runtime semantics of `for` loops in ECMAScript specification](https://www.ecma-international.org/ecma-262/7.0/index.html#sec-for-statement-runtime-semantics-labelledevaluation), it specifically says that that first expression (oftentimes called *initialization*) is done once and then loop body is repeated potentially many times. Since all browsers today try very hard to conform to ECMAScript specification, this is the ultimate authority here.
Because moderators aren't perfect, I guess. (Especially, apparently, when they're frustrated over some other post that got kept around)
Still not sure why you can't just hit hide instead.
Then hit *report* and then hit *hide*. Seems like coming in and posting comment after comment is the much more complicated route.
&gt; posting comment after comment is the much more complicated route. Pot meet kettle. If my complaining is bothering you, maybe you should just hide it, rather than arguing with me about it. That seems the much more complicated route.
Just keep in mind that some of this is wasted time, no matter what spin you put on it, it's wasted time. I wasted many years on klik'n'play making game after game with now, 20 years later, nothing to show for it. If it makes you happy then go for it just realize what it is: a hobby.
&gt; If my complaining is bothering you It's not, don't worry.
Yeah there were implied &lt;sarcasm&gt; tags...
Ah, I don't think they worked. Did you learn about sarcasm tags on w3schools?
Here's a similar slideshow using CSS transitions instead of jQuery animations: https://codepen.io/lemmin/pen/QgjKve Also, your "Lady Investigations" image has a spelling error.
this was just really helpful for me
It's fine, but it's not preferable. (Function itself can't be tested)
I'm saying that based on the things Dan posts on twitter, github, and articles, his cheerfulness here doesn't seem fake. My intention wasn't to be contradictory but to provide more context in case you weren't aware of the commenter's history, but yes, if his cheerfulness isn't as you accused to be "fake" then it isn't "smarmy" or "rude" either And perhaps you should read your comments out to yourself, it seems rather easy to misinterpret them as being significantly more rude than the imagined fake cheerfulness
You have to apply for them, they don't show up to your door with a briefcase full of cash.
I'm being blunt and critical and I know it. I would argue that his cheerfulness is feigned/fake. But at minimum it's smarmy. He's being prickly about how he expects to receive complaints and it's showing. But now _you're_ being a real asshole, too. You don't get to tell me how to feel about his comment. You're contradicting my directly communicated experience here. **I think he was being rude**. You can't convince me that he's just _not rude_ by saying he's got a comment history of cheerfulness. In one sentence you contradict _yourself_. &gt;My intention wasn't to be contradictory but to provide more context in case you weren't aware of the commenter's history, but yes, if his cheerfulness isn't as you accused to be "fake" then it isn't "smarmy" or "rude" either I don't give a damn about his history or _omg so serious reputation_. This statement is rude in isolation. If your intention isn't to be contradictory then **don't contradict me**. --- Fuck off, this happened over a week ago, he doesn't need to be defended from people like me by fanboys like you, especially if you're going to do such a terrible job of it. To be clear, I'll happily drag you down to my level and beat you with experience. 
Thank you so much
Interesting, why do you think serverside rendering is a pain anyways? 
[This sub when a conference wants to create more diversity in its presenters](http://abovethelaw.com/2017/06/law-professor-files-complaint-over-women-only-screenings-of-wonder-woman/) vs. [This sub when someone writes a framework poking fun at a conservative politician](http://reductress.com/post/im-not-political-because-i-assume-i-will-retain-all-of-my-privileges-forever/)
I really hope this `hitjob-via-novelty-library.js` thing doesn't become a trend. Nothing good comes from this.
What the link is saying is to move the length outof the loop, which in some languages may be faster, depending on how the legth property is defined. 
Fucking nerds who think being the best is more important than being a woman. Damn nerds ruining CS.
They don't, but lots of developers want to create Progressive Web Apps (https://developers.google.com/web/progressive-web-apps/) and we need Service Workers to do so. Unfortunately Apple (https://webkit.org/status/#?status=under%20consideration) and Microsoft are dragging their feet on implementing Service Workers (http://caniuse.com/#search=service%20workers). I'm not sure what Microsoft's hang up is (though at least it is in development on Edge - https://developer.microsoft.com/en-us/microsoft-edge/platform/status/serviceworker/), but this is understandable on Apples part. Progressive Web Apps are a direct competitor to native apps. If they ever took off then this would seriously cut into Apple's app store profits. As always, follow the money. I suspect Apple will never implement the Service Worker spec in their browsers for this very reason. Unfortunately it is not possible to install a different browser on iOS that can support Service Workers since all browsers must use the Safari engine under the hood. Bottom line, web assembly is neat, but there are work arounds for it. There are no work arounds for Service Workers so it would really be nice if Apple had put their development efforts into supporting Service Workers instead of Web Assembly.
Your single line //@t "can sum" sum(1, 2) equals 3 would turn into a describe it with a assertion. // @t "has new pill" Thumbnail({isNew: true}) contains-dom div#foo{New} would turn into a describe/it with enzyme shallow rendering and asserting whether the dom element was generated. It does more than generate a one-line test. And it has more helpers to generated lots of other kinds of tests.
You forgot: 4 - There are substantial, very public efforts to promote the careers and status of underrepresented minorities in the tech industry, to the point that competent individuals in those groups have better things to do than give presentations at ElectronConf. Competent women and minority coders at that level can do much, *much* better than $500 and a plane ticket.
To a first approximation, though, *nobody* makes a living by giving conference talks. They do it for exposure, to raise their profile, to network, for industry acclaim, to advance the industry, etc.
I do this shit all the time (especially in Angular) and I'm one of the best programmers I know.
This is a 10/10 shit post and I love it. 
You're mostly right (that's some fine spec readin' there lou!), just thought I'd add some color. There is a distinction between creating the binding, initializing the binding, and assigning to the binding. With var, the binding is created and initialized only once and assigned to once per loop iteration. With let/const, a new binding is created, initialized, and assigned to for each iteration (and copied to a fresh binding in the next iteration).
&gt; who think being the best is more important than being a woman I know, having sympathy is hard. Boo hoo.
Are you telling me that you think those industries are actually misandrist?
I rarely post anything related to programming but I frequent most of the major subs, does that mean I can't comment either?
man
Could you do a Trump.js?
It would be a bad practice in functional programming. But modifying something is perfectly normal. Other languages have the `void` keyword for this exact reason. void myFunc(thing) { thing.property = "foo"; }
&gt;Again you haven't given a single professional reason for excluding better qualified speakers because they all look *too* alike. I NEVER said people should be excluded. In fact in another comment I said that uninviting people is insensitive and disrespectful of their time. I never said anything about quotas. I was simply refuting the claim that people don't care about the life experiences of the people giving the talks. I am 2nd gen Mexican-American, I weave my life experiences (including my culture and heritage, which my Mexican dad taught me to be proud of) into my talks all the times and have yet to hear someone tell me to "keep it in the lunchroom". I also don't worry about people assuming I got where I am because of "quotas" because that says more about them that it does about me. Feel free to continue to hide your culture and heritage in the tech community out of fear that people might think less of you, and to be so hostile towards learning something new about humans. I will do no such thing and I will continue to appreciate the life experiences of those trying to teach me something.
If you did really learn those languages you'd have no problem with Javascript. For example understanding pointers in C would allow you to easily understand references in Javascript. If you understood garbage collection in Java you'd understand GC in JS. Etc. And let's not forget ECMAScript's syntax (JS) is heavily influenced by Java and C before that. It sounds like your problem is not really understanding JS, but understanding programming.
What next, a day without css? A day without html?
&gt; Maybe I'm an idiot, but the combinatorics of all that state would kill even the most performant web server How so? Web maps are served as individual image tiles, usually* with a url structure like `/tile/{zoom}/{x}/{y}`, where `x` and `y` are integers that identify a specific piece of the globe at a specific zoom level ([more info](https://en.wikipedia.org/wiki/Tiled_web_map)). That corresponds almost too perfectly to buttons linking to `x+1`, `x-1`, `zoom+1`, etcetera. You could even load up a 9x9 grid around the currently selected tile with no problem. Caching is super simple as these are all GET requests with super predictable URLs. *Google maps specifically seems to have a different, obfuscated(?) URL structure based on a single hash, for reasons unknown to me. Mapbox, for example, uses the common URL structure. &gt; You'd have to degrade to like mapquest circa 2000 or some of those government survey sites level of functionality... I think that's exactly what the author wants: &gt; Maybe some kind of Streetmap style tile-by-tile navigation fallback?
**[! CITATION NEEDED !]** And we would like to see statistics showing this. Till then, we dismiss your claim due to no or anecdotal evidence. From all the time I've worked in the actual industry, we've encourage women to join. But due to their preferences, they choose other types of work that they feel is more fulfilling. I'll give you clue how my office are set (and yes this is anecdotal evidence), the technical side of things, it's 90% men. But in the Project management side, almost 95% women. We have even encourage women to try to take higher positions but they say they are happier where they are at. Are we sexist because we don't have more men project managers? No, this is a matter of choice. We had a woman director but she quit because she wanted to stay home with her child. The bosses left an open invitation if she ever wanted to come back. And I see this in tech industry all the time. To say the overall industry is sexist without real proof and not about choice is complete and utter bovine excrement.
thanks bro
5/7 at best
As someone with little experience using VS code, everything in this post seems extremely obvious and can be discovered at first glance.
I guess it depends? I would be concerned if my local school district had the same gender ratio that most STEM employers have, reversed or not.
Can someone please ELI5 this for me? 
\*makes initial conservative-party commit\* `npm install david-cameron` `ERR! david-cameron does not satisfy its peer dependency requirements`
Man, I'd love to look at this, but unfortunately github is blocked. Make sure you don't put it on Sourceforge either!
Yes, this is the only relevant bit. It's not about the `var` initial value (which would be hoisted anyway) but the loop comparison will be executed each loop so (theoretically) if you can cache any computation involved it would be faster, but javascript engines have now optimised away any reason for the developer doing this manually.
Some background reading: [Same origin policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same- origin_policy), and [CORS](https://developer.mozilla.org/en/docs/Web/HTTP/Access_control_CORS). Basically you need to proxy the response to get access to it. There are sites that offer free proxies (such as [crossorigin.me](https://crossorigin.me/)) but these proxies could go away at any time.
you should crosspost with /r/OfCourseThatsAThing
This curriculum looks solid. Thanks for sharing your experience.
Is submitting the form refreshing the page? I didn't run the code but it seems like it would from a quick read. Look into preventDefault() and add that to the validateForm function. 
Does politics belong in every sub? Dont we have different subs for a reason?
Why do you use the _ variable everywhere? Isnt the point of it that you don't care about the parameter? You literally use it the exact other way around. I think it looks bad and just makes the code harder to understand. 
Serverside rendering is bit of a pain because of user-specific data that the server needs to keep track of and use it while rendering pages on the server. Next.js actually solves this issue by a lot but still it's a pain.
In an ideal World, reddit _does_ provide us with the ability to literally make a sub for everything. But we live in an imperfect World where overlap occurs. And some people may not belong to all the subreddits they may enjoy due to the sheer volume of them available. This is a free freakin message board platform. People have some really high expectations on how it should operate. Mods are unpaid volunteers, cut 'em some slack. I know that quite a number of subreddits can make it look easy when in fact it probably isn't. _Especially_ with something as triggering as politics being an obnoxiously hot topic right now. I just think that even a handful of instances is far from an epidemic. Let the mods handle the situation if it does appear to start to get out of hand, trust them to work fairly. And in the meantime, take advantage of some simple tools you have available right in front of you.
I mean external CSS, everything should stay in my component scope, that's what I wanted to achieve, and did it thanks!
I can't believe you're still complaining about this. It's been like, 10 hours. This place isn't your personal safe space. Get over yourself.
Theresa May is the current prime minister of the UK and she sucks at public speaking. An election (that she called) is about to happen in the UK and May's campaigning has been a bit of a train wreck (in my opinion). She doesn't listen to people, she lies and she seems to repeat herself quite a bit. So the program works by asking it a question (content is irrelevant) and you get an answer that's been randomly formed from repetitive stuff May has spoken or concerns her during her recent campaigning. It's hilarious because it depicts beautifully how she sounds when she interacts with the public irl.
 Array.from(divs).forEach((el) =&gt; { el.style.background = '#ddd' });
 for(;;) { console.log("china") } Should probably add support for stopping at 140 characters in the future
It's not true. It's a misconception that I was also taught in my early JS days. It comes from this: for (var i = 0; i &lt; things.length; i++) {} what comes after the 1st semi-colon (;) is a comparison that runs in every loop, meaning the `length` property is fetched on each iteration a better more performant way to do it is: for (var i = 0, len = things.length; i &lt; len; i++) {} but for the sake of productivity this kind of micro-optimization is so unimportant at the beginning stages of a project that there is absolutely *no* value in doing it. Save micro-optimizations for when you're at the scale of facebook/twitter/instagram I'd wager that the during the first 2-3 years of a project's existence, readability &amp; maintainability is far more important than obscure optimizations it might have been true before ES5, but, with ES6 you can use block-scoped `let` or `const` to void the performance argument entirely.
"You'll find that JavaScript behaves as you expected with basic mathematical formulas!" You're silly
Ah.. I was thinking about Margaret Thatcher. On wikipedia, it says she's Prime Minister in office.. outdated?
Does it have developer tools?
This was also my understanding. Isn't accessing array.length really cheap anyway though? Like, there's no computation/calculation there it's just accessing a property of the array that has already been computed which is no more expensive than accessing a cached variable?
Wow, we dont even need web-devs anymore! Such a progress, astounding!
She was a former prime minister (1979 - 1990) who died in 2013. Theresa May's basically Margaret Thatcher 2.0 though.
For world output functions (console.log, for example), don't worry about it. If the function modifies the parameters or global state, return what's modified, even if you don't use it. This gives you more options for usage (especially chaining).
Try to be more clear when asking the question, i've tested it locally here and it works. If i understand you correctly you want to try to expand upon this, by removing the alert. great, you do that. but if you see no change when removing the alert, check if it is still cached. refresh the page. One tip: If you use Chrome, you can disable cache while developer tools is open. that makes it a bit simpler to troubleshoot if something goes wrong. 
Asfai understand Redux helps manage state for situations like these, you obviously have to still manage state per request. Can you expand on how Next.js is solving this problem? 
The most complex algo I've wrote in rec. was a path finding algo in arrays of arrays. Rec is cool but I don't think it's that worth in JS.
It depends on the language implementation - it could potentially be noticeably more expensive. Referring to the variable "len" in the above example will be a local variable reference, but "things.length" will lookup the pointer for "things", search its properties for "length" which will be a pointer to the actual value. That is how it would have been in a lot of older JS implementations. Worse, in really naive purely interpreted ones the statement would be reparsed every time, before those lookups are ever done, even if the loop goes around millions of times, so there would be a small saving from simplifying that part too. But modern JS/ECMA implementations are much cleverer than that: they definitely won't reparse the statement each time (likely it will be JIT compiled, but even if something in your code blocks that and every other optimisation the statement sill won't get reparsed every itteration), and they will probably optimise out the reference properly meaning you don't have to do it manually *unless* there is something in the loop that might change the contents of the array. I still manually cache values though because there are many more complicated examples and a reference to Array.length and it is a good habit (except in the very the few cases where it might harm the readability of the code). You might be using a more complex function call to determine the end value. For instance if you are reading the end-of-loop value from the DOM you will want to cache that value instead of searching for it each time. I wouldn't go around changing existing loops though unless I could demonstrate either a measurable performance change (in at least one target platform, while not having a detrimental effect in any other) or a readability improvement - that is just bikeshedding.
Username checks out!
The first part of the loop is only called once, your workmate is chatting bollucks
I've cross-posted it to /r/ProgrammerHumor, since no one else has. [Up-vote (or down-vote) away!](https://www.reddit.com/r/ProgrammerHumor/comments/6fzrml/theresamayjs_is_a_simple_javascript_framework/)
Also, see blog post describing the idea behind this here: https://performancejs.com/post/ewffd34/Introducing:-Lazy-arrays-in-JavaScript.
yes it uses chromium
depends on what exactly you think is "low level". Definitely it's better to know how the whole network stack works on multiple levels: for sure you should know application level protocols (at least HTTP(S) protocols), also Transport level (TCP/IP, UDP). Probably it could help sometimes to know Internet layer protocols as well (IPv4/v6).
&gt;It works fine for functions in strict mode. Good point. &gt;So, it only doesn't work for var which you shouldn't be using anyways. Sure, but if you transpile you're actually using `var` anyway, and the scope isn't actually isolated. For example { let $ = 'myStupidlyNamedVariable'; } will (unless I explicitly tell my transpiler there's already a variable named `$`) transpile to { var $ = 'myStupidlyNamedVariable'; } and if I was in the global scope I've just clobbered jQuery.
What are you guys writing, a high performance javascript video game? Ignoring the fact that he is wrong and attempts to do these kinds of optimizations may be less performance based on the engine, none of these micro optimizations are going to matter unless you are trying to wring every last millisecond out of your program. You're usually better served writing easily readable/maintainable code. Honestly, for most Web applications, I would consider the appearance of a `for` loop a sign that I've done something wrong. I'd wonder why I need a for loop instead of using native array prototype functions like `map` or `reduce`.
Well, algorithms and data structures could be useful if you want to go deeper. But it's rarely used in a real life, unless you're working on something specific (and in that case you always can learn specific stuff instead of learning everything in advance). Also databases, but again, it depends on your goals... Most of other stuff could be project-related, depending on what exactly required for one or other projects (things like neural networks, computer vision and so on). For a web development in general, you can also learn about UX/Usability and so on (it's not exactly technical stuff, closer to graphics design, but still pretty useful to making good UIs).
Great news ! This was the only browser (that really matter) missing for webRTC
This should be supported in Safari 10.3 upwards :)
&gt; Said no programmer ever hmm 10+ years work for a living as a web/javascript developer ;) Probably I wrote it in a wrong way. Of course, some algorithms are used all the time, but usually no need to implement, say, a search algorithm by yourself. That's what I mean. So, if you're going to work on, say, sea
This article implies that TypeScript cannot infer types at all, and they must be implicitly stated or default to any. This is not true.
Sorry if it came off harsh, but it simply didn't provide me any insight or helpful tips I didn't already know.
Yes array.length is a property rather than a function (as in other languages) so any speed difference is negligible. Worth noting though that it always gets the current length of the array, so if you are adding things to the array itself then you'll end up with an infinite loop.
* algorithms * lexers/parsers * organization/architecture * interpreters Most of these concepts don't really matter if high level or low level. I wrote a new diff algorithm a couple of months ago that is more efficient than the common Myers ON(d) approach. My algorithm executes in ON time. You can read more here: http://prettydiff.com/guide/unrelated_diff.xhtml I maintain a big beautifier and so over the years I have gotten pretty good at writing parsers. It is the parsers that prop up the beautifiers in my tool and do all the heavy lifting, so I have gotten much better at writing lexers/parsers than I have in writing the tools that make use of them. The concepts learned from this can apply at any level. In my open source tools the thing I have battled against the most is architecture. Specifically two problems: how do I share settings/options/state between various libraries (even if the libraries call each other recursively) and how do I make the same code work equally in the browser and command line. Again, the things I have learned from this can be applied at any level. I am trying to write a new language right now. I have never written an interpreter before, but I am trying to figure it out. Once I figure it out I can write a transpiler to compile my new language into another language and all for a different level of interpretation. This is a lot of work, but imagine never needing a lint tool any more and always producing efficient code.
[VSCode - Snippets doesn't show at the top?](https://github.com/tunnckoCore/modern-javascript-snippets/issues/9) - If that's your problem then add `"editor.snippetSuggestions": "top"` to your settings
No problem :)
Is knowing how to use Ramda enough? Just kidding :) that being said I am curious what exactly does 'good knowledge' of functional programming entail. Understanding of core concepts or popular libraries as well? 
Only use quotation marks for string literals. If unsure, try without them first.
as far as i know, js compiler does some kind of optimization for you (like cache the length in loops)
To be devil's advocate, in the example provided typescript would not know that n should be a number. 
Hi /u/styke, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index).
Nice thanks for sharing. It is a solid platform built on top of a solid framework. 
I work as a web dev programmer (I don't even touch design), and the (conceptually) most complex coding I typically get involved in I ever go is writing recursive functions. It doesn't happen often, but when its the best way to solve the problem, its extremely valuable to have had some practice with. Not a very complex topic, but the debugging is challenging and taking the right vs wrong approach can have a big performance impact. There's also some tricks with recursion that you might not pick up on your own (memoization is one I specifically got from an online course) that can be worth knowing. The other thing I'd say I've gotten a big benefit from knowing is database design principles and how to write useful complex queries. Even if its not directly part of your job, if you are working with complex data then understanding the process that happens behind the scenes (or being able to fake it / minimize the demands via client side processing) is very helpful. This may be specific to my job, which revolves around data visualization, but I'm pretty sure being able to discuss and sell this skill in interviews is what lands me work. One thing I don't know much about and kind of wish I did is design patterns and design architecture. I'm good at writing a process to do a specific somewhat-large task, but if its something like coming up with an entire framwork, I'd be shooting blind.
ugh, which OS / browser?
OP here. This is a project I've been working on for a while to create a public repo of interesting structured data, editable by anyone. It's still very alpha, so I'm looking for feedback on what to fix, what datasets to add, new features to build. thanks!
Rather than a for loop you could use reduce const numbers = [1,2,3,4,5] const newNumbers = [] numbers.reduce((a, b) =&gt; { newNumbers.push(a + b) return b }) console.log(newNumbers) // [3, 5, 7, 9]
If you just want to check for errors, then yes I think it is fair. But TypeScript is not meant to be just a type checker. It also emits code (ES5 or ES6), bundles, generates typings if you are creating a library, etc. It's designed to bring the full spectrum of typesafe programming to JavaScript. The type annotations serve to power the typescript language service (which enables autocompletion, refactoring, etc.), they enable more intelligent type checking, etc. TypeScript essentially is a replacement for Babel, Flow and a whole stack of IDE features you might currently use with JavaScript. TS can even bundle, although it's quite limited, especially compared to webpack. Flow is designed to only check your JavaScript for correctness, nothing more. 
Assuming you mean like closures in the es6 class constructor, the downside is that methods don't have any way to access that private info, unless you declare the methods in the constructor too, which can be slower.
Hi /u/joshmarinacci, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Please use the [Showoff Saturday](https://www.reddit.com/r/javascript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AShowoff%2BSaturday) posts for these types of submissions.
Not related to OPs question, but using things like map () is over 30% slower than a for loop in chrome (which is the most widely used by far and Node also uses V8 as well). It's actually the slowest way to loop through a collection currently. I think it is only faster in firefox, which has a marginal market share. So there are a lot of reasons to use a for loop over things like map.
The code makes it programmer only, I'd think. The humor makes it shift over to programmer humor.
I have known all kinds of developers and network engineers who have moved to Europe, the Middle East, and Asia. Most of them were defense contractors. If you don't drink but love to travel and eat great food you might consider looking for work in Kuwait.
The imperative version is way simpler.
yes
I don't care about which is better, but I think Flow's way of error reporting is off and will complicate the debugging. Typescript is showing error where type mismatch occurred, which is expected. But Flow is showing error on the function itself Imagine you have 20 function calls, how can Flow tell which instance is incorrect? P.S. - haven't used Flow, and just inferring from author's example
&gt; But TypeScript is not meant to be just a type checker And that's also its biggest draw as it gets in the way constantly, not just by lagging years behind Babel, but also by breaking language features and literally restricting the ES language. Just today i'm bumping into the next thing: `const v = new THREE.Vector3(...vector)` [Thanks TS](https://github.com/Microsoft/TypeScript/issues/4130). Why would anyone even want a typechecker to serve the entire language and let MS play gatekeeper for drafts? It's beyond my imagination and like /u/gajus0 said, it's going completely against unix principles. &gt; Flow is designed to only check your JavaScript for correctness, nothing more. That's what it's been made for: one task, one tool. Allows it to be small and be focussed on types, which is why it already resolves safer than TS despite the little time it had to come up. Also allows Babel to do its job without Flow taking over the build-flow.
Same.
I've not had the same experience. Typescript, once setup properly, gives a lot more than it takes, in the 2 years that I've been using TS professionally. It supports all of the language features I want from ES2016 (the rest/spread operator was the last one I was yearning for, and they added it in 2.1 I believe). What language features from Babel are you missing in Typescript specifically? If it's a stage 1 proposal then you can hardly be mad.. it's easy to add something to a language, but impossible to take away. I think in the end, it's partly subjective and you need to decide if you like it, but my development experience with TS has been incomparable to how I used to develop in JavaScript, and going back now would be a painful endeavor from my perspective.
[removed]
&gt; Blazing Fast but we need [Ludicrous Speed](https://www.youtube.com/watch?v=ygE01sOhzz0)
It's destructuring in the parameters with a default value. That default value is whatever f() returns. Let's take it apart a bit more: function f() { return [2, 5]; } function k([a, b] = f()) { return a + b; } console.log(k([1, 2])); // 3 console.log(k()); // 7 One step simpler: function q([a, b] = [2, 3]) { return a + b; } console.log(q([1, 2])); // 3 console.log(q()); // 5
 const arr = [1, 2, 3, 4, 5] const result = arr.reduce((a, c, i, orig) =&gt; { if (i === orig.length - 1) { return a } return a.concat(c + orig[i + 1]) }, []) console.log('result =&gt;', result) // [3, 5, 7, 9]
I'm glad to hear about the upcoming comment syntax. I've preferred Flow over TS because of this issue . Flow always felt like a progressive enhancement meant to JS. Whereas The .ts file separations feels like fragmentation of the jS ecosystem al la copfescript. hope this comment syntax changes that 
Keep up the awesome work - TS has transformed the way we work with JS. Thanks for that!
It seems like it's sort of default parameters, but not quite: let f = (a = 2, b = 3) =&gt; a + b; f(); // 5 f(1, 2); // 3 let g = () =&gt; [2, 3]; g(); // [2, 3] let h = ([a, b] = g()) =&gt; a + b; h(); // 5 h(1, 2); // exception: TypeError: g is not a function A function with default parameters I can override the defaults. Here, I can't override them. It seems more like binding parameters. 
TypeScript 2.3 is already out so you can try it now! In fact you can add a `// @ts-check` comment to the top of a `.js` file in the latest VS Code and you'll get checking in the editor without even needing to install TypeScript.
 let g = () =&gt; [2, 3]; let h = ([a, b] = g()) =&gt; a + b; h(); // 5 h([1, 2]); // 3
yep, exactly that.
Oh for sure, in this contrived example his statement is true. I was just pointing out that TypeScript comes with type inference. Even if you don't specify any types, TypeScript can have an immediate impact using its intelligent control flow analysis and type inference.
This is not really a product, just something that would simulate how I would write the code from now on focusing on the bundle size and build performance. I'm not running Uglify against ES6 for those tests as I don't think this is currently supported by Uglify anyway. I just do what would be typically done in a webpack setup, which is transpiling ES6 to ES5 with Babel and then passing it to Uglify.
Like I said, unless you are doing insane amounts of iteration, it's a non issue. You're better served by having less bug prone and maintainable code. Plus, coding to the compiler or in this case interpreter is not even a good idea since what it optimizes can change.
It seems to require HTTPS even for localhost, unlike Chrome. In the Safari Technology Preview version at least.
I see now. The default argument is an array returned by a function call, which is destructured into **a** and **b**. To override the default argument, pass a different array to be destructured. This is the kind of syntax that would drive Doug Crockford crazy. Thank you!
The "g is not a function" error message is pretty funky, though. I have no explanation for this.
So... We tried flow... we're not happy. We're trying TypeScript and it looks way better. Infer what you want.
I should write a class to do this in a developer-friendly way. EDIT: I did it. https://gist.github.com/Crowes/db8ccab94c1f5c2d94e1b3ac31a990be
You are not a mod here.
&gt; Whereas The .ts file separations feels like fragmentation of the jS ecosystem Really? A different extension feels like a FRAGMENTATION OF THE JS ECOSYSTEM? 
Well, that settles it then.
I'm not calling it one, it is one. And it's a superset of javascript, why stop talking about it here?
This is an extremely opiniated article clearly favoring Flow. We (studio for Electronic Arts) have been converting an entire code base (in production use) from JS to TS over the past 8 months and with a sane tsconfig and linting we are forced to type everything before committing. We are only allowed to use any and as in very specific cases when converting and not at all when writing new code. Our graph would definitely not look like the one shown in this article. It is just misleading. I would recommend everyone to take this article with a huge grain of salt.
&gt; Would you find this functional solution more complex than imperative? Yes. It's like an order of magnitude more complicated. &gt; breaking down problems in FP style often times results in [...] [YAGNI](https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it) FP is great... when it's convenient.
##You aren't gonna need it "You aren't gonna need it" (acronym: YAGNI) is a principle of extreme programming (XP) that states a programmer should not add functionality until deemed necessary. XP co-founder Ron Jeffries has written: "Always implement things when you actually need them, never when you just foresee that you need them." Other forms of the phrase include "You aren't going to need it" and "You ain't gonna need it". *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/javascript/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^] ^Downvote ^to ^remove
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [sirisian/ecmascript-types/.../**README.md** (master → 52003c9)](https://github.com/sirisian/ecmascript-types/blob/52003c9aa0fffa3612ec6c7c86dd86b7faf9842e/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dina2lk.)^.
Wouldn't the transpiler simply transpile it to a good old iife and call it a day (or make the var names unique)?
I have Alicea's course. I didn't learn or understand anything. Too much theory. 
Sent you an invite to a Slack group that's pretty active. Lots of JS developers in it.
Conversion would be in the browser. I have already tried at the database level. I don't want to deal with the server if I can help it since it's cold fusion. 
Have you tried toLocaleTimeString() ?
The "alt-right" is fighting on the free speech side.
Just because I didn't give a detailed explanation of how v8 does optimization doesn't mean I am "unaware of how JS is actually handled at run time." I also never "instructed people that it's faster." Try reading what I write before arguing with some fictional person you've decided I am. &gt;Using a forEach isn't any more bug prone or less maintainable to any developer who actually codes. You clearly didn't understand what I was saying. Doing plain iteration like a for loop is usually indicative of writing code that is unnecessarily imperative. What is the purpose of writing a for loop? If you are transforming a collection into a new collection, use `map` or `filter` or something. If you are turning a collection into different value like a sum, object, or some collection that isn't easily constructed with `map` or other functions something else, use `reduce`. It allows much better code reuse, it's easier to understand, and despite your protestations, it is not going to break the back of your application. &gt;and when you aren't working on pet projects that will never get real traffic, you should probably think about memory This was particularly funny. Try reading what people write and refuting what they say instead of some half baked attempt at character assassination next time.
I tested with babel and the typescript compiler, and neither will turn a block into an IIFE. It does make the variable names unique, but only based on what it can see. So if you have jQuery (for example) included using a `&lt;script&gt;` tag, the transpiler doesn't necessarily have any knowledge of it. The following works: let a = 1; { let a = 2; } // becomes var a = 1; { var _a = 2; } Though then we have `_a` still polluting the scope. Note that transpilers also rely on static analysis, so this introduces another way for `eval` to break things: let a = 0; { let a = 1; let b = 2; } eval('typeof a') === "undefined" // false eval('typeof _a') === "undefined" // true eval('typeof b') === "undefined" // true // becomes var a = 0; { var _a = 1; var b = 2; } eval('typeof a') === "undefined" // false eval('typeof _a') === "undefined" // false eval('typeof b') === "undefined" // false The issue is that ES6 is the first time we have block-scoped variables. Since there is no equivalent in older versions of the language, there have to be tradeoffs. I'm sure I could find issues with minifiers as well, since they will actively strip the block from the code. For example { let a = 2; } console.log(a); // via babili let b=2;console.log(a); In my opinion if you need to isolate a scope, you should explicitly isolate it instead of relying on block scoping to do it for you. Block scoping relies on both strict mode (for functions) and ES6-specific language features (for variables), and never works for `var`. None of these issues even exist at the cost of an extra 8 characters. Unless you *really* need an arbitrary block for some reason, just use an IIFE. Or better yet, a normal function or module.
Fantastic explanation, thanks mate.
I get it, you're mad that Map is crap right now. Don't worry, you'll have your glory day.
You do not need to use Redux and when you do use Redux you do not need to store all of your data in Redux. Data like the current state of an input field is probably best handled by the React component that is managing that input field. Data like the set of currently loaded users and whether they are stale is more global and may be a good candidate for Redux. In general, I try to structure things so that my React components act as simple views over my Redux store. If I can view the same data in multiple ways then I definitely store it in Redux.
Yeah, I get where you're coming from. I thought maybe some people were just getting on the bandwagon for not understanding what React was all about, but I can see you guys have your uses for it.
Slack is for chumps. I'll PM you some dank IRC.
IRC? Haha
Sent
vue.js
Thanks!
page's assets are all broken
Should I use _____? The answer is "it depends on what you are doing."
hmmm can you guys crack this one? im not great at java screenshots: http://prntscr.com/fhohqk http://prntscr.com/fhoi15 
yea, ur not actually rendering the async component on the server. you're rendering a temporary `&lt;Loading /&gt;` component most likely. ..Therefore anything inside that component is not available as far as SEO is concerned. In addition, once the client loads, an additional request is needed to get that async chunk, which adds an additional delay. It's all in the article. 
Here's something I wrote for Hyper: https://github.com/bsharper/hyper-capture/blob/master/capture.js It uses `getUserMedia` and `MediaRecorder`. If you look at the `getSource` function, you can see how to change what is recorded. Let me know if you need any help.
I am loading it on the server. It's not exactly hard to disable the client side JavaScript to check
It's a feature.
Hi Jason! You might be interested in existing slack groups: - https://techbeacon.com/46-slack-groups-developers - http://blog.flatironschool.com/the-11-best-slack-groups-for-new-programmers/ (mostly non-JS, but some good ones) Also check out https://www.freecodecamp.com/, they have local meetups and Slack groups in a lot of cities (not sure if they have great coverage in North Dakota). I started JS when I was around your age (a little younger). Keep at it! :)
Whats your experience with Flow?
The `g` flag act like a `catch all` flag unless regex will act like a `catch first`. You also have `i` for case insensitivity, `m` for the use of `^$` in each line against the whole string, etc..
Do you know if there is another way of doing it? I've seen it done with images before like here https://stackoverflow.com/questions/28756890/fill-svg-path-element-with-a-background-image-without-tiling-or-scaling but doing it after the SVG has loaded is causing issues
https://www.nodejsdesignpatterns.com/ This is pretty good. There are many git workflow that you could found around internet.After going through one of them, it would be good to go over this. http://ohshitgit.com/ This saved me from really quagmire situation. Hope this helps.
I miss the old days of desktop applications. I would program in C++ and use my favorite framework to do UI based stuff. Qt was a delight to use. Hell, even Visual Basic was easy. Limited, but easy. And it was consistent; you perfectly knew what your clients would get whenever they ran your program. What the hell happened? Now we got clunky, difficult to style UIs based on scrolling DOCUMENTS. An app is NOT a document. What did we do wrong, Marty?
I believe you can do it by using an feImage filter. See [here](https://www.smashingmagazine.com/2015/05/why-the-svg-filter-is-awesome/#image-fill).
The biggest Chrome JavaScript transition is underway as Chrome retires its former JavaScript engines in favor of the new Interpreter + TurboFan ones. You can test it now by running benchmarks in current stable Chrome versions and in Canary/Beta versions of Chrome which enjoy the new engines. I ran the first 3 benchmarks of this list on Chrome and Chrome Canary on Windows and I noticed the variations. A couple were slower on the new engines. The Chrome developers will eventually be able to optimize it further and try to close the gap. What do you think? If you have JavaScript code that demands a lot of performance, does this transition worry you a bit? Part of the reason that Chrome is changing is to make it a better browser on resource constrained mobile, battery powered devices, IoT etc. Which are overtaking PC for browsing the Internet. But that could worsen it on PC for a while.
&gt; Framework fragmentation is a source of frustration for many but this is how the language as a whole continually evolves for the better. At the same time, it would be nice if the community just chose one thing for a while and focused on making that thing better. Might even get language/browser level features to support it if that happened.
All valid JS is valid TS. Hence by definition, it is a superset of JS.
Maybe we should have separate subreddit for ES6 articles.
We've recently switched to using [prettier](https://www.npmjs.com/package/prettier) and [lint-staged](https://github.com/okonet/lint-staged) (so you don't get bugged about errors in legacy code, and changing 1 line in a file won't result in a hundred-line-diff) in the [Genomic Data Portal for the National Institute of Health](https://github.com/NCI-GDC/portal-ui/tree/e9ab159227a2dc06e883b13dfcfa0ee0a0019b81) and it's been a great experience No more builds broken due to lint errors, no more worrying about code inconsistencies, no more eslint warnings/noise to distract you in the editor's minimap
Eh, no, not all valid JS is valid TS. TS tries to be a superset, but it is racing with new ES features.
Can't wait for Standard to go away.
btw when choosing who to play agains, choose the button on the left(aka real person) as I am not finished with the bot
It's incredibly silly, but I loved the idea of standard right up until it foisted no-semis on us. I wonder how much that has hurt its adoption (for anyone reading, prettier allows _some_ level of configuration. Dangling commas and single-quotes are the ones I care most about)
https://github.com/kamranahmedse/design-patterns-for-humans
Sooo very misleading: http://npmcharts.com/compare/standard,prettier,prettydiff,js-beautify,esformatter Prettier still has a way to go to become the top formatter. For a short time, *very short*, at the beginning of 2016 Pretty Diff became the number 1 formatted based upon NPM download counts, but then Pretty Diff abandoned NPM.
Are they really comparable? Standard is more of a linter/error-checker that also provides some formatting rules while prettier deals exclusively with formatting. I'm pretty sure a lot of people use `standard` for their linter and then use `prettier` to ensure consistent formatting and just use the `--no-semi` option with it.
"Oh, you think darkness is your ally. But you merely adopted the dark; I was born in it, moulded by it. I didn't see the light until I was already a man, by then it was nothing to me but BLINDING! The shadows betray you, because they belong to me!" -- Bane I've only known the web. I have a hard time believing that it's much more difficult to style than a C++ app. Can you give an example of how a Qt app is styled? 
&gt;I've only known the web. I have a hard time believing that it's much more difficult to style than a C++ app. Can you give an example of how a Qt app is styled? Well, basically you adjust the properties in the widget. Recent versions of Qt allow you to use... (drum rolls please...) CSS. Yeah, ironic. But here's the thing: In Qt (and in other desktop GUI frameworks), behavior is taken for granted. You, as the end user, won't accidentally scroll the window trying to click on a menu item; pop ups work as intended; you can move windows around with zero effort; you won't need to jump through hoops to make a data table that actually works; all those things are already included by default. But the best thing is that you won't have to worry about which version of a browser you have because the app doesn't require a browser on the first place. 
I misread your post and just had a knee jerk reaction. My b. Tangentially related, my brother is a nurse. He's fucking jacked, but he won't listen to my advice and become a psych nurse with the big ass needle.
After doing some rather weird choices and scaring away a huge userbase in their upgrade, I am afraid this might make angular loose the frontend framework race. React has a massive community, is easy to get started with, and performs really fast. React only handles so much though, and instead of supplying tools for server comm and utility-functionality they leave it up to you to solve this using whatever lib you prefer.
&gt; No, you don't need a framework. However, if working in a team setting, it makes sense to choose one. Maintaining and extending a framework with known conventions, an active community, and robust qa provided by millions is preferable to dealing with someone's opinionated architecture. This is a common argument, but it is usually flawed. For this argument to be valid it requires a disposition of trust. Ultimately software exists in layers and there is risk and defects at each layer. Typically, we assume, the lower the level the more stable. With regard to JavaScript the lowest layer is the specification followed by the browser implementation. Browsers sometimes have critical defects when executing or interpreting JavaScript. I know because I reported one to the V8 team before and you view others from their open bug tracking dashboards. Major browsers get far greater visibility than any framework and yet they occasionally still have their own defects. Frameworks are JavaScript utilities which means they are beholden to the limitations of the supported browsers they run on. A vanilla JavaScript browser application is also a JavaScript utility running directly on a browser. The technology standards and levels of support offered by the major browsers in support of JavaScript isn't a mystery. It is common knowledge that is commonly available. This means a well written and well tested and well visited JavaScript is no more or less likely to be defective than an incredibly well supported framework. Applications written for use with a framework are not only reliant upon the browser to get things right, but they are also reliant upon the framework to get things right. Somethings the frameworks have defects of their own. Software written to require a framework disposes trust that the framework will accept some technology considerations without defect in exchange for the application developers not having to manage common aspects of the technology. In addition to defects and risk there is also the subject of performance. Any time you artificially inject an additional layer there is more work to perform and performance slows as a result. A good example is the standard DOM methods versus querySelector or querySelectorAll which are about 2800x slower. They make code easier to write and manage, but there is a very real cost to that ease. A well written vanilla application doesn't have any performance penalties from a framework to contend with. Its performance barrier comes straight from the browser just as it does for a framework.
If you want to make sure NOTHING ELSE gets the call, in your function that catches the keystroke, use preventDefault and stopPropagation off the event. https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation
2 spaces is the shit yo
This is absolutely false. The only common language that uses a 2-space standard is Ruby. By far the most common indent styles are either tabs or 4 spaces.
That's an interesting point I'm not sure if they occupy problem space I just realized I do use js-beautify for a few of my projects, but not to format my own source code, but rather for cleaning up / reindenting user-entered html and js
##Declarative programming In computer science, declarative programming is a programming paradigm—a style of building the structure and elements of computer programs—that expresses the logic of a computation without describing its control flow. Many languages that apply this style attempt to minimize or eliminate side effects by describing what the program must accomplish in terms of the problem domain, rather than describe how to accomplish it as a sequence of the programming language primitives (the how being left up to the language's implementation). This is in contrast with imperative programming, which implements algorithms in explicit steps. Declarative programming often considers programs as theories of a formal logic, and computations as deductions in that logic space. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/javascript/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^] ^Downvote ^to ^remove
Not necessary good or bad, but the approach I like to take is to deal with the logic on the client and let the server just pass signals and serve pages. I'm kind of working through the same type of thing right now with [this](https://codepen.io/cdeutmeyer/pen/qrzNrm?editors=0010).
Yeah, I can see where something derailed, and had similar problems at first. The thing is my application really never needed to deal with more than 4 records at a time, I'm sure if I was in your position I would have the same feelings and try to solve it the same way, or maybe decouple my components a lot more to keep the same data model, which would mean a lot of reworking. Thanks for the tips, your story really made me see some of the problems that may arise in the future
It hadn't occurred to me to apply js-beautify to my own source, nor has it occurred to me to use prettier for user-entered code May have just been me ;)
I don't think the Object.assign usage is easier than using this. It only confused me more.
Eh, no, not all valid {1, 2} is valid {1, 2, 3}. {1, 2, 3} tries to be a superset, but it is racing with new {1, 2} features. 
I think this is a little too early to announce at this point. You need to prove that you are keeping up with pulling upstream fixes AND that you are keeping the quality of your library on par with C3 AND that you have the motivation to keep this going longer term.
&gt; We have places where they are required: nope We do. let foo = 'adsf' [1, 2, 3].forEach(v =&gt; console.log(v)) Uncaught TypeError: "adsf"[((1 , 2) , 3)].forEach is not a function let foo = 'adsf'; [1, 2, 3].forEach(v =&gt; console.log(v)) -&gt; 1, 2, 3
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [mackness/react-redux-connect-four/.../**index.js#L17** (master → 6efa937)](https://github.com/mackness/react-redux-connect-four/blob/6efa937310aa5a012b22d2c4ef7f34ad6bbe32de/client/utils/index.js#L17) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dioq5ss.)^.
Since the question was already answered, I'll tell you something else: There is a huge pitfall. You don't have just to check if Ctrl + whatever was pressed, you also have to ignore it if Alt is pressed at the same time. On Windows, AltGr equals Ctrl + Alt. Also, there are keyboards without an AltGr key where Ctrl + Alt has to be pressed to emulate AltGr. There are many keyboard layouts where AltGr is used. https://en.wikipedia.org/wiki/AltGr_key So, do not create any Alt + Ctrl shortcuts. If you create any Ctrl shortcuts, check if Alt was pressed. If you create any Alt shortcuts, check if Ctrl was pressed.
That wasn't what I was saying at all. The parent comment claims that &gt; Two spaces is *very* common in *a lot* of languages Like it or not, this is factually, provably false. In recent years, 2 spaces has become more popular in JavaScript. I never disputed that.
Good code would use for-of. The point was to show what would happen if you have a string literal followed by an array literal.
It can be all cool and etc, but you can't build complex apps using JSON. You should be crazy to define such data structure. But yea, good idea.
&gt; Yes, often times lines of code can be separated on multiple lines, or your code editor might wrap a line. The semi is a sure way to quickly see that the statement is finished. How is the end of a line not a good indicator of a complete statement? foo = bar doTheThing() counter++ These three lines read perfectly fine as statements. I still don't understand this argument for the life of me. &gt; My brain muscle would never adapt. Too bad for you. &gt; A few common edge cases are worth having them everywhere. If I move lines around, I don't want to be adding or removing semi's based on the need. Just always have them, it's not hard. Prettier and Standard both warn and protect against these edge cases, which hardly ever happen anyway. Chances are, if you run into the aforementioned edge cases, you're probably trying to be too clever. &gt; See #1 People need to stop confusing objectivity with personal preference. If you like to use them, then cool, do it. But don't say they're required and imply everyone else should use them just because you like to.
My point was that code like that is indicative of trying to be too clever. Plus, Standard and Prettier protect against these edge cases, and they hardly ever show up. I've been fine without semicolons for years now, and this has never been an issue for me.
 let x = function foo(x) { console.log('foo') } (function bar(){ console.log('bar') }()) Logs: bar, foo There are cases where you can omit semicolons, but they since you can't omit them in all cases, they aren't optional.
&gt; I still don't understand this argument for the life of me. Then don't reply to my comment... &gt; Prettier and Standard both warn and protect against these edge cases, which hardly ever happen anyway. Chances are, if you run into the aforementioned edge cases, you're probably trying to be too clever. There are many instances that are completely valid. I get that prettier will check for them, and many linters can to. My point is, that if you aren't using a formatter that fixes these for you automatically, you have to manage adding in or removing a semi base on how you format your code, which is just painfully annoying. Just think of the days of not having trailing commas in function arguments. &gt; People need to stop confusing objectivity with personal preference. If you like to use them, then cool, do it. But don't say they're required and imply everyone else should use them just because you like to. I never said this, nor do I even believe this. --- To return to my point, *editors* (the thing you use to view and write code), terminals, and a number of other tools, will wrap long lines (**your code**). These lines may or may not split on something that might look like an end statement. This semi confirms that you are at the end. Many other popular formatting styles split statements on separate lines for *readability* or *organization*, things we developers enjoy, and make our lives of reading and writing code **easier**. Examples of this can be seen with a method chain, or a short circuit. A semi is like a period. It looks like you're using periods in your sentences, so I will assume you understand the concept. This is what semi's are for, for us people who read and write code all day. Thanks, now if you have a real reply, I'd love to continue to discuss this hot topic if you are going to actually give me a real reply, not just say "I don't understand, so you're wrong."
I'm sure many here will disagree with me, but Reddit is hardly a place for serious programming discussions, even more so when we're talking about a personal preference. Besides, 2 spaces really is the shit my wigga.
&gt; Then don't reply to my comment... &gt; Thanks, now if you have a real reply, I'd love to continue to discuss this hot topic if you are going to actually give me a real reply, not just say "I don't understand, so you're wrong." Well no shit, I understand what the argument actually means, just not why people make it. It doesn't mean anything. The point I made was that the end of the line itself serves the same conceptual purpose of a semi with one less character. Saying that it "helps to easily see the end of a statement" isn't a useful thing to say. &gt; My point is, that if you aren't using a formatter that fixes these for you automatically, you have to manage adding in or removing a semi base on how you format your code, which is just painfully annoying. Just think of the days of not having trailing commas in function arguments. Well, if you're not using a formatter/linter, you're already shooting yourself in the foot in a ton of ways not even related to semis. Undefined variable accesses and such, no? Because of that, I don't think the argument is as applicable in the realm of a linter-less environment. An ASI mistake should just be considered a syntax error. Just one harder to debug. Like undefined variable accesses. &gt; A semi is like a period. It looks like you're using periods in your sentences, so I will assume you understand the concept. This is what semi's are for, for us people who read and write code all day. Sorry, but this overused analogy is just awful in general. JavaScript is JavaScript, not English. Periods are good in English because sentences are always clumped together in massive paragraphs like this, and help separate thoughts. But JS code is often separated by, well, new lines, so the need for a period disappears there. &gt; I never said this, nor do I even believe this. Fair enough. I pop a blood vessel whenever people bring up the edge cases and use that to imply going without semis is 'wrong' in any way, because it's not; I've done it, and many people have done it, and this argument ignores reality completely for the sake of this stupid meaningless 'correctness' /r/javascript seems to love so much. All that aside, nothing against you or anyone personally. And apologies if I came off as a dick.
Stopped using semis about a year ago and I will never go back. Haven't run into an issue once because of a missing semi, code is much nicer to look at, and it's one less thing I have to think about. I really don't understand why people make such a big deal about it.
This is what you said: &gt; but they since you can't omit them in all cases, they aren't optional. Which is what I was responding to, which is false. They are optional, because plenty of code exists without a single semicolon in them, regardless of how many edge cases you want to bring up.
Maybe don't include claims like "hilarious talk" when posting a video that seems to be of yourself... Leave the compliments to other people. 
They missed the point of the virtual DOM, because all their examples have direct DOM manipulation, e.g. [this one](https://play.celljs.org/items/O4Mf6y/edit) onkeyup: function(e){ document.querySelector("#h").$text = this.value} Is this framework some kind of joke?