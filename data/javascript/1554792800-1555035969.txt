There’s no way to ”push” values to a generator. Try to come up with an async generator function which listens to an event handler without dropping messages. The nice thing about channels is that a function which returns a channel can be treated exactly like an async generator.
Sounds like it will be a pain to update when a new Chromium is released. Unless the rendering and JS API functionality is modular and can be updated separately.
You don't need to learn Java, no worries :) I should note that I'm still on the previous version of WebdriverIO, so my setup is probably a _little_ bit different. That said, it appears to say that you need to add a `capabilities` key to your `wdio.conf.js`. The documentation of that option is [here](https://webdriver.io/docs/options.html#capabilities). Presumably, if you'd want it to work for Chrome and Firefox, you'd have to add something like this: capabilities: [ { browserName: 'chrome' }, { browserName: 'firefox' }, ], (Assuming you have Chromedriver installed as well, which should be the case if you use selenium-assistant.)
Just set your search engine to DuckDuckGo and use bangs: `!gh godot`
I wouldn't underestimate microsoft engineers, I'm sure they already have a good work-flow to merge features from and back to chromium
They could've made Edge open source and available to other operating systems. People could've fixed some of the underlying issues Edge had. Such a shame.
Am I crazy or did you just describe redux saga?
Or BehaviorSubject from rxjs
it's important that you use open source dependencies so that you can easily contribute updates as necessary &gt; node v10, but are there any backwards compat issues to worry about? what difference does it make anyways? you *must* do this work by the end of the month, so if there are backwards compat issues to worry about, then, well, your team better get started already — or you could end up in a *real* pickle if not even for security, you'd better upgrade just because the world (your dependencies) will soon just leave you behind, and only support modern versions of node you might want to peruse the document ["breaking changes between node 6 and 8"](https://github.com/nodejs/wiki-archive/blob/master/Breaking-changes-between-v6-LTS-and-v8-LTS.md) i recommend you just whip up a new git branch, and start the migration to node 10 as soon as possible, confronting each issue as it arises, leaving one commit for each fix the upgrade probably won't be so bad, and there's a good chance you'll finish the job in one day, but it could be a week or more — the more your team has fallen behind, the worse it will be.. now you're paying technical debt i strongly recommend you use [nvm](https://github.com/creationix/nvm) to quickly and fluidly switch your active version of node on-the-fly as you switch between git branches about me: i threatened to leave a company because they didn't want to upgrade typescript in a timely fashion — after some arguments, the result was that i was promoted, though i would have been satisfied either way maintain your own quality standards, because you'll get what you deserve
Does the demo work on mobile? Nothing fired for me - but looks interesting!
Ractive looks awesome. Mustache on steroids. Thanks!
You mean like yielding and returning arrays that contain a list of events ?
I guarantee you that Microsoft engineers will be making significant contributions to the Chromium project if it is shipping with as major a product as their default internet browser. Do you mean to say that this is in some way distinct from Google’s contribution to the Chromium project?
Considering the amount of people in the world, that’s probably true for me too, and I’m a novice
You can also do that with arrays. &amp;#x200B; const array = \[1, 2, 3, 4\]; &amp;#x200B; const \[first\] = array; // array destructuring works off the index &amp;#x200B; So you can also do this &amp;#x200B; const \[, second\] = array; // this will grab the second item in the array &amp;#x200B; You can also nest them both which I found out recently which is cool. So &amp;#x200B; const data = \[ { firstName: 'No name' } \]; &amp;#x200B; const \[{ firstName }\] = data; // this will grab item at index 1 and then do object destructuring to pull out the \`firstName\` prop from whatever was returned
For me the solution was to wake up earlier and work on my personal project before heading out to work. It's hard at first but if you make it a habit it works pretty well.
Well, if that is what he means, he should be more descriptive about why rather than spout off in some dismissive manner.
I think anyone who has forgotten *anything at all* about JS can say that as well.
I have figured it out, for WebdriverIO only, not using any other selenium programs. For starters, the code from [https://developers.google.com/web/updates/2017/04/headless-chrome#using\_webdriverio](https://developers.google.com/web/updates/2017/04/headless-chrome#using_webdriverio) is deprecated already really, for example, `desiredCapabilities` is not enough, `capabilities` is not set and `.init()` is removed as a function. I tried to modified the code from [https://webdriver.io/docs/gettingstarted.html](https://webdriver.io/docs/gettingstarted.html) for chromium, for what I have debugged, like setting `hostname` and `port,` and running headless for firefox. To start `geckodriver` for firefox, ./geckodriver --port 4444 To start `chromedriver` for chromium/chrome, ./chromedriver -p 9515 then my code to execute in `nodejs`, const { remote } = require('webdriverio'); (async () =&gt; { const browser = await remote({ hostname: '127.0.0.1', // ================================ // port for firefox // ================================ //port: 4444, // ================================ // port for chrome/chromium // ================================ port: 9515, logLevel: 'error', path: '/', capabilities: { // ================================ // In Linux (Debian), either chromium or chrome, // they work the same way. It will look in $PATH for google-chrome first, // if fail, then it look for chromium // ================================ browserName: 'chromium', // ================================ // firefox // ================================ //browserName: 'firefox', // ================================ // option for chromium/chrome only // ================================ //chromeOptions: {args: ['--headless']}, // ================================ // option for firefox only // ================================ //"moz:firefoxOptions":{ // "args":["-headless"] //}, }, }); await browser.url('https://webdriver.io'); const title = await browser.getTitle(); console.log('Title was: ' + title); await browser.deleteSession(); })().catch((e) =&gt; console.error(e)); Sources for debugging: 1. [https://webdriver.io/docs/options.html#capabilities](https://webdriver.io/docs/options.html#capabilities) 2. [https://webdriver.io/docs/gettingstarted.html](https://webdriver.io/docs/gettingstarted.html) 3. [https://developers.google.com/web/updates/2017/04/headless-chrome#using\_webdriverio](https://developers.google.com/web/updates/2017/04/headless-chrome#using_webdriverio) 4. [https://github.com/webdriverio/webdriverio/issues/2581](https://github.com/webdriverio/webdriverio/issues/2581) Documentation: 1. [https://medium.com/@mannyluvstacos/using-headless-chrome-for-your-selenium-tests-with-webdriverio-ce99b09d564](https://medium.com/@mannyluvstacos/using-headless-chrome-for-your-selenium-tests-with-webdriverio-ce99b09d564) 2. [https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless\_mode](https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode)
Sweet!!
It isn't just the cost of the OS upgrade and the infrastructure project to make sure it is properly rolled out to hundreds/thousands/tens-of-000s/... users spread over many sites. There is also replacement hardware as old kit might not have usable drivers for newer OSs, and all that custom legacy software the large old companies tend to have which might not work as-is and would need to be (expensively) replaced because literally no one will work on upgrading it (perhaps the company or internal individuals that made it is long gone and the source in escrow is found to be something so bad that they can't pay enough to make anyone they'd trust be willing to touch it). On top of all that there is a large amount of less specific risk aversion that resists change. Even if staying put costs *more*, it might be the preferred option because the current risks are known &amp; mitigated but change might throw up new ones. I don't like it, I certainly don't agree with it (by sticking with the bad situation because of legacy, your legacy problems will only get worse), but I understand the position. I'm just glad we've (only recently) got to the point of no longer having to support IE8 at all for our client base...
https://i.imgur.com/oGyB1M7.jpg
&gt;It’s only gotta be cheaper, not cheap. It doesn't even have to be cheaper. A company with a sufficiently risk averse culture may resist change even if staying put costs more.
If Microsoft really wanted to win some goodwill with developers, they'd hold up on this horseshit, and provide a major fix / upgrade for IE11. A lot of us still have to support that POS browser and it's a fucking nightmare.
That's great that you figured it out, and shared it for people running into this in the future. As a tip, I'd really recommend you to look into selenium-standalone, so you don't have to start the drivers manually yourself.
Probably feature flags. Much of Chromium is probably feature flagged anyway because many features were at some point experimental. Merging codebase back and forth is also a pretty common workflow for organisations like Microsoft, they maintain forks for a bunch of things.
Just sent you a msg. Really interested in study group for js too
Yea sure, I will look into it. &amp;#x200B; For now, the code below should work, also from [https://developers.google.com/web/updates/2017/04/headless-chrome#using\_webdriverio](https://developers.google.com/web/updates/2017/04/headless-chrome#using_webdriverio) but it won't work for some reasons, for starting server in the same script that I execute, only for `chromedriver` though, have to install it via npm, npm i chromedriver --save then add the code to the script, const chromedriver = require('chromedriver'); const PORT = 9515; chromedriver.start([ '--url-base=wd/hub', `--port=${PORT}`, '--verbose' ]); need to debug, later
Hi /u/Techtrick02, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This guy also grows more beard than most people ever will
\- Can only add one item \- Products flicker/jank \- Pagination not working \- Indentation is all over the place \- Commented code blocks; Use the power of git \- Odd (IMO) directory structure.
Be very careful of using bitwise operators for casting or comparison. const res = ("6" | 10) === 14 console.log(res) // true
Nice. The site looks slick. One issue I saw was with the quantity in the cart shows 0 when an item is added to the cart and the cart is opened.
Would love to see more diversity in the rendering engine world but it's now just blink and gecko.
Sometimes I forget jQuery is a thing. Does that count?
Google doesn't just contribute to Chromium, they own it. Any contributions Microsoft makes are subject to Google's review and approval.
Well that's the beginning of the end for UWP.
Might as well thank the real author which is the KDE project. Made possible by the work of Torben Weis, Martin Jones, Waldo Bastian, Lars Knoll and others circa 98.
1. Homepage "+" button purpose not clear. Some normal user might even not use it. Should add "add to cart" label. 2. Need some toast feedback when product added into cart. 3. Cart columns are too wide. Should limit width for better readability. 4. Use row lines or zebra style in the table for better readability
I dont know how this happen, it works fine for me
somethings really wonky in the pagination logic
I saw this guy give a super masturbatory talk a few years ago about how he was never going to give any more talks. He’s a smart guy. He’s done lots of great things for people, and shares all his knowledge. But, please, spare me this self righteousness.
-I can add any number of items -Products are fine -pagination works here the rest i am a begginer i have only one month in the front end dev field thank you for the encouraging
Well JavaScript is a fairly forgettable language 😂
Not just that but since node.js uses v8, Chromium was always going to be favored even if Mozilla resurrected XULRunner. Perhaps one of their mistakes was pushing XUL, but on the other hand HTML/JS wasn’t going to be performing enough at the time XUL was being designed.
it xorks fine here
I'm on Chrome mobile on a android phone The pagination does not work. It half works but then the number of pages don't properly update or something. You click apple and there's 6 pages but after the 2nd page it's just blank. The design is pretty basic but either your images aren't the same size or your margins are weird as the + signs are different lengths
Code wise there is definitely room for improvement. I know you are relatively newbie but you are making good steps. Reducer logic is very strange with all the finds. Without thinking about it I can already tell that code is doing something bad. You are not using functions like filter or reduce that can do what so ever of your for loops are doing. E.g, you have a for loop creating a filterableProducts array which can just be replaced with filter. You are doing something weird with "this.props.reRender" if you are using redux this should be unnecessary because you'd want coupled state to live at a higher level so you can avoid manually forcing a render cycle. You should be working with the data and props from higher components up the chain to really cause renders reactively. I'm on a phone and those are a few things I remember as I looked thru the code for a minute. Good luck and cheers.
That's what she said
Firefox has different goals than them fundamentally. User privacy, data protection, etc. Probably easier to take Chromium and shove in their bullshit hooks to turn it into MS-Chrome.
Thanks for the feedback. I should note, that I am 100% new to bitwise, so I require further explanation and or link to good resource that explains it!
Yea, I am wanting to understand what the `|` is doing.
The punishment seems a bit disproportionate to the crime. It would probably be enough to throttle their internet connection to 28.8 baud
Nice post, I didn’t know Uber and Pinterest are PWA’s. Keep the good work!
I wonder if they are going to push this to windows 7&amp;8 users now. From what I understood, they couldn't push Edge because of an incomparability with the OS. There's no problems with Chrome based browsers.
order a "bondage kit for beginners" on amazon tie your girlfriend up work on personal projects
Just as it should. Defailt value is applied when no key is defined, not when its value is falsy. In your example `id` exists in `{id:null}` therefore no default is passed
If you actually read the article his pretty humble
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/css] [DropCSS v1.0.0 - An exceptionally fast, thorough and tiny unused-CSS cleaner](https://www.reddit.com/r/css/comments/bb7j3y/dropcss_v100_an_exceptionally_fast_thorough_and/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
It isn't about contributing back. Many times the code companies develop has nothing to do with anything that would be useful to upstream; yet the licence forces you to release it. Moreover, you are on a fallacy: even if they didn't open source *their* code, it does not mean they didn't contribute at all. They may be sending fixes to common code, or even simply good bug reports (very valuable), running tests, etc.
This is correct, but entry level /r/learnjavascript
Bitwise operators are numeric operators. They expect to be used with numbers. When you use an operator that is specific to a certain type with a value that is not the expected type, JavaScript will convert the type automatically for you. You've probably seen this with other operators before too !"myString" // converts to boolean +"123" // converts to number Bitwise operators not only convert to numbers, but also convert to integer (non-decimal) values. ("33.5" | 0) === 33.5 // becomes (33 | 0) === 33.5 // becomes (33) === 33.5 // becomes false Some minified code will, or optimized code used by emscripten, for example (though it also uses it to represent type), will use this behavior to provide shorter versions of Math.floor or parseInt (where it makes sense). Math.floor(12.3) // 12 parseInt(12.3) // 12 12.3|0 // 12
What has diversity brought us much other than compat hell. Even Blink and Gecko are enough to have crippled pointer events. Wouldn't it be great if web tech could actually work for once? The argument has always been features, but with javascript running outside the browser, framworks dominating the view, npm making the standards, we're way past vendor mandated specs anyway, nobody wants them to make more. If they could just fix their engines and make them faster, i'm sure i'd value that more than 10 browser engines that keep us from making progress.
Sounds cool. Congrats on v1.
&gt; Since they're not forking They are not forking? Citation please? It is almost a certainty that they have forked it. What you mean is that the fork may not be public, but that is another thing, and it does not mean they are simply wrapping it up.
Something that will serve you well in the future if you want to be in this industry- learn to take feedback without getting defensive.
&gt; Defailt value is applied when no key is defined, not when its value is falsy. More specifically, if the value is undefined, whether it be because the key doesn't exist or if the key does exist but has a value of undefined. const {id = 5} = {} id // 5 const {id = 5} = {id:undefined} id // 5 const {id = 5} = {id:null} id // null
You have a lot of interactive elements that aren't tabable because you're using divs/spans instead of proper semantic elements like buttons. Learn Web Accessibility and start adhering to best practices. https://developer.mozilla.org/en-US/docs/Web/Accessibility should be enough to get you started.
It's nice to see Mozilla moving forward and trying to improve, very significative after [Microsoft started eating Google food](https://redd.it/bawjft). As a Firefox user, I can't wait for it.
&gt; the == operator is actually more powerful and more useful in our programs than ===, and in fact, usage of == should be preferred and === should only be a last option. You can pry === from my cold dead hands. I fully understand the rules for coercion and the way that the type system works. That's exactly why I never use ==.
I don't follow your logic. Those technologies will be available in Chromium, and therefore all services and pages will work equally well in all Chromium-based browsers. If Edgeium wants to incorporate more features or standards to their browser, they still can, whether they contribute or not to the main Chromium. Therefore, Google has no power to restrain Edgeium because they are not even obligated to contribute it back. Worst case scenario: it is exactly as before, and the same issues apply: they diverge into two competing browsers. The advantage here is that, at least for the moment, Edgeium will be as compatible as Chrome.
Better forget it forever
The reason they switched to Chromium/Blink in the first place was to avoid having to maintain their own seperate browser engine. Forking Chrome (rather than just using it) would negate that advantage.
I'm naturally more productive later in the day, so even if I'm up at 7AM to spend 8 hours coding for work (and \~2.5 hours total travel), I still find that I often have some time spare for my own projects, up to around 5 hours maximum. There's plenty of times when I don't have the energy, or motivation to work on them, but I've found that being busy breeds motivation to work on my own projects. Solving problems and improving them is usually relaxing, especially since I don't have client requirements to meet, instead only having to meet my own expectations. &amp;#x200B; My energy is almost completely drained by Thursdays, so I'll usually take at least a few nights off each week to avoid burnout.
It is not mobile responsive i can tell you that.
Thanks for sharing
Yeah but how did you create that list of events? And why wouldn’t you just iterate over events?
 It sure why you were downvoted, but I have you an upvote. jQuery does some amazing things, but most all of it can be done in vanilla JS now. No reason to load an entire library and add page weight when you can write specific code that you need with vanilla JS.
Ask GF if she's up for something new: abandonment play.
Oh I thought we were being mad at people, not praising them. Apple let Google take WebKit and then take control of the browser market.
That’s a good point. So much automated testing gets done in Node.js nowadays...
What device and browser are you using ?
No. Google has no power whatsoever over Microsoft. Microsoft can build a completely different browser on top of Chromium if so they choose, with new standards or whatever they want. They don't need to use the Chromium code as is, nor they need to contribute back their changes and get them accepted. It is exactly the same as before. And of course making a renderer is harder each year, but that has nothing to do with browsers. It has to do with people using it as an app platform. Whether that is good or not is another topic.
With you. Such a claim needs to come along with a good chunk of explanation. I don't even want to know what the rules are for coercion. In my mind, you shouldn't be comparing two values that are not of the same type.
Ahh I see it now. Yep
I mean yeah? \`await\` and \`yield\` are very similar control flow structures (take a look code that compiles with regenerator runtime for example).
It is actually possible to [publish](https://medium.com/@firt/google-play-store-now-open-for-progressive-web-apps-ec6f3c6ff3cc) PWA to google play store
Cool. I'll give a whirl.
`==` is good for one thing and one thing only: checking if something `null` or `undefined` (with `== null`). If you're intentionally using weird type coercions to compare values, your code is probably smelly and confusing.
I think, any kind of eshop needs SEO. Its ABSOLUTELY CRITICAL for you. (unless you have other source of incoming traffic)
Didn't Kyle announce that he was leaving the Speaker circuit like, 4 years ago at Fluent Conf?
You asked for feedback, and the person above gave you feedback. Did you want them to say "good job" and not help you?
This Kyle is wicked knowledgeable, no doubt I’ve always found people that brag about their esoteric knowledge of JS write god awful code—usually to prove they know more than others
Just a side project for now, mostly wanted to play around with React/Typescript. I'm a civil engineer by trade; I specialise in creating water models for utilities so they can simulate how their network is running or will run in the future (future growth mainly; what if we add 1k new houses to the network, will it cope?). Modelling software is expensive; the tools to create and run simulations can be up to $50k per licence. They also have view only licences,; I'm not sure the cost, but as its enterprise, I wouldn't be surprised if it was $10k+/seat. Potentially a utility could deploy this software internally so more users could see the results without having to fork out tons of cash for a viewer licence. Depending on interest I might keep going or just put it on hold, have pushed it to my network, and we will see!
But dont we force the user to use the specific browser if we publish just PWA?
Diversity brings us the ability for standards to not be controlled and set by one entity. The end result here is a Google controlled and dictated web standards. I understand the compat issues but having 20 blink browsers does not remove those issues. You'll be facing compat issues between browsers who are on X version or Y. It's not really any different. Biggest example here on the above is supporting the Samsung browser. It used random daily builds of blink/webkit and shipped it. Hard to ignore when there is so many devices and users of this browser for your customers. I'd rather a decentralized system that competes.
Hi /u/HadyElHady, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Reminice, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/NEINGAGBOT, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Firmsolution777, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Unless you want to write code that runs on the most prevalent platform in existence.
Hi /u/murdock_RL, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Stopped reading the answers and started skimming the questions after the second or third. This entire article is one big advertisement for a conference, his book, more advertising for the conference, and a reminder he has some Kickstarter going.
Ha, I was just looking at my post and the sub I posted in and thought, sheeeeeet, wrong sub!
If it works for you ©, then no worries. It must work for everyone.
Can you run it on your Reddit post? /s
Why is it still added to asp.net core templates?
Sorry I fixed the problem LOL, i didnt notice it does not work for Brands
I made a chrome extension for students at my school that automatically imports the user's homework into a Google Calendar along with the URL to the assignment online.
I tend to see those devs as intermediates on the verge of senior, when trivia knowledge of the language starts to become a detriment to your code. This type of thinking leads someone to using the \`\~\` operator with an \`indexOf\` (when \`includes\` didn't exist) and then 6 months later no one has any idea what that bit of code does.
Not really: we got transpilers and nowadays even compilers.
Call me old fashioned but I prefer apps that can work without an Internet connection.
I stopped reading after ”JavaScript Theologian”. Really? Why on earth do we need to borrow words from religion to describe a javascript programmer? Ridiculus.
Yes, at the current moment a native app is generally going to be a better end product than a PWA. Native views look and feel better than a CSS component toolkit. Performance and animations also feel better on native apps. In my opinion, the best solutions right now: \- If your app is meant to be used on desktop or mobile: create a PWA. If the app becomes popular enough, then make a React Native version \- If your app is only meant to be used on mobile, then just make a React Native app, and a simple informational website that gives app store links. If the app becomes popular enough, and it could have some use, then make a web version.
I definitely see that, but service workers can also achieve a lot here
Soo.. a PWA?
Hence.. PWA?
You seem to think forking necessarily means that projects diverge; which is not true at all. They can work on their fork and keep merging the Chromium code or rebasing on top of it. That is what you can read from that sentence (plus that they will probably still collaborate with upstream). You can't assume from that quote that they will keep their releases 100% equal to Chromium.
I think it depends if your app needs an internet connection to actually be functional. For example Uber is unusable without a connection anyways so it wouldn't really be affected as much by not having an internet connection. Obviously apps like Notes or whatever shouldn't need an internet connection at all because they can actually function without an internet connection.
I worked with a dude who did a lot of this shit When he left, I learned his style (masturbatory FP) &amp; got decent at refactoring it He tried to recruit me to his next gig for a few years Once he left, I took the job &amp; was able to decipher his shit they’d been struggling with He is now recruiting me to his next gig, and I’ve established a rapport with his new boss I’m going to make a career of decleverfication of this one dude’s code
Clearly did stop reading. You saw the word "Kickstarter" and assumed he was plugging one? It was in reference to the YDKJS Kickstarter that was 6 years ago and about his book (that's available for free) that he's most known for. I don't particularly like the guy that much, but make more of an effort before just trashing the interview.
This! Exactly this is it. I think the people who downvoted me are the usual jQuery fanboys who don't even dare to think outside of the box (and thanks for the upvote, btw). The reason I don't like it that much is because it's so overused that people tend to use it for *everything* they have no real solution to or even worse, for things it was not made for. This tends to lead to a whole culture of building your application on hacks and workarounds which can leave its ugly trails throughout a whole company. I get that jQuery is a really accessible framework and easy to get things done with and all of that stuff but let's face the facts, understanding, maintaining and debugging middle to large scale applications using it is a serious pain in the backside, as from some point on, you basically can never ever tell for sure what exactly is happening. The worst part of it is, that for many people the solution to problems with jQuery is simply to simply throw more jQuery at it, hacking their way around problems without actually solving them and creating processes of a complexity that's gradually harder and harder and less. And heck, why evenbother to understand anything when you just can make it work with jQuery. And for all the people who hate on me for this rant-ish post, please visit jQuery's GitHub page and realize: \- It has been on v3.3.1 since January 2018 \- Only about 80 commits have been made since then (that's about 5, maybe 6 per month), most of them are dependency updates, tests and minor fixes, no real sign of a v3.3.2 \- Their last blog post was made in August 2018 \- Get over it, accept that technologies come and go and don't use something just because you've *always done it that way*. JavaScript is so powerful today, you can save yourself a lot a time and frustration if you just do it the vanilla way.
Totally valid! Many teams are starting to move away from JQuery (I believe even Bootstrap is moving/has moved to vanilla js) and if you have the time to learn how to do it yourself I’d definitely go down that route. Even if it’s not something you’d do in a production environment (time constraints, or no point in reinventing the wheel when you know it works), a personal project is a great opportunity to learn something new and knowing exactly how something works / what it’s doing will give you a whole bunch of skills and a new level of understanding to take on to future projects.
I think you should try making the horizontal movement cover two spaces rather than one because the width of a character is so thin. Make the pellet twice as wide too
thanks for the drive-by snark :D
how so?
i AM SO SORRY I wasnt in the mood that's all
surely , it's not responsive at all
Well I have missed PWA's, this is the first article I read that tried to explain it, and it explicitly said that they have to run well on bad connections -- but said literally nothing about running without a connection at all. Every single app they talked about uses a connection. The article is also peculiarly vague about how they actually work. It says you can add them to your home screen but is incredibly vague about what, if anything, ends up on your device. Also upon googling it appears that it's possible to make PWA's work offline but it's certainly *not* the default, so I'll stand by my original comment.
I will look at that later, Thank you very much
Well ultimately PWAs will always be an additional layer on top of, say, the java interpreter on Android so there will always be a performance overhead there. While the feature set of PWAs are improving, I imagine there will always be a need for native development.
I blame myself, i was very defensive yes, thank you....i just was not in the mood
You're describing bad programmers, not a bad library.
m.uber.com is PWA. Play store version is still a native app. This is actually awesome example on differences between PWAs and native apps. Try them both, they look alike a lot, which is good. It shows that PWA can, if done right, look like a native app. But PWA is not as fluid as native app, opening/closing navigation drawer is much smoother in the app. You also can't open the drawer with swiping gesture on the web. I tested this on Oneplus 6, I'm curious to see how other phones react, so if anyone else tries this, be kind enough to share your findings :)
I fixed that, thank you
People don't like change.
Yeah, he has also a lot of other claims that really raise eyebrows. Like that other languages aren't multi-paradigm like JS, or that static typing is not really needed, or that JS is fast enough...
Awesome job, your pride is well-earned! Someone's gonna ask it, might as well be me: Any chance that, for Challenge Part II, you're interested in wrapping this in a Webpack plugin so it can be set-and-forgot in an app-wide toolchain 😁? For big React projects I'd _love_ to automate running this at build time on production builds, but avoid running it with a hot-reloading dev server. I notice that Purgecss has a Webpack plugin—is the underlying approach of yours similar enough to build towards one as well? I think that would really encourage adoption. (I've never really paid attention css-purging, but your post has me curious!)
This is the best tl;dr I could make, [original](https://www.theverge.com/2019/4/8/18300772/microsoft-google-services-removed-changed-chromium-edge-browser) reduced by 62%. (I'm a bot) ***** &gt; Microsoft has removed or replaced more than 50 of Google&amp;#039;s services that come as part of Chromium, including things like ad blocking, Google Now, Google Cloud Messaging, and Chrome OS-related services. &gt; Microsoft&amp;#039;s Edge engineering team is due to reveal more about its Chromium work during a BlinkOn 10 keynote tomorrow, and this will include more details on what has been removed and changed over Google&amp;#039;s own implementation of Chromium. &gt; Microsoft also notes that &amp;quot;Building Edge on Chromium was a relatively smooth process,&amp;quot; and that it has made hundreds of changes to Chromium to produce its Edge version with more than 300 merges so far. ***** [**Extended Summary**](http://np.reddit.com/r/autotldr/comments/bb8ybk/microsoft_has_removed_or_replaced_more_than_50_of/) | [FAQ](http://np.reddit.com/r/autotldr/comments/31b9fm/faq_autotldr_bot/ "Version 2.02, ~392684 tl;drs so far.") | [Feedback](http://np.reddit.com/message/compose?to=%23autotldr "PM's and comments are monitored, constructive feedback is welcome.") | *Top* *keywords*: **Microsoft**^#1 **Edge**^#2 **Chromium**^#3 **Google**^#4 **more**^#5
PWA can't access to your internal storage That's the reason I built my first ever app
That's hilarious. Do you have any methods for identifying the good code vs the estoric code?
Yes, I clearly did stop reading as I made explicitly clear in my response, even to the point of saying I was skimming the questions. The Kickstarter may have referred to an old one he did but that does not change the fact that the article was primarily an ad for that Amsterdam conference (which I considered going to a couple of months ago, to be fair).
&gt; Any chance that, for Challenge Part II, you're interested in wrapping this in a Webpack plugin so it can be set-and-forgot in an app-wide toolchain 😁? i personally don't use Webpack, but if someone wanted to contribute *and maintain* a plugin, i would certainly entertain a PR. &gt; I think that would really encourage adoption. for an open source project, "adoption" is just a synonym for a flood of unpaid support and feature requests, so it's definitely not a primary goal; this ain't my first open-source rodeo ;)
&gt; It isn't about contributing back. Many times the code companies develop has nothing to do with anything that would be useful to upstream; yet the licence forces you to release it. If it is not useful upstream, it won't get merged. How can you know that in advance? &gt; Moreover, you are on a fallacy No. You are talking about "may", I am talking about "being obligated to". I prefer the latter in such case. &gt; Will Microsoft send more patches and contributions to upstream Chromium than before? Almost certainly. Of course. As the most prominent user of Chromium code after Google it's in their very interest to diverge as less as possible.
U don't have a PWA if u cant use it offline. Some features might need a connection (like in native apps) but it's never mandatory to load a PWA. PWA should work offline by default! "Every url must be reachable without a network connection." [https://developers.google.com/web/progressive-web-apps/#reliable](https://developers.google.com/web/progressive-web-apps/#reliable) [https://developers.google.com/web/progressive-web-apps/checklist](https://developers.google.com/web/progressive-web-apps/checklist)
Physically?
My arguments for it have been: 1. Not having to deal with different browsers not working sometimes(Edge) 2. Not redoing work that's already been done by the community. 3. Focusing on the application we need rather than the UI. Do you have any counterpoints? Just trying to learn not trying to start a philosophical debate. We have a dev that insists on handwriting a js GUI for an internal tool that doesn't need to look all that great. It really slows down the whole project.
I'd stay away from cloning elements, its an inefficient way of rendering elements. Look at template literals(` symbol) in JS and create a template for each job. Then, if you need to filter, you simply clear your container div and re-render only the relevant jobs. You can do that with the Array.filter method.
https://developers.google.com/web/progressive-web-apps/checklist#all-app-urls-load-while-offline
Thanks for the reply. The reason why I cloned the divs was that if there are 100 unique jobs in the DB then there should be 100 divs that are created. Would the templates that are created for each job be created dynamically, based on how many jobs are present?
\r\n is a network newline, similar to \n you are used to. Just split it based on \r\n instead.
Talking about native apps, I've been interested in learning React Native, how 'native' can I go with it? Is it too hard to learn? Should I learn React first? If someone can help me with that it'd be cool, some good tutorials or ways to learn it the best way would be good too. Thanks.
Dammit that’s something!
Perhaps within the 'user' object / collection have a 'joined\_teams' object that contains all the teams the member has been added to? So when a member is added to a team, the 'joined\_teams' object could be updated with the team name. Then you only have to look in the 'joined\_teams' object / array / collection to find out what teams they are a member of...
Either way, you will have 100 divs if you have 100 jobs, theres no way around that. If there are performance issues, that is usually solved with pagination.
Have him get you a Pluralsight account get some education on his dime.
*you
&gt; If it is not useful upstream, it won't get merged. How can you know that in advance? I am not talking about code that is useful and that companies simply don't send upstream because they don't care. I specifically said: "code that has nothing to do with anything that would be useful to upstream". I am talking about code that is the business of the company and has nothing to do with upstream, even if it is developed within or alongside the upstream project. For instance, I can imagine /u/jrp70's company adding some features/tweaks to the SVG rendering or format for some internal reason that would never be part of a browser that follows the SVG spec. &gt; No. You are talking about "may", I am talking about "being obligated to". I prefer the latter in such case. No. There is no obligation to send upstream anything, whether it is a company/individual that made money, a side project by some student or hobby project for some developer out there. Not even with the GPL. That is not the intention of open source nor free software. If you don't want people making money from your software, you will need a different license. One more akin to proprietary ones, actually, because you want to restrict what people can do with it (making money) and also you want to force them on some thing (helping your project back).
I'd be very interested in something like this as more of a static analysis tool that would warn me of potentially unused selectors. It seems risky to me for use directly in a preprocessing pipeline, but for ascertaining code quality it could be very useful
I'd be very interested in something like this as more of a static analysis tool that would warn me of potentially unused selectors. It seems risky to me for use directly in a preprocessing pipeline, but for ascertaining code quality it could be very useful
I would learn basics of jQuery, because you're gonna find a lot of questions answered with it, and it's pretty easy to be honest
If you want to become a React/Node developer, than learning to make tabs with vanilla JS is not a particurarly great excersise, as skills you will learn (directly manipulating DOM) are irrelevant for either of those. People around here like to praise how vanilla teaches you things, but the thruth is that that VanillaJS really means "standard web APIs", JS is the same whether you use WebAPIs, jQuery, React or what-not. So just use the thing you want to learn and use. So unless you see your career as vanilla JS developer (there are such offerings, some even paid nicely, but at least where I live there are very few of them), use either React, or some existing tab solution.
But would a PWA app have access to the androids event system and hook into things like GPS updates when closed? Like could you close it and get a notification telling you your ride is here?
Got that already ;)
Browser push notifications are a thing, no?
\&gt; knowing exactly how something works / what it’s doing will give you a whole bunch of skills and a new level of understanding to take on to future projects If that were true, coding bootcamps would start with assembly (or better yet, execs written by hand).
Not everyone at Microsoft is coding kernels, I assume. Did they specifically assign previous kernel devs to this or are they doing that in addition to working on the kernel?
They replaced the debugger? I always found Chromes debugging features to be way better than other browsers' in the past.
There is always the option of wrapping your app in something like cordova or phonegap. It's not exactly the best developer experience though.
if you want to use a large framework like Bootstrap, Materialize or Bulma, you will get hundreds of unused selectors on each page. I'm not sure how actionable that will be to you. and fundamentally, thats what all css purging libs are best for. &gt; It seems risky to me for use directly in a preprocessing pipeline the main risk is forgetting to whitelist selectors that could get dynamically added by js. one strategy to reducing that risk is to keep a separate dynamic stylesheet that doesnt get purged but gets concat'd at the end, and you just live with a small but known qty of waste. however, if you have thorough testing/QA in place of the final deliverable, the risk is manageable.
It’s all subjective I go by whether my coworkers understand it after I’ve been confused by it That’s the only standard that really matters—readability for the maintainers
I already know the basic's of jQuery, implementing a plugin and/or working with jQuery is not a problem at all as I've done a few times in the past already. Thanks a lot for your reply tho :P
As in a file saved in wherever the temp file location is for that particular browser. Cookies without an expiry are session only, with a valid expiry date format they save as a physical file to store the cookie information.
Ah, programming trend reports, the augury of the noob. I wonder how many kids ended up stuck as peon technicians at sleazy agencies after following their direction.
Thanks for your input, muchos appreciations :)
I’m not 100% up to speed on bootcamps but imho having a deeper understanding of something is always beneficial. Anyone can download an npm package or use a jquery plugin, but as soon as you want something more bespoke you’re gonna have to code by hand.
I was not aware of this, thanks for your input \^\^ This sounds like a great and fun thing to do in the (near) future, I will absolutely look into this sometime soon :)
Service workers
No
you're braindead, we're talking JavaScript. it's about understanding the power and functional capabilities more at a core level rather than blindy copying prewritten functions. goodluck looking for libraries for ideas your boss gives or you think about. starting more from the core allows you to understand more. it doesn't have to be bytecode
React Native uses JavaScript and native UI components. That's the main difference between hybrid apps and RN apps. RN apps are not a webpage running in webview they actually use native components. You absolutely need to know ReactJS to be able to work on RN. My advice would be to learn the basics of react, make small web apps and then move to RN. &amp;#x200B; Look up examples of RN apps to get an idea of what is possible and what isnt
I’m still getting the same result, not sure what I’m doing wrong here. Maybe I’m going about this the wrong way. How do people go about formatting text in a mongo database? I just want to be able to have multiple paragraphs and subheadings without having to have an insanely large schema that will limit what the user can’t do.
I will code it by hand, and the skill of directly manipulating DOM is still going to be mostly useless for me if it is a React/Angular/Vue/whatevs project.
I believe you can go as native as to write native code itself if you needed to.
Cramming all this functionality into JS and the webstack has been a bad trend in the first place. This article is horrible.
Angular/Angular.js eked out React.js in Web Frameworks for Professional Developers. That's interesting, I thought React was way more popular?
Just because I might not find a library and will need to code a feature myself doesn't mean then ability to directly manipulate the DOM will be of any use if my project uses a framework. In fact my teammates would likely reject such code at review.
I've made a couple for my clients, I think they are great, especially if the main functionality is not complex. I'm not a mobile developer, so I would love to hear what the pwa downsides are performance wise
Never had mine crash, but for sure found them dated compared to chromium. Haven't used chromium for 2+ years, but I remember it constantly crashing and it's dev tools constantly dieing. Gonna be trying them out in the new Edge now
Hi /u/Sideburnt, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Rickygoacher, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mcqua007, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/rikilamadrid, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/BakonX, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/symbiosa, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thank you for this :)
Safari has started support for it and Edge is becoming Chrome so we've got all three major browsers. Firefox also support it so make it 4.
They need to bring setting tabs aside; tabs preview; the better InPrivate indicator; the gestures add on;the superior pdf reader to catch up with current Edge.. Not to mention the current UI even tho similar is far uglier than current Edge. WTF are those round edges in the tabs and url bar. Also the current home page looks much nicer. The good Part: I can use Adnauseam again
I dont think it does, for sure ios wont let you unless you can build something custom. I hit this problem when making a react native app
This is about a kid who is curious and learning. he's in school working on projects. you should promote kids who are curious more instead of pointing them to libraries. It will push him to the right way of looking at problems. my school had a teacher using 2004 methods in 2017 because nobody told him how shit works. remember this kid is learning and not in a professional environment.
If you use existing solutions you are still learning to solve problems, just not ones that already have been solved multiple times.
All of which are true.
Anyone know of any good tutorial for learning best practices to develop PWAs?
I agree, I don't think excluding these things is a good idea. but I do also believe learning to think in a functional way is a good way of understanding what you're writing and maybe how the library functions work on the inside rather than wondering,
&lt;ul&gt; &lt;li&gt; &lt;div&gt; &lt;span value="hi"&gt; &lt;/span&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt;
/r/iamverysmart material right there
&gt;Someone's gonna ask it Duh, I'm 1h late to the party. Would appreciate a Webpack toolchain integration \^\^
Disclosure: I work on the team that wrote m.uber.com Just to give some context as to why we have both a PWA and a native app: the PWA and the native apps serve _very_ different needs. The native app has all the features (pool, jump, share, driver profiles, etc) and thus is a large download (my install on my phone is 1GB). The PWA is primarily focused on core trip flow and it clocked at something like &lt;50kb last I checked. The impetus for developing a PWA was to make uber accessible to people with slow/unstable connections (e.g. in India), where even the 50kb app still takes several seconds to load. For that segment of the market, it can be unrealistic to deploy even a severely trimmed down native binary since it might mean upwards of 30 mins to download. So for that use case, PWA wins. We had one of the instagram folks come give a talk a while back on their PWA, and they highlighted some challenges they ran into w/ their deployment (e.g., that the rules for a phone to allow saving to home screen have gotten stricter and more difficult to pass, that some APIs are not there, and perf tuning can be tricky). So, as with most things, PWAs are not a silver bullet.
That basically tells me arrogant, stubborn, and dogmatic. I know a theologian studies religion and isn't necessarily a religious zealot, but any attempts at making favorable comparisons to cults rustles my jimmies.
pretty sure this is to get ready for more visual studio integration like blazor
Well, presumably you could either "push" them onto the array, or if you were using immutable structures, you would append a new entry to a new array, then pass that into the generator. The generator would then loop through all the items in that array and handle them how it wants, then yield back control once its done?
Yeah, I was considering that.
Please me too! I need a comprehensive guide!
I have a question, on mobile so haven’t read the article yet, but the question is how to monetise a PWA? I have a great idea but don’t know swift just JS! So would love to make it a PWA but there is no store etc...?!
:D great reply not as braindead as I expected
Well, I did not build this last wee exactly. I was reviewing my repos and found this. I built a canvas game as part of an induction process called Irunner about a year ago and felt very good about it. Thought I would share it here. [Irunner (Github)](https://github.com/shakeabi/irunner) It was my first canvas project and thus may have some bugs. It was built on vanilla javascript. It contains sprites and sound too. Do try it out, open up issues if you find any bugs, give a star if you feel it's good and give your comments... :) P.S. Works best in chrome ! [Irunner](https://shakeabi.github.io/irunner/)
from what I've heard, angular is way enterprise-y, it comes with all the batteries included which i speculate leads to less time spent on discussing which router and css library to use
Unfortunately, I hate them!
Thanks for the help.Will definitely dive more into it.
This seems like a good article: [https://medium.com/@amberleyjohanna/seriously-though-what-is-a-progressive-web-app-56130600a093](https://medium.com/@amberleyjohanna/seriously-though-what-is-a-progressive-web-app-56130600a093)
Vanilla means inflating with the dom api, nothing more. You don't learn javascript by wrangling the dom by hand, you don't learn how to properly structure your app, manage state, etc, probably even the opposite because inflating is an unprincipled and messy approach. Jquery is in the same boat. You wrote that you already know and enjoy React, stick to that, it teaches you how to lay out a principled structure, immutability, the basics of functional programming, things that are actually helpful. The dom api is an artefact, and even if you wanted to learn it, it's mostly hacks and workarounds around the broken nature of the dom anyway, platform knowledge that won't make you a better programmer.
I'd argue you generally shouldn't be writing code that could be either `null` _or_ `undefined` (alongside `T`). The remaining instances are so rare that I'd prefer just to check against those values explicitly rather than rely upon obscure, error-prone (from the dev perspective) language features.
You can pry static typing from my cold, dead hands.
1. Sounds like you just need some polyfills. These can then be removed once browser support improves without rewriting your code. 2. The language itself has already developed good, more lightweight alternatives, as have the community at large. 3. Why not just use React, Vue, etc?
If you think those are true, you should really step a bit outside JS and feel the wind.
I'd argue there's no justification for using it in a new project today (short of supporting &lt;IE9... _shudder_). It's bad in that context, and often deployed by bad devs.
God no. I hate native apps that are basically just web pages. I can just go to the web page, thanks.
Yes because Apple severely cripples the PWA experience on their devices
Couldn't they have done that on top of the existing APIs, like IntelliJs browser debugging feature that works with Chrome?
I suggest you fix your design on higher aspect ratio screens: [https://imgur.com/a/yPbNxJk](https://imgur.com/a/yPbNxJk) In the title, you put a yellow dot behind white text, this is very hard to read, as the contrast ratio is too low. The balls cut off in the bottom of the footer looks really crappy The white borders around the edges of the screen also look weird, like the page isn't width enough I suggest you make the footer sticky to the bottom of the page
Specially .net people.
Okay so you have an event handler which pushes events onto a queue inside the generator, but how would you notify the generator to resume execution when a new event is fired? What do you do if the queue is empty? I would argue that ultimately the solution you’re gonna come up with is this Channel class. 😉
But that would tend to drive down Angular's mention on Stack Overflow. My theory is maybe React seems so popular because it has high NPM download numbers driven by kids experiment with it, and there are lots of jobs, because agencies with high turnover use it. When it comes to building online applications, maybe Angular is silently more prevalent than people in the online community think. Maybe.
Codeacademy is free, also try to find some YouTube Channels it helped me alot from beginning. Good luck
I agree. You will never get the really odd APIs in a PWA. Like if you app wants to support fold able screens. A PWA can go a long way but if there are mobile phone specific tasks you want to run, a native app is still a must IMO.
I'm not sure why people are downvoting you. In my experiences interviewing with top SF companies, its all been in vanilla JS.
Ionic just got a large update (replaces Cordova with a new native layer called capacitor) and is a good middle ground between a pwa and react native.
Using react for ecommerce is a really bad plan, seo-wise, IMHO. React is made for complex user-interfaces with lots of interaction. Using it to render "normal" websites is a mis-use of the tool. You can make the site SEO friendly, but you end up adding lots and lots of complexity to the code that never really was needed if you just let the server render the site. But, for learning purposes, why not.
Not free, but there’s a guy That has great youtube videos on the channel code with mosh and I ended up taking his course on his website. It’s really well done, and for $15 a month, it’s hard to bea!
Khanacademy.org and for a youtube channel go to thenewboston hes great :)
With the new Context API and hooks, do we really need redux any more?
The android store let’s you list PWAs or you could just put all the apps functionality behind a login
This question comes up over and over and over. And the answer is yes. useContext has no way of bailing out of component rerenders, and so you entire application tree rerenders every time any portion of your state changes.
I don't use css libraries, but I'll make a PR to add what I envision and you can tell me if it's out of scope 😁 Pardon the tone of the first comment, I realize I came off pretty entitled. You've killed it on this project
What about network package scanners like wireshark? Don’t they help tracking down all outgoing/incoming data?
Hm. Ok. That is the best answer ive heard for this
Great insight! &amp;#x200B; How do you guys handle GPS connectivity when the browser is closed? Does the driver's app only see the last reported location?
Thanks for sharing this article! I love it when I randomly find someone linking to one of my articles. And thanks to everyone who is reading this!
Thanks for the great documentation. As a beginner I found that super helpful when I'm looking at someone else's code!
Thanks bois, love how a group could come together and help others
Smaller apps could of course use a small set of context's to avoid this.
Yes! They're totally not the same thing. I addressed this in [my Reactathon talk on "The State of Redux"](https://blog.isquaredsoftware.com/2019/03/presentation-state-of-redux/).
Yep, exactly. For the long, gory details, see [React issue #14110](https://github.com/facebook/react/issues/14110) (and particularly the comments by Sebastian Markbage and myself).
I know the article says it's not like Cordova, but I published a few apps like this that leverage the InApp Browser plugin and it's essentially the same thing. It loads an external site within the scope of the app. You can do as much or as little as you want in terms of navigation wrappers, and can define a scope. I'm not sure about session sharing as mentioned but wouldn't you want the cookie jar, and session data isolated to the app instance vs shared with all of chrome?
search for w3schools
Well, I, for one, always preferred browser based apps to native mobile apps. The phone, text messaging, and a browser are all I really use.
No, but you can use Typescript or an eslint rule to prevent accidental coercion.
Yes, shortly after I published the article, someone commented that you can do that since a few months. And I did exactly that because I was curious how much time it'd take: not much at all, fortunately. I cannot edit this article so I will probably write a separate article about this topic.
There are other methods of creating PWAs than with React...
Too many lines of codes as it can done with so much less.
Styletron uses a different approach than most of other CSS in JS libraries and adapts the atomic CSS pattern to achieve the best performance. It also has a minimal footprint and robust flow type definitions.
PWAs are useless as a general app substitute until Apple support them properly.
I think you would get the most predictably consistent results if you explicitly cast your values (with stuff like parsetInt, parseFloat, toString, etc.) before comparison.
Check if your school/company offers resources like Udemy or Lynda. My college gave Lynda to all student's and my company has Udemy for all employees.
tl;dr They invented their own algorithm, and it's the kind of cipher people invented in the 1400's.
You’re welcome!
React native is incredible, you can start with expo to get an understanding of the structure. To get started with react you could try a platform like codesandbox.io which takes care of a lot of details for you Freecodecamp is a good starting place for learning
Yeah, I'm going with Gatsby. It's a very simple website with not much new dynamic pages. So, Gatsby would do the job, I'd have to rebuild when a new "Plan" is added, which barely changes.
Why would V8 be favored over SpiderMonkey? Any performance differences between the two are negligible.
yea, I went on to say "Edge replaced it with Windows 10, although IE11 is still bundled with it."
you can actually compile react-native to web components. it's built into the react-native ecosystem (twitter uses it for their mobile site). it introduces the .web.js extension to clarify to the compiler that the intended platform is for browsers. It essentially compiles all the components to HTML5 equivalents, View --&gt; div etc
Hey! It sounds like you're just picking up JavaScript so I would recommend using just pure JavaScript. I would look up information regarding the DOM methods either on Mozilla or W3Schools. Generally, if you're looking for just basic interaction, animation, or validation, pure JS will do just fine. When you get into managing lots of data and states I find libraries/frameworks like ReactJS can help a lot. NodeJS is JavaScript for the back end, so unless you're intending to add a back end to one of your web applications it's not necessary.
Same JavaScript engine, similar idiosyncrasies, less chance of bugs based on JS engine minutia. And we’re talking about history: the performance differences were absolutely not negligible.
That's just not true.
Hi /u/KinCobalt, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/oodlestechnologies, this post was removed. Well, this is awkward. This subreddit is for **javascript**, which is different than **Java**. In other words, `javascript !== java`. Maybe try one of these instead: * /r/Java * /r/JavaHelp * /r/LearnJava Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/irishgeoffrey, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
That's really impressive! Especially since A cursory look at the project I happen to be working on right now shows that react-dom 16.8.2 is \~33kb alone. Do you guys have a blog post or a talk somewhere about your efforts? &amp;#x200B; Any chance you can link the pinterest talk? I found a blog post, but no talk... [https://medium.com/@Pinterest\_Engineering/a-one-year-pwa-retrospective-f4a2f4129e05](https://medium.com/@Pinterest_Engineering/a-one-year-pwa-retrospective-f4a2f4129e05) &amp;#x200B; Do you guys have a blog post about this
I'm curious, what is it that makes web animations so tricky to make smooth? I was an Android developer for about year and a half after which I switched to full-stack web dev, so I still don't know a lot about UI performance on web. I've seen some mobile websites that have reaaally fluid navigation drawers, but I believe that all of them seem to be written in a custom way, because whenever I try to use any existing frontend UI library or framework, or even write anything myself, that implementation of navigation drawer is always more or less laggy, never completely smooth. And bear in mind that we are talking about Oneplus 6 here, which means those animations are laggy even on most powerful phones.
Websites cannot access the local disk; that would be a security nightmare. You can use localstorage if you just need the website to store data for later and you don't specifically need it in a file: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage There is also the FileSystem API, which gives you access to a sandboxed location on the user's system, but it's not supported by all browsers. https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction
Thank you so much. Fortunately I know the fundamentals of pure Javascript but I actually never used this language. What do you think about jQuery?
If I understand your question correctly, then I’m afraid that isn’t possible. There’s no way for JavaScript to write to a file on a remote computer/server without some kind of backend (like a server running node, php or something else). JavaScript can (explained crudely) only affect the browser window/tab it runs in. It CAN send requests - to read a file or url, which usually doesn’t require much, but might be blocked by CORS, or it can ask permission to write (“POST”) data to somewhere. This requires a server and some code to receive, understand and grant permission for it however.
I didn't say there weren't...
Hi /u/PeastFul, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/msadeqhe, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/_jaycruz_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
No problem! I think JQuery is a nice tool, but I find that you can do a lot of the same things without JQuery without much more work. JQuery adds 87 KB to your website, so that's something to keep in mind as well for load times. If you're only using JavaScript for a small interaction on your website like a hamburger menu, or an animation like image sliding, I would say pure JavaScript is usually a better option. If you've never used JavaScript I'd highly recommend sticking with Pure JS for now, and once you've made a few projects you can see where certain frameworks or libraries can really help you. For me, when I started learning JavaScript I originally started with JQuery, but once I learned how to write my code in just JavaScript I found that JQuery isn't really necessary for a lot of applications.
My coworker wrote a blog post for m.uber.com here https://eng.uber.com/m-uber/ . Unfortunately I can't find a link to the video for the instagram talk :(
The file I am trying to read/write to is located in the same folder as index.html. There is no remove computer being accessed. I am running the tab as a file:// link to the html file on my computer and this is the only way I plan to use it.
I am only trying to read/write a file in the same location as index.html. I don't need access to everywhere on the disk. I am also running the html file as a file:// link in my browser and that is the only way I will be using it.
So... animations on the web might as well be arcane black magic. There are certain CSS properties that make hardware acceleration kick-in or get disabled, the type of position and overlaying matters and if you're using JS, then there's things like performance of blocking code, frame budgets, and GC. Some are things you can control, some you can't, and some you just throw stuff at the wall until something works.
While I understand why someone would want to develop a PWA (cost and ease of development), is there an example of a PWA that feels as good as a (well made) native app? Because they feel worse to me (compared to well made native apps, there obviously are tons of questionable ones).
&gt; but I'll make a PR to add what I envision and you can tell me if it's out of scope i'm not sure what that PR would contain. if you want to just collect the stats on what selectors will be dropped, just use the `shouldDrop` hook and log away. the demo code already shows this being done: https://github.com/leeoniya/dropcss#usage--api
Yeah, this goes back to what Aditya (the instagram guy) said, there's only so much you can do w/ the web as a platform for emulating native apps.
Wow, that is a pretty great article. Wish I had read that one when I made our company's PWAs last month. I would also recommend [this article](https://medium.com/dailyjs/goodbye-electron-hello-desktop-pwas-f316b8f39882) that focuses a bit more on Desktop PWAs; it has a great example [site](https://www.desktop-pwas.com/) + [repo](https://github.com/supercycle91/desktop-pwas) to draw from, too.
Like the other guy said, this can't be done due to security reasons. It doesn't matter that it's 'in the same location as index'.
If you use Brotli on the server as opposed to gzip, your compression results will improve.
&gt; Not sure why you were downvoted cause the whole "hurrr no jquery" thing is dumb and contrived hipster shit. we as an industry realized 5 years ago it's not necessary. we also realized it's annoying when people (it's mostly dudes who have been programming for a few years and don't even realize why we needed jquery in the first place) shit on jquery out of nowhere.
Yes we do need them
This post showed as removed yesterday. Then I see activity to the sites I linked through the paperclip dashboard with the ref code. Reddit post lives!
Thanks for the heads up!
[removed]
I have built some PWAs but the real challenge is iOS as Safari has very limited set of functionality compared to Chrome and Firefox on Android. To name at least a big one for us; no support for web push. Also, since background processing is not yet there, implementing location aware apps is tricky as the user must always have the PWA on foreground. On Android, there is a lot you can do with PWAs but because of the still limited APIs + lack of push on iOS, we moved to Flutter / React Native.
i don't think the number of kids experimenting would inflate the number that much..however lot's of CI testing done that don't cache the packages might but yeah angular being silently more prevalent can be a reason
If you still have it on the play store, can you send me the link here or in messages? I want to see the performance and such.
Yes. The debugger integration is like putting a window into your app. Components managing their state internally and through contexts can leave you flying blind. I don't really understand why people question redux so often unless they've never maintained a production app.
Sure: don't. It will be neither progressive nor web app.
Hi /u/alinear331, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
dont you need chrome to be able to add them to the home screen on android
Use node if you want to have access to the files system.
Then you'll need to run some sort of server too, e.g. node, that will do the file reading and writing for you. Like other people have explained to you, browsers cannot read or write files "next to index.html", because to the browser, that file is on a "remote server".
I had almost the same problem because I wanted to save the map editor data for the game I am developing in a JSON file, the solution I found was to send it to the nodeJS server and then the server sending the file back to download.
Check out the offline application cache JS API. It does what you want. I have built an app with it myself. After the initial download it caches all the files on the device permanently and can run in flight mode after that if you want.
Do people really care about native feel that much? Personally (as a user) I don't care if it's native or close to native, as long as it works well
I on the other hand feel that alot of people hang on to redux because they have invested so much time and energy into it. I guess my biggest problem is that people throw redux at problems that do not really need this level of complexity, at least in these context/hooks days.
Crazy that people find programmers patronising and arrogant, huh?
I don't know if I understand your problem or your solution completely, but it sounds to me like the difficulty is in communicating reference changes between elements that are essentially siblings. I'm thinking of this coming from React/Redux land - Perhaps using a 'top down information flow' style would help - having the state management be at the top of the hierarchy, and allowing the sub-elements to dispatch actions that affect a 'global state' of some kind.
Does this mean we can wrote Android apps in JS now?
Hi /u/7Geordi, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/manawolf146, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Wrapped in a useMemo however ...
You'd need to standardize and implement every single system API in a sandboxed environment, down to low level access. Won't happen. So yeah, there will always be a place for native apps, though many many common use cases can and will be solved with PWAs when they're done implementing the most common features
You're right, one of the biggest drawbacks of PWAs. But of course there's a spec in development: [Writable Files API](https://developers.google.com/web/updates/2018/11/writable-files)
&gt; Any chance that, for Challenge Part II, you're interested in wrapping this in a Webpack plugin so it can be set-and-forgot in an app-wide toolchain 😁? I'm gonna give it a try
Seems that Chrome, Opera and Firefox support it on android! [MDN](https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen#What_browsers_support_A2HS)
Did they give you any insight on what you should brush up on?
What if you want to write the app in a language that isn't shit and performs well?
If you have small ecomerce, you can be good with Gatsby with almost no added complexity. But once you grow enough you realistically rebuild (pre-generate) your site when data change, you need some dynamic SSR (next.js), and this is when complexity starts to skyrocket. disclaimer: i am senior react dev, and i would not dare to even touch any ecomerce project. Its a trap. Would use some existing solution.
&gt;I say this in all honesty and not to boast: I’ve forgotten more JS than most people ever learn. lmao wat. perhaps his javascript is better than his english. He might need to look up the word "boast"
What a coincidence?! I thought of asking same question today
There’s no harm in asking questions I suppose, but this question is so extremely superficial that it’s a little insulting. And the only people that ask this are web devs who have only done web dev. Spoiler alert: web browsers run on a processor and are huge native apps. You can never get over the limitation of the machine. Web apps just started running more code on the client in the last decade, and really only severely frequently in the last 5-7 years. Web frontends are in their infancy and there’s simply no touching the experience of a native UI at the high end of user experience. I’m 100% in support of web frontends in a lot of cases, but to think native apps will simply vanish is childish. I’m really happy the web is moving forward, but things like offline mode and the ability to access sockets have been possible in native apps since 1970. Let’s be real.
they said they look at how I talk about "JS things like closures, scope, prototypal inheritance, etc.."
I was curious if PWAs kept any background processes running that weren't just related to notifications
I’m really curious about this because if there is a mobile app version available I use it 100% of the time. I’ve never preferred the UX of a mobile web page vs. the native app. I definitely spend time in-browser on mobile, but my most frequently used apps I use the mobile app (including Reddit right now). So, what do you prefer about web apps on mobile?
This comment sums it all up.
Extremely irrelevant comment
Ask on a different thread
There are definitely people that care. Do you listen to music that sounds like it was recorded underwater? Music is something where people appreciate finer quality. Obviously everyone has their things that they’re into.
They aren’t progressive web apps. Everyone uses the native apps. They just also have PWA versions.
People need to read this comment. You simply don’t have the same control over animations in CSS. Yes, hardware acceleration is possible, but it’s much tricker than the libraries that are available on mobile.
Yeah that is strange considering your background in Angular/TS. Did you try to use this past framework experience as a way to flaunt your skills? Not saying this is the truth, but they may have gotten the impression that you were a "framework developer" and not "framework agnostic". I've seen this happen before to amazing candidates that management couldn't fully trust. Anyways, here are my favorite learning sources in no particular order (not affiliate links): - [Pluralsight](https://www.pluralsight.com)... SO MUCH GOOD INFO HERE! - [JavaScript: Understanding the Weird Parts](https://www.udemy.com/understand-javascript/) by Anthony Alicea - [You Don't Know JS by Kyle Simpson](https://github.com/getify/You-Dont-Know-JS) - [Mozilla Web Docs](https://developer.mozilla.org/en-US/)... I'm sure you know about this one! Let me know how else I can help!
Doesn't matter, useContext triggers the component anyway. The only way is using class pure-components but then you can't use hooks.
JavaScript the weird parts Tony Alicia. https://youtu.be/Bv_5Zv5c-Ts
You didn't stop reading after "Symmathecist"? I swear, the pretentious Twitter headlines people can come up with are endless
I would recommend looking up those things on MDN. MDN has very good documentation and tutorials.
For the majority of apps, no. The app I am currently working on has had redux refactored out and it works perfectly fine. Developers are writing code that is easier to follow/change. This is with the understanding that when calling root level contexts that it would not be as performant as using redux, but we don't notice it at all when using the app, and customers do not either. This is not the most complex app I have ever worked on, but there is far more happening there than average. If something comes up where better performance is needed, then we might introduce redux, and only use it at the point where it is necessary. Don't take my word for it though, or anyone elses - try things out for yourself - try to simplify your code to see what is easiest to follow.
That's only because he's the kind of developer who thinks knowing the (many) intricacies of JS is more important than knowing how to use the language well.
Agreed!
thanks man I appreciate it, I'll make sure and go through these, I've only worked at once place so I don't know what I don't know completely, but I get positive praise from a senior programmer with 35 years of experience and I work with networking protocols and APIs so I do a lot of relatively complicated logic compared to other front end work I've seen from school projects, friends etc.
Absolutely! Keep writing code and make sure you are always growing!
Didn’t realize this was a thing! Very cool.
Is it really necessary?
let me know if you have any questions!
I haven’t read through the docs yet but I’m guessing you have already made one? What does it do? I’m curious as to what the limitations are, and how customized you can make the parameters inside XD.
Do we still need them, unfortunately yes. Hopefully it changes or they adopt a JS centric was of developing for devices (like adding additional APIs that it can use to take advantage of the hardware better).
will ever shave.
Tell me more! Have some links you can toss my/our way?
As far as i know, cookies are created by the server for the browser, not the opposite. When a cookie is created, it is bound to server's domain name. That means, a cookie created from [example1.com](https://example1.com) won't be accessed from [example2.com](https://example2.com) . You can find specific details in [RFC-6265#section-4.1.2.3](https://tools.ietf.org/html/rfc6265#section-4.1.2.3) for cookie's attribute restrictions.
Steve is an Adobe employee! He's made a ton of XD and CEP plugins and writes monthly articles on medium for third party Adobe devs. I'd imagine this question could be answered well on the XD forum
Wow. Really goes to show that you never really know who you’re talking to on the internet. Thanks for the heads up! I’m definitely excited to try this out.
I was pleasantly surprised to read the reddit username, never crossed paths with him here. As an aside, though you're probably already familiar with JS, writing Adobe extensions is how I've started and it's actually incredibly good practice. HTML panels in Adobe apps I already use are all like miniature websites, I've come a long way in learning to code specifically to make Adobe extensions.
Bad libraries promote bad programming
I feel like replacing native apps with web apps is a horrible idea for a number of reasons. My first major gripe is that i have yet to find a single web page that performs nearly as well or is as snappy as a native app on phones or desktops, and until that happens I will try and stay far away from web apps with few exceptions (discord most notably since i use it for communications). My second major gripe is that they don't have any access to the devices APIs. Most people would say that this is a good thing as it means they can't run malicious code, however this will severely limit what apps can exactly do, especially in relation to lower-level APIs and interfacing with other pieces of hardware. And finally, web apps take up way more resources than a native app. Hooooly shit, it is so annoying to see apps that are both comparative in terms of features and speed, but where one takes so much more ram or uses so much more CPU than the other simply due to it being a web application, and sadly web apps have always been on an upwards trend in terms of resource usage and it doesn't seem like that will stop soon. &amp;#x200B; So unless something drastically changes in the very near future, the answer to "do we still need native apps at all?", yes without a single doubt.
Also, this weakness does not apply to any apps that rely on files that are expensive to parse/render client side. for example, if all your application does is create a UI for some state that can be expressed by a single (not insanely huge) JSON file, that the client gets via an API call, but needs to store that state locally, there is always IndexedDB (and for even smaller tasks - localStorage).
Nice information on how both (app and pwa) are used, thanks for sharing!
It seems that Apple stays at about 20% of the market. Which means, every 5th phone is an iPhone. **HOWEVER**, what it actually means is that every 5th phone **bought** is an iPhone. iPhone users change phones much more frequently that most Android users, which means less people than 20% use iPhone. Also, (anecdotally, but it makes sense in general) many iPhone users still have secondary Android device for all the things that require (or highly favor) Android - for example, apps that don't exist in the Apple App Store. I have no statistics, but for most small to medium apps (depending on their target audience, of course) making an IOS App, an Android App and a separate Website would almost certainly cost more, both in money and time, than making a PWA.
Uh...that’s one endpoint, with 72 million combinations of parameters.
that's so awesome! Currently, hoping to get my next role into a full stack role which gets to try and leverage PWAs and serverless architecture at large companies.
?? React Native is not a PWA framework, he never mentions using React to make a PWA
This is just a massive misunderstanding of an endpoint. I get being proud of you work, but this is basic stuff. Id write an endpoint like this in a day, but have been doing this a while. What rubs me wrong is how conceited this is, assuming that this is something other then mundane.
Why wouldn't they? They have a vast number of 7/8 users, together at 40% Windows desktop share, and not exactly plummeting in the trend. http://gs.statcounter.com/windows-version-market-share/desktop/worldwide
Anyone noticed any useful changes to the dev tools?
Well, my BIL has Aspergers and of course, in the beginning, I was understanding, but he completely took advantage and fucked everybody over; now even his own kids. I picked up the slack and let his daughter stay in one of my rental apartments with her husband and child after he basically threw them out. He's a self-centered dick. I have run out of sympathy. He also managed to screw my kids out of their rightful inheritance from their grandparents, long story; but his Aspbergers was his enablement technique. Fuck him. Fuck them.
Change asperger's to anything else. A different skin color. You see the problem, right?
The only people asking this question are JS developers lol. Users hate shitty JS apps almost as much as real programmers.
Let me see if I understand: Your user login flow sets a cookie on a successful login, but when you navigate to another page that cookie disappears and your site no longer recognizes that your user is logged in?
IMO you are waaay off.. If Apple supported PWA’s tomorrow the entire market would shift that direction in a big way.
using 'var'...
&gt; I wouldn't underestimate microsoft engineers Really?
is adobe xd still a thing? I thought Sketch, Invision, Figma killed it.
The book Eloquent Javascript talk about much information, I recommend giving a read over
That method actually doesn't run inside app scope at all, it's essentially requesting the browser to render the page without browser UI. It can't leverage any Cordova stuff. Any native piece would have to be a separate activity and can only communicate via url params.
UWP apps are powered by edge rendering engine, and were created to push windows phone. 2 - 1 - 1 = ?
Not yet on iOS.
I found [this one](https://stackoverflow.com/a/20871714) on stack overflow. Then you could just change the last line to get the shape you're after: const permutator = inputArr =&gt; { let result = []; const permute = (arr, m = []) =&gt; { if (arr.length === 0) { result.push(m); } else { for (let i = 0; i &lt; arr.length; i++) { let curr = arr.slice(); let next = curr.splice(i, 1); permute(curr.slice(), m.concat(next)); } } }; permute(inputArr); return result.map(parameter =&gt; ({ parameter })) }; There's some other solutions on there too.
They used preact, so it goes down to 3kb
It’s ok! It’s a huge milestone in personal development as a software engineer to separate yourself from your code. It’s incredibly important, but its definitely something that grows over time. I didn’t mean to sound so accusatory :)
thnx so much, this gives me a good start.
I'm pretty sure the "progressive" part of PWA is that it works fine as a web app. Then you can "progressively" enhance it with offline capabilities, add-to-homescreen, etc.
[removed]
I am totally willing to help, but need a little more info, and seeing your code would be super useful. You can PM me and we can figure out a way to chat tomorrow. Otherwise ... If you are setting a cookie, whether by sending it from the server or with Javascript via `document.cookie` there could be a couple of thing going on. You could be setting the cookie’s expiration to either something really short, or even the default which will delete the cookie when you close the browser. There is also a path attribute. This specifies the path for which the cookie is valid. You cannot access a cookie for a path you aren’t on. So if you’re cookie’s path is set to mysite.com/login and then you go to mysite.com/foo, you won’t be able to read the cookie. There are other possibilities, but I think it’s fair to share your code so we don’t need to come up with an exhaustive list ;)
It's this an advertisement? If so, this is highly illegal in a lot of countries.
XD
sup , i need some help , the code have 2241 lines , and i got error on line 2242 , but the line doesn't exist , unexpected }
=D
I guess I'm defining the app scope loosely as where the session can travel. If you leverage the InAppBrowser plugin your session (cookies, global vars, session vars) all die outside of the app, similar to using another browser or incognito. And your correct, you can't really leverage any of the Native functionality via the Cordova API because the app has gone beyond that layer by the time it calls the external URL. But there's very few situations where you would need to, and for those your likely interested more in building a hybrid or native hybrid than an external web app.
Sketch came before XD - it's basically Adobe's Sketch clone to try and stay relevant. It's not too bad actually, plus it's free.
Will there be a more native console output for development allowing for object inspection? I have more general questions about dev workflow, dev tools, etc but I have recently looked into adobe XD plugins and haven’t done all the research I need to do yet so I will save those questions for later.
Rawr
I’ll confess that I didn’t know the meaning of that word. English is not my first language. :)
I do have a good amount of questions for anyone that has built shoe bots before. I would greatly appreciate it!
Lol I'm pretty sure it's a made-up word by a different person full of themselves
Not quite ready yet, but the pipeline operator is coming (as soon as they figure out which await mechanic they want to implement). &amp;#x200B; [https://github.com/tc39/proposal-pipeline-operator](https://github.com/tc39/proposal-pipeline-operator)
Haha, never built a shoe bot before, but generally, the speed should be slow enough that you aren’t overloading or hurting their server. However, I doubt they will care much, since your bot it literally designed to give them money. Good rule of thumb: time yourself doing what your bot is expected to do, and then don’t let your bot go too much faster than that.
Yes that makes total sense but people say shoe bots go from launching to purchasing in a few seconds. That just doesn't make sense to me since a page takes a few seconds to load and you have to go through 2-3+ pages to purchase.
I really can’t wait for this. I’ll probably have to shim it for a while, but you can bet I’ll be using it!
Check out Pinterest's pwa
I’ve never thought about programming through this perspective. I will definitely keep this in mind :) Thanks a lot for your reply!
All of which are opinions
Call the police
Maybe unpopular opinion but I think PWAs suck. Like, a lot. I've always had really bad experiences with them and they don't really feel like applications at all. Feels like I've basically bookmarked a page and got a link to it from the home screen lol
it appears to be the opposite of whatever you think it is, i suggest you try it out.
Well, from what I can see it seems nice. I'm not creating an account to check more though. Not on a site that seems to have "using as many dark patterns as possible" as the design goal.
You have too many }'s
Hi /u/BootlickingRisk, this post was removed because your title included a URL. Please use the `submit a new link` option with a descriptive title. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Then ‘let’ ...
Super constructive and helpful.
I recommend this. [https://abookapart.com/products/going-offline](https://abookapart.com/products/going-offline)
thank you for this.
Very interesting ! Thanks for showing me this, I'm going to follow the avancement of this project
Yes, because short and to the point. Reason to do PWA instead of native: you don't know native and are too lazy to learn and are OK with having the app which is lame on every platform and despite of the claims "do once run everywhere" the reality is "go gray trying to debug it on every platform you want it to run". Reason to do native: everything else. Sure it looks good when doing some trivial Celsius to Fahrenheit converter. It's about the level of complexity where being good ends too. Oh, and doing the same natively will take 1/3 of the time (but it won't run anywhere else, obviously). So if you are a web dev not interested in learning anything new, doing trivial app and not caring about the users and their experience—PWA is your way.
:D
&gt;Reason to do PWA instead of native: you don't know native and are too lazy to learn and are OK with having the app which is lame on every platform and despite of the claims "do once run everywhere" the reality is "go gray trying to debug it on every platform you want it to run". Or the client has told you that's the direction they're headed and you have no choice in the matter. The reap world isnt as black and white as you say. &gt;How do I know? Have been doing web for 20 years and native apps for 10. Congrats, no one asked.
yes I am aware of that but why are they dead?
But if the component returns a memorised response then the diffing algorithm won’t run surely because the object it returns hasn’t changed
First of all, you are very wrong. At the very least there are two endpoints - the `tus/` and `tus/{params}/group/{more params}` XD. On a serious note tho, as far as I know path parameters are supposed to be required on endpoints. Lets say we have `/users/{id}/purchases/{type}` - so these two parameters would lead to large amount of combinations. But that endpoint would only be accessible by `/users//purchases/` at a minimum. But in my case, you are not required to provide any parameters whatsoever, nor any ordering is implied. On top of that, there's no direct logic on the code that does any specific parameter handling. All are handled dynamically at the database layer. One example would be lets say you want all the respondents that are female, and you want their activities averaged out. You GET `tus/female/group` and you get the resource. Now lets say you want female from a specific region, you would GET `tus/female/regionA/group` and you get a different resource. You could get females from two regions and average them out `tus/female/regionA/regionB/group`. On top of that you could ask for married men on a specific region and group them by education level such as this `tus/male/married/regionA/group/education`. To top it all off, the nature of my project was that I needed the endpoints to be these demographic filters. So it just happened that I had the data in the resource to do param-like filtering. But thanks for the constructive criticism and discussion visicalc. Let me know what you think.
You’re describing it like you think this is a novel idea, when what you’ve actually done is create a basic REST API.
Novel idea? Which part of the description misled you to make such assumptions? Also, if I thought this was a novel idea I'd publish a paper or something more academic, I would not discuss it in reddit...
I don't really understand your problem, is the login done outside your app? I would suggest you redirect back to your app with the authentication details in the URL and then when your app loads check if the parameters are present and if so, save it in local storage.
Tell me more about the real world.
Novel idea? Which part of the description misled you to make such assumptions? Also, if I thought this was a novel idea I'd publish a paper or something more academic, I would not discuss it in reddit...
Nah I'm good. You clearly have it all figured out.
### apireddit.js Why is this a class? It could be just a function that takes a parameter `subReddit` and returns the JSON. It has no right being an object. It's like putting 20 wheels on a car and only using 2 of them... At the very least you could refactor it so that you can send one or multiple subreddit strings to the class, and the class taking care of emitting "loaded" events upon each subreddit's loaded state. My main concern would be: why only 2 subreddits hardcoded? In a real world scenario you'd often find product people saying: "We need 3 subreddits now" and a week later: "let's make it 20 instead." Would you end up duplicating all that code 20 times over? Or would you make the class smarter? ### apiweather.js Should not be a class, could just be a simple function. There doesn't seem to be any logic going on, just a simple fetch. ### bookmarks.js Bookmarks (plural) isn't the same as a Bookmark (singular). Should a bookmark really be an object? Why not a simple key/value pair? Why does the page reload after saving bookmarks? The code looks messy. When you iterate the bookmarks you should build an array and save it *after* the loop, not in the middle of it. It's a bit of a confusing bunch of code to be honest. ### localstorage.js Huh, you're not using this in the bookmarks file but... okay. This is strange. I mean, I guess it works but it's not very scalable. It looks like you should just use the localStorage api in the browser and not bother with any of this code. You should learn two things here: 1. don't shorten names of variables and function/method names, make it human readable; and 2. look into JSDOC and annotate things with comments. ### script.js I don't know where to start. It's spaghetti-code as we would call it. It's just a long list of fragmented code... ### ui.js I'm going to stop here with just two comments: 1. Learn HTML semantics (and CSS BEM naming) and 2. you should really look into javascript frameworks. Nobody codes like this anymore. I would advise you to use React (beginner friendly) and follow the best practices there. You'll learn so much more and your code would start making sense to yourself and others.
I really recommend Udemy. you have find at least 20 cources for 10 buks. I have a lot of experiance with them, its working fine. Dont forget you have 30 days money back. Try it out.
I mean, all the websites you visit in chrome use that shared storage. I don't see any problem with that since sandboxing is what Chrome is very good at. Not quite sure what the problem with this. I'd argue that it's actually nicer when you are logged in to the app, then you try to open app-related link on the web and your auth is already there.
Hi /u/PUBG_Videos, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks for response!!! It's my first time building something more complex, and also hard then I don't know how to write clear code, I should analyze other ppls codes. I'm going to learn React, but firstly want to learn how to write clear code using only JS.
Please post your code so we can analize whats going on.
I wrote a lengthy [blogpost](https://staleclosures.dev/from-redux-to-hooks-case-study/) about it.
This is what I wonder as well..a lot of devs seem to be hanging their hat on the "native feels better" premise ...which seems sort of nebulous
Link is broken. Or the page is.
[call the police ](https://youtu.be/XzuC8B46N_w)
I had them both on my phone (pwa and native). Look and feel are the same, besides native gestures and system integration. Native app weights 78mb and uses around 400mb storage in total. Size of pwa is 156kb.
I had them both on my phone (pwa and native). Look and feel are the same, besides native gestures and system integration. Native app weights 78mb and uses around 400mb storage in total. Size of pwa is 156kb.
Just order and read a book or two :) Some book tips: - JavaScript: The Definitive Guide by David Flanagan - Eloquent JavaScript by Marijn Haverbeke - JavaScript Patterns by Stoyan Stefanov - Writing Maintainable JavaScript by Nicholas Zakas - JavaScript: The Good Parts by Douglas Crockford
https://hexometer.com
thanks for making this, i now can learn how to hack
ok, thanks. I will read it
I haven't used anything other than === in years.
MAybe that kind of bots don't rely on pages but talked directly to API instead.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
that might do
I had a similar journey to you and am still very much on that journey, but as soon as you pick up a framework it will make your life and anyone reviewing your codes life much easier. They were developed for a reason don't forget! They simplify and streamline what would otherwise be unnecessary complex code. That said, there is no harm in being able to code pure js, it's just highly unusual that an employer would be looking for it specifically over a developer skilled in a particular framework that the company uses/intends to use in their stack. There's no point in reinventing the wheel or trying out different wheel shapes when everyone has already settled for circular!
Let it rest. They are right.
Hi kenman, thank you for the feedback
It's a bit lacking. No questions about state management? About animation? SVG / Canvas / WebGL? Form validation?
The search part is relatively easy. I'd say go with Solr. As for the maps, your limited to about 100 pins at that zoom level before you have to start making decisions about how to display them, so start thinking about your options when using the Google freebie maps API
Yeah I understand that. I was building this project to increase my JS skills. A lot of people are saying that firstly you have to learn vanilla JS and just after that jump to framework. So I'm thinking still learn JS, for 1-2weeks, and then learn React. Or I should learning React right now?
Probably just as well
I still see the issue on iOS Safari &amp; Chrome. Maybe you can remove the "0" value from the quantity drop-down, since you have the remove icon.
Just to reinforce one of the previous posters suggestions. The you don’t know js series is fantastic. There’s tons of great examples in Kyle Simpson’s books as he breaks down really complex ideas. I can’t recommend them enough. I love that they’re available free on git hub too. I did buy them after I read the first two just to support the author. It took me from being familiar with what something like closure is to being able to talk about it intelligently and really start to take advantage of it in my code. Been a full time dev for only 2 years and recently became the lead of one of our applications. A lot of that I credit to the knowledge I gained from those books. Good luck with your continued journey. Don’t let one bad response ever stop you and instead just use it as fuel.
EcksDee
It’s likely an accurate statement, given the amount of research he’s had to do for his books. I do know that in my interactions with him, he is a humble person, in my experience.
Well people apparently opted for trump too.
I think react is a more popular choice these days but previously it was angular so there are a lot of legacy angular applications in existence
This might help you with the marker question - [https://developers.google.com/maps/documentation/javascript/markers](https://developers.google.com/maps/documentation/javascript/markers) Example on how to add a search bar - [https://developers.google.com/maps/documentation/javascript/examples/places-searchbox](https://developers.google.com/maps/documentation/javascript/examples/places-searchbox) Directions API - [https://developers.google.com/maps/documentation/javascript/directions](https://developers.google.com/maps/documentation/javascript/directions)
I was in a similar situation as you, not knowing much, only what I want to do. I would recommend sitting down and read the documentation, start experimenting with smaller bits of your functionality. (E.g. how to put one marker on a map) It'll take literally days, with full 8 hours a day to figure it out. But the good news is that most map services out there are quite similar, so once you've done it with Google maps you can jump into working with cheaper/free map providers like openstreetmaps/Bing maps easily. Alternatively, if you are in this purely to make money, the easiest is to write a detailed spec and pay for a developer to do it for you. Or if you just want the functionality of what you described, check out the My Maps feature in Google maps, which had almost all the functionality you wanted when it came out 11 years ago. https://lifehacker.com/the-best-ways-to-use-googles-new-ish-my-maps-tool-1635833998
I publish the survey, so really value any feedback for possible future questions. However, it's quite a fine line to balance how many questions the survey asks vs covering as wide an array of tools as possible. Running the survey as a side-project, it's hard enough to get people's attention to actually fill in the survey, so it's about trying to make sure that it's as accessible as possible in that respect. I would absolutely love to include questions on more aspects of front-end tooling though. Whenever I get enough people asking for certain topics, I try to ensure that it covers those tools in future surveys.
I'll have some of what this guy is smoking
I don't get the correlation
Hi /u/piyiotisk, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/caesar_reddit, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Sezno, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jsloverr, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/edvin123212, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/YourTechBud, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
What do you mean by ”should”? If the performance is as good as it can be? Or are you trying to avoid detection? You mentioned elsewhere that the products sell out quickly, so I’m guessing you mean performance. You mentioned also page load of multiple seconds. My suggestion would be to scrap puppeteer completely. It is way overkill, and not very suitable for your purpose. Just poll the html (or json if there is an api) and scrape the SKU from there. No need to load scripts, images, css, etc. Then craft the purchase request manually. It is usually a single POST at the end of the checkout, sometimes with a redirect to a payment provider. This should be pretty much instant, since you don’t need to load anthing before you send the request.
Hi /u/jyourman24, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/blar210, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/BinxyPrime, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/nunorvc27, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I thunk their point is The edge rendering engine is gone, as are windows phones, making the use completely. redundant
What is adobe XD?
No worries, thanks for putting it together!
Why do people keep explaining the observer pattern over and over and over again? Isn't subscribing to some kind of event one of the first things you do in JS (i.e. bind a click handler)?
What does your string contain? HTML? Or is it some other template that you need to parse and create nodes from? This question is unanswerable without details.
Do folks who do that as beginners recognize that as a pattern? Or just a thing you have to do in order to make clicks work?
&gt; Developer Tools Remote Debugging Guess I'm sticking with Chrome then... remote debugging is one of the greatest things about developing with VSCode.
I think as /u/wonkifier points out people are well capable of using an event handler in JS without ever realising there is a design pattern at play, or even necessarily knowing what one is. It's easy to forget as a JS vet, but there are kids starting every day so while it might be repetitive for you, someone reading this is putting the pieces together as to what that magical event listener is really doing.
Good point, cant argue that
No idea why this is controversial (the red cross). There is absolutely no excuse not to be using const and let, var brings along a whole range of hoisting problems, why on earth would you **teach** it that way?
Why no React without a state management library?
This is awesome! I am learning JavaScript now, so I really appreciate this!
Learn and understand the power of javaScript first, combined with html &amp; css. You can still achieve alot of power and preformance of a site with writing it "pure" from the get go
If the first comment in an article is negative it will sink that article, and that's a shame, because I expect it's a decent article. First commenter has a responsibility damnit!
So that's a really ugly/obfuscating way to say "if props.. else if val".... what's the point? Any realistic usage of a thing like this would get horribly ugly for what benefit I'm not sure &amp;#x200B; If you really want to though, maybe a simple higher order function with a signature like &amp;#x200B; makeVariadic([0, fnZero], [1, fnOne], ...) So that you can lay the whole thing out nicely and reuse it e.g. &amp;#x200B; // Function.length returns the expected number of params - so use that const makeVariadic = (...fns) =&gt; (...args) =&gt; fns.find(f =&gt; f.length === args.length)(...args); const fnZero = () =&gt; console.info('I Have no parameters!'); const fnOne = (a) =&gt; console.info(`I Have one parameter: ${a}`); const fnThree = (a,b,c) =&gt; console.info(`I Have three parameters: ${a} ${b} ${c}`); const varFunction = makeVariadic(fnZero, fnOne, fnThree); varFunction(); // I Have no parameters! varFunction(); // I Have no parameters!
Just use regex to parse your HTML/s Your question is unanswerable without further detail.
I wish people would stop talking about the Singleton pattern like this is Java in 1994. A Singleton in JavaScript looks ike this: `{}` If you want an application wide Singleton it looks like this: `export default {}` Import it anywhere you like and you have your Singleton. Nothing more is required.
It's very useful to do some tasks easier. See this function. // PHP's strtr in JS function strtr(s, p, r) { return { 2: function () { for (var i in p) { s = strtr(s, i, p[i]); } return s; }, 3: function () { return s.replace(RegExp(p, 'g'), r); }, 0: function () { return; } }[arguments.length](); } [Source](https://github.com/SupunKavinda/CSS-Minifier-and-Unminifier-in-Javascript/blob/master/css-formatter.js)
That’s the same thing - it’s not easier as far as I can tell - you end up with the same result as defining three separate functions but you lose all the contextual/semantic meaning that functions give you - what’s the value? I don’t see it at all
Correct me if i'm wrong (we're splitting hairs here). But isnt this an example of a singleton (lowercase S), but not the Singleton pattern, which requires a getInstance method?
The fastest? const x =document.createElement('div'); x.innerHtml = yourHtml; Use the browser's parser, it's extremely quick and well-optimized.
Sure no worries, pm sent
Why no Ember?
Should I pay attention to the network tab on when I press checkout and see what is sent?
That’s an implementation detail in my opinion. Both are semantically identical.
HTML. I thought that’s obvious
Either that or add Vuex in the vuejs project.
I agree. A getInstance method is an implementation detail. The point of the Singleton pattern is a shared instance. Not sure why /u/superluminary gets downvoted, he's right.
I have heard that innerHTML is really slow
You're splitting hairs. I literally don't care if I get my singleton with: `import Singleton from './cats'` or `singleton = Cats.getInstance()` All I care about is that there's only one. The method name is a totally irrelevant hangover from the 1990s.
Designed Pattern always provides an improvement to application development, whatever way possible; either creation, composition or communication. Like Observable pattern walking through the path paved by reactive programming (concerns with means of communication ).
You thought wrong. It was not obvious. Say what you mean next time so nobody has to clarify. /u/vlaaivlaai answered your question below. The browser's parser is likely the fastest available parser.
(Puts on Adobe hat) We’re working on that (based on Chrome Dev Tools) but we don’t have a hard date for when it will be released.
It's too clever by half IMHO
You should really learn how to benchmark your code. Nobody can answer this question for your specific use case. You don't need to do anything supersmart, console.time is enough https://developer.mozilla.org/en-US/docs/Web/API/Console/time
&gt; #1 Why were framework X, Y, and Z not included in this comparison? &gt; Because the implementation is not completed at RealWorld repo. Consider contributing! Implement the solution in your favorite library/framework of choice and we will include it next time!
Last I benched, it was parsing the string and calling the DOM API without building an AST. innerHTML is about twice as slow as the equivalent DOM API code.
This is both awesome &amp; slightly terrifying
You really should show us the error message. And bossibly you source code. Github is good place for sourcecode. A lots of programmers use github.
Hi /u/mizukuro, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/zSacrety, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
The GitHub is: [https://github.com/KCordilia/ToDoList/blob/master/app.js](https://github.com/KCordilia/ToDoList/blob/master/app.js) The bug is that whenever i add multiple items to my to do list, and i want to edit one of them, all the items go into edit mode and they get emptied. You can download the project and see what i mean.
&gt;I wish people would stop talking about the Singleton pattern like this is Java in 1994. A Singleton in JavaScript looks ike this: I think people have a lot of baggage from the old Gang of Four Design Patterns book which is more relevant to languages that look like C++ than a multi-paradigm language like Javascript. Even then, a Singleton in modern code in any language should be talked in terms of an object's lifetime in its scope, rather than some global self-managing awfulness. I don't want the programmer who is writing getInstance methods as a habit.
More or less. Figure out what the page is doing and then do that directly via requests 8nstead of clicks.
Let's discuss further on the [forum](https://forums.adobexdplatform.com/) where other people can help answer as well!
Any tips or tricks to go about finding that out? My first thought would be network tab.
Right now, we only support console.log() but in the next couple of months, we will roll out a more complete debugger like Chrome Developer Tools. More updates to come! If you have more questions, let's discuss them @[https://forums.adobexdplatform.com/](https://forums.adobexdplatform.com/)
you nailed it! except it's coming out in a month or two :D
Not sure what you mean, useContext is a hook, not a component. As I said, you can use memorized components with context, but then you are forced to use renderprops or hocs, which isn’t as ideal as hooks.
Good feedback and point taken! I will use const and let in my next example.
Of course! let us know if you have any questions. The best place to ask questions is [https://forums.adobexdplatform.com/](https://forums.adobexdplatform.com/)
Indeed. The original singleton pattern existed to get around the limitations of class-based object-orientation. JavaScript, like many modern langauges, has no such limitation. Singletons are the default.
Also, in case you've never worked with Webpack before - here is some info on Webpack and how it works: **What is Webpack?** Webpack is a module bundler that simplifies web development by taking the various elements that comprise your code base, and transforming them into a form that’s easy for the browser to understand. Commonly referred to as “asset bundling” - bundling is the act of merging your browser assets into one file so that the amount of HTTP requests and calls to the server are reduced. **How do you configure your Webpack build?** You configure your Webpack build in your webpack.config.js file. The config file is a place to put all of your configuration, loaders, and other specific information relating to your build. Your webpack.config.js file will typically be stored in the root directory of your application. We tried to make it easier to work with Webpack, and hope this will help you all out! If you have any questions on Webpack, I'd suggest taking a look at Webpack's documentation [here](https://webpack.js.org/concepts). Thanks again and hope you enjoy!
Actually, I am new to Reddit and my whole team is as well! We are planning to spend more time here in the future
[https://element.eleme.io/#/en-US](https://element.eleme.io/#/en-US) ... You are welcome!
Thanks for being a great partner with us. Please let me know if you have any questions or just wanna chat
Also, don't use angular. It's an abotoir.
&gt;Download XD for free It's a screen design tool. It's often used to design mocks for websites, mobile, tablet, and others. I've also seen a lot of people using it in replacement of Powerpoint and Keynote recently.
The trouble with DI in JavaScript is that it is nearly always globally accessible. That’d be Inversion of Inversion of Control. [co-creator of PicoContainer chiming in here]
The idea of dragging a browser embed along for displayed content on cross platforms is pretty silly. As well as trusting vendors to get this right. PWAs are just a small set of often crippled features, they’re good to have, if they work for once, which they often don’t but it’s not that much of a big deal. The future of JavaScript isn’t tied to a browser, it can well produce native apps on its own with shared code and ease of use that is unknown on native platforms.
I like that this article rephrases what has been said over and over again. I don't see the point of this article except for the author to claim he writes tech blogs. This article brings nothing new and these design patterns have been discussed ad nauseam.
Yeah. I don't think DI is always (or even often) a good fit for Javascript. It's almost always easy to just create objects that live in the appropriate scope, container or no.
Even in java-land we’ve since stepped back from containers and hand-assembled appropriately scoped components (through constructors as god intended).
Jeez, the latter in my case.
Seems like you're just trying to show off some cleverness for its own sake. Far simpler to just write normal code: function foo(a, b, c) { switch (arguments.length) { case 2: return 'foo'; case 3: return 'bar'; } } // vs the too-clever thing function foo(a, b, c) { return { 2: function() { return 'foo'; }, 3: function() { return 'bar'; } }[arguments.length]() } Also, the normal code uses less memory usage and is faster (both bundle size and runtime perf)
Well, the Reddit app is a decent example, I did actually give it a try, but still prefer the mobile site. I get no particular feeling of UX superiority in native apps. I just like the universality of running everything in a singular 'rendering engine', the same exact app in desktop and mobile.
Well, the Reddit app is a decent example, I did actually give it a try, but still prefer the mobile site. I get no noticeable feeling of UX superiority in native apps. I think part of it is that I just like the ubiquity of running everything inside one universal 'rendering engine', the same exact app, for desktop and mobile.
Even in C++ you can just make a static (class-level) variable and call that a singleton. Lots of people did. And in doing so, they often created a lot of bugs and reduced the quality of the codebase. &amp;#x200B; The only good use of a singleton is to enforce that only one instance of a thing can ever be created. Singletons should be an **inconvenience**. Making them as a convenience to access things easily is (IMO) objectively bad unless you're writing code that is going to be thrown away.
Since we're splitting hairs: import Singleton from './cats'; import ActuallyNotQuite from './cats?' Anyone else also wants to geek out over symlink handling in custom node resolution algorithm implementations?
Your approach is more readable.
Wouldn't it be better to count non-whitespace source characters instead of lines of code? Also curious why they chose to not implement frameworks in order of popularity from surveys such as StateOfJS. I never heard of some of the ones there (and I'm a framework author myself...)
So the whole problem is that `?`, right?
Not sure if you're for realsies but hey, I finished a shitty project using Flask and I would love some feedback. https://github.com/j-000/piggyborrow 😊
At the end of the day programming is a never ending pit of things you could know. Sometimes it’s not always about picking the “best” thing but picking something and not dividing your attention learning multiple frameworks or modules that do the same things. I would say learn JavaScript really well. Learn design principles really well. Decide on a framework there are jobs for all of them so just pick. Learn why people use different tools like package managers, bundlers, linters, automation tools, transpilers. Once you understand why to use something changing between similar products is more about learning syntax.
It's easy to get to an intermediate level in programming without ever learning about the concepts of design patters. They're very much an aspect of *software development* rather than programming. When a programmer writes a well-structured program, some design pattern or other will emerge without needing to be consciously applied into the program.
My book “[JavaScript for impatient programmers](http://exploringjs.com/impatient-js/toc.html)” (free to read online) both teaches programmers JavaScript and explains some of the bigger web development picture (for example, in [this chapter](http://exploringjs.com/impatient-js/ch_big-picture.html)).
Hi /u/gbolz, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Excellent overview of important patterns
Why is medium overrun with cringey 20 somethings that think theyre the shit
not related to you comment which is right, but IIRC `export default {}` is an anti-pattern, it breaks tree-shaking because it is no longer a static reference. If you have the option always do `export const foo = 'bar'` over `const foo = 'bar'; export default { foo }`
I'll check it out, thank you
Would you recommend freecodecamps ([https://learn.freecodecamp.org/](https://learn.freecodecamp.org/)) free introduction to JS course, or a more intensive Udamy course?
Ah, yet another observer-facade-singleton article. Meh.
It's one thing to consume the built-in browser events. Knowing when to use the observer pattern for your application's own events (outside of the DOM) is another.
If you are interested in design patterns read this, it is free online! [http://www.gameprogrammingpatterns.com/](http://www.gameprogrammingpatterns.com/) It is not just for games.
I'd argue many don't actually know how to create a simple observable. Then when they see things like redux or even something as old as Backbone they think it's magic or make assumptions about how it works in interesting ways. One of my interview questions gets people in a simple way to build an observable using a semi-real world example. You'd be surprised about what you learn from such a question.
Similar to HoFs, they will have been using them the whole time without realising it
Hey, what did you do there with that `?`?
brutal
I can vouch that Dr. Axel Rauschmayer knows what he is talking about. I have been enjoying his [http://exploringjs.com/es6/index.html](http://exploringjs.com/es6/index.html) which is the closest thing to a modern JS reference book I have found. One massive problem is that there is so much bad learning material out there, it is a full time job just to find teachers you not only 'resonate' with, but also are genuine experts. JS had a very big update with ES6 in 2015, information before that can be very behind in best practices and modern ways of doing things.
Looks great. I'm excited.
I have just spend 2+ years learning JS from scratch. If I had to sum up the best learning resource it might be: [https://javascript.info/](https://javascript.info/) I just keep coming back to it, the site is pure gold! I can see you are getting confused by the millions of different opinions... so just listen to mine :) Ignore the noise and just learn the language JS by making projects you enjoy and referencing the site I just linked you and the closest thing to the official 'docs' [https://developer.mozilla.org/en-US/docs/Web/JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) There is just so much you could learn you will blow your brain just thinking about it all... forget it all until you can say you know basic modern JS well by itself.
You can return a component that is generated from a useMemo that depends on a value again that can be a useMemo that is derived from the context in useContext
About the email part: wouldn't be better using some kind of disposable email service? There's a Gmail address there: even if it's just a throwaway account it can cause trouble. You probably linked it to your phone number, right? If someone uses it to send spam then you might have problems using this number again to sign up to Gmail. Mine have this problem: Google just rejects it when creating a new account.
Seriously man, i read to learn code not your whole life story
I don't disagree with you. Although it may not like it, I intended this post to address rather less technical-savvy people. I wrote this originally for a friend in German and it is supposed to be a little provocative but still informative.
I'm no pro when it comes to design patterns. It's always nice to see a refresher and perhaps a pattern I haven't encountered before.
I don't disagree with you (previously developed Android apps). And as I mention in the article, native apps will still have their place for quite some time.
It just launched a few months ago so I'm not aware of any good tutorials or third party resources. Here's the capacitor docs https://capacitor.ionicframework.com/docs/ I believe you can even use capacitor outside of ionic. You'll see most essential native APIs are covered (camera, storage, etc.) but nowhere near as many as cordova/phonegap. The upside over cordova is that you just import these from a npm package and you're set. Previously you had to run install commands that modified the native android/ios projects' configs and it was painful to debug/deploy.
it's even worse cause the article is aware of how unhelpful it is: &gt;The singleton pattern isn’t one of the most widely used ones explaining it in that context basically amounts to noise.
Because your browser cache some data I suppose. Try disabling cache in your browser.
It just illustrates a quirk of the JS module system (or the lack of specification surrounding how modules are actually loaded). If you run the above using node and `--experimental-modules` or from a browser, the semantics of `?` are that of a querystring (meaning the two import declarations run their modules as if they were distinct pieces of code. If you get into symlink handling and custom node resolution algorithm implementation and `--preserve-symlink` and things like that, you can get similar unexpected things to occur. TL;DR: javascript module semantics today make it far more difficult than it should be to actually implement a real proper singleton.
Articles are typically written for new people as they read more articles. If you want something more in depth reading something by someone like Kyle Simpson and a few others is about all you get.
As a starting point for your debugging efforts hit F12 and inside your dev tools, check the network tab on what it does. It tells you if responses were cached and what responses came back from the server.
Looking at your CSS. You should try to be consistent on how you use colors. You mix rgb and # colors in the same file and that can lead to accidents for future coding. Also you should consider using CSS Variables instead of using the same values multiple places.
Looking at your CSS you could probably improve it by being more consistent in how you are picking colors (you are using # and rgb both). You could also benefit from using CSS variables so that you don't need to change things in the CSS file. I'd personally also separate out the CSS from the template as I think it leads to future mistakes.
Hello there! Learning React and Electron shouldn't be hard, since you already know JavaScript. You should IMO start off with React, and then proceed onto Electron. Both of them are really well documented, so getting started will be super easy for you. I have no experience with Dart or Flutter, but from what I saw regarding syntax and behavior, it's pretty similar to JavaScript in a lot of ways. I would personally leave that for last, since it's going to be a new language after all. Build small apps in React and Electron. Get familiar with how components, routing and all the fun stuff work in React. For Electron, you will have to focus on learning how the different parts of the API work. Good luck!
I have no strong opinion, but what's the fallback for browsers like IE10 and 11 that don't support css-variables? I know our app has to support older browsers, and due to us having lots of protected data (HIPAA etc) we have to be very careful about using 3rd party nugets or plugins, polyfills etc that we did not write ourselves. If this a stupid newbie question, bear with me. =)
What is a “product”?
\&gt; but what's the fallback for browsers like IE10 and 11 that don't support css-variables? Those are old browsers. Edge supports CSS Variables. :) \&gt; I know our app has to support older browsers my condolences :( \&gt; If this a stupid newbie question, bear with me. =) no stupid questions :)
Let’s say you were doing custom shoes. You wanted to change out the laces, color of the base, etc.
You should definitely read into Object Oriented Programming. Basically it is more of a programming philosophy than a technique and applicable in any language. As for JavaScript, it is always appropriate to use classes. Not only does it allow you to avoid repeating the same code. It's a way of structuring your code and it allows you to create inheritance between classes.
I'm not a fan of CSS-in-JS myself, but since you asked: - CSS-in-JS can compile to less CSS code (via treeshaking things you never use, and/or via strategies like outputting atomic CSS) - CSS-in-JS typically results in less HTML code, since chains of vanilla CSS utility classes tend to be very long - You can bundle split section-specific styles and the compiler will yell at you if you mess it up - Your junior _cannot_ write stupid CSS hacks like `.some-section .button .icon {...}` or `!important` when they need to make exceptions - You can write everything in one language (debatable, I know, but some people like this)
So this would be a front end module that lets the user interact/modify the product and then pass along a resulting object with the customizations? It’s an interesting idea, but I have not heard anything like that.
TL;DR Create objects once and reuse them in your codebase, implement Event handling (you can extend EventTarget for example) and abstract away complex code as much as possible
You can do this with a userscript. Add an event handler for a keypress event to the document, and trigger the button.
Thanks for the list of CSS-in-JS advantages! Some questions / thoughts: &gt; CSS-in-JS can compile to less CSS code CSS can do the same thing via purge-css or other static-analysis tools. &gt; CSS-in-JS typically results in less HTML code, since chains of vanilla CSS utility classes tend to be very long how much does this depend on the CSS-in-JS implementation? ultimately, I think something like https://css-blocks.com/ would be ideal, where common css is automatically extracted from your templates to common classes at build time (I haevn't used this tool myself yet) &gt; You can bundle split section-specific styles and the compiler will yell at you if you mess it up can you expand on this a bit? I don't understand why this wouldn't be possible with css? &gt; Your junior cannot write stupid CSS hacks like .some-section .button .icon {...} or !important when they need to make exceptions surely there are _different_ caveats for css-in-js? hopefully misuse of anything would be caught during code review? &gt; You can write everything in one language (debatable, I know, but some people like this) this I don't super understand, because you still need to know CSS. even if you're converting to camelCase or whatever, but you need a way to look up what the properties are, ya know?
Thanks, I'll try this out.
Cringey 26 here. Can confirm.
Css in JS applied using Styled Components is superior to CSS. You can define your styles in a more compact way with less duplication than you can in plain CSS. And you have the full power of JavaScript to produce your dynamic styles. The utility classes you mention are commonplace in design systems that use CSS in JS.
Does the page still exist?
Exactly.
That doesn't look like JavaScript to me.
&gt; CSS can do the same thing via purge-css In simple cases yes, but if you have something like `&lt;div className={cond ? '' : 'active'}&gt;` or a jQuery/vanilla js equivalent, you might run into issues and will have to manage individual cases manually. &gt; how much does this depend on the CSS-in-JS implementation? The implementation is definitely a big part of it. At Uber we use Styletron, which compiles to atomic CSS, meaning a specific style value never appears more than once even if many different component types use that value (e.g font values). &gt; I don't understand why this wouldn't be possible with css? Say you write something with custom styles, or your app is structured such that tables only appear in certain pages. If you want to later bundle split, your choices are: 1) leave all the styles in the main CSS file even if the user never hits the page that uses them 2) refactor manually and risk a visual regression. A decent CSS-in-JS setup will give you red squiggly lines in VSCode if you have eslint setup and try to use something that is defined in the wrong place. &gt; surely there are different caveats for css-in-js? Oh for sure. Remember I said I don't like CSS-in-JS? ;) &gt; you need a way to look up what the properties are Yeah, I agree, but for some people, JS is a hammer and everything looks like a nail
&gt; Css in JS applied using Styled Components is superior to CSS. why? &gt; You can define your styles in a more compact way with less duplication than you can in plain CSS. how? &gt; And you have the full power of JavaScript to produce your dynamic styles. what advantage does this give you over things like css-variables and css-animations?
I think of DI in JS simply as a parameter passed into a function.
When your project uses many custom objects. Classes would definitely ease the object development and maintenance. But only if the JavaScript engine supports ES6.
Eric Elliott would say basically never, in favor of factories
&gt; but not all of the page refreshes for some reason Possible reason is that the XHR did not succeed. Either the resource can not be found, the network request is rejected by the server, or the connection to the server has failed.
OP, these are the things you should google, you'll need some more knowledge surrounding these things.
I don’t remember what I originally used to learn JavaScript. I think it was a lot of JavaScript YouTube videos and maybe a for dummies book. Since then It’s just a lot of googling. My company provides me a Pluralsight account. Great content but it’s not free. I’m not sure how the content matches up with udemy. I would have to guess it’s better but I’m sure they have some quality content.
I think of DI containers at least as slightly obscured ServiceLocators
Yikes. In that case, I presume not even the conventional singleton code pattern will help. If JS sees this as two modules, then you'd get two separate classes, each with their own static instance.
This quirk has the same effect on Class.getInstance if Class is exported from a module. Maybe a global Class is preferable? No, it can easily be overwritten. There doesn't seem to be a proper way to implement a singleton in JS so I would just stick to a module export.
It sounds like you're looking for an e-commerce solution, rather than something specifically in Javascript
See #1 in the FAQs.
Test your knowledge in Computer Science by trying out a little Trivia App I wrote in pure HTML, CSS &amp; Javascript. Please let me know feedback if you have any. [https://letsandeepio.github.io/Trivia-App/#](https://letsandeepio.github.io/Trivia-App/#)
Just tried that. Posted results in original post.
&gt; There doesn't seem to be a proper way to implement a singleton in JS There is. But like I said, it's incredibly convoluted: // a singleton that is resistance to module loading undefined behavior if (!global.myThing) { Object.defineProperty(global, 'myThing', { value: theValue, writable: false, enumerable: false, }); } export default myThing;
There is an abhorrent amount of terrible educational material. So I appreciate quality educators. I do have concerns on skipping straight into es6. I consider es5 necessary learning. I think it’s bad to go from no JavaScript experience to ES6. You would miss out too much on content you will see during the course of your career. For example es6 basically killed var. I appreciate this as I think it helps enforce best practices. However, let and const don’t “hoist” and I think this could cause you to not learn essential content. Although I guess time is precious and jumping into the deep end is usually my approach to learning. So I would probably not practice what I was preaching if I had to learn it again.
[removed]
How about transitioning between screens? That’s something that always gets me on the web. There’s always flickering if there’s even an attempt at an animation. It’s really noticeable to me.
&gt; I don't use Angular, but the correct answer for the given example is almost certainly to configure DI to inject a counter service that is created for the same lifetime as the buttons, and NOT to make it so you can only ever create one. That's exactly what Angular allows you to do. You have 3 places where you can "provide" (inject) anything: * on the global scope (a truly singleton); * on the scope of an Angular Module so everything that belongs to this module has access to that instance data; * and even at the Angular Component level, in which case only that specific component has access, and pretty much stops being a "singleton" anymore. The Angular DI looks for the first instance that appears in the DI tree based on the scope that you provide. Here is a good explanation of how that works for anyone interested https://codecraft.tv/courses/angular/dependency-injection-and-providers/ngmodule-providers-vs-component-providers-vs-component-viewproviders/ I agree that this article is not very well written.
I would agree that learning vanilla ES5 / ES6, etc would be helpful to your career. Knowing the quirks of a language and how it handles things such as scope, hoisting, etc is very important when trying to solve problems, even with frameworks. Also most of those frameworks were built on principals of the language itself, so if you know the language the framework will make a lot more sense.
Babel wont solve the support issues with polyfill stuff? Genuinely asking.
Never, functions and objects are everything you need.
Wow, I'm impressed. I'll start using this ASAP and provide any feedback I can. Initial feedback from browsing the repo: - TypeScript definitions would be nice. - Do you need the peer dependency on react-dom? - Any plans for tests? - The module option imports a Babel runtime helper for Object.assign and transpiles destructuring. Maybe this is just preference, but I prefer the module option to only transpile things that aren't implemented in the latest browsers/runtimes.
Thank you for the tips. I am following udacity's react course notes. Can you recommend some other good resources?
CSS in JS allows you to create something like API for your components, and you can name it however you want, so you can structure it better and be more readable. For example, background : black just tells me what will happen. A prop to component called "turnFeatureOff" which triggers background : black gives more insight why something is here. Also, CSS in JS allows for single file components, which is the best structure for large apps.
Hi /u/DarkSchneider78, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mushinskyy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/frosTRex, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/icedutah, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/AbdelkhalekESI, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/PhillyD177, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Keet_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Nice work!
Hi /u/mizukuro, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/excellentwebworld, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
&gt;CSS in JS allows you to create something like API for your components, and you can name it however you want Pardon my naiveté, but how is this different from what you can get with CSS :-\\ &gt;A prop to component called "turnFeatureOff" which triggers background : black gives more insight why something is here. You can do the same with css, like, ``` function MyComponent({ turnFeatureOff }) { return ( &lt;div className={\` ${turnFeatureOff &amp;&amp; 'bg-black'} \`}&gt; content &lt;/div&gt; ); } ``` &gt; CSS in JS allows for single file components, which is the best structure for large apps. Why is that?
Nice! Thanks for the resource!
I have never used bootstrap, but in my understanding it was designed to solve the old floaty grid way of creating layouts with css. To me this feels kinda like what jquery used to do for javascript. Now css in js or styled-components is kind of doing to css what react is doing to js. You get the full leverage of js in your css and that’s pure power. I suggest you to just try it. Especially if you’re building stuff with react.
&gt; As for JavaScript, it is always appropriate to use classes. it's not "always" appropriate to do anything. in any language. you can reuse/compose functions a lot more easily than you can reuse classes.
Wouldn't be another article about JS design patterns without someone pointing out why it's wrong.
Because they are a lot of them in those apps, and each of them represent one bit of business logic/information to be presented. Separation of concerns doesn't belong in frontend, those are concepts brought by backend people who just want to have everything the same as they like. Backendification of frontend is something to be opposed of, and that's why things like Angular are bloated abominations from people who just want to write backend. Frontend should be tidy, functional, event driven, reusable and as simple as possible.
TS would be great, if it came in by contribution i would merge, but i'm not good enough in it to do it myself. react-dom as a peer dep is a mistake, the lib should be cross platform the way it works. Tests will come. And as for the babel helper, that makes sense, i will remove it now.
TypeScript is a trade off, you have to explain some things to the compiler but the compiler checks your work in return. Defining type definitions isn't that difficult either, it's extremely easy to do. You don't need to define every piece of the library but you can explain the definitions as you use the library. &amp;#x200B; Seem's like you had a bad experience with TypeScript so you are bitter about it. If TS isn't your cup of tea it's fine but it seems like you're blowing the one line fix out of proportion. TS usually increases the development time for people who don't understand how it works, and they end up fighting the compiler instead of working with it. &amp;#x200B; The thing about commented code is that it can lie. I can rename a property one in place and every where in my code that accesses that property needs to be updated including any comments that reference it and JSDoc's. TS creates always truthful documentation by using the code as documentation, and the compiler checks the code for you. There is no type checking for comments or JSDoc.
This seems to be the state of all tech blogs these days. Kid out of college gets job, employer/mentor encourages personal branding via blogs and social media, blogs and social media fill up with content devoid of anything new or valuable.
who gives a shit
Good points and well articulated. Yes, I've had several terrible experiences with TypeScript. I spent the time to learn it... about 2 weeks along with being pushed into multiple projects and it continues to give me headaches. Maybe I'll try again eventually but for now I'm jaded at the attempt to force JS to be typed. Python isn't typed and it works fine... so does JS.
Many uses, but don't make a mess and keep it simple by just using it to encapsulate *state*, with associated methods. o = new MyThing(1) o.add(2) x = o.getTotal() Do not force it. If what you are modeling doesn't fit naturally into a conceptual model of objects, then don't do it, or you end up with a mess. Don't do stuff like this, but you will see it everywhere. t = new TemperatureAsF(32) t.convertToC() Doesn't that seem forced? Who needs state there? Why is temperature an object? Should just be a variable passed to a function. Classes are also well used for architectural reasons, like in a web framework. But that's mostly an ergonomic thing. Like [controllers in adonisjs](https://adonisjs.com/docs/4.1/controllers)
Would you want the source to be converted to TypeScript or just the definitions added as a separate file? If you would rather have a separate file, it would need to be kept up to date manually as the source changes.
Are you going to be making more than one of something? Do those things need to have a similar structure, set of properties, and methods? Use a class. Or a factory. Are you only making one instance of a thing? Don't use a class. ...or do, if you like classes. It really doesn't matter as long as you're consistent internally.
I would prefer a conversion, that way i don't have to go through the maintenance troubles. The changes you've proposed are in btw. Tests come hopefully tomorrow.
I'll one up the authors example of Singleton use cases. Focus Management. It's definitely a lot better implementated as a Singleton. If you do any UI development you probably ran into focus management situations (accessible dialogs for example)
* CSS-in-JS allows for css selector minification because the JS framework control both the selector creation and its insertion into the html dom. CSS selector minification without this is possible, but it is extremely error prone and requires a very complex build process by comparison. * Some css themes and styles represent either infinitely dynamic or a combinatorial explosion of styles, which will at minimum require a significant number of class names in the dom, a significant amount of css duplication, or both. This could be handled by css if it had native functions that could generate other styles and classes, but it doesn’t. * You get unintentional global style cascade prevention for free. CSS-in-JS lets you opt into the cascade. * Shared styles is trivial in CSS-in-JS, because the data that defines the styles can be shared across multiple components even easier than in css. Further, JS can perform operations on its own code and data. For example, there is no css “filter(.some-class, ‘positioning’)” function that will generate a new style set that is the styles of .some-class but without any positioning styles like ‘top’, ‘padding’, etc. * Not all of us have the luxury of simply only supporting the browsers that have the features we want to use. * `{margin}-{direction}-{distance}` is uuuuuuuuuuuuuugly!
Awesome! Again, great job on this.
U mad?
Different people have different requirements. Angular is fine.
Use yopmail instead.
Generally these sort of comparisons are not good. I'd want to know the total size of an enterprise site built in each of these frameworks on a per page loaded basis. I'd want to know the performance of those sites in the frameworks. I would want to know how likely it is for someone to create a bug in those frameworks. I'd want to know what libraries would need to be added to make an enterprise level site as some definitely have a lot more functionality. I'd also want to know the time it takes to write the site as some frameworks are way faster than others.
Guys I just learned about the world and now I will share it with everyone like its brand new information \- young idiots these days Humility is a lost value in this narcissistic self-absorbed age. These fools have never known a life without internet and have never seen a real war or struggle so they invent their own oppression and talk like they seen shit
OP here. I'm the PI (Principal Investigator, fancy name for the person reponsible for a research project) for a [project](https://www.nsf.gov/awardsearch/showAward?AWD_ID=1747219) funded by National Science Foundation to research and develop solutions for code debt. The survey is meant to find what type of code suggestions and transformations JS developers find useful. Hope you'll find it interesting, and we'll share back the results :-)
I think opening an entirely new window would keep it focused. If youre trying to cheat on a test just use your phone lol
Do you want to do this on your own browser, or implement this for your site viewers? I believe that would be in violation of browser security protections to implement for site viewers, however you can do it for your own browser. You'll probably need something like GreaseMonkey and fiddle with browser settings.
Not only that, but you could also define a static local variable -- no class needed. Singleton&amp; get_singleton() { static Singleton singleton; return singleton; }
While I agree that I made a gross generalisation. It is still possible to achieve this with classes. Think about the Math object. If you are gonna reuse this part of code everwhere and it’s not dependant to an instanciated class. Why not just create a class with static methods. Doing so helps with encapsulation and you avoid having “global” functions. It all depends on your design in the end.
&gt; I think people have a lot of baggage from the old Gang of Four Design Patterns book which is more relevant to languages that look like C++ than a multi-paradigm language like Javascript. Design Patterns has examples in both C++ and Smalltalk, so it's actually quite relevant even to a flexible dynamically typed object-oriented language. The real problem is that very few people today have actually *read* Design Patterns. Instead, all they know of it is from watered down third hand sources like the linked article. There is a ton of wisdom in the book that gets lost in translation this way, and then people criticize the book itself. I'll admit, it's a pretty dry read (they thought they were writing a textbook for software engineering academics, not a book for industry use), but there's a lot in it. But you do have to actually read it.
The real world apps are out of date and not valid comparisons. Just one example is the React/Redux example that is over 2 years old, and since 16.8 it doesn't require Redux for that use case.
While I agree that I made a gross generalisation. It is still possible to achieve this with classes. Think about the Math object. If you are gonna reuse this part of code everwhere and it’s not dependant to an instanciated class. Why not just create a class with static methods. Doing so helps with encapsulation and you avoid having “global” functions. It all depends on your design in the end.
So document.getElementById('notemoderator').value = 'WHATEVER'; would allow you change the text inside of the textarea. I think you could simply pass the text to the function and put it where I have 'whatever'. You don't need to createTextNode. This is assuming I understand what you are wanting to do.
Factories? Dependency injection?
your insert function takes two arguments, and you are only calling it with one. It does not need document as the first argument, that is globally accessible
I tried that already. &amp;#x200B; [//document.getElementById](//document.getElementById)("notemoderator").value = ""; [//document.getElementById](//document.getElementById)("notemoderator").value = text; &amp;#x200B; But that did not input the text into the textarea field like the other one did.
[removed]
I see a bug in your code on the insert function. have you tried putting it literally in the onclick?
i tried this but it doesnt seem to work &lt;script&gt; function insert(text) { var paragraph = document.getElementById("notemoderator"); var text = document.createTextNode(text); paragraph.appendChild(text); } &lt;/script&gt; &lt;button title="image1" type="button" onclick="insert("CONTENT1");"&gt;CONTENT1&lt;/button&gt; &lt;button title="image1" type="button" onclick="insert("CONTENT1);"&gt;CONTENT1&lt;/button&gt;
[https://jsfiddle.net/carLs2e5/](https://jsfiddle.net/carLs2e5/) . This shows it working. I think it's likely the bug.
An API wrapper where you need a lot of getters, setters, and bound methods for ease-of-use by other people.
yeah that seemed to not have effect either &lt;button title="image1" type="button" onclick="var paragraph = document.getElementById("notemoderator");var text = document.createTextNode(text);paragraph.appendChild(text);;"&gt;CONTENT1&lt;/button&gt;
"But the example for framework X... Blah blah." Go contribute like it says if you're not happy. Or realize you're right, it can be done a better, not complain and move on with life.
can i see the whole html?
in an empty file that seems to work. I am trying to modify MyBB forum software. I am not sure if that effects the normal operation of javascript. There, the try button doesnt input any text into the field. https://imgur.com/a/FiW7kcV
Generally you try to take information from people that are considered experts. I would listen to someone like Eric Elliott or Kyle Simpson before I'd take a random guy on StackOverflows opinion. Kyle Simpson also pushes functions over classes.
Have you tried inlining the actual document.getElement... inside of the onclick instead of in the separate function? I will admit I haven't modified BB software for a decade but javascript is javascript and usually just works.
Everyone seems to be shitting on this article. If you don't like this article, what would you say are some good books/resources on the subject?
This is just he notemoderator tag and all within https://pastebin.com/fVj9qvzG
yeah i have tried that as well
`&lt;button title="image1" type="button" onclick="document.getElementById('notemoderator').value='WHATEVER';"&gt;WHATEVER&lt;/button&gt;` You don't need all of that you have.
I have tried that and it doesnt seem to insert the text into the field.
 &lt;!DOCTYPE=html&gt; &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; &lt;script&gt; function insert(text) { var paragraph = document.getElementById("notemoderator"); var text = document.createTextNode(text); paragraph.appendChild(text); } &lt;/script&gt; &lt;textarea id="notemoderator"&gt;&lt;/textarea&gt; &lt;button onclick="insert('hello reddit')" type="button"&gt;insert&lt;/button&gt; &lt;/body&gt; &lt;/html&gt;
i tired that but it didnt seem to work &lt;tr&gt; &lt;td class="trow2" valign="top"&gt;&lt;strong&gt;Add {$lang-&gt;notemoderator_message}:&lt;/strong&gt;&lt;br /&gt; &lt;label&gt;&lt;input type="radio" name="notemoderatortype" {$notemoderator_normal} value="1" style="vertical-align: middle;" /&gt; {$lang-&gt;notemoderator_normal}&lt;/label&gt;&lt;br /&gt; &lt;label&gt;&lt;input type="radio" name="notemoderatortype" {$notemoderator_information} value="2" style="vertical-align: middle;" /&gt; {$lang-&gt;notemoderator_information}&lt;/label&gt;&lt;br /&gt; &lt;label&gt;&lt;input type="radio" name="notemoderatortype" {$notemoderator_warn} value="3" style="vertical-align: middle;" /&gt; {$lang-&gt;notemoderator_warn}&lt;/label&gt;&lt;br /&gt;&lt;br /&gt; {$notemoderator_pm} {$notemoderator_delete} &lt;/td&gt; &lt;td class="trow2"&gt; &lt;input type="hidden" name="nmid" value="{$nmid}" /&gt; &lt;input type="hidden" name="modaction" value="notemoderator" /&gt; &lt;textarea name="notemoderator" id="notemoderator" rows="10" cols="70" tabindex="3"&gt;{$notemoderator_message}&lt;/textarea&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler2') .style.display=='none') {document.getElementById('spoiler2') .style.display=''}else{document.getElementById('spoiler2') .style.display='none'};"&gt;No BBcode Answer&lt;/button&gt; &lt;div id="spoiler2" style="display:none"&gt; Please post all code, output and errors (in it's entirety) between their respective tags. Refer to [url=https://python-forum.io/misc.php?action=help&amp;hid=25]BBCode[/url] help topic on how to post. Use the "Preview Post" button to make sure the code is presented as you expect before hitting the "Post Reply/Thread" button. &lt;/div&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler3') .style.display=='none') {document.getElementById('spoiler3') .style.display=''}else{document.getElementById('spoiler3') .style.display='none'};"&gt;Wrong Forum Answer&lt;/button&gt; &lt;div id="spoiler3" style="display:none"&gt; Please make new threads in the correct forum. Refer to the [url=https://python-forum.io/misc.php?action=help&amp;hid=24]Forum Structure[/url] for a full overview on what each forum is for. &lt;/div&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler4') .style.display=='none') {document.getElementById('spoiler4') .style.display=''}else{document.getElementById('spoiler4') .style.display='none'};"&gt;Please Mark as Solved&lt;/button&gt; &lt;div id="spoiler4" style="display:none"&gt; Please mark your thread as solved when you resolve your original problem. More info [url=https://python-forum.io/misc.php?action=help&amp;hid=50]here[/url] &lt;/div&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler5') .style.display=='none') {document.getElementById('spoiler5') .style.display=''}else{document.getElementById('spoiler5') .style.display='none'};"&gt;I Marked as Solved&lt;/button&gt; &lt;div id="spoiler5" style="display:none"&gt; Marked thread as solved. Please mark your thread as solved next time when you resolve your original problem. More info [url=https://python-forum.io/misc.php?action=help&amp;hid=50]here[/url] &lt;/div&gt; &lt;script&gt; function insert(text) { var paragraph = document.getElementById("notemoderator"); var text = document.createTextNode(text); paragraph.appendChild(text); } &lt;/script&gt; &lt;button onclick="insert('hello reddit')" type="button"&gt;insert&lt;/button&gt; {$codebuttonsmod} &lt;/td&gt; &lt;/tr&gt;
here is the template which i guess would be more simpler &lt;tr&gt; &lt;td class="trow2" valign="top"&gt;&lt;strong&gt;Add {$lang-&gt;notemoderator_message}:&lt;/strong&gt;&lt;br /&gt; &lt;label&gt;&lt;input type="radio" name="notemoderatortype" {$notemoderator_normal} value="1" style="vertical-align: middle;" /&gt; {$lang-&gt;notemoderator_normal}&lt;/label&gt;&lt;br /&gt; &lt;label&gt;&lt;input type="radio" name="notemoderatortype" {$notemoderator_information} value="2" style="vertical-align: middle;" /&gt; {$lang-&gt;notemoderator_information}&lt;/label&gt;&lt;br /&gt; &lt;label&gt;&lt;input type="radio" name="notemoderatortype" {$notemoderator_warn} value="3" style="vertical-align: middle;" /&gt; {$lang-&gt;notemoderator_warn}&lt;/label&gt;&lt;br /&gt;&lt;br /&gt; {$notemoderator_pm} {$notemoderator_delete} &lt;/td&gt; &lt;td class="trow2"&gt; &lt;input type="hidden" name="nmid" value="{$nmid}" /&gt; &lt;input type="hidden" name="modaction" value="notemoderator" /&gt; &lt;textarea name="notemoderator" id="notemoderator" rows="10" cols="70" tabindex="3"&gt;{$notemoderator_message}&lt;/textarea&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler2') .style.display=='none') {document.getElementById('spoiler2') .style.display=''}else{document.getElementById('spoiler2') .style.display='none'};"&gt;No BBcode Answer&lt;/button&gt; &lt;div id="spoiler2" style="display:none"&gt; Please post all code, output and errors (in it's entirety) between their respective tags. Refer to [url=https://python-forum.io/misc.php?action=help&amp;hid=25]BBCode[/url] help topic on how to post. Use the "Preview Post" button to make sure the code is presented as you expect before hitting the "Post Reply/Thread" button. &lt;/div&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler3') .style.display=='none') {document.getElementById('spoiler3') .style.display=''}else{document.getElementById('spoiler3') .style.display='none'};"&gt;Wrong Forum Answer&lt;/button&gt; &lt;div id="spoiler3" style="display:none"&gt; Please make new threads in the correct forum. Refer to the [url=https://python-forum.io/misc.php?action=help&amp;hid=24]Forum Structure[/url] for a full overview on what each forum is for. &lt;/div&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler4') .style.display=='none') {document.getElementById('spoiler4') .style.display=''}else{document.getElementById('spoiler4') .style.display='none'};"&gt;Please Mark as Solved&lt;/button&gt; &lt;div id="spoiler4" style="display:none"&gt; Please mark your thread as solved when you resolve your original problem. More info [url=https://python-forum.io/misc.php?action=help&amp;hid=50]here[/url] &lt;/div&gt; &lt;button title="image1" type="button" onclick="if(document.getElementById('spoiler5') .style.display=='none') {document.getElementById('spoiler5') .style.display=''}else{document.getElementById('spoiler5') .style.display='none'};"&gt;I Marked as Solved&lt;/button&gt; &lt;div id="spoiler5" style="display:none"&gt; Marked thread as solved. Please mark your thread as solved next time when you resolve your original problem. More info [url=https://python-forum.io/misc.php?action=help&amp;hid=50]here[/url] &lt;/div&gt; &lt;script&gt; function insert(text) { var paragraph = document.getElementById("notemoderator"); var text = document.createTextNode(text); paragraph.appendChild(text); } &lt;/script&gt; &lt;button onclick="insert('hello reddit')" type="button"&gt;insert&lt;/button&gt; {$codebuttonsmod} &lt;/td&gt; &lt;/tr&gt;
Hmm my guess is it’s something specific to the bb code. I’d try asking where people have more specific knowledge of that. Usually there are forums that support the forum code.
I have posted in their forums. But they usually are tailored to answering simple "how setup mybb forum" questions. It can take a long time for someone to answer more involved questions. And sometimes if it has anything relating to a plugin, no one answers. This is the post https://community.mybb.com/thread-222636.html
Surround the comma in a &lt;blink&gt; tag so it’s there half the time.
Very cool!
What’s the answer though?
Like where cows get killed?
Random question but something I can never find an answer to. How do you format code in Reddit?
Hey thanks a lot man, but I'm a little confused. Why did it say barStacks was undefined for me?
CSS in js is probably fine for the legacy browser scenario. Though, I'd personally go the progressive enhancement route, and stick with regular css, and say that IE doesn't get dynamic themes. Maybe to an IE specific build of my css and load that in IE browsers.
CSS variables are ok but I'd sooner use JS variables or rather TypeScript variables -- that's another benefit: I get typed styling with CSS in TypeScript. In my haste yesterday I forgot to list another key benefit of CSS in JS: scoped CSS, which you get for free as the library properly isolates classes in the most efficient way. A large project written in un-scoped CSS is not even worth considering. I am not sure what you mean about css-animations? Styled Components supports keyframes just fine and you have the full power of JS/TS to produce your animations in a compact way. You mentioned bootstrap in your opening post: Do you not wonder why bootstrap is written in SASS? It's because it allows you to define your style in a more efficient way that is easy to change later. As well as variables it allows you to compute your final style from a more compact source model. Well, JS is like SASS++ and works at runtime rather than compile time. If you need this explaining further then I cannot help. Just produce a complex dynamic web application using both approaches and the penny should soon drop.
Have read it. Send water.
Incredible. Been working with JavaScript for 18 years and had no idea you could do this. Didn't realize `AudioContext` was a thing.
Broadly the answer is not straightforward if we are talking about JavaScript, because strictly speaking Classes do not accomplish anything which cannot be accomplished directly using and modifying object prototypes. The question is even more complicated as some have alluded to depending on the programming paradigm preference wherein if you tend to swing more functional you will tend to use less or none at all! &amp;#x200B; For your use-case though think about the likelihood that it would be useful to have multiple instances of something. You mention having a group of dogs so it's likely you will want to have the ability to create multiple dogs. Classes can serve as a sort of template which can describe that dog in terms of what it is and what it can do. If your dog has state that it needs to manage using a class can help further by describing how to access and update this state which gets into the topic of encapsulation. If you want to start using inheritance to relationally model your application and objects classes become more useful too. To summarize for your use case: will I need multiple instances, with their own state, and that might or might not exploit inheritance? &amp;#x200B; You are going to find lots of differing opinions on this topic though because classes are not strictly needed in JS applications even at a large scale, but they can help accommodate a certain style of programming which is popular. With the prevalence of functional programming right now their utility is further in question and personally I am biased in this perspective. &amp;#x200B; Find what works for you and good luck! Happy coding :D
I test for Chrome, Safari, and Firefox. Stuff that works for both Chrome and Safari often doesn't work with Firefox. Overflows and layout mostly. Maybe I'm a bad coder, but it's pretty much always Firefox. Also, it's just a bit more sluggish for complex apps.
Besides the awesome coding. The tune is very chill and gives me this chilly night, japanese retro game vibe.
Sure.
&gt;constructors you kiss your mama with that mouth?
Because literally anyone can write anything for Medium. You create an account, you publish. There is no vetting. Half the articles Google suggests to me on my phone are barely coherent and acting like some very basic CS concept is a revelation.
I upvoted you
Pretty neat, I've just recently got into Sonic Pi for coding music, check out if you haven't already.
The difference being that converting from a functional component to a class component doesn't necessitate reading a 2700-word blog post to understand what's going on.
For me it’s about only delivering the critical css to the user. If they only use a button, why given them the styles for all the different utilities components. By having the styles live with the component, it’s not beholden to any markup or project. It can be shared and reused on its own. When you have 30 or 40 devs working on a product it also becomes about legacy code. I can be confident that when I delete styles in a component, those changes won’t impact components or pages I didn’t intend on impacting. Besides all that, you get vendor prefixing and css modules for free. No more coming up with long ass class names or relying on your peers to use proper BEM, as everything is just scoped.
Yes indeed
sounds really catchy: could probably be recorded and used for a game bgm!
More: kid out of college needs a job (or even kid still in college), realizes having a blog that makes it sound like he has a lot of experience is probably as good as real experience for interviews (or even better), and is one of the only ways to bypass the "you need experience to get experience" conundrum
How about forming your own opinion based on the task at hand, personal preferences or even project's code guide?
it's very new so don't feel bad
I heard about it yesterday and I am digging it too, but it still is missing a couple of basic features: - no undo, if you delete something, it's simply gone. - no drag and drop to sort blocks - keyboard shortcuts I have been using Notion.so (note taking app) for a few weeks now and I feel it's super easy to use, they use markdown shortcuts, so you don't need to keep selecting text to modify it, you can do it all with the keyboard. For example you type * and it automatically knows you want to start a bulleted list, type --- and it creates a horizontal rule, etc. If editor.js would tweak at least their shortcuts, it would be nearly perfect for web editing. But I am counting on it getting better!
I'll give it a try after lunch. I'll edit this comment with impression. :)
Great job, I like it!
Hi /u/webex123, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
How hard would it be to produce react applications with an editor like this?
Nice, what alternatives exist?
Safari, iPhone X.
To remove items from an array, you generally want to use `splice` which is actually a general purpose function for modifying arrays. The form you use to remove an item at an index is `this.data.splice(index, 1);` which can be read as 'delete 1 item after index`. I'm not sure what you're trying to do by removing the name and age properties too. It's certainly possible, but I suspect you're trying to do something unnecessary. Can you elaborate?
Just drop support for IE11 and you can use all the modern JS you want based on individual feature support described on caniuse.com.
What do you mean with „react applications“? Applications usually require some glue code and logic.
Mom?
&gt;Design Patterns has examples in both C++ and Smalltalk, so it's actually quite relevant even to a flexible dynamically typed object-oriented language. I don't think that makes it necessarily similar to JS though. There's a lot of well-architectured JS code that doesn't give OO a second thought. The Smalltalk examples are very much in the "this is a parallel to C++" code mindset, IIRC (I haven't read GoF since 2004 so I'm happy to be wrong if it generates discussion).
Well, I was thinking about the front end only. A skeleton that I can use to then add logic. Basicly I imagine it to allow me to render props that I provide samples for. Then when I "export" the project I just have to gather and pass data around.
https://draftjs.org/ is the standard WYSIWYG editor imo, editorjs appears to have a similar intention
Sounds like FramerX
just this - ckeditor5
Vanilla JS is just Javascript, as you encounter it in browser environment, without any extra libraries. There some benefit to learning ES5 if you have to deal with legacy code. But...the entirety of Javascript is syntactic sugar. In no way are you learning what's happening under the hood by learning ES5 first. ES5 is as far away from what's under the hood as ES6.
Plain, common ES6. A cook follows a recipe. A chef invents recipes because he understands the ingredients. Do you want to be a cook or a chef? You can actually make a very good living just being a cook, but the top jobs go to the people who understand the tools. Also, it's way more fun doing things if you understand why you are doing them. Should a beginner learn it? I think it's the first thing you should learn, but it depends what type of career you want.
It would be nice if instead of outputting JSON, it could output JSX.
The term "vanilla" has no meaning. Some people are mixing up javascript and the dom api. I've seen others saying you shouldn't use libraries, and they're calling it vanilla. Whatever. Of course you should learn javascript if you're making web pages and applications. ES6 and up just brought new capabilities, but the language principles never changed.
[removed]
There are still best practices that are language specific. Personal preference and projects code guide would definitely come second to that. I agree task at hand but it’s unlikely to outweigh what is the industry standard best way of doing things. It’s pretty widely accepted by the professions top people that functions and objects should be used instead of classes in nearly all cases with few exceptions.
Because all the senior experts are too afraid to write because the more you know, the more you know what you don't know.
&gt;it's very new Though the basics look pretty well-supported already unless you need to support legacy browsers: [https://developer.mozilla.org/en-US/docs/Web/API/AudioContext#Browser\_compatibility](https://developer.mozilla.org/en-US/docs/Web/API/AudioContext#Browser_compatibility) [https://caniuse.com/#search=webaudio](https://caniuse.com/#search=webaudio)
&gt;A Singleton in JavaScript looks like this: &gt; &gt;{} That is not a singleton by my understanding. The point of a singleton is that where-ever you instantiate it you get the same one. If you use an object literal like that you get a different object each time, not a reference to the same one. Of course if you have a named object in global scope then yes that would be a singleton (and in a more specific scope it would be a localised singleton). Too many people seem to misunderstand what a singleton actually is (or should be). It is intended as a coordination point between otherwise decoupled objects, an object oriented mutex, or to save instantiating multiple copies of identical structures. Part of the point of instantiating a singleton via a factory method rather than just declaring it as a literal or otherwise, is that the calling code does not necessarily have to know it is talking to a singleton. It could ask for its configuration object, and get one not knowing or caring whether that it is a shared resource or not. The pattern is not as commonly needed as its prominence in pattern discussions might suggest (that prominence is due to it being very simple, so it is usually the first mentioned). Even less so in JS environments where you are not working in an object oriented manner (remember: the Gang Of Four design patters book was specifically talking about object oriented design patterns - if you are working in a conceptually different manner then those patterns might be the wrong tools for the job, and in that case the fault is choosing the wrong tool not the tool being at fault).
Not being useful often does not make something useless. Know your tools, including the ones you don't use often so you can use them when they *are* actually the right one for the job.
It is more fun when implemented with a generator: myObject[Symbol.iterator] = function* () { let count = 0; while(true) { yield count; count ++; } };
It's not.
This is one of the few ways someone without industry or family connections can get hired. Don’t hate the player, hate the game.
Prefix each line with four spaces LIKE THIS
Man, serves me right for clicking the Start button multiple times. Nice work too.
Running Safari 12.1 (caniuse says web audio is supported there) and still get AudioContext is undefined. Guess not that well supported...
You don't make money with tech-related blogs. Guess who'll do it for free?
/r/whoosh
[https://github.com/phylogeny-explorer/explorer/](https://github.com/phylogeny-explorer/explorer/)
CanIUse says "supported with prefix" - I'm not quite sure what that means in this context (it is usually used in the case of CSS properties) but it might indicate that Safari doesn't quite follow the standard yet and needs a bit of extra help. The author could possible jump through the hoop to support Safari, though unless iOS support is specifically important to them I'd suggest not doing so and waiting for Apple to tidy up their side instead. My attitude to "doesn't work in Safari" being very similar to my attitude to "doesn't work in Internet Explorer".
Cool thanks!
Yiu could make some component wrappers for the editor right? :/
Well I can't say until I see your implementation. When I used the example code you posted it worked for me.
Hey, it looks cool. A heads up, though: There are *a lot* of grammar and spelling mistakes in there
Its not JS but Wagtail is a full blown CMS with a block editor which
[https://jsfiddle.net/stdio/wakszbx0/79/](https://jsfiddle.net/stdio/wakszbx0/79/) (after some cleanup) I added: var AudioContext = window.AudioContext || window.webkitAudioContext to fall back to prefixed one
Not iOS Safari. The latest macOS Safari. Author seems to have added prefix support, though, which is cool!
cant see any difference - both are modern editors with similar structure, both use inner model and plugin-based features system where each view-block (like paragraphs, images, inline stuff) is a separate plugin. Ckeditor5 can outputs anything - html or inner model by default, any other format (like json) via plugin-converter from inner model
Haha! I tried hitting it several times after you mentioned it. Not quite as pleasant sounding!
Hi /u/Cloud_Strifeeee, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sicilian_najdorf, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Sauloxd, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/metulburr, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/CBertin, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/deadend44, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Either way, it's not too difficult to merge some changes and not others. It's not like they have to redo all of their work every time chromium updates.
Hi /u/jarnugirdhar, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/vdm_13, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Cloud_Strifeeee, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sicilian_najdorf, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/slimjim_belushi, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Not really. You should be able to pay the yearly subscription for their whole product bundle with like 3-4 hours of work tops. Seems like pretty damn good value to me, considering how much they help productivity.
Eh. He's comparing a bare bones text editor with a fully featured IDE. As far as IDE's go, jetbrains run pretty well I think.
This editor here appears to be created especially to move paragraphs around easy. It is as if you write every paragraph on a sticky note, and move the sticky notes around. In CKEditor, if you want to move blocks around, you have to be *very careful* to select an entire block, and not, accidentally, move half a sentence to somewhere else.
You want to talk about webstorm using too much resources by comparing it to an electron app? Lol
I've been meaning to use 37signals' Trix editor for a while now: https://trix-editor.org/ It's what they use on Basecamp and I think it's well made and intuitive. Even our more computer-illiterate clients can figure it out. OP's link focuses more greatly on block editing, while Trix kind of hides all of that. Depends on usecase.
All of webstorm features are baked into pretty much all jetbrains products. You don't see people specifically using webstorm because they're probably using phpstorm, pycharm, intellij, etc. There's very little reason to use webstorm itself.
An IDE helps you write code, and it basically stops there. Your CI/CD process is exactly the same regardless of the editor. You're going to spend a lot of time getting VSCode to the point that it matches the features of a jetbrains ide out of the box. You're full of bias and certainly don't speak for the industry at large.
What would you consider are the main features you replicated in VSCode?
You can completely customize the entire UI pretty much.
Well yeah. You can't just upload a repo to Google and say "hey, I have an open source project, gimme your software". If you can't afford webstorm you probably don't need it anyway.
That's my thoughts exactly. How anyone can be a developer in 2019 and be concerned that their main software tool occasionally breaks the 1GB RAM mark is completely beyond me.
 This is not support information, its about how core JavaScript works. With this post I am not asking for help I am sharing knowledge. Did you even checked the post?
I agree. I support open source software and use it when I can, but I'm by no means above paying for software. In fact almost all the software I use on a daily basis costs money. I'm all about using the best tools I can at all times. Sometimes that means free (I use a Linux workstation, for example), and sometimes that means paid (Photoshop, jetbrains stuff, sublime text). Jetbrains could charge a whole lot more for their shit, considering they have industry leading IDE's for several different languages. I have the full product suite and it costs me $150/yr. Fucking peanuts.
You can even combine generators with [Symbol.asyncIterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator). Jake Archibald has an article showing off some pretty [powerful, asynchronous iteration](https://jakearchibald.com/2017/async-iterators-and-generators/) examples. &amp;#x200B; async function\* asyncRandomNumbers() { // This is a web service that returns a random number const url = '[https://www.random.org/decimal-fractions/?num=1&amp;dec=10&amp;col=1&amp;format=plain&amp;rnd=new](https://www.random.org/decimal-fractions/?num=1&amp;dec=10&amp;col=1&amp;format=plain&amp;rnd=new)'; &amp;#x200B; while (true) { const response = await fetch(url); const text = await response.text(); yield Number(text); } } async function printNumbers(limit) { let count = 0; for await (const number of asyncRandomNumbers()) { console.log(number); if (count++ &gt; limit) break; } }
100% agreed about CI/CD. The previous poster was touting CI/CD integrations as a reason to use webstorm. If by a lot of time you mean about a half hour from scratch or about 15 seconds cloning my dot files the sure. [The frontend industry “at large” does not use webstorm](https://2018.stateofjs.com/other-tools/#text_editors). At one point it was really the best, I used it when I was first getting started. No other editor/IDE could match its code completion which worked by executing code paths. This feature has been almost entirely eclipsed by the prevalence of TS typings. Using static types for code completion is obviously much faster and less error prone. Webstorm could autoformat and check your code for errors, now you need to configure webstorm to turn all of that off and enable eslint and prettier. Webstorm was 2 years late to the game with easy prettier support. The rest of the industry adopted it pretty much right away because it was an easy win and painless to add to pipeline. Webstorm had built in debugging. Chrome + Node solved this problem. Webstorm could run your tests. Jest got real popular real fast because it was batteries included and blazing fast. It’s CLI is so good that editor tooling is really unnecessary, but trivial to write. As usual, jest support in webstorm lagged. Webstorm’s once killer features solve a problems that no longer exists. The JS community has, for better or worse, adopted a unixy model for tooling, which makes big monolithic IDEs like webstorm a bit out of place.
\&gt; console.log(arr\[i\[j\]\]) This is incorrect, you're effectively trying to index i. You're asking for for j'th element of i and then using the result as the index for arr. \&gt; console.log(arr\[i\]\[j\]) This is correct. arr\[i\] is indexing arr and will give you a sub-array, which you then index a second time. Splitting it into steps might make it clearer. let subArray = arr\[i\] let item = subArray\[j\] console.log(item)
Well, you've only named about 4 useful features. If that's all you think WebStorm can do then sure, it's not useful to you.
It is my understanding that iterating over a simple array using for/in is bad practice, which may be part of your confusion. The values of i and j in your code are integers corresponding to the indexes of your array and subarrays. `for (let i in ['a','b','c']){console.log(i)}` `0` `1` `2` [https://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-a-bad-idea](https://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-a-bad-idea) So i is never an array, it is always an integer. `console.log(arr[i[j]])` This is incorrect, you're effectively trying to index i. You're asking for for j'th element of i and then using the result as the index for arr. `console.log(arr[i][j])` This is correct. arr\[i\] is indexing arr and will give you a sub-array, which you then index a second time. Splitting it into steps might make it clearer. `let subArray = arr[i]` `let item = subArray[j]` `console.log(item)` However, I'm not sure why the version of the function with console.log(arr\[i\[j\]\]) is printing out the subarrays... I'm getting the same thing when I try it: [https://www.screencast.com/t/piRyE217iVno](https://www.screencast.com/t/piRyE217iVno) It seems to print the subarray when j=0 and undefined otherwise, but I'd expect arr\[0\[0\]\] to be undefined and it is undefined when I type that manually. Maybe someone else can explain why this function logs the sub arrays like this.
First step if you want others to look at it, is document this a bit. Half the time, that helps you figure out what you did wrong yourself
So the `console.log(arr[i][j])` is how you would "traditionally" output each item in your array as you were iterating through it. In your loops, `i` and `j` are basically acting as indexes for the items in your arrays. Your first loop runs through the outer array (4 total items) and your second loop runs through each inner array (4 items each). The inner loop will run until it processes all of its items before the outer loop continues on to the next. It might help to write down on a piece of paper what the values of `i` and `j` are during each run of the loop so you can see how they correspond to each output value. `arr[0][0] == 4` `arr[0][1] == 5` ... `arr[1][0] == 13` ... The `console.log(arr[i[j]])` I think is actually invalid syntax and the parser is getting confused about what to output. When you sub in the values you'll see it doesn't really make sense with how arrays work in JS. `arr[0[0]]` is trying to get the first item on the integer zero which doesn't make sense. My best guess is that it's bailing out on the index part of that and just outputting `arr[0]`, `arr[1]`, etc. with some `undefined` in between. tl;dr JS is weird. But one is syntactically correct and the other is not.
Ok props for figuring this out. Probably better to use true for loops for iterating rather than for/in and hoping that the indexes come out right!
That answers that, thanks. Maybe I'll look into making a RealWorld app using hooks and context.
Reminds me of the songs in homestarrunner, like the teen girl squad intro
Why is it only compared to Parcel? Add some comparisons with webpack and Rollup as well. Pretty cool that it's written in Rust, though.
This is spoiled meat, who cares?
Nice, I've been playing with the bpm which is pretty cool. Very good work!
&gt;http://www.gameprogrammingpatterns.com/ Exactly, I don't understand the negativity towards this article. As a developer we always have to be refreshed on fundamental things.
This made me think of Notion as well, do you know if they've open sourced their editor?
I’ll give two suggestions. 1. Figure out what you need to to your data and do that without this function. It seems overly cumbersome for what looks like some simple string manipulation. 2. Just fix the last column after this call happens and leave this function to be someone else’s issue.
Oh wow definitely going to try this out right away! lol
Thank you very much for this explanation. I am studying now and im asking all the questions that I can not find online. If i can not get a job as a self-taught, then i will go to bootcamp and learn.
Being Full Stack jQuery, this will really give me more control over my career!
They probably never will, after all it is their differentiator.
Best ? you really have not seen much, do you ?
Hi /u/orliph, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SenatorOst, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/whowearshortshorts, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Dmitriyx, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thank you very much for the info, I'll post in the appropriate subreddit then.
Lol.
A lot of negativity in this thread. There's nothing _wrong_ with jQuery. Yes, you probably don't need to start new projects with it today, but a new patch release that improves performance and fixes a vulnerability is great for those still using it.
Eric Elliott is good at projecting confidence, but he's _not_ an expert. Obligitory [beware](https://www.reddit.com/r/javascript/comments/6q2lk0/why_composition_is_harder_with_classes/dku34cl/)^1 [referencing](https://www.reddit.com/r/javascript/comments/5c5lkq/what_eric_elliot_wants_to_say_can_somebody/d9u6tv3/)^2 or [learning](https://www.reddit.com/r/javascript/comments/837t82/who_are_some_of_your_favorite_speakers_educators/dvh0br6/)^3 from Eric Elliott. cc /u/jsearsy
IMO they aren't particularly useful and only have downsides (`this` context confusion.) No such problems with factories, closures and POJOs.
Will read, very interesting
That's nice and compact -- I have some experiments creating random songs using the webaudioAPI too here's one (WARNING! it's LOUD): [https://jeffdaze.com/code/music\_stuff/](https://jeffdaze.com/code/music_stuff/) &amp;#x200B; I like your approximations of kick / hi-hat / snare -- they would be useful for very tiny music applications...
&gt; https://trix-editor.org/ Written in Coffeescript... these guys are really stuck in the past.
Serverside jQuery sounds amazing!
It's still used in a lot of new projects, not to mentions the thousands of existing plugins.
Indeed. jQuery is old, but nevertheless it's a nice, clean little bit of code that served us all well. No need to hate on it.
I saw Cheerio described as serverside jquery recently
Hi /u/lfacpt, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
https://umbrellajs.com/ is a better/smaller/faster modern alternative
Also not JS, and also a full blown CMS: Statamic. It’s replicator and bard field types are incredibly powerful and pleasant to work with, as they can contain any other field type. Want your own field types? Just write them in Vue.
Some people don't want to pay a subscription on something that doesn't provide them with anything in return. The only logical reason I could see them charging for Webstorm would be for people who code for a living, but people who don't are out of luck, even if we are doing the exact same thing.....
I would like to know as well.
&gt; on something that doesn't provide them with anything in return Yeah, I don't know why anyone would buy it if they think it doesn't provide value. Not sure what you're trying to get at here. &gt; but people who don't are out of luck So you believe people should be entitled to free software just because they don't make money off it? Sounds ridiculous to be honest. If you're not using it for work it probably makes very little difference which editor you use.
Hi /u/rousanali, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/NomeAleatorio, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
The point is that it's no longer necessary to have a DOM manipulation / HTTP request library when it's easy and simple enough in regular vanilla JS
Yes it's a good library and it's quite new. It's originally a library developed by ZEISS. Then it got open sourced
Yes we know that but nonetheless, jQuery will always be a bit special.
To the haters in this thread - where is your FREE library that is used by millions of javascript projects and has saved people countless lifetimes of development effort? I'll wait
I mostly code in vanilla and React nowadays, but I do miss writing `$('.block').css('background', '#fff')` instead of `document.querySelectorAll('.block').forEach(el =&gt; el.style.background = '#fff')`
Yeah, we have a very large amount of 'legacy' code (relative to our team size/time it would take to strip jquery) using jQ. We're not going to be removing it any time soon, so performance, security, and minor feature updates are great. Also, our main UI framework depends on jQ, and that's not going away any time soon either, sooooo
[https://i.imgflip.com/2yc4qj.jpg](https://i.imgflip.com/2yc4qj.jpg)
Entirely true. We'll work on that soon. Thanks!
Did they remove their dependency on jQuery for this release? I heard that’s all the rage. Please note before downvoting this is intended as a joke. Then feel free to downvote anyway.
That's not how criticism works. People can criticize a product without having one of their own.
Just for your satisfaction, Packem is faster than webpack as well just that we didn't extensively conduct the tests. We considered making benches against Parcel only since it was slower. Check this tweet: https://twitter.com/bukharim96/status/1099049693290680321?s=20
All these losers bitching about jQuery. I bet your production site runs only on chrome 73 lmao.
I have literally never worked on a project that didn't include at least parts of jQuery. I don't know where people are getting this but in my country, jQuery is still absolutely essential if you want to land any kind of job.
Tearing down peoples work because you don't have a need for it isn't criticism, it's assholery
This is like the "i didn't like that movie" -- "Oh yeah, well then you make a better one" argument. Doesn't make much sense.
jQuery &gt; DOM API , forever and always. If I have to whip up something quick and dirty, there is no value in delving into the deep end of react or vue and all the tooling that will come with it. Just pop in jquery from a CDN and you have a clean, elegant, easy, functional-like API that is so much more intuitive and elegant than DOM will ever be.
Yup. Id say it's a common requirement for most web agencies, so one shouldnt totally ignore it.
Woooow!! Incredible!!
Even if you don't directly use jQuery you may still use it. Bootstrap uses jQuery so even if you aren't using one single jQuery feature directly your project may still rely on it (and yes I know bootstrap 5 won't have jQuery)
Maybe I'm missing something, but undo (Control+Z) works for me as well as selecting text and drag &amp; drop it somewhere else.
I wonder if jQuery 4 will remove jQuery from jQuery 😁
You really don't need any tooling to use Vue since you can write templates directly in the DOM. You can write ES5, or if your audience will have a modern browser write ES6 without the need for Babel.
Lol, I made the same joke then realized you already made it
3.4.0 broke the froala editor for me. Downgraded back to 3.3.
Just wondering, how many of you wrote your own mini-lib? Vanilla JS to me feels like C. The lib has all the basics but there's no way I'm writing my entire app using only it
Where are you from?
I have some legacy projects where the performance boost &amp; patches are always welcome. Thanks jQuery Team!
great job! I forked your project i will be happy to contribute
jQuery will forever live on in my heart, so shut your &lt;/mouth&gt;
probabl philippines
ever heard about Babel? Making cutting edge tech usable to every standard browser.
awesome , great job
in what way did it influece the browser api specs? also free libs would be probably lodash, foundation, react ?
The womp womp when you submit a link behind a login wall
Hi /u/Yamithorn, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
you shouldn't do that anyway tho.
Original kata: https://www.codewars.com/kata/a-needle-in-the-haystack/javascript Kata text: --- Can you find the needle in the haystack? Write a function findNeedle() that takes an array full of junk but containing one "needle" After your function finds the needle it should return a message (as a string) that says: "found the needle at position " plus the index it found the needle, so: Python, Ruby &amp; Elixir find_needle(['hay', 'junk', 'hay', 'hay', 'moreJunk', 'needle', 'randomJunk']) JavaScript &amp; TypeScript findNeedle(['hay', 'junk', 'hay', 'hay', 'moreJunk', 'needle', 'randomJunk']) Java findNeedle(new Object[] {"hay", "junk", "hay", "hay", "moreJunk", "needle", "randomJunk"}) should return "found the needle at position 5" --- Most common/straight forward solution text: --- function findNeedle(haystack) { return "found the needle at position " + haystack.indexOf("needle"); } --- Linked solution text: --- var a = "a"; var b = "b"; var c = "c"; var d = "d"; var e = "e"; var f = "f"; var g = "g"; var h = "h"; var i = "i"; var j = "j"; var k = "k"; var l = "l"; var m = "m"; var n = "n"; var o = "o"; var p = "p"; var q = "q"; var r = "r"; var s = "s"; var t = "t"; var u = "u"; var v = "v"; var w = "w"; var x = "x"; var y = "y"; var z = "z"; var space = " "; var theWordNeedleWhichWillNeedToBeFoundWithinTheHaystackContainingTheNeedle = [].concat(n).concat(e).concat(e).concat(d).concat(l).concat(e).join(''); var returnStringPrefix = [].concat(f).concat(o).concat(u).concat(n).concat(d).concat(space).concat(t).concat(h).concat(e).concat(space).concat(n).concat(e).concat(e).concat(d).concat(l).concat(e).concat(space).concat(a).concat(t).concat(space).concat(p).concat(o).concat(s).concat(i).concat(t).concat(i).concat(o).concat(n).concat(space).join(''); function findNeedle ( theHaystackContainingTheNeedle ) { var indexOfNeedleWithinTheHaystackContainingTheNeedle = -1; var numberOfStrawsPlusTheNeedleThatAreContainedWithinTheGiantHaystackContainingTheNeedleWhichIsProbablyLocatedInAFieldSomewhereNearABarnOnAFarmPotentiallyWithinTheVicinityOfRuralTexas = getLengthOfArrayContainingElements( theHaystackContainingTheNeedle ); for( var currentIndexOfTheCurrentlyExecutingForLoop = 0; currentIndexOfTheCurrentlyExecutingForLoop &lt;= numberOfStrawsPlusTheNeedleThatAreContainedWithinTheGiantHaystackContainingTheNeedleWhichIsProbablyLocatedInAFieldSomewhereNearABarnOnAFarmPotentiallyWithinTheVicinityOfRuralTexas; currentIndexOfTheCurrentlyExecutingForLoop = currentIndexOfTheCurrentlyExecutingForLoop + 1 ) { if(currentIndexOfTheCurrentlyExecutingForLoop &lt; 0) { throw new Error("This shouldn\"t happen".replace("\u0022","\u2019")); } if(currentIndexOfTheCurrentlyExecutingForLoop &gt; numberOfStrawsPlusTheNeedleThatAreContainedWithinTheGiantHaystackContainingTheNeedleWhichIsProbablyLocatedInAFieldSomewhereNearABarnOnAFarmPotentiallyWithinTheVicinityOfRuralTexas) { throw new Error("This shouldn\"t happen".replace("\u0022","\u2019")); } var theValueOfTheCurrentStrawOrNeedleThatResidesWithinTheLargeHaystack = getElementFromArrayGivenIndex( theHaystackContainingTheNeedle, currentIndexOfTheCurrentlyExecutingForLoop ); if( theValueOfTheCurrentStrawOrNeedleThatResidesWithinTheLargeHaystack === theWordNeedleWhichWillNeedToBeFoundWithinTheHaystackContainingTheNeedle) { indexOfNeedleWithinTheHaystackContainingTheNeedle = currentIndexOfTheCurrentlyExecutingForLoop; } } var theCompleteReturnValueContainingTheReturnPrefixAndTheIndexOfTheNeedleWithinTheHaystackContainingTheNeedle = returnStringPrefix.split('').concat(indexOfNeedleWithinTheHaystackContainingTheNeedle).join(''); return theCompleteReturnValueContainingTheReturnPrefixAndTheIndexOfTheNeedleWithinTheHaystackContainingTheNeedle; } function getElementFromArrayGivenIndex( arrayContainingElements, indexToRetrieveFromArrayContainingElements ) { var valueFromArrayWhereIndexWasBeingSearchedFor = -1; var numberOfElementsInArrayContainingElements = getLengthOfArrayContainingElements(arrayContainingElements); for( var currentIndexOfTheCurrentlyExecutingForLoop = 0; currentIndexOfTheCurrentlyExecutingForLoop &lt;= numberOfElementsInArrayContainingElements; currentIndexOfTheCurrentlyExecutingForLoop = currentIndexOfTheCurrentlyExecutingForLoop + 1 ) { if(currentIndexOfTheCurrentlyExecutingForLoop &lt; 0) { throw new Error("This shouldn\"t happen".replace("\u0022","\u2019")); } if(currentIndexOfTheCurrentlyExecutingForLoop &gt; numberOfElementsInArrayContainingElements) { throw new Error("This shouldn\"t happen".replace("\u0022","\u2019")); } var valueBasedOnCurrentIndexOfTheArrayThatIsCurrentlyBeingReferencedWithinTheExecutingForLoop = arrayContainingElements[ currentIndexOfTheCurrentlyExecutingForLoop ]; if(currentIndexOfTheCurrentlyExecutingForLoop === indexToRetrieveFromArrayContainingElements) { valueFromArrayWhereIndexWasBeingSearchedFor = valueBasedOnCurrentIndexOfTheArrayThatIsCurrentlyBeingReferencedWithinTheExecutingForLoop; } } return valueFromArrayWhereIndexWasBeingSearchedFor; } function getIndexFromArrayGivenValue( arrayContainingElements, valueForWhichToUseToFindTheIndexAndRetrieveItFromArrayContainingElements ) { var indexFromArrayWhereValueWasFound = -1; var numberOfElementsInArrayContainingElements = getLengthOfArrayContainingElements(arrayContainingElements); for( var currentIndexOfTheCurrentlyExecutingForLoop = 0; currentIndexOfTheCurrentlyExecutingForLoop &lt;= numberOfElementsInArrayContainingElements; currentIndexOfTheCurrentlyExecutingForLoop = currentIndexOfTheCurrentlyExecutingForLoop + 1 ) { if(indexFromArrayWhereValueWasFound &gt; -1) { continue; } var valueBasedOnCurrentIndexOfTheArrayThatIsCurrentlyBeingReferencedWithinTheExecutingForLoop = getElementFromArrayGivenIndex( arrayContainingElements, currentIndexOfTheCurrentlyExecutingForLoop ); if( valueBasedOnCurrentIndexOfTheArrayThatIsCurrentlyBeingReferencedWithinTheExecutingForLoop === valueForWhichToUseToFindTheIndexAndRetrieveItFromArrayContainingElements ) { indexFromArrayWhereValueWasFound = currentIndexOfTheCurrentlyExecutingForLoop; } } return indexFromArrayWhereValueWasFound; } function getLengthOfArrayContainingElements( arrayContainingElementsForWhichToRetreiveTheLengthFrom ) { var theLengthOfTheArrayContainingElementsForWhichToRetreiveTheLengthFrom = arrayContainingElementsForWhichToRetreiveTheLengthFrom.length; if(theLengthOfTheArrayContainingElementsForWhichToRetreiveTheLengthFrom &lt; 0) { theLengthOfTheArrayContainingElementsForWhichToRetreiveTheLengthFrom = 0; } return theLengthOfTheArrayContainingElementsForWhichToRetreiveTheLengthFrom; }
Unless this is missing a /s, I don't see why this matters
Looks like its a bit bigger now. Any reason to upgrade?
Isn't it weird how similar querySelectorAll is to jquery?
awesome, thanks for the support!
Those complain about jQuery probably SPA devs who follow hype driven development. Server rendered app + jQuery is still easy to maintain than 100GB of node_modules app
You have a rather dim perspective then, do you think the same of Unity or Notepad++?
But if you dont hate jquery you're not a real javascript dev /s
I personally dislike the pattern of converting various component states into unique class names. I don't enjoy having to read `&lt;div className={...}&gt;` soup. I don't enjoy creating multiple files to describe a simple presentation component. I hate unscoped CSS (which is the default, but CSS modules do handle this nicely). I don't like having to add additional tooling to handle things like SCSS and CSS modules. Styles should be a function of a component's props and state just like markup and effects. Components are the base unit I use to build apps. Not reusable chunks of unrelated CSS, HTML, and JS. This isn't to say I don't use any plain global CSS. Most of my projects include: a normalize/reset, some custom global styles, and some global library CSS as needed. The only real feature you get from CSS-in-JS that plain CSS doesn't get you is: you can generate CSS at runtime. If a component's style depends on some `fetch` result, it cannot be handled at compile-time, so you end up splitting your styles between CSS and JS. As far as your examples go: - Consistency across an app can also be accomplished by re-using components. You can also re-use CSS strings across various components. - Low-level utility class names are fine for prototyping/hacking, but you're basically re-inventing CSS properties as class names. What do you do when your `mx-4` needs to be `mx-2` on mobile? - I'm not sure why you would care that themes are applied by JS. User's don't. I see arguments about not depending on JS a lot more than I see sites that actually work when I turn off JS, and all of the apps I work on depend on JS for much more critical things than styles, so supporting no-js isn't an option anyway.
Agreed. Libs like MooTools and Prototype did change / influence ECMA spec, but can't think of anything from the terse jquery api to have been adopted.
as someone who got really into SPAs first and is now discovering server-rendered node.js apps... Fuck you may be right. I also found about turbolinks and stimulusjs which seem ssooooo rad
Hi /u/bemanz, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Didn’t the css selector syntax come into querySelector via jquery? That’s pretty significant
I'm a web developer and I wanted to get some practice with the canvas API. The basic game was finished on a sunday afternoon, but I later implemented some additional features like a highscore and color customization. The source code isn't pretty, but here it is: [http://ecoding.de/projects/html5snake/js/html5snake.js](http://ecoding.de/projects/html5snake/js/html5snake.js) Can you beat the highscore? Have fun!
jQuery hate is very privileged hate. If you'll allow me a simple analogy - basic healthcare in 2nd/3rd world countries is worse than 1st world healthcare, but it's better than *no* healthcare. If you are less privileged (you have to support &lt;=IE8) you don't just go "nah thanks, I don't want your old healthcare because it's old and other countries have better healthcare". &amp;#x200B; What's not helpful is 1st world people running around your country telling you how shit your healthcare is. Fucking Bono.
jQuery is still THE standard when you don't want to do a SPA... I love young kids following always the latest coolest trend. They'll learn that software developers love to go around in circles and in a few years jQuery will be cool again because "it's so simple', 'not bloated' and much better api than vanilla JS. &lt;rant&gt; As I'm paid for the quality of I produce and not for using the coolest technology jQuery is still part of my toolkit. The 'problem' is that most developers love technology so they love to try out new things and become very much bored by always using the same old things. It's a good and a bad thing and finding the right balance is the true mark of what I call a Senior engineer. &lt;/rant&gt; IF you really need a SPA then Angular, vue, react are great. IF not then vanilla JS is great, of course, but you'll soon start building your own mini-jquery because typing 'document.getElementById' all the time is boring. It's great people really understand JS and then make an informed decision to use jQuery but it's as idiotic to NOT use jQuery blindly as it is to use jQuery without knowing proper JS.
Using `fs.readFileSync` and `fs.writeFileSync` within a server is a pretty bad idea. Your process will essentially be frozen while writing to and reading from the disk, meaning it can't serve requests during that time. If you get enough traffic, it will affect performance. You'd be much better off using something like Redis, which has support for incrementing a value by 1 without having to first read it. - https://redis.io/commands/INCR
Had a good giggle. Have this updoot
Based on a joke I made on another thread I was expecting to have a good time in this comment section. I was not disappointed.
I’ve been slowly refining a bash script that just sets up a project folder with webpack preconfigured how I like it. It just sets up the template files. But you still have to do a little work to get hot module reloading to work properly (set-up and tear-down scripts will depend on what you’re doing with the project).
Yes. jQuery is dead, upgrade to something else. Sorry I had to 😁
Do you expect people stuck with jQuery to know that? Damn I'm rather salty today
I love how this thread is mainly people complaining about negative comments towards jQuery when there are only a couple of those and they're heavily downvoted.
I have a feeling allot of the hate is from people who do not know what is to get a real production app up, running and provide support to keep that app going. I used to be one to jump on a hype train and you know what - I always end up back at the basics . &amp;#x200B; jQuery has been rock solid and supported at a ridiculous level for longer than I can remember and works on nearly everything. You can force other stacks into your workflow but you eventually get tired of the extra effort it usually entails and just stick with what works all the time. Lets not even talk about how 99.9% of my clients give fuck all at what is running behind the scenes as long as it works in their browsers and is snappy. Let the haters hate with their new shiny things - my app is up, running and I am getting paid.
Well, that's basically what it is.
I will never understand the hateboner amoung JS devs for JQuery. It does it's purpose just fine, is well documented. Old doesn't mean bad.
I hope you don't have coworkers.
I work on teams projects with other developers?
JQuery is going to die because it hasn't made any effort to support WASM /s
&gt;finding the right balance is the true mark of what I call a Senior engineer. What if I've worked on companies projects long enough to not care about doing something cool but going to the pub at 5pm? I call it Beer Driven Development
Nice.
this is 100% the use case. the vanilla DOM API is super-verbose, non-chainable, and there's nothing wrong with adding a bit of sugar to it. you'll end up with 60% smaller and more readable js code. i don't know why i'm getting downvoted.
`$("#mouth").prop("disabled", true)
This is a very fair point. In fact, i might go start a new jQuery project right now, even though you said not to. I just like jQuery, dammit.
Lazyness is a quality on a programmer. It's exactly my point, i'll steal your analogy in the future :D less code you do = less bugs = less code to maintain =&gt; time to go home and actually spend on hobbies you like (that can be code of course)
Does this work? const setCss = (selector, property, value) =&gt; { document.querySelectorAll(selector).forEach(el =&gt; el.style[property] = value) } In use: setCss('.block', 'background', '#fff')
 $('#smurfpappnenene mouth').shut();
[https://twitter.com/levelsio/status/1116197634539020288](https://twitter.com/levelsio/status/1116197634539020288)
I *love* the idea, but also have found a ton of issues in very short time of testing. Like how controls don't stay with the mouse cursor when moving blocks up or down. Or when you delete everything, you can't choose to start with a heading. The control is not there, you have to hit enter (then it's the next block though) or click into empty space to make it magically appear out of nowhere. so words appear in the wrong order. the cursor to the start of the line And sometimes while writing text, it resets Man, editors are crazy hard. Even the tiniest misbehavior instantly irritates the user to the point of causing dislike to something that already took a tremendous amount of effort to make.
Huh?
dumb
c-z seems to undo content changes, but not resotre blocks you removed by clicking X twice
I was reading this as a serious comment and only half way through realized it's a joke
We still use it for development inside SharePoint so this is good news.
The downside with factories and closures is their privates can be _too_ private. It makes it impossible to implement, for example, an `isEqual` or a `clone` method.
I'd never want to be the author of jQuery.
mhm i wouldn't say that, its just a natural development as the selector syntax is just taken from the css selectors already in use.
sadly my product i am currently on uses like every system, lodash, jQuery, foundation mixed into babel with webpack. Its just a frickin Mess!
I would say they use jQuery because the devs wanted to know how to do DOM manipulation, saw the first entry which contains jQuery and then stuck with it.
you only encounter this \`document.getElementById\` is long problem when you don't use a proper IDE that would intellisense this for you; or just make an alias \`const $ = document.querySelector; const $$ = document.querySelectorAll;\`
if only there is a lib that provides a nice API to do selections. maybe something like &amp;('#id'), or I know! $('#id') :) seriously, having to type more code isn't just a problem of typing. more chars mean harder to read and maintain. getElementById is the simplest of examples, http://youmightnotneedjquery.com/ has more.
Too many times I've had one of my quick and dirty prototypes evolve into a real project, and, as someone with a strong preference for declarative and component based code, I pay for it later on when I don't start over in React. But using React from the start isn't too much extra effort now that I've used it for several projects. (I agree that jQuery's API is nicer than what is built-in to the browser though).
As code should be self documenting, I would strive to a code structure that somewhat resembles english sentences. Some Verbs are just a bit longer than others :)
More likely that they use jQuery because one of their dependencies use it.
Have to disagree actually. Doing something more efficiently is smart, not lazy. Writing bad code and not doing the job you're supposed to do is what a lazy programmer would do.
This reminds me of the Flash days, when actionScript 3.0 was announced
I feel their pain
Looks super cool. I'm trying to install on OS X and the build is hanging. Any idea what I'm doing wrong? Just hangs forever after the last line of terminal output. &amp;#x200B; `&gt; npm run webpackops` &amp;#x200B; `&gt; webpack-optimizer@1.0.0 webpackops /Users/byteshifter/Projects/embed/WebpackOps/Webpack-Ops` `&gt; rimraf dist &amp;&amp; webpack --watch --config ./webpack.dev.js --progress --colors --profile --json &gt; webpack-stats.json` &amp;#x200B; `10ms [0] building` `6ms [1] compiling` `10% [1] building 0/0 modules 0 active` `webpack is watching the files…` &amp;#x200B; `8&lt; snip out huge output 8&lt;` &amp;#x200B; `323ms [1] after seal` `517ms [1] emitting` `2ms [1] after emitting` `[1]`
I haven't used jQuery in over 4 years. It's definitely regional.
this is dumb
Nice 😊 it was fun to read and very informative for a newcomer like me
I do understand where some of it comes from. There was a point in time where jQuery was the default solution for *everything*. Loads of popular questions on StackOverflow have accepted answers that rely on jQuery. There’s nothing wrong with using jQuery per se but it used to be a major crutch, especially for new developers. And I say that from personal experience. Using jQuery both allowed me to quickly get into JavaScript but also held me back from actually learning the language and gave me some bad habits.
&gt; I bet your production site runs only on chrome 73 lmao. I mean, if its not &lt;= IE11, it would run literally everywhere only by using ES6 features already... [https://kangax.github.io/compat-table/es6/#ie11](https://kangax.github.io/compat-table/es6/#ie11) &amp;#x200B; time to wake up buddy
I never use classes in javascript, never found a good use case where using classes over factory functions was better, and with factory functions you get free private variables and method extraction `function Class () {` `const foo = 1; // private variable` `return {` `bar: () =&gt; console.log(a)` `}` `}` &amp;#x200B; `let bar = Class().bar // method extracted bar keeps reference to variable \`foo\` while with classes you need bind method`
I'm just the messenger
what a terrible response.
Jquery popularized that syntax as a natural progression of how css syntax is used years before browsers ever had the feature. First jquery release 2006, IE8 with selector support 2009.
Bingo. Sometimes on this subreddit, I wonder if there are folks who don't know how to make a public-facing page without invoking NPM.
sure, but the draft and recommendation for this extended selectors were in css2.1 which was published in 2004.
It's not even just trivial shit. Try writing $('.home &gt; .light &gt; .room a') in plain JS. I'll wait. Anyone hating on jquery is simply a fool. Hating a tool in general is a ridiculous concept.
Hi /u/throw_row_rowaway, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Not in IE11 which some of us still have to support unfortunately.
That's the politest backhanded compliment in the thread I think. ;)
It's just been 2 years at least since I needed to use it. All the tings I ever needed it for can be done in js now or always could have been
Love you too friend
LOL, it cascades though... If you don't hate JS then you're not a real dev.
Fucking snowflakes. Now a library cannot even update its minor version without being criticized to death? It's just a fucking version bump! How about just ignore it and go back to your hot modern framework. After all you should have very little time catching up with the weekly breaking changes due to fresh hotness. I bet it'd be all different to y'all if the lead developer of jQuery was a transexual or something.
What bad habits specifically? I've been using jQuery since starting really
Talk about hype driven development then in the same comment talk about server rendering. Ok.
As someone who has recently made a framework less multi page app with jquery. It’s a hunk of shit. It’s good if you don’t have more than 1 state.
Thanks for checking it out! So once you have entered the `npm run webpackops` command and it has finished with the build, you will need to open a second terminal window in the same directory and enter the command `npm start` to launch the application
Lot's of negativity for a library they dont use, and news they can ignore.
sorry, I meant: lazy &amp; smart :) doing it the right way fits into lazy because it saves time in maintenance and support :)
&gt; Hating a tool in general is a ridiculous concept. Yes, except VIM. VIM sucks. /s
One major benefit that nobody has touched on is that if jquery makes a clear distinction in your code of when and where you are interacting with the dom. This makes your code more readable as you can just scan for the $ to know where you’re mutating application state. IMO if you’re working in a team and not using a SPA framework, you’re making your life hard for yourself by not including jquery.
I sense a lot of anger here..but also I get where you are coming from.
 if (window.NodeList &amp;&amp; !NodeList.prototype.forEach) { NodeList.prototype.forEach = Array.prototype.forEach; } Fixed
If you want to understand why the hate, you need to go back in history. jQuery first appeared when pages were static. jQuery (and before that, other things like Prototype, script.aculo.us - yes this last one was real) was added to the pages to make them interactive. It made AJAX calls possible so small components of pages could be updated asynchronously. Problem is that many people (including 2008 me!) started using jQuery to build a "SPA" (a term that didn't exist back then), and it worked well, maybe too well. But, those apps quickly grew into "spaghetti code", and it was easy to build something completely unmaintainable, especially if you were working on a team. That's when things like Angular, React, etc started appearing. And that's why many developers don't appreciate jQuery. To be frank, I've loved jQuery and I'm still a fan. I hold nothing against it. The problem wasn't jQuery, but rather that people started using it for things it was not meant for, and blamed bad code on the library rather than on themselves.
Common values in 2 arrays are called intersection. So google "js 2 arrays intersection" there should be implementations on stackoverflow. `events.filter(event =&gt; intersection(event.types, types))`
 document.querySelector('.home &gt; .light &gt; .room a') ???
let filtered = data .filter(item =&gt; selectedFilter.countries.includes(item.country)) .filter(item =&gt; item.types.any(type =&gt; selectedFilter.eventTypes.includes(type)));
**Packem (v0.1.3-alpha) is +2X faster than** [**Parcel**](https://parceljs.org/) **(v1.12.3)**
You can easily make a wrapper component with necessary props for your future use.
This isn't stricly true. For example Vue and Svelte both support scoped styles out of the box. And even if you are using a framework like bootstrap or tailwind with utility classes you can use something like purgecss to shake out your unused styles.
They still make that?
I'd loop over selectedFilter keys inside that filter so it's more pluggable. I'm on mobile so I can't really type it out right now.
I'm on mobile too so I just wrote the shortest thing I could think of that does everything OP wanted
Spoken like someone who wasn't aware of the web five years ago...
I meant , best among them so far I have seen :) You can share more powerful than it. Thanks :)
Hi /u/Hello_tutor, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
So you hit the power button to exit, ey?
He's angry about the angry people
Have you tried your thing in a browser?
Lots of pent up rage... I like you.
And transsexuals apparently?
I get where you're coming from here, and jQuery certainly doesn't deserve hate, but calling it "THE standard" is still an incredible stretch. Agreed that for a spa, other frameworks are the way to go, but even for some light JavaScript, there are a number of libraries and frameworks out there that significantly improve the experience. jQuery still has something to offer, but it's very little in a world where the native js API can do a very significant portion of what it does. Any developer that finds themselves writing so much js these days for any recent browser that jQuery is worth it just for the shortcuts, is likely someone who would be better off with a view library (and no, not all view libraries are for spas). It's still (and will continue to be) used in legacy projects the world over, but few new projects should bother with it.
Nearly every DOM manipulation API proposed in the last 5 years has been inspired if not directly copied from jQuery. Search the open and closed issues in whatwg/dom, here is just one of many examples. https://github.com/whatwg/dom/issues/478
[uhh, yes?](https://codepen.io/anon/pen/QPgExB?editors=1010)
YOU AIN'T MY DAD!!!!!!!!!!!!
Standard of course doesn't mean it's 100% usage, but 80%? At least in terms of usage it seems that way but usage doesn't exactly translate into being the best tool for it so: For anything that is not a SPA and not simple enough to use vanilla, what would you use? jQuery seems the best to fill out the need for simple websites requiring a bit of ajax here and there, then a plugin for form validation, then some effects not supported by CSS, simple stuff like this. For me vanilla isn't really an option for anything more than a few lines. It really is a much nicer API to do $ or $.get() for ajax calls. But I'm sincerely interested on your suggestions, what are you thinking of?
Shit happens. You can try improving it to what you think is more acceptable slow and steady. But good luck with that when talking to the money people.
love it gonna spread as much as possible to piss of everyone
I feel like we are on different planets. Don't get me wrong, I've been around long enough to remember when jQuery was a requirement and we cobbled together ajax calls to build "spas". I don't hate jquery. But i would never use it today for a new project. IMHO there are better tools for the job. Like, someone else around here says, "i dont think most of these people know how to start a new project without touching npm." So is this where we are now? No true scotsman programs in anything other than assembly. But anyways, the different planets thing... What about jQuery do you like better than the DOM api?I feel that Dom api + modern language features like map/reduce/filter, destructuring and spread make for much more expressive code. Honest, non accusatory question: do you prefer it because you're just more familiar with it? I'm not hating on jQuery, its got its place in history and legacy apps.. but why use it when there's better tooling out there?
I work on a hardware device that sells millions of dollars of revenue per year. It has a built in web interface- which runs... gasp... JQUERY!!! ...gasp
&gt; I don't think that makes it necessarily similar to JS though. There's a lot of well-architectured JS code that doesn't give OO a second thought. Right. JS is a multi-paradigm language more than Smalltalk is. The book is about patterns that make sense for OO. It's right there in the name: "Design Patterns: Elements of Reusable Object-Oriented Software". Non-OO languages would have different design patterns (for example, monads are basically a design pattern). JS can pick and choose patterns from a variety of paradigms.
I use jquery on a single page app. What's the complaint?
&gt; SharePoint Ack! such profanity!
Thanks for the response, but the problem is that the build never finishes. The command hangs forever until I ControlC hammer it. I’ll see if I tell where it’s hanging.
Hi /u/ShadowCoder914, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Can you show us what you've done so far?
Pure JS is still King in my perspective, jQuery was handy, but it's a crutch. So many sensitive people here hating on the jokes and puns, sheesh.
1. Jquery is just a lib. Sometimes, I don't want/need tooling. Not every project or idea needs anything more complex than vanilla html/CSS and DOM API sucks so pop in jquery. For anything larger, I first choice is Vue. 2. I'm on my phone, but outside of ajax (and I think axios is nicer than jquery or fetch), just compare triggering a custom event on an element with native DOM API and with jquery. It's so simple in jquery. It's so unweildly in DOM API. Or dealing with data attributes, or navigating the DOM tree. Jquery is just more elegant and intuitive.
Please keep your terrible politics to yourself. jQuery is an antipattern.
Why would you want to use the DOM API over jquery?
For sure, my pleasure - once the build finishes, you would have to ControlC to close out of the command. I just cloned and launched the app on an OS X machine - when my build finishes and it's ready to launch from another terminal window via the `npm start` command, this is the end of the output in my build terminal window: \`\`\` 0ms \[0\] after chunk asset optimization 0ms \[0\] asset optimization 0ms \[0\] after asset optimization 1327ms \[0\] after seal 63ms \[0\] emitting 1ms \[0\] after emitting \[0\] \`\`\` Let me know if you're still having issues. Thanks, appreciate your feedback.
I meant more like the concept that server rendered apps give you a lot of shit for free that has to be implemented when you do s SPA. I mean sure if you’re doing some super complex real time stuff(photo editing, google docs, etc) SPA architecture is THE way to go. But for most things I think you can get away with server rendered multi page apps, that, when required, are sprinkled with web components you’ve built, vuejs/other.js embedded in one page, or just some vanilla.js to do a few things.
So jquery was an early stage implementation of a spec that had yet to be implemented. Babel serves a similar purpose and it’s not a discount on the utility or breakthrough provided by either lib (jquery then, or Babel now)
Tbf, they *did* add two functions to the DOM, `document.querySelector` and `querySelectorAll`, that uses the same CSS style queries to get to elements in the DOM. If all you needed jQuery for *is* the querying part, you can totally drop it in favor of `document.querySelector(".class#element &gt; span")` which, even polyfilled, should be a smaller overall script.