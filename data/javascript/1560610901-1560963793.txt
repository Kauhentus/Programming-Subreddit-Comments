Symbols in Javascript ... a solution in search of a problem for most people who use them (like generators and getter/setters). Now to be clear, I think all three of those things do have their place (for special circumstances or for library authors), but I feel like all three get over-used by programmers "looking to use hot tech" instead of "looking to use what works best".
&gt; people who use them In Soviet Russia, them who use **people**! ^(this post was made by a highly intelligent bot using the advanced yakov-smirnoff algorithm... okay, thats not a real algorithm. learn more on my profile.)
Yup. Came here to make a joke that author needs an 11th book, one about design/HCI.
Hi /u/cryptoMadness5K, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/scaffoldhub, this post was removed. _"It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius_ * If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). * It's ok to promote your own projects or content, as long as that's not all you do. See ["What constitutes spam?"](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) for more information. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/nintseo, this post was removed. Well, this is awkward. This subreddit is for **javascript**, which is different than **Java**. In other words, `javascript !== java`. Maybe try one of these instead: * /r/Java * /r/JavaHelp * /r/LearnJava Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/bluprince13, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Lastly, instead of all the above, if you just want to showoff your project, feel free to post it to our weekly _"Showoff Saturday"_ post. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Yonidn, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/basic_tom, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mominriyadh, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
[removed]
Apology, I will try to follow the right Reddit channel.
That’s messed up, Bro. Not cool.
Reddit Pro Tools lists him as a troll.
You read a lot. We like that. The internet fed us about technological topics. It didn't want money. Why do we want money now? I know, I can open in incognito mode. But this isn't ethical.
"zero dependencies" Setup step one: "install dependencies"
Nm.
The problem of course is trading one company controlling an ecosystem for another. I think when NPM started off, it was not a for profit company and that was appealing to most of the people hosting their packages there.
It is fairly obvious, but holy crap that site has a shit UX.
If you read my other comment there's a link for non-members.
Even with typescript, you want to write some of those or have some backup logic if you're writing a library for public consumption. Having types locked down internally does not mean that the resulting JavaScript that most people will use is perfectly safe against input or that devs shouldn't have help when they're using it incorrectly
Exactly that's why everyone loves complicated great shifts allows you to appreciate the automotive engineering prowess and creativity
http://shouldiuseacarousel.com/ /u/parrissays
http://shouldiuseacarousel.com/
It actually works really well with RES. I liked it.
Hi /u/HelpfulElection, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Please add "-JS" to the bottom link. Thanks for the list!
Yeah, I understand your reasoning - it’s just not feasible to run a community driven platform like NPM without having some source of income like you mentioned with corporate sponsors, to pay for all of the overhead. The only other alternative to a corporate package manager that I can think of, is to (I hate myself for saying this) using blockchain type P2P package manager. But that in itself has flaws, inherent limitations and security risks.
And that is a bad thing, because.... ?
Well, if a novelty site says so it must be true! Case settled, next!
OK, fair enough
&gt; This would help but having to instruct the user is a sign of failure. I both agree and disagree. If you're going to introduce an unknown functionality to users, you have to instruct them. Everything can't be intuitive.
It's cool.
I mean, don't get me wrong- I am not a MS hater by any means. I've been a MS stack dev for a long time and now extended that to the front end. You could remove them from the equation and replace them with any other large corporation (google/amazon/apple) and you still have the same problem.
It gives sources to studies showing that carousels have low interaction. It's 3 slides in though, maybe you didn't get that far because the information was in a carousel.
Does you sort function support comparisons of non-numeric types (for example strings)?
You aren't the first person to spot this :) &gt; https://stackoverflow.com/a/38733191
[https://github.com/v8/v8/blob/master/third\_party/v8/builtins/array-sort.tq](https://github.com/v8/v8/blob/master/third_party/v8/builtins/array-sort.tq) &amp;#x200B; TimSort
What do you mean? Webpack is really simple and powerful at the same time , just dedicate some time and everything will be easier
I didn't get that far because of the general novelty look and feel, I wouldn't have scrolled either. OP's is a slide show rather than a carousel, not quite the same thing. It's not some marketing content to try and entice you to click on a random link, it's presenting an ordered list of content. There is really nothing wrong with it.
The reddit lynch mob mentality at its finest
It makes no difference
&gt; Firefox 67 (Good 3G) &gt; &gt; Chrome 75 (Fast 3G) Wait, this dude's trying to benchmark loading times over a mobile data connection, and it would appear not even the same one at that. Yeah, sorry, that's completely meaningless.
Thanks, do you know any good resource for learning it? i'm not a big fan of their docs. I'm not saying they are bad, just not very beginner friendly.
More background on V8's sort implementation: https://v8.dev/blog/array-sort
https://v8.dev/blog/array-sort From this article, it looks like they have a few edge cases to deal with that might slow the overall implementation down such as arrays with holes, arrays that are modified after sorting begins, and prototype chains, and JIT compilation might also be a factor. I'm far from an expert on v8, but I have a feeling that (hopefully) if your code were run multiple times, the time difference between the two would go down. If not, then it's always good to know that if you have a known array structure you can eek out some performance by specializing the sort
One thing I notice is your benchmark is rather poor. It tries the builtin with one array and your own with a different array. Most likely it's probably not going to make a difference but certain algorithms are known to do bad on specific input patterns so for a given test you should use the identical input. Which brings up a second issue. Have you tested with known adverse patterns. Common examples are arrays that are already sorted or very close to being sorted (i.e. the first N-1 entries are sorted but the last one isn't) as well as arrays that are reverse sorted. Your algorithm may do better are totally random inputs but fall apart on others. I have no idea if it's going to matter and after you do more testing you still find the built in sort slower than yours. But until then, I'm skeptical about results.
Is there a particular issue you're facing, or a particular question you want to ask? With Webpack there are loaders for [Babel](https://webpack.js.org/loaders/babel-loader/), [SCSS](https://webpack.js.org/loaders/sass-loader/), and for uglifying/minifying/obfuscating your code--you just need to: 1. configure the necessary loaders in `webpack.config.js`--the entries for the loaders should give you code to copy paste. 2. Put those files somewhere in `src`, and `import` them in your `index.js` (or whatever entry point you have configured, or somewhere else in the dependency tree where they'll eventually be reached by recursive `import`). 3. Any libraries, likewise just `import` in the files that use them. You can also run `webpack-dev-server`, which will serve the output and live-reload when you edit anything in the deps tree. Very convenient and intuitive.
This is definitely a good book. I went through it maybe 2 years ago and it was a huge eye opener despite being about half done at the time. Looks like it's much farther along now, if not finished, based on the TOC. Will have to go through it again.
Thank you for taking the time and explaining. I guess my question is, is it really worth using Webpack even for simple projects? I understand the concept that you've described in your comment, but i faced so many problems with Webpack. I even had problems using Webpack CLI and had to install Webpack globally just make it work (I know i should not). **TLDR**: I'm looking for a good resource for learning Webpack which is beginner friendly.
There are some basic webpack starter kits. You can google it and find the one that suits your needs. Ex: https://github.com/lifenautjoe/webpack-starter-basic/blob/master/README.md
It’s behind Medium’s paywall for me.
Take a look here, I think it's good enough for a beginner with webpack : [https://appdividend.com/2018/03/12/how-to-setup-vue-js-with-webpack-4-example/](https://appdividend.com/2018/03/12/how-to-setup-vue-js-with-webpack-4-example/) &amp;#x200B; Later, once you think you need more features of webpack just search for more advanced webpack topics.
Nice! Will try it next week
Cause no one asked them to do what they did
IMO it's definitely worth it. While I've never had any problems installing it, I agree the docs can be a little intimidating. And there aren't many good sources explaining how to address specific use cases with it. I think this is largely because it's confusingly simple: to import a stylesheet, just use the appropriate loader in your config and import the stylesheet in JS. My experience has been that it "works like magic" XD--meaning I just copy snippets for loaders from the docs, and `import`, and don't worry about the rest. Could you describe a configuration + project structure you tried with Webpack + how it failed? For instance, set up a bare-bones project with * fresh install of webpack (not your global one), * `src` and `dist` dirs, * `src/index.js` as the entry point, * all other relevant files in `src` (including stylesheets and assets) being `import`ed in `index.js` Run webpack and tell me what specifically goes wrong, I'll see if there's something that got lost in the docs for you.
Only the tab.
0. I don’t really doubt that you’re right, but I think there’s more testing to do. 1. Try changing the order that the two things are measured, or repeat the measurements a few times and take the best of each.The second one will have a big advantage because all the caches are primed. My 2013 MacBook has 6MB of L3 cache and so it takes much much more data than 5m numbers to make the cache less relevant. 2. Try building the array from a length of zero using `push`. I’ve read advise about v8 that says you should build arrays like this instead of presizing so that can be type specialized. I’ve also measured and found building arrays is wayyy faster if you presize. It may be though that the built in sort is faster on more idiomatically constructed arrays. 3. Try sorting strings. The built in sort wants to compare strings. Having to call the comparer callback might make a big difference. 4. It would be useful to examine the produced JavaScript or just do that port. I don’t have extensive TypeScript experience, but I know from work with modern JS to old JS compilers that they often produce code with unexpected performance disadvantages.
Are you sure? Any link reference? &amp;#x200B; If Only the tab freezes and the others tabs can be used, so I don't understand why Synchronous request is deprecated since 2014? There are a lot of situations where Synchronous request is a must!
You need the Vue.js CLI , [https://cli.vuejs.org](https://cli.vuejs.org) It will help you with these devops tasks
Arrays that are modified after sorting begins sounds a bit weird, considering that the JS runtime is sequential
There are exactly zero situations where synchronous requests are a must. Everything sync does can be done with async just as well, and async does not freeze the UI (depending on how slow the request is, it may even cause the "this tab is not responding" dialog to show up if the user attempts to interact with it)
Just curious. When is it a must?
If by sequential you mean synchronous, asynchronous programming is a thing. If you mean something else ignore me.
search google
Can you explain the @ notation in your examples?
Ok Mister GOD, you right!
I'd check out Gatsby because it comes with Webpack preconfigured for those things. If you want to learn build tools I find Parcel and Rollup easier.
If you only set timeout but never clear the timeout, you're essentially never letting the server release memory allocation for each time someone makes a request. It would make it respond slower and slower as time goes on, which I guess your service is technically "supposed to do" 😉
Pass. Don't want to use classes...
Hot take (i.e. I didn't dig deep or try to optimize your quicksort) but the built in sort is hampered down by spec requirements while your quicksort is not. E.g. when I tested arrays with many holes / undefined (required by spec to be sorted to the end, I did update compareNumber accordingly) built in sort completes in a fraction of the time compared to your basic quicksort. &amp;#x200B; [https://v8.dev/blog/array-sort](https://v8.dev/blog/array-sort)
Why not use \`npm init &lt;repo&gt;\` for init ( [https://docs.npmjs.com/cli/init](https://docs.npmjs.com/cli/init) ) instead of \`npx cfunc init\`
It's the proposed decorator syntax or one of the proposals. Basically this. function _foo() {} const foo = bar(_foo)
Use the friend link
I missed that the first time. Maybe it’s been added since?
These are decorators: [https://github.com/tc39/proposal-decorators](https://github.com/tc39/proposal-decorators)
Typescript decorator.
Asynchronous programming only applies to things that run outside of the main context; V8 is written for JS. The actual JS runtime is synchronous; that’s why a while(true) blocks the whole thing... so if you run array.sort(), the next line evaluated in JS land is guaranteed to happen after it’s done.
`cfunc` also includes the functions of `dev` and `build`, it's like `angular-cli` role in `angular`. Additional features can be added in the future to help improve the CLI development environment.
Impossible to visit on mobile. Won't read.
There are also some documents that you can try to read: [Decorators in TypeScript](https://www.typescriptlang.org/docs/handbook/decorators.html)
Awesome, i'll definitely dive deeper into this. Do you mind if i might PM you in the future? :)
Thanks!
Well, i thought about it for a while. That's good. I'll improve it. Thank you for your advice.
Go for it!
If you know a scenario where a sync request is *required* I would be interested to hear.
Hi /u/da_scripter, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Concept looks really nice. Though I'm not sure about command implementation in `constructor` - it feels weird. To my mind framework should call something like `run()` instance method (some interface which my commands should implement would be sensible in this case), or even better to be able to use decorator with simple functions: ``` @Command({ name: 'create' }) export function create() { console.log('ok') } ```
&gt;No, Mister GOD! There are exactly zero situations where synchronous requests are a must!
I went through the webpack book here: [https://survivejs.com/](https://survivejs.com/). It's basically a tutorial project that covers a few basics but it also links to various other suggested plugins/loaders that you can test yourself along the way.
Very nice, clear article. I don't know if it's that it's better than most articles on these topics or if it just hit me at a good time in my process of learning JS, but I learned a lot more from this than I have from similar articles. Thanks!
&gt; Asynchronous programming only applies to things that run outside of the main context [...]. The actual JS runtime is synchronous. I'm not sure I agree with your definitions, but I think we're going down a rabbit hole. JS is *concurrent*/*asynchronous* because it runs in an event loop. But JS is not *parallel* because it runs in a single thread with a global interpreter lock. The concurrency in JS is *cooperative* rather than *preemptive* because an infinite loop blocks the whole interpreter. So it's probably best we don't get too pedantic, because it's complicated. We all know *how* JS works, so let's not worry about the terms.
So is there a scenario where you need a synchronous request or not?
Awesome work brother
I'm not at my computer to test at the moment, but given the dynamicness of js, I believe in the comparator could technically modify the array, although that's terrible practice.
Thank you.
The tcomb project seems to have a pretty comprehensive solution, with a small core type checker plus a host of optional features like typescript integration: https://www.npmjs.com/package/tcomb
&gt; One thing I notice is your benchmark is rather poor. It tries the builtin with one array and your own with a different array. Changing the beginning of `main()` to this: const numsA: number[] = []; numsA.length = 5000000; for (let i = 0; i &lt; 5000000; ++i) { numsA[i] = Math.floor(Math.random() * 10000000); } const numsB: number[] = Array.from(numsA); and then sorting those two unique-but-identical arrays in the same fashion makes no noticeable difference at all as far as the execution times (as I didn't think it would.) &gt;Which brings up a second issue. Have you tested with known adverse patterns. Common examples are arrays that are already sorted or very close to being sorted (i.e. the first N-1 entries are sorted but the last one isn't) as well as arrays that are reverse sorted. The builtin does appear to be somewhat faster when the array is already *completely* sorted. Here's output from running a version where both arrays get sorted twice in a row (that also includes the "identical contents to start with" change I showed above): builtinSortBench: 1948.560ms builtinSortBench: 105.154ms quickSortBench: 779.580ms quickSortBench: 887.467ms However, IMO that doesn't exactly "make up" for anything when you consider the very-large size of the array in this case alongside the (much smaller) "already-sorted" speed gap, as well as the fact that sorting things that no longer need sorting should probably be avoided at all costs, I'd say.
That is what the comparison function (or closure) is for, yes.
Dunno why youre being downvoted... its called func. How ironic.
\+1 for Code Complete. That was definitely my most influential book when I stumbled across it early in my career. One book that I've not seen recommended often but I think well worth the read is In Search Of Stupidity - Over 20 years of high-tech marketing disasters. Well worth finding [https://www.amazon.co.uk/Search-Stupidity-Twenty-Marketing-Disasters/dp/1590597214](https://www.amazon.co.uk/Search-Stupidity-Twenty-Marketing-Disasters/dp/1590597214)
The answer in a nutshell is: no. The request itself won't make the tab to freeze. Worst case scenario gets timeout and that's it. If you wait for x amount of time, the process didn't die. It's waiting for this request to be done. Each tab in Google Chrome it's has a different "session". Different tabs has different sessions. This is why if you open and record the network session and open a link in a "New tab" you won't be able to see this requests in the previous tab. Now a days if we need to implement a synchronized function that depends of the completion of another method. We use promises, and pass a this "dependant" function as callback. There are some other scenarios in which you can make the browser to die. For example chrome uses some percentage of your ram. Once he can't get enough... He can freeze. But this can happen depending what you are doing, example, dealing with a LOT of data, recursive function without breaking point, etc.
 `function getWinnerZip(response) { try { return response.user.address.zipcode; }catch(_){ return null; } }`
Did I stutter?
Maybe it's a personal thing, or the point in my career (quite late) when I read it, but I didn't find the Pragmatic Programmer to be that impressive. Good, and good enough to recommend as essential reading, but not quite the god-given tome spoken of in hushed tones that it's often pitched as. Code Complete on the other hand I recall being bowled over by. On the non-programming side I'd pitch in "In Search Of Stupidity - Over 20 years of high-tech marketing disasters" As well worth finding - a highly enjoyable but thought provoking page turner. [https://www.amazon.co.uk/Search-Stupidity-Twenty-Marketing-Disasters/dp/1590597214](https://www.amazon.co.uk/Search-Stupidity-Twenty-Marketing-Disasters/dp/1590597214)
That looks perfect thanks
es6 is vanilla javascript, jquery would be an example of non-vanilla because syntax has altered it. In this case the es6 is the standard and therefore canonical syntax of the language.
What problems have you been using it to help you solve? Do you see this as relevant for manual or automated test scenarios? &amp;#x200B; Are you familiar with Fiddler? For exploratory scenarios it already provides a pretty good set of capabilities for manipulating responses and simulating arbitrary behavior, without needing client code changes.
I don't doubt you at all, but it doesn't change the fact that if a given codebase is not of notably poor quality to begin with it will likely not benefit from builtin `sort()` versus anything more customized, as far as I can tell.
if you implement keystroke encryption, it would be a plus I think.
I mean, QuickSort is faster than TimSort in most cases, yes. That should not be controversial. AFAIK V8 actually **originally** did use QuickSort, but switched to TimSort to account for what I suppose you could call "JavaScript problems".
Huh. So it'd be better to use built in if things are mostly stored or only completely sorted?
typescript decorators, pretty easy to use, pretty complicated to create lol
What is performance-oriented? Your solution to a problem should be correct first then fast. Why would you make these assumptions about input when you are writing a generic function which can be used by anyone in any situation?
&gt; For the life of me I can't remember the term for client-side and server-side 😅 "Universal" is the term you seek (as simple as it may seem...) "Isomorphic" can also be used, but I think it's legacy terminology.
Jsfiddle
Not really, they are just functions that receive different parameters based on where they are used.
I understand your previous argument and it make sense. If I understand correctly is that you want to separate the init part from the “cli” part with dev and build commands? Sounds like a great plan.
1 website that made me click away forever
If you are writing JavaScript and expect to sort huge arrays fast, you are gonna have a bad time. For small arrays nobody gives a crap if it's 56ms it 78ms. Just to stop you then and there: In the client you never have to sort large arrays, like literally never. They should come sorted from the backend, and even then, they should be small, because 1. Your users won't benefit from seeing 1000000 items 2. Your users' browsers will implode. On the backend you also don't sort big arrays, you have the database for that. And if you feel a particular need to sort an array of 1000000 items in JavaScript, then 8/10 times your design is wrong. The other two scenarios are for when you are using the wrong language and when you absolutely have no choice for whatever reason.
What prototype Inheritance means in a nutshell is to re-use methods without writing extra code which in turn results in less wasted time for the developer and a slightly, somewhat efficient program during runtime (debatable). &amp;#x200B; Considering that es6 (ECMAScript 2015) is now the preferred method, developers use classes to inherit methods instead. For example: class Rectangle { constructor() { this-&gt;width = 10; this-&gt;height = 5; } }; class Square extends Rectangle { constructor() { super(); } } the class Square inherits Rectangle's method. Good luck!
[codesandbox.io](https://codesandbox.io/) is pretty incredible / full-featured, especially if you're used to VS Code. I like JS fiddle too.
Why not? That seems like a pretty arbitrary reason to not use something
* JSBin * Glitch which includes serve site also
Thanks isomorphic was it
* [Glitch](https://glitch.com): allows for serverside code. * [Outpan](https://www.outpan.com): more focused on the end user rather than the code itself. * [Codesandbox](https://codesandbox.io/): lots of features and a very high-quality editor. * [Repl.it](https://Repl.it): Similar to Glitch. * [JS Bin](https://jsbin.com/): One of the original online html/js/css editors. * [Js Fiddle](https://jsfiddle.net/): Similar to JS Bin, better UI and more features.
I say it doesn't matter 1. You shouldn't be hand rolling your own sort algorithms. There are plenty of 3rd party solutions and they will do it better than you starting with basics from scratch. 2. Some delay is acceptable when dealing with large sets of data. But if you truly care about performance and you truly have massive data to be procced - javascript and nodejs aren't the right tools for this.
Yes, that seems to be the case. Thanks for considering the data as it is.
My point was not even that the builtin `sort()` was "bad". It is absolutely *reasonable.* My point was that anyone making the assumption that it was generally "the best they could get" for all uses was very possibly incorrect depending on what their code was actually doing / intended to do.
I like how no less than an hour ago, my comment here was not in the negative, sitting at ~2 upvotes maybe. And the parent commenter was not top comment. &gt;Your solution to a problem should be correct I think my solution is precisely that. If you don't think it is, please indicate how. &gt;Why would you make these assumptions about input when you are writing a generic function which can be used by anyone in any situation? What assumptions? I have a lot of years of experience writing lots of code in lots of languages. I did **not** make this post as some kind of joke, but just to let people know about an observation I'd made that they possibly might not themselves be aware of.
I'd hope not.
&gt;E.g. when I tested arrays with many holes / undefined (required by spec to be sorted to the end, I did update compareNumber accordingly) built in sort completes in a fraction of the time compared to your basic quicksort. ​Considering OP actually shared a complete piece of code, that anyone can test and judge for themselves, would you care to share your edits?
Optional catch is now a thing :) try { return response.user.address.zipcode; }catch{ return null; }
Hi /u/mecampingspot21, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
On the Why: &gt;Previously, V8 used an unstable QuickSort for arrays with more than 10 elements. Now, we use the stable TimSort algorithm. https://twitter.com/mathias/status/1036626116654637057?lang=en
[Cloud9](https://aws.amazon.com/cloud9/): It's an online IDE, not a code-sharing type site. (you didn't specify what you meant exactly)
Seriously, I know senior devs who are afraid of socket.io. This is awesome
Modern
Remove the “var” before you declare the variables for them to be interpreted as a global
Hey! So a couple things: first, you should try and indent you code correctly... that will help you out a lot when you're writing an debugging it. With respect to your question, it looks like you never actually call the `myFunction` function, meaning it probably won't run. Perhaps if you add `myFunction();` at the top or bottom of your script, it will work?
I love how the TypeScript devs heard "Java is to JavaScript like car is to carpet" and thought, hm, we can fix that.
I sent your code properly my eyes hurt.
Oh I just took a snippet of the code from my entire thing. I have things written about it too, but I just had a question about the javascript portion.
&gt; AFAIK V8 actually originally did use QuickSort, but switched to TimSort to account for what I suppose you could call "JavaScript problems". Not exactly. It's not "JavaScript problems" for devs to expect that their objects don't switch places when you sort an already-sorted array. QuickSort isn't a stable sort, and the community bug reports around that issue became overwhelming (not just [for the Chromium team](https://bugs.chromium.org/p/v8/issues/detail?id=90); [Mozilla got dinged with this as well](https://bugzilla.mozilla.org/show_bug.cgi?id=224128)). They switched to TimSort because it's a stable sort that's reasonably performant - not quite as good as QS, but it doesn't have the deep worst-edge-cases that QS does.
I kept everything the same and removed the var when declaring them, so its just a = and b=, but I still get the NaN error
Really? Damn. That’s useful! Cheers.
This comment doesn't come off like I think you thought it did. It doesn't mean anything at all, in any way that makes traditional sense.
Literally every language uses decorators like that, it's not Java...
An app for the Google Assistant: [https://github.com/hchiam/code-tutor](https://github.com/hchiam/code-tutor) I know it sounds like a moonshot, but I've just been experimenting with the idea of programming with your voice, kinda like a simple version of interacting with JARVIS.
A Chrome extension that lets you do quick in-browser post-render computed style checks without leaving your browser: [https://github.com/hchiam/in-browser-style-linter](https://github.com/hchiam/in-browser-style-linter) It's got a niche use at my workplace. Slightly different use case than headless tests.
An app for the Google Assistant: [https://github.com/hchiam/code-tutor](https://github.com/hchiam/code-tutor) I know it sounds like a moonshot, but I've just been experimenting with the idea of programming with your voice, kinda like a simple version of interacting with JARVIS.
Sounds like you want a framework.
Is there a library that can do that
Maybe observables would work for your use case. [https://rxjs.dev/](https://rxjs.dev/)
Declare a and b in a higher scope.
[removed]
Check out this video about [pub sub](https://www.youtube.com/watch?v=nQRXi1SVOow) and the [second part](https://www.youtube.com/watch?v=jDhDvnlbr4Q)
OP's real problem here is that they seem to have been under the impression that everyone who uses JS already specifically thinks that TS is better, and that static typing is better, and so on. Do I wish that what TS is was just what JS had always been, and so TS never needed to be a thing? Totally! Do I literally work with people who I absolutely don't think even understand what a "type" even is? Totally!
This is the right answer and should be on top. Timsort was chosen because is stable has no potentially exploitable worst case.
Really sorry you're getting so heavily downvoted for genuine responses. Please know that this doesn't represent the JavaScript community as a whole. Javascript can get a lot of flak from "real" programming communities, so it's nice to see you taking such an interest in it. I didn't read too deeply into your original post, but one thing to keep in mind about modern Javascript and the V8 engine is that it optimizes code at runtime, and actually does a pretty damn good job of it. Because of this, optimizations are heavily usage-dependent (i.e.YMMV), so Javascript benchmarks can be very misleading if not done properly. If you're interested, this is a great video on that topic (and even compares with C++): https://youtu.be/uMuYaES4W3o
&gt; not "JavaScript problems" but also &gt;objects don't switch places when you sort an already-sorted array. A) Sorting an already sorted array amounts to a straight up logic error in every language ever. It's not "normal." B) Anyone for whom that *actually* mattered almost certainly had way bigger problems that probably were not solved by TimSort.
You the man sir exactly what I was looking for
Create a and b vars the same as u create i then in your second function remove them from parameters and in first functions assign them
A and b should be created in the same place where u create i
I ended up playing with it some more. Updated my response with my full source code.
Declaring "a" and "b" in the global scope pretty much works, but I think it's a poor way to manage state. The stored variables can get out of synch with the UI - for example, if someone clicks (PLAY), then alters the value of one of the input elements before clicking (ENTER), the interface will appear to show an incorrect equality. I recommend something more like the following: function myFunction1() { var a = document.getElementById("firstNumber").innerHTML; var b = document.getElementById("second"Number").innerHTML; var c = parseFloat(a) + parseFloat(b); document.getElementById("answer").innerHTML = c; } In more complicated applications, there's typically some sort of formal state management system to deal with things like this.
Totally agree
In general I suggest avoiding optiming language features in high level languages. Especially those under active development and using multiple differing engines. Most likely when you call array.sort() you're using merge sort. However, different browsers use different engines and different operations to implement sort. While you may be optimizing in one browser you may be unnecessarily costing yourself performance in other browsers. Further in the future the engine can and will change and could quite likely outperform your function, rendering all your work useless. Finally if you're optimizing at this level in a higher level language, and that optimization is meaningful for your project, you should consider using a different language. JS isn't the fastest language in the world. If this level of optimization is required, you should use another language. Using JS and other higher level languages is taking the position that development speed matters more than raw performance. So if you're then applying granular optimizations, like this, then you're defeating the purpose of using JS.
&gt;timeout Pardon me, I didn't get the memory allocation thing you mentioned. Aren't setTimeouts cleared automatically after they are executed? We only can clear a timeout before it is executed right? Please explain if I missed something. :D
Stackblitz.com: really well built, has great support for several of the most popular frameworks
Can you post a stacktrace of the error?
MVP right here
Short and sweet, very informative too. Great article!
Thanks!!
While I agree that in the general case OP is wrong, if there is a significant bottleneck repeatedly caused by a standard library function, it only makes sense to make a "shittier generally but works faster and is correct for this input" function.
Good advice, and i'm thinking about it, too. How do you like using \`implements Init\` or \`implements destroy\` ? class Command implements Init { init(): void {} } &amp;#x200B; I think it's not good for design to just use functions, but I'll still try to implement them. And lifecycle is a good idea, don't you think? (a little over-design)
Just a thought: the source code to sort() is public right? So a hands-on comparison should be possible.
As others have pointed out the algorithm used is TimSort, but one of the advantages I'm not sure anyone has mentioned is it performs well on real world data, especially partially sorted lists which can really trip quick sort up. Remember that doing better in synthetic tests like sorting pure random data doesn't necessarily translate into real-world performance.
Definitely work on your project structure as maintaining a codebase thats easy to understand how it works and where to find what you need is going to be key to managing large projects. I worked with a junior frontend dev who built a react app over the course of about 5 months and it was the most spaghetti code monstrosity I've ever seen. Files that were over 1000 lines long, entire files of code duplicated everywhere for different user types with minor differences, horribly named variables (literally 'bob' was used for different purposes all over), lack of understanding of how async/await works (used it along with standard promise format with then/catch instead of try/catch) and more. We ended up being severely late to the point where our company is months late on pay and when he quit I decided to rebuild the entire thing myself in 30 days as a senior backend dev with 1/3rd of the code. It was my first real react project but just knowing how to maintain a codebase and keep components small and reusable made it a breeze. On the plus side I found a new love for frontend development since I've avoided it my entire life.
It's hard to say what your skill level is. Here are some area's of JavaScript knowledge you want to dive into: Closures This Prototype programming Object oriented programming Funtional programming Promises, async/await DOM and events &amp;#x200B; There's a lot of information online, but also in books: You Don't Know JavaScript by Kyle Simpson Clean Code by Robert Martin Refactoring by Martin Fowler &amp;#x200B; With respect to efficient code: don't try to optimize prematurely, but learn to handle the performance tools in the browser inspector. And try to keep your bundle sizes small. &amp;#x200B; And about degrading gracefully: learn about the polyfill libraries available. &amp;#x200B; You can also dive into frameworks like React or Vue. Learn Nodejs and Express. And learn how npm and webpack works. And learn about HTML and CSS, too many JavaScript developers don't know how to apply them well.
This looks great! I would love to contribute. Could you create few issues? Else if you can write a blog on your vission regarding it, that’ll also be helpful.
Find open source projects and start contributing there.
You'd clear it after its been resolved. In cases where multiple calls are made to the same method, you may want to share the same invocation rather than spawning off multiple ones. It's mostly for performance reasons if you want to this kind of thing.
I bet that the main reason is that per spec, Array.prototype.sort's default compare function converts elements to strings. Your implementation doesn't do that.
Thanks :D. You gotta experiment to get experience.
You can modify the array from the compare function.
Ha-ha dude, just open "network" tab in chrome devtool and apply throttling :)
&gt; Why would you make these assumptions about input when you are writing a generic function which can be used by anyone in any situation? function sort&lt;T extends {}&gt;(arr: T[]); [Demo](https://typescript-play.js.org/#code/GYVwdgxgLglg9mABAZzgJygHgCqIKYAeUeYAJsogN4C+AfABQCGaaAXItgNoC6AlFQChEwxAHpRiYIwDWeRDAC2ABwA2eBSSiNYCISLR4oINEmZoA3IgHUBA1BnqcAjABoATC4DMLgCx9zduhQjq4e3j4u4KR4wDBgeKT+gQ7O7l6+LmAgKir+QA) If you're using a strict typescript codebase you can define constraints on your input such that you never have `undefined` as an input.
Practice. That's it. Read up on the best practices and practice them
This is why I love EmberJS - decent organisation and good use of patterns so I can concentrate more on the real value
Hi /u/RedditGeneralUser, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/el-calde, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RedditGeneralUser, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/TheAbsurd123, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dataseller2018, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
so why not just use functions then?
The fundamental point of your article, according to your title, is giving an answer in an interview. Unfortunately, you do _not_ give such an answer. I mean, while your explanation of prototypal inheritance may be good or bad, more or less in-depth, more or less precise, the thing is that you set the goal of approaching this as an interview question. And it's there that you fail. In an interview, you want to give a _clear_ and _concise_ answer. You may then proceed to give more details and explanations _if asked_, but the first thing you want to give is that to-the-point answer. Without, again, judging how good or bad your explanation is, it is clear that at no point you give the reader such an answer they can use. If someone answered in an interview in the way you've written your article, I'd consider it a failed answer. It is _indirect_, somewhat handwavy, and most of all it's anything but concise. It would make me think the candidate only has approximate knowledge.
 JS, or any language that has first functions. instead of writing @, class, constructor, one could’ve just composed 2 functions, thus avoiding unnecessary syntax boilerplate and people confusion (as the original example when some1 asked what the @ is)
nothing modern about this, it’s java 10 years ago, around the time I moved to JS to escape that boilerplate nonsence
this is a really good suggestions, find something you can contribute too, a project, a community, a package... Help others with their problems and you'll be surprised how much it'll improve the way you think of problems.
Exactly. Most importantly, you will learn code consistency and styles. Great way to improve.
Well, that's definitely something we all do while debugging, but here the use case is more specifically for automation tests. One probable use-case, maybe you're trying to write tests and see how your app would behave if your backend responds with a random delay - you can proxy your calls via this service.
Hi /u/historywinchester, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I'm using Flash as a utility which saves me from writing code(over and over) for adding delay to fetch or ajax calls. Using this in a project's test cases where I wanted to test if the app behaves as expected even over unpredictable server responses. Sorry I haven't checked out Fiddler yet but sounds interesting! I would check it out, Thanks.
You're right. Thanks for explaining.
Because you can't do the same things if not under the form of decorators?
This doesn't really have anything to do with TS.
You just said "if a given array never has those problems".
Yeah, saw this, will definitely do this one as well when I get there.
You cannot wrap simple functions with decorators by design, because it prevents hoisting
yes you can. you can't write them the same isn't equal to can't do the same.
I think the your second question can be answered by OPs lack of experience with dynamically typed languages, particularly the one he's trying to use here as an example. That really gets my gander up. I'm always defending JS to fellow coders who don't write JS. If people tried to learn and understand the fundamental differences between JS and any &gt; statically-typed / compiled "native" languages then this would be so much easier. JS is awesome... if you know how it differs.
 &gt;Just to stop you then and there: In the client you never have to sort large arrays, like literally never. That's a pretty bold claim and factually wrong. Depth sorting in 2D games comes to mind.
Yes, that's right. I was referring to web applications.
I mean you have to go throught a lot of hoops and jumps for something that comes easily from decorators
I can’t wait for medium to run out of VC cash
Stop
And impossible to enforce in California anyway
[removed]
Medium has big lame
I'm just going to block medium on /r/Frontend with an automod response explaining why, I hope you'll join us, if enough of the big subs do it it could make a dent.
Here's a sneak peek of /r/Frontend using the [top posts](https://np.reddit.com/r/Frontend/top/?sort=top&amp;t=year) of the year! \#1: [Switch from Medium to your own blog in a few minutes](https://i.redd.it/0sk1n3hi4l131.gif) | [15 comments](https://np.reddit.com/r/Frontend/comments/bvaodv/switch_from_medium_to_your_own_blog_in_a_few/) \#2: [**[NSFW]** some humour: frontend framework wars](https://i.redd.it/h9mn4v2fk3v11.jpg) | [20 comments](https://np.reddit.com/r/Frontend/comments/9sbpcq/some_humour_frontend_framework_wars/) \#3: [web.dev - Google's new site about web development and best practices](https://web.dev) | [15 comments](https://np.reddit.com/r/Frontend/comments/9z7tr6/webdev_googles_new_site_about_web_development_and/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
could you point me to where this is explained, because i can't find the relevant section on the MDN page for setTimeout?
It's only confusing if you have no idea what @ means, of course. Everything is confusing when you don't know what it is. And I don't know how is it introducing unnecessary biolerplate, just try to write this without Classes and Decorators: &amp;#x200B; function Log(value: any) { return function (target) { // Log the target with duration } } @Log({ target: 'MyComp', duration: 1 }) class Person { name: string; }
I don't get it. Why all the hate towards medium?
&gt; Considering that es6 (ECMAScript 2015) is now the preferred method, Except it really isn't, it is *a* method (and the one I prefer personally) but there are many in the javascript community who don't like it for one reason or another (some of their arguments appear to be 'because thats not how we did it til now' but some are legit).
&gt; Unintentionally sorting an already-sorted array pretty much amounts to a straight up logic error in every language ever. It's hardly "normal." Already-sorted subarrays count, and are common. &gt; Anyone for whom that actually mattered in a serious way almost certainly had way bigger problems that were probably not solved outright, or even close to it, by TimSort. Read as, "I lack imagination, and don't understand the use cases of a stable sort"
No you don't. The person that asked what that @ is will have to jump through hoops to learn an entirely new language to be able to use it. With functions, using just JS, and maybe a library like Ramda, you'll have no problems
Use functional JS, you complicate it writing it like a Java code (which only had this kind of syntax as a workaround of it's limitations, like not having first class functions, propper setters and getters, etc)
Ok, rewrite what I just wrote with functional JS.
Nope. When I need it, I will write my own.
Lol. When you do, show me the code. It will be at least double this and less readable.
Your code isn't understandable. What does the annotation do anyway? You haven't provided usage. ``` const log = ( ({target, duration}) =&gt; (...args) =&gt; { // log the target with the duration } ); log({target: 'MyComp', duration: 1}); ``` You see? No Person, because you don't even use it.
It tends to house a LOT of stupid and pointless articles that are a total waste of the readers time.
LOL. You start with the assumption you know what I'll write while you're unable to envision other kind of code but Java style one?
What is a genuine argument for directly extending the prototype over the class syntax? I can't imagine any myself but I would be genuinely curious.
Isn't that called "the internet"? 😅 jokes aside, you are right, but I did also find some very good articles as well, so that's why I was curious why people don't like it so much lately
&gt;@Log({ target: 'MyComp', duration: 1 }) &gt; &gt;... &gt; &gt;const person = new Person(); // Of course you have to use the class, I thought that was a given. This is usage... Why are you talking about decorators when you don't even know how they work?
This fly-over animation: https://aviamaps.com/map?flyby
I know what you'll write because I write functional JS as well. Sometimes it just doesn't work as well as OO JS. And then you can combine them. But blindly avoiding classes and decorators and going full functional is going full retard.
1.functional isn't antithesis to OO. 2.you aren't using classes, you're using the class keyword. 3. decorators is a workaround (for languages that don't have first class functions) 4. decorator in JS and other languages is just function composition 5. not nowing those first 4, and talking about some1 `going full retard` is just nice irony
Why are you telling me what I don't know? you aren't using the log still. You haven't invoked any function but constructor, so does the logger log the constructor? O.o
1) Who even said that? 2) What? Are you gonna go "oh but those are not real classes, IT'S JUST A FUNCTION" 3) Or a syntatic sugar for function composition with parameters 4) I know, that's literally what I wrote with my code. 5) Hf with full functional, narrow minded prick
The most I can understand from what your code does can be sumimized with: // the only reason why there is "more code" is that there isn't baked in composition in the language const compose = (fn, ...fns) =&gt; (...args) =&gt; fns.reduce((acc, func) =&gt; func(acc), fn(...args)); const log = ( ({target, duration}) =&gt; (...args) =&gt; { // log the target with the duration } ); const Person = compose(log({target: 'MyComp', duration: 1}, () =&gt; ({name: void 0})); const person = Person();
&gt;never have undefined as an input Ha ha ha, [no](https://typescript-play.js.org/#code/GYVwdgxgLglg9mABAZzgJygHgCqIKYAeUeYAJsogN4C+AfABQCGaaAXItgNoC6AlFQChEwxAHpRiYIwDWeRDAC2ABwA2eBSSiNYCISLR4oINEmZoA3IgHUBAiAmRREpRAF5EPcwNKcATNzdEAGYvAVQMek4ARgAaXxigmIAWPi9wqEjY+MSkmPBSPGAYMDxSVLD0DOi4hOSYsBAVFXL0+lJecyA).
It's an interesting concept and it works very well with the RES extension preview, but the actual website sucks on desktop. The first thing you should fix is make it so that if I scroll it moves to the next slide. Next you should focus on performance, it was very stuttery on my PC, make the next slide only load once the animation has stopped, so it's not as jarring.
Entirely new language? I suggest you take a look at them instead of misleading people.
What? You subscribe to the lie that "TS is JS but more (whatever)"? JS or ECMAScriot doesn't have annotations (as of ES2019). Annotations are used by another language. Many people did the same crappy mistake writing Js in the past, when it looked like their Java, C#, PHP... basically any C style curly braces language, and then got bitten by the large number idiosyncrasies JS has. I mean, it is no coincidence a popular book series is named You Don't Know JS
Oh I see where you are coming from. You just hate TS lol. Microsoft bad imirite? The idiocracies of JS hardly come from the similarities to C style languages. You are free to write ocaML and derivatives. And yes, TS is pretty much the same language, everyone with a couple of brain cells can learn it after JS.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/learnjavascript] [TIL you can edit chrome extensions - great way of learning!](https://www.reddit.com/r/learnjavascript/comments/c1a5gn/til_you_can_edit_chrome_extensions_great_way_of/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
4. Watch the extension no longer work because the hash in the certificate no longer matches
Oh, I see where you're comming from. Instead of providing valid arguments or counter arguments, you're using ad hominem attacks to discredit the person that you're having an argument with. Too bad you need someone to hate something, or at least you successfully label them as hating something so you will not have to provide reasonable fact based argumentation. And yes. TS is pretty much different language, just as RSX isn't HTML, nor JS. If TS was JS, you wouldn't need to transpile it (&lt;- an argument that doesn't attack you personally, see, it's easy)
The example of idiosincracies in JS biting programmers is because they too were of the mind "JS is pretty much the same language as what I write now". It wasn't. I'm making it clear now, so that it doesn't go over your head again. P.S. I urge you to explore some of the languages I've used: JS, TS, PHP, Java, Haskell, Pascal, Visual and GW Basic, Amxx, Intersystems Cache, C/C++...
&gt; Already-sorted subarrays count, and are common. I would go further and say already sorted full arrays are common. Sometimes you just have to ensure a sort even though it's possible the input is already sorted.
The native sort has to deal with a lot of things other then purely best performance. For example, it is exposed to bad usage and hostile intent. People doing weird things to it and worst case exploits are a thing bowsers have to handle.
When I made a change to the extension it didn't just only work, but the change was present.
I haven't used 2-3 languages of those you have listed, but can add 2-3 of my own. Still can't understand what you have against typescript. A good typing system is a godsend in large applications and teams.
 &gt;What? You subscribe to the lie that "TS is JS but more (whatever)"? Yeah, man you surely don't attack people's personal choices and opinions.
&gt;For small arrays nobody gives a crap if it's 56ms or 78ms. I pity the people who run programs you wrote, if you think 50ms is not noticeable, or an acceptable time to sort a small array.
Get a grip, today your whole page loads in 3-5 seconds. And my numbers were purely anecdotal, thought it was pretty obvious from the amount of zeros I used.
You can do that by using something as [Chrome source extension viewer](https://chrome.google.com/webstore/detail/chrome-extension-source-v/jifpbeccnghkjeaalbbjmodiffmgedin), downloading the extension and then loading it unpacked.
Perhaps I misunderstand, but what are you demonstrating? The first two elements are showing 'empty'. Putting undefined or null in those first two elements shows slightly different output. I'm not sure what is going on.
What are the dependencies? How does it manage to have file access? Javascript does not have any direct file handling that is useful to make command-line tools. Is PHP, Node or a plugin expected?
You can’t understand? It’s simple: you have your own bias. Godsend? Please. Do you read what you write? TypeSystem is a godsend? JS does have type system. But you didn’t think about it, do you? In your mind only the TypeScript type system is a type system. Only the annotations are the correct way of doing function composition, etc. It’s simple, reality isn’t the same as how you percieve it, so you don’t understand how you can’t find the problem outside of you.
Nice, reminds me of ION3.
You subscribe to = you think it is correct. Opinion. When you do argumentation, you attack opinion. What you fail to distinguish is that opinion isn’t emotion. Especially when you need to discredit someone as hater.
I said good type system. JavaScript has a weak type system which only someone who's arguing for the sake of arguing can tell me is great to have in large systems and teams. Or someone who hasn't experienced it.
I said good type system. JavaScript has a weak type system which only someone who's arguing for the sake of arguing can tell me is great to have in large systems and teams. Or someone who hasn't experienced it.
I don't know what this is but it is not JS and it has dependencies not want to mention at GitHub. No PHP, Node or any kind of tricking plugin to manage having command line tools in JS. It is not possible so this is something other than JS.
But you are such an obvious hater my man
It is proposals at stage 2 so the code does not yet work on browsers
Yes. Any 3rd party apis should have a layer of abstraction around them to avoid propagating changes to other layers. It's unrealistic in practice a lot of the time. It doesnt have to be a whole model though. A healthy in between is using functions as abstractions. It really only works with typescript but youd make an interface that when implemented, has a function like GetUserDetails that takes in some data and returns an object of a class that has the user data you want in that context. The benefit of that is that you dont have to do null checks everywhere in your code and it's not as fragile to changes in the json structure that you take in. If they moved the location of the user details then youd just have to change that function.
I didn't need an extension to do it. Do you think the fact I was in developer mode, and using vivaldi had something to do with it.
Oh, wait, you're obvious hater my man. Because it's simple, what's obvious to me is obvious to everyone... NOT Just like you'd argue what I see in you isn't same as what you see in you, the reverse also is valid, BUT... did I try to discredit you as a hater or did I try to teach you argumentation? The choice to learn is your, I don't have any more time to bother with you.
Code to abstractions and not implementations or raw data. The nested structure is still there but every function should not have to deal with that volatile json structure. Create a function or class that returns what you need.
it's TypeScript, another language, transpiles to JavaScript
Condescension is the only thing you hadn't added to the mix. That's a bingo.
I don't know. Without the extension you could still get the extension's source, edit it and then isntall it back. It's likely that because you were in developer mode, certificate checking was disabled.
"Weak" doesn't equal "bad". It's JavaScript, not MachoScript. And, please, spare me the No True Scottsman logical fallacy. I already got bored teaching someone argumantation without you painting anyone that doesn't agree in your Confirmation Bias, doesn't share your opinions or the majority around you as inexpirienced. Certainly I don't have time to yet again rebuke the cliché off-hand remarks about large enterprise systems, teams etc. it's just parroting big corporations' evangelism. I don't care anymore what you think because at end of the day, being right or wrong will just effect you and those that work with you, not me. So go ahead, disregard anything that doesn't fit with your own biases, I will just end my side of the discussion. BB.
Weak = bad in the right context. Maybe that's what you are missing, context.
You deserved it, you got it. Byez
bias = context you have, not the other, like I said, BB.
Huge exit 10/10 didn't expect more tbh
Context is objective Bias is subjective
The possibilities to have presentation in the URL bar is something new. A game could have both Canvas, SVG, CSS ... AND the URL bar to make full use of all graphics. The Game scores should be in the URL.
Best way to build command line tools: C
But I love the minimalism of snake and would like to see a shoot'em space ship up/dn with stars from right to left. https://github.com/epidemian/snake
I pretty much always use codesandbox these days. It runs a bundler inside the browser so you can import npm modules out of the box, including styles, json, etc. The editor itself is a fork of visual studio code, it the same thing you otherwise use on the desktop, theming, shortcuts and all. Lots of useful features (shared live editing etc).
When I wrote code from a Commodore 64 magazine there was a hash number to check the code was correct. It is a shame that the hashNumber is not a property of script https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script
Not to repeat anyone, but https://flems.io is real great too
Es6 classes are basically just syntactic sugar over prototypal inheritance, see https://stackoverflow.com/a/47671709 for more info
How does this work?
It is how JS works. It is fundamentaly a simple and genial single threaded process. Not much told (because of "information hiding" that what is under the interface should be kept in a black box) but this is not at all too much. Very insightful it is! Beginner should read this! It becomes more easy to understand why setTimeout is set to zero sometimes or how events and recursion works. By understanding the concepts your memory works better and you learn faster.
From [`window.open`'s docs](https://developer.mozilla.org/en-US/docs/Web/API/Window/open): &gt; Return value A WindowProxy object... &gt; &gt; The returned reference can be used to access properties and methods of the new window as long as it complies with Same-origin policy security requirements. I'd do redirecting via good old-fashioned `href`s and HTTP.
&gt; Can you explain the @ notation in your examples That's right... but he just asked what they are...
You can see a gif here to see how it works [https://github.com/sentialx/multrin/blob/master/screenshots/screen1.gif](https://github.com/sentialx/multrin/blob/master/screenshots/screen1.gif)
This is an IIS hosted app, so you mean redirect via IIS or application-w
Maybe vanilla JS is misunderstood as ES5? I like to cling with ES5 to make my code backwards compatible and that is my reason to be lazy not cultivate the new style of let, const, =&gt; and so. But a beginner should go for ES6. If production code happens then use a tool like Babel to make it backwards compatible to some point that the project requires.
Interesting. That "very very first run" penalty does not seem to exist for me (using Node 12.4.0) with regards to the builtin sort. It's just *consistently* about the same amount slower on "run a" versus "run b", as I talked about already. Some people had been asking about string sorting, also, so I made a version that does so: "use strict"; type Order = -1 | 0 | 1; type ComparisonCallback&lt;T&gt; = (a: T, b: T) =&gt; Order; function quickSort&lt;T&gt;( values: Array&lt;T&gt;, low: number, high: number, comparer: ComparisonCallback&lt;T&gt; ): void { if (high - low &lt;= 0 || values.length === 0) { return; } do { let i = low; let j = high; const p = values[Math.floor((low + high) / 2)]; do { while (comparer(values[i], p) &lt; 0) { ++i; } while (comparer(values[j], p) &gt; 0) { --j; } if (i &lt;= j) { if (i !== j) { const q = values[i]; values[i] = values[j]; values[j] = q; } ++i; --j; } } while (!(i &gt; j)); if (j - low &lt; high - i) { if (low &lt; j) { quickSort(values, low, j, comparer); } low = i; } else { if (i &lt; high) { quickSort(values, i, high, comparer); } high = j; } } while (!(low &gt;= high)); } function compareString(a: string, b: string): Order { if (a &lt; b) { return -1; } else if (a === b) { return 0; } else { return 1; } } const uuidv4 = require("uuid/v4"); function main(): void { const stringsA: Array&lt;string&gt; = []; stringsA.length = 5000000; for (let i = 0; i &lt; 5000000; ++i) { stringsA[i] = uuidv4(); } const stringsB: Array&lt;string&gt; = Array.from(stringsA); console.time("builtinSortBench"); stringsA.sort(compareString); console.timeEnd("builtinSortBench"); console.time("builtinSortBench"); stringsA.sort(compareString); console.timeEnd("builtinSortBench"); console.time("quickSortBench"); quickSort(stringsB, 0, stringsB.length - 1, compareString); console.timeEnd("quickSortBench"); console.time("quickSortBench"); quickSort(stringsB, 0, stringsB.length - 1, compareString); console.timeEnd("quickSortBench"); } main(); Sample results: builtinSortBench: 5121.551ms builtinSortBench: 731.315ms quickSortBench: 4714.237ms quickSortBench: 2972.087ms So the "absolute-worst-case" behavior of the builtin `sort()`, i.e. sorting a gigantic array of strings that is already completely sorted, does become rather more relevant there than it was with arrays of numbers. The actual initial sort job, though, is still slower.
Nice !! Looks great
Hi /u/imkrishdev, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I guess they meant technically how it works? Is it resizing windows and hiding them to fit within the tab boundaries or doing something else?
Why use this instead of just your taskbar/dock? Genuinely curious about use-cases.
Yeah, it is resizing windows, hiding them and setting their parent to Multrin window.
!RemindMe 3 days
When you don't want your multiple Powershell, vscode or file explorer windows to be in random locations on your screen.
Interesting. Does the app let you auto group them or you manually drag them each time?
I will be messaging you on [**2019-06-19 18:07:47 UTC**](http://www.wolframalpha.com/input/?i=2019-06-19 18:07:47 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/c1aj3m/multrin_organize_apps_in_tabs_now_with_macos/ercc29w/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/c1aj3m/multrin_organize_apps_in_tabs_now_with_macos/ercc29w/]%0A%0ARemindMe! 3 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Well, at this moment there is no auto grouping, however I planned to make it.
I meant how does it manage the windows. Native calls?
I think you shouldn't design any lifecycle hooks unless you have actual lifecycle. In FE frameworks (Angular, React) lifecycles is there because there are steps that framework does with a component instance - mount, update, destroy etc. But what would they be for in a CLI command? Will you use a command instance after it runs? If you find a sensible answer to this (perhaps `onSuccess` and `onError`?), it might be a good idea. Otherwise you better follow the KISS principle.
This is sparse array. What I am showing is that declaration above does not guarantee array of valid values.
You can't use decorators on functions directly - it's only for classes or properties (so you can do it, but you need a class anyway)
This might be a bit overthinking, but well there is no problem with that. The "implements" are not necessary anyway. The main thing is: you need to do it in methods instead of constructors because you should be returning something (usually -1, 0 or 1) for error/success handling. And you can't return a number on a constructor (well you technically can return an object from a constructor, but I believe it is not common and typescript will fight you against that, even tho it's possible)
It manages windows using my node-window-manager library which is a native addon for Node.js written in C++ and Objective-C++.
You didn't stutter, but you used valleyspeak?
just clear your cookies or open in a private window... I can't believe how often people complains about this here, we are all devs and it should be a piece of piss dealing with this, seriously
Oh stop whinging, servers costs money, devops cost money, you are not entitled to this shit
I disagree that this is the right answer. It's interesting and useful insight into why V8 uses TimSort, but IMHO the right answer is that V8's array sort complies with the spec and correctly handles all valid inputs, where OP's doesn't (eg, OP's function incorrectly sorts arrays with holes and never returns at all if the array contains NaN, which is a valid number in TypeScript). It's not surprising you can write a faster function when you can make assumptions that the library can't!
Hi /u/KeNu_Discord, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
As long as it doesn't break anything I couldn't care less one way or the other, people who do open source deserve to eat same as anyone else :).
npm packages can have a post install script assigned in their package.json. [Core.js seems to have set theirs up to display this message](https://github.com/zloirock/core-js/blob/master/packages/core-js/scripts/postinstall.js). I'm not sure what the problem is. Even if all the packages started doing this why would it matter?
You should post it on r/Windows10
npm is broken most of the time anyway, and it always comes with that " it's probably not npm" message. and if you have a problem and go to their github, they just close everything with "not our problem". I really do not like npm. Just yesterday I was in npm hell (again), and made my last npm command to install yarn. Went through the same process and "everything just worked".
But also, why does fsevents still generate a warning on every platform? How many people learning web-dev still waste time googling that?
Sure, I understand. I mean many languages have package management systems which don't do this, and I was just surprised to see it. I guess my worry would be that actually important warnings/messages might be buried in these sorts of advertisements, especially if it shows for each transitive usage. Though I suppose my concern should start with the execution of arbitrary code at dependency install time :/
Good question!
Sure I get how it technically works. It's possible that executing arbitrary code at dependency install time was not a super wise choice by npm. But I think it would matter because it might drowned out actually important warnings and messages!
&gt; It's possible that executing arbitrary code at dependency install time was not a super wise choice by npm. Actually it's necessary for libraries that need to compile bindings on different platforms. Also since you are pulling the package into a project then it is likely going to get required/imported somewhere so the "executing arbitrary code at dependency install time" is a pretty moot point. &gt; But I think it would matter because it might drowned out actually important warnings and messages! It's not the responsibility of npm to police the packages as they are a repository for modules, not the maintainer. While there are extreme cases where they might take action against a particular package, this does not come close to meeting that criteria.
[this says otherwise](https://stackoverflow.com/questions/7391567/when-using-settimeout-do-you-have-to-cleartimeout)
Only if you control the page that the map is on, otherwise that's a _huge_ security hole.
I'm not sure but read this if I have understood you right https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
It also ends up "training" people to ignore warnings to a degree. So dumb
Yes. Is there a reason it's not possible for you to do this?
Some people use recruiters, some people use jobs.github.com, some people use indeed.com, some people use post-install messages.
There is some userscript Add-ons / Extensions for Mozilla Firefox and Chrome Chrome (plus their branding-removed variants)
It's not to take place on the main app tab. I updated my question with more info. But I can see, where I can have our intranet url redirect to the oauth authorize url, and the authorize url, can redirect back to the intranet url...not sure if there will be an endless loop though...
Thank you I appreciate the answer.
!remindme 10 hours
Is there a way to put two or more windows side by side in one tab? The productivity thing i need is basically a way to run sublime text + 2 terminals and have them all grouped under one window so i can alt-tab easier.
Awesome ⬆️
Unfortunately not, but I plan to do so.
Can you nest tabs of tabs of tabs?
You're not losing reference to the opened window, I checked and the onload event just doesn't seem to trigger at all. Try ditching the onload callback and try/catching in interval, that's what we're doing at work IIRC. Also, keep in mind your redirect url must be on an origin your original context can access.
First (very rough) version is up! I will work on the documentation for it and the instructions on how to install! https://www.npmjs.com/package/ngx-pickr
Yeah
Problem with that is, I have a refresh button which generates random number at every click (important in the app), putting a and b outside of the function would only create random numbers upon loading and not hitting the button, which is why I have to move it inside the function
Keep us updated :)
doesn't work when I run the code, I get nothing. &amp;#x200B; But the funny thing, I removed the (a,b) in the Function1 declaration, and it started working again. I'm not sure why it worked now and not before when I tried the same exact thing. &amp;#x200B; The coding life....
Seems like you might want to artificially limit that in a setting so you don't allow people to close everything by accident with one click.
Hi /u/pmz, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
For this I recommend [Spectacle](https://www.spectacleapp.com)
Looking behind the monitor made me chuckle 🤪
One of the first things I built in Vue was a debt snowball calculator tool. It's pretty buggy, but I was very proud of it at the time &amp;#x200B; [http://debtdestroyer.io/](http://debtdestroyer.io/)
Well English is not my native language so I don't really know what valleyspeak is. I hope it paints me in a good light though!
Post the snippet config. Bet your $0 is in the wrong place.
Damn i remember back in the day all there was, was htmlpracticeboard.com
It sounds link your JavaScript access to the other window could indeed be limited by same origin policy. See MDN docs above. Try your code calling `window.open` on a [same origin URL](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy). You can try to set the appropriate HTTP headers to remedy these issues. Otherwise I'd see if OAuth service allowed one to set a URL to send the user to after sign in, and just set that to the current page. No new tab. If they want a new tab they can control+click the link.
you could just retrieve the zip (wherever it is in your local filesystem) then re-upload it in dev mode
gatsby
I’ve seen it on a couple packages. If everyone starts doing it, there will be an ad-blocking extension made for npm commands, mark my words.
This is great! Tabbed windows is the only reason I use i3. Can't wait for the Linux build
 { "import": { "scope": "javascriptreact, javascript", "prefix": "imp", "body": ["import { $1 } from '$2'; $0"], "description": "import component in javascript" } }
Look up the ‘same origin policy’ to understand the scenarios in which what you’re asking about is allowed by browser’s security measures.
Why do people use arrow functions over regular functions when defining something at file scope? You're not going to use `this`, and a function seems more readable.
Looks like COREJS obeys an ADBLOCK environment variable to decide whether to show the message... \&gt; \`var ADBLOCK = is(env.ADBLOCK);\`
I'm confused. What do you mean when you say users of your application?
Surely this kind of task is ideally done at a window manager level?
Is this package available on npm? ``` npm i package@version ```
I’m confused by node application =&gt; script tag ?
...essentially a JavaScript window manager? Crazy.
I agree it's not *necessary* to clear, I never said it was. Generally in development, it is good practice to have proper setup &amp; teardown to protect your code from becoming non-perfomant.
Sorry if I wasn't clear. I am basically creating a javascript library with React, that has a node backend. I am only interested in bundling the javascript and react part, but my code depends on a minified script, which I load using the script tag in my index.html file. I am wondering what is the best to bundle that minified script.
Sorry if I wasn't clear. I am basically creating a javascript library with React, that has a node backend. I am only interested in bundling the javascript and react part, but my code depends on a minified script, which I load using the script tag in my index.html file. I am wondering what is the best to bundle that minified script.
No
What other higher level languages would work in a browser, aside from webassembly?
what about linux support?
V8 tries to optimize frequently used code, so running the same function multiple times will result in later runs being faster than the early ones. It might also require returning to the event loop (i.e. setInterval), but I'm not sure about that. Maybe nodejs handles it a little different to the browser. Consider using jsperf for timing tests.
Web apps can have rendering code, though. Another example is attribute sorting draw calls in webgl app, it was a pretty significant bottleneck at some point, though a better solution was to move a large part of the rendering logic to webassembly. Non-graphics example would be processing large files uploaded by the client.
That’s amazing.
I am waaaaaay excited for this. Why does thing need to install Python 2.7? Can you at least check for Python 3 before bloating my system with something I don't need?
 &gt;When jQuery was the new thing, people loved it. It made cross-browser JS so much easier, it taught us a few new tricks, it made AJAX and animations dead simple (which was pretty tricky back when most of the world were on IE6!) &gt; &gt;It evolved a not-to-be-sniffed at plugin community and immense mind-share. It became the de facto client-side Javascript library for years. &gt; &gt;Those were the heady days of jQuery's heyday and it gained a lot of weight as it spent its popularity on better support and more features. &gt; &gt;Also it attracted a lot of mediocre developers because it was seemingly 'easy to use'. This resulted in a lot of terrible Javascript being written and much debate between so-called pros (although there's nothing professional about berating newcomers) about the merits of using a library which they saw as being the lightning rod for all this bad code. &gt; &gt;Then came The Smartphone Times. This spelled disaster for jQuery: thanks to slower, inferior CPUs, less memory and often less bandwidth, smartphones just weren't cut out for lugging around all the goodness that jQuery provided - especially if you were only using 10% of it. &gt; &gt;This meant that a deep analysis of jQuery's internal elements went underway to see how things could be more modularised. And as we headed into the Golden Age of web development, many realised that the browsers have started to agree on some of the crap that jQuery The Negotiator had been helping them with all along. So they actively and rapidly trimmed the fat. &gt; &gt;During this modularisation stage, many factions split off from jQuery to create super-tuned, single-purpose libraries that were extremely lightweight. They could still work everywhere (mostly) and they didn't eat up people's 3G/4G data allowances. They also performed better than jQuery in the browser in some cases. &gt; &gt;Also in the background, the Javascript Revolution was happening seeing this 'little browser language' become a full-blown, server-side programming language. And this highlighted that jQuery was very much a client-side, DOM manipulation library, skills which weren't so transferrable to the server-side application style of programming. &gt; &gt;Besides all of this, jQuery gained some younger, better-looking cousins/distant relatives (Angular, React etc) which tackled similar problems to jQuery in altogether new and intuitive ways. And on top of that, these new relatives started pushing to use the latest Javascript APIs, seeing super increases in performance thanks to newer browser support, while jQuery hung back making sure its feature-set worked in as many browsers as it could consistently for as long as possible. &gt; &gt;But don't write jQuery off just yet. It will be 10 years old next year. In internet years that's approx. 1,000 years old. But look, jQuery is still going strong. Sure it's not as slick and fast as some of its younger cousins, but it still got some moves they don't do. And for those of us who remember why jQuery was the shiznit, we still got some deep respect for it and may still use it for convenience. &gt; &gt;jQuery made a mark on client-side Javascript like no other and ushered in the Golden Age. But sometimes you gotta walk over the bones of the dead to get to the future...
Event.currentTarget https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget
You told u/c2l3YWxpa20 they have a memory leak, which is not true. It makes no sense to use `clearTimeout` in this context and it will rather confuse people than improve performance.
Use an onclick listener to your divs!!!! &lt;div class=“random” onclick=“dothis”&gt; Then have a JavaScript function called dothis!
Give your div’s ids 1-4. Create an onClick function that checks the id of the clicked element and evaluates if id === the “bad id”. If it does then use that same id value to change that element’s CSS class to your red class.
So, I do have ID's given to all 4. You lost me on the second part, but that's exactly something I want to do. &amp;#x200B; Here's what I have so far. This is static, so it will always apply to the same box: `var one = document.getElementById("boxOne");` `boxOne.addEventListener("click", changeColor, false);` `function changeColor(e) {` `one.style.backgroundColor = "lightblue";` `console.log("clicked");` `}`
Can use jquery. Load jquery in head: &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt; Then use this it will run on any div that has ID “Box”. Replace alert with your own code like if box clicked set div red. $('#Box').on( "click", function() { alert(‘A Div Box Was Clicked’); }); Example replace alert with: $(this).css("background", "red"); Your 4 divs: &lt;div id="Box"&gt;Box 1&lt;/div&gt; &lt;div id="Box"&gt;Box 2&lt;/div&gt; &lt;div id="Box"&gt;Box 3&lt;/div&gt; &lt;div id="Box"&gt;Box 4&lt;/div&gt; So all together try: &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt; &lt;script&gt; $('#Box').on( "click", function() { $(this).css("background", "red"); }); &lt;/script&gt; &lt;div id="Box"&gt;Box 1&lt;/div&gt; &lt;div id="Box"&gt;Box 2&lt;/div&gt; &lt;div id="Box"&gt;Box 3&lt;/div&gt; &lt;div id="Box"&gt;Box 4&lt;/div&gt;
Unfortunately I haven't worked with jquery yet, though I've seen many solutions for this issue using JQ. &amp;#x200B; Thanks you!
Check [this link](https://stackoverflow.com/questions/4825295/javascript-onclick-to-get-the-id-of-the-clicked-button) our.
This book is the best among all the books that I have read for functional programming. Its like getify for functional programming. All concepts are explained really well with proper examples.
You really should keep IDs unique
Worst advice ever.
Sure you could but for a simple 4 box game this would do what he wants.
Importing it would be fine, that's how things should be done in webpack . Furthermore, the dynamic import (import()) in Webpack works like the second way you mentioned, but it also returns a Promise so you can run things after that script loaded, therefore you don't have to write all those loading mechanics yourself. Webpack itself is enough capable.
Ok here is a strait JavaScript option. //picks random number between 1-4 var RandomNumber = Math.floor(Math.random() * 4) + 1; function MyFunction() { // Your function here if (event.srcElement.id != RandomNumber) { this.style.backgroundColor = 'red'; } } document.getElementById("1").onclick = MyFunction(); document.getElementById("2").onclick = MyFunction(); document.getElementById("3").onclick = MyFunction(); document.getElementById("4").onclick = MyFunction(); //your divs &lt;div id="1"&gt;Box 1&lt;/div&gt; &lt;div id="2"&gt;Box 2&lt;/div&gt; &lt;div id="3"&gt;Box 3&lt;/div&gt; &lt;div id="4"&gt;Box 4&lt;/div&gt;
This is great
Thank you mate 👍🏻
Super cool! I’d bet it’s because V8 is able to compile a lot of code down to machine code making the code significantly faster than interpreted python bytecode
Hi Guys, &amp;#x200B; I have made a React custom Hook for form validation. We are currently implementing at work. I hope you will find it easy to use and satisfied your project requirements. &amp;#x200B; cheers Bill
Yes.
But spectacle only handles aligning/layouting. It wont group my sublime+2terms as one window that alt-tabs like a group.
It's just a Oracle Certification Dude, Not a F\*\*\*
Oaky, thank you Dude.
Yep.
Migrating project from svelte 2 to svelte 3 is not so complicated as it might seem.
It does depend on context and the desired behaviour. Say I make 1000 requests, with 1 second between making each request. With the first request asking for a timeout of 1000 seconds, second request asking for timeout of 999, third asking for 998, etc. All 1000 timeout requests would essentially end at exactly the same time, there's actually no need to call setTimeout() 1000 times when you could easily do with just 1. Maybe it doesn't matter in this case if the API never experiences any serious load.
Oh so that's normal? I'm also frequently getting access denied errors in npm (running as admin), thought it was related.
If you have any data that one user is supposed to see and the other one doesn’t please keep in mind that whatever you store in local storage is not user-specific. Second, if you’re going to introduce any cache of this kind sooner or later you’ll find yourself in a trouble to try to invalidate it properly. While at first glance this sound like pretty trivial problem to solve, well, sometimes it doesn’t. If your app is web-based, if you get your data via http it’s almost always better to invest to tuning caching http headers properly rather than to try something else.
There are lot of ways to do this, here is one of the cleaner approach: **HTML Part:** &lt;div class="box" id="1"&gt; Box 1 &lt;/div&gt; &lt;div class="box" id="2"&gt; Box 2 &lt;/div&gt; &lt;div class="box" id="3"&gt; Box 3 &lt;/div&gt; &lt;div class="box" id="4"&gt; Box 4 &lt;/div&gt; **JS Part:** let boxes = document.querySelectorAll('.box'); for(const box of boxes) { box.addEventListener('click', function(e){ box.style.backgroundColor = "red" }) } This actually separates your logic from markup. So instead of calling the functions from html div's onClick it's better to have event listeners. Other important thing to keep in mind is all the common repeated things should be identified by class and unique values should be identified by id. Never use same id for multiple divs.
You can search for new react open source projects on github or something you have already used. For eg. React UI libraries like **react-bootstrap**. For most of the UI libraries the code is pretty simple and easy to understand. Then you can search for small utility libraries like that that you have been using frequently. For e.g you might have come across **redux-thunk.** If you see the code for redux thunk, it's just one file with 15 lines of code. One of the interesting and easy libraries to understand for react developers is **redux.** You will understand it lot more if you go through the source code and it's very easy to understand the flow and logic. Start with something like bindActionCreators function, applyMiddleware function. Things that you are most likely using on daily basis. You will be amazed to see how simple it is to understand these stuffs. Just keep exploring like that. I could go and give you a list of repositories, But it would be best if you yourself understand how to find the code and projects to explore. So, be curious and check things you are already using.
I'm not sure what's on that page, but it makes my firefox *very* unhappy. According to taskman, it's spins at like 50% available CPU on my surface pro 3. Chrome doesn't have a similar problem. Anyway, the site aside - critique on the library itself: It's a shame you don't interface with the constraint validation api. One should be able to inspect an HTMLInputElement's validity property to get a sense of what is wrong with a given input field. It supports the usual suspects: required, too long, too short, range error, pattern mismatches - these all tie directly to the attributes you can set on input elements. You can perform custom validation as well and set a custom message. (assuming you dont have \`no-validate\` on the form) Using this API is good for accessibility as user agents can be made to better understand what is wrong and bring that forward to the user (i.e., for screen readers). User agents would have a hard time making heads or tails of the styles/error/success pojo of one of these forms. You can also get localized error messages for free, based upon the user's language settings... In practice, though, it's usually desired to overwrite those with setCustomValidity messages. The ones that come out of the browser are a bit wordy. Unfortunately, it's a bit tricky to hook this up with react, especially with hooks - one must keep the react state up-to-date with what the browser considers to be valid. You'll get a DOM event emitted from the input, \`invalid\`, when you check validation - and you need to add checks inside the \`input\` event to see if your custom validation logic should still mark the input as invalid. In practice with react this usually means a re-render of the given input on every change -- with hooks wrapping the whole thing, depending how it's done, it might mean re-rendering the whole form with every change (OOF).
While this hardly will surprise someone who have basic knowledge of how cpython internals look like and around what core principles v8 engine is build - the title is still misleading. What the heck is “an average app” for the starters. The article itself shows that it’s just a bunch of standard performance benchmarks. Real-life python machine learning computations for instance are heavily relying on libraries with native code.
How did I guess what every comment is about?
Just go mad in the searh-section of GitHub. I spend a few hours a month just checking other code, trying to steal some ideas ;D
Maybe this? [https://github.com/egoist/import-http](https://github.com/egoist/import-http)
Have you seen the issue? It was quite the meme last week :D
the pictures are stored in the device storage. I have no use for a server. the android gallery will serve as individual storage space for each user.
First of all thanks for your critical, all options are valid (as everyone has their owns) 1. Firefox issue: I am using Firefox at the moment, not aware of this issue. But keen to find out why it’s happening. Would be nice to get your input and contribute too. Its open sourced :) Here is the GitHub report for the source code. [https://github.com/bluebill1049/react-hook-form-website](https://github.com/bluebill1049/react-hook-form-website) relax I am not running crypto on your computer :-) 2. It's a shame you don't interface with the constraint validation API: 3. I am not shamed for making something free for the community :) 4. This library doesn't stop you from using native validation API, it's an uncontrolled component: [https://reactjs.org/docs/uncontrolled-components.html](https://reactjs.org/docs/uncontrolled-components.html) 5. accessibility: I am pretty sure I am not breaking the accessibility here or prevent you from building accessible form, again it's uncontrolled you have all the HTML tag and attributes. 6. validation: 7. I am working for forms validation for long, not a single company's UI/UX happy to have the native validation looking and feeling, because they are inconsistent. different browser vendor has their own implementation. if your workplace is happy with the native, mate you are pretty lucky :) 8. what about custom validation rules, async validation, the form states: dirty, submitted and etc... 9. re-rendering the whole form with every input change 10. One of the primary goals is to reduce the number of renderings, have a look at the home page of performance. 11. Unfortunately, it's a bit tricky to hook this up with react, 12. There is nothing wrong with React Hook re-rendering the form for validation and it's not tricky at all (at least for me). Thank you for checking out the package and your feedback. I hope the community will find this package useful but all constructive feedback welcomes :) (Note: English is not my primary language, excuse me if things don't make sense. )
Yeah i did read redux and redux thunk, they were fun. Looking for more like that :D
You need to have some sort of "initialize" function that can replace the image with the localStorage image "on refresh" &amp;#x200B; Basically function init () { // do shit here } init() Should do the trick ;D
tbf no ones writing python for performance
This is an awesome library! We've been working with forms for a long time and the team came up with a custom solution using hooks, so we could just depend on React for our forms to work. Seeing this right now is great! Be sure we'll test and use it in some implementation in the near future, great work!
Could you elaborate on the design? Why would I need to create a \`new Container\`? is it possible to have more than one? can you show a use case?
Update: Setting cookies at xhttp request doesn't work...
Thank you mate :p
well done!!
thank you for encouraging :)
Not that related but checkout the fetch API: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API (sorry on mobile)
Note sure if it's the same as what OP mentioned, but I've tried the demo on the home page ([https://react-hook-form.com](https://react-hook-form.com)) both in Firefox and Chrome and there is a lot of lag when I enter something in the form. Like... the refresh rate becomes 2fps when I type something.
dame, I will need to do some profiling to see what's the bottleneck. thanks for letting me know
Some operating systems don't have usable window managers.
Is the request to the same domain? And are you using the same scheme (HTTP/HTTPS)? https://stackoverflow.com/questions/3340797/can-an-ajax-response-set-a-cookie
This wouldn't work, since you set the `onclick` value to the **return** value of `MyFunction` instead of `MyFunction` itself. You have to lose the parantheses if you want to do it like this.
You need a for.. of loop, not the for.. in
for...in enumerates object members. For arrays and collections this also means stuff like "length" and so on. So it comes down to what you want and what your data is shaped like. If it's an array, better iterate is the old "for" way. If you target new browser or use Babel or TypeScript you may also check out "for.. of"
fixed :) re-deploying the site. let me know if still having issue :)
**Thank you both, I understand now!** I'm only used to python in which for x in iterable is the normal way to iterate. And since I'm using an older version my IDE marked the for x of iterable as wrong and I assumed it was for/in.
Assuming you are trying to set a cookie for &amp; from the same origin as the page, you could fall back to the age-old "hidden iframe" method or making background requests. It'll feel hacky, but your cookies will be modifed as expected.
&gt;keep in mind that whatever you store in local storage is not user-specific. To add some clarity to that: local storage is not specific to *users in your application.* It is likely to be specific to OS level users on the same device, as browsers usually keep local storage (along with cache, cookies, and everything else) in the OS-level user's profile, though this is not 100% guaranteed. Of course on badly secured devices anyone can read another users profile, so if the data is at all sensitive make sure you encrypt it. If you need to allow multiple applications users to use your code in the same OS-level user profile (i.e. the same person has multiple accounts, or multiple users share a tablet that isn't configured for multiple users, or people otherwise temporarily allow access to a device logged in as them) then you need to key the data by application user. And, if sensitive, encrypt. &gt;If your app is web-based, if you get your data via http it’s almost always better to invest to tuning caching http headers properly rather than to try something else. Yes, unless the application is intended to operate entirely offline at times. Though modern features help out here, they might not be reliable if you need to support legacy browsers.
Fixed in Chrome, but I'm actually still having a bit of the issue in Firefox. Pausing all the videos on the page seems to fix it for Firefox, though. So I guess my Firefox doesn't like playing 4 videos or something.
i see, i will pause off those videos when not in view port :) thank you for your testing
\# - begin block : - else block / - end block It's ok for me compared to other templating systems, where each of these lines has one additional symbol, for example: {% if something %} or {# if something #} \--- "$:" is awesome, knowing how short it is and how powerful it can be. \--- {# each expression as name, index } is pretty neat as well. We shouldn't compare typescript to templating languages at all. \--- And assumptions about "GOTO:" sounds unreasonable. \--- Tried svelte, it's awesome. Community is great and helpful as well. I hope they will continue going the right path. Overall, I like svelte more than React or even Vue
Ok I found out that this specific page using this: [https://easyxdm.net/wp/](https://easyxdm.net/wp/) &amp;#x200B; It should be possible now, I think. Can someone confirm?
So event when that page using this? [https://easyxdm.net/wp/](https://easyxdm.net/wp/)
Ah ok yea late night.
Looks very nice. Just a few things I noticed when briefly looking at the demo: - When using mouse wheel to zoom, you should zoom so that the mouse position is the center of the zoom (look at how Google Maps zooms for instance). Also the zoom steps are generally way too large (larger than what you would expect from a single mouse wheel click). - I feel like the animations are wayy to hectic/abrupt. They have a weird curve/transition. Especially bad is the one where you switch to the next image, but also the zoom animation doesn't feel nice.
Sorry for the harsh words.. I need a simpler readme that instantly shows me why your library is better than the other alternatives out there Right now I'm met by a wall of text which I'm not going to read :D Sorry Maybe put in a screenshot of the gallery in action (Gifs are always catchy), and some simple example-code (via [carbon](https://carbon.now.sh/)), and then the rest could be hidden until I actively want to dig deeper (and use your library) Cheers
Done, thanks.
I guess supporting X11/xorg is much easier than macOS. If I was able to support macOS, I'm pretty sure I will be able to also support Linux.
Should I write here, or create a new post?
Anyone of above-average intelligence and work ethic is privileged to live under capitalism, since it acts as a multiplier for their success. Below average people might be better off living in socialist countries where everyone is forcibly more equal.
These are bs. It is much more based on how the program is written than the speed of the language itself. Just look at typescript vs node: [https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/typescript.html](https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/typescript.html) Typescript isn't even a language. When it complied it just removes the 'typescript' parts. And yet somehow for "binary-trees" its twice as fast as node/javascript. While the code for [pidigits](https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/pidigits-node-4.html) in node is written using buffers, which 99% of node developers wouldn't be using. What matters far more than the language is the implementation, and how optimised that implementation is.
Whichever is fine :) is there an ETA for this feature?
Try setting up the event handler before changing the window's URL.
Well, I try to not overpromise, but I think maybe 1 or 2 weeks.
&gt; If a bad box is clicked on, I need to change its colour to red Without jQuery, the click handler function should be like this. function btnClicked(eventObj) { let ele = eventObj.target; ele.classList.add("red"); /* or, change the element's style(s) directly... //just one (background) style ele.style.backgroundColor = "red"; //this above code will change e.g. // `&lt;button&gt;` to `&lt;button style="background-color:red"&gt;` //or multiple styles. //note: this replaces any existing previously defined styles in the `style` element attribute ele.style.cssText = "background-color:red; color:white"; //this above code will change e.g. // `&lt;button style="background-color:white; font-size:10pt"&gt;` to // `&lt;button style="background-color:red; color:white;"&gt;` */ }
Hi /u/randomuser243, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
No, your comparison is bullshit. You're comparing a multi-threaded TS implementation with a single-threaded Node implementation.
Is there something I’m not understanding, or did you guys miss the `integrity` attribute?
Great article
had no issues with this on firefox on windows.
You won't find plain JavaScript in the backend without Node.js
php?
searching for *backend written in plain JS How to run JS on a server without NodeJs?
First let's give a slight boost to the qs. This shaves off a few dozen ms for me: ```javascript const p = values[(low + high) &gt;&gt; 1]; ``` Now, since we are comparing numbers, let's use TypedArrays and avoid custom comparator for built-in sort: ```javascript const P_DEFINED = 1.0; // to test performance for sorting undefined const VARIATION = 10000000; // built-in sort excels for very small variation (e.g. try 1) const SIZE = 5000000; function generateArray() { const nums = new Float64Array(SIZE); for (let i = 0; i &lt; SIZE; ++i) { if (Math.random() &lt; P_DEFINED) { nums[i] = Math.floor(Math.random() * VARIATION); } } return nums; } while (true) { // provide identical arrays to each sort const nums = generateArray(); const nums1 = nums.slice(0); const nums2 = nums.slice(0); console.time("built-in sort"); nums1.sort(); console.timeEnd("built-in sort"); console.time("quicksort"); quickSort(nums2, 0, nums2.length - 1, compareNumber); console.timeEnd("quicksort"); } ``` Now built-in sort is faster: ``` built-in sort: 837.420ms quicksort: 1004.280ms built-in sort: 835.929ms quicksort: 866.385ms built-in sort: 836.181ms quicksort: 846.372ms ``` And TypedArray#sort is numerical unlike Array#sort that is alphabetical and forces us to use custom comparator when we deal with numbers. I've dug into sorting TypedArrays for some time and the only way I was able to beat it is the radix sorting of integers. In all other cases TypedArray#sort came on top.
Take a peek at any Wordpress install. But that's all in PHP.
This seems great as a learning exercise, but it makes more sense to use Recast or jscodeshift if you actually want to be confident you don't miss something. Parsing JS is a huge pain, but is also a fun project. For instance, your code will break for regex literals and template literals.
so all the backend back there was php ?
no thanks , lol
idk tbh i thought there might be someway to do it
Nah, sadly JS only runs on the browser and Nodejs
[removed]
FYI Node isn't a framework or library; it's a version of the JavaScript runtime that normally runs in browsers that instead runs standalone on your computer without the browser. This is what allows JavaScript to be used on servers. Additionally, because it isn't running on a web page it doesn't have APIs like document.getElementById, etc. Instead it had APIs like readFile for accessing your hard drive - things that browsers do not have access to but make sense for Node running outside the browser.
You can't have a JS based backend without node.js. unless you have a static website, i.e. a portfolio
On Chrome 74 on MacOS when i pinch to zoom with the trackpad on an image the zoom velocity is way too high and the screen goes black because I assume it's zoomed in way too much
Ah yes, I didn't think about things like that, thanks for the heads up, I'll def give those other apps a try. This was definitely worth doing just for the experience at the very least
In the first example, `defaultSearchBar` component have an advantage of being independend of the specific part in your app. In second example, `hookedSearchBar` is tightly coupled not only to redux, but to particular part of application, thus losing its reusability. This might or might not be a problem for your use-case.
UI Timer would be nice in 'slideshow mode' - either the border that encapsulates the play / pause button or a 2-5px bar on the top or bottom of the window to show the set timer duration.
Wanted to chime in here and say that that feature would be *amazing.* Thanks for your work!
i think there is a background event you could use. not sure what. but IIRC, there is one.
Thanks!
I have a simpler guide: don't. (Generators are useful for very specific circumstances. If you're not a library author or someone who's coding for those specific circumstances, you really shouldn't be using generators, as they will only make your code harder to read and work with with no added benefit.)
There's a setting for this: https://developers.google.com/web/updates/2018/05/devtools#eagerevaluation
Thanks for this. I’d wondered if and when this would catch me out and how they’d solve it to prevent that case.
well, I doubt it.
thank your for pointing out. ♥
Update: redis server for session management!
Exactly. They don’t.
it's for beginners. like me, not for experimented users probably like you.
https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunload There might be fancier stuff you can do with the history API.
I don't have anything for you to read but if you want to get better at coding, you might checkout [Code Review](https://codereview.stackexchange.com), a part of the Stack Exchange network. You can read code and post yours for a review. It has a lot of interesting code/projects answers, an with 7,900 questions tagged with javascript, you have enough to practice with. &amp;#x200B; You won't find entire projects like on Github, unless the users posts a link.
Thank you!! That looks interesting. Do you know if there is any advantage of using this import-http instead of just copy-pasting and importing?
Is it accessible? (WCAG)
Hi /u/fuuuarkyou, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
So instead [TypeScript #2 and Node js #3](https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/binarytrees.html). From `cpu load` both seem to gain from multi core, but how?
Hi /u/KeNu_Discord, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/andresxi, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Lastly, instead of all the above, if you just want to showoff your project, feel free to post it to our weekly _"Showoff Saturday"_ post. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mirel1985, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SRacer2016, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/DifferentAmbition, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/goldenhunter55, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/benaspggj, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/awesomeveer001, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
That's a good question. I don't know the answer. Looking at the source code, it's single-threaded for Node.
Hi /u/lexaxy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/auntedith, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/spistachio, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Komarara, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jobzombi, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/lowIQanon, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/aviv_or, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/garboooge, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Too bad Redux Saga made me hate generators. They probably don't deserve that.
The difficulty of regexes and template literals is that you don't actually know what to expect. If you see \`/\`, you can't know whether that is a division or a the start of a regexp very easily. I see you added some \`assignee\` logic, just keep in mind that it is likely much more complicated than that, even if what you have works in many cases. &amp;#x200B; For template literals, you have the issue of "}baz". Is that the middle of a template literal, or a closing \`}\` followed by \`baz\` as a variable name? You need to know what level of nesting the tokenizer is at in order to know what to expect.
Thanks so much for your feedback by the way, it is invaluable, I've learned a lot and your feedback helps because you're thinking of things that haven't even crossed my mind, you've opened the door to lots of potential for learning, so thanks again
I typed "piz" and "pizz" and still didnt get "pizza". Isn't that what this tool is suppose to do?
yes but memory usage is generally higher
[removed]
There is a demo on the github linked pretty clearly at the top of the page. &amp;#x200B; Why would you want a screenshot gif when it is just sitting there to test drive.
+1. You can probably almost lex JavaScript without parsing, but it's not possible to correctly lex without parsing. JavaScript requires [scannerless parsing](https://en.wikipedia.org/wiki/Scannerless_parsing). For example // There is a regexp here x = ++ /a/i.toString().length // There is no regex here x++ /a/i.toString().length To figure out whether the '/` starts a regex or a division operator, you need to decide whether the `++` is used a prefix or postfix operator which itself depends on the presence of the '=' operator.
Why?
"Should I use CJSS in my project? No. This is a joke I took way too far."
The biggest advantage is that you could pull from any source (not just npm) And it'll get locally cached (like deno does it) So you keep control of your product, not relying on node_modules hell :D I think that's the future, especially since npm lately.. you know ;D But for your usage, just replace the &lt;script href=".."&gt; in your index with a import .. from '..' in top of your main js and you should be good. Webpack should then bundle it in your bundle :D Cheers!
 [why?](https://imgur.com/uBok4Ha)
Maybe not a gif lel, but I'm just saying, he got 2 seconds to get my attention, if there's a fucking wall of text i'm not gonna invest :P Also no link where it's supposed to be, it was hidden in the wall of text ;) Maybe just put the demo link where it's supposed to be, might be enough (y)
Thanks for your suggestions. I will improve that.
Pinch touch action is actually not supported, but I will add this features to my tasks.
That's a good point, thank you for the hint.
Hi /u/Armandotrue, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yes you may right. The readme is a bit confused. Your suggestions sounds really good, I will improve that.
Nice feature, haven't this seen before in a gallery library, and the best it is easy to implement and to control, I will add this in one of the next updates.
From the readme &gt; **Should I use CJSS in my project?** &gt; No. This is a joke I took way too far.
👍
Very nice. Add some out of the box A11y. I like the up/down keys for zoom.
I would use [`evaluate` from math.js](https://mathjs.org/docs/expressions/parsing.html#evaluate) — it's a tried and tested library, albeit it comes at a cost of file size so if you are planning on using it in the browser you might need to consider pros and cons of it.
I guess it was worth the try creating this.
Yep! This is probably your best bet.
I must say I have the same concerns they have when it comes to accessibility and validation (and a few other things). I'm willing to PR to fix these because I'd like to use this library in my project but I want to know if you're open to have them added first &amp;#x200B; Namely, what I'd like to add: * custom errors are not being synced with the native constraint API (so no `:invalid\` or `:valid` css pseudo-selectors, and the input is being reported as valid to accessibility tools). It'd be really nice to sync with `setCustomValidity` * native constraints are not being used. It's fine to have the custom one but I wish native ones were taken into account too, because again, the browser will not tell accessibility tools that the input is eg. required * really that's it I think &gt;I am working for forms validation for long, not a single company's UI/UX happy to have the native validation looking and feeling I absolutely agree, but the solution to keep the accessibility while still having nice error messages is to just preventDefault the `invalid` event as that is what causes the popup
Running task queues is a fairly common task in the backend
He had me at the first half, I'm not gonna lie
First off, nice work! "I haven't really worked on an application for a while." &amp; "I'm 14" is a funny combination to read. Like did you do applications at 12 and then take a break? Joking :)
Yeah definitely. Nah I just code for fun, hoping to make a career out of it.
Isnt memory usage is low because it doens't use one thread per request?
I think that current galleries also need to support videos.
Down with Vue, long live CJSS.
Love the tool, works nice. &amp;#x200B; * Might want to have a zoom limit based on the resolution of the image and screen. I was able to scroll into : * style="opacity: 1; visibility: visible; transform: translate(-50%, -50%) scale(3.40282e+38);" * I know you have the button to re-zoom out, but limiting the zoom in might make sense.
Great suggestion, definitely something this library could solve better than others (no lag during swipe).
Any particular issue was hard / painfull for you? I've got some good experience with redux sagas, expecially efter overcoming initial entry barrier, they are actually very nice to work wooth.
Absolutely, yes.
This is pretty awesome. I really like how small actual code is too.
Java is for android development and swift can be used for ios development.
The first thing you have to find out is: Do you want to write your game in JAVA or Javascript?
Wow I really am a newbie to Java! What is the difference?
&gt; Java was designed as a general purpose programming language for building standalone applications, whereas JavaScript is a scripting language built specifically to interface with web technologies, namely HTML. [Java vs. JavaScript: What’s the Difference?](https://www.upwork.com/hiring/development/java-vs-javascript/)
JavaScript is a scripting language that is used for adding interactivity to webpages (but it is now used for much more). The naming is just very confusing, JavaScript has 0 correlation to Java besides the fact that they are both branded by Oracle.
Ahh OK. So is Java the language I should be using then?
I'd recommend javascript. This gives you more freedom over where you can deploy. For example, you can use [Apache Cordova](https://cordova.apache.org/) (aka Phonegap) to build a cross-platform mobile app. There are also many great javascript libraries that you can leverage for your game, like [PhaserJS](http://phaser.io/). Plus, since you already know Python, you can easily code a server-side backend (if needed for your game) and deploy it anywhere more easily. Also, Java is slow and shitty. People are going to hate on that comment and talk about how much it can be optimized but honestly you're not going to learn Java to that depth if you're only going to use it for 1 year. :) Good luck!
JavaScript can still be used for making games on mobile if you use frameworks like React Native, however I still think it would be better off if you use Java since it is more robust and better for games. However, it is primarily used for Android development. If you use a tool like unity you can develop cross platform 3D or 2D games easiest probably.
&gt;await arr.asyncMapP(getSquareAsync); I can add another helper function like \`\`\` await arr.asyncMapPool(getSquareAsync, 5 ); \`\`\` Which will basically create a pool of 5 parallel requests at any given time!
Wow thank you! I'll get started on learning Javascript now!
Ok thank you I'll look into that Thanks for the help!!
No problem
Look into unity. That is your best bet. It uses c#
i'm willing to believe you consider yourself in the former camp yet ironically oddly never seem to consider hard-working or intelligent people that are born under dire circumstances that are nearly impossible to exit (having to support their family, no luxury of higher education etc) who had the quote about all the would-be scientific progress lost to the third world and slavery
I'm not sure about "fairly common"; personally I've never done it, and I've worked the back-end (and not just in JS) for at least half a decade. But like I said, for specific circumstances generators *do* make sense: it's when you try to use them for stuff outside those circumstances that they're a bad idea.
This is nonsense, how can it be a true before-and-after if the before is using redux?
Hi /u/Berni_S, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Unity is your best bet
They are completely different languages. Honestly, it’s something that you can easily Google instead of writing up a detailed explanation of the differences.
http://www.commitstrip.com/en/2019/03/15/css-css-everywhere/
I know, fasy already has this, But I just wrote a code to run in chunk mode. I really enjoyed writing this tricky code. ``` Array.prototype.asyncMapPool = async function(t, poolSize) { var fullpool = []; var isCompleted = this.map(() =&gt; false); var length = this.length; var self = this; return new Promise(function(resolve, reject) { function addNewToPool() { if (i &lt; length) { var copyI = i; fullpool.push( t(self[i], i, self).then(function(v) { isCompleted[copyI] = true; if (isCompleted.filter(v =&gt; v === false).length === 0) { resolve(Promise.all(fullpool)); } addNewToPool(); //add a new to pool. return v; }) ); } i++; } for (var i = 0; i &lt; poolSize; ) { addNewToPool(); } }); }; function getSquareAsync(v, i, arr) { return new Promise(resolve =&gt; setTimeout(() =&gt; { console.log(`executing getSquareAsync at ${getTime()}, ${v}, ${i}`); resolve(v * v); }, 2000) ); } async function run() { var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; var result2 = await arr.asyncMapPool(getSquareAsync, 3); console.log(`result2 @ ${getTime()}`, result2); } run(); ``` Result ! ``` executing getSquareAsync at 2.021, 1, 0 executing getSquareAsync at 2.022, 2, 1 executing getSquareAsync at 2.022, 3, 2 executing getSquareAsync at 4.025, 4, 3 executing getSquareAsync at 4.025, 5, 4 executing getSquareAsync at 4.025, 6, 5 executing getSquareAsync at 6.026, 7, 6 executing getSquareAsync at 6.026, 8, 7 executing getSquareAsync at 6.026, 9, 8 executing getSquareAsync at 8.028, 10, 9 result2 @ 8.029 [ 1, 4, 9, 16, 25, 36, 49, 64, 81, 100 ] ```
Is hidden_div4 the actual input field or is it a div that wraps the field? Make sure you’re setting the required attribute on the &lt;input&gt; itself not its container.
I'm an idiot and you are a genius! That was it. I was losing my mind.
It's good learning to write a lexer or parser, but in practice, building such tools is an immense task. There are a number of great and actively maintained parsers you could use for your tool. I prefer the babel parser: babylon. https://github.com/babel/babel/blob/master/packages/babel-parser/README.md Once you have a good parser, the code transforms you want to do should be pretty straightforward. Babel has lots of docs about traversing their AST with visitors. I am using it successfully for a couple of projects.
Ahh got it... you want one of ``` import thing from “path/to/file.js”; ``` or ``` import { thing } from “path/to/file.js” ```
I just love that anytime you declare html or js it starts with a sad face :(
Cool, cool, I like it. But where do I put my CSS?
For `devDependencies`, `eslint`, `eslint-plugin-json`, `eslint-plugin-node` and then our company eslint config. After that, for runtime, maybe `lodash`, `request`, or `axios`, depending on the project. `lodash` is becoming less and less used in my workflow though with all of the ES2015+ additions.
Hi /u/ICanSeeYou7867, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Zigfler, this post was removed. Well, this is awkward. This subreddit is for **javascript**, which is different than **Java**. In other words, `javascript !== java`. Maybe try one of these instead: * /r/Java * /r/JavaHelp * /r/LearnJava Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Awesome, thanks. Are you not needing lodash anymore or did you roll a custom library to do similar things?
Hi /u/Aroneus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I'm simply finding it unncessary for all of the "helper" functions we used from it. `each`, `map`, `uniq`, etc. all have native replacements nowadays. We're slowly fading it from our codebase where it makes sense.
Sounds reasonable. Do you prefer axios due to it being lightweight for http/s and able to mix and match other middleware?
`request` has been a stable in our codebase for years, which is why we still work heavily with it. `axios` is great when we're working on newer projects and newer syntax like async/await.
Hahahaha this is amazeballs!
" To add markup to an element, select it in your CSS file, then using --html:(your markup here); add your HTML. This markup will appear everywhere that matches your CSS selector and overwrite whatever was there before. " I'm crying. :D
For 95% of my projects (which run the whole gamut, from implementing algorithms that draw over images to create oil paintings in 3D to simple business card webpages) I avoid dependencies like the plague and prefer building from the ground-up. I also hold the unpopular opinion that more folk should do the same, not only to better future-proof their code, but to learn the lower-level stuff for themselves so that when it does break they have the skills necessary to work around it.
Axios is the cool kid on the block, at least for now ;D
I would argue a testing library as well, maybe Jest or if you feel hip, Ava?
For sure! Doing it yourself is always best. &lt;3 However my boss doesn't share that opinion :(
I am so sorry to hear that. :-(
Jest, lodash, async (for control flow functions, now with async function support since 3.0), commander (for cli), winston (for logging). Lodash is just too useful and handles falsey values better than builtin es2015.
Thanks mate! It really broke my heart when they told me to use Bootstrap
can we stop with this love fest over a database system developer in 1974? It's garbage that is insecure, doesn't work with JSON and needs all kinds of ginchy hacks to make it do basic stuff like streaming and blob storage. Just let it die already.
That's really neat, reminds me of winamp visualization. It'd be cool if the console printed out instructions on modifying the theme and such on the fly.
love your feedback, so much more friendly... oh yeah `setCustomValidity` i would love to see a PR, i would love to get it for accessibility. by the way i am not stop using native validation. you can use native if you prefer or work allows. &lt;input required ref={register} /&gt; still works too.
&gt; To install CJSS, add the JavaScript to your website. It's js in css in js :(
oh yeah gonna work on the class component too, what a simple and great idea!
It's sad when the author doesn't recognize the genius of their own creation. I'm rewriting my whole application in this tonight and updating production tomorrow AM.
what the fuck?
Well C++ originated as well from a joke and was widely adapted by he industry so I'm not surprised.
thanks for testing, I use firefox on mac seems to be fine as well. but i will looking into pause those videos not in viewport too :)
I’ve always felt that if you want to use your own home-made utility library for production code, you need to meet three different criteria: 1. Every function in that library needs to be well-documented. Descriptions, function signatures, side effects, dependencies, etc. 2. Every function must have tests written for it. It’s hard to say how many test cases per function, but a good benchmark is to do what you would expect for any other piece of production code. 3. It needs to be “tree-shakeable”. In other words, your build process should be able to automatically exclude from the final build any functions that aren’t being used in your code. If those things are not already in place, then it’s hard to justify spending the time to build out all of those criteria (potentially in addition to further development of the library itself), when there are plenty of well-tested open-source alternatives out there... At the end of the day, your boss will need to have an open mind about these things, but with that in place, it’s up to you to provide that kind of reassurance, probably on your own time.
99 Byte **plus** whatever Bytes on the previous 52 lines.
you should use JCSS for that, it's CSS in JS. oh, wait a minute... that already exists \\\^\_\_\\\^
You can support welfare programs for those people and capitalism simultaneously.
Because
Bold of the creator to assume that I won't take it further.
&gt;What makes Firebase Authentication so good besides being free? I liked it because it was simple to use.
So? People aren't going to stop using React, and pretty much every popular framework or library has a similar amount of dependencies. Should this change? Maybe, but it's not going to happen any time soon and not because your run-of-the-mill developer on Reddit.
No, JavaScript is JavaScript. Especially if the app is a dated one and written before ES2015+ became mainstream - that could even be a conversation point in an interview if it comes up (slowly starting to migrate to new syntax in your free time, etc.). If the team you're joining uses ES2015+ syntax and you refuse to learn or adapt though, then of course there'll be a concern. As long as you show a willingness to learn and start using the new syntax if the job requires it, I wouldn't worry about it.
Hi /u/DisgustingFalcon, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
awesome, thanks for answering.
great but that has fuck all to do with your initial mischaracterization
For every single project I add `husky`, `prettier` and `pretty-quick` and a `.prettierrc` so I can format my code on commit.
That’s a pretty cool visualization.
You should move to a socialist country if you like them so much.
I love two things about axios a ton. One is request and response interceptors which are handy for extending your request config on a per request basis. Another is axios instances which are nice for when you are hitting multiple services and want your requests to be configured differently.
Wow Jacob, no need to be so rude
&gt;where do I put my CSS? in your Javascript of course
I've been playing around this lately as well. I found [this handbook](https://github.com/jamiebuilds/babel-handbook/blob/master/translations/en/plugin-handbook.md#babel-traverse) pretty handy. I would start with something like this and just look at the terminal for a while. ```js const util = require('util') const pprint = (o, depth = null) =&gt; { console.log() console.log(util.inspect(o, { depth })) } const ast = parse(file) traverse(ast, { CallExpression(path) { if (isDefinesCallExpression(path.node)) { pprint(path.node, 2) } } }) ```
it just really rubs me the wrong way when people suggest the only reason for suffering under capitalism would be if you’re not smart or hard working, as if it’s a truly fair system that rewards labor and effort
If you do end up needing to roll your own, [parsimmon](https://github.com/jneen/parsimmon/blob/master/examples/math.js) is pretty fun to use imo. Leads to some elegant solutions, but isn't the fastest thing in the world. They even have a math example to go off.
The problem is the way your if statement was formed. You should have had \`if (lower === 'pt-br' || lower === 'zh-cn' || lower === 'zh-hk' || lower === 'zh-tw') \` but you had \`if (lower === 'pt-br' || 'zh-cn' || 'zh-hk' || 'zh-tw') \` &amp;#x200B; Do you see the difference? The or check is just effectively checking \`if ('zh-cn')\` instead of if the value of lower is equal to zh-cn
`if (lower === 'pt-br' || 'zh-cn' || 'zh-hk' || 'zh-tw') {` doesn't really work. That line of code isn't saying "if lower is pt-br, or if lower is zh-cn, etc.", it's doing the first `lower === 'pt-br' check and then... `let lower = 'fr-ca'`; `(lower === 'pt-br' || 'zh-cn' || 'zh-hk' || 'zh-tw')` to `(false || 'zh-cn' || 'zh-hk' || 'zh-tw')` which then evalutes to `'zh-cn'` because it's essentially just evaluating to the first non-false value, which in this case is `zh-cn`. So your original if statement is then just doing: `if ('zh-cn')` which of course is always going to evaluate to true. This is due to the JavaScript (loose) equivalent of null coalescing using a logical OR. Think of it like "use this if truthy, else this one". A better check would have been something like `['pt-br', 'zh-cn', 'zh-hk', 'zh-tw'].includes(lower)` or just chaining `lower === 'pt-br' || lower === 'zh-cn'...` but it looks like you've figured out another solution.
Your problem is the equality check You must check each individual item against the original thing, javascript will evaluate strings with content as "truthy" In other words change this `lower === 'pt-br' || 'zh-cn' || 'zh-hk' || 'zh-tw'` to this `lower === 'pt-br' || lower === 'zh-cn' || lower === 'zh-hk' || lower === 'zh-tw'`
You need to study how expressions work in JavaScript. You don't compare like this: if (something === this || that) You need to compare like this: if (something === this || something === that) In the first example, "that" is both a variable and a 100% valid expression. Since it's a non-empty string, JS will coherce it to TRUE and therefore you'll always enter that if statement.
Insecure much? lol
Yeah it's by no means a perfect system. I think it's still the best system that's been created so far, but that comes down to a subjective value judgment about what fairness means so I can agree to disagree there.
Heres what you wanted. https://jsfiddle.net/6jvo50s4/1/
Do they offer premium developer support?
Yeah you gotta remember the p from pemdas. Lol I know it doesn't apply here but I always think of pemdas when building my conditional statements.
But it has ${yield} which oddly makes this very useful.
Where are the benchmarks?
And this is why getting a simple webpage to make its first meaningful paint to the screen is getting so goddamned slow.
lol do you know what dev tools are?
Not really. 95 percent (maybe more) of the code is just tooling to bundle the app into a couple of pretty small files. A bare bones bundled create react app is pretty small (and fast)
If only the average project was a "bare bones bundled create react app." :-)
Yes I do. Do you know what code bloat is? :-)
It's very cheap to use any of the cloud provider's auth. By rolling your own, your implementation becomes an attack vector.
Be careful of this change. In the old \`connect\` world, mapStateToProps and mapDispatchToProps would protect you from re-renders when parent components re-render. I.e. the shallow comparison of the resultant props could stop a re-render of your connected components. With the redux hooks examples, you lose this protection with any render of a parent component re-rendering your component.
This is great!
Hey cool! I was just thinking about how this would be a fun side project to make the other day. This works really well, nice job. I'd love to be able to tweak the theme / settings of the visualizer.
Looks more convenient than react haha Good job! so &gt;&gt;Should I use CJSS in my project? Why not
Hi /u/christianHardy, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It depends. I really get turned of by for i ++ i == methods.
It only lack one setTimeout() (to be used as watcher) to beat React 1.5KB at a time haha
Hi /u/lbebulk, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Please don't speculate if you just don't know.
Most employers are going to have legacy code. Make another one with ES6/7 to fill out your portfolio if you are really worried about it.
It went so far, he actually made it useful. The ability to wrap HTML in content with ${yield} would be really useful, and it's much more powerful than "content:".
You say that, but if W3C came out with that and told us "the next step in semantic web" we'd be shitting our pants about how awesomely good practice this is.
Yes there is a hook. Good quality content. Washington Post crap is not worth a dime. I don't just sign up for every 10€ a month subscription just to read one crappy article. Don't be silly. If you provide good stuff, my money is going to good journalism and show you don't trap me in I will consider. Otherwise : no.
But most of the news is already garbage.
Definitely, though if you're already able to use i3 you're clearly in a good situation already
This has more to do with the babel and webpack ecosystems than the react ecosystem. I say this as someone who's not a huge react fan. If you check vue or angular CLI tools you'll see a similar mess.
I was worried for a second there.
Everyone is talking about your if statement, noone is suggesting how to write that if statement. I'd write it as `if(_.has(['pt-br', 'zh-cn', 'zh-hk', 'zh-tw'], lower)` where _ is lodash or the older classic underscore library. Or if you don't want any libs `if(['pt-br', 'zh-cn', 'zh-hk', 'zh-tw'].filter(v=&gt;v==lower).length&gt;0`
Really good work! One small feature request: On mobile, I really like the "swipe up to close" gesture
Wait til you find out about \`Array.prototype.includes\`!
Awwwww yeah, `['pt-br', 'zh-cn', 'zh-hk', 'zh-tw'].includes('zh-cn')`. I have no idea. I also thought of `['pt-br', 'zh-cn', 'zh-hk', 'zh-tw'].indexOf(lower) != -1` before looking at your comment.
Useless comment. If you wanted to be sure of the accuracy of my claim you could’ve looked it up and posted the result here. As it turns out I’m correct. Older versions of safari had the local storage quota set to zero in private mode.
The zoom is infinitive, and think it would be better to set some limit, for example 3 zooms and the button will be disabled.
Yep, this is correct. That said, it's easy to handle that by wrapping your function component with `React.memo()`. In fact, as of React-Redux v7, `connect` itself is now implemented as a function component that uses hooks inside, and that's how we implement the existing behavior.
The node event loop is single threaded, but when interacting with native libraries the libraries can multi thread.
Yeah, I don't consider i3 even remotly as good as ion3. Actually I stopped using Linux altogether when ion3 was abandoned.
How is it code bloat if 95-98% of it is stuff for development that doesn't even end up in the build? Just the usual old tired /r/programming anti-npm/node/js circlejerk.
Hi /u/Crampeteb, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/Crampeteb, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Project Page (?): https://github.com/scaleflex/filerobot-image-editor *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This is a project we have been working on. It is a part of a bigger scale b2b digital asset management solution so we want to make this plugin free to all.
In the end of the day, the boss pays the bills, and doing it yourself is always the slower route. Even though *we* like to argue for technical debt and that it'll probably be quicker to just throw something together than reading through yet another bloated docs However, money decides. And it's a lot quicker to do npm i axios than writing your own wrapper. Even though it could be done within an hour or two with tests. So I build my own shit in my spare time as my creative outlet. And stick to bloated third-party libraries professionally because that's the world we live in :P
by the way, looks like aria-invalid is great for accessibility, I am going to create an example for that, plus if you serious about creating a PR for customValidity I am really looking forward to that : )
This title is inaccurate. It does not turn a web browser into a web server. It creates a peer to peer network of Web RTC nodes that act in a web-like manner.
Pretty much (for lack of a better word to describe the thing)
It goes into the style attributes of the CJSS html elements, silly.
Thank you! (:
It would be a lot better if packages were... packed, as the name implies, instead of a bunch of files that clutters the filesystem. 200MB isn't too bad, but 35K files is way over the top. I'd also be very surprised if build times don't go down as a result.
I have a big project in ES5 too, with a self written deployment script on top of that. Good thing I'm not working in web dev.
Find some (active) github projects you're interested in, play around with them, learn the code, submit pull requests to fix any issues you find.
indexOf was the go-to way before includes made it in, you could still consider that if you want backward compatibility. The two ways you suggested are way overkill.
I created my portfolio using ReactJS: [https://github.com/p32929/Portfolio](https://github.com/p32929/Portfolio)
&gt;and the idea of creating imaginary projects of my own just seems far reached as I have a job to keep my bills paid &amp;#x200B; It doesn't have to take that much time. Literally any time you spend on coding is for the better I'm sure you need a simple notes-app or a simple toDo-app, maybe a bitcoin-tracker, or anything you could think of It's always more fun to build it by yourself. The feeling of achievement is unbeatable. The feeling of "I'm a fucking god" I work as a developer, but still spend a good few hours a week in my spare time coding on personal projects because that's **waaaaaaaay** more fun than what we do at work
**Not at all.** They'll mostly check your patterns and overall code quality. ES6 is just "syntactic sugar" which does make it look nicer. But it's still just JavaScript in the end &amp;#x200B; *The fact that you have something to show for is worth so much for any employer.* Most devs don't have a decent GitHub profile... So really any project will do.
This is perfect for trolling all of those devs who scream "separation of concerns" every time you pull out a JS framework.
I get that. The problem is, as I don't mix up much with the ideas, and what's going on on the "mainstage." Like there's this cool new app that does "this" through wi-fi, and stuff like that if you know what I mean. Basically my work takes majority of my time, like 10+ hours, and I work on Saturdays as well. And most of the time I just feel exhausted, so my read time is severely undercut. Like at this moment I'm not even having a trace of anything remotely what I could build in order to make a real life use of it. When I practiced vanilla js, I had ideas to build my own chess game for example, which I've almost finished, but didn't get the time to finish it. Also I built my own PONG game (two sticks hitting the ball). All done with JS in HTML. Not the best idea, but it worked :-) So, I just need some push, something to get involved and learn on the way.
That hasn't occurred me. Could be an idea. I will try. Thanks :-)
Maybe you know someone that needs a website and you'll be able to make some $$ and a opportunity to *just start coding*™ For me it has almost always been my inner drive. I can't just build a website for someone else because I've got zero motivation to do that. But I know most guys started out building simple websites for family &amp; friends and then the interest grew from there
Sounds good. That needs swipe axis to be locked in one direction delayed by a short threshold depending on vertically distance. It is just a bit tricky, but will come in one of the next updates.
Was done in the last update (Github pages needs to be updates)
Was done in the last update (Github pages needs to be updates)
```button { --js { $(this).css('background-color', 'red'); } }```
You can use jQuery for that... `#el { --js: { $(this).css('background-color', 'red'); } }`
Would we though?
[Escapist Deluxe in action](http://www.sabiland.com/escapist.html) Another one is [Woozy Clock](https://github.com/sabiland/WoozyClock) (digital time representation animations). [Woozy Clock in action](http://www.sabiland.com/woozyclock.html)
I know of an older, very similar project: [https://github.com/walaura/js-in-css-rt](https://github.com/walaura/js-in-css-rt) footer { border: 3px solid red; color: white; background: blue; --eval: 'this.innerText = `©${(new Date).getFullYear()} My Web Site`'; }
I can guarantee it. Just look at our industry still arguing what REST is, but being absolutely adamant that it's a great practice and we all ought to do it. It's fucking hilarious.
[freecodecamp](https://www.freecodecamp.org/) used to have projects for nonprofits at the end of their certifications, could also be something to check
This looks like Qt [QML](https://doc.qt.io/archives/qt-4.8/qdeclarativeintroduction.html) somehow
`yarn global &lt;add/bin/list/remove/upgrade&gt; [--prefix]`
Awesome I have been looking for something like this. I remember when these were standard on music apps . I’ll have to try this out tonight.
Speed of development is the key to firebase. *Otherwise it's an really expensive solution* And as usual with Google documentation they leave you to stackoverflow to figure it out
I just looked at the first problem: findTheLargestMultiply.js. It's huge! And I have no idea why you need to know whether any number is even or odd. Here's my solution. custom written for 3 numbers. function findLargestMultiply(arr) { var a = arr.sort((a, b) =&gt; a - b); return Math.max(a[0] * a[1] * a [a.length-1], a[a.length-1] * a[a.length-2] * a [a.length-3]); }
Firebase has great docs, I don’t know what you’re talking about.
Don’t be so defeatist. We need to go deeper.
Someone needs to make a way to compile js to css
When I was learning AngularJS I made games I liked and understood the mechanics of, example 2048, but then I’d make some of the logic more convoluted just for the sake of learning it. For 2048, each time you make a move a new tile is placed, a 2 or a 4. I set up a dotnet API with an endpoint to serve up that value as well as an endpoint to serve up the colors the tiles should be painted based on their value. It makes no sense in the real world but I wanted to learn how to make services and work out promises. Also, I find games more interesting than grids and lists, so I was willing to put more free time toward it.
Hey, Well although it is true your solution is way shorter, its also use the actual `max` method to calculate the answer of the question. and usually in interviews they wont accept it. It will be as same as they ask you to sort an array you you will write `const sorted = arr.sort((a, b) =&gt; a + b)` . BUT after checking with large data sets I did find an error with my code so thanks!
Normal dependency wise, I typically only install rxjs nowadays (and graphql when I need it). As for devDependencies, babel, eslint, and prettier of course.
I assume V8 code optimizations can work in separate threads, too.
Yes, it does a lot of heavy lifting when it comes to optimizations, but is still quite a bit slower than native code, just because JS has to work with inefficient memory structures. It will beat regular interpreted code by a big margin (as happens with Python), but will lose to native libraries that are popular in python world.
``` $&gt; yarn global add bla@* ``` ?
You don’t need Babel or React for a simple page though. I reach for React to make applications, for simple pages I’ll just write plain HTML and CSS
Ah cool. Thanks :D
Yes, you see? \`install\` is missing from this, to just do the same as with \`yarn install\` in a local dir.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/spotifyapi] [\/u\/itsappleseason built a Spotify visualizer, and a library so you can too.](https://www.reddit.com/r/spotifyapi/comments/c21dnb/uitsappleseason_built_a_spotify_visualizer_and_a/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
There can be both positive and negative numbers in the array. After sorting, the most negative numbers are at the front of the array,n the most positive numbers are at the back. All the numbers in the middle can be ignored. For example, if there are only positive numbers, you get the largest product by multiplying the 3 largest numbers, i.e. the three at the back. But the negative numbers could yield a large positive product, if you multiply them pairwise. The further the numbers are below zero, the larger that product. So I multiply the 2 most negative numbers and the most positive number yielding result 1, as well as the 3 most positive numbers, yielding result 2. After comparison, I pick the largest of those 2 results. If there is only one negative number, or none, then result 1 will be lower than result 2. If there are only negative numbers, then multiplying the least negative numbers will yield the largest result, which is still negative. But that is still result 2.
Very well! Thank you. Can you add this solution to the repo instead of mine? Its obviously the perfect one! 😊😊😊
I've mostly used it professionally and it's quite expensive compared to any other solution And sure the docs work for most things. But as usual with google products when you wanna extend them you are better off going to stack :-) Though this is early 2017, it might be better these days! :D I haven't really used it since because that experience alone killed my enthusiasm Last time I needed something realtime-ish I was looking in to a pouchdb+couchdb solution instead
I don't tend to use yarn but I assume `add` will do what you want
Wow! Indeed that works exactly as I wanted. yarn is supposed to be the consistent one, yet locally you install with \`yarn install\` and globally \`yarn global add\` :p &amp;#x200B; So: &amp;#x200B; Locally: \`yarn add\` - needs a package, adds it. \`yarn install\` - installs all packages. &amp;#x200B; Globally: \`yarn global add\` - installs all packages. \`yarn global install\` - does not exist. &amp;#x200B; Thanks for the help to figure these out everyone :D
This feels like a huge step backwards. Thousands of lines of code to convert millimeters to centimeters and back. Just do the very simple math client side.
@ggolemg2 this code is for client side. In complex application conversion code would show up in lots of places and would be hard to manage and potential for introducing bugs
Why are code snippets put in (occasionally stretched) images?
This is really awesome! Love the idea, thanks for sharing!
Does this mean that anyone who would enter the website would be part of the network?
Hi /u/pvinis, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Cattleman_Joe, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Moe613, this post was removed. Job and job-related posts are prohibited * Job postings: Please post to /r/remotejs, /r/forhire, etc. instead of here. * Job/Career advice: Please post to /r/cscareerquestions instead of here. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/porters_quarters, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Sorry for that.
I'm working on a complete web framework you can embed in a .gitignore.
Does it handle NULL?
This feature is now available.
[removed]
It is now the first entry in the top navigation
Sorry for being pedantic, but it's "iteration", not "iteretion". I see that you've written it multiple places in your comments.
I think Ref callbacks are the way to go, it just seems easier to me at least, I quite never understood of createRef(), specially since I rarely use the constructor and the super(), I initialize the state directly with: &amp;#x200B; `state = {` `property: this.props['name'].prop` `}` &amp;#x200B; and when using this method it's conflicting if you try to use createRef() in the constructor unless you use ComponentDidMount to create the ref, it all becomes a mess, ref Callbacks are way easier in these kind of cases, at least when using props and using the initialization method I use of parsing the state directly from the props
thanks fixed (:
Fair point. I'd say that if you don't use lifecycle hooks at all, then \`useRef\` is still easier as I explain [here](https://react-refs-cheatsheet.netlify.com/#using-hooks) (requires Hooks support though).
Great! Looks like a great implementation with some brief testing.
Hi /u/sevenbytes7, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Looks promising but probably not ready for use in production apps yet, but looking forward to using it when there's more features since TUI Image Editor is like the only good free one out there atm, but the API is pretty lacking and its not a small package. Few issues I noticed: 1. Resizing to a small image size then resizing it back to its origin size again results in quality loss (this is a pain to deal with I know, a hacky solution would be to always have a copy of the original image saved to be used for further resizing, there are better solutions out there though for sure) 2. Having to enter the dimensions instead of being able to just drag the image is kind of annoying. 3. Honestly just not enough features to be that useful, which seems to be the problem with all the open source image editor libraries currently out there, they either have crop/resize but no drawing pen, or vice versa.
It has to do with how I size the snippet images, design bug. I'll have to change them to codesandbox snippets.
That is one of the coolest projects ive seen in a while! Could run a chat app without a central server (just the Hub), through a closed system, right? Is this secure?
Eval is not evil, running anonymous and untrustworthy code (e.g the entirety of node.js) is evil, and gob-smackingly stupid besides. As it turns out, evaluating expressions is an old and well-understood process because the grammar describing the method can be turned directly into a parser, e.g. &lt;expr&gt; := &lt;term&gt; [+|- &lt;term&gt;]* &lt;term&gt; := &lt;factor&gt; [*|/ &lt;factor&gt;]* &lt;factor&gt; := &lt;number&gt; | (&lt;expr&gt;) &lt;number&gt; := [0-9]+ A practical expression evaluator will have more replacement rules (“productions”) describing functions and variables, but this is basically all there is to it. I would use eval myself, but if you must roll your own because of some bigoted superstition, this will get you started, and without relying on some huge clot of somebody else’s code that for all you know could be doing more sinister things than eval is suspected of. ;)
&gt; I'm not sure about "fairly common"; personally I've never done it, and I've worked the back-end (and not just in JS) for at least half a decade. Regardless of your inexperience, task queues/job queues/message queues are quite commonly used, and not just on the back-end, and not just in JavaScript. &gt; But like I said, for specific circumstances generators do make sense: it's when you try to use them for stuff outside those circumstances that they're a bad idea. You could say the same thing about virtually anything. Loops are great for certain things, but terrible for others. Would you advise that people not use then on these grounds, or learn them well and use them appropriately? How are generators any different? You are basically saying "don't write bad code", which is a given. &gt; I have nothing against people using generators appropriately. All I'm saying is that (like proxies and getter/setters) most front-end devs and lots of back-end devs (at least the ones who, like me, never had to implement a task queue) ... or as I originally put it "most devs" ... don't need to/shouldn't use them.. "Don't need to use them" and "Shouldn't use them" are two very different things. It's true that you don't *need* to use generators. Technically, you don't *need* to declare variables, either, but you definitely should. Generators help address a number of different coding problems, and the best way to know how to use them appropriately is to start using them.
Use class properties for your refs too?
My deleted comment was probably not helpful, but neither is superstitious prohibition of a javascript primitive. “Evil”, indeed. Why shouldn’t you run eval on well-formed expressions, provided your codespace isn’t polluted with third party nonsense?
like state = {something: React.createRef()} ?
Why would you want to advance the focus when a user hits Enter?
Can you give an example of "custom-programmed interactions". It's too vague for me to say something about that.
The salt is real tho
myRef = createRef() directly on the class, same way you initialize state
God I wish Spotify had a visualizer built in. This is an awesome project, just sucks we have to open up a browser for it.
"no playback detected" for me, I have no problems with sounds on my browser tho
I read this morning that eval can be dangerous because it ignores the rules of lexical scope.
Check out HTML5 History API [https://css-tricks.com/using-the-html5-history-api/](https://css-tricks.com/using-the-html5-history-api/) [https://developer.mozilla.org/en-US/docs/Web/API/History](https://developer.mozilla.org/en-US/docs/Web/API/History) Thats how SPA ( single page app ) routing works pretty much..
Lol i love it
I’m pretty sure Netflix and Spotify use webrtc heavy to cut down on bandwidth. Always wanted to dive in but never had a personal use case.
Starred.
The example with `this.onRefMount` example seems to have a bug - you don't bind it in the render function.
Just saw it yesterday. Even Kent C.Dodd started it on GitHub. Our team will try it today and see how it does against somewhat complex components. Thanks for this awesome project.
What bug exactly? [In the cheatsheet](https://react-refs-cheatsheet.netlify.com/#callback-constructor-binding) there is an example with \`onRefMount\` being mounted in the constructor.
Oh my bad, I misread it and thought the "However, it won’t help if you bind directly in the render function." was referring to the example below and didn't notice the constructor.
Hahahaha, love it! I think we all need something like this!
So l33t bro
Is this something that requires a library? I'm under the impression html and CSS handled gifs just fine.
[removed]
It's almost as if evolution isn't a straight line forward
This pauses animated gifs, which is not possible with html and css
Hey that's cool! I didn't find it in the docs, so can you make a tldr of how this works under the hood?
Sure, basically we write the data of the image to a canvas element, which just freezes the first frame of the gif.
And that’s dangerous because... ?
&gt;a hacky solution would be to always have a copy of the original image saved to be used for further resizing That is the only way really, without the original data you don't know what the resize operation effectively threw away and have to "make up" the missing detail. It would be more difficult than just keeping the original too, unless you only do this when there are no other changes between the two resize operations: "Size-&gt;filter-&gt;size" will not produce exactly the same result as just "filter" or "filter-&gt;size".
I'll add something to the docs to explain it better, but yeah that's where most of the magic is.
cool! small typo on the readme with 3 e's in freeze
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/vuejs] [vue-freezeframe and freezeframe.js 4.0.0-alpha released](https://www.reddit.com/r/vuejs/comments/c24tt0/vuefreezeframe_and_freezeframejs_400alpha_released/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Ah, thank you! fixed
XML is literally the shit :D
ilysm
Setting state from props is almost definitely an anti-pattern. In most cases you should prefer to use props directly in the render method or in some cases define the [`getDerivedStateFromProps`](https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops) lifecycle method.
You're kidding, right?
Would be reaaly nice to see
What's the purpose of `destroy` method? Once the destroy button is pressed not only everything stops working -which may be reasonable, given the name- but also a lot of errors start appearing in the console when you do anything. So it seems like you may not be cleaning up correctly on the destroy action. I mean, obviously you're not cleaning up the various button click listeners in the demo, _but more than that_ your `cropper` object _seems_ to still be a valid object (i.e. you can call stuff on it) but then it errors out if you actually call anything on it.
CodePen doesn't implement DNT so there's no pen, but JS version is basically. var canvas = document.getElementById("canvas"); var context = canvas.getContext("2d"); context.textAlign = "center"; context.fillStyle = "gray"; context.fillRect(0, 0, 100, 100); context.fillStyle = "black"; context.fillText("gray", 50, 50); context.fillStyle = "darkgray"; context.fillRect(100, 0, 100, 100); context.fillStyle = "black"; context.fillText("darkgray", 150, 50);
I guess no we just need an illegal immigrant blocker to go with it?
Hi /u/caspermoeller_89, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
When I was learning ReactJS long ago I read on the documentation that it was okay to set the state directly from the props
Sure, you can, if you understand exactly what you're doing. But I'm struggling to think of even a contrived reason you would want to do so. Can you show me an example of a component that actually needs to work that way? This article has explanations and examples for why it should not be done. https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html
I assume you're basically parsing gif format?
Cringe extension
It's not
I won't be the person who will make it
Stop trying to politicize a programming Reddit...
No time to respond, reverting commits.
This is actually a very common request for interfaces. Honestly I am surprised you are asking.
Hi /u/jeanmachuca, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Not really, no. We literally draw the animated gif onto a canvas element, and because canvas only understands 2 (sometimes 3) dimensions, but has no concept of time, the first frame of the image is drawn. You can see in the process method that we simply use `context.drawImage` to draw the image to the canvas. [https://github.com/ctrl-freaks/freezeframe.js/blob/master/packages/freezeframe/src/index.js#L80](https://github.com/ctrl-freaks/freezeframe.js/blob/master/packages/freezeframe/src/index.js#L80)
You're talking about a form that presents multiple fields at once, and they want enter to perform a tab through them? That's maniacal. Not sure if I'm more shocked that anyone would think that's desirable or that you're surprised someone would ask wtf you'd want to do that in the first place.
This is my tiny, summer project. ;) It will have 10-15 episodes. It's free. The concepts will be universal and applicable to other programming languages. I will focus on fundamentals in both functional programming and in JavaScript. Those videos are specifically meant for beginners, or even non-programmers. I'd be happy to have your feedback and suggestions.
Good job refocusing [this](https://www.reddit.com/r/javascript/comments/byhaob/why_dark_gray_is_brighter_than_gray_in_css/) to be more JavaScript-centric ;)
Excellent idea
Looks good, might use it as a replacement of my own tables. How and why did you decide to make this free (MIT)? I could see this being commercially viable, so why did you choose for a MIT license? Currently facing this question myself regarding a different project.
Why switch? VS Code is already best in class
Dude great article !!! I love you syntax color !
About configuring Jest + VS Code: https://www.basefactor.com/using-visual-studio-code-to-debug-jest-based-unit-tests Sample project using typescript: https://github.com/Lemoncode/jest-vs-code-debugging-example/tree/master/custom-solution-jest-config-file/01-implemented
I'd also be interested in hearing about the reasons for moving from VS Code to Webstorm.
React changes very quickly.
I'd swear that refs were discouraged 18 months ago and on the way out. Am I remembering it wrong?
String refs are deprecated, but refs as a "concept" are not. In fact, the new version of React with Hooks has a useRef hook.
Don't have time. But cool, that's nice to know. I know private mode just has everything enabled these days. It just gets cleared every time when you close the window. Otherwise most websites can't let you login or stuff like that.
Less Salvini, more kittens
I may be wrong but checking the examples I did find a stop function that restarts the animation. Is there any way to pause and start from that frame of a gif or these terms (play - stop) are used interchangeably?
If you're doing some small apps like shipping websites for small - mid businesses or work alone / in small team VS code is generally sufficient. And if you're exploring more unorthodox libraries and technologies it can be even better, as it's fully community driven. So the plugins on average are not of the same quality as curated ones or built in from JetBrains are. However, you won't find anything of quality for something like Svelte.js in JetBrain ecosystem. Performance side is another place where people tend to praise VS code, however, my experience is that anything other than fast start up times and handling dozen of open tabs in mid size project becomes very resource heavy. It feels like chrome with progressive memory consumption, while JetBrain stuff stays steady even though the floor resources required are a bit higher. I had my computer frozen due to VS code. In general plain Javascript support is better in WebStorm as intellisense is more sensitive to context and do not simply try to offer everything what is within lexical scope of the file. However for TypeScript it seems around the same. Some features JetBrain offer what VSCode doesn't have: \- Superb VCS control. Not only in terms of git, but locally as well. Like shelving changes, local history cache, easy branch control, absolutely superb conflict resolution mechanism. VS code currently isn't even half way there. \- Doesn't spawn rls servers, uses built in native indexing instead. So it takes time to ramp up, but you do not pay such a huge runtime cost later on. \- Safer refactoring, I found that VSCode is pretty poor in dead code elimination. And find usages functionality as far as I've checked is not there yet. \- Recognizes language semantics better, and allows for more fine grained colorization in meaningful way. For example in VS code there is no differentiation an object and it's properties / fields. All in same color. JetBrain provides this and also allows to customize these parameters according to your preference. Making code easier to read. \- I find file and in file text search to always be as fast no matter how big the project is. This seems not to be the case with VSCode, as it tend to slow down rather quickly. &amp;#x200B; However that being said, I'm seeing VSCode becoming progressively better at each iteration. Recent addition of smarter Go to definitions was a huge release. And typescript support is nothing to cough at. I guess I have way bigger problem when people claim that it is as good for other languages like PHP or Go when compared to something like IntelliJ. Which it simply isn't. By far.
Get Key Promoter plugin. That would be the first step.
Unfortunately no, at the moment there is no way to actually pause in the middle and resume from there. It may be possible though, just not super easy, feel free to open an issue
Thanks Sr_Geckko! I actually created that syntax theme myself. Perhaps it's time to open source it?
Yes, that's a good question. But, I guess all features on this are not new and there other tools doing the same. So, I just put lot of effort to make that the same as much nice and usable as possible. But, I am working in new features, more in terms of services, customizations and online services, such as online collaborations, sockets, etc. My first intention was to separate jQuery (v2) to Vanilla (v3) being Pro version, but it would make very hard to keep two completely different versions. And it is very important to keep a good version for the community. So, I decided to unify both versions for now. But, the Pro version will have more and more exclusive features in the future. https://jexcel.net/v3 If you know what I means. Paul Hodel
Which is \*exactly\* the point i made. The comparison is purely how the program is written. Not anything to do with the 'language'. The TS vs Node comparison, is simply multi-threaded vs single thread. Either of which could be written in node or typescript to make either faster or slower. The same applies to all languages, because the program is written completely differently in each 'test' it can not be compared at all.
Learn how to add visual testing to your existing/favorite tools in an unobtrusive way.
I could be wrong, but an example like this one where: function foo (str, a) { eval( str ); console.log(a, b); } &amp;#x200B; var b = 2; &amp;#x200B; foo("var b = 3'", 1); &amp;#x200B; Here it seems that because this code declares a new variable b, it modifies the existing lexical scope. &amp;#x200B; I am not saying that its bad i guess but maybe in the wrong hands it can be?
Damn man, definitely something cool, I am impressed, would definitely keep an eye on this one
Hey, I wrote this article after using Single SPA out of curiosity after seeing a lot of the discussions online around micro-frontends. Overall, I think the implementation here is pretty slick, but I don't really have any personal use for them yet. I have worked in organizations in the past where we essentially did the equivalent of this, though the implementation wasn't nearly as elegant (once we just used an iframe).
Thanks! I really appreciate the support :)
We're talking specifically about authentication here - which is always free BESIDES the phone number authentication. Firebase Auth is not expensive (it's literally free) unless you're only using phone authentication, and even then, you're only paying if you're over 10k/mo
Incredibly simple to use - plugging in their supported auth providers is literally a 15 minute exercise. Additionally, because of the API they expose, it's quite easy to link up other providers that are OAuth based but that Firebase doesn't have an immediate solution for. Additionally - the fact that it's free when Auth0/Cognito are paid is obviously one of the biggest reasons you'd use it over the other ones. I probably have 40+ Firebase apps in my console, and I'd guess I've used all of them except for maybe 2 or 3 purely for the authentication.
Is there no useful way to extract/spread the gif frames? Ive never really gone that deep into them.
https://codesnips.netlify.com/snippets/5d094d178791a50017d8fcff Updated.
I found a library called gif-frames that could work, but it would be a total paradigm shift. Most likely we will keep it on the back burner and see if there’s interest. It would also increase the bundle size significantly
But yeah we’d basically have to extract all the frames, then stitch them together into a sprite sheet. It’s possible but definitely a major change to consider
You crazy bastard!
There's another quirk that I ran into before, not sure if that pattern is deprecated or not though. It is related to `cloneElements` and described in [this issue](https://github.com/facebook/react/issues/8873). It also seems to affect `createRef`, as mentioned in the last comment on that issue.
Definitely a cool challenge. Interested to see what you add. How high can frame counts get for gifs in the 6 second range? Or generally?
Console logging objects happens in an asynchronous manner. The console receives a reference to the object synchronously, but the properties are "lazy-loaded" when you expand the object (*in some browsers, in some conditions). If I have dev tools open and run your code for example, I see what you would expect: https://imgur.com/a/e4kesVS But if I then expand that object, I'll see the real values, and a little "i" that when I hover over will tell me was evaluated just now. https://imgur.com/a/WtU93tv A few quick and dirty ways to log the "current" value and not have the browser re-evaluate it would be: * `console.log({...a})` * `Object.assign({}, obj))` * `JSON.parse(JSON.stringify(obj))` All of these have caveats though, either in some data-types being lost, or only being a shallow copy, so nested items will still be evaluated in real-time.
[removed]
Defaults are only used if the value is undefined
Here's a very quick (in the console) example of what symbols do and don't do: https://imgur.com/a/qNa25Nq Initially they seem pretty confusing but the above example kind of shows how to use them.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/PzdkFeC.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme)
good job, this is stunning! how long did this take to make?
Really? Pretty sure right-click-&gt;show controls gives those options by default, on firefox at least.
Well it’s possible but Chrome certainly doesn’t have that
Yeah it’s a good question, I remember that gif frames can each have a different duration, so we’d also presumably have to parse that somehow and playback accordingly... pretty tricky
Only if they are on the same internet connection. Without a turn server to facilitate cross network traffic you're SOL. Apparently Google has a public turn server but that's only good for development
It could be that the “gifs” you see that on are technically video files, many of the gif platforms these days use videos because they compress better, and videos will have the controls option you described
Anything SSD, 8gb Ram +, i5 Or i7 should be fine
Personally, switched from webstorm to vscode when it came out. Webstorm is just too slow for my companies legacy codebase (files with 20+ kloc).
Ahh yes, I believe you are correct, I think they are webm's.
I poked around for examples of how the pause works/implemented... but I dont see it. It just resets the frame to the start - at least from the examples I saw [here](http://ctrl-freaks.github.io/freezeframe.js/). Did I miss it?
No you are correct, it technically doesn’t pause during playback, but it pauses initially.
This is a great gesture - I would actually hold on this. If he is going to be a full time employee, most companies will issue laptops that are pretty well-spec'd already. If you intend for this to be a non-work laptop, eg for gaming, the requirements may be different compared to what one would use for dev work. Also the nature of the dev work also would impact the kind of specs he would require.
Ahh true. I did see some html5 video element converting strategy is being used by Pintrest. If you havent seen [this](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/replace-animated-gifs-with-video/), perhaps its of use down the road.
Hi /u/yacoine, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
He doesn't really game at all. And I really had no idea that different dev work might require different specs. Thanks for the info!
I think you pretty much listed them all. Frankly, there is very little point to it tho. Since the code runs client-side, it's going to run on the hacker's own computer. What's the point of hacking yourself?
Doing whatever you don't want abused server-side instead and not trusting the client is about the only way to prevent local modification
I have a list here - [https://github.com/dakaraphi/development-resources#development-playgrounds](https://github.com/dakaraphi/development-resources#development-playgrounds)
To first state the mandatory obvious, never rely on client side code to stay unmodified. That said, I've never designed JavaScript with the intent of making it hard to alter. If I were to, I would start with loader code that would download code in small chunks. It would send a session key, a calculated checksum, and number referring to the chunk. Each session key would only be valid for 5-10 seconds depending on your expected client side internet speed. That would help prevent hacker's slowly replaying the requests to assemble the whole script. The checksum would have to be dynamic, so continuously changing for every session and downloaded chunk. One option would be to make a hash of the session key and current time. Then lastly, I'd obfuscate all the code. This isn't perfect. With enough time and dedication, all JavaScript code can be modified but it'd certainly slow them down and force a hacker to write a custom script to change code like this on the fly. I'd also add in a user agent check as well just to make things annoying too.
People switch from webstorm to vscode, why are you doing this?
Who? Why?
Running a TURN is as trivial as running a plain old web server nowadays &gt;\_&gt; [https://github.com/coturn/coturn](https://github.com/coturn/coturn) [https://github.com/pion/webrtc](https://github.com/pion/webrtc)
It's almost as if evolution is guided by pragmatism not idealism.
I'm on a mac using the latest version of Mojave and get a message saying , "Flixerr cannot be opened because of a problem."
Ah, ok. I just remember seeing some stackoverflow responses with different solutions but didn't wanna deal with that amount of complexity.
I tried to commit it but it doesn't show in the repo.
This is a very interesting approach. If I'm following your idea correctly: Chunk client side js. Have a loader module that incrementally requests js chunks from server. With each request it provides a session key, a checksum(session key, current time, prevChunk?), and the number of which chunk it's requesting. The server: Ensures session key expires/is invalid after 5-10s (prevents hacker replay/latency). Ensures the checksum matches matches a valid session key/current time window. And perhaps ensures it matches the previous chunk sent to this session &amp; user agent to ensure 1) low latency/no replay 2) sequence of chunk obtaining? (or am I wrong on this part?)
Yeah no
i would react the same way tho
What do you think about the "content" attribute?
Unfortunately, I have to compile Flixerr on my MacBook from 2010 running High Sierra, which means it doesn't work on the latest OS, for Macs at least. If you want, you can clone the repo and run `npm install` and then `npm start` to run it locally, or build your own by running `npm run package-darwin`! I will fix this when I can afford a better laptop haha
https://www.apple.com/shop/product/FQD32LL/A/Refurbished-133-inch-MacBook-Air-18GHz-dual-core-Intel-Core-i5 You can probably go see/try one of these in a nearby Best Buy or Apple Store. Sometimes Best Buy has sales... but these refurbs from Apple are a fantastic deal if not. (An expert has gone through the whole thing from top to bottom and tested every little component to make sure it's good as new. It gets the same warranty as a brand new one.) I think I'm on my 7th one of these Airs over ~15 years -- imho it's *perfect* for web development (and most things in life, really) unless you have some oddball requirement like running multiple virtual machines or high-performance gaming.
MPAA gonna be knocking on your door any day now... &amp;#x200B; Good stuff tho
&gt;content pretty, i guess...
Kudos! To be honest I always plan to code some simple apps like this, but I always found reasons to don't complete them, i.e: everyone did it, no one will see it, complaining about technologies to use, and more. So always think about ideas but probably won't finish them and just got a base layout. So, congrats! :)
Modifying data to be sent to the server? Some kinds are hard / costy to validate.
Okay, so using eval irresponsibly might cause some weird and difficult to debug errors? I think the benefit of not having to slap a redundant library onto your code like a colostomy bag makes up for having to exercise extra caution, no?
Haha well done analogy. Or simile?. And yes, I agree with you
"the latest version of that object". I think this is where I would try to think that there is only one version of that object. You log that object and nothing else and you see that object live in the log, and if you want to look at some snapshot of what that object looked like in the past then *you* need to handle that. I think it's intuitive once you are aware about it.
Actually if we have to get serious for a moment, separating the syntaxes your page is made up of was never the goal of separation, and never a goal to have in architecture and design. The goal is supposed to be separation of *concerns*. However, because separation of concerns sometimes *coincides* with separation of languages / technologies, most people reduced it to what's easier to understand and process mentally: keep your CSS, HTML and JS separately. Technically, CSS and JS have no reason to be put separately. And part of your HTML belongs with them, the part that's purely presentational (for styling widgets etc.). And then the rest of your HTML, which is the information and semantics, belongs on its own, when a search engine hits it, or so it can be styled differently by different CSS/JS/presentational HTML. That's in theory. But in practice: - Search engines read everything, because just reading the semantic HTML means they become very easy to scam. - You rarely need to style the same content in multiple ways, making the goal of separation a pure case of gold-plating. So... you know. It's more complicated than it seems. But bottom line is, it's not about the syntax, but about the concerns/responsibility/purpose of the code written.
A hacker doesn't usually give two rats what your client-side code actually looks like. They might instead simply use standard tools like the browser's dev console to reverse-engineer your network API and curl to craft HTTP requests. If you want to make things really annoying for wannabe hackers, you'll want to use things like cryptographically strong session tokens and binary protocols (e.g. protobuf). If you're massive and worthy enough to exploit (e.g. a popular online game), you're going to need some seriously state-of-art tech (e.g. behavioral pattern detection, shadowbans, dynamic protocols)
First, per the rules of this sub, you should probably ask this question in r/learnjavascript . That said, you should clarify your problem. What is the data type you are trying to manipulate? Are you swapping two items in an array? Are you trying to reverse the parameter order of a function? Please elaborate. I suspect your post will be removed soon due to rule violation, but feel free to DM me if you want to follow up.
I just tried this out on Chrome 75 and for the first one, Chrome immediately displays: {children: null, parent: null} and you also see the new values when you expand it: {children: null, parent: null} children: "base" parent: "maintenance"
not entirely serious here, but, if you were to go to r/badcode for example, you'll find some programs that are by nature open source, since they're there, and yet still extremely confusing to understand. so one defense tactic could be to just write terribly discombobulating code.
I unfortunately don't generally have the ability to install additional web servers deploying my company's software. Fortunately it is generally run on intranet but I don't know the limitations of webrtc over that type of network
You could look into [ES6 Destructuring](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment) and do something like &amp;#x200B; function swap(num, name) { \[num, name\] = \[name, num\]; }
 let one = 1; let two = 2; [one, two] = [two, one];
Chrome logs the reference to the object, which expands to the current value when you open it. You can log the current value with the following: console.log(JSON.stringify(obj, null, 2)); Alternatively, you can use `console.table(obj)`, but I still rarely use it personally.
When you pass something to a function, the values are passed by value. That means this behavior happens: ``` function addOne(x) { x += 1; } var x = 10; console.log(x); // logs 10 addOne(x); console.log(x); // logs 10 ``` As you can see, changing function argument values only changes the local copy, and not the original variable. If you wish to swap them, you’ll need to pass it by reference by sending it over as an object.
How do you send it over as an object? How would you write the exact code?
Like this: \`\`\` function swap(obj) { var tmp = obj.x; obj.x = obj.y; obj.y = tmp; } var obj = { x: 42, y: "Michael" }; swap(obj); console.log(obj.x); // Logs "Michael" console.log(obj.y); // Logs 42 \`\`\`
Usually anything on the same subnet is going to be fine without TURN. If you're crossing subnets within the same intranet, you may wind up wanting a TURN. For public internet stuff WebRTC has issues with symmetric NAT's and a couple of other configurations so usually people drop in TURN for Quality of Service. Anyway, running a public TURN has a pretty low barrier to entry these days, wouldn't have thought businesses would find this too much of a pressing issue. Even without TURN, you get pretty decent user to user connectivity with just STUN alone (most people are not behind elaborate NAT's, tho i don't have the exact numbers, i assume there are metrics out there tho) &amp;#x200B; Anyway, WebRTC, its a technology, its there now, people can use it today. Never really understood the apprehension around using it, especially with respect to the classes of applications that can be written with it.
One bit of caution here ... several of the techniques mentioned might fall afoul of some existing patents. If this is a commercial project you might care about that. The other bit I will add is that all of these JS based techniques can be bypassed by someone willing to build their own browser. And it's pretty much impossible to detect that with 100% accuracy. So you have to consider how much effort to put into this when it is only effective against casual attackers
I'm writing in JavaScript and the Question given is: Set mynumber to 42. Set my name to your name. Now SWAP mynumber into my name &amp; vice versa. I'm a complete beginner. There has to be a simpler way to write this because I havn't even learned this.
Of all programming projects, every single one has had some kind of purpose, be it a package or just a learning project. This is the first one that hasnt got a single true purpose. It’s a shame.
Wow, looks very nice!
out of curiosity, if your assignment is just to get that done, why are you bothering with a better or best approach of doing it? the code you've attached to this question doesn't work in the first place, so i'm not sure about your intentions. maybe you're just looking to fix the errors in your current approach?
Looking to fix my error and try to understand what I'm doing wrong.
Or minify the code? Some servers do that automatically. Ever try to look at and hack minified code? Its usually a massive pain in the ass.
So, new account to spam about your to-do-list/email-harvester once more, without anything new except for readme touch-ups? I wonder, does this work for you? Do you really get something out of submitting this once a week to the same half a dozen subreddits? Will you once again ignore the comments about SQL injection, about offering a demo account and about the need for both mysql and mongo?
Initially your base code should look like this: &amp;#x200B; `// initialise` `var mynumber = 42;` `var myname = 'Michael';` &amp;#x200B; `// swap` `var temp = mynumber;` `mynumber = myname;` `myname = temp;` &amp;#x200B; This sets the variables, and then swaps them, and this is the most basic way to do it. From here you could take that into wrapping this into a function, but remember that your function is worthless unless it returns something (your function didn't return anything, so the values outside of the function didn't change), or you could do it with the "destructuring" method that other people have suggested, etc. But as a beginner, this is the most basic way to solve your problem.
You probably should do this without a function. Doing it with one using only variables isn’t possible
Ya starting to realize maybe that's why I'm driving myself crazy because using a function isn't working. Just need to figure it out without it.
doesn't minify just change variable names, along with removing whitespaces and stuff? if you take minified code, and run it through a prettifier, you get back very nice code, with only confusing variable names, therefore the algorithm is still very nice, clean, and understandable. which is why i was saying, make the algorithm itself a stupid piece of shit code, so that nobody can understand what you're doing and why (as in from a logic standpoint), and it makes them pull their hair out. assuming they have hair.
You're following correctly. To answer your first why, the checksum needs to verify a certain session key/time session because otherwise the hacker would just reuse the checksums of an old session and you've done a lot of work for nothing. And for your second question, I think this goes back to my first explanation. If you think like a hacker, you're always looking for a way around the rules or ways to bend them. The user agent part is just to put another bump in the road for a hacker. If it were me, after spending the time to deobfuscate the loader client side JS, I would work on building a python script to mimic the client and download all the code. However, if the server just sends back a generic (or even better- a misleading error), then you'd end up wasting more time figuring out what the heck is going wrong. Keep in mind, most security practices aren't supposed to 100% keep a hacker out. We always have to compromise ease of use and security. That said, something like making your JavaScript a pain in the ass to understand, is something that exhausts a hackers resources and time. And hopefully, the hacker will set off a few alarms if you have the appropriate logs set up. It'd be quite trivial to get an email if someone tried to use an old session key several times. It'd be even more trivial to block an IP after too many failed requests. I don't know why you've asked this question, but it's been an interesting thought experiment for me. Best of luck.
Doesn't something simple like Postman or ARC remove this gate entirely? Just check the network requests being sent and you can mess with the params / body json
Since u have mojave, perhaps u can fix this for him.
Hi /u/Only1alive, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/zaiste, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Nomadthick, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/waterloo304, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MichaelPaulfv, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/HomesteadHER, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/EthanPrisonMike, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Is there anywhere you can just read the **java-script** code that does the actual work? &amp;#x200B; This feels like something that could just fit in one small file. But its presented in that annoying way, where its spread out into a meeeeelion files with one line of text in each, and where the majority of the files seem to have nothing at all to do with actual program-code. &amp;#x200B; I would never ever include this in a site, without reading trough the program-code and understanding it first. And i think it would just be faster building the function myself, than trying to make sense out of this truckload of spaghetti.
[https://github.com/tulburg/js-native](https://github.com/tulburg/js-native)
Previous discussion: https://www.reddit.com/r/javascript/comments/87a5ja/wtf_is_this_understanding_the_this_keyword_call/
This is very similar to what react tries to do. You’ll probably end up having a virtual DOM at some point in the project which therefore begs the question, why not use react?
So according to you, why make another because OMG! It’s going to have an engine. Why don’t you just use that one car that already exists! You pick the only similarity and left out everything else. No CSS no HTML. I’m sure am not the only one hoping this would exist.
BTW this is in React!
My experience is that jetbrain ide's are only slow at initializing, probably due to all the indexing and caching. VS code gets slow at runtime. I do have experience with 30k line files. Sadly.
No reason to freak out over his comment. This IS exactly what React does. Communities benefit from large projects like Vue, React, and Angular because there are hundreds of people working on solutions with a common goal. If project are to similar the lose their value really quickly. Why would someone invest time in a model that is being redone when they can take advantage of something tested 1,000,000 times over with advanced tooling and millions of tutorials and guides online? React 100% allows no HTML as you put it. You can 100% use no CSS with about 50 different in JS solutions.... Next time don’t post your library if you can’t take 100% valid criticism.
Wow! How long did it took you to make?
Depends on other constraints, but if you can have `display:flex` on your container, then you can reorder elements at will using CSS `order`. There's also the old table-header/footer CSS.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
Using isMobile prop is fine if it has to have a completely different UI, but I would recommend to avoid extra complexity if possible. If it’s just the order or the placement of elements that is different, consider using CSS Grid with ‘grid-template-areas’.
Thank you for your feedback. We will definitely take this into account. We also have a roadmap with plans to grow this open source project: Features ⁃ Control image brightness, contrast, exposure, and saturation ⁃ Bright theme, plus possibility to make your custom theme ⁃ Rounds the corners of images ⁃ Mirror images effect ⁃ New filters and effects ⁃ Load file objects and dataURLs ⁃ Transform input images to other image formats ⁃ Easily integrate with third party libraries ⁃ Compress JPEG images (Optipress) ⁃ Set to preview mode to render on top of an existing image Adapters ⁃ Vanilla JS (done) ⁃ React (done) ⁃ Angular ⁃ Vue ⁃ Web Component
Instead of using `isMobile` as a run time check, may be you can generate different bundle for mobile and desktop. The benefit of having such approach would let you keep different bundle only relevant to the platform they target, including some crazy stuffs that go beyond just showing different view (e.g. adjusting for high latency, slow bandwidth network for mobiles while on the other hand, desktop application doesn't need to have logic for touch)
Your isMobile solution is more adaptive design rather than responsive. In my experience it is ultimately less flexible than true responsive. What you want to do seems like a job for media queries and flex ordering. You can also show or hide elements using media queries so there is a lot of power to adjust your UI based on layout
What you're saying makes total sense. If there's a sum with a string involved, concatenation is going to happen. If you want to make sure you're not dealing with strings, convert the data that's not under your control in one of these ways: * `Number(data)` * `+data` * `data * 1` If my memory is not betraying me, these are listed from slowest to fastest, performance wise.
`parseInt` or `parseFloat` should convert a string to a number. Though you should take a look at why you're getting a string in the first place. If a field from the API is guaranteed to be a numerical value, but is received as a string, you should cast it to a number when you receive it. let {adults, children} = await fetch('/search'); availabilitySearch.adults = parseInt(adults); availabilitySearch.children = parseInt(children); this.calcedChargeAmount = this.pb.chargeAmount * (availabilitySearch.adults + availabilitySearch.children)
All that typing but you could have googled "javascript convert to number". :( parseInt()
"advanced" Went through 8 and didn't miss a single one
After Googling and applying parseInt() as the data came in I was still seeing the issue intermittently hence the question about forcing the int during the calculation. All that typing and you could have just passed on this one.
Thank you, I am now amending my code to use the Number(data) method.
Thank you, I did try throwing the odd parseInt() in but it was still happening. The data is written into an observable data store and gets passed around a fair bit over the customer journey so I think I might have been struggling to keep it as an int after the API call. Probably built it on a lazy day :)
tyler, you beautiful beautiful man!
Still more useful than another js framework.
Daniel Shiffman (aka Coding Train) has some good tutorials for p5js and OOP. https://www.youtube.com/user/shiffman His newest tutorial, Chrome dinosaur game, would be a good place to start. You can probably just stop when he starts doing the machine learning/voice recognition stuff. https://youtu.be/l0HoJHc-63Q
Your framework is basically an opinionated react but instead of saying that, I asked why you chose not to use react. Hoping you would have either; a) considered why react was not appropriate for your use case an could respond with why or b) a question in return suggesting your use case could fit a react app. And could therefore benefit from an extremely large community of developers like myself who are eager to help those who ask. Instead you chose to delete the post and attempt to discredit what was a polite and potentially insightful thread. If you’re a member of a community in any form it’s important to remember that although you share a common interest, not everyone will agree with you. More importantly disagreement leads to education, if you wish to succeed as an engineer you’ll need to learn how to work with others and more importantly engage in critical discussions regarding your work.
Sorry i deleted the post. It was just wans't what i was expecting to be the first thing people will point out. I guess i was over excited about the approach. Simply speaking, I started this with the idea of leaving CSS and HTML completely behind. No matter how much you try with frameworks these days, including VueJS (my fav), Angular and React. you cannot avoid CSS and HTML completely. But sincerely speaking, after starting this, it turns to something more that just simply saying No CSS, no HTML. You can layout anyhow you want with ease, like not being limited by what html and css will allow, i ended up to a new approach to everything in web development. The criticism shouldn't stop what i've been doing, i enjoy. Thanks for the feedback!
The concept is interesting but whenever i think about things like this i tend to look from perspective would I spend 30 mins of my day on this,so my suggestion would be to make it a bit more competitive with points rewards and stuff in format where people can take a test and see how well did they do,and as for the test itself you could make it so that if person passes the initial test or have enough points he/she could make a test and so on. Sorry if my answer is a bit confusing :)
Are you calling yourself a noob?
And Clean Code for JS developers... [https://github.com/ryanmcdermott/clean-code-javascript](https://github.com/ryanmcdermott/clean-code-javascript)
A web dev proxy such as Fiddler would defeat the chunked approach quite easily. I think even Chrome dev tools will show dynamically loaded scripts
Went thru about 15. I love it. Some questions are really tricky!
There are 5 files under the sources directory that are the actual implementation. The rest of everything is generic packaging boilerplate anyone familiar with modern dev knows about and appreciates.
I thought about competitive stuff) The problem here is that this requires some people who will organize all this, a lot of preparation and time spent to maintain. So, usually, such a thing will never go to live :) So, I guess the competitive part should be added after there were already some active community and at first as some old school version such simple doc with score table in google docs or github
Very nice questions but I hope that companies will not use them during their interview process.
Back when web components was getting started someone made a web component for that. I can’t find it anymore but here might be it’s succesor https://www.webcomponents.org/element/captaincodeman/gif-player
Sadly almost all this questions just remind you how flawed this language really is, allowing any developer to screw up or make code hard to read.
`this` inside an arrow function is lexically scoped. [Here's the docs on MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)
Arrow functions do not refund the this keyword. Regular functions rebind thr this keywird to their own scope. An arrow function inside of an object or class will refer to the object or class. Its really powerful stuff.
Thanks a lot for this practice question from JS! Some of these are really tricky, but its good to have it in one place. Wait for next releases.
I've read Eloquent JavaScript, what's the second book in the picture?
Great questions, some of them were quite easy but others completely baffled me (like the template strings one). Definitely some interesting brain teasers. &amp;#x200B; Cringed myself inside-out at her linked instagram page though.
Learned two things: * Nice Javascript usages * Github supports content folding
Hi, thank you for the comment. They are interactions/components that are not natively supported by the framework/library you use, so you need to program them from scratch using graphics and events. Hope this helps. P.S. It is supposed to be vague, I want to see how developers interpret them.
Cool project, congratulations on getting something out there. Small piece of feedback I found whilst browsing the code. let getProxy = () =&gt; { let proxyList = new ProxyList(); return new Promise((resolve, reject) =&gt; { proxyList .listProxies() .then((proxies) =&gt; { if (proxies) { let proxy = proxies[Math.floor(Math.random() * proxies.length)]; resolve(proxy); } else { reject("Error: No proxies found."); } }); }); }; Since `proxyList.listProxies` already returns a promise, you don't need to wrap it in another promise constructor. If you return the `proxy` from within the `then` callback it will be wrapped into a promise automatically. Something along these lines: let getProxy = () =&gt; { let proxyList = new ProxyList(); return proxyList .listProxies() .then((proxies) =&gt; { if (proxies) { let proxy = proxies[Math.floor(Math.random() * proxies.length)]; return proxy; } else { reject("Error: No proxies found."); } }); }; If you already knew this and prefer your current approach, fair enough. Alternatively look into async/await which I believe is supported natively by the version of Chrome that electron includes to improve the readability even more. Some additional resources on the above: * Promise chaining https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#Chaining * Async/await https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function
You can see this demonstrated on numerous sites across the internet. Google, Facebook, Amazon, etc. Here's a really simple one to try out for yourself: 1). Go to https://npmjs.com. 2). If you are logged in to npm, logout now. 3). Reload. 4). Click the JOIN button at the top, or just go to https://www.npmjs.com/signup 5). Position your focus in the first field, Full Name. 6). Type anything. 7). Press ENTER. 8). Observe that focus has advanced to the next field.
It is most definitely not a truckload of spaghetti. I’m an experienced software engineer, and I know spaghetti when I see it. https://github.com/ctrl-freaks/freezeframe.js/blob/master/packages/freezeframe/src/index.js Did you seriously just say that splitting up your code into multiple modules is a bad thing?
You’re so right! I can’t believe I didn’t notice this before. Thank you for taking the time to look at my code and give me feedback, I will update asap! :)
I’ve been working on and off on it since like April haha
hahaha i doubt it, but if anything i can take it down. that would really suck tho
Hah, 21 yrs old tho, I’m sure one day she will too.
This is cool and might be useful for a jukebox project I'm working on - thanks much!
Thank you! There was some issue with detaching the events, and I found it only when you mentioned it. I'm working on it.
Also, you don't need to wrap the [getProxies code](https://github.com/carlelieser/Flixerr/blob/master/assets/js/proxy-list.js#L6) in a promise, as it is synchronous.
It’s a book called “Macbook”.
&gt;Cringed myself inside-out at her linked instagram page though What's wrong with it?
You seem to be missing, lets see... a little over 5% of users? (IE) https://en.wikipedia.org/wiki/Usage_share_of_web_browsers#StatCounter_(July_2008_to_May_2019)
Hard to explain. But a couple hundred of almost identical posed selfies in front of Sublime Text, each one with an essay attached to it and then a load of comments from thirsty bois all saying about how hot she is. It just feels a bit... uncomfortable &amp;#x200B; At the same time, she can do whatever tf she likes, so take what I'm saying with a pinch of salt. But my instant reaction was cringe
also there are instagram models/ coders.
Me: “I’ve written js for fifteen years, this can’t be hard.” Also me: “I know nothing.” I think I got a dozen of them wrong because I’m used to working in strict mode by default.
This is pretty common these days. Coding is fashionable. See also pretty much any Instagram account featured by @cutetechgirls. (But also note that they're happy to be featured that way.)
Yeah I'm a bit conflicted. Like, should your looks matter when it should be about your work? But then again, why _can't_ it be a thing, like saying you can't be appreciated for both? /shrug But then why is there no @cutetechboys?
The descriptions look like what people posted to twitter five years ago, or short form personal blogs a decade ago, sans pictures. I thought it was a little weird at first, but honestly, it would be fine if she just switched from sublime to vim.
Yea, and with extended support of Windows 8 for a few more years, there is still going to be a large number of sites and apps that will need to support it.
I'm still using Babel in 2019. Allows me to support staged esnext features and combined with the browserslist project I can cherry pick the browsers I need to support. Besides IE there's also Edge we need to worry about as well as older versions of Firefox and Chrome. I would love to support evergreen browsers only and eliminate the whole Babel build process but I don't think we're there just yet. It very much depends on the project. If you're building a state-of-the-art web game you can demand more from your users. If you're building an enterprise app, most of the time you're gonna be in tough luck.
Looking again I think it's actually VS Code, which is worse than ST
I know a few people who use it and like it; vimtrolling aside, I'd probably suggest it to people who wanted to learn javascript. I don't know much about the landscape of editors outside of vim, though.
I know VSC has a lot of features but I prefer the performance and memory usage of sublime
That said, this is what Chromium Edge is all about - having a modern, Microsoft-controlled browser with support as far back as Windows 7
Edge doesn't support ActiveX, Silverlight or Java. Odds are, it's not going to have any significant impact in enterprise deployments. If you're targeting big businesses (or people who work at one) then you still need to support IE :/
At what percentage of affected/afflicted users are people going to stop supporting this ancient nonsense? 4%, 3%, 2%... 1%... Forever? Global support = **95.25%** [https://caniuse.com/#search=ECMAScript%202015](https://caniuse.com/#search=ECMAScript%202015)
Wrong
Unfortunately yeah. I've only worked with burp so I'm not sure of the differences between that and fiddler, but that's hopefully where the obfuscation and session expiration would make things a little more difficult. Although, if the match and replace functionality is utilized, it becomes pretty trivial to modify it. As I prefaced all of what I wrote earlier, trying to protect JavaScript from modification is pointless, but in terms of making it difficult, this is about all I can think of without researching further. I looked into if Chrome Dev Tools will show dynamically loaded web scripts. From what I read, it will as long as you add a comment in the JavaScript. So I suppose after deobfuscating, if you added in the sourceUrl comments, you could look at all the scripts as they were loaded.
Already changed for the next update! Thanks, I would’ve never noticed. I was really into Promises haha
Speaking of online games, check out Manfred.
Why would I drop support for 5% of my users when tools like Babel and Autoprefixer make supporting IE a non-issue?
I'm not sure what people mean by "slow". Yes it takes time for webstorm to open a new file with a lot of code. Past first load however it's about the same as navigating a file with 200 lines. VS code pays that price at runtime though out development.
Wow, that's fucking bizarre. It would literally never occur to me to hit Enter there, but I guess it also doesn't hurt. Thanks for the example.
New article exploring the cost of using Components in different libraries in the [JS Frameworks Benchmark](https://github.com/krausest/js-framework-benchmark). Did I miss something? Having trouble with the link(it should not be behind the paywall)? Let me know. I'm passionate about exploring JS DOM rendering performance.
I don't think it's mentioned anywhere in the article but Ryan is also the dev behind Solid which is why he can go very in depth about it. His other project [mobx-jsx](https://github.com/ryansolid/mobx-jsx) is super interesting. The premise is that if you already have MobX keeping track of what has changed in the state, you don't need the overhead of a virtual DOM. Same idea is applied to Solid. I tried both recently and quite frankly both Solid and mobx-jsx are a breath of fresh air. Super fast, lightweight, no mental abstractions. I'm surprised these projects aren't more well known in the JS community.
maybe in terms of JS features, but you still have to dedicate time to testing CSS as well as minor differences in DOM behavior. the fact of the matter is, most IE users in 2019 can in fact use another browser if given proper notice that IE is no longer fully supported.
Haha great job coming of with these problems! Very amusing to go through them all. Even though I've written more than a million lines of javascript, typescript, etc throughout my career and personal projects some of these question had me stumped or guessing wrong :D JS definitely has some *weird* quirks but I can't say that any of these patterns are something your should take advantage of in *real* code. My philosophy is always "no surprises". No shade intended I think it's an awesome showcase of JS being JS :)
does Solid (or sinous) have an SSR story?
The Edge Team stated during their recent AMA that IE11 will still be supported, standalone, on all OSes that haven't been EOL'd yet. Win8, 8, 8.1, 10.
This video is a bit old but has a nice collection of tips: https://www.youtube.com/watch?v=P3yGl4Kfwhs The Key Promoter plugin (https://plugins.jetbrains.com/plugin/9792-key-promoter-x) is great if you want to use WebStorm shortcuts, but you can always use the VS Code-style keymap: https://plugins.jetbrains.com/plugin/12062-vs-code-keymap