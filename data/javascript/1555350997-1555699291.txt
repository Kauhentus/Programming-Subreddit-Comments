It’s amazing the contraptions JavaScript developers will learn to use in order to avoid learning another language.
isn't wasm still slower then vanilla JS? what's the point?
Looks pretty good, but since the library uses Proxy, it would be good to include a warning about browser support in the README or docs. Since Proxy can't be polyfilled, it's a deal breaker for many projects.
Thank you for your quick response. In this case, this is a dynamic ad and we have no idea what elements and and where they are positioned on the publisher's page. This is just to make sure if our ad is rendered incorrectly, that we are able to record it.
lol I need to find the comment I made about how TypeScript ideal because it would let you transpile to any version of JS but also would likely be a pathway to assembly. I got downvoted to hell and multiple responses said typescript would never be compiled to assembly.
You should, it makes testing easier
still you could reasonable setup you tsconfig to restrict to those limitation then fix those issues.
I’m guessing the DOM elements are being injected after the page loads? You’ll have to watch for nodes being added and then track their position at a regular interval. As well as any other elements you think may be an issue.
Okay! Thanks for the correct channels to get help!
yes, it is. Right now I don't see this as a particularly good idea but down the road, it will definitely be valuable. I commented on another post about Blazor which also got downvoted to hell making the same point. Blazor isn't useful because its faster than current JS parsing its useful because it allows me to convenient convert an old web forms or mvc app to a fully working SPA with ease.
True, I didn't express that too well.
How convenient that your logical domain aligns with relational normal forms. I've rarely found that to be the case.
Solving that by trying to replicate a relational form in application code sounds like a particularly bad idea, but you do you.
There are proxy polyfills.
[removed]
Hi /u/michal-szorad, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
something like this? \`\`\` const scripts = document.getElementsByTagName('script'); const parent = scripts\[scripts.length -1\].parentElement; // appendChild element to parent \`\`\`
Do typescript programmers actually code applications / websites, or just look for ways to add overhead to a project? I've never found any of the things TS offers as necessary or even helpful for development, as long as you keep a clean well documented codebase.
Usually AssemblyScript / WebAssembly faster than JS. See this examples: [https://github.com/AssemblyScript/assemblyscript/wiki/Built-with-AssemblyScript#benchmarks](https://github.com/AssemblyScript/assemblyscript/wiki/Built-with-AssemblyScript#benchmarks) But it depend on wasm vm / browser and application. For example manipulation with DOM not quite fast due to interop overheat. But this will change in the future when "anyref" and "WebIDL-binding" proposals landed.
I was once told that learning TypeScript was pretty much essential. I'm so glad I ignored that advice so I could focus on actual development instead.
I released a new DBus library for Node which can be used for Linux Desktop integration. https://github.com/acrisci/node-dbus-next
If you give the script tag an id attribute, you can refer to it directly and add stuff around it like anything else in the dom.
Clean and a well-documented code is definitely the core, but typescript helped me a lot when I had to refactor my code. There is also no need to test the type/structure of your variables, if you write tests for your app and use typescript. I feel like the app is more stable when I use typescript and not just plain javascript. There are many more benefits of using statically typed languages.
I am building a large SaaS using Typescript. Used to use Javascript. I'll never go back.
&gt; I've never found any of the things TS offers as necessary or even helpful for development, as long as you keep a clean well documented codebase. Compile time errors are always preferable to run time errors.
Funny, I see "keeping a clean well documented codebase" as overhead that a computer can handle better. I would flat out refuse to work on plain JS and having questions like "what kind of input does this function expect?" answered in prose.
Right, I meant to imply that JavaScript is exceptionally powerful for creating functioning UI with minimal code, without using a library. It’s not just that it’s imperative, it’s the powerful API of the browser that lets you add interactive elements without having to set up much of a logical structure to your code. It feels magical right from the start, and you don’t need to know about binary operations, type systems, etc. It’s just so powerful with minimal effort. IMO it’s too powerful sometimes, because it encourages people to write hacky solutions that work in the short term, without thinking about the logical structure of their code. That becomes a mess very quickly.
My company has adopted a micro-fe approach. So far it's going very well. There are plenty of polyfills for the web component spec. We're a react shop all around but the advantage of web components is it allows each micro Fe to be completely independent and have it's own release cycle. We still use a shared react ui components library for basic stuff. The web components wrap around react components. We've got a template of a wrapper component that can be easily applied to a top level react component, binding the web component API to the react API. The only downside that we have seen is is code duplication. This is primarily with libraries, meaning each micro-fe has its own copy of react, for example. We're working on implementing better tree shaking and exploring other options for this going forward.
I'm the fullstack dev/data analyst/data engineer/dev ops guy at my job. Basically anything I get asked. I wonder if it's the fact I have to be a jack of all trades that makes me find the idea of TS not appealing.
Awesome!
Thanks, good idea!
And it never will be. TypeScript without `any` is just a different language with a syntax similar to TypeScript.
Yeah dude you’re definitely way too smart for typescript
&gt;I've never found any of the things TS offers as necessary or even helpful for development, as long as you keep a clean well documented codebase. I felt this way for a long time until I took a staff-level position and was in charge of maintaining a codebase. What I realized was that you can painstakingly write out jsdoc annotations to get hinting in a decent ide... But this requires constant vigilance because functions and params inevitably change, devs omit or forget or incorrectly use features etc... Furthur not all jsdoc or esdoc annotations are pretty or manage to capture some of the more expressive javascript capabilities. That to me is a more painful overhead than introducing typescript. Thats not to say I'm am evangelist, or ran out and rewrote entire codebases in TS. I just saw the value. Imho it's most valuable to bigger teams, in ongoing projects.
Reasons why AS not supported \`any\` are two - this make huge performance penalty for AOT compilation and execution and this bad practice for TS anyway
Are you trolling? When I change a function signature I can get notified immediately all the places I need to update in a huge codebase. Don't you find power in that?
I'm not saying it should support it. I'm saying it's not TS, for this reason and about twenty others.
Looks pretty good. Any plans to add y-axis support?
As someone who loves typescript and typed languages, that is a profoundly wrong statement. Something that runs badly is very often more desirable than something that doesn't run at all.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
I added, thanks.
eh, there is no programming language I'm aware of that will prevent you writing and shipping horrible code. But after a code base grows to a sufficient size, a programming language that catches errors at compile time will undoubtedly be more helpful and productive than a programming language that doesn't. This is especially true for any programming language where similar syntax can be used on different types. eg, arrays and strings in javascript. Getting a value from an array is the same thing as getting a character from a string, and if your array is a list of strings, you often can't know a mistake was made until you run your software and see the results.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
I think this sub is pretty overzealous about it's love of Typescript, and honestly, even as a typescript fan it can be very annoying when people spread misinformation. There are some minor self-documentation benefits of static typing over duck typing, which shouldn't be overstated, the difference in refactoring and code completion is pretty negligible with a fully featured IDE like WebStorm. The real value of Static Typing in my mind is having the power not to allow illegal states to happen in your code. Whether that is important to you is something that any decent engineer should be able to determine on their own.
Why would I learn a new language
True. I never realized just how many of my functions redundantly check their own argument types at runtime, while many of those handled cases are never reached at all. TypeScript isn’t perfect (e.g. currying can be difficult with TS in some cases) but it’s pretty dang useful, and actually helps me remove a lot of (essentially dead) code.
&gt;But after a code base grows to a sufficient size, a programming language that catches errors at compile time will undoubtedly be more helpful and productive than a programming language that doesn't. In my experience this is only really true with more monolithic codebases, or maybe to put it another way, only monolithic code bases get so large that this actually becomes relevant.
typescript can be decent like having self documenting method signatures and basic typing. I hope its basic featuers will come to js core at some point
Looks like the TypeScript fanboys have been doing their downvote rounds. We get it, you enjoy all the benefits of a strongly-typed language. You're still not going to convert JS devs. Just go use a strongly-typed language in the first place.
Modularity and contracts were made for each other.
Interesting article; I never thought of using a "parser" for type checking; it makes complete sense though! However, I don't think you really need the createTypeGaurd function. TypeScript is smart enough to narrow types when you do value checking. For example: const p = parsePerson(...) if (p != null) { // TypeScript now sees "p" as a "Person" instead of "Person | null" }
One change I would make is to have `hasOwnProperties` take an array rather than a rest parameter. IIRC this should allow something like v8 to have a single optimized function rather than having to optimize the variable length signature. I benchmarked variable length functions quite sometime ago so it may have changed.
It’s pretty easy to just switch the type to “any” and tell the compiler to calm down. Boom, done, let’s ship it. But those checks are there for a reason. For some errors, the error might be unreachable 98% of the time, and you might not ever find it with unit testing, and then you’re having to rely on remote error reporting from from the client to get any info on it. And now it’s a multi-hour/day process to reproduce it, let alone fix it. The compiler won’t catch all of those problems, but it will catch a lot of type-related ones if you let it. Might as well pay attention and fix bugs before they become a massive time-suck down the road. You will always have deadlines. Eventually, you will have to play catch-up and fix bugs, and you will have to do it with yet another deadline over your head.
This sure works, but I wanted to use it this way `if (isPerson(data)) { /\* data is person \*/ }`, so I do not have to deal with nulls. Thanks for sharing your thoughts!
just manage the memory like cpp
Thanks! I will keep this in my mind.
TypeScript strives to follow the JS spec and proposals. Modern JS has pretty much all of the features of TS... Except of course, types*. This is intentional: TypeScript is JavaScript with types. If JavaScript adopted TypeScript's type system, it would become TypeScript*. Also, TypeScript's type system is far, far, more powerful than "basic typing". *: TS has a few additional OO features that we likely won't see in JS such as accessibility modifiers or abstract classes. In the grand scheme of things though, this is besides the point.
&gt;Problem is, I don't actually get that alert prompt. Nothing I return gets executed as JS. this is a good thing! it's is a security concern. you should be very very careful about executing code you get over the web. you don't know what it will do, and it could be maliciously inserted by an attacker. the proper way to handle this is to get a value from your API, then manipulate those values. in this case you'd want to send over `123` and have your local code alert that. that carries its own security risks. i recommend you read up on [cross site scripting (xss)](https://excess-xss.com/) and [eval()](https://security.stackexchange.com/questions/94017/what-are-the-security-issues-with-eval-in-javascript)
Learn JavaScript. ES6 refers to a specific update to the JavaScript language. Once you feel competent with JavaScripts pick up a framework. See what is used the most for jobs in your area and pick that. The learning is never ending so you just have to be comfortable diving in and discerning between what’s good information and what isn’t. Alternatively, jump straight into a framework. You will pickup JavaScript along the way. This will probably leave more gaps in your knowledge but will have you up and running quicker.
&gt;It’s pretty easy to just switch the type to “any” and tell the compiler to calm down. That is a dramatic oversimplification of the types of problems that arise in a statically typed codebase. &gt;Might as well pay attention and fix bugs before they become a massive time-suck down the road. Sometimes that's true, and sometimes you get all the way to IPO with server's restarting every 30 minutes.
All perfectly valid points, lol...
Think about data representation. Numbers in javascript will always take up a lot of memory, I don't know the exact number now but it think it's int32 or int64. Sometimes a function that gets called 1000 times only needs a short unsigned int or something like that. &amp;#x200B; This is why I'm saying we get mad run speeds compared to JS.
So you have a function with an array. You know you need a for loop and some ifs. Build out that thought. What do you need to `for` through? How would you do that? What would you do at each step. Alternatively, just take one score and figure out how you work out the grade. Then consider how you’d apply that to your whole array of scores. When you get something, post some code and we’ll give you feedback.
You want to use a for loop to iterate over the array. Then compare each value in the array and assign it to a new array for each grade. You could either assign each value to a grade array or just increase a counter for each grade.
I didn't visit the link, I just responded to the clickbaity title.
TS developers _are_ JS developers. TS is JS with types. We can't "go use a strongly typed language in the first place" because there is only one language that runs on web browsers: JavaScript. People need to stop thinking of TS as some competitor to JS with drastic difference, such as, say, CoffeeScript or Elm. If one day TypeScript dies and becomes unsupported, we can easily, and automatically, convert our code back to JavaScript by stripping out type annotations. I've yet to see any good argument to not use TypeScript since Babel started to support it. If you're using Babel, you get TS for free now.
Yeh screw this stupid website! Lol
Yeh screw this stupid website! Lol
Here what I have so far just trying to get it to work with the F grades &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;score&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;button onClick = "testScores()"&gt; Click here&lt;/button&gt; &lt;script&gt; function testScores() { var score = [60, 70, 99, 82, 77, 100, 75, 88, 100, 75] for( var i = 0; i &lt; score.length; i++ ) { if (score[i] &lt;= 60) { var f++; } } } var fGrades = ("There are " + f " F grades"); alert(fGrades); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;
[https://github.com/le0pard/storybook-addon-root-attribute/blob/master/package.json#L23](https://github.com/le0pard/storybook-addon-root-attribute/blob/master/package.json#L23)
LOL I was kind of hoping for a Tetris-y game but the course sounds pretty comprehensive.
This is a javascript sub.
Do you not know what TypeScript is, or...?
or.
Thanks for the reply, how deep with vainlla js should I go? Does it makes sense to learn some async things or it is way to complicated and it is tpbetter to use for it react?
We do, then make it compile to JS.
I know over 10 different languages but typescript is my favourite =)
I would definitely learn async javascript , promises and master callbacks and javascript in depth while I am picking up a framework like react . I don't think there is something that stops you from learning both because it's all javascript after all.
God no, give me "explicitly refusing to start" over "silently pretending to work" anyday.
uh? Give me 'not pissing off my customers because our site is down or we can't ship an important update' on maybe some days iono? I don't know how to respond to that.
JS supports typed arrays for bytes, shorts, longs, etc. Anyway I don't think passing a single 16-bit value to a function saves anything over sending a 32 or 64-bit value.
Thanks for the project. But it is almost impossible to read the tutorial link provided in the readme. The code blocks have the thinnest font and is very light against the background.
How is fastify better than express or koa?
But the other options to compile to WASM are C, C++ and Rust. IMO: * C is gross, basically the native equivalent writing plain JS circa 1999. I have not desire to deal with the weird kinds of memory or threading bugs I'd encounter at some point. I look at it like plain old JS: use it for 100 lines or so, but go with Typescript/C++ for anything larger. * C++ is complicated. I don't *mind* C++ as a language overall but still can have the same scary kinds of bugs as C, only now they're more complicated. * Rust. I played around with the language for a couple of days a while back. It seems like a nice language but I also got the feeling it could take months or years to feel confident or productive with and I'm unconvinced I'd find it as practical as a TypeScript subset.
Do you know what a parallel array is? You need to create those putting in the data. Then you need let the user pick an item and quantity. Then you need to do the math and put it on the page. Some things you should look at are form elements that allow you to pick from a list. Form elements that allow you to enter a number. And then how to write something to the page using Javascript. That should help you enough to do some research on the internet to write the code.
Hi /u/PapaDelights, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Instead of using multiple If statements write a Switch statement. Don't forget that break; stops a switch from doing the next value's execution area. One key is you need to think about where to create your variables for the counts. If you do it inside of the for loop then it will be recreated EACH time the for loop runs one iteration.
I'm a small jack of all trades too and a large fan of typescript. What now?
Learn vanilla javascript. I would recommend one of the Udemy courses that can be bought for under $15 most of the time. After you finish that course and fully understand vanilla javascript then take a look at the Udemy React Course. I would recommend this one by [Maximilian Schwarzmüller](https://www.udemy.com/react-the-complete-guide-incl-redux/#instructor-2).
I wonder when the VS code team will start with actual development then! 😉
Shipping broken code improves site reliability? TIL.
with all these downvotes.. suicide obviously
Having a site that has to restart ever 30 minutes, is better than a site that was never up in the first place. Didn't think anyone here would need to be taught that, yet here you are.
I looked everywhere for parallel and found a few things but isn't there a simpler way this assignment? Code wise?
It would be even better if the TypeScript compiler could generate the type guards for interfaces (when indicated by a decorator maybe?) Maybe some day...
This is exactly how you get type safe IO in Haskell, Standard ML, etc. You get a stream of input from the network or user input and you validate it returning null or the struct filled out in full. [Here is an example in Standard ML](https://gist.github.com/eatonphil/ba660a7594dec2fb601a1cb1ac0208eb). We don't see this in JavaScript/Ruby/Python as much because 1) it's easy too just cast in the statically typed case and 2) everything is just an object/map already anyway.
put this on r/learnjavascript instead. Create a multidimensional array, that's all you gotta do.
of course. it is in the plans.
 let supplies = [ ['notebook',5.95], ['pen',4.95], ['mechanical pencil', 2.95] ]; console.log(supplies[2][1]);
 const names = ['notebook', 'pen', 'mechanical pencil']; const prices = [5.95, 4.95, 2.95]; const arbitraryIndex = 1; const arbitraryItem = { name: names[arbitraryIndex], price: prices[arbitraryIndex] }; // arbitraryItem: { name: 'pen', price: 4.95 } this is the basis of your data. with arrays of names and prices, you can construct an interface that lists all the items and their prices and lets the user select that item. you're going to need a data structure to hold the user's current choices. you'll need a function to display all the possible items and their prices. you'll need a function to calculate the total based on the user's current choices. you'll need a way let the user indicate they want to add an item to the total. you'll need a way to link up that choice to the function to calculate the total.
I think this is written ambiguously to get you to think for yourself on this matter. You can not always consult the outside world for help. Parallel simply means non intersecting. Doesn't really apply to much here. What is important is that you need two arrays. Each one should be related to the other in some way so referencing one item will also have the information to find its price in the other array. Once you've made two arrays and can get an item and it's price, they want you to make multiply that price by a user provided quantity value. If you were given supporting materials an approach may be clearer but right now there's a lot of logical ways to approach this problem. Provide some sample of your work if you want more specific help.
&gt; Give me 'not pissing off my customers because our site is down or we can't ship an important update' on maybe some days? iono? You do know you can just override typings? Or ignore typescript errors? Well, no, you probably don't.
There is a library that does all this for us! [https://github.com/true-myth/true-myth](https://github.com/true-myth/true-myth) :D
I took the time to learn Rust, and I definitely don't regret it. It sometimes feels like a teacher with a yardstick, hitting your finger every time you make a memory management mistake. However, the end result is quite good. I rarely have runtime errors, most of the bugs are weeded out during the initial programming.
I don't think we have the same definition of minimal. This would probably be a perfectly functioning React + Redux boilerplate even if half the packages were removed. eslint, prettier and jest in particular are tools that are not necessary but might be useful for a more experienced developer. If you're aiming to have a minimal template, then all that is just bloat.
we are planning to add feature which takes a video (even from you mobile phone) and creates asset of images of the product
I've been using [typescript-is](https://www.npmjs.com/package/typescript-is) to generate type guards at compile-time using interfaces.
I guess you're not really talking about dependency injection itself (because we definitely do that), but more about automating it by using a container and a composition root. In that case, the reason is I think because it's hard to find a nice way to do it. Vanilla JS doesn't have interfaces or way to easily specify the types that go into a constructor. There have been attempts at DI containers in vanilla JS though, with some workarounds for detection. Unfortunately they're a bit invasive (usually they force you to name your parameters in a certain way, or some other kind of constraint on your arguments.) I've been playing with Awilix recently, but I'm not yet sure that the benefits outweigh the costs (still digging)
Pretty much all the JS devs at my work have converted. The benefits are clear. You couldn't be bothered to learn TS, so why bother commenting?
&gt;Our instructor didn't give anything for us to. Heck she realized that our textbook for the class was bad. None of the code works so we get our assignments from her.
Although it's great you agree I think you miss the point. Learning the underlining technology will help you understand what problems the current "hot" tooling is trying to solve.
If you find a solution: Sell it to advertisment companies like google, they will pay good money for it
I'd love to see interface in vanilla js
Signatures and names should be the bulk of your documentation. I've grown to despite doc comments. They are often wrong and add noise to the code. More directly to your point, I find that after you are breaking 50-100k LOC and with more than a couple of developers, particularly newer developers in a rapid development cycle, real type information is a godsend. I love javascript, but I love typescript more for larger applications and larger teams.
Fastify is around 20% faster than Express in almost every request. See here for a performance analysis comparison: [https://medium.com/@onufrienkos/express-vs-fastify-performance-4dd5d73e08e2](https://medium.com/@onufrienkos/express-vs-fastify-performance-4dd5d73e08e2)
Whats the point Why not just have each item be an object with name, price, quantity? When you click it adds the item to an array of selected items. If it's already in the array it increments the quantity Array.reduce for total
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators &gt;The numbers -2147483648 and 2147483647 are the minimum and the maximum integers representable through a 32bit signed number. Not sure if that helps.
Some techniques are exist (Fonts/Canvas fingerprinting, gathering IPs through WebRTC, etc), but users can disable them with addons. And privacy concern will rises up.
&gt; My thought was that I can go to each person and make them input their First Name + Last Initial when I tell them about it and that gets saved to a database so no one can take the same name. Using names as a unique identifier is a stupid idea anyway. &gt; I'm just wondering if there is some kind of unique identifier for devices, like some sort of mac address (I know mac address isn't possible) that would make sure a device can't create multiple entries. No. Which is why on the internet 2FA is a thing, and why it's *user* auth, not *device* auth.
So easy... not sure why you'd have problems with this.
create a uuid and save it either to local storage or cookie, problem solved. &amp;#x200B; cross site tracking is a little bit trickier.
I think I could make a strong argument that including redux in a greenfield project is bloat too.
That is true, but it has limitations. Is this library's use of Proxy compatible with the polyfill? The Readme implies that you need to know all of the object properties ahead of time, much like in Vue 2's data. https://github.com/GoogleChrome/proxy-polyfill
Nothing Is working. The code that i am using doesn't execute anything. Thanks for helping as best as you could. I know I learn this on my own
This is pretty awesome. Too bad you have to use `ttypescript` because the TypeScript compiler doesn't support non-programmatic transformers.
I'll go ahead and expand on this to say that you can use the new `BigInt` type to represent numbers in excess of that size. Take a look at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
What kinda SR level class has you make a ridiculously easy function like this with enough weight that it would cause you to fail??? Also damn man how do you not know how to do this by the end of a 1 hour lecture on programming let alone a whole year (or more)???
Ya know, you two don’t gotta be assholes about it. I’m a slow learner, so what? I mean for fucks sake would you rather I drop out? Dick.
I realize there are a million libraries out there for this, but shameless plug for a super simple and composable one I wrote called [narrows](https://www.npmjs.com/package/narrows).
[xterm.js](https://xtermjs.org/)?
We won't write it for you, but if you're stuck on something, show us your code and we'll help. If you can't write this, you aren't a coder, and shouldn't graduate as one. So learn to write it. Get started and we will help.
Learn both, learn Angular. Learn as much as you can. Don't get stuck in in Vue or React :)
I have to be honest, but shit like this might as well be machine code: const createTypeGuard = &lt;T&gt;(parse: (val: unknown) =&gt; T | null) =&gt; (value: unknown): value is T =&gt; { return parse(value) !== null; } That is one hell of a symbol-dense expression to try to understand. At a certain point, a terse one-liner becomes counter productive.
This right here. JSDocs are comments. Comments lie. Code (mostly) doesn't. The less you have to delegate to a comment to explain, the better.
you can post your code and we can look it over.
Come to Toronto, our studio works almost exclusively in Vue!
I saw a github issue, can't remember which one, that said it's explicitly a "non-goal" of the project to have runtime checks like that. Basically, don't expect it :P !
I'm trying to access your site, but it's not loading at all (tried Firefox and Edge). Is it down?
Unit tests are a very important skill to learn however to be fair I've seen a fair number of senior software engineers who either aren't practiced at them or just plain think they're a waste of time. I was very fortunate at my last job to have been mentored by the only senior on my team who did test driven develolment and required everything we did to have tests. Also I'm coming from a .net background and am now doing fullstack development with typescript. And having come from a focus on statically typed language I'm not sure how standard unit tests are when you can't even do constructor dependency injection through interfaces that can be mocked? To be fair though dynamic languages are pretty out of my domain...
Why is your site down if the build fails? It would just be running the latest version that was built + deployed. I don't get your argument...Something like TS might make prototyping harder, but reliability in production will always be better when you remove an entire class of possible bugs (type errors)
Step 1: Focus on React, get employed and earn a salary Step 2: see if introducing Vue in some area or project makes sense. Step 3: learn other interesting stacks completely outside of the realm of Javascript (Elixir, Go, Swift, etc., etc.)
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
ok, cop. [https://github.com/jamiebuilds/havetheybeenpwned/commit/46b44334befe53c9f4f17ce078b7df8e07af57f4](https://github.com/jamiebuilds/havetheybeenpwned/commit/46b44334befe53c9f4f17ce078b7df8e07af57f4)
I wasn't running `eval` on it, I was just including it with the script tag. The problem had to do with tags, for some reason the self closing script tag did not run. Fixed once I had a regular pair of open and closed script tags.
Makes sense, thank you!
there are so many java frameworks it doesn't matter which one you choose - you'll be able to find positions for angular, vue, react, preact ... its quite a mess really
What happens if you have an object that has more props than the interface in question?
As it is displayed in the picture in the article, it could be written this way. I also added some more comments. // Parser is a function which takes unknown and returns T or null type Parser&lt;T&gt; = (val: unknown) =&gt; T | null; // A function which takes a parser and returns a new function // The returned function is a type guard for T const createTypeGuard = &lt;T&gt;(parse: Parser&lt;T&gt;) =&gt; (value: unknown): value is T =&gt; { // By assuming that parser returns only T or null // We can say that value is T when it is not a null return parse(value) !== null; } A simple type guard for a string then may look like this. const isString = createTypeGuard&lt;string&gt;(value =&gt; { if (typeof value === 'string') { return value; } return null; }); const maybeString: unknown = {}; if (isString(maybeString)) { // maybeString is a string console.log(maybeString.length); } Thanks for the feedback!
I think it's some kind of "Blub paradox" http://wiki.c2.com/?BlubParadox
Yes, they do.
Is the communication happening server or client-side?
Source? I actually migrated some vanilla JS code to Wasm and saw major speed gains.
Completely client-side and offline. Depending on which environment this runs in, the module uses localstorage or indexedbdb, or the native BroadcastChannel if possible.
ive never used it for anything other than something in rapid development.
Hi /u/AlexMnM, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Last year I built multiple arcade games just to learn more JavaScript (and for fun of course) and I’d recommend that as you learn first how to code using arrays, objects, classes, parameters and callbacks. And then try to optimize your code, meaning don’t have a interval running when things don’t really change, like in the menu or so. The end product is that you have a awesome game and learned a lot
Javascript won't work well for bit operations. Bit shift uses only 32 bits--you are trying to encode 42 characters times 2 bits. So you are even going beyond the 64 bits of regular numbers. Anyway you could do a simple string operation--essentially build a string and concat "00" or "01" or "10" or "11". Then convert that string to multiple ints. Another option would be to take your "gene" string and convert it 15 characters at a time to ints--and again store it as multiple ints. Sample of first option is below--but really Javascript isn't built for this and I don't know of a library that does it. function compress(gene) { let bit_string = "1"; for (let nucleotide of gene.toUpperCase()) { if (nucleotide === "A") { bit_string = bit_string.concat("00"); } else if (nucleotide === "C") { bit_string = bit_string.concat("01"); } else if (nucleotide === "G") { bit_string = bit_string.concat("10"); } else if (nucleotide === "T") { bit_string = bit_string.concat("11"); } else { console.log("Invalid Nucleotoid") } } return bit_string; } let original = "TAGGGGAAATTAAAATGGGGAAATTTTAGAGGGAGAGGATTT".repeat(1); let compressed = compress(original); let first = compressed.substring(0, 52); let second = compressed.substring(52); console.log(parseInt(first, 2)); console.log(parseInt(second, 2)); I select 52 for the substring as I think it is a safe size for converting--I could be wrong.
There's the project manager.
who asked for this?
Project Page (?): https://github.com/kaeruct/posts *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Strongly disagree. Learn one of the current frameworks really well. There is only so much time in the day. Once you have the concepts down, it's not that hard to map them into another framework. Most reasonable recruiters and interviewers understand this. My company uses Vue but we interview with vanilla JS because we primarily want to test for general understanding of DOM. So I think that knowledge is important before you really dive in to a specific framework. All that said, yeah, you're going to get the most bang for your buck with React in the current job market. No Vue shop would turn you away for only knowing React.
Well you've kind of answered your own question, haven't you? Ya if you don't need to touch the dom then WASM is great and speedy. However, if you're using it to develop a web page ... it's not. Maybe someday it will be but at the moment it isn't.
Not sure if it quite fits what you're after but Ink is pretty interesting for command line UI. https://github.com/vadimdemedes/ink
I’m surprised this works. I’ve always assumed that local storage would be scoped to a tab. Does it work cross-domain too? Because that seems like a major issue if any domain can read and write everything in local storage.
Do you mean something like "use types;" in the same way that we have "use strict;"?
Project Page (?): https://github.com/kaeruct/posts *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I made this short tutorial showing how I created a Starry Sky using HTML5 canvas. If you follow step by step, you will be able to create your own. Once you're finished, you can tweak it and add some of your own creativity! Let me know me what you think!
It only works on tabs/iframes/webworkers that have the same origin.
Performance may be better, but how's it's support for crucial middleware (such as helmet, CORS, etc)? What limitations and benefits that aren't performance does it bring?
Did you try React and dislike it? React seems to be highly "employable" right now.
Ah okay. That makes sense. I can definitely see some good use cases for it btw. Cool idea!
ReactJS
Just learn JS really well, then you can adapt to any framework.
Yes, these are things. What do you want?
I need a lot of money. I just need it. Please send me a lot of money.
Ouch, I guess I meant an open source solution, that already does what I'm trying to do.
It was partially a joke and partially venting at how people just look for frameworks instead of actually developing stuff. But basically this would be pretty easy with React and any of the bazillion e-commerce apis out there.
I recommend to use for-of instead of forEach: stars.forEach(function(star) { ... }); for (let star of stars) { ... } You could also use a `const` there instead of `let`. The main benefit of forEach was that it allowed you to tuck temporary variables away, but ES6's block scope gives you that advantage with any loop construct. If you aren't iterating over the items at the very end of some chained filter/map/etc calls, use for-of instead.
Haha, okay. Yeah I guess that is true. I got indoctrinated in school (business &amp; computer science) to never build something that has already been built well. Should probably leave that behind.
Interesting. Someone put a lot of effort to compile that list of all the links in the handbook.
The same people who didn't ask for your comment...
That's a bad idea in general. There are a lot of things out there at are popular because they work, not because they're well made. Plus you learn less that way.
That's a bad idea in general. There are a lot of things out there at are popular because they work, not because they're well made. Plus you learn less that way.
Don't waste more time on it , it's worthless ... Lots of reasons why , one of them will always be CORS.
This is pretty cool! But I can't think of what I could use it for as I've never come across a need for same-origin tabs to communicate with one another. Any ideas?
Uh, yes you can always consult the outside world. That's exactly what you should do. As a teacher I can say that we learn our students to rely only on themselves way too much. If anything, engineers need more social skills.
Hmmm? [https://github.com/sinclairzx81/zero](https://github.com/sinclairzx81/zero)
somehting like that, yes.
No, that is not true at all. In my case I used it to speed up an actual web page, which required a fair share of computation. It was great for my use case. Further, Wasm is on its first version only, the MVP. The roadmap includes accessing the DOM.
Any use case that you can think of multiple tabs. So an app with multiple windows that can be better tabbed off like a worker input screen or something. If the crosstab also supports multiple windows this makes perfect sense for multiple monitors in same session rather then opening multiple sessions an trying to manually sync your work flow.
It’s fixed
I built something like this to make sure each tab is sent to the login page if a user logs out or the session times out.
So insane
I guess it could be used for that but I'd probably do the redirect through an on focus event on the tab/window.
right, and proper garbage collection as well. I am not saying even in the slightest that WASM won't be great in the future it's absolutely the logical step. But right now it absolutely is not a good choice for a greenfield web page. What would be a great choice is something that will easily migrate down the road and TypeScript is a wonderful choice for that. All I am saying is don't make your sites in whatever else right now because WASM cannot outperform JS Parsing but eventually it will. Tools like this are great because they will ease the migration in the future.
Yeah if it could communicate with tabs that are in separate windows I could see it being handy for communicating with a settings window or something similar.
I’m writing a document editor. Using IndexedDB, I synchronize multiple tabs, so you can view the document in various ways at the same time, and all changes propagate. Like Google Docs, but purely client-side.
Ah that's cool! Hope it's coming along well.
Project Page (?): https://github.com/philippfromme/gitter-demo *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
![Screenshot](https://github.com/philippfromme/gitter-demo/blob/master/docs/screenshot.png)
Hi /u/TC5550, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/noilddude, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/CobbleApple, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/avimalhotra, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/sehal07, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/tehnologie, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Sleisl, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jsloverr, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/BeatsByDrChae, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/lugarius1990, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Are you just checking the cookie for auth?
sessionsStorage is scoped to a tab, localStorage is scoped to an origin.
I disagree. I prefer code that doesn't run at all than code that seems to work but is doing everything wrong.
&gt; Having to restart your nodes every 30 minutes Why would you ever need to do this?
&gt;Don't waste more time on it , it's worthless ... Lots of reasons why , one of them will always be CORS. Well, kinda keen to hear about the other reasons. &amp;#x200B; With respect to CORS, should HTTP origin policies extend into remote hosts running inside a webrtc peer network? As of writing WebRTC doesn't provide any integration with the browsers origin policies and I'm not sure it should. (remote hosts are accessed on a completely different network via WebRTC, there are no notions of domains / origins unless your define them yourself) &amp;#x200B; Still, You may have a point with respect to CORS if trying to load full pages (URL and all) from a remote host inside some WebRTC network, but there are no browser mechanisms to allow for this (excluding Service Workers which constrain you to the same domain anyway and even then I'm not sure its practical (or even feasible)). &amp;#x200B; Interesting tho, might have to disagree with you on the 'worthless' part. I have several use cases (partly why it was written) and sorta put this out there to see if others might take an interest. But appreciate your feedback none the less. &amp;#x200B; Thanks!
I built a bookmarklet that lets you create fun/fancy text for sites such as LinkedIn, Facebook, Reddit. * uʍop ǝpısdn ǝdʎʇ uɐɔ ʇı * O̶r̶-y̶o̶u̶-c̶a̶n̶-s̶t̶r̶i̶k̶e̶-t̶e̶x̶t̶.̶.̶.̶ * 𝗗𝗼 𝗯𝗼𝗹𝗱 𝘁𝗲𝘅𝘁 * 𝘋𝘰 𝘪𝘵𝘢𝘭𝘪𝘤 𝘵𝘦𝘹𝘵 * Insert bullets, arrows, smileys, etc. (● ⋆ ✢ ✣ ✤ ✥ ❋ ✦ ✧ ✩ ╰☆╮ ✪ ✫ ✬ ✭ ✮ 😀 😁 😃 😂) You can drag &amp; drop it from here: [https://codepen.io/bookmarklets/pen/MLxoJJ](https://codepen.io/bookmarklets/pen/MLxoJJ) &amp;#x200B; It's simply called, "FlipText" as that was what I originally set out to do. Drag &amp; Drop works for the compiled code, the raw code is here: &amp;#x200B; There is one small bug that has been driving me nuts... the letters 'l' and 'j' start a new line in FlipText! Anybody?
Yeah I'd be checking the session was still valid
This looks pretty great! I want to try it when I am back at my computer.
Try building a basic website in javascript without using jquery using some functional priniciples. Constants instead of variables One input One output Currying is used multiple input operations Use built in functions like .map, .reduce and .filter to do looping. And of course have fun. It's a lot easier for me to code my personal projects at home in the evenings if they are fun. Be warned functional programming in javascript can be habit forming. For an IDE I use VS Code with node.js.
So the name definitely has to change. gitter is already a very popular chat room for open source projects.
It's been a while since I've had a mentor, tbh. Not since I would have considered myself a junior. I should probably make some senior JS friends. All my good friends are GO or embedded programmers :(
Node in a browser?! What a fascinating modern age we live in.
I copied an image from drive and went to a different tab in Google docs and it still pasted. I was blown away. This is awesome.
CORS is browser enforced , and for a very very important reason.. see , the same freedom that p2p provides , is in fact its own danger..some people can weaponize freedom..p2p will always fail on long term, yet always win on close terms. thats why webrtc isn't really a thing nowadays...the notion of absence of control is extremely dangerous in any anonymous space.
Hi /u/Code_For_Fun, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
https://github.com/fastify/fastify/blob/master/docs/Middlewares.md It was only a small DuckDuckGo away .... :-)
TLDR; we're overhauling Storybook's documentation features. Storybook Docs includes: \- Reusable documentation components \- A new, more portable component story format \- MDX support that mixes story definition and documentation \- Great design system templates &amp; static export Compatible with your favorite view layer; SB supports React/Preact/RN, Vue, Angular, Ember, Polymer, HTML/Web Components, Svelte, Riot, Mithril, Marko, ... you get the point!
I [wrote something](https://github.com/dwighthouse/PostComm.js) years ago to do something very similar. This one looks more general. Nice.
You can, absolutely, learn TypeScript before JavaScript. Same as you can learn Laravel before PHP. Using these and following the documentation, coupled with community questions net-wide, will get you along well enough to survive. &amp;#x200B; However, the reasoning for learning JS before TS boils down to learning what you're working with and how it functions. A solid foundation makes you a stronger developer. &amp;#x200B; TS is nothing more than a superset of JS - in the end, it compiles to JavaScript. While there are many frameworks out there that really save a developer's hide in time and effort, they also understand the core principles and functionality of their base language (in this case, JavaScript). &amp;#x200B; Have a go at this resource: [https://snipcart.com/blog/learn-vanilla-javascript-before-using-js-frameworks](https://snipcart.com/blog/learn-vanilla-javascript-before-using-js-frameworks) .
Haha 😂 no, but you keep teaching whatever way you want.
Keep doing what you want to do. It's good to hear out their remarks, as you did, but don't stop doing what you want to do.
Yeah needing `ttypescript` isn't ideal, but so far it hasn't given me any problems. And hopefully we'll get [transformer plugins](https://github.com/Microsoft/TypeScript/issues/14419) soon.
Have you ever heard of a non-disclosure agreement? Have you ever had the common sense to keep certain topics or patentable ideas secret? Are you familiar with information classifications? I could keep going but I know where you're coming from. As for OP's problem? How do you recommend that problem be interpreted?
Well you can using cookies or localStorage. You can check the path if not in localstorage/cookie ... show and add it. If you need per session send a request to server to be saved on that session. Well thats a rough idea :).
Hi /u/HunterMaxwell, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RandomMiscAnon, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MARCELfromPARCEL, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I've worked on a webapp that had multi-monitor fullscreen mode - I think I'll use this (or heck, maybe just the native BroadcastChannels) to synchronize data across windows.
There are certain situations where localStorage is not accessible. (I'm looking at you, old Safari). Do you handle that or just throw?
I think the reason we don't do that is that we need to have short seasons, but also let the user know if they are about to be logged out. As far as I know, there's not a great way to check the cookie's expiration timestamp, but since we've changed to jwt, it's right there in the cookie. I'll need to look into that
&gt; requestFrameAnimation() Since I'm writing this for the terminal in Node, I don't have access to the `window` object and `requestFrameAnimation` as far as I know, though it seems like [there's a package](https://www.npmjs.com/package/raf) for that. And thanks!
Awesome project! I'm a Brazilian and I know there's lot of corruption in politics here :/
I was confused at first as well
I could not find a browser where it is not working. See [https://caniuse.com/#search=localstorage](https://caniuse.com/#search=localstorage) Theoretically I could add a method that works over cookies which would handle that problem. But I do not think that someone really wants to support a browser which is that old.
The most common reason people usually do it is because your server node get into a bad state, usually due to memory leaks.
I'm dealing with this nightmare at work currently; certain versions of ios mobile safari (and maybe non-mobile), when run in incognito mode, deny access to localStorage. It's a very specific issue (and a very, very small portion of our users affected) but it is something to be aware of.
&gt;Why is your site down if the build fails? Name any reason a site might go down or you might want to bring a site down.
Great use-case, never thought about that. Is it possible to write/read cookies in incognito-mode?
Yea cookies work in incognito. Lots of people are trying to use localStorage to store session data. This just doesn't work because of safari incognito. We've found that way too many people are actually in incognito windows whether they know it or not.
&gt; Maybe somebody could find a proper link that explains it I have two: [2014 - What the heck is the event loop anyway? - Philip Roberts (YouTube)](https://www.youtube.com/watch?v=8aGhZQkoFbQ) [2018 - In The Loop - Jake Archibald](https://www.youtube.com/watch?v=cCOL7MC4Pl0) And here's a general layout of how it works (may not be completely accurate for all browsers): Calculate Styles Layout Paint Loop Loop until the browser decides to repaint. Run one task from the task queue. Run all microtasks. New microtasks will also be run until there are none left. There may be a max limit on the number of microtasks run. Run all requestAnimationFrame callbacks. New callbacks will be run next time around. Run all microtasks. New microtasks will also be run until there are none left. There may be a max limit on the number of microtasks run. Calculate Styles Layout Repaint
Very interesting! I’m going to try this out when I get some free time. I’m a huge fan of both React and FP in general.
Did I understand that correctly that this is a Set of features that will be implement sometimes in the future? It's not quote clear since the blog is talking about the features in the present tense. Anyhow, I am super excited for this!
You are welcome! Let me know your feedback.
Awesome! Biggest storybook fan here, keep it up!
Cool i guess, but still doesn't leverage the Intl api
Well, doesn't it \*require\* some sort of interface ?
There are quite a few eCommerce sites that have customers who often have tabs open, Etsy is one of those for instance. Cross-tab communication could ensure you're keeping carts up to date in each of those as users add items to their cart. Would make for a really nice shopping experience, actually; I've certainly never seen that in the wild.
Can you paste the relevant source code here? :)
How is the page changing while it's idle?
We have a lot of users so once we release an API it's painful to change it. Because of this, we'll be releasing it in a few chunks over the next few months. The post is just a preview to let people know what's coming.
I have a checker function that fires when it reaches a certain idle time, then `window.location.href='index2.html'`
Nice! Just a quick coding style note: perhaps you should use `const` instead of `let` for variables you’re not intending to reassign. Makes it easier when reading code to keep track of reassignments.
Depending on your requirements you can track the accumulated time in a cookie, localStorage, sessionStorage or maybe even server-side using `Navigator.sendBeacon()` or something. Then just use that as your base on page load.
Or in http://jsfiddle.net/ or similar.
OP can't do jsfiddle apparently, as it hides (?) the bug. I'm genuinely curious.
Store the last non-idle timestamp in localstorage, and check against that.
Thanks! I didn't know about localStorage in the browser, that sounds perfect for what I'm doing.
yes, unfortunately, we have this problem :/
Execute some basic debugging: Make a new page with nothing but the button/popover. Get that working as a standalone page then start adding other elements to it: the rest of the markup, the rest of the css, the rest of the js. When you add stuff to the new standalone page, refresh it each time until you find what's breaking it. If your &lt;button&gt; is gone at some point, it's getting removed from the dom. Since you're using jquery, you can also search your .js files for remove() to see if you get any hits.
Sure thing, thanks for the heads up!
How does it compare to date-fns, and is the plan to allow for the functions to be imported on their own like with date-fns?
This library is obviously a lot lighter than date-fns, but has similar functions such as the ability to format and unformat dates/times along with a variety of other helpful utilities (get range of dates). It doesn't currently have the ability to import functions individually (if that was your question) as it is so light. However, I could easily implement that in the future if it'd be helpful for you? &amp;#x200B; Let me know if you have any other ideas on how else I could improve it. &amp;#x200B; Cheers :)
Are you referring to like formatting dates/times in the preferred format for that locale (along with the language)? Because I could probably implement that quite easily if you wish. &amp;#x200B; Thanks :D
This was a massive problem at my last job, we routinely solved support issues with our app by sending users documentation on how to turn off safari private browsing.
Have you considered using Unicode Tokens([https://www.unicode.org/reports/tr35/tr35-dates.html#Date\_Field\_Symbol\_Table](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table)) for the date formatting rather than the moment date formatting?
Hmm, this is an interesting idea - perhaps I could offer the ability for the user to choose which format they prefer and import it themselves (if not defaulting to either?).
actually i had this bug the other day after updating all libs. we were losing buttons we were trying to insert using the `content` parameter. turns out there's another parameter in that's undocumented that fixed this for us. you also need to pass in `sanitize: false` when you create the plugin. it's there to sanitize html that you insert using content. it seems counter intuitive to me, but here we are. hopefully it solves your issue as well.
How on earth..... I'de hug you if I could. That did it. Now I'm just mad at bootstrap. I guess I gotta read up on what exactly that does now. I haven't been that stuck in months.
Hi /u/BrakeGliffin, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hey thanks for the reply. Other guy figured it out further down. It was the sanitize:false parameter for .popover. I'm still in shock.
Hi /u/archetype776, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hey thanks for the reply. Other guy figured it out further down. It was the sanitize:false parameter for .popover. I'm still in shock.
Hi /u/jamesleesaunders, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Oh cool 😎
Good advice, but I lucked out. Thanks for the reply. Other guy figured it out further down. It was the sanitize:false parameter for .popover. I'm still in shock.
Beginner content? Are you kidding me? I've done this for 5 years now. This WAS a discussion about code.
This looks like fun and seems very nice. I'm going to suggest that the examples in README be updated to focus on your library's (completely valid) premise: &gt; ... in order to reuse some jsx fragments you have to wrap them by functions. JSX certainly has some quirks but what's its purpose? To eliminate the boilerplate JavaScript required to wire-up/create React elements. E.g.: &lt;h1 className="greeting"&gt;Hello, world!&lt;/h1&gt; Versus: React.createElement('h1',{className: 'greeting'},'Hello, world!') Seeing some of the examples in the README make me think this library goes in the opposite direction and is just more [insert noun] from the "let's write _everything_ possible in JavaScript" movement: λ.h1({className: `title`, align: `center`}, `Hello world!`) Versus: &lt;h1 className="title" align="center"&gt;Hello world!&lt;/h1&gt; This is completely unnecessary syntax and makes me think: do I need this library or can I just alias `React.createElement` to something like `$R`. Maybe for runtime DOM manipulation this would be useful but for for compile time... 😬 &gt; Leverage a new programming experience to code less and efficiently. If I saw someone on my team using this as outlined in many of the examples I would argue that writing less code efficiently does not always translate into maintainability, which is the biggest part of the SDLC and therefore `npm rm` it.
As is noted in our guidelines (linked in the sidebar, as well as in the removal comment above), **"/r/javascript is not a support channel"**. If you have a problem with your code, please don't ask here, regardless if you think it's a "beginner" problem or not. Thanks.
If you want to learn Javascript as a language (Rather than jumping right into web-dev which is, in my opinion, a bad idea) than either Maximilian Schwarzmuller or Andrew Mead courses on Udemy are an excellent place to start for only $12.
This looks great. I've been using Docz to document my component libraries because of it's MDX support. Very exciting to see storybook start to support the format as well.
I’ll try it tomorrow when I am not using my phone. Btw language people know differs a lot. I type a lot faster in Java compared to Python and I have an advantage over people who use Python
[https://javascript.info/](https://javascript.info/)
I have 8 fingers :(
Damn this looks very good
I rely too much on my custom snippets &amp; intellisense
[removed]
Hi /u/Evixum, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/haigboardman, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I guess you're supposed to just print the index as you find it, but then you'll need a flag variable (e.g. "found") to figure out if you found anyhting. Alternatively, create an empty array and use push to add the hits. At the end you can check the length of this array to figure out if there were any hits or not. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push
&gt; have no where else to turn. Except, y'know, /r/learnjavascript.
Hi /u/kingnico58, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thank you for feedback. Writing is not my forte, I will update the readme, at least I will try my best to make it more clear.
here is the solution with basic comments https://codepen.io/anon/pen/mgpGyb
Thanks for sharing!, try to keep it small, if you add all the features that the other libraries has it will be the same.
Have you ever heard of learning and trying to become better? Jesus fuck, I sure hope OP didn't breach any NDA or leaked any highly classified information trying to fight his way out of a novice programming problem! He deleted the post so I guess his ass got fired!
No worries :) But yeah, that's what I'm going to try and avoid - I'll only keep the essentials unless I feel it's absolutely necessary to add something. I won't let it reach the 2kb threshold :D
Well, it's early, this is not some official compiler, and C# and Java do have compilers. C# is a nice language. A distant cousin of TypeScript.
I have heard of it, its institutional. It is also why I provided the fairly standard advice to OP of share what you have thus far so we can see for ourselves where they may be confused. I seek to encourage a pupil of mine to first conquer the blank page. Exhaust whatever attempt they can muster. From there if they fail I attempt to identify and explore where and why they lost their brilliance. Perhaps it's a simple misinterpretation of the situation that's causing blank page paralysis. Maybe they're quick to answering because they don't waste time questioning their institutionalized approach but are at its limits of getting a useful answer and require some ingenuity. Either way, they have to conquer the blank page for me to infer anything. It's not my job to stimulate their intellectual curiosity and social effectiveness. I have only a responsibility to encourage them towards how to get my best help. Also lastly, are you for real? Do you have difficulties simply admitting when you're wrong? You're an instructor, you're the starting point, or should I say a potential pivot point from which people base their futures. Conduct yourself with some respect to insight.
Hi /u/4Turing2, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Seems like you need to make a GET-request. Try: `function loadDoc() {` `var xhttp = new XMLHttpRequest();` [`xhttp.open`](https://xhttp.open/)`("GET", "http://`[`192.168.2.109/mode?request=red`](https://192.168.2.109/mode?request=red)`", true);` `xhttp.send();` `}`
Nope, doesn't work. I used POST in postman and it worked, altough get worked too so I guess it doesn't matter
C# and Java have to bring along massive virtual machines. Part of the appeal of AssemblyScript is that it can compete with C, Rust for speed &amp; size.
Hey r/javascript, I made a hero slider component that's really easy to set up with the help of a bunch of React hooks. Using it and plugging stuff to it is really easy and doesn't takes too much time, which is why I decided to do so. Most of the heavy work is handled in the background - just remember to wrap everything inside the **HeroSlider** default export of the package. The slider features: configurable autoplay, lazy loaded backgrounds, support for touch swiping and detects the direction of the swipe to change slides, multiple navs, settings, event callbacks, among other features. Here are some useful links if you're interested: * [Github repository with instructions for each component and their props, includes a few images at the beginning too.](https://github.com/rmolinamir/hero-slider) * [Showcase, with code snippets.](https://www.robertmolina.dev/codelab/hero-slider) * [CodeSandbox.](https://codesandbox.io/s/z6kky9oy63?fontsize=14) * [Fullscreen showcase, might be a tiny bit laggy depending on your PC due to huge amount of sliders and all of the autoplay instances turned on.](https://z6kky9oy63.codesandbox.io/) As usual, any feedback is greatly appreciated. Have a good one dear all, cheers.
You can get the string index of a regex match so you can loop over string while it has matches and use substr to pluck substrings between matches. Something like this: const input = 'Hello, {{[name]}}. The date is {{[date]}}'; const reVariable = /{{\[(.*?)\]}}/; let result = [], offset = 0, match; while ((match = reVariable.exec(input.substr(offset))) !== null) { if (match.index &gt; 0) { result.push(input.substr(offset, match.index)); } result.push(match[0]); offset += match.index + match[0].length; } if (offset &lt; input.length - 1) { result.push(input.substr(offset)); } console.log(result);
A lot of "match this regexp pattern anywhere in the string" going on. Seems like a buggy way to parse but who knows... I do wonder how much of a performance improvement you'd see if you changed all the `match` calls to `indexOf() !== -1`. There are a lot. Also you may want to consider one of my favorite JavaScript featured: `date.toString() === 'Invalid Date'`
Thank you for sharing this. Helped me learn and understand how to use vue with mysql and node.
To retain the data from a regex, you need to use a capture group.
JavaScript str.split(" ")
Any examples for videos?
Seems like you put a lot of work into this, for which I am impressed. I am not a big fan of sliders because they are often distracting. For that, I would like to see a feature to pause the autoplay somewhere in the ui by default. I didn’t see a way to do this via settings. Another suggestion: given the sheer number of options, I suggest creating a web-based settings generator that allows users to adjust the settings and see the output in real time to the side, and then let them export those settings.
I usually use Axios. However, this link should help you [https://www.w3schools.com/xml/xml\_http.asp](https://www.w3schools.com/xml/xml_http.asp)
Do you mean background videos for the slides? To be completely honest I only thought of images while doing this. As of right now only images are supported by the Slides component themselves, but it is theoretically possible to use videos as backgrounds for each slide but that would have to be done by the programmer and with a little help of callbacks to pause videos when they're shown. Pretty much the whole thing would have to be built up, but it's not a bad idea at all. I'll think about adding some sort of `backgroundVideo` prop in the future to each slide.
Thanks! That's a really good idea though, right now the autoplay pauses if the user interacts with the slider but then resumes again after a configurable amount of time. Adding a button as a component that would let users pause the autoplay sounds great and not hard at all given how its built, I'll definitely give it a shot later. Regarding the web-based settings generator, I've always wanted to do that sort of thing even for other packages I've made. Do you have any in particular that you like? So that I can kind of have some schematics to base mine off. Thanks for the feedback, really appreciate it.
Do you use windows or Macintosh? If his answer doesn't include 'linux' then dont hire.
I'm no expert on NodeMCU, but in traditional JavaScript in order to send data with a POST request you have to set the header for URL encoded form data first. Something like... ``` xhttp.setRequestHeader ('Content-type', 'application/x-www-form-urlencoded'); ``` And, of course, the file you're sending the request to must also be looking for POST data, not GET data.
It's as relevant as in any other language depending on what you're building. One reason : Recognising object creation is in fact hidden code duplication so abstract it with a container Another: scoping, containers can have child containers which allow you to group and manage life cycle for a subsystem. I.e. 2 "order booking" screens in the one dom. Another: testing. Super easy to swap out dependencies when your item under test doesn't create them I wrote microdi-js about 5 years ago. Been using it in multiple projects since.
here's my use-case: i want to build a shopping cart where the state is shared across tabs &amp;#x200B; i don't want to store the shopping cart on the server if i can avoid it, mad respect for privacy, dawg
Are you looking for an existing bookmarklet to do this? Or are you wanting to invent it? Because if it's the latter, you should tell us at least how far you got before you got stuck, because this is a massively difficult undertaking.
I dont want to invent it just want to know how to put it on my bookmark
I am to dumb to code
Does it already exist? Have you seen it somewhere? And if you have seen it in existence, can you share a link to it so that we can assist you in setting that implementation as a bookmark?
this is the best i have found [http://www.cs.huji.ac.il/\~irush/projects/ants.html](http://www.cs.huji.ac.il/~irush/projects/ants.html)
False. Anyone who puts in the work can learn to code. Everyone feels dumb when they compare themselves to experienced people.
I don’t know, their spelling is pretty bad. You’re giving them a lot of credit.
I guess but i am bad at this
Saving this because I have a Docker app that needs the ability to spawn child processes and cloud providers that do lambdas either can't do Docker or won't allow a child process to spawn. Others can't run Chrome instances.
You literally said in your post that you’ve never coded before. Of course you’re bad at it.
lol
Well its not classified: its from a textbook our instructor who just last week realized it was a 2 out 10 rank. I didnt delete the post it was removed by the admin. But yeah...
it's interesting
I am
Professor X disapproves.
For the last few years I've used it in an in house system I wrote for scheduling photographers. On one screen are all of the requests for photography along with ui sections for each photographer. I drag and drop requests into a photographer to assign them. On the other screen is a map of locations (courts). This weekend there were 77 courts. When I hover over a photography requests on one screen, the court for that request is highlighted on the other. When I drop the requests to assign it, that court takes on the background color specific to the photographer assigned. Using this system, I can visually group where the photographer is assigned to minimize walking and time spent moving from court to court (these places are huge and the crowds are thick). As I'm also one of the photographers, I find this ability invaluable!
None I know of. I figured a simple react based form and a preview area would be enough.
Just saying, if you're running lambdas they're essentially all running in a docker container managed by the provider. The whole point is that the code should just run given the environment
Some providers don't allow access to the file system to run child processes, others kill the lambda process after a few seconds so a child process couldn't run, and others (Google) have trouble running Chrome headless. The idea of running my own Docker instance is that I control file system access within the container, not someone else.
Yeah, plus a lambda can invoke another lambda, so why need a child process? And chrome runs in a lambda fine, I’ve done it.
Have you checked out Google's new service (in beta), [Cloud Run](https://cloud.google.com/run/)? I would expect that it allows you to spawn child processes within a container, at least, but I haven't checked.
Laravel -&gt; PHP is not the same as TypeScript -&gt; JavaScript. Laravel is a framework, but TypeScript is a language. An equivalent comparison from Laravel to PHP would be Angular to JavaScript. Or perhaps Sails, if you wanted to pick on a backend framework.
VS Code by a mile. Nothing I've seen else comes even close in being feature rich and support.
No. I actually liked Google's CLI tool better than Amazon's. I'll have to see if it works with this.
Vim. It is blazingly fast to launch and run, crazy configurable and can do literally everything you may want it to do (it might take some tinkering or installing some plugins but you can get it to do anything). The community is great and you can always ask for even the dumbest things and get an answer; though the answer might be "take a look at this `:help` page" (`:help` is the command withing vim to access the user manual) Which will most of the time be very clear and well explained. The modal interface feels clunky at first but it becomes way faster once you get used to it and it makes a lot of sense once you realize that most operations you perform on code are not writing more of it - which is what most other editors focus on - but modifying existing code to integrate new functionality, optimize, reorganize, refactor, or fix bugs. If you find yourself doing some operation very frequently you can always map it to a key or key combination to make it easier and faster to execute (I recently did this with the operation "Move comment at the end of current line to a new, empty, line above"). I started using vim less than a year ago. And i don't think I'll ever switch.
This is correct. Although it's worth noting - you already have a capturing group, it's just in the wrong location. `str.split(/({{\[.*?\]}})/)` would do it. If the string ends on a match you'll end up with an empty space at the end of the array, you could use a truthy filter for that
shameless self promo: I'm working on a Kubernetes PaaS that deploy-node-app works well with, https://kubesail.com/ - our free tier supports Chrome, local persistent filesystems, child processes, long-running processes, etc :)
VS Code
Just wanted to comment in support of Cloud Run, I love to see the cloud providers making efforts to be part of the open-source ecosystem (serverless with knative).
I just came across the page about the [container contract](https://cloud.google.com/run/docs/reference/container-contract) for Cloud Run, which summarizes the limitations. One that stood out for me is containers only get 1 vCPU, which could be a deal-killer in some cases. But I don't see anything that would prevent spawning processes within the container. The thing that interests me about Cloud Run is it's designed to allow deployment of your apps directly on Kubernetes instead. Which means in theory we could take some of our higher-scale stuff on k8s and deploy it on Cloud Run, and not have to worry as much about operating big mission-critical clusters.
Yeah, I just switched from Atom. Whoa. Feels good
I love coding Cobalt in Vim.
The same way you did it in python? Use a for loop and log the output to the console.
A for loop in JavaScript would work just fine.
My first suggestion is don't try to be too clever. // Trying too hard to be clever if (!end) end = start, start = 0; // Better if (!end) { end = start; start = 0; } My second suggestion, according to the Python docs... &gt; The advantage of the range type over a regular list or tuple is that a range object will always take the same (small) amount of memory, no matter the size of the range it represents (as it only stores the start, stop and step values, calculating individual items and subranges as needed). Which is to say, if we ask for a range from 1 to a million, then we shouldn't be allocating an array of a million elements. Let's see if we can implement range without constructing and filling a data structure. This is a rare and good opportunity to use ES6 generator functions! function* range(start, end) { if (!end) { end = start; start = 0; } const step = end &lt; start ? -1 : 1; for (let i = start; i !== end; i += step) { yield i; } } Now with generators, we could manually retrieve each item in the range... const rangeGeneratorObj = range(1, 10); rangeGeneratorObj.next(); // { value: 1, done: false } rangeGeneratorObj.next(); // { value: 2, done: false } rangeGeneratorObj.next(); // { value: 3, done: false } Or, since generator objects are iterable, we can use it in a for-of loop... for (const item of range(1, 10)) { console.log(item); } Again, though, there's no pre-filled or intermediate data structure here. Each iteration of the loop computes only the one next item in the range. And finally, if the user really does want an array from the range, then since generator objects are iterable, they can just spread the range into an array. const nums = [...range(1, 10)];
Config Bob says you’ll always need corp auth config.
Yea! Vim rocks!
I assume you’re using node, it will only display what the function returns. Use console.log inside the function at return . Caution: JS doesn’t support tail recursion, so that algorithm wouldn’t preform as well as some alternatives.
Awesome, I actually came across the Symbol.iterator and ES6 generator functions the other day and didn't even think to use it in this situation, but I absolutely see the memory implications and other benefits in your solution. Thanks so much for your thoughtful and thorough input.
ES6 actually added tail call optimisation but [safari is the only one to actually support it so far](https://kangax.github.io/compat-table/es6/#test-proper_tail_calls_(tail_call_optimisation), so unfortunately iteration is still usually the better solution! Boo.
[removed]
If you use iteration you can just capture the whole sequence then return your range: const fib_seq = (from, to) =&gt; { let seq = [0, 1] for (let i = 2; i &lt; to + 1; i++) { seq.push(seq[i - 2] + seq[i - 1]) } return seq.slice(from) } e.g. `fib_seq(7, 10) -&gt; [13, 21, 34, 55]`
Hi /u/danielfalonipe, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt;function fib(n) { if (n == 0) return 0; if (n == 1) return 1; else return (fib(n-1)+fib(n-2)) } I am using node. I got this to work: &amp;#x200B; &gt; for(var i=2; i&lt;=30; i++) { ... console.log(fib(i)); ... } 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040
Vue doesnt notice the change. I had this couple of times and had to mutate the whole, in your case, reviews object. Or maybe it does also work if you write `review = { ...review, isActive: true }`
Same here. My only problem with vim is that once you're comfortable with it and then try another editor, you just have no chance to switch as you're already hooked :) Tried the vim emulators for vscode, but for me it feels slow and just not the same.
Hey, this is awesome. Might want to consider a different name for your project though, the Gitter name is already established as chat / messaging application. Love the project tho, great work :)
Webstorm
Hi /u/t-to4st, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/WebDevSimplified, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Sometimes using `Vue.set` can fix this. You’re sure isActive exists in the object?
Hi /u/Poisedwastaken, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I am a beginner and I think JSON.parse will help. Please correct me if I am wrong. Thanks!
This is exactly what I had to use. Thanks for the help.
 let jsonString = JSON.stringify(nameOfArray, null, '\t'); //Assuming Node.js const fs = require('fs'); fs.writeFileSync('./path/to/file.json');
Phpstorm. It's webstorm + more.
It was presumed an understanding that "in this case, JavaScript" referenced "their base language". I presumed too much.
Niche.
I’m really glad you find it useful. If the logic or anything there seems unclear, it would be my pleasure to help!
Mainly react
As someone who will soon lead a greenfield project, I appreciate that this just came out in time :)
Moment and lodash as libraries.
Hi /u/wxchevalier, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
... is called the spread operator. It means "take all the things from this collection and pretend they were all here one by one".
Look at lodash throttle
A Set is basically like a JS array, but it will only keep unique items. If you change an array into a Set, only unique items will remain. &amp;#x200B; The `...` "destructures" the Set, meaning taking out all the items of the Set and spreading them out. In this case it will spread out all the items of the set into a newly created array. &amp;#x200B; This is what uniqueElements does: It creates a new Set from arr, so only unique items remain. Then all the items of the Set are spread out into a newly created array. This array is returned and you have an array of only unique items. &amp;#x200B; You can find more info here: [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring\_assignment](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment)
Same here, I started with VIM shortcuts in vs code a year ago and switch over to VIM like a couple of months ago. haven't looked back since
I have updated the bad examples, you were 💯% right about them. &gt; Leverage a new programming experience to code less and efficiently. ... well load words used to attract some attentions 😅 but it is not the main goal. I would strike accent to currying, composition, `self completing functions` - `div('hello')` doesn't require -&gt; `div('hello')()`. I wanted the code to be more clean, less nested and as you mentioned, make it more in JavaScript way, but not fanatical 🤪. Have you checked the demo https://github.com/sultan99/rol-table? I would like to hear your feedback, especially if something leads to non maintainability of project or even worse.
I was thinking the same thing. This looks very like a set of aliases for React.createElement. JSX is also an alias for React.createElement but via the transpiler. Maybe I'm missing something.
You can try with blob if you don't have backend like node and stuff. https://stackoverflow.com/questions/26158468/create-json-file-using-blob
This. Good interface, lots of extensions, frequent updates, and it allows me to focus on the task at hand without too much fiddling around
Totally useful utility to have (especially if you prefer `for...of` loops). This is actually available as [just-range](https://www.npmjs.com/package/just-range) or [lodash.range](https://www.npmjs.com/package/lodash.range)
I wouldn't worry about your initial comprehension of this bit of code. There is a lot of syntax noise and new(ish) features here condensed into a single line. There are a few components to it... const uniqueElements = arr =&gt; ... This is defining a function variable which takes a single argument (an array) and returns the part I've omitted. Next there is the innermost part: new Set(arr); A `Set` is a newish collection type in JavaScript. It has a constructor which can accept an array, and the set will consist of the unique items in the array; `[1, 2, 2, 3, 3]` will result in a set containing 1, 2, and 3. However the function is designed to return an array, not a Set, so the final part converts it: [...set] This is the spread operator being applied to an array. It converts any 'iterable' object into an array of the elements. Put the pieces together and you have a function which takes an array of data, which creates a Set from this array, and then converts this set back to an array and returns it. Here is an alternative syntax which does the same thing which might make more sense (even if the functions used aren't familiar): function uniqueElements(arr) { const set = new Set(arr); return Array.from(set); // same as [...set] }
Wow. This is the clear example I've seen where generators are actually useful. All the examples I've seen in the past are way more contrived and so their usefulness hasn't settled in my mind yet. Thanks for the clear explanation!
In your JS you are currently doing ``` box.focus(); box.style.border = "solid 3px red"; ``` This is the variable for the Name input, you will need to do the same for `box2` and `box3` Also the IDs on your inputs do not match what you are looking for in the JS. Keep in mind you can only focus on one element, so just duplicate the border line, update the variables and it will work
To add onto /u/iTipTurtles answer:
... I', feeling stupid. Does this mean that i develop my app, and then just push it to cloud run and it "kind of works"? No need for DevOps or anything?
Great timing! Well this is a sneak peak so we haven't actually released anything yet. 🙊 First installment coming very soon!
Ah that's a rather cool system!
Which get super sweet if you at gastby or next.js and use styled-components for styling :)
Can anyone explain how using a JWT is different to the process used in a simple cookie/session system? User logs in initially, they receive some random secret string which is also saved on the server. For future messages, they send their user id and the random string. The server checks the db if the session key for that user matches the supplied string, they are authenticated. What is the benefit of the more complicated method to derive the authentication token with headers, body, hashing etc.?
I’m not sure what „cloud run“ is, but for this to work, you need a kubernetes cluster running somewhere.
Yep, but you will need a Kubernetes cluster (your own "the cloud"). You can get a free one at https://kubesail.com (deploy-node-app will also help you create one if you don't have one setup already - and of course, many other providers are available!)
```javascript const fragment = document.createDocumentFragment(); // or any DOM element fragment.innerHTML = json.register const link = fragment.querySelector('a') console.log(link) ```
* Variant 1: Detach the listener and set the timeout/interval. Use the timeout callback to attach the listener every hour. The listener callback has to detach itself after it is called once. * Variant 2: Do not call the display method in your listener callback. Use that callback to cache the most recent notification instead. Use a timeout/interval that calls the display method once every hour with the cached notification content.
If you want some code to be more readable for newbies/people unfamiliar with ES6, you can use Array.from instead of the spread operator trick. So, this example will look like this: `Array.from(new Set(arr)).` In my opinion this is more semantic/less WTF than some dots and braces.
Now my username makes sense
Monstr :D
That o is a 0(zero)
Good luck with C/C++ they have been around for quite a long time already
Low level languages like C and C++ will never be replaced by JS because they target completely different use cases.
I'm regularly a React Native guy, really recommend that framework. It makes building mobile apps easy as heaven. When you combine that with Expo, oh boy...
The "what" is straight forward. The why... haha. Best not look too long into the abyss, lest it look back into you.
[For more information](https://vuejs.org/v2/guide/reactivity.html#Change-Detection-Caveats)
I can't understand you.
I thought it might have been a random index button but the bit shift just ruins it all.
yeah, i am wondering how the bit shift is working? What it does exactly?
It's a shitty way of returning a random value from the array. Generally when people want to do this they'll write: return Math.floor(foo.length * Math.random()) The &lt;&lt; is a bitwise operator, https://www.w3schools.com/js/js_bitwise.asp
Let's say you have the number x. When you shift it, you get it's binary form and do these: x = 0010010110111010 x &lt;&lt; 0 = 0100101101110100 I do not use these methods so I don't know what exactly they are used for.
He means it is clear what the method does but it is really hard to understand what you would use it for.
Ok thank's
Thank's i will check the docs.
This returns a random index in the array. `foo.length` is the number of elements in the array. `Math.random()` returns a number between 0 and 1, but never 1 itself. So `foo.length*Math.random()` will be a floating point number that will always be less than `foo.length`. But you want an integer index, right? JavaScript has a very funny way of dealing with numbers. If you have a number in an integer context, it will convert that number to an integer. The left shift operator provides that integer context. But by shifting zero bits you are not modifying the number otherwise. Effectively `foo.length*Math.random() &lt;&lt; 0` takes the random floating point number and then rounds it down to the nearest integer. A more readable way to achieve the same result is `Math.floor(foo.length*Math.random())`.
Oh, that's so clear now. Thank you so much!
Why everyone gotta take this shit so serious? Engineers, amirite? This video was fucking hilarious.
Yeah, i know what it does. But the bit shift confused me.
Damn but i like space and js ..
Yes, Mnstr.
Some people that only target a use case feel insecure that they don't know how the other world works.
Hi, Yeah I'm going to try and reduce the amount of regex used - it wasn't an initial concern of mine as the first few releases were almost just a proof of code. Hopefully that will also increase performance :) Thanks for your suggestions, though - I'm going to try and implement them soon.
PHP should've been the one to get eaten instead of python. And python also leads. c, c++ are different monsters which are not to be compared to js, kotlin, etc.. which target UI applications. Try designing an operating system in javascript, lol.
Was that JavaScript generated by Typescript? I imagine its much uglier than that.
There is a small change to the AndreyVereshchak answer. Instead of documentFragment. You could create a temp DIV as DocumentFragment doesn't have innerHTML in it. `const tempDIV = document.createElement("DIV");` `tempDIV.innerHTML = json.register;` `const link = tempDIV.querySelector("a");` `const children = tempDIV.children;`
&gt;Engineers I find software development more of an art, since its iterative. You can draw things over and over, scrub bits out, and redraw until you've got something that looks ok. Engineers build something right first time because you can't build a bridge over and over until you get it right, and the client doesn't suddenly decide that they'd rather have a tunnel halfway through construction [usually](https://i.imgur.com/5HCD2Z8.jpg) So it makes perfect sense that we argue amongst ourselves about stupid bullshit.
Wouldn’t one language that was verbose enough to handle all use cases be the ideal?
What was this originally from?
Just Googled "not for astronauts": [https://www.youtube.com/watch?v=hKDiPp2aCQk](https://www.youtube.com/watch?v=hKDiPp2aCQk)
There's Rust. Although it can't replace C and C++ right away, especially in legacy code. Many developers choose Rust for their new software.
It's a joke... frickin' millennial PC culture nonsense even filtered into the working dev space... go back to college so you can cry in a Safe space kiddo.
If the monster kills C++ wouldnt the JSmonster itself die ? Isnt V8 written in C++ ?
&gt; Try designing an operating system in javascript, lol [Like this?](https://node-os.com/)
Is this c# ? I know the question has been sufficiently answered, but for further reading you can look at https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/left-shift-operator
- PHP should've been the first to die. - C++ should've been on a different planet (or asteroid or whatever) and thus should've survived.
Hey, there's a reason that bridge is also a tunnel... I guess
Cute!!
You're really reaching for that one...
Drawing of fish dubious at the sight of a fishook
Python is crushing JavaScript with pyiodide . Yass
Like this: https://msos.midspike.com/
i am posting it in the javascript sub reddit so ? Anyway, thanks
This is a linux-based distribution.
Don’t encourage me, I have asmjs at my disposal.
Hi /u/Petushka, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
The main difference is that JWT is stateless. User logs in, receives token but the token is not stored on the server. Client passes JWT (as a header or cookie) in every API call to the server and then server needs to verify if token is valid or not. Not by comparing it to previously stored token, but by veryfying signature. Here is a quite good explaination of workflow [https://medium.com/vandium-software/5-easy-steps-to-understanding-json-web-tokens-jwt-1164c0adfcec](https://medium.com/vandium-software/5-easy-steps-to-understanding-json-web-tokens-jwt-1164c0adfcec)
That’s a valid point. Let’s leave C++ alone.
Congrats, you've been a Redditor for 3 years and you've amassed a grand total of -1 karma. Your post "Why are gamers such cunts?" was a particularly fascinating insight into the mind of brainless cretin. Good luck friendo.
What are you taking about? Do you really think that Programming languages are tools to solve specific real world problems? Haha
That picture is amazing metaphor for 90% of the projects I've worked on. Well done.
I've recently come to the idea that programming is a craft. It's not engineering, because as you say there's not a plan made ahead of time that is then followed, but it's more than an art, because IMO there's not really a wrong way to do art, but there's definitely a wrong way to program. I think about things like blacksmithing and carpentry, because there's a lot of improvisation and room for personal interpretation, but there are also best practices and some reasonably concrete and reliable ways to tell good work from bad work.
I forgot... When it is JavaScript anything can happen.
Ok, I get it now. Thanks. So the server only needs to keep track of uids and the secret key (both relatively static data). It doesn't actually need to maintain a session id server side. I take it the server can actually store whatever state information it wants within the payload (as long as it doesn't need to be kept hidden from the user)?
Yes, you can store whatever non-sensitive data you want in the payload. [More about payload](https://jwt.io/introduction/)
Ok, thank you! I'll deep dive it.
Thanks a lot for this long answer. &amp;#x200B; I did not know the Set object, but it seems very interesting!
Thanks for the answer! &amp;#x200B; I'll deep dive the shared link! :)
You're right, a little bit more readable. Thanks!
Hola, hoy have a spread operator and the Set object https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set and for this object the result don't have repeatedly numbers.
cant connect :(
Easier to go under the ships than over them
Semi relevant: here is a 3D fps experiment built with just html and css, without javascript. https://keithclark.co.uk/labs/css-fps/
What's so hard to understand. Have you never needed a random element from an array?
It worked, nice game, but it lags a ton when moving
Nice app. Do you have link to github repo?
It's a problem with my backend which crashes the server. I will try to fix this error
Fps or network. Network might be because the server is located in Europe. You might get dropped frames because your browser isn't hardware accelerated.
That example is my main inspiration for this project
Cool!
I tried using it by replacing `setTimeout(this.sendNotification(), 3000)` with `throttle(this.sendNotification(), 3000)` after declaring `throttle = require('lodash.throttle')`, but it didn't work either.
I don't know if he does, I did take a look at the code as Chrome Extensions are code and viewable. Looks like he Iframes in a page from his website with a query parameter of the site's url. The extension is pretty basic, most of the chat logic is in his site. You can look at pluggin code easily with CRX extension in Chrome and see it.
I see. Thanks for the info mate.
Especially in the large military ships that are built and based within a few miles of there.
Hi yes, it's iframe and now it operates in our linode server, haven't uploaded to github.com yet since it's still messy
The odd thing is why do &lt;&lt; 0 when you can do Math.floor() instead. Seems like unnecessarily complicated and unreadable code. I see what they did, just don't agree with how.
String pullName(String\[\] names) &amp;#x200B; I use it for New Year presents stuff 😂
The problem should be fixed now!
I will wait for the raytraced option.
I'll maybe need a shader for that. Just maybe
As you explore JS you will see the ... spread operator more and more. It's a new operator but already has found to be a great addition. One place I see it used frequently is in deduplication like you have here. Another place I see it used is in array combining. Finally, if you use react many people use {...props} to pass an array of props individual through a component.
unexpectedly working well on Firefox, congrats ^_^
Except it's very laggy for me and some parts of the map becomes invisible
Hi /u/dhia_1997, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MinerSc2, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/OctopusReader, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/knazim667, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/csimmss, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/rayhan666, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
at least it's not a blank page or a message asking to use Google Chrome, very much appreciated :-)
Hi /u/lichun82, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/AlienNumber24601, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/NearbyOstrich5, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/tiredkh66, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/utopy, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Bozhidar95, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dont-ask-jeff, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/AngularJosh, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/visual_builder, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
In the variant 1 you mean changing `this.beaconsDidRangeEvent = Beacons.BeaconsEventEmitter.addListener('beaconsDidRange', () =&gt; {` `setTimeout(this.sendNotification(), 3000)` `})` to `setTimeout(Beacons.BeaconsEventEmitter.addListener('beaconsDidRange', () =&gt; {` `this.sendNotification()` `}), 3000)`, right? This returns the error `func.apply is not a function` to me.
A lot of us prefer hyperscript (plain JS) over JSX. JSX *is* the completely unnecessary syntax that requires extra tooling and maintenance. It makes it difficult to comment-out attributes, it clashes with TypeScript generics, requires constant context switching between two syntaxes, it's more awkward to type and usually more verbose.
Im located in Europe, using Chrome, and just checked hardware acceleration, its on.
Ok, I'm currently remaking the camera system. I'll post an update soon!
How?
very neat! I just tried and was getting a lot of graphical problems like the gun disappearing and lots of the models going invisible.
Are you using chrome?
indeed
What OS are you running, laptop/desktop, etc
This was both impressive and entertaining! Nice!
Cool concept! Had some good albeit glitchy fights already :)
yes it works. And the whole thing is amazing. Well done :)
Just commenting to save this for later
It's cool, but you are trusting the client way too much!
I know...
Speed hacking, same IP clients, health hack and more!
No tests? Any core utilities like this should have high test coverage. GPL3 is not usable in commercial software. I know some people might prefer that, I am not here to tell them otherwise. The entire segment of the software industry pretty much would not use anything GPL unless they have no choice (e.g. cannot reasonably build it in-house). It usually involves consulting lawyers and making workarounds
Hi /u/kirith_, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Gigusx, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
You can pretty much oneshot people by spamming both mouse buttons. Really cool project tho
Sounds like what you want is now.sh
Really cool project, love the bugs.
I have updated the code. To try it out open the link in the post and press ctrl+f5 to reload the page to get the fresh scripts!
Doesn’t work on mobile safari for me. Runs into a problem and crashes.
What's your goal? Is it to write a world class program? That's not gonna happen based on you asking this strange beginner question. Is it to improve? Then yeah OOP is a key to writing good programs. Is it to make quick money? Then do what you know.
Honestly I would focus on getting important ES6+ features down first. Furthermore in my opinion JS lends itself much more to a functional programming approach than to an OOP one. Both paradigms can be very useful, but you will benefit more from FP in the short run. My reasoning is that you can learn concepts like lambdas, immutability and pure functions, which really help writing clean and easy to reason about code. It will also make it easier to grasp the concepts behind react and redux, which are two very popular libraries (often used together) for building single page applications. Most OOP design patterns on the other hand wont help you that much when doing frontend work. If you are doing some nodejs as well or would like to check out a framework like angular it might still be useful, though. In the long run you really should learn both of these "main" paradigms.
Hi /u/bhmmam, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
So cool!
How bored were you, to actually get the idea of making this, joke aside great job!
&gt;Is it to write a world class program? That's not gonna happen based on you asking this strange beginner question. It's a very valid question when dealing with a very multi paradigm language. &gt; Is it to improve? Then yeah OOP is a key to writing good programs in almost any language. Again situational, many business domains lend better to a FP (functional programming) style of modelling. OP: Again, JS is very multi-paradigm, although the tenants of OOP aren't as literally applied to JS as to C# or Java (To learn more about this, look up the difference between prototypal inheritance and classical inheritance) but because of this both OOP and FP can work well with JS underlying structures. I recommend reading into both OOP and FP in Javascript and see which one clicks more with your way of thinking and the problem at hand.
&gt;It's a very valid question when dealing with a very multi paradigm language. I disagree, I've never seen a good JS lib of decent size that doesn't use OOP. Even if you could find one, it would be the 1%.
I'm making making the best software in the world! It's my first thing and even I'm afraid to leap!
How about the #1 most depended on npm package lodash? Also worth noting that 99% of universities teach exclusively OOP first as the end-all of programming (Maybe with an elective in FP at most) so I wouldn't equate usage with viability here.
&gt; Again situational, many business domains lend better to a FP (functional programming) style of modelling. &gt; &gt; I disagree with that, you could spend your entire life as a programmer without touching functional programming and do very well, whereas OOP patterns are used everywhere across every language and is a key pattern used to build large scale applications. If you don't know them well you will spend your whole life as a programmer confused.
You can spend your whole life as a Java/C# dev and never touch FP. You can spend your whole life as a Haskell dev and never touch OOP. I mean yeah real world not knowing OOP would be remiss from an employment standpoint, simply because of how ubiquitous it is, but again usage doesn't equate to viability. I think for mathematical programming, not using a functional style will set you up for failure. I also think for things like game development, not using OOP will set you up for failure. And I think the vast majority of business domains land somewhere in between.
What a great idea. Well done!
&gt; node-os is a full operating system built on top of the linux kernel
Hi /u/lucy3112, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
look at the source code, lodash literally uses classes internally. you're obviously a retard based on this dumb argument so not gonna continue this conversation.
Could you specify what you need help with? There are many ways to do it, googling "javascript easy slideshow" gives you some good examples, like this [https://www.makeuseof.com/tag/how-to-build-javascript-slideshow/](https://www.makeuseof.com/tag/how-to-build-javascript-slideshow/) &amp;#x200B; &amp;#x200B; Personally I solved it by generating a div for each image (using an arrray with the image link, i.e.: var myArray = \["[https://images.com/coolImage3/](https://images.com/coolImage3/)", "[https://images.com/coolImage5/](https://images.com/coolImage3/)"\] and so on. You can also have an array with many objects, each object having the image link and a title.), which gives each image an index. That way the current image is decided by a single variable number, so when i want to go to the next slide ican just +1 to that number and get the image with that index. Then you can make two @keyframe animations, one that takes the element from left: -100%, to left: 0, and one that takes the element from left: 0, to left: 100%. In other words, make an animation that moves the image to the center, and one that moves the image from the center to off-screen. Or you can just change their opacities, so that the current image has opacity 1, and all other images have opacity 0. To loop it you can just use setTimeout(function(){ &lt;CODE THAT CHANGES TO THE NEXT SLIDE&gt; }, 2000), where 2000 is the duration between each slides. If you want it to loop seamlessly you can make the transition/animation-duration the same time as how long it takes for your loop to switch slides, so in this case, animation duration 2000.
Try it on a desktop or laptop in chrome
What do you think a "class" is in Javascript? An object constructor function. This isn't an OOP strict language, classes have no special privilege they're just syntax sugar on functions and objects. React is declarative but utilizes classes. But the OP is dead and you're clearly a fucking dense asshole who doesn't understand JS, so yeah let's call it here.
jQuery!
Damn, if you're gonna make posts so bad you might as well put them on Medium where it belongs.... &amp;#x200B; More seriously, why would you put a JWT in the database?
You are right, JavaScript not programming language it’s only scripting language But growing faster this days And video is funny
Cool experiment, but super glitchy for me on Macbook Pro Chrome
Cool experiment, but super glitchy for me on 2017 Macbook Pro and Chrome
left and right click pressed the same time can almost insta kill someone. &amp;#x200B; getting stuck in boxes suck. &amp;#x200B; sometimes people die instantly. &amp;#x200B; plan on getting my coworkers tomorrow and tonight to play it, fun!
&gt;Question 1: Do i need to use var/let for all my variables? &gt; &gt;I tried saying Cat cat = new Cat() and it was invalid.Changing it to let cat was ok(I did some research on let vs var). const cat = new Cat(); &gt;Question 2:How do i declare my class variables?Whats wrong with this code exactly?I saw some tutorials where some people didnt even declare their class variables and they just used em in the constructor (???). Correct. JS doesn't support declaring class properties outside of the constructor or methods. &gt;My last question is for my class methods,they dont work when i add a return type.For example a getter method should return int or something,i dont have to declare it in JS? Correct. JS uses dynamic typing, so you can't specify types. You nay want to take a look at Typescript.
I like the part where I don't know the controls and seem to be insta killed every time. Seriously though this is very impressive
Sorry, didnt realize. Thx
&gt; A functional programmer’s wet dream Mind explaining this a bit more? They're functions that hold state, and mutable objects in JS to boot -- basically, the antithesis of everything I was taught about FP in JS.
If you can’t find many practical uses for generators then you may not know very much about them and maybe even software engineering in general. I find them extremely useful for business logic in action or event based JS application frameworks. That isn’t to say their aren’t other ways of solving the same problems, but I find generators can make your code very concise.
It is an experiment. https://keithclark.co.uk/articles/creating-3d-worlds-with-html-and-css/
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide Should help you come to terms with how the language works Something you may also find useful: https://github.com/Jeff-Mott-OR/javascript-cpp-rosetta-stone Though there are a number of similarities in the languages (JS and C++) there's just as much thats completely different. Also keep in mind that a few years ago, JavaScript went through some radical updates with respect to syntax and features (ES6), and new updates are being added yearly. Some examples you see out there may be old, while others may be new, even using some features that have been proposed but not officially added to the spec (one being class fields which, as of now, is not in the spec but is very popular and will even compile in today's Chrome; without that, member variables would be defined in the constructor)
Give you all of like 5 seconds to type is not a good way to measure typing speed. The "retry" button has to be clicked (let me press spacebar or enter to retry), meaning I have to context switch from typing to using my mouse every 5 seconds. I have to context switch from typing to [not typing] every 5 seconds, just from the fact that the test ends in the middle of a line of code. Give it like 30 seconds or something to get a real metric. Also some of the tests are significantly easier. One line of code had two symbols `{}`, while another has at least 20. The top score is going to be whoever gets the least symbols by coincidence. A longer test will increase the likelihood that the user didn't coincidentally get just two lines of code with no symbols in them.
[redux-saga](https://github.com/redux-saga/redux-saga) is using generator functions for sideeffects, pretty nice syntax and imho so much more readable than comparable concepts like RxJS
https://github.com/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+archived%3Afalse+language%3Ajavascript Really though, take a look at the libraries you like to use the most. I'm sure they have some open issues you could try to make a PR for, eg. https://github.com/sass/sass/issues
I'm so embarrased! I did some testing locally and forgot to change the timer back to 60 seconds when I pushed up the changes. But if you managed to get that high score in 6 seconds you are gonna completely smash the highscore :). It is back to 60 seconds. Sorry mate.
JavaScript is a weakly typed language. This means that you don't declare the type of a variable before you assign a value to it. You don't declare object properties and any variable/property can change their type simply by assigning a different value to it. If you are looking for a bit more type safety to feel secure, I would suggest learning TypeScript. It compiles into Javascript but looks a bit more familiar to a Java/C++ developer.
Pretty amazing after learning for 2 months. I would suggest using some ES6 just to get used to it. With it you'll be able to make a few of your functions more readable with the arrow function. I would also say try and think in responsiveness, it's not JS related but it helps to develop an overview of the whole app and make sure it fits everywhere. This is just something to keep in mind of for your own knowledge, but your app is great.
&gt;Give Award &gt; &gt;share &gt; &gt;report Thanks, yeah responsiveness isnt the main focus of the app. Learning ES6 at the moment and I'm quite surprised how much I can lower my code.
Honestly the code is \*pretty good\*. The only thing I'd state is that both the paradigm and the features you're using are a little dated (dated by around 7 years). There are more modern techniques and features. Eg. let/const, template literals, being a bit more functional instead of "faux classes". Some things to reduce code size: 1. Right now you're manually updating the DOM whenever your data changes. This is fine, but much of your code is handling UI updates. Many libraries out there let you separate your rendering logic from your business logic. I think you can't really simplify without either A using a library or B doing a full page re-render every time a change occurs. I think for a simple application like this a full screen re-render (that is, templating the whole screen and then injecting the latest html on every data change) won't be so bad honestly. 2. Template literals - I see you have your own mini-templating system. Template literals are widely supported in many browsers. I'd recommend that over replacing variables in strings.
The main purpose of this app is to use ES5 as Jonas(The lector of the course) wanted to. I don't think I'm gonna use raw JS for real projects because it takes more time but hey I need to master JS before going to any JS framework. I know that there are libraries which can help me but as I stated the main purpose is just to practice plain old JS.
Why do you use safari?
It’s the default browser that came with my iPhone, it has all the features I need, and downloading another browser would simply take up more space on my phone. I have no compelling reasons to install Chrome on my phone.
\&gt;seasoned and you didn't think to read any kind of JavaScript tutorial before asking "how do I program in JavaScript" here?
Two months in fair play great job 👍 keep on smashing it, definitely look into responsive design, a few bits of intermediate CSS &amp; Sass can do wonders 😁
Thanks! That makes sense. I always download chrome right away since I run into much less problems with it, and I sometimes forget that that's not important to everyone.
I mean I pretty much use it for quick google searches, occasionally checking Facebook and my credit card website, and porn, and it does all those things like a champ. I guess if I used a mobile web browser more often I’d download chrome and sign in so I’d have all my bookmarks and stuff, but I just don’t 🤷‍♂️
Thanks! The main focus in the app is JS, didnt rly took into account CSS.
Ahh that makes sense, no wonder I thought it looked like 7 years ago (because ES5)! Personally, I'm heavily biased towards React. The reason I went with it - say over Vue.js - is because I spent much of my career fighting these systems that are less functional, less reactive and have all sorts of side effects. React, is \*fairly\* side effect free. Vue.js' syntax honestly just reminds me of Backbone.js or Angular, it doesn't seem like a paradigm shift it just seems like a better version of these older technologies. Meanwhile in React land we have this stateful, simple rendering system that's a bit more purist. I may be poorly characterizing Vue of course, I haven't used it in any meaningful way. From my perspective the case for Vue is simply that it wasn't started by Facebook and I'm not sure that's ever a good reason to pick a technology. Consider that many other parts of modern stacks have been contributed to by Facebook. Re: PHP - 10 -&gt; 15 years ago I was using plain PHP and CakePHP a lot. One of my previous gigs was using Python + Django. These days, I'm purely using Node. PHP will continue to be used heavily, but I do recommend exploring other languages. I'm unsure many companies are starting these days on PHP, definitely not willingly.
I'm language agnostic I don't have problems with languages even if its C. I'm looking at the things from a Business point of view. Yes PHP is a dying technology but if we talk about freelancing it's king. And I want to be a freelancer so I'm going there for now
Fair enough for two months! I don’t have a lot in the way of constructive criticisms that hasn’t already been said, Obviously let and const will be a big help to you. However , some observation and advice ! 1) I’m gonna go out on a limb and guess your using Vscode ? (Your comments look like Better Comment mark-up) You can actually take your comments one step further with JSDOCS it’s a style of commenting that tells you much more information about literally any part of your code. For example /* *@function Sum *@description - returns the sum of parameter * a and b *@parameter a - The first number to sum *@parameter b - The second number to sum */ Function sum (a,b){ Return a+b } The coolest part is editors like Vscode , when you use sum() Will actually pop up your comments so you don’t have to scroll back up to see what they do!
Thank you for the reference.Ill surely read that to clear some things out.I try to watch as new tutorials as possible.
Yeah I am using VS Code and Better comments. Will definetely take a look at this extension
Hi /u/Yosoku, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
It’s not a extension , it’s built into JavaScript!
That's a good way to be. Good luck to you, great work on this app :)!
 `function getUsernames(string){` `let result=[]` `let match = UserRegex.exec(string);` `while(match){` `result.push(match)` `match = UserRegex.exec(string);` `}` `return result` `}` I'm not sure generators are worth it. Pretty simple to do without them.
Your more than welcome to submit a pull request on mine , I won’t look a gift horse in the mouth https://github.com/miaklwalker/BrickBreaker
thats amazing thank you... how would you tho make it to loop over again and again so it's sort of will be an infinite loop?
Oh I see now, thanks!
Thanks again and have a nice day!
The other answers here are good, so I won’t burden you with my own answers to your specific questions. However, if you really want to incorporate more JavaScript into your projects, you will definitely want to get familiar with its type system. Honestly, it can be a pain sometimes, but it can be helpful as well. I recommend reading this resource in particular: https://javascript.info/types As others have mentioned, TypeScript will probably give you a more intuitive experience. It is “compiled” (really just transpiled) into JS, and will accept explicit type declarations and statically analyze your code to make sure your types are safe. It’s not perfect, but it’s helpful, and it offers some additional tooling features. Also, for fun: http://javascriptisnotjava.com/
I dont have a console here but I 'd guess that pressing Tab does not create whitespace, unlike in a texteditor. But you can do this by using the space key and the interpreter will ignore all whitespace. So if the code doesn' t work, there is probably a different issue.
Well it does actually appear to be working NOW, wasn’t able to indent it but I can execute it properly. I have no idea what got it to work though fml 😂
The tabs and spaces are called "White space". In Javascript It really wont affect your code if you do either. Maybe try a repl if you do not feel comfortable using the chrome console. [https://repl.it/languages](https://repl.it/languages) | scroll down to "WEB" and select "Javascript"
Honestly im getting used to it by 5+ hours of playing with it. \+1 for this site,they should use it in their documentation for people like us who think "oh it must be java like right?"
I’m not sure how I messed it up the first time around but I tried over with a new array and I can get it to display fine, like both of you said the space seems to be irrelevant. Thank you! I still am curious as to why it looks different but I get the same result. As far as I can tell in the video his line just starts at a different point automatically.
Excellent work.
Well I’m glad that it doesn’t actually matter and it’s working fine I am still confused as to why his line starts at a different point. Thank you for the very quick response btw.
Thanks a lot I never thought about contributing to something a lot of people actually use.
Woow amazing! Well done
Yes sir ! Best of luck ! Stay humble!
Writing clear, relevant tutorials is a learned skill that many people do not possess. Most tutorials on Medium, for example, just use the same simple scenario that everyone else uses (e.g. the Fibonacci function for recursion), and nobody ever sees a practical use case.
Looks interesting, but isnt it just the same as a docker-container?
Then, instead of using setTimeout, use setInterval, which repeats the code at given interval. For example setInterval(nextSlide(), 5000)、which triggers the function nextSlide every 5000 milliseconds, so every 5 seconds.
Also pretty sure all other iPhone browsers are forced to use Safari (apple webkit) as their engine. (Due to app stores rules on replicating system features). They simply wrapper around it and add new features I believe.
I’ve stopped using chrome altogether. Not comfy with the amount of data (if any - even perception of it send ing data) it does/can send back to Google. Ironic cause i still use google search as default cause duck duck go and others just suck. :(
Cool! Until I spawned inside the box :L
`lotsOfBytes` is local to `aTest`. It will be immediately cleaned up if nothing is left around to refer to it after the function completes. This doesn't happen because one of the callbacks that refers to it becomes persistent in the internals of `setImmediate` (the other one goes unused and is as good as forgotten). Once `setImmediate` completes, it will release its hold on the callback freeing it up for garbage collection. When nothing else refers to the callback, its good to go. And when it goes, so does the environment it held on to to keep its reference to `lotsOfBytes`. With that gone, nothing is left to refer to `lotsOfBytes` so it can also be cleaned up.
Have a nice day!
Thank you, very cool!
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
Nope they all have licenses. @overnightjs/core @overnightjs/logger and @overnightjs/jwt each have an MIT license.
&gt; Doesn’t work on mobile safari for me &gt; I have no compelling reasons to install Chrome on my phone. Hmmm...
this was actually hella fun. gg whoever was circling the fish tank and dancing with me
We need to go further, make a Counter-Strike Source with CSS. CSS in CSS if you will
The best thing is when you get to fix a thing that's been bothering you in something you actually use. You get experience, *and* the thing you're using is even better than before. :D
Any reason not to include it in the root folder of the repo? Lots of people only look in the root folder and without a license it could shy people away from looking further into your awesome-looking project.
Oh yeah. That makes a ton of sense. Thanks!
Well the root folder is for the sample project and the library that's why its not in there. But thanks for the suggestion, I guess if it's convention to have it the root project as well for things like that I'll put one in.
Great. New cancer coming to all browsers.
YO dawg, I herd you like CSS so i put CSS in your CSS so you can style while you SASS
Running a css shooter on my phone is *not* a compelling reason when I’ve run into zero issues on any other website.
Also keeps the bots away.
This is why we don’t use the blink tag. Well this isn’t why, but it’s also why
Thanks! That is an amazing piece of work! You should be proud!
startpage.com would be good for you then, it uses some kind of proxied google search so your data is not being stored from your searches, but it uses google's search results
Any tips to improve my PiRover's control web page spaghetti code would be appreciated. [https://github.com/MrDyne/PiRover/blob/master/www/index.htm](https://github.com/MrDyne/PiRover/blob/master/www/index.htm) Few things I haven't been able to figure how to do is per button click releases instead of a global release event, and a better ASDW 8 direction keyboard mixing system that would also let me use the arrow keys to control the pan/tilt camera while driving.
You’ve asked a question that can be answered in many many different ways depending on the purpose of your application. By the sounds of it though you don’t want to manage a server/nginx. So it would be worth taking a look at a service like AWS from Amazon and maybe the aws amplify framework. For example: You could host your front end code in an S3 bucket and the backend in a lambda service. With API gateway taking care of the connections in between. Google and Microsoft also have similar products but from experience you can signup to AWS and get most services for free for a while. There a quite a few guides online on how to do this, so I’ll leave the Googling to you.
Yeah I knew this would be a rabbit hole of a question but you did give me a good 30k foot view answer. I was hoping to avoid paying for service as this is a personal project but I'll look into AWS, Google Cloud and others.
Thanks for the link. Good reading for tonight.
Ha, yeah, it’s actually super relevant for people looking for jobs. It’s amazing how many recruiters don’t know the difference, even when they are specifically recruiting for tech jobs.
If you want to avoid paying anything since this is your personal project, you might want to check out Heroku. I've hosted multiple personal project with React as front end and Express as backend. You can PM me if you've any questions.
I've found it works well when you're using a load balancer and may have requests going to a number of different servers. You don't have to worry about session stickiness since it's all stateless.
Oh. Will try that out then. Thanks!
Hi /u/gent79reid, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/apsv360, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/RuSiriusBl, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/BurbankMike, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/vexir, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Understood. I thought inline profiling might be an advanced topic, but I'll take it to /r/learnjavascript if you think that's a better place for it!
Here's a sneak peek of /r/learnjavascript using the [top posts](https://np.reddit.com/r/learnjavascript/top/?sort=top&amp;t=year) of the year! \#1: [All JavaScript concepts you should know in one single repository](https://github.com/leonardomso/33-js-concepts) | [22 comments](https://np.reddit.com/r/learnjavascript/comments/a17g4t/all_javascript_concepts_you_should_know_in_one/) \#2: [Microsoft has open sourced their Frontend Bootcamp training materials (including React and Redux exercises)](https://github.com/Microsoft/frontend-bootcamp) | [8 comments](https://np.reddit.com/r/learnjavascript/comments/auw1el/microsoft_has_open_sourced_their_frontend/) \#3: [JavaScript Functions - 4 Ways](https://i.redd.it/1x4ho2qngv421.jpg) | [28 comments](https://np.reddit.com/r/learnjavascript/comments/a74ipf/javascript_functions_4_ways/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
Useless. But damn cool. I love it.
I probably should have removed it under the "low-effort content" rule, because just googling your question I get a lot of different options. It doesn't sound like you even checked?
You win.
Generators and continuations are not strictly FP, but there is a FP style Called [continuation passing style](https://en.wikipedia.org/wiki/Continuation-passing_style) It is not that popular except
For a small personal project like that, a serverless cloud deployment should be so cheap it's practically free.
Generally speaking this is some 1998 geocities cancer, but I can see a use for having like a loading percent for a game in the tab.
A wrapper on a wrapper?
Only difference is that OPs implementation would lazily produce matches.
I'm pretty sure it's a joke
Proxies can’t be fully polyfilled.
What is the issue with using redux in a small app? It’s a ridiculously small library, the boilerplate is minimal once you find your preferred workflow and encourages declarative changes to global state, with amazing dev tools with time travel. All these things are desirable regardless of the project size.
You’d rather use C than JS? C# I could understand but C/C++ no
That hand...why does it look like the the Doom guys hand from Doom1 and 2
What is the point of this? Also, it is not the same as typing in an IDE.
We're not here to do your homework.
This depends on whether you're basing uniqueness on based off of the reference or the contents of the object.
this looks amazing, im going to try this out
Wasnt the same part of node js udemy course ?
 const _ = require("lodash/fp"); const list = [ {x:1, y:2}, {x:1, y:2}, {x:3, y:1}, {x:3, y:1}, {x:5, y:3}, ] const fn = _.pipe(_.uniqBy("x"), _.uniqBy("y")) console.log(fn(list));
Does this require you to pay for a service? Downloading the extension doesn't seem to do anything besides create a button in vscode to a blank sidebar.
Use a [set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set).
I disagree, I just showed this to my class and they all loved it. You never know if the users want to be abused, don't restrict my web freedom.
Also to add, "closure" is commonly implemented as an object that's reachable by the inner functions. JS engines would look at all the variables in the outer function that's still reachable by the inner function and create a hidden object with it. When you do a memory profiler, you can see the size of those objects.
 I'd normally use reduce for this, something like this. const getUnique = (list) =&gt; { return list.reduce((items, item) =&gt; { const x = item.x; const y = item.y const found = items.find(i =&gt; i.x === x &amp;&amp; i.y === y); if (found) { return items; } items.push({ x: x, y: y}); return items; }, []); };
I think the code speaks the latter case.
Can someone help me understand this? A user can do whatever he wants with client side code. How is this prototype vulnerability any different or worse than simply modifying the code at runtime?
You have no way of knowing what the code speaks by looking at it, and there is an important difference.
Thanks, glad to find out lodash/fp.
It doesn't work if items are objects.
Very elegant code, thanks.
Holy shit dude. You’re a fucking prick. This question is 100% valid and absolutely pertains to your original question. &gt; Stop making nonsense comments to show off your [lack of] JavaScript knowledge.
Ok, now I'm curious maybe I'm ignorant. If unique base on reference, how can `getUnique(list)` not returns what I ask it to return?
This destroys the back button 😕
Use a map and index by property: `[...(new Map(arr.map((e) =&gt; [e.id, e]))).values()]`
If the same { x:1, y:2 } object were pushed into the array, then unique by reference would return what you asked.
Maybe it could be a problem if there is a way for one user to send another user a JSON object as might be the case in an online game or multi-user chat. The attacker could crash the web browser of the victim if they were tricky enough. They might also be able to trick the victim’s browser into doing an authenticated transaction.
🤠
Would modifying the history get around that? (Oh god, I'm supporting emoji URL cancer 😂) [https://developer.mozilla.org/en-US/docs/Web/API/History\_API](https://developer.mozilla.org/en-US/docs/Web/API/History_API)
&gt;const list = \[ {x:1, y:2}, {x:1, y:2}, {x:3, y:1}, {x:3, y:1}, {x:5, y:3}, \] Does it look like what you described from the code?
Uhhh, how do I move? I've tried arrow keys, WASD, and moving my mouse every which way. I can shoot, and I can jump. I mashed every key on my keyboard. Haven't moved yet.
[https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript](https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript)
Thanks for pointing that out. I think I should have turned mouseleave detection on by default. I checked several car configurators used by major car manufacturers and some of them were terminating image movement on mouseleave while others did not. I wasn't sure about my own opinion on that.
No problemo! Sorry about that!
I wouldn't spin up a git repo _inside_ your DropBox folder, imo. a) It kind of defeats the purpose of using either DropBox or git. b) It can quickly become a mess with 'conflicted copy' files if multiple people are working on the project. c) DropBox, if I'm not mistaken, is kind of like an auto-git for your files. It versions them.
All great points. I don’t use dropbox seriously for this kind of work, but because I work on both windows and OS X, I like to have an easy to access directory for both of them. It was a natural place for me to put a disposable demo, but I shouldn’t have a distracting directory like that in the article. I’ll replace it, thanks.
Indeed. It is from a course called "the complete JavaScript course" by Jonas Schmedtmann.
Trick the victims browser into *attempting* an authenticated transaction. Unless the authentication is only happening client side (which would be moronic) the server will kick back 401.
Hi /u/financial_azaadi, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I love how people writes posts about JavaScript, but then they are written in Typescript. It may a subset of JS, but it's not it.
In your opening you mention "mardkown" Just a small typo. Cool stuff though!
Array.From(new Set(list))
Project Page (?): https://github.com/naver/egjs-flicking *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Github: https://github.com/naver/egjs-flicking
I did, but I was only able to get results saying to use the profiler in Chrome. I’m too new to JS to know the terminology to properly search for what I’m looking for. What were your search terms?
I think that’s because you spawned in a collision box and when that happens you can’t move, just jump and shoot
I never understood paying monthly for a WYSIWYG editor
Most applications will wrap the requests with a service which attaches the headers automatically.
The function fadeOut adds a black, slightly transparent layer to the canvas, and increments a counter. It's called repeatedly over a short period of time (by a setInterval), so that every time the canvas gets a little bit darker, until it's completely black and the counter reaches the value 2. When this happens, as you can see in the if block, the interval that called the function is removed and other stuff is initialized. Note that setInterval is not a good way to make animations, as it's not very precise, and it's not optimized for fast animations. I suggest you to give a look to the method window.requestAnimationFrames, that is specifically made for this. Also, i don't know the requirements for your school project, but remember that you don't necessarily have to make everything in canvas, you can always make the gui using html real buttons, that also have the advantage of having a better accessibility
Yeah the app is from Jonas's course. However I did it from scratch to test my skills. Theres no point to post this app here if I just copied code..
Yeah. Saw you credited him on GitHub as well. All good. Took the same course as well and did the same as you for some parts to test what I learnt. What did you think of the course overall?
This course is amazing! I took several JS courses ( Colt Steele JS part from udemy web developer bootcamp, the net ninja all playlists on youtube, traversy media all js playlists on youtube ) before going through Jonas one. At the first point i was trying just to do the projects but hell no I didnt know so much stuff. Module Design Pattern ESa5 is one of them. The most important thing I learnt was JS behind the scenes
I read Netflix first and I can confirm, Netflix does the opposite of helping building anything.
It's also terrible for the insane amount of files your node_modules carry. Dropbox doesn't care about your .gitignore 🤣 Fans will be spun. CPU cores will be tested. It's never good haha. Never again will I use a JS project in Dropbox 💥
Im at ES6 features rn, I know ES6 and again there are some things which i didnt know, "for of" etc.
I think Im gonna make another reddit post with all the resources I have to master Front-End development. I think its a good idea
It's a cool side project... Don't be rude!
Maybe I'm missing something, but wouldn't web workers do this neatly? If the main thread handles management and the workers each an instance of the 'heavy' code, there's a decent separation of duties. The number of them running concurrently would be easy to control as well.
&gt;Ah ok thx i understand now . &gt; &gt;For our school project we are only able to use Javascript/html5 or processing 3
not sure if crossposting was the right call.. apologies if this is against the rules.
Same happens to me
You're almost there. The term "Wrap the call to **getWeather** in a console.log()" means that you should place the `console.log` **outside** the call to `getWeather`. Like this ``` const getWeather = function(country, weatherType) { return 'The weather in ' + country + ' is ' + weatherType); } console.log(getWeather('Scotland', 'rainy')); ```
It say the function should return, not the function should print or log, the string. Other than that, looks grand.
You beauty. This was what I was concerned about last night. The below runs fine too, any comments/tips about presentation? I totally forgot about the return function too, which is why I couldn't get it to run last night. Thanks for your help! &amp;#x200B; &gt;const getWeather = function(country, weatherType) { return 'The weather in ' + country + ' is ' + weatherType; }; console.log(getWeather('Scotland','sunny'));
[removed]
Thanks for this, yeah I think I jumped the gun with that - pulled it all into the function when I needn't have!
This is exactly what git provides though, as long as you commit/push/pull.
If you want to get a little fancy you can get rid of the + signs like this: &amp;#x200B; return \`The weather in ${country} is ${weatherType}\`; &amp;#x200B; It essentially does the same thing, but imo it looks a lot cleaner. I tend to try and use this method rather than doing someString + someValue where possible but it is really down to preference.
VS code is an editor and livereload is an extension for the editor. Gulp is a build system. It’s independent of your editor and can be ran on your terminal. These are likely 2 separate ways of implementing the same thing but being triggered in slightly different ways.
Thanks, I'll have a play with this tonight and get a feel.
&gt;Amidst the FUD, I think it’s important to keep a balanced perspective. FUD? Companies have reported very real problems that they've had. Calling that "FUD" is ridiculous.
Nae bosh. Feel free to drop me a message if you get stuck with anything, more than happy to help you out.
So why would i add all the complexity (that i don't need) to add a features that i already have on this extension ?
Javascript is a programming language, for the most part it can do anything you want it to do if you're willing to put in the time... Webpages without javascript for the most part are fairly static, javascript can add a lot of user interactivity/responsiveness if that's what you want to do. Knowing nothing about your business it's impossible to say what you could do with it.
Are you asking for opinions on the "coolest", "most valuable"?
I run a similar setup and if I don't want to push to the repo I use git bundles
If your goal is to optimize your business I don't think you need to learn js
You can get even fancier with es6 arrow functions const getWeather = (country, weather) =&gt; `The weather in ${country} is ${weather}` console.log(getWeather ('Scotland', 'sunny'))
the GPL license kinda kills it for me...
Hi /u/tortita-fg, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I love this!! good job
So livereload has multiple different issues where it doesn’t just reload because of things like webpack etc. These integrations trigger livereload to actually fire. My suggestion is do whatever is comfortable for you using the tools you have or want to use. You shouldn’t need both. It’s more of options of integration points in your build process.
I assume youre accessing the development environment via localhost? then localhost will be probably the same path as your project folder. If you now move the PDF in question to projectFolder/file.pdf &amp;#x200B; and try to access it via /file.pdf in your application, that should work
try file:///c:/pdf/myFile.pdf
Most valuable , i'm interested in having an edge and running an online business efficiently
Ho I did. I did both.
Well, I guess, but since the backend generates the pdf file, I don't really think saving it in the frontend folders is a good solution. If I don't find anything else i'll try to save the byte[] as a pdf from VueJs's code but I feel like having the backend take that care would be better.
You said the backend generate the pdf. Then it should return the pdf back to the client. On the frontend you are not suppose to give a path to a file but pass the data sent from the backend
Interesting take .. But I read it's very useful for ad campaigns because of tracking which basically is the basis for conversions ??
Sounds like you need a server route to return the file. The browser can't access your local disk. So the answer depends on how your server is setup. If it's node js, you can use the "fs" module to read from disk. If you're using express for the server, I would just Google how to serve static files.
I understand that. I started by trying to display the byte[] sent by the backend. To no avail. Hence my current attempts at fetching the pdf file instead of the byte[]. If you have an advice on how to do it, i'm interested.
Hi /u/tylerslemke, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Chsvk21, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Try using async/await
You need to read up on how promises work. You can either wrap in an async function and use await. Since async functions also return a promise, you will need to convert anything wrapping them to async functions as well. Or you can return the promise and use .then() in the calling function.
upvoted for mentioning I2C in the JavaScript subreddit :D
Have you tried Gridsome? Better than VuePress IMO
If you're working on an open source project, CKEditor team runs a "Free for Open Source" initiative and you can get e.g. CKEditor 5 under an MIT-compatible license for your project.
Well, the backend server is a dotnet core api, it runs in IIS, and the frontend is made with vue so yeah, it's node, but I don't really have the hands in the config. As I said I'm no javascript expert; but from what I got the issue here is not to serve a static file, but to access a file from outside "the app's scope", which seems to be limited to the source folder.
Because your code isnt loading the images one by one. It leads a list of image URIs and appends `img` elements with those URIs to the DOM one by one. Appending elements to the DOM happens very quickly, and the image loading is something your browser does. The images dont actually get touched by your code at all, they just provide resources for the browser to look up.
[removed]
Hi /u/mekwall, this comment was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi /u/ruslankorsar, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Most the AirBnB rule set with a few alterations (such as turning off the one for alphabetical imports, and turning on semicolons)
But even when I add setTimeout in the for loop, it doesn't wait. &amp;#x200B; for (var i = 0; i &lt; arrayOfGifs.length; i++){ let newImage = document.createElement('img'); newImage.classList.add('gifImage'); newImage.src = arrayOfGifs\[i\].images.original.url; setTimeout( () =&gt; { gifsContainer.append(newImage); }, 2000) }
Typescript is a superset, not a subset.
that's because in your example here, you're just setting multiple timeouts that fire at the same time still. try changing your duration of the timeout to be something like (250\*i), so that each image will increase the duration.
Wrote this earlier but got it removed due to mediums share link format. You are mistaken. They are not loaded in a sequential order. JavaScript executes your code in a so called event loop and the for-loop in your code will finish executing in one single cycle. After that your browser takes over and will try and load all the images at ones because that's how it got them. If you want to load them sequentially you need to set it up manually by listening to the load event of the image and when that is triggered load the next image in the queue. There are libraries out there that can help. Look for sequential promises. You can learn more about the Javascript event loop in the Medium article “JavaScript Event Loop Explained” by Anoop Raveendran (not sure how to share Medium links without getting the comment flagged).
People have been asking Dropbox for a .dropboxignore file a la .gitignore for almost ten years. Sucks
It will be more better if you learn the concepts of the tools you may use. Like Chat bot, analytics so you can explain more easily your strategies. Learning to code won't help you with that. Designing those systems is beyond coding. I don't recommend to learn the intricacies, but a general overview will be sufficient
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.
Why not just serve the PDF from an HTTP server and make an AJAX request to fetch it?
Thank you for the advice . Chatbot , analytics .. Sounds more towards Data science field , Can Data science &amp; Machine Learning be helpful instead of learning javascript ?
Hi /u/zezito_js, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yes, if you replaced the previous state, you would support back button
Dropbox CLI can [exclude folders](http://www.dropboxwiki.com/tips-and-tricks/using-the-official-dropbox-command-line-interface-cli#EXCLUDE), but yes - I would *never* use Dropbox to track my dev projects
Hi /u/merkur0, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Forummer0-3-8, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/questi0nmark2, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/DoctorPrisme, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Chhekur, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
How do you generate the PDF on the backend?
Hi /u/Earnabdel, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/WickerTongue, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/amine-louni, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/marapun, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/rubenspgcavalcante, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Completely understand. Thanks for your guidance!
And.. cut the scene to a meteor hurling towards it. "Razor &amp; Blazor, with a hot C# core", declared the bold letters on the rock. (I am a Javascript guy for all times - just sayin')
Looks interesting. Do you think there's any way to get Typescript to pick up on the route parameter names?
probably! just need a generic, I think. I'll try something out.
oh yeah! I'll add MIT
Hi /u/Chawki_, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Kage_R, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/FateRiddle, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
\&gt; mardkown Oh fuck me, there's *another framework to learn?!*
I've used Heroku in the past myself as well and it's been great. They make integrating with GitHub very easy. In reality though I should be tying in services like AWS into my projects in order to develop myself into a better developer. As good as Heroku is I've never heard established companies using them.
Better remove anything "Dropbox" on your tutorial. It is not needed at all.
I'm still conflicted between VuePress/Docute/Docsify, can't decide
If the client is already authenticated then how would the server know which actions are legit and which are hacked?
Good point.
See that's where I'm confused. The iteration is done synchronously no \`for await\` so... it's not lazy?
Uses git repo in Dropbox directory Wat
Hi /u/HarmonicAscendant, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
`task().catch(() =&gt; { throw .. })` is not assigned, it will cause an uncaught promise error
Ever heard of github?
I work from the command line a lot and until recently Dropbox was just more reliable for me than iCloud. I use it out of habit for disposable projects.
Website is not working for me.
Huh. Worked for me.
Hi /u/IliasHad, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/saritekin, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Anyone have a transcript or a tl;dl?
Done
Just revised to omit Dropbox and use my standard working directory, which makes me feel weirdly exposed
Plottable is quite good if you're looking for something written in TypeScript. http://plottablejs.org/
I think i tried almost all of the libraries in the blog post, but to me React timeseries worked the best, it's really under the radar, but put together well https://github.com/esnet/react-timeseries-charts/
TBH I am more interested in the network code. I like to dive into graphics programming as well, but coding for networked games still is a tricky beast for me. More so if it's real-time
[dat.GUI](http://workshop.chromeexperiments.com/examples/gui/#1--Basic-Usage)?
Should be titled "React Chart Libraries". I was hoping for something more interesting.
Hi /u/pelican_chorus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/FlorinPop17, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I'm in the middle of creating a pure css, fast framework with scss and would love some contributors. https://github.com/ainsleyclark/mesh
You don't need to know JS for this, I'm sure you could pay for a service or use a plugin
Interactive and configurable graphs with react and d3 effortlessly. https://github.com/danielcaldas/react-d3-graph
Hi /u/GarryHunter, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/cheeseisakindof, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Of course it's gonna be IE's fault it exista.
Someone's trying to get a Big4 job.
Thank you!! Been looking for a carousel like this to replace swiper, swiper.js was just too bloated with features
This is super useful, thank you.
Any feedback or questions are more than welcome :)
This has inspired me to write an article titled “Low level kernel development in VBA”
Have you ever heard about our lord and saviour, TypeScript?
Gridsome looks great. Didn't know about it until you pointed the way. Thanks. I have become quite attached to VuePress, and I really need to settle down with my CMS involvements, but the GraphQL support is awfully appealing.
I too am inspired to explain how I wrote an operating system using twix wrappers.
Thanks, I’m building some stuff with it but Expo doesn’t support hooks yet unfortunately
Haha, that’s funny. Still, to me this is super useful since I breathe Javascript, I feel the language is super powerfull and everywhere nowadays, and many data science problems don’t need super performance optimized numpy / scipy / what have you - libs
Thanks you so much for sharing this
I too am inspired to explain how I wrote an AI framework using some sand I found in my pocket
Bosque now
I don't know who you are, but I think i fell in love with you. Thank you for sharing; I was looking for this.
Better write a medium article about fatigue.
Gross. Looks like shitty operator overloading, but only for \`=\`. I'm curious how the "reference" return syntax looks.
I have been going through these for a while. Though seeing dsa.js made me think of dsa.msc. I thought we were about to some active directory administration with JavaScript... Well, there's always Powershell...
me too wait no
[removed]
I hate that “grok” is a buzzword these days. Much more people will “grok” what you are saying if you just use “understand” instead.
Hi /u/immortalcoder, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
You must be absolute mad doing this with css lol
I to am inspired to expose the original concept behind u/hypocrisyhunter's OS wasn't just the wrappers, but the whole damned twix! And, accidentally, an infinite loop which, to this day, has not been tracked down. After numerous tests, resource monitoring invariably revealed 100% chocolatey, biscuity consumption. This lead to a shift in the marketing focus to the current wrapper-only variant described above. Sorry dude, this kind of thing never stays secret forever. Someone had to say something, and I couldn't sit on the lie any longer. It's better this way. And besides, at least you didn't use Boost bars!
ugh. I got really sick of going through CS exercises from the cracking the coding interview book.
Khan Academy has a great series on JS. SoloLearn has a good app as well that covers the basics of a lot of different languages and concepts.
Thanks. Had no idea KA had any programming stuff
This timing, was just thinking about trying to find something like this. tyty!
The Odin project, freecodeacademy, and udemy (if you don’t mind paying 10-20 bucks) are all solid
Yeah, they've been building on it for a while now. Mainly focused on graphics but, with your experience with C++ and Java, you'll be able to extrapolate a lot, even if that's not what you're into.
I don't use it... it's an example destroyed almost immediately but good catch. Article duly updated.
Not sure what you're asking about multiple keys, but you can tell if the mouse is "long" pressed even before it's released: let id; obj.addEventListener('mousedown', () =&gt; { id = setTimeout(() =&gt; { // ... }, 1000); }); obj.addEventListener('mouseup', () =&gt; { clearTimeout(id); id = undefined; });
Ah, thanks! Fixed.
I made a crappy prototype of how I'd set up a real-time polling application using server-side state management library synced with clients over websockets: [https://github.com/ChrisDillinger/polls-websockets/](https://github.com/ChrisDillinger/polls-websockets/) &amp;#x200B; I'm sure there are better solutions to use than Vuex (e.g. Redux w/ declarative state changes) but I'm on a Vue/Vuex bandwagon right now and just spending some time tinkering with it until I can assert some sort of level of expertise here. It'd be cool to turn this into an open source project, and I'd happily be an open source maintainer. The current plan is to mimick the usability model that [jsfiddle.net](https://jsfiddle.net) follows, but for handling short-lived Polls rather than javascript snippets. P.S. does anyone want to help me gain a better twitter following...? ( [https://twitter.com/CaffeinateOften](https://twitter.com/CaffeinateOften) )
I'm finding VuePress to be solid gold. Unfortunately for my productivity, I didn't know about Gridsome until /u/slaphappie pointed it out.
https://jsfiddle.net/rfne8u1t/ You just have to keep track of the state yourself. E.g. set some boolean to true on down and set it to false on up.
try out compodocs instead. I think you need the paid version to get this to work - or try [https://marketplace.visualstudio.com/items?itemName=AngularDoc.angulardoc-vscode](https://marketplace.visualstudio.com/items?itemName=AngularDoc.angulardoc-vscode)
Generators are also lazy. When a generator function yields a value, it ceases execution until next() is called on the iterable. The execution continues from the last yield statement until it reaches the next yield. Does that make sense?
You should be able to check for multiple keys by using keydown + keyup events and checking their keyCode. I recommend using a Map to set their current state(pressed/not pressed) Similarly(and with mouse buttons as well), you can tell something was long pressed by checking that it has not been unpressed after some time. Something like ``` function registerOnPressEvent(element, fn) { let longPressTimer; const mDownFn = (event) =&gt; { longPressTimer = setTimeout(300, fn) } const mUpFn = () =&gt; { if(longPressTimer) clearTimeout(longPressTimer) longPressTimer = null } element.addEventListener("mousedown", mDownFn) element.addEventListener("mouseup", mUpFn) return () =&gt; { element.removeEventListener("mousedown", mDownFn) element.removeEventListener("mouseup", mUpFn) } } // Usage const clearLongPress = registerLongPress(button, LongPressFunction); // When you no longer need the long press clearLongPress(); ``` The idea here is to encapsulate the long press behavior around the mousedown/up events with a custom timer(300ms here, might want to play a bit with it)
Are you sure that won't work? I've used a library called emotion that is virtually identical to styled components and scss syntax is supported.
Hi /u/JSunderling, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Check out Eureka and Zuul! Netflix can be helpful in the right situations.
There's. Misspelling under binary search tree `rigth` instead of `right`
The idea of [open/closed principle](https://en.m.wikipedia.org/wiki/Open%E2%80%93closed_principle) in this case is that one should be able to update how something works under the hood without having to modify every place it is used, only modifying the actual implementation. Because new is required by classes, there is no way to implement it as a factory function without wrapping it (twice as much boilerplate) or modifying every usage to remove new. I am not sure this is a perfect example of an open/closed principle violation, but the issue itself is a problem regardless of what it is called. Ease of refactor is arguably more important than ease of initial implementation, given the relative time spent doing each, and object-oriented styles (regardless of language) seem to be particularly lacking in this department, because they optimize for speed of initial development, the part of development most likely to be misinformed or underinformed on the final nature of the problem space.
What's wrong with that?
Thank you!
Who said there was something wrong with that?
My bad was misunderstanding you lol lots of people on other subreddits start getting pissy about this
How is the "default debugger" not working?
Obligitory [beware](https://www.reddit.com/r/javascript/comments/6q2lk0/why_composition_is_harder_with_classes/dku34cl/)^1 [referencing](https://www.reddit.com/r/javascript/comments/5c5lkq/what_eric_elliot_wants_to_say_can_somebody/d9u6tv3/)^2 or [learning](https://www.reddit.com/r/javascript/comments/837t82/who_are_some_of_your_favorite_speakers_educators/dvh0br6/)^3 from Eric Elliott. Constructors do not break the open-closed principle. Robert Martin -- the guy who coined SOLID, where the "O" stands for Open/Closed Principle -- wrote a [helpful column](https://web.archive.org/web/20150905081105/http://www.objectmentor.com/resources/articles/ocp.pdf). In his "bad" example, he shows a function that takes an array of shape objects, and the function type-checks each object to figure out the right thing to do. His code is in C; here it is translated to JavaScript: function drawAllShapes(shapeList) { for (const shape of shapeList) { switch (shape.itsType) { case "square": drawSquare(shape); break; case "circle": drawCircle(shape); break; } } } This code, according to Robert Martin, does not conform to the open/closed principle. And it has nothing to do with constructors vs factories. Rather, it doesn't conform, he says, "because it cannot be closed against new kinds of shapes. If I wanted to extend this function to be able to draw a list of shapes that included triangles, I would have to modify the function. In fact, I would have to modify the function for any new type of shape that I needed to draw." The solution to this problem is polymorphism by a base class or an interface. In his "good" example, he defines an abstract base class / interface called Shape, and defines Square and Circle classes that derive from Shape. Now the `drawAllShapes` function doesn't need to type-check anymore. Instead, it can rely on polymorphism to do the right thing for each type. His code is in C++; here it is translated to JavaScript: class Shape { draw() { // ... } } class Square extends Shape { draw() { // draw squares } } class Circle extends Shape { draw() { // draw circles } } function drawAllShapes(shapeList) { for (const shape of shapeList) { shape.draw(); } } "Note," Robert Martin says, "that if we want to extend the behavior of the drawAllShapes function to draw a new kind of shape, all we need do is add a new derivative of the Shape class. The drawAllShapes function does not need to change. Thus drawAllShapes conforms to the open-closed principle. Its behavior can be extended without modifying it."
 There is no error, but console.log ("hoge"); may not be output. I can fix it by restarting
... This sounds incorrect. If it's not output, I would argue that the problem is further up stream and the script just bombs out.
Looks like copilot published a bad version earlier and it now works. I'll try those out though!
There's something wrong about when you don't spell out that's what you're doing. If you want to say "here are some algorithms to learn for a FAANG interview", that's great. When it can mistakenly be read as "here are some algorithms you must know for an entry level frontend job" it just wastes people's time.
Didn't know about this, sounds interesting. Lemme add that to my growing list of things I'll never get around to reading!
There is chrome debugger. It does the job.
Hey, this is cool. Is VuePress good enough for blogs?
It sounds like your logic is wrong
There's no syntax. This is only available for _host_ objects.
Thanks so much for this!!
Yeah definitely but tbh I don't think learning these algorithms are a complete waste of time they definitely open up problem solving capabilities but I can see your point most of this will never be seen in a production environment
length of right subtree is called rigth.
thanks i use vs code with crome
\`Observables\` provides way to treat event as collection-over-time, allow applying various iterable-like operators to event stream. &amp;#x200B; For given example of longpress, rough pseudo can look like this: &amp;#x200B; \`\`\` const mouseUp = fromEvent(document, 'mouseup').pipe(timestamp()); const mouseDown = fromEvent(document, 'mousedown').pipe(timestamp()); zip(mouseDown, mouseUp).pipe( filter((\[down, up\]) =&gt; up.timestamp - down.timestamp &gt; LONGPRESS\_THRESHOLD) ).subscribe((x) =&gt; { console.log('longpress'); }); \`\`\` &amp;#x200B; Map each mouse event to its timestamp, and pair (zip) between down to up, then check if time diff's are in range of threshold and filter out short clicks.
Hi guys, This post is great! Thanks to the author. I'm interested in this kind of books/tutorials to know more about which are the best algorithms to use in a specific situation or which data structure would be the best in a situation looking for the most efficient way and with better performance. Any recommendation? (I'd like to be in JavaScript) Thanks in advance! :)
I'd have simplified this (bear with me, on mobile). const range = (start, end) =&gt; { const reversed = start &gt; end return Array.from( { length: reversed ? start - end : end - start }, (x, i) =&gt; reversed ? start + i : start - i ) } I've made some changes that are incompatible with your version. These are intentional because I believe it leads to code that is easier to both read and write. 1. Both start and end must be defined. A default starting position may cause confusion. For example, should a range start at 0 or 1? Will you remember which after months of not touching this code? Instead, when you need a range you should define the starting and ending points. 2. Abstract reused conditional to a variable. 3. Using `Array.from` in order to avoid extra iterations. The array is both created and mapped over at the same time. 4. Arrow function only because this is how I like to write functions unless I explicitly need features like `Function.bind`.
Bravoo. If you sat on the lie any longer you would have gotten chocolate all over your pants.
Long ago, before ecmascript was a thing, JavaScript 1.0, as implemented in Netscape 2.0 had a fun little feature: the ability to overload the `=` operator for any object. All you had to do was set an `assign` method on your objects, and that method would get called with the right hand side as the argument instead of the regular assignment behavior. so you could do something like: var obj = { state: 0, assign: function(v) { this.state = v; } }; obj = 3; // doesn't set obj, sets obj.state instead. I don't remember exactly when Brendan Eich removed it. It could have been with Netscape 3, but it definitely was gone by the time Netscape Communicator rolled around. So, in a way, IE had sort of a precedent for what they were doing.
Thanks! If I were you I wouldn't use VuePress for a blog unless you were willing to manage posts manually. It doesn't yet have a complete sense of how posts are categorized, displayed and so on. I think it's way better for pure information sites, namely techincal info.
Thank you. Guess I will go with Gridsome.
I love it when I come across demos like this one because it makes me realise there is still so much left for me to learn and indulge in (I say this because at work I sometimes get the feeling I just keep on doing the same thing over and over). &amp;#x200B; Thank you very much for sharing!
Thank you for your comment!
Problem solving capabilities is by doing exercises everyday. It takes practice. Not memorizing 5 6 algo to sound smart.
My book may work for you (free to read online): “[JavaScript for impatient programmers](http://exploringjs.com/impatient-js/)”
Code Complete 2 by Steve McConnell. Contains a few chapters on best practices. Loaded with useful advice. JavaScript Design Patterns by Addy Osmani of Google fame. Can’t go wrong with his advice. Bonus book: The Mythical Man Month by Frederick Brooks. Technology changes quickly, but people don’t. It’ll be of use to you as a consultant, I promise.
Thanks!
If you want to solve problems well, then it's good to have knowledge about a range of possible solutions. A lot of times it's more efficient to learn existing resources than stumble upon the solution yourself (e.g. design patterns). I'm not saying you need to learn every algo by heart, but if you at least know they exist, what they're for and when to use them, then you can easily just google the implementation when you encounter a good place to use them in the wild.
Desing patterns are design patterns this is another beast to tackle. And to be honest if you are designing stuff at that point this advice doesn't really apply anyway. No junior-middle will be allowed to bring a complete solution to a project, and a senior already knows. You can know all the theory to divide et impera, backtracking or greedy. But unless you hands down crunch problems you cannot apply it in the real world. At my stage(middle to senior) you dont even go to a interview unless you solve a problem first. And you can solve it, if you are doing exercises. Reality is ... you cant bullshit anymore and get the job anywhere. You can in certain positions but not everywhere.
1)[https://developer.mozilla.org/bm/docs/Web/JavaScript](https://developer.mozilla.org/bm/docs/Web/JavaScript) 2)[https://github.com/getify/You-Dont-Know-JS](https://github.com/getify/You-Dont-Know-JS) - has one part on ES6 3) [https://github.com/Airbnb/javascript](https://github.com/Airbnb/javascript) - best practices 4) Design pattern in JS - [https://addyosmani.com/resources/essentialjsdesignpatterns/book/](https://addyosmani.com/resources/essentialjsdesignpatterns/book/) (important ones are revealing module, module, mediator, pub/sub, factory) 5) Large scale JS architecture - [https://addyosmani.com/largescalejavascript/](https://addyosmani.com/largescalejavascript/) and [https://www.youtube.com/watch?v=b5pFv9NB9fs](https://www.youtube.com/watch?v=b5pFv9NB9fs)
Project Page (?): https://github.com/packem/docs *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
FYI, Packem is a new bundler written in Rust that is more than twice as fast as Parcel. It has a rich plugin system and a performant architecture. It is experimental now, so feel free to post any issue(s) regarding it!
I’ll take a look at it soon. Haven’t used Rust very much, but hopefully I’ll get it working. I don’t have very long build times for most of my projects, but it would be fun to run some benchmarks!
It's even tagged with "interview-preparation"
Caveat – this term is already used by the ECMAScript specification: https://tc39.github.io/ecma262/#sec-execution-contexts
The code works as expected; your for loop iterates from 1 to lower than 1, so it never enters. The "Waiting for the debugger to disconnect..." is just a message, not an error.
That seems easy enough, how can you do this for keys?
I’m new to coding other than codecademy JS years ago when I subbed to this reddit, but a question now that I did CS50 and am getting more into coding: what’s the usual difference in computational time when comparing the same algorithm in JS and something low level like C/CPP or Java?
[removed]
Interesting. I also realized it is common amongst V8 developers. Do you have any ideas on you?
Thanks for your feedback! Packem is still in pre-alpha. It is still buggy but still supports a handful of features. Feel free to post an issue over at the GitHub repo.
Thats nice, but did you know that SSE is almost (not officially) deprecated? There is an issue somewhere on github, about headers support in chromium repo and one of developers said there, that they don't work on it, because there will be Fetch API feature that will solve simillar problem.
inside the html add the controls property: &amp;#x200B; &lt;video src="" controls &gt; &amp;#x200B; [https://developer.mozilla.org/de/docs/Web/HTML/Element/video](https://developer.mozilla.org/de/docs/Web/HTML/Element/video) &amp;#x200B; \--------------- Aside from that as far as I know they want to disable autoplay in case it is not muted, same as in Safari. If your video won't have any kind of audio inside you can just use this: &amp;#x200B; &lt;video src="" autoplay muted playsinline &gt;
the problem is I cannot control the html. im using adobe captivate to make a course and loading it into an online learning system. One of the slides has a video that will not autoplay. no big deal. I created the button to start the video - no biggie. Problem im having is since I never clicked the 'play' icon on the center of the video the controls appear to be hidden behind it. the reason i am not clicking the 'play' icon is im trying to mimic a person who doesnt have mouse capability due to a disability.
If the play button is focusable, it should be able for a disabled person to start the video with the keyboard.
I get your point. I'm probably using it a little out of the formal definition. That being said though, it is only one of thousands (or at least hundreds) of new terms to learn in this field.
Did you get visualizations to work out of the box, or just the tree view?
good except for the Airbnb link, way too opinionated.
You can still kind of do this with proxies, right? var handler = { set: function(obj, key, val) { obj[key] = val + 4 return true } } var lol = new Proxy({}, handler) lol.age = 5 console.log(lol.age) // 9
You can do a.b = c with just setters too. But unlike setters that require a specific shape on the left hand side, both OP's reference and this ancient assign method allowed for any expression on the left hand side, as long as it evaluated into an object that overloaded assignment operations.
Hi /u/MeaningOfMaps, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/lokendra15, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mrdoctor, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/shibainuisno1, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/yogab75, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ropertz, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/justinh2008, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/shibainuisno1, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/delgoodie, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/imshubhamsingh, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/4tt1cu5, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/tiagosatur, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/samokoro, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Oh I'm stupid then. Carry on
Hi /u/DigitalOrigami, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to try /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Source?
ok thanks...
[https://github.com/whatwg/html/issues/2177#issuecomment-332071504](https://github.com/whatwg/html/issues/2177#issuecomment-332071504)
Every computer is different and every compiler/interpreter is different so there is no way to give you an accurate answer like "C++ is 20% faster than JavaScript." The real answer is to use something called "Big O" notation. For example, finding a value in an unsorted array of length N is O(N) because *on average* the value you're looking for is somewhere in the middle probably and for Big O problems you generally ignore constant numbers: so `O(N/2) -&gt; O(N)`. If you array is sorted, it can take O(log(N)) which means basically we are splitting the problem in half every step of the way. Quick example, we have a sorted array of 10 numbers [1, 2, 3, ..., 10] and we are looking for 7. Start in the middle (5), if our number (7) is bigger than that, completely ignore the left half and do it again with the right half. Every time our search runs we are checking half of the amount of data we were before. Across Javascript, C++, Java, or whatever, Big O notation is used to describe how fast an algorithm will run. Unless you are aiming to work at a Microsoft, Google, Facebook, etc you probably won't be using this day to day, but its useful to know things like "I should store my data in a Binary Tree because its faster for my use case." https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c http://bigocheatsheet.com/
For the love of Eich, please add pipeline operator.
was just kidding
Well then... I'm going back to sleep
"pardon the interruption but you have to log in." - The fuck I do.
Don't forget chaos monkey
I'm truly sorry, I will read the rules and follow them!
IMHO JS do not need new fancy operators and syntax - it needs Standard Library, mature community and ecosystem.
If you don't care about performance, sure. But don't pretend is has anything to do with "spending money". There are many high-performance free alternatives: * [Tarantool](https://www.tarantool.io/en/developers/) by Mail.ru * [FASTER](https://github.com/Microsoft/FASTER) by MS * [Badger](https://github.com/dgraph-io/badger) by DGraph * [LMDB](http://www.lmdb.tech/doc/) * [BoltDB](https://github.com/boltdb/bolt) * [Redis](https://redis.io/) They will all beat your naive database solution by a huge margin.
Interesting, thanks for the heads up.
How was this offtopic? It was looking for a specific javascript project (or a similar one). What other community would have been more appropriate?
Yes! Thank you.
Or use a div with zero size, border width and one colored border side :D
This is a broad generalization but the order from fastest to slowest would be C, Java, then JavaScript.
I connected some code to Redis last week with this https://redislabs.com/blog/redis-cloud-30mb-ram-30-connections-for-free. It was free to start and the first tier (all I need) is $5 per month. It was super easy and has all of the features I need.
Well that takes the place of most useless thing i have seen all day.
Because you are asking for help, and this is not a support forum. The "Low-effort Content" reason also applies. Prohibited low-effort content includes: * **Questions that are easily Google'd.** * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle), "Curated lists", and similar content. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.).
The question was not easily Googled, and I indicated that I had spent some time searching.
It's ugly tho
I hadn't realized that "asking for help" wasn't permitted, that was't clear. This clearly wasn't a "learn javascript" question, so it didn't seem appropriate for that forum. I see several recent posts that are questions. * Best way to write to the DOM after the script tag? * How To Keep Track of Your Pinned NPM Packages? * Can you help me understand why my method will not work within this class?
&gt; I hadn't realized that "asking for help" wasn't permitted, that was't clear. I'm not sure what to do here. As is noted in our guidelines (linked in the sidebar, which you're expected to have read &amp; understood before posting), as well as in pre-submission text (which you're also expected to have read &amp; understood before posting), it says in a large heading: **"/r/javascript is not a support channel"**. Do you understand what _support_ means in this context? In other words, do we need to clarify "support"? Or did you simply not read any of those things before posting? If that's the case, we can work to further increase visibility of that text. &gt; I see several recent posts that are questions. None of those posts are currently on our frontpage. Judging from the titles, they don't belong, so please report them. Also, take a look at my comment history, you'll see I remove a _lot_ of these posts. Note: not all question are strictly prohibited; just the mundane ones (and asking for help finding a lib is definitely mundane).
Hi /u/AlexAegis, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Man this is such a great community, I'm inspired by so much positivity
I’ve heard of next js but never tried it
I generally agree with you, but it's not always obvious from the name alone. E.g. `carModel`. Is that a string, or an object? It could be either: carModel = "2019 Toyota Corolla" carModel = { manufacturer: "Toyota", make: "Corolla", class: "Compact", year: 2019 } In these cases you need to look at comments, docs, use TypeScript, or use some kind of type signifier in the name.
Since the original link breaks on mobile, here is the actual video: https://www.youtube.com/watch?v=XYAgmj527PU
👍
Amazing work, thanks for sharing!
That might have been the case before this comment.
Yeah XD
Queues are definitely a thing you should know about. Sometimes your business logic is best implemented as queue, plus there's a million applications for them in more "under the hood" things, e.g. event queues, scheduling, etc. Stacks are probably more common and more important than queues, so learn those too. Stacks are pretty fundamental structures in CS and you can't really solve problems like "check if the parentheses in a string match" without a stack. Stacks and Queues are basically already in the JS standard library so you don't really need to implement them yourself. Graphs are like queues in that sometimes your business logic just requires you to understand them. Not understanding graph theory means that you might end up solving certain problems in a horribly inelegant way. Linked lists aren't really a thing in JS since we just use arrays, but they're a super common data structure in other languages and it's critical to understand them if you ever want to work on a project in another language Hash-array mapped tries are also an important data structure, but you don't really need to know how they work, just their performance characteristics. They're commonly used to implement Maps. Immutable JS uses them for their Lists too. As far as text recommendations, probably just read Sedgewick's book on data structures since that's the standard across CS departments. Take a good course on computer science as well. Probably a good idea to take classes on number theory, combinatorics, computer organization, networking, and operating systems.
I’m not sure the JS engine creates a precise object containing only what it needs for a closure. I think all the variable declarations in a function get added to its stack frame. When you nest a function, its stack frame retains a reference to its parent’s stack frame. I’m not sure there’s any optimisation to start clearing up unused values from the stack frames. But maybe that changes when the functions get hot. Then again I could be completely wrong on all of this. I’d be super interested to find out more!
Beatings will continue until code style improves.
Does anyone know how much new features slow down paring speed? https://medium.com/reloading/javascript-start-up-performance-69200f43b201
&gt; Linked lists aren't really a thing in JS since we just use arrays, but they're a super common data structure in other languages and it's critical to understand them if you ever want to work on a project in another language Linked Lists can be useful in JS too, e.g. to build LRU caches.
&gt; but I thought queues are pretty much redundand beacause of the way arrays work in Javascript. No. Queues aren't possible in Javascript. What makes a queue a queue isn't how you use it; you can keep any datastructure in any other datastructure and paint it to look like the other one. What makes a datastructure is how it's implemented, typically because of performance concerns. Javascript people use arrays as queues because they don't have a choice. Pushing onto the front of a JS array is extremely expensive. . &gt; Are there any ressources (books/websites/online courses) you can recommend, to learn more about the basics of computer science. Preferably demonstrated using javascript There are lots of documents out there professing to teach datastructures in Javascript. Run far away from them. You can't implement most datastructures in Javascript because of a lack of pointers and direct allocation. People will, I'm sure, try to argue with me, then get really angry at me when I'm unmoved. After all, some blog told them it was, and
&gt; Linked Lists can be useful in JS too, e.g. to build LRU caches. Linked lists don't exist in Javascript. Yes, I know you can take several objects and put references to one another into the objects. No, that's not a linked list.
Offhand, nothing. Naming is hard!
It's not bad if you use a fixer. Without one though, yeah, it is hell.
I'm a JS developer for three years and I can tell you that arrays and Maps can meet all your needs for non-specialized tasks. You don't need more. Do not try to over-engineer your data structures because that's the job of the compiler to optimize and you can't beat it ;)
That's like, the *definition* of a linked list lol.
&gt; No. Queues aren't possible in Javascript. lol.. &gt; Javascript people use arrays as queues so you havent read any js queue implementations &gt; because of a lack of pointers and direct allocation. If that is your litmus test, then you cant have datastructures outside of c/c++.
Yeah he seems to have really random and personal criteria.
While I think it's really weird that a 'functional' language doesn't have the pipeline operator, would it really be useful in JS at this point?
How are queues not possible in javascript? Even with out arrays you can create a queue using an object that stores the value of an object and a reference to the next object, and a parent class that keeps track of the first and last objects in the queue.
They don't exist natively because they're trivial to implement yourself. &gt; Yes, I know you can take several objects and put references to one another into the objects. No, that's not a linked list. That's exactly what a linked list is. You just might want to implement it with nodes containing the object and pointing to next and, in case if doubly linked lists, previous nodes.
Probably they meant queues are not a native data type in javascript.
I feel like we have enough of these types of articles already.
&gt; You can't implement most datastructures in Javascript because of a lack of pointers and direct allocation. Pointers or not is simply an implementation detail and you can implement most if not all things just fine using object references.
Learning how to code for yourself will help you a lot more than continuing a bad habit.
yeah, GitHub
I understand. I know how to code certain things. Other things I do not need to know and would rather not waste time on.
Depending on the type of data you are working with, understanding trees can be very useful. I'd consider them a basic concept worth knowing in any language.
Definitely yes. I started to use pipe method on the Object prototype as a substitute for pipeline operator and I am loving it.
If the tutorials aren’t working by the end, that’s an indication that you don’t fully understand what they’re trying to teach, or you’re looking at really shitty tutorials. It’s far harder to learn by looking at someone else’s code and copy/pasting than it is to actually make something work yourself. If the tutorials don’t work, find out why and fix them. That will help you more than anything.
I don’t need to know the ins and outs. I have a business and coding my own site is just a fraction of what I have to do. So for my situation, learning the ins and outs is not important.
First in first out queues where you put elements in the back and take them from the front can be useful sometimes and based on my experience writing a promise library back in the day where queues are essential there are a couple ways do do this. 1. simply use arrays and `[].push` to put items in and `[].shift` to get them out. While this is very conceptually simple, the shift method is extremely slow even for small amounts of data since it has to move every item in the array. Don't do this, even in a small app it can be a performance bottleneck. 2. use an array and use push to add items, but for removing items, just keep a counter, every time you remove an item, just increment the counter so you know where you are in the array, also maybe replace the item in the array with `null` so it can be garbage collected. The main issue here is that the array can grow without bounds so you'd only want to do this if you knew the queue wouldn't last long or could be replaced at some point. (this is what I ended up using for my promise implementation but I had to set it up so that after I started taking things out of the queue I wouldn't push anything more into the queue, instead I'd push into a new one. Before I did that then occasionally the array would get so large that the index of the item in it would no longer be a small int and V8 would see that as the type signature changing and there would be a catastrophic slowdown.) 3. Use a [circular buffer](https://en.wikipedia.org/wiki/Circular_buffer). This is probably the 'right' way to do it if you want performance, but it's a lot more complicated then the other options especially when it comes to resizing (this is what most of the bigger promise implementations use for their queue). 4. Use a linked list, this won't be as fast as #2 or #3 (the author behind the bluebird promise library did some heavy benchmarking on this subject), but will be a lot faster then #1 and conceptually are pretty straight forward to write.
If that’s the case, hire someone who knows what they’re doing and cares to do their best work. Or if you’re absolutely desperate, get a theme on a site like themeforest and make your peace with the options that provides you. Writing code isn’t as easy as plug and play snippets. There’s still a lot you’ll need to know to make things work together. If it was just plug and play, developers wouldn’t make so much money.