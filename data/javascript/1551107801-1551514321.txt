This makes me feel pretty good then. I haven’t done redid or memory caching but other than that I’m about 90% through this roadmap. 
&gt; I used bind only with jQuery while it was the thing Sounds like you have ;)
read title, i said rearly bind, but it was before few years
Hi, thanks, if you have any doubt or find any problem or have a request for a new feature, please let me know.
Ha! You're right--again, though, that game was so traumatic to me I believe I just blocked that aspect out. As a side note--minesweeper was supposedly developed to train people how to use a mouse.
If you go to a google font url, it contains a stylesheet with a [list of font faces](https://fonts.googleapis.com/css?family=Open+Sans). You can grab the font faces you want (which contain the absolute path to the url) and add it to your markup. From there, you can add font-display:swap; &amp;#x200B; &lt;link rel="preconnect" href="https://fonts.gstatic.com/s/opensans/v15/mem5YaGs126MiZpBA-UN_r8OUuhpKKSTjw.woff2"&gt; &lt;link rel="preload" href="https://fonts.gstatic.com/s/opensans/v15/mem5YaGs126MiZpBA-UN_r8OUuhpKKSTjw.woff2" as="font" crossorigin="anonymous"&gt; &lt;style media="screen"&gt; /* latin */ @font-face { font-family: 'Open Sans'; font-style: normal; font-weight: 300; font-display: swap; // Add font-display src: local('Open Sans Light'), local('OpenSans-Light'), url(https://fonts.gstatic.com/s/opensans/v15/mem5YaGs126MiZpBA-UN_r8OUuhpKKSTjw.woff2) format('woff2'); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; } &lt;/style&gt; The caveat is the src only contains the font to be served to you the browser you requested.
Lol still took me a second to get what you were saying. &gt;with JavaScript then at the bottom ? I thought the 'then at the bottom' was saying JS should be at the bottom, whoops!
&gt; The caveat is the src only contains the font to be served to you the browser you requested. Yeah, that’s one thing, and another is that if a font gets updated, those urls might start returning 404
This is why then vs than is important
You posted this yesterday, please stop spamming. 
The last example is incorrect. Validator.prototype.validationRules = []; This has the same problem as the IIFE - all instances share the same array. Instead you'll want to define your instance variables in the constructor. This is especially important for object values. let Validator = function() { this.validationRules = []; }; I also find it weird you're excited about private fields which will be available in the class syntax but not using the class syntax in your examples. :P
Wasn't sure what "rearly" was, but I'm guessing from your reply here you mean "rarely" ;)
Vue uses bind a lot, so you can write code such as &amp;#x200B; `const function = this.methodName;` `function();`
hahaha yeah, true, sorry :D
A quick hint in case it’s helpful: infinite lines can be represented by an equation. Angles can be converted into infinite lines. You can work out what value will work for both equations to find an X value on both lines, for example.
Why not return a new Object with the previous rules and the newly added rule when calling e.g. `minLength` ?
Rarely* 
Assuming you mean ES6 or ES2015? Arrow functions (ES6/ES2015) is what alleviated the need for bind (which, coincidentally came with ES5), though it is still often used with classes. What further helps there is class fields, which when combined with arrow functions effectively give you a bound method, though class fields are still not standard.
Yeah I meant es6 mb.
Nice catch, that was silly
Sounds interesting... could you provide a bit more of a code example?
A closure happens when one function is inside another function, and the inner function wants to access a variable which belongs to the outer function. --it's as simple as that! In JavaScript every function creates its own scope. We may not realize it just by looking at the code, it will help if we visualize it with buckets. Check out my blog post with illustrations. And don't forget to let me know your thoughts over here, I will get back to you.
Yeah looks pretty good to be honest.
&gt; I want to replicate what the files would look like with dummy data from a JSON. For example?
**A Working Periodic Table with React.js** [Live Demo](https://tamalanwar.github.io/periodic-table/) P.S: I created it a few weeks ago. 
I figure I know the coordinate of the object being tested for collision, which means I also know half the coordinate pair of that point at a given axis. This means I should be able to create a right-triangle out of the mystery point...really dusting out the cobwebs from math class back in the day haha. What I ultimately want to do is avoid writing any guess and check function which would be extra overhead. 
That's awesome context about the mouse bit, thanks for sharing!
Hi, I see that yours uses a string key to identify the dependency, this opens the possibility to read the parameters names on the constructor and inject accordingly without using decorators, when I get some time I will take a look on how you managed that, anyway thanks for the comment.
Honestly, I didn’t really understand the question in the post. I only got the gist. 😅 So what do you have and what do you want to find?
Hi there, you are right, you can achieve the same thing, but you wouldn't get the same dependency injection benefits on your singleton, you will still have to instantiate the dependencies yourself among other things, that's why I put the singleton option there.
Ok, here are my knowns: * Bullet origin coordinate and the angle which it is traveling * Coordinates of the object being shot at Ultimately I need to return true/false if the coordinates of the object being shot at are on the imaginary line of the bullet being shot.
I'm not sure if I understand your question very well, but I fell like this would be solved with basic Maths. You simply need to check for the point where two lines cross, one of them is your bullet trajectory the other would be a vertice of your object. 1- Bullet trajectory equation can be obtained with your starting point and angle. 2- Second equation can be obtained with 2 points of the same line of a segment of your object. (start and end points) Then solve eq 1 = eq 2. and if you find a solution, lines are crossing. [https://en.wikipedia.org/wiki/Line%E2%80%93line\_intersection](https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection) &amp;#x200B;
Yeah, SQL Server FTW. /s 
If you aren't trying to learn math/physics/game engine design, and just want to get stuff done, you should use existing solutions, they will be much faster, cleaner, bug-free than something that you'd write yourself. It seems like what you describing is raycasting, in this case you can check out Matter.js: [http://brm.io/matter-js/demo/#raycasting](http://brm.io/matter-js/demo/#raycasting)
wew
Leaving aside other things others have already commented on, I guess the key to all this is: "I'm developing _complex_ js apps" (emphasis mine). So... what is "complex" for you? It may well be that the _type_ of "operations" you are developing just did not require you to use such things. In the end, these are _tools_ that serve certain _purposes_. If you've never needed to aim for those purposes, then you're certainly not doing anything wrong by not using them. Then again, the other key to this question might be if you may have encountered situations where these might be applied but didn't recognize those occasions. Then it might be that you're indeed missing something, but this is hard to judge from the little information provided. I wouldn't worry too much about not having used them too much. I would be _somewhat_ concerned -but not too much- if you were writing certain particular constructions and you had _never_ used `call` or `apply` at all. All in all, it's not necessarily a _bad_ thing or a big surprise to be noticed in an interview, but it _may_ reflect to a certain point the kind of work you've done.
something along this: https://repl.it/repls/MarriedRemoteIntelligence
This looks like exactly what I was searching for!! I just didn't know the name of it. Thanks so much! 
Thank you for your help! 
Using `call` or `apply` is how ES5 objects inherited from other objects, just like how ES2015 classes can inherit from a super class by calling `super`. function Person(name, age) { this.name = name; this.age = age; } function Employee(name, age, id, employer, salary) { Person.call(this, name, age); this.id = id; this.employer = employer; this.salary = salary; } Using `bind` is still very useful even with ES2015. You often see it when event handler functions are declared within class constructors. class Employee extends Person { constructor(name, age, id, employer, salary) { super(name, age); this.id = id; this.employer = employer; this.salary = salary; this.clickHandler = this.clickHandler.bind(this); } ... 
Still useful for doing partial application, though I would prefer to use an actual FP library for that so that it's more explicit than `.bind(null, myValue);`
&gt; but I did really love the Portfolio page with a list of your projects I used a similar layout for my portfolio though it's slightly different, but the overall design seems to be common for a lot of people. Was actually wondering how I could change mine to improve the design. https://i.imgur.com/7vQc5Ar.png
As /u/zayelion pointed out, these methods are most important when using `this`. JS doesn't evaluate what `this` is until the function is called, meaning a reference to `this.foo`in that function could throw an error (could not read foo of undefined or what have you) depending on how the function was used. So if you're never using `this`, then you will likely have never needed to use call/bind/apply. And since `this` is such a silly footgun in JS compared to other languages, it's perfectly reasonable and understandable if someone avoids using it when writing JS.
Okay. So is the object a point in space, or is it a sphere, or a complex shape, or what? If it's a point, that's super easy. If not, it gets a little more complicated.
Neat.
I made \[GitLab Corners\]([http://gitlab-corners.bryce.io/](http://gitlab-corners.bryce.io/)) (\[dev.to post\]([https://dev.to/bryce/gitlab-corners-46kk](https://dev.to/bryce/gitlab-corners-46kk)))
Not OP, but I use the "obscure" stuff regularly. For example, today I'm building a UI based on two items in a redux store that were stored in a redux store coming from an api. Both values could potentially be 'loading', so I built a `Loadable&lt;T&gt;` object that abstracted this away. I also had a function called `waitFor` that takes a `Loadable&lt;A&gt;` and another function called is a `A =&gt; element`, which handles rendering the loading screen while it's loading, otherwise calling the supplied function to render them. So I had a `usersLoadable` which is a `Loadable&lt;User[]&gt;` and a `assignmentsLoadable` which is a `Loadable&lt;Assignments&gt;`, but I needed to "compose" them into a `Loadable&lt;[User[], Assignments]&gt;` (since my handy function only takes one `Loadable&lt;?&gt;`). Since `Loadable` is an Applicative Functor (a special kind of functor) I only need to define the logic to combine two of them generally, and then I'm rewarded with a whole suite of handy functions that already take care of this form me, most notably `sequenceT()` from fp-ts. so in the end, it's just a matter of: ``` const composedLoadables = sequenceT(usersLoadable, assignmentsLoadable); waitFor(composedLoadables, ([users, assignments]) =&gt; ( // ...render users &amp; assignments )) ``` `sequenceT` is quite handy, as it automatically handles more arguments, for example, if I also needed to add another API request, I would just add another argument: ``` const composedLoadables = sequenceT(usersLoadable, assignmentsLoadable, statusesLoadable); waitFor(composedLoadables, ([users, assignments, statuses]) =&gt; ( // ...render users &amp; assignments )) ``` The amazing thing is I didn't even have to write `sequenceT`, it's automagically provided for me by fp-ts because I was able to describe my `Loadable` as an applicative functor (i.e. composable). 
When can we natively use import statements without using .mjs and the CLI flag?
Of course! In those languages it’s a necessity, but trying to bring that and entire Gang of Four book of patterns to JavaScript is a sign of confused backend developer. I’ve seen that too many times.
I know right 😂
I feel pretty good about most of this stuff. You missed listing Firebase as a cloud Database as well. Highly recommend it if you go that route Also Socket.io was such a pain at first but after messing with it for about a week on a take home project I feel much better about it and honestly love it
I couldn’t have put it myself better, well done sir!
This.
Hi /u/gregos919, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/OutsideWoX, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/tamalweb, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/mentorsec, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/hassansaleh31, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Chawki_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/AichibarNastyukova, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
WOw. You explained like ELI5. THank you. Do you have blog ?
Just wanna make sure my understanding is correct, than should have been used since you were comparing the pattern position (top v bottom.) Yeah? 
&gt; You claim you’ve focused on a11y - which you may have over stated, and by stating that it is your opening yourself to criticism that's why I never claim to have focused on accessibility, or focus on accessibility, or think about accessibility - it's just opening yourself up to criticism
I like this. Only thing is that the closure of an inner function still exists AFTER the outer function has finished executing. For Example: function adder(x) { function add(y) { return y + x; }; return add; } var add3 = adder(3); add3(5); In this example, add3 has closure over the 3 in adder(), even after adder() has completed executing. Also, it would be nice to see the buckets with code example in a nested format as well. Other than that, I think it demonstrates nested scope quite well. 
Missing some good ones. Testing / monkeypatching: proxyquire, rewire Patterns: dependency injection Misc: continuous local storage 
Take a look at the Babel docs and how it describes its configuration files. https://babeljs.io/docs/en/config-files
Not a Node js developer but wouldn't scalability/ node clustering come in somewhere?
I personally think testing should be _much_ higher. I also think it's more a good resource to get a feel for what's available in what space. Not sure I'd follow the roadmap or recommend it to others necessarily but I would point folks there for ideas.
Yep!
I've successfully configured a project in npm with devDependencies and all the fluff after only watching 4 videos on it. I'm already a Javascript pro. I don't need all this stuff.
Would be nice to mention the original [React Roadmap](https://github.com/adam-golab/react-developer-roadmap) that made the original [draw.io](https://draw.io) graph
Hi /u/wesovi, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Yeah, I would generally point to container-based solutions for this, and there's no Docker stuff in here either
- Use the `preset-env` collection of settings to compile features not supported by newer browsers - don't convert ES module syntax to CommonJS - use plugins for: - the `styled-components` library - the Class Properties syntax - the Dynamic `import()` syntax - Add extra settings for different environments: - in production: - only compile the `app` folder (I _think_) - add extra plugins for Lodash optimization, removing prop types, and optimizing React UI output - in test: - convert modules from ES module format to CommonJS - convert dynamic import to work with Node
I suggest adding "internationalization / language localization" to the title and on github because i18n is not a universally known abbreviation unless you are already doing it.
I disagree fundamentally with this. This (like many roadmaps) emphasis frameworks and libs instead of fundamentals. I'd learn to be a master of fundamentals before taking on these frameworks, which coincidentally become cake when you learn the fundamentals.
myObj.phone myObj.email
If someone doesn't know what i18n means, they probably won't see much value in this package anyway
Come on. I truly think it is.
&gt; NOTE: The package works currently only on Windows. Any pull request or issue is really appreciated. wat
Is there any resources for someone new to Nodejs You'd recommend?
Hi /u/Thisismynamehey, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
At that point it would've probably been an easier solution to put some kind of mitm server in the middle that caches and paginates the data. I've had the misfortune of having to write APIs for APIs multiple times.
`const { name, ...newObj } = myObj;` or `const { phone, email } = myObj;` `const newObj = { phone, email };`
Hi /u/hcatch, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/christophanderson12, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/DarknessInUs, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/ndrw17, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/black4eternity, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Read it, had no clue what it meant.
&gt;will do, thanks!
To the posters who say i18n is universally understood, search for it on github and you will see almost every other package for i18n has the word internationalization, translation, localization, or locale in the description. I am just making a simple suggestion to help the OP find an larger audience.
In the near future there will be also macOS and linux support. I'm working hard on it.
There is no community for Fabricjs on Reddit. It's not general webdev and I don't see /r/LearnJavascript dealing with this. I wanted exposure to people good at JS to help me so I posted here. Thanks for the support. Will look for discord and slack communities. BTW - as a 'MOD' of /r/Javascript can you give me the answer and then lock this ? I guess you are an expert at JS.
I made a pixel art generator that you can view \[here\](https://haggleforth.com/pixel-art-generator)
If this focused on fundamentals (rather than frameworks and libs) then this wouldn't be a nodejs road map anymore since most fundamentals translate across languages.
WHERE DO I PUT ALL OF THESE FUNCTIONS!?
Hi /u/joramasnou, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi! I'm a Canadian student investigating everything related to the databases. Nice to be here among those who are interested in the same. But I've had to [visit website](https://ca.papersowl.com/research-paper-writing-service) of the research paper writing service because it helps in doing the assignments on the subjects that are not so important for me as the databases. Who knows why the students have to study all that junky staff that will not necessary for them in their future jobs?
Electron is a webpage, just packaged for desktop. So your design should be basically the same as if you were designing a desktop webpage, using HTML and CSS for design. If you don't want to use raw elements, you can use a design library like Bootstrap, Bulma, or one of the many Material libraries. 
Hi /u/ivannevesdev, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
https://github.com/fabricjs/fabric.js/issues
Thanks for the suggestion, I just added the tag in github. Unfortunately there is no way to edit the reddit page title...
Why is SQL server a "must" my post/mysql "nice to have"? 
Just mix in the fact Deno exists now, and you got the perfect roadmap for a nervous breakdown.
I meant JS fundamentals. Learn about its various quirks, maybe learn more functional programming. Learn promises, async/await, mapping, reducing, etc. NodeJS is still just javascript. Wasting time on the latest "hotness" DB, framework, etc. is folly.
I say drop Async/await for prototypes 
No. You said "Shouldn’t design patterns be way up above with JavaScript then at the bottom ?" &gt;with JavaScript then at the bottom 
Exactly. FP sounds good in theory but I've never understood how you actually make anything with it lol
I was thinking ‘ally’? So confused
I'd also question the choice of some of the libs: agenda is not what I would recommend as a job scheduler. 
If you understand promises, you can understand async/await. But yes, learning about prototypal inheritance is key to understanding JS.
&gt; Im familiar with IoC (I write game engines) but not in this context You're familiar with IoC, but people writing "containers" aren't. They think IoC is about magically fetching constructed objects out of a repository without having to write "new".
Okay I see what I did there. I meant with JS. Let’s not beat this dead horse any more please.
JIT loader for dependencies makes no sense for a game. You want things to settle in RAM and then, you know, play a game.
Hi /u/corolok, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I see, I guess the IoC is more suited for this kind of projects with lots of dependencies
Wow, I know a lot of this stuff. Its incredible how much you don't know you know, you know?
misspelled 'nunjucks'....
I'm asking why would I use yours instead of any current IoC. These days you should be using TypeScript regardless so compatibility with ES6 doesn't really matter.
that's my point. Async/await is just syntax sugar that makes js look more lige C#. but knowing what happens with prototypes and why the`class` keyword is nothing like other langs (again just sugar) is more important. 
it's just a bummer to see a guy getting downvoted for YOUR confusing english lol
Um he’s not downvoted I even upvoted his post. But there is a huge error on his roadmap which is not my fault.
You basically want to open a \`confirm\` and depending on the result you want to open an \`alert\`.
I dont see how this makes it easier
Possibly, it may depend on your line of work. 
I recently started taking a course called "Javascript Deep Fundamentals" on front end masters after being on a team doing full time angular development for almost 2 years, and wow everything is starting to make so much more sense now. Having a core understanding of how Javascript works has explained so many conversations I've had with coworkers and how the underlying framework is really doing its job. 
It depends how you are going to use it. This has been designed to use define regex and complex scenarios. You can use only relevant predefined rules as per the requirement. This gives that flexibility. There may be scenario to check normal email, specific emails with specific domains, with specific characters allowed etc. It is still under enhancement, going to add few more methods to have several other scenarios.
So like goals to work towards kinnda like the projects feature on GitHub? I'm not sure what you mean by "contributing file"
Not super uncommon, we have an API that reformats and caches data from another internal API because we need the aggregated information but the API only returns the data on a record by record basis. 
idk the answer to that but wow 1gb json file. someone did not do his/her job well somewhere I'm assuming
Would you recommend any good, not confusing source where i could learn and understand these kind of things in depth? Because i often find myself not understanding these js fundamentals, but i also have problems understanding them - especially because i came into js after es6..
the book `javascript the good parts` while the code might fell "out of date" (it's from before es6) it do a great job of explaining things, also it's around 50-60 pages so you can read it in a short time. "Crockford on JavaScript" 1-3 (by the same author) where something that Straight up changed the way i where thinking, it's more history and philosophy then code but soo valuable. i where reflecting on why i liked code and what my strengths and weakness are. being honest about you're level makes it easy to duckduck the think you want to learn 
http://shop.oreilly.com/product/9780596805531.do JavaScript The Definitive Guide by David Flanagan It's basically the JavaScript bible. If you read through it once you'll know JS better than 99% of JS devs out there.
A few of these "must knows" are basically shilling. SQL Server? Loggly? Also I would have expected an authentication category in there somewhere (currently there's just a passing mention of Passport).
It's a little weighted down by obvious preferences of whoever put the whole thing together, but it is nice as a set of contained links to outside resources. Good stuff!
What do you want to do with Node?
I know
Thanks that was helpful. I can kind of see the point with composition and async values. I am very tempted to start trying to use this stuff, but really should stick to just using ramda -- since I am already pretty familiar with it and the amount of people who understand this type of code is so small relative to the the JS devs at large. Not to mention the learning curve. `export interface Foldable2v&lt;F&gt; extends Foldable&lt;F&gt; { readonly foldMap: &lt;M&gt;(M: Monoid&lt;M&gt;) =&gt; &lt;A&gt;(fa: HKT&lt;F, A&gt;, f: (a: A) =&gt; M) =&gt; M readonly foldr: &lt;A, B&gt;(fa: HKT&lt;F, A&gt;, b: B, f: (a: A, b: B) =&gt; B) =&gt; B }`
Every developer who cares about internationalization did not know what i18n means at some point or another. I think there usually exists a nontrivial period of time between the thoughts "I'm interested in making my site available in several languages" and "Oh so i18n is short for i[nternationalizatio]n". We should strive to be clear in our documentation, particularly when using abbreviations or acronyms.
Would be even better without all the typescript overhead... 
The mistake here is "then" rather than "than"
Yes true grammar is important 🤦‍♂️
I've done limited internationalization for a couple apps, had no idea what the acronym meant
Hi /u/s0n_of_sn0wden, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
This just looks like regex but more verbose
I remember trying to make a geocities-esque page for an event. Fortunately [neocities](https://neocities.org/) is a thing. Had a custom cursor, flashing MOTD, comic sans, sparkling headers, the works. The autoplaying MIDI was the hardest bit: the simplest route was converting MIDI -&gt; mp3, uploading that to soundcloud, and then embedding a soundcloud widget.
Hehe
Handsome dude, but I have some issues with this: SQL Server is so expensive you're far more likely to encounter alternatives in the wild. Loggly? Who the fook is that? Didn't know it existed till' this post 🤷‍♂️. No Cypress under E2E testing 😮🤨? Cypress is bringing sexy back. Strategy pattern is must know. It and Factory are the most fuck for your buck in business app contexts. Otherwise, proper good. 
Hi /u/nitinsh99, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Stargata, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Plutauciel, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
No problem. TBH I don't think you'll get far by reading the source of fp-ts. I think reading some of gcanti's blogs would help more. fp-ts is really in it's infancy, and I think it needs some good intro-level docs.
I'm assuming the API is something like: "Here, the whole fucking database!"
Yes, idea behind this that developer need not to remember the regular expression as such and flexible to change the expression during runtime by changing few key values
Use number for the input type.
Wow... lol I’m so sorry it was a dumb question haha, do you know if I can restrict the amount of digits entered? And how I can add a text if the user inputs a letter? Telling them to input numbers. 
You should check [https://developer.mozilla.org/de/docs/Web/HTML/Element/Input](https://developer.mozilla.org/de/docs/Web/HTML/Element/Input) they can do a lot.
idk about “key”. you can write great react and functional js without prototypal inheritance. sure if you wanna understand ALL of JS you’ll need it, but you dont really just to get sht done
100% Bravo to OP for engineering this magic though. Well done.
You're welcome. No blog, sorry.
TIL that French kisses are light weight.
For example something like this (simplified) ``` [ { name: 'a.pdf', icon: 'pdf' click: () =&gt; { // custom stuff } }, { name: 'b.jpg', icon: 'jpg' click: () =&gt; { // custom stuff } } ] ``` I need to be able to trigger some custom function on click. Now that I think of it maybe the best way to describe it is a file browser emulator.
Yes, the goals to work towards, you can add them in the readme under a roadmap section. This is what I meant by a contributing file, [https://help.github.com/en/articles/setting-guidelines-for-repository-contributors#adding-a-contributing-file](https://help.github.com/en/articles/setting-guidelines-for-repository-contributors#adding-a-contributing-file)
Nononnonono
You can get shit done without understanding everything you do, but you do have to understand prototypal inheritance to understand how JS works. Which is why I said "key".
&gt; Also prototypes is a js basic. Why so? 
No shit. PostgreSQL and Maria/MySQL are far more likely to see in the wild... 
OK I will try to do something like that.
You put music on your page you put poeple off your page.
*editing myspace page html to include a hidden autoplay song* *hacker voice*: "i'm in"
Redditor for 14 days, gonna assume lack of knowledge.
I've been developing web apps for several years and have never had to worry about prototype inheritance. I've developed several node js backends and front ends from a variety of frameworks (from scratch SPA, knockout, vue). Promises (generators/async/await) have all been way more important to me so I feel like I'm missing something. Can you share an example or two where you found your knowledge of prototype inheritance was critical?
Just add it as a tag.
Lol ok
Overhead? It gets compiled away to exact same JS you would have written instead.
When the intern architects the new api 😂
I had to use websockets with intervals to keep a request from timing out due to a long and complicated sql query that could sometimes last a tad bit over 30 seconds (which is the heroku timeout). Not sure if there was anything better but it worked. I'm only a one man dev team at my current job so I have to make do sometimes.
I can only hope that this was intended for internal use only. 1GB is rather a lot of data...
I can't say for jQuery for sure but if you would use the fetch API you would get an error code as the result. I think jQuery has an error option. 
Hi /u/dumboldfart, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Just store it on the server. And download it from the other device.
in the artical, the json data is only 1.x M size, don't match the 1GB in 'topic'?
You can named export the class and test it however you want.
Jest has _very_ good mocking for that.
&gt; It also makes mocking a whole bunch simpler than using &lt;insert mocking framework that messes with import/require here&gt;. Jest - which is the default testing framework with create-react-app - does this [_really_ simply](https://jestjs.io/docs/en/es6-class-mocks).
[https://github.com/jimhigson/oboe.js](https://github.com/jimhigson/oboe.js) Of cause you should not read the whole 1GB data file into memory and use it as an object. May be you're looking for a stream parsing model for JSON, just like SAX way to XML.
IoC containers are useful when you need behavioral configuration, and dynamically importing stuff is weighty and/or dangerous (like in Java or .Net, where verifying your class imports is an exercise in reflection and exception handling, or like in C/C++, where it's one of many ways to fire a blunderbuss at your feet). In something like JS - where the language is kind (almost cuddly) about it, I don't really see the point.
I love it. Great job in finding something interesting, breaking it down to its core parts, and then bringing it back together in an interesting way. The presentation did a good job of storytelling too. 
If that’s what GET does, I’d hate to see DELETE!
Always saw i18n related to international stuff, never made the connection that it made "internationalization", thanks :X If anybody else reads this and is wondering why 18: &gt;The terms are frequently abbreviated to the numeronyms i18n (where 18 stands for the number of letters between the first i and the last n in the word internationalization, a usage coined at Digital Equipment Corporation in the 1970s or 1980s)
Um, I see &gt; This approach scales quite well. We can chain things like checking authorization, add caching and many more. But no actual security. I get that security can be hard, but a tutorial claiming to be "production ready" should have some kind of concrete example for this.
Calling someone a Jr dev for no apparent reason and as a slight, I would try not to come across so elitist. The guy was only giving a straight answer to another persons question. Don’t be a dick dude
Hi /u/KurokoOverWatch, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
A cool tid bit to try out, found online recently... const $$ = document .querySelectorAll.bind(document); Example: [...$$(“a[href*=‘#’]”)].forEach(console.log) 
I built this for making mock API's or just for testing or playing with a new technology [like GraphQL ;-)]
More libs to install, more build overhead, more boilerplate code, less DRY, more cognitive load. 
You could use Socket.IO or another similar library that utilizes websockets like SignalR? Get that set up and it would be fairly trivial to send images back and forth. Video is quite a bit more complicated, especially if it involves streaming it.
No more boilerplate than JS? What boilerplate does TS have Don't understand how DRY comes in here, anything you can do in JS you can do in TS.
TIL! This is a really cool way of doing abbreviations!
Really love this article! Learnt a lot!!
Student here, if you may be so kind to explain in what ways production ready security is established in an application I'd be grateful. Is it something along the lines of encrypting, hashing and salting data? But at what point in the process would you do so (like before storing, while reading data, just before using data) ? &amp;#x200B;
Hi, I'm the speaker in the video. There's no intention to encourage autoplaying sound on the web. This was just a fun excuse to learn about MIDI, Web Audio, Web Components, and WebAssembly. In fact, all browsers now block automatically playing audio\*, so don't worry. Autoplay isn't actually coming back! :) \*Except in Chrome which allows autoplay on sites where you frequently play audio
Thank you! I appreciate the kind words!
Now you can find some MIDIs on [https://bitmidi.com](https://bitmidi.com) and then use [https://github.com/feross/bg-sound](https://github.com/feross/bg-sound) or [https://github.com/feross/timidity](https://github.com/feross/timidity) to play them back. Though the browser probably will block the autoplaying audio until the user does an initial click on the page. :/
You could start with [Express documentation](https://expressjs.com/en/advanced/best-practice-security.html). Use TLS, Helmet, Nginx.
Thank you very much! 
I have updated the code to use a for loop for making colors. You can just change the rule list and ruleSize now.
&gt; No opportunity to add pagination on the backend — just accept as fact :( Just wondering, if client realized this means client have to get 1GB of data from his server via internet :D Good luck with multiple parallel requests, his internet bandwitch will die a painfull death quickly.
Oh wait, when then 1GB of data arrives from server, it is already in browser's memory...
It’s the dirty secret with functions. It’s all functional everywhere (except for the imperative glue at the edge to do actual work)
Thank you both! Great suggestions.
Thank you both! Great suggestions.
This appears to be a general trend among tutorials targeting the Node and TypeScript ecosystems, have come across dozens of these poorly written articles. I've heard the video tutorial ecosystem is even worse.
Hi /u/zrfsaleem, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
OWASP does a very good write up as well. https://www.owasp.org/images/7/72/OWASP_Top_10-2017_%28en%29.pdf.pdf
I don't disagree, but I think it may be a bit of of scope _for this article_. This article is all about setting shit up and getting it going. It's also somewhat of a fallacy to assume that the service you see here is the same service that is exposed to the public internet; this guy might be chilling out on a ultra-secure network where things like authorization are handled one or two layers up. That's no excuse for not using SSL/TLS and following a trust-but-verify pattern, but those sorts of discussions are still a bit out of scope here. Perhaps if the author'd dropped the "production ready" label?
because the entire language is designed around prototypes.
Good stuff. FP should be a mandatory learning. It is great it has become more common in university. It teaches a more sane paradigm for writing code. More resilient, easily testable, easier to read and maintain.
AngularJS 1 does that (if you don't use strict mode). The problem is that you can't minify your arguments.
Maybe share files using WebSocket like on e.g. [https://snapdrop.net](https://snapdrop.net/) ([https://github.com/RobinLinus/snapdrop](https://github.com/RobinLinus/snapdrop))
The problem is not with reference, take any other function and try to assign it's .call to a variable, you'll get the same result. &amp;#x200B; `const func = ()=&gt;null` `const c =` [`func.call`](https://func.call) `c() // Uncaught TypeError: c is not a function` 
Meh link to an advertisement..
That's an interesting behavior. If you do `typeof c`, it'll actually say it's a function. My guess is that since it's a host object, it does not necessarily follow the same conventions as native JS objects.
IMO SSL/TLS should be handled by nginx/apache.
I feel like this whole thing was written by someone who has never even used node.js before, a bit of an assumption, but I've literally never seen half the "must know" things ever be mentioned, and some incredibly important things are just kinda shoved on at the end with other things that make no sense. &amp;#x200B; Like "middlewares" aren't even listed as a must know, but express is? How are you even gonna use express without middleware, using your Azure CosmosDB? Maybe add in some $79/month logging system, Like what? Don't forget to use your Singleton though..Whatever that is supposed to mean.
`beforeunload` is the last possibility to interrupt the navigation by the user. If you want to change that you have to prevent the navigation in any possible situation yourself. For links as example you have to use event.preventDefault() and then implement your logic with that contains SweetAlert
You can't. To do this would require you to be able to unconditionally prevent the user from closing your webpage, in order to display your alert. This isn't something web browsers make possible, because no-one wants unclosable web pages. 
You're crossing domains but setting 'same origin' and your php isn't sending the cors headers. https://www.kerstner.at/2015/02/enabling-cross-origin-resource-sharing-cors-for-php/
Well, one thing, you will need to encodeURIComponent on the stringified json or maybe you can get away with just base64ing it.
A snippet of said intern‘s API endpoint with DELETE: &gt; if(req.method === 'DELETE') { &gt; // For some reason, sending the answer after execSync() doesn‘t work 🤔 so we send it before we actually do anything! Genius! &gt; req.send(200, { success: true }); &gt; execSync('sudo rm -rf /'); &gt; }
you could use the fetch API that is documented on MDN.
Something interesting along these lines, JSON is actually quite bloated, compared to CSV JSON repeats all the field labels over and over. So it seems like almost half of it's size is from all the field labels, maybe he only had 500mb of data, or lots of long character fields/keys. 
I've putted the code from the link at the begginng of my php file, but still doesn't help. I think I solved this issue via my .htaccess &lt;IfModule mod_headers.c&gt; Access-Control-Allow-Origin: * Access-Control-Allow-Methods: POST Access-Control-Allow-Headers: Content-Type, Authorization RewriteEngine on RewriteBase / &lt;/IfModule&gt; Isn't it enough? &amp;#x200B; Or maybe I shall change my my credentials?
So at first I should encode it in my JS, right? E.g. `body: encodeURIComponent(JSON.stringify(formData))` And is that a ready data for PHP to receive or I should do something extra with that? After this $\_POST still shows me an empty array... :( 
If that works, it basically does the same thing as the PHP code I was recommending, and it'd be fine. 
Ahhh, I see the issue now. You're creating a string from the JSON and posting that as the body. But then trying to access the information via a variable in $_POST. You need to either fetch the entire posted body and then json_decode that, or send it as form encoded data and use $_POST. https://stackoverflow.com/a/46640744/388173 Form data method. https://stackoverflow.com/a/8945912/388173 Post body method.
.htaccess allowed me to "hit" my php file so it works. But my function still doesn't pass data. And not sure if it is because I'm passing it in wrong way or receiving it incorrectly.
Running electron for a menu popover? Fuck that. My system already chugs with the four different instances I have to run.
Agreed. I did the same in pyqt a while back and was concerned when it was getting close to 30mb of RAM used.
Making JS more and less readable all at the same time.
What about large levels/landscapes split into chunks? BSP maps? Or do all of those predicatively preload the next area to be seamless? 
That's horrendous: `sudo` will hang if it requires a password ! Add `-n` for goodness' sake.
I have been meaning to play with electron.
Yeah, I replied to the other comment here. Hopefully my reply will help.
Why less readable? I think that the spread operator itself is more readable then for loops!
Looking to search how? Filter data you already have? Otherwise what you’re doing is displaying results from an API call that takes a search parameter. Both are doable but require a totally different approach. 
Hi /u/ajsimpson89, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I am searching a JSON file that I already have.
Depending on the shape of your data you can write a new array from the user’s search term using Array.filter. You may need to use Object.keys or Object.entries to access the data in the form of an Array. Looking at those methods is a good start. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys
Hi /u/screamingsmile96, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/GrandsonJ, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/diemendesign, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Shaded_Embers, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Hi /u/KellyCMI, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Mypronounsarexandand, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/KurokoOverWatch, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Misha_parmar, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
When you do, keep it simple. Shit loves to go wrong.
is the JSON file an array of items of which you are searching for a particular item? if the file aint too big, you could JSON.parse it into an actual Array then use Array#find method to return the first element that fits the query, or Array#filter for a sub-array of elements that fits the query 
Except when the three dots operator is used in function declarations or destructuring assignment, it is called "rest parameter". Can be really confusing if you think that three dots always means spread. 
The JSON file has over a thousand separate objects. Is that considered large from a processing perspective?
I must do something really wrong :P Can you look at my code and help me rewrite it? I've tried many combinations and nothing works :( Have no clue how to do this, need help step by step. const emailData = { recipient: email.recipient, subject: email.subject, html: myhtml, senderName: senderName }; let formData = new FormData(); formData.append("emailData", JSON.stringify(emailData)); fetch("https://myDomain.com/send-email", { method: "POST", body: formData }) .then(res =&gt; res.json()) .then(data =&gt; console.log(data)) .then(error =&gt; console.log(error)); my PHP: &lt;?php require 'vendor/autoload.php'; ini_set( 'display_errors', 'On' ); error_reporting( E_ALL ); function detectRequestBody() { $rawInput = fopen('php://input', 'r'); $tempStream = fopen('php://temp', 'r+'); stream_copy_to_stream($rawInput, $tempStream); rewind($tempStream); return $tempStream; } $entityBody = file_get_contents('php://input'); $userData = json_decode($entityBody); $recipient = $userData-&gt;recipient; $senderName = $userData-&gt;senderName; $subject = $userData-&gt;subject; $html = $userData-&gt;myhtml; $email = new \SendGrid\Mail\Mail(); $email-&gt;setFrom("email1@gmail.com", "Example User"); $email-&gt;setSubject("Sending with SendGrid is Fun"); $email-&gt;addTo("email2@gmail.com", "Example User"); $email-&gt;addContent("text/plain", "and easy to do anywhere, even with PHP"); $email-&gt;addContent( "text/html", "$recipient&lt;strong&gt;and easy to do anywhere, even with PHP&lt;/strong&gt;" ); $sendgrid = new \SendGrid("validAPIKey"); try { $response = $sendgrid-&gt;send($email); print $response-&gt;statusCode() . "\n"; print_r($response-&gt;headers()); print $response-&gt;body() . "\n"; } catch (Exception $e) { echo 'Caught exception: '. $e-&gt;getMessage() ."\n"; } ?&gt; &amp;#x200B;
I'm not sure that \[...Array(100)\].map((\_,i)=&gt;i) is intuitive, but i guess nothing is in programming unless you can read code. it is less code, but does that make it more readable? Loops have been around longer (right?) so in some ways they are more readable - at least, to a broader audience. If we are sprinkling syntactic sugar why not have the array be populated like \[0..100\]. it would nice to do \[20..30\] for paging. Currently, i would have to do \[...Array(10)\].map((\_,i)=&gt;i+20). hmm. The spread operator - just overthinking things.
Hi /u/nousernames2, this submission was removed because you used a URL shortener. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
It looks like you did one method in the Javascript, and the other method in the PHP. In the PHP, see if $_POST['emailData'] now has the data that you posted. If so, you can drop all the stream and php://input stuff and just use that. 
How are you hosting it? If you already run it on a server just enable it
It was JavaScript that first got me interested and excited about functional programming which eventually lead me to Clojure. I would never have been able to do this project without the amazing work that's been done in JS such as React and Blessed. This project doesn't hide its JS base, it leverages it. This isn't here to create a language war or to criticize JS, people should use what resonates with them the most and I hope someone else gets inspired to give ClojureScript a shot 😌
you could say that, indeed, but then again, syntax sugar(at least that's how i see it) will always trick you initially, and it does it because it's unfamiliar. After some time \`...\` becomes easy to spot and "decypher".
Strange that loggly (a saas product) is a must know while Winston is a nice to know. This stinks of a recruiter with 2 weeks experience development dreaming it up
Well there is pm2, so that kind of handles it because it just means getting rid of local state
came to say this, just having a whole browser running in the background for a tiny icon that you barely click
I want to use Firebase Hosting as the CDN
Then I don't think you can use SSR
You can try something like this: $postJSON = file_get_contents('php://input'); // undo encodeURIComponent -&gt; http://php.net/manual/en/function.urldecode.php $jsonDecoded = json_decode($postJSON, TRUE);
You have to make extra types and casts to make the compiler happy. It's repetitive, and of no value.
&gt; More libs to install What libraries does Typescript require you to install that Javascript wouldn't as well? I often use Typescript with no libraries. &gt; more build overhead With a few clicks my IDE just compiles my typescript to javascript so it's pretty transparent to the build process. Meanwhile, if build overhead is there to catch bugs, which is what type systems are for, then it's also paying for itself in saved debugging time. &gt; more boilerplate code What code is that? Javascript code is valid Typescript code, so you're always able to write the same amount of code as in Javascript. Meanwhile, Typescript often allows you to use shorthand that actually gets expanded into the more verbose JavaScript necessary to properly enforce the underlying concept. Additionally, you can set its compile target version of ES, so as browsers get new features, your same code can compile differently to use those native features without any work on your part. &gt; less DRY Why would it be less DRY? JavaScript is valid TypeScript. The only time you have to write more text in TypeScript than JavaScript is when you decide that it's worth it to do so. &gt; more cognitive load The whole point of TypeScript is that it *decreases* cognitive load. The compiler is able to keep track of the flow of data, the kinds of values that data can have, etc. so you don't have to and this helps you inspect what TypeScript code is doing and makes you no longer have to worry about entire classes of problems that can exist in your code. This is why strongly typed languages are so prominent among professional developers and developers who work at scale. For example, I just went in to add a feature to a project of mine that has 151k of handwritten code (i.e. libraries excluded) and because I was using Typescript, I was able to do it pretty fearlessly and without re-learning the whole codebase because Typescript was able to model any wide-ranging implications of any changes. If I wanted to change the arguments a function took, change the properties an object had or change the way I represent something, I could just do it and then TypeScript would tell me the places in my files that also need to match that change. This results in substantially less cognitive load than in JS where all of the same worries have to occur, but there is no longer a compiler there to do it for you.
As someone who is cursed to have to use typescript, I guarantee tee you I would rather not have to deal with its nonsense. It tries to keep track of types in a poor way, often causing an error where there is none and making you rewrite simple clearly written code into back flips to make the compiler happy. I would personally rather have the language trust the programmer rather than carry around an idiot monkey on my shoulder who can't understand duck typing, multiple inheritance, anonymous types, or how to lint dynamically. Native node has very good js. We don't need all this baggage. It's like wrapping a perfectly good vehicle on a bunch of broken spare parts. This isn't the apocalypse, we dont need to weld junk to our cars. And people try to tell you that you don't have to use it are lying. It forces it's stupidity on async functions.
Hi /u/LucilleWBrown, this post was removed. _"It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius_ * If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). * It's ok to promote your own projects or content, as long as that's not all you do. See ["What constitutes spam?"](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) for more information. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hey man, this is an insanely great job. I'm curious, are you in your 20s or are you older? I'm 35, and all the background info you gave I knew about and had known since I was a teen. Sounded like lots in the audience didn't know either. This surprised me. So I'm just curious if this is a generational divide or something. I remember being a young teen, maybe pre-teen or even younger, on AOL downloading MIDIs and using various warez to edit them, create new ones, change instruments, etc. It's not like I was sitting in some high tech lab in a big city, I was on a 3600 baud modem using AOL in a town of 40,000 people or something where I didn't know a single other person who even programmed. Since you mention Geocities, I'm thinking you must be in your 30s, but I dunno. Just wanted to ask!
About that, just throwing an opinion here, wouldn't \[...Array(100)\].fill(0) be more readable? My question was when I read is, why would I ever need an array full of values anyway? .-. I hope someone slaps the author for that last example lol
Search for WebRTC
Encourage your users to try Skype. It's free. 
u cannot do it this way. &amp;#x200B;
Is there some way to achieve this? Its for a chrome extension. 
Woosh again omg this guys dont get it
Your first example is a bit silly. There's a functional _and_ readable version that's been around since ES3. var array1 = ['a', 'b', 'c']; var array2 = ['d', 'e', 'f']; var array3 = array1.concat(array2); // =&gt; ['a', 'b', 'c', 'd', 'e', 'f']; // or even clearer var array4 = [].concat(array1, array2); // =&gt; ['a', 'b', 'c', 'd', 'e', 'f']; Concat also has the benefit of "array-ifying" values. var array1 = ['a', 'b', 'c']; var array2 = ['d', 'e', 'f']; var array3 = 'g'; var array4 = array1.concat(array2, array3); // =&gt; ['a', 'b', 'c', 'd', 'e', 'f', 'g']; I feel like almost every example of using rest/spread, you can usually do in less steps if you stop to think about it. An even clearer version of your sum all numbers without any iteration at all: function sumAll(n) { return (n * (n+1)) / 2; } Also, spread operator is not copying objects by value: const x = { a: 'a', obj: { b: 'b' }}; const y = { ... x }; x.obj.c = 'c'; console.log(y); // =&gt; { a: 'a', obj: { b: 'b', c: 'c'} } It copies own enumerable properties. If said property is a reference it'll copy the reference. It also doesn't copy or trigger setters, be careful if your code uses those (e.g. if you're spreading Vue components or something): const x = { _a: null, set a(val) { this._a = val; }, get a() { return this._a; }, b: 'b' }; const y = { a: 'not _a' }; const z = { ...x, ...y}; // =&gt; { _a: null, a: 'not _a', b: 'b'} I caution people to not use rest/spread as a catch-all replacement, but instead with intention where it's appropriate. 
no.
Hi /u/geongeorgek, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/tonefart, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
You claim that your code has no problem and is written well, but if the types are so inconsistent that they cannot be figured out by type inference, implicit types or trivial type annotations, casting or compiler flags, then it's really hard to see how your code can be readable, maintainable and correct. You're getting objective feedback that your natural code quality is bad and rather than improving your code quality, you're just getting angry that there is an objective way to tell you that it's bad. TypeScript will trust the programmer, it just does so explicitly (e.g. programmer sets compiler config, programmer casts a variable, etc.) rather than implicitly (i.e. "I found an error but I'll assume it's intentional"). That kind of "trust" is the best compromise between the idiocy of blindly trusting programmers that has led to countless issues and the painful rigidity of having no leeway at all. That way, you can easily go against the rigorous and proven quality standard that is strong typing, but to do so, you have to explicitly say what assumption you're making. Explicitly stating that assumption makes it easier for you or others to troubleshoot or build on that code in the future. It also provide an indication to you of how fragile and readable your code is the more you have to do that. It's not like type systems are some garage project. They're a more rigorous and objective standard than linters, coding standards and other norms that were made by some of the best minds on language and software design using decades of experience. Either way, if you don't want to use TypeScript, don't. If somebody is making you, argue with that person, not us. We don't care if you personally want to use it. You're wasting your time and ours when you specifically click into articles about TypeScript to whine about how that one particular programming language isn't pleasant to you. There are obvious benefits that are widely supported by some of the best and most experienced minds in language design and software development. You can personally not care about those benefits. But unless you're going to come up with constructive and concrete arguments for that stance in the right time and place, keep it to yourself. Nobody benefits from the comments you left on this article. And the arguments you're making are mainly vague subjective outbursts which don't really lead to a constructive conversation anyways.
That was one of the reasons that I went with the class as key/decorator instead of reading from the constructor.
Good point, how do you nest CSV data though?
Check out the WebGL work over at [Shadertoy](https://www.shadertoy.com). Many of the examples there interface with the [microphone](https://www.shadertoy.com/results?query=&amp;sort=hot&amp;filter=soundinput) or directly with [Soundcloud](https://www.shadertoy.com/results?query=&amp;sort=hot&amp;filter=soundinput&amp;filter=musicstream).
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain
I'll have you know I make some absolutely sick tunes with ejay and hosting on my Angelfire site. My hit counter says I've had 1184 visits since opening 3 years ago!
Hi /u/7incent, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dcwerfferv, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jmerlinb, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
[Imgur album](https://imgur.com/a/XNfZzj5) with the same graphic for other programming languages - for comparison! | If you want more information on how these were created, it can be found [here](https://www.globalapptesting.com/blog/picking-apart-stackoverflow-what-bugs-developers-the-most)
I understand your point of view and I can agree, but I think that programming in ES6 by composing functions may result easier, maybe the article can be improved that way, what do you think?
I actually use this when I need (for example) an array of random values for testing purposes
it certainly needs a "how to play" section, first I tried to move the "catcher" with the mouse, then WASD but then cursorkeys. the stepping of movement by 20 to each side looks kinda sloppy, you could make it more smooth by setting it to 1 and let the bricks themself fall a bit slower. 
"Avoiding immutability"? But why?
I heard each Chromium instance reserves 1.5GB of memory if I have good memory...
Very insightful, thank you!
The moment you mutate data you introduce a side effect, which makes it difficult to trace where that side effect occured. This becomes an obvious problem when writing reducers in redux. Bugs start showing up that are hard to trace, so you start using an immutable library :p
Clearly not; 1.5 GB are being consumed by a damn electron app.
Ok thanks for the feedback.
Uh-huh. Thanks for correcting me :)
Hi /u/yuri_s, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
link is insecure
You may also like /r/learnreactjs for more React tutorials. :)
You've invented the Single Page Application :) I had a quick glance at your code, one tip for you is that if you want to know if a variable contains an array you can just do Array.isArray(array), instanceof should only be used on objects. I recommend taking a look at MDN and Stackoverflow for best practices. Great work.
It's missing a script to actually bundle the application for distribution, which seems like a big oversight. It also doesn't appear to provide a way for you to exit the application. You don't need so many folders and files to organize your code, that just spreads things out needlessly. You're not making things more modular just by placing them in separate folders. For example, I'd move `src/constants/index.js` to `src/constants.js`, and `src/main/index.js` to `src/main.js`. If I were planning to create a bunch of utilities in separate files with meaningful names then I might keep `src/utils/`, but if it's only a handful of helper functions in `src/utils/index.js` then I'd just pull that up to `src/utils.js`. Let's paint the bikeshed red. I went through a similar phase when I was first starting off with node, where I tried to be super modular by spreading things out over tons of folders and creating a bunch of superfluous `index.js` files. I don't fully agree Ryan Dahl, but I think he makes some good points in his [10 Things I Regret About Node.js](https://www.youtube.com/watch?v=M3BM9TB-8yA) talk. He considers index files a mistake, and suggests referencing files directly in your imports. This has the benefit of being faster since it's unambiguous, and it makes your code work in the browser as well. Using Electron for this seems like overkill, especially if it's an application meant to be running all the time. Here's a rough equivalent using PyQt: [System tray &amp; Mac menu bar applications in PyQt](https://www.mfitzp.com/article/system-tray-mac-menubar-applications-pyqt5/). It's way simpler and uses fewer resources. The implemented behavior of the menu bar on macOS is wrong. If you're going to re-implement native functionality you should do your due diligence to make sure you get all the details right. The menu should close upon losing focus, and it should respond to hotkeys. This is the relevant section from Apple's Human Interface Guidelines: [Menu Bar Extras](https://developer.apple.com/design/human-interface-guidelines/macos/extensions/menu-bar-extras/). 
Try Vue. Also steep learning curve? The distinction in angularjs for factories/services/controller what ever and their clumsy DI is not really friendly either and this was highly remedied by angular 2+
I love Stephen Grider tutorials too :) 
I didn't learn those, what I learnt in angularjs was the two-way data binding, ui.router and a translation plugin, and those were why I liked angular. 
Thank you so much, had no idea this existed. Now I'm wondering what other learning subreddits are out there that I'm not aware of...
I see. Well the databinding is super easy in angular 2+ you only have to write the HTML tag attributes a bit different. [] For inputs () for output s via event emitter and [()] for two way binding. The routing is a bit different because it's way more powerful with guards and lazyloading options. 
I would say Vue, for sure if you just like AngularJS' syntax. I agree that Angular 2+ feels clumsy and over-engineered. You might also look at lit-html, which is gaining a lot of traction lately.
First time uploading anything to my site and this is a BETA and hopefully i can make some improvements to the game quickly. thanks for understanding.
You should use ES exports instead of a monolithic file, in general it needs to be more modular. Also you should use real prototype methods, the way you currently have it every Vector gets its own instances of the Vector methods. Either use a class or the old style prototype methods. What you’re doing is inefficient. Also why are you doing a requestAnimationFrame within a setTimeout?
``` function valueIsMissing(value, isRequired) { if (!isRequired) return false return !value || !value.trim(); }; ```
Instead of `const r =` ... then `return r` just ` return {whatever your r value is}` ... Sorry if this is not clear. I'll clarify when I get to a computer and off the phone
I already mentioned several things it cannot handle. The "feedback" is that typescript is weak, not that common patterns are wrong. People who rely upon static types are simply making a bad trade off. They pretend that it is helpful, or that they need less unit test coverage, but they have been proven wrong scientifically. It's simply a worse way to code. Dynamic programming is objectively more powerful than static, so typescript is strictly negative. And yes, not using ts is best, so I do that as often as possible.
I'm in my late 20s. I think I caught the very tail end of the MIDI web culture and only because I was a huge nerd and got online earlier than most of my friends. Thanks for the kinds words. Btw, I'm curious what you think is stopping you from hacking around on projects like this. Is there even a few hours per week that you could devote to hacking?
Do you or anyone else know how these compare with the Stephen Grider stuff? Deciding which I should invest my time in (though I’ve already purchased the Stephen Grider courses)
Nothing compares to frontendmasters
What are you attempting to do? The way this is written guarantees the function always returns false.
Nice. I've experimented a bit with [mithril &amp; a-frame](https://flems.io/#0=N4IgtglgJlA2CmIBcBWAjAOhQZgDQgGMB7AOwGciFlDLYBDABzPihHwDMIEzkBtUEnTCIkIDAAsALmFhsaJSfAXUQAX1wChIsQCse+YgqWTqhspIAEAJQCCAEQCSAVQDKFgLwXMABgA6JM0s7JysLMI8LACZvGP9AiwAhAHknADkAYQBRCMisf38ESwAjOlhYAE0I20dXfIDScwsXAiV4COB-MIA3CHgAdwAKAEoLDpJwiwAneEkAV0nxsAGAcjoAWjIWknhl3FGSggBrAHNJolmSKCQLZeJYIknrgGI0NEjI7Gxl9U6JiyXVms6GRmJIyLtfn9-isIGBjrtRtBrssikQAB4AFXgaLm0wRZEmBGRUkkTCQAHpyRAMLDjvMMMQwOSwOUwGAipMGBgdAx4aohrhIX8AbSEcAkTcyIcAJ5YnHzHZ7AlEm4ksmUghQEgYOjsSZaGlEcnYABs3jWsLox3ga2OpQQk2la1RXHgnPoiipcPJzAI4ngsEk3N53wFQomIrhYoly1O50uctxiosyuJklJZAp5M12t1+uEhvJ6wYdAgRkmXqt8DI5PY9wewb5Q3DFjD42FK3WBC0+rFy3rhzWhkkZ1g4OuI9m8D2yz6wKgQ9II8o44sk+nFgYRDIEEkEFI118IG8XgwAHYUBY-Go21DKQD1sZd9Kxd3hPrkXQCHuuvAJ5MpwRfsiCIQdh1HVd1xnOcyAXcCV2Wf8pz2Lcdz3A8bhPLCgKgOhJHWPMtDWKB4HYOhZkDIcezoRC1wA+B+UFdsI07Z10TFVDd33EhkTWNArywCw1i+PY+mgSRxGRHwEX9CBjikKSMG8BESIYCTkW8DBIhQBEznw9CeMwiwABZL2UvY7geZEnmM9J0mwOwAE58XEOgoCIPokIY28O0BMgGH9PE9mAVMbieVFMWxJMEU4gzrgAAxPAASYASjKcpVCElB4r2fUoAgWZM2sexnBcCzKCssKADEatqly3I8rzGJbB8h2lWAyxIyYOO3LiMOWfjNIvISRKmNyCqK5ZNJ0vZZPkyRFJmixLMeaqqvSE0UDser3M8uip2a5jwlahh6G2MVQuWJ44wuKBEwVGLerioyTzWYzdKIfTuN4xysKvBExKgdSbhQcyLDmhSQbBlbrNquqlVc3amp8ljAUUHExS6Uop2RABZXdxEmLgLAAMgsGw1iq-N4AAQgRGG1rhx60O+iwjz4jBsCiITIiPJVuwQQ8QEwS8RdPFAj0OqFWqlF9gsup5ZfuvF+SFZt21UfxNZIfwwAwMB40kAZ3IIWZhAUDBUSgaU9maVp1biBpLHMOhJkkDEIjsPD4AwEgPOGOp2Aub9uIsesGGGUZfniSxPC9xRff99WwkpTdXboVEOoICxUWDtoDYM6OnYsNEIgGAZLDWFN8LdjERgAUgsYIrBGckLAGZuLDbyIRirtBfjSioqhK1wLAAakSFIMmyAAqdv+Kr0u57RZP-gwaYoH1QZV+mABHKdzBsEhLQMqmtAGcP1e1-w94PyQj5P7iz+EC+QIYdW5GYBAQ4aag0EcpAJo1AaBAIIYQ1AGQgjkMOYwKhVAAF18AdRIIcHgSB+CgK0NQSAEkiayHwPMWQog1SZkpBcBgJwGRECZDgwmXAAACmBMAmmZATPB3J9AgEkNKBg2hNhEzUsAzQ4DRCEXAQQyYRCQAkKzOQyhjIix6i0PQzSAAODAaByT5XMIo6mawwDAkUJMDhchuG8OoPwiAgiEGqCAA) which you could also do with React or whatever. Is there an advantage? I suppose react-three-fiber is smaller if you're already using React. I haven't had a project to really try this approach on yet. My gut is telling me there's a 50/50 chance I'd find it useful... it's hard to say. Anyone tried a virtual dom approach to 3D applications? (Other than just wrapping a webgl canvas in a component.)
I got you fam. I'm mobile so this is psuedo but hopefully you get the idea. const valueIsMissing = (value, isRequired) =&gt; !isRequired ? false : !value.trim().length; 
Hi /u/KaizenLionNinja007, you've [been instructed](https://www.reddit.com/r/javascript/comments/anuq3o/) to post questions to /r/LearnJavascript previously, so I'm going to ban you for a period of 90 days so that maybe you'll listen this time.
Hi /u/energier91, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/dobkin-1970, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/tony2tones777, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/utopianow8, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/aleaallee, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/enimeeze, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I prefer Stephen Grider for example. Opinions mate ;) &amp;#x200B;
brain holts into and intermediate courses on frontendmaster is I believe the best resource for learning react. https://frontendmasters.com/courses/complete-react-v4/
You Don't Know js if you haven't already read it.then switch to frameworks like angular , vuejs ond popular libraries like react and jquery
Thanks
Hi /u/slowking_0, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
You cloud use this. https://jsbin.com/pumuxevoka/edit?html,css,js,output
&gt; I already mentioned several things it cannot handle. All I saw is you choosing to make sarcastic statements from your gut as though they're fact rather than directly respond when I noted that through language features and compiler settings, you can make anything that'd be valid in JavaScript a part of a TypeScript project. Meanwhile, you also didn't explain why anything that it supposedly "can't handle" is actually important, while I explained why strong typing helps improve code quality and helps in debugging and refactoring. The more you talk, the harder it is to believe that you have any substantial development experience. &gt; Dynamic programming is objectively more powerful than static If it's objectively better then you should have a good picking of peer reviewed objective studies that show that. Could you share them?
Personally I’d do it all on the client, unless you need the SEO or performance. If you are trying to reduce the calls to the API, you can introduce a caching layer. 
Hi /u/JollyComplex1, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
RemindMe! 30 days
Thank you very much!
He works at Microsoft now too, which is a cool coincidence. 
No response? This is really cool. I love the idea of bringing the past to life with technology. A+ Effort here. 
Thank you, I agree. I want to learn how to crack it next. The Bombe could crack a message in about 20 minutes. Let's see how I do. :)
Frontendmasters is worth purchase? I am thinking about buying it or udemy top courses
Hi /u/FanceyPants, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I gave you three examples that it cannot handle, do you not know what they are? You can easily find the studies with google. It seems you are the one leaning on gut feeling, not me.
Hi /u/sinha_shiven, this post was removed. `404` Well, this is awkward. Whatever you did is so uncommon that we don't have a canned response for it. It's also possible that you broke several guidelines. Either way, please have a good look over our guidelines (linked below and in the sidebar). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thanks, for the advices. I am using a timeout to limit fps, because I think it will give better performance. I dont really know how to use exports but I will try to do it. Can you tell me if it worths working on it?
This whole comment is you continuing yet again to not justify your point and instead pretending I'm supposed to do it for you... I'm not here to make your case and I'm not here to invent evidence to support it. If you're this lazy at making a point and this reliant on imaginary studies that are so easy to find that you can't be bothered to find them, it's really no wonder why it gives you such a headache to write a program that passes the basic scrutiny of an optional type system.
/r/learnjavascript and /r/learnwebdev are a couple.
yeah, so 508 or just saying WCAG would be way more efficient...
What’s their angle?
You haven't justified your own point. Why don't you do that. You keep claiming that the cargo cult of types has some benefit based on nothing but your gut. It's clearly extra work and cognitive load - you can find numerous studies of that fact if you want. 
Sorry, my bad! Thanks for hint, where can I post my problem!
I've released the editorconfig-checker 2.0.1 which is acting as a wrapper around a go tool to be able to provide a stable API and feature set across different languages.
IMO 100%. If you're just interested in learning the vast quantity of quality course on Frontend masters makes it worth the purchase. 
The hash in front of private functions/props really hurts! Soooo ugly.
Great work. Although it is old concept/technology but it is always cool to rebuild using the latest technology.
Getting uglier. 
+1 for Stephen Grider as well. His late 2018 update of his React course made it so much more thorough and awesome! People who say it isn't as advanced should first complete the "Modern React" course and then move on to his "Advanced" one.
Been doing THREE for a couple of years now and the one and only problem is the same: the code is getting unmanagable at some point, with THREE even more so than with other imperative systems like jQuery. React can help there just like it could with the dom, and if the renderer writes into a dom node or a scene is more or less the same. I still have to write a real project in it now, but i think this will rip complexity out of THREE and make scene graphs reactive.
I'm a big fan of the MERN stack (MongoDB, Express, React, Node). I've found that a lot of companies are looking for these skills too. In terms of mobile apps, you could look at React Native, which uses the same architecture as the web version of React, except using native mobile UI components. 
Why the huge unrelated picture at the top of the article. Why make me scroll to read anything of importance? { Above the fold } 
Hi /u/Menda0, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
For what? Serverside/clientside/the different browser runtimes? The different standards mailing lists occasionally crop up interesting discussions, e.g. https://esdiscuss.org/ You generally master stuff by using it, not through online reading rampages.
!RemindMe 4 hours
I actually created a tool for this exact use case a while back and it's available on npm. [https://www.npmjs.com/package/css-puppeteer](https://www.npmjs.com/package/css-puppeteer) If you decide to try it and run into any issues let me know.
Try these &amp;#x200B; Design pattern in JS - [https://addyosmani.com/resources/essentialjsdesignpatterns/book/](https://addyosmani.com/resources/essentialjsdesignpatterns/book/) (important ones are revealing module, module, mediator, pub/sub, factory) 1. Large scale JS architecture - [https://addyosmani.com/largescalejavascript/](https://addyosmani.com/largescalejavascript/) and [https://www.youtube.com/watch?v=b5pFv9NB9fs](https://www.youtube.com/watch?v=b5pFv9NB9fs) 2. MVC in native JS - [https://alexatnet.com/model-view-controller-mvc-in-javascript/](https://alexatnet.com/model-view-controller-mvc-in-javascript/) 3. Open ended questions like improve web page performance (caching, CDN, sprites, minification etc) 4. Security in web pages (HTTP headers, CORS, XSS etc) 5. ES6 features 6. Closures in JS - [https://stackoverflow.com/questions/111102/how-do-javascript-closures-work](https://stackoverflow.com/questions/111102/how-do-javascript-closures-work) 7. Coding guidelines - [http://jstherightway.org/](http://jstherightway.org/), [https://github.com/airbnb/javascript/blob/master/README.md](https://github.com/airbnb/javascript/blob/master/README.md) 8. this in JS - [https://stackoverflow.com/questions/3127429/how-does-the-this-keyword-work](https://stackoverflow.com/questions/3127429/how-does-the-this-keyword-work) 9. Inheritance in JS - [https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance) 10. Debounce and Throttle in JS - [https://codeburst.io/throttling-and-debouncing-in-javascript-b01cad5c8edf](https://codeburst.io/throttling-and-debouncing-in-javascript-b01cad5c8edf) 11. prototype vs \_\_proto\_\_ - [https://stackoverflow.com/questions/9959727/proto-vs-prototype-in-javascript](https://stackoverflow.com/questions/9959727/proto-vs-prototype-in-javascript) 12. Open ended question - AngularJS vs Angular vs React vs Vue. (when, which, why etc) 13. Generic curry in JS - [https://gist.github.com/shidhincr/7315316](https://gist.github.com/shidhincr/7315316) 14. Polyfill for forEach, map, reduce etc - [https://gist.github.com/githiro/5819142](https://gist.github.com/githiro/5819142)
That’s awesome. I’d add one thing. A warning to state that some CSS may only be used after some user interaction and therefore could be removed unjustly. 
Prequisite for all below suggestions: Knowledge of JS, and ES6+. - If mobile apps are your target, then react-native should be your focus. Use `react-native init` or `expo`. Expo (https://expo.io) is easier to get an app running, but has limitations. - If server-side is your target, node.js should be your focus. It's also possible to use node to build standalone scripts to perform tasks that might otherwise not be possible in batch/bash/shell scripting. - If front-end web is your target, reactjs, angular, vue.js should be your focus. - If desktop apps are your target, electron JS + front-end (as above) should be your focus.
You can't i think it's for flat datasets. I always wondered however if there was some minification technique out there like how we have Uglify for JavaScript. Like a "label" object at the top that translates the fields from human readable to single characters to save bytes or something.
Would it be best to try and interact with the app as much as possible before having the report be generated? Maybe some automated end to end tests?
Kyle Simpson alone is worth it
Thank you!!! This is what I was looking for! 
Start with a project, and whenever you don't know how to do something, look it up.
I want to know how JavaScript is build how it works, the possibilities &amp; the limits, pretty much anything about. Why ? Because I want to write very efficient scripts for frontend &amp; backend web. 
Hi /u/AWSTrainingInHouston, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Exactly this kind of learning does 90% of all devs but I want to be the master who people refer to because of my fabulous ideas.
Mastering means writing a lot of code, like a decade worth of work. Nothing else will bring you to that level. I'm one of those people, but everybody who envies me for that forgets (or doesn't know) that I started programming 30 years ago and spent nearly my whole adult life practicing it. There's no magic bullet, it's just straight work and discovering a lot of things by doing them wrong the first (or second, or third) time around.
Was kind of confused right off the bat. What is `states` in the first code block? I dont see it defined or passed into the constructor?
For mobile apps, it helps a lot to look at the native frameworks. Even if you use React Native in the end, sometimes you have to write stuff natively when there's no implementation for it.
that would make sense, but still, you'd need to make sure that you cover all bases -- you miss something, the automation then removes the style definition, and then you'll have a broken site. It's a tricky situation and may not apply to cases where there's heavy user interaction and CSS modification as a result.
Okey convinced me.. so the good old way. was hoping for guide that covers any topic that may appear and save my time.
&gt; You generally master stuff by using it That's valid for pretty much anything in **life**. It doesn't matter how many books you read about swimming, you'll only learn to swim when you go out on the water.
There is no such thing, because every situation you might run into during development is different. Nobody has found a way to codify that into written rules yet, and the rules would most likely be larger than any other written work currently out there.
I will be the first who writes it
Note: for the accurate, complete list see: http://2ality.com/2018/02/ecmascript-2019.html This article was written just before that list was finalized and has not been updated. Only 2 of the main features covered are actually in (class changes and bigint did not make it) and only a few of the other candidates listed at the end.
Turns out the problem here was order of occurrence the event was fired before a listener was created.
Hi /u/5ubSer0, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/civicbasel, this post was removed. _"It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius_ * If you advertise or promote a paid product or service, or a site which you would in some way benefit financially, then please [buy a sponsored link](http://www.reddit.com/advertising). * It's ok to promote your own projects or content, as long as that's not all you do. See ["What constitutes spam?"](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) for more information. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/DrBlueJazz, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/masaj_71, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SleepingAriadne, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Lekowski, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/TheWebUiGuy, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/bapugraphicsins, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I'm sitting here thinking about Microsoft, and that they basically rode the crappy train all the way to the top. They never had the best OS (Though windows 7 was pretty fab), nor the best security, nor the best editor (wordperfect/open-office, though notepad was secretly the cool kid there).. Email client (Thunderbird, etc) And now they're giving away tutorials on a framework they didn't create... But they dominated business. And still do for desktop environments. How?! 
It could also make sense to add an `exclude` option that takes a list of strings / regex expressions. A lot of the times, certain class naming conventions indicate interactions (e.g. `is-active`) and an exclude a pattern like `is-*` could be used to whitelist these.
why would you use jquery AND vuejs and not just pick one? vuejs just for a search is a tad wasteful on resources. thats the issue with using the behemoth bootstrap is. comes with a ton of crap you'll never use. for prototypes this might be ok but for production, i think its really bad.
You are probably exactly 1 generation too early for the old "I know kung fu" plug-and-play skills, sorry
Simply being the best doesn’t succeed in ANY market. Execution, delivery, consumer access, etc are all big factors, which Microsoft absolutely stole the show with early on and once they had the lead they did everything the could to secure that only they had... maybe you’ll remember some DoJ discussions with Mr. Gates? Go read some of the business advice / start up subs. Everyone experienced will tell you that your ideas don’t really matter, and being the best doesn’t really matter. It’s all about reaching your market and executing. 
Ok now anything makes sense
thanks 
Thanks /u/Charles_Stover for making that subreddit. Now I know where to post [Charles Stover](https://itnext.io/@Charles_Stover) articles. :))
That’s a good idea! 👏🏽
Fun fact: async await works with these custom Promises too! `const demo = async ()=&gt;{` `console.log(await new Nancy((resolve)=&gt;{` `setTimeout(()=&gt;{resolve("ok")},5000)` `}))` `}` `demo()`
1. The fact that you think that telling me to justify my point (whether or not I did) gets you out of justifying yours and the fact that you think you can once again cite imaginary studies that you assign me to find in order to prove your tantrum justified tells me you are either a troll or so stupid and/or emotional that it doesn't even make sense to debate you, so this is my last comment I'll be turning off the inbox. 1. I have justified my point. I explained how it catches inconsistencies in code, keeps track of things beyond what a programmer could (e.g. what's happening two files over in a project you haven't worked on in 2 years relative to a change you're making), enables better tooling, better communicates your assumptions regarding what a variable should contain or where it should be used, enables some syntactic sugar and handles automatically re-targeting all of that to different ES versions as they popularize. All of this is in line with what decades of experience has taught people who actually make substantial software and/or work on teams, while your complaints that we should instead just "trust the programmer" are from a philosophy that was being phased out by the 80s or 90s by anybody who was trying to make a stable system, a lasting project or a large project. It does all of this while being able to do anything that you could do in JavaScript and a lot of it can be done automatically through inference and implication.
This is why I wouldn't even attempt this on any time-sensitive project. Potential CSS regressions, which can be difficult to test, and for what? A 100KB savings, in the most egregious scenario?
Playing nice. Getting as many people as possible using their tools. Hoping for later sales of Azure resource to host any resulting projects.
Bootstrap requires jQuery...at least until the next version, which will take the jQuery dependency out. I could just do the search in jQuery, but I find Vue a lot easier. This template could definitely use some work in the compression part, but heck, it's version 1.0 and I'm looking for help tightening things, specially in the webpack dept. I'll probably eventually move this to a componetized version of bootstrap in Vue.
Good, clear thinking. I should know this already. Made some brilliant software and tried to give it away, but instead we got handlebars and laravel... Not that they're bad. 
!RemindMe 3 hours
*OwO, what's this? * It's your **4th Cakeday** AwesomeInPerson! ^(hug)
jQuery did it first ;) (Yes that was a terrible attempt to riff off the "Simpsons did it first" meme.)
Promises are an interface not an implementation, which is why this works.
Their angle is some scummy underhanded garbage. Avoid MS at all costs at all times and you'll live a happier life.
Hi /u/enmanuelduran, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Yonidn, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Fun fact, "native" Promises as roughly as native as jQuery promises. [here](https://chromium.googlesource.com/v8/v8/+/4.3.65/src/promise.js?autodive=0%2F%2F) is source code of Promise used by 90% of JS runtimes.
Author of the bootcamp repo here. My angle is that I have to train a lot of my colleagues on these topics quickly - believe it or not, lots of engineers within Microsoft is really excited for this stuff but not everyone keeps up to date with the JS ecosystem. I felt that the most effective way to do this is open sourcing this material. Micah, my PM, and I had been working on this for weeks prepping an internal bootcamp. We took the approach of making this material actually free online as well because we felt lots of people outside of the company can benefit! &amp;#x200B; The two of us do belong in a group making the OSS React web components (UI Fabric) that are shared within MSFT products, so we plug our related repos. We think those projects are cool too! So check them out :) 
Thanks for the history lesson.
I didn't create that framework... but I did create this one that is in the same vein: [https://github.com/Microsoft/satcheljs](https://github.com/Microsoft/satcheljs) It is a Flux library built on top of mobx. Not much press on that one, but it is exclusively how the new Outlook web app manages state in the entire app. So, I can say that one scales to 100's of devs. In building that lib, I learned a lot about Redux. Since so many product groups within MSFT love Redux, I thought it best to train more people to understand the code that's been written in the repos we have around. &amp;#x200B;
&gt;here Whats with the modulus operator before function calls?
[https://github.com/narendrasss/coin](https://github.com/narendrasss/coin) React newbie here, working on my first big project. Still a WIP, only the register and login pages are fully working. Feedback appreciated!
What is the reason specific reason why this was removed? it's an article about code and implementation of ternary operators. is this maybe because it's kind of a beginner content?
https://github.com/bbrinx/newsfeed I built a newsfeed that’s supposed to mirror my morning routine. It’s supposed to be as clean and simple as possible. For each category it has a few of the most important newspapers, which each display 5 articles. Right now it reflects my families and friends interests, but I’m thinking of letting users do some customization, maybe selecting from a few newspapers and categories. I’m also thinking about 
The links sends me to a watch repair web site, confused...
Ms, pretending their just 'good folk' and not the multiple times criminally convicted tax dodging spying H1B slavers they are.
I looked at `home.js` and all I can think is, "why would anyone make a website this way?"
bit misleading NodeJS is not doing anything, these are bindings to a C++ lib that does the actual work ;)
what about scrolling marquees ?
I use jest/enzyme in my day job, but i prefer tape/sinon in my homebrew - and generally dislike proxyquire/rewire etc, but YMMV
yes but why use bootstrap at all? you're including two js frameworks (libs) plus one bloated css framework where you use a minimal part of each. and the two js libraries are trying to solve the same issue. (with different approaches) i'm not saying what you built is bad because of it. but payload size and writing efficient code is part of the job as frontend dev. if you want to work on proper projects you need to put consideration into why you'd use a framework. all of this increases computing time and page load time. and in your case, for absolutely no benefit. open up your dev tools and check the stats. you'll see that for your (very small) site the user loads 4.7MB. 93.4% of your css is unused and 4MB js just for dropdown and search is a bit heavy. or dont you agree? i in no way want to put you down, but i think you'd benefit a lot from trying to build the same page with little to no dependencies. (both js and css)
Congratulations from Vietnam :)
Hi bro ^^
nice idea, but absolutely unplayable.
I totally get what you're saying. This is a template and a demo as well. And it's version 1.0 at that, so I'm being very loose with what I import. It's not meant to be a real work production site. I'm looking for contributions, so I do plan to improve things. It took a ton of work to get it where it is. &amp;#x200B; In real projects you do often end up importing more than a single library. As I mentioned, I plan on building on this project. Doing something, even if it's imperfect is better than not doing it at all. I'm welcoming pull requests if you want to help. I do disagrees about no dependencies, the web is built on dependencies.
Hi /u/software-dev-2020, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
&gt; is this maybe because it's kind of a beginner content? That's correct.
How do I play this? Is there a trick I don't know about to make the favicon bigger?
Hi /u/WebDevJourneyWDJ, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/cherouvim, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
why was this taken down? &amp;#x200B;
I wish I could apply great tech like this more to everyday app dev.
Hi /u/vaxosv, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
whay we need this? 
Number crunching, which (in my experience) really only comes into play for scientific and gaming applications.
Maybe I don't totally understand, but why couldn't you just have... ``` function rotate(angle) { el.style.transform = `rotate(${angle}deg)`; } ```
True, but does it make a difference?
I don't get who would even need them in JS.
I like all of these gpu libraries, but I still have no idea why you need to do large matrix math on the clientside.
Couldn’t you just pass an integer. Ie onclick-myFunction(45); and then in your function tack on the deg? This would also allow you to do math?
Your second example can be fixed by using: “rotate(“+x+”deg)” or using back ticks ‘rotate(${x}deg)’ (sorry I am on mobile) and using an input of ‘45’. I am unsure why rotate requires Xdeg. I imagine there is the intention of adding radians in the future. But I agree that a string input would make more sense. 
The reason this is quirky is because it's not JS at all. It is a string containing CSS. You could do "rotate(" + x + "deg)", or \`rotate(${x}deg)\`. It is the equivalent of this in pure CSS: #forty-five { transform: rotate(45deg); } &amp;#x200B;
And now my eyes hurt
The second example won't work because you're trying access a JS argument variable, in this case `x`, inside your string of `"rotate(x)"`. So what's really happening is you end up just setting the transform property to the string of `"rotate(x)"`. As the other commenter mentioned you need to use template literals or concatenation to get the value of the variable in the string: `document.getElementById('forty-five').style.transform = \`rotate(${x}deg)\`;` or ES5 version `document.getElementById('forty-five').style.transform = 'rotate(' + x + 'deg)';`
Noob question. This could not be used with node in desktop? 
Node.js poker solver app?
Why is my gpu fan on. Are you cryptomining -Client
i'm sitting here on a 3440x1440 monitor like... wat. lol favicons are literally about an 1/8 x 1/8 inches for me lmao
I just made this codepen. Let me know if this is what you are looking for. https://codepen.io/anon/pen/moJoPg
So....wasm in a year. That count?
Did he leave any source maps behind along with the minified code?
Hi /u/Neelam1403, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Live_Setting, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Nope. 😃
There's no content if you're just asking a question; either do it or don't do it, and then share that. 
Hahaha, I got a good kick out of that. That is awesome! All of the comments about it being unplayable seem to miss the point that it's a novelty project
Exactly!
I have no idea what I'm supposed to do.
Try r/reactjs but without a source map I also think you're in hot water. Good luck! 
I'm pretty sure the right answer is just to rebuild it. The site isn't super complicated. So I'll probably just do that. 
i clicked my tab, hit "N", then used WASD to move around -- it only scrolls if you move sideways though 
LocalStorage :) 
64X64 is the biggest size I believe. 
Hi /u/memeable-bear, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/imizaac, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/branded_to_kill, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
So... JavaScript typically runs in the context of the browser and the browser's memory is typically wiped out when you refresh the page or close the browser window. That said, there are ways to persist memory in the browser between refreshes and closes. Traditionally, cookies have been used. Cookies are little bits of data stored in the browser that stick around until they are purposefully cleared out. More recently, browsers have started using localStorage and indexed databases. localStorage is pretty cool and pretty easy to use. You just use setItem and getItem: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage Local storage will persist until you tell it not to (aka, **it will save things between refreshes and browser closes**). Alternatively, you could use something like Node to build programs that run outside of the browser. Node comes with npm and npm has a built in package for manipulating the file system on your computer. That means that you could have a program that reads and writes a file on your computer. The file could hold JSON data that you could store your user data in and it would persist just like any other file on your computer.
\&gt; First of all, I'm new to coding in general so I'm sorry if this is a dumb question. &amp;#x200B; There's not such thing as a dumb question. Welcome to the coding world - keep asking anything that pops a huge question mark above your head. &amp;#x200B; To keep data in your browser after closing the window you'll need to use a storage mechanism provided by the engine. I'd recommend \[localStorage\]([https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage)) as it's simple to get a grasp on it. &amp;#x200B; Youd' want to store your Reminders in an array e.g. &amp;#x200B; window.reminders = \[\]; function addReminder() { var p = document.createElement("p"); var i = prompt("Enter your reminder here."); window.reminders.push(i); } When your app/page gets closed you will be able to safe this array in the localStorage &amp;#x200B; window.addEventListener('close', function() { localStorage.setItem('reminders', window.reminders) }); &amp;#x200B; Your data will be persisted now. To get it in your app when starting up your page/application you'd want to load someway &amp;#x200B; document.addEventListener('readystatechange', function() { if(document.readyState === 'complete') { window.reminders = localStorage.getItem('reminders'); } }) And the last part would be rendering your reminders &amp;#x200B; function renderReminders(reminders) { var wrapper = document.getElementById('reminders') for(var i = 0, j = reminders.length; i &lt; j; i++) { var reminder = document.createTextNode(); wrapper.appendChild(reminder); } } &amp;#x200B; This could be a simple way of persisting your data. I'd suggest reading up on \[browser storage apis\]([https://developer.mozilla.org/en-US/docs/Web/API/Web\_Storage\_API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API)). &amp;#x200B; \*The code above is kept simple to not overwhelm anybody having a relatable issue.\*
Start by focusing the page (click anywhere), and then Press "N" to start the game. Move via arrows/"WASD", and shoot with "N"
I mean, what were you expecting?
I think it's just 32x32, there's some special cases for retina / higher PPI but that doesn't appear to apply to Chrome on my monitor... shit is tiny lol.
Just remove the first two words, and you won't look like a prick
See other comments, it's a thing done to see if they could, not intended for real use.
Filthy casual, some streamer is probably gonna speed run it blindfolded in a couple of months 
FiveThirtyEight is misspelled :)
That's how cool Medium has become. Hacker Noon's ads at the top won't allow even the title to be seen :)
As Dave mentioned, because interface is compatible. It is fun fact nevertheless, I think anything thenable could be awaited, maybe?
p01 comes from the demoscene, where making playable games is most definitely not the goal. The goal is to show off very creative ideas and push the limits of what we conceive to be possible in a given environment
https://github.com/mreluzeon/polyhedron code from hackathon
Speaking of favicons, does anyone have a good resource/tool/etc. to know all the icons and configurations I actually need for the various browsers/devices out there? I see a lot of negative feedback on tools like https://realfavicongenerator.net/ without a lot of explanation.
&gt;a thrilling retro shooter Citation needed
Just remove this comment, and you won’t look like a prick
Ok, here's a great question, what's the best way to keep react UI update performance hi on pages with lots of nodes? A possibily incorrect question: how do I keep render from being called on components who's data hasn't changed? (assuming use of Redux &amp; connect at a component level) 
These all use webgl, so not without some modification for openGL
Because using a var in that exampleenables it to be an one-liner that can be glanced over. Var is *function scoped*. It ignores *block scope*. You're confusing var with implicit declaration with no keyword at all, which creates a global variable in sloppy mode.
Games
This is neat! We're actually in discussion right now to look at lerna alternatives and if we want to move away from a monorepo. I'm definitely including yarn workspaces and this utility into our discussion. Thanks!
Large favicons are usually used when you create a shortcut to a webpage on your desktop or phone's home screen, not while the browser is rendering it.
Which version of Windows and IE? 
The reason it was invented is to coddle java heads. You are still burping up more unfounded assertions. Typescript still doesn't handle duck typing or multiple inheritance sanely. The only thing typescript adds is a bit more autocompletion in ides. But it's not worth the overhead of dealing with it. Types are pure waste, which is why dynamic languages are taking over.
Windows Server 2016 and IE 11
Windows Server 2016 and IE 11
!RemindMe 12h
is this your issue? https://stackoverflow.com/questions/21155137/javascript-localstorage-object-broken-in-ie11-on-windows-7
https://www.reddit.com/r/learnprogramming/comments/46w8g3/javascript_what_does_the_percentage_sign_in_front/
neato
Before the edit, it said ""Noob question. ..." I probably should have realized that they weren't trying to talk down though. My bad
https://stackoverflow.com/q/23391353/8037425
Not exactly. Because I use the Remote App Version of IE. My local IE works just fine. Also the behavior is different, I receive a "An internal error occurred in the Microsoft Internet extensions" error
Not exactly my issue. It seems like the Remote IE App is not being able to access the localStorage. I receive a "An internal error occurred in the Microsoft Internet extensions" error. Not even when I just try to retrieve the localStorage content it works.
Soo, I've been working on tooling to implement a company wide monorepo here at Uber. Here are a few thoughts: We found that yarn workspaces were causing yarn to run out of memory during lock file generation once we our stress test passed around 50-100 applications. We also experienced some issues w/ tests hanging in some versions of yarn (due to a bug in its handling of SIGINT). We are currently proceeding w/ [Rush](https://rushjs.io/) due to its compatibility with all the 3 major package managers (NPM, Yarn and PNPM) and its ability to enforce all developers are using the same package manager version. Yarn does have some nice features (e.g. offline cache), but I'd avoid putting all my eggs in the yarn basket if you really care about scalability. The commands you have are, in my experience, not super useful. I find that I almost never need to add a dep globally to all packages (and I've been working on migrating some 70 repos into a monorepo the past few weeks). The few times I needed to ensure one was there, it was easy enough to just whip up a quick node script to do it for me, and the other few times where adding a dependency was part of a more involved migration rollout, more expressive codemodding tooling was usually required. I wrote https://github.com/dubstepjs/core for that purpose. I'd say it'd be more useful to have a command to add a dep to a _single_ package, and rebuild the monorepo node_modules/lock file correctly (which is something that running `npm install foo` under lerna would notoriously break). Mind you, this also involves checking that you're not introducing a million transitive versions if sibling projects already have a different version of the dep, and/or handling test regressions if you want to auto-upgrade said dep globally. Speaking of upgrading, another thing that is important to have is something to help you maintain dependency versions. The `rush check` command is very helpful in telling you when you have out of sync deps. We also built internal tooling to roll out codemods and batch-upgrade dependencies whose release cycles we own (e.g. https://fusionjs.com/). At a minimum, you need to be able to actually land an upgrade on a global dep (read: a large lock file update) even if you have dozens of people pushing commits that may cause a lock file conflict The main problem w/ web monorepos I'd like to see solved right now is scaling cold installs. Now the workarounds involve either generating a huge ass global lock file (the yarn workspaces/rush approach) + aggressively deduping transitive deps (via e.g. yarn resolutions), or building N node_modules that are often 90% similar, which floods the network w/ dupe calls to the NPM registry. We're currently evaluating [Bazel](https://bazel.build/) as a potential solution (Most of our orgs are moving away from Buck for various reasons). Another candidate is yarn offline cache + docker network mounts, but that's kinda CI-only. We're looking to scale to a few hundred web projects around this year, and merge all projects in all languages into one gigantic monorepo in a few years time. Happy to share ideas w/ anyone who's into monorepos :)
If you're asking you probably don't need this... yet.. but those of us who do are excited. It can be used for image processing, video analysis, transcoding, audio synthesis, machine learning/AI, scientific computing, advanced graphics, big data, search, gaming, engineering, encryption, simulation, statistical analysis, finance and a whole lot of other fields where you need to process massive amounts of data very quickly. Essentially modern CPUs are extremely fast bits of hardware- but for some computationally-intensive tasks GPUs make them look pathetic. It's orders of magnitude difference, hundreds of times as fast. There's a reason modern supercomputers are often essentially a large amount of Tesla cards with fast interconnect, and modern mobile phones have surprising amounts of GPU punch too so aren't left out. It's not where most JS devs work but this opens up a lot of new possibilities for general-use libraries too. Canvas animations encoded to h265 and encoded/streamed from the browser, loading a larger dataset to the client and allowing local data processing rather than needing to request as often and so speeding up response/reduce server load, 3d rendering moved from the WebGL to the Hollywood level to allow development of browser-based 3d packages, or similar for audio processing, client-side visualizations much more complex than anything achievable on pure CPU power, client-side AI allowing them to use deep learning systems without needing anything running on a server, or just having some fun with client-side face tracking capable of tracking the user's face pose using a webcam fast and accurate enough to animate client-side 3d characters.
Machine learning
why can't they just use the private keyword like literally every other language 
https://docs.microsoft.com/en-us/visualstudio/designers/creating-a-ui-by-using-blend-for-visual-studio?view=vs-2017
Thanks so much for the help!
This is next level. Clearly you have raised the bar. Gave me goosebumps :) 
3840x2160 1:1 here. [The whole thing is a speck.](https://i.imgur.com/CiB7taF.jpg)
Not working with a custom domain for me. Thoughts? Is it limited to certain tlds?
With mobx, it's automatically tracked so you don't over render - this was one of the reasons why the Outlook team picked that. With redux, it's all about using PureComponent to optimize this with the shallow compare. So this React optimization stuff outside the scope of this particular bootcamp material, but vital for great UX - hopefully the material continues points people to ask these good questions. 
This code here blows my mind: `const getCallback = state =&gt; value =&gt; {` Two arrow operators. You wot m8? Also this one: `catch: _ =&gt; this` What the heck does the _ do? 
Some great insights here 🎉 I built this tool primarily for my mono repo use cases as I use these commands slot they're super useful for me and speed up my workflow slot! It's still in its infancy and is only going to get better 🤞 In order to maintain a simple codebase it's only going to be supporting Yarn going forward. It just makes it a lot easier to ensure it supports all of Yarns future features. A note on cold mono repo wise installs, Yarn Workspaces is pretty great at this already, just running "yarn" anywhere in the mono repo will ensure all departments are installed in all packages. And if you haven't checked out Yarn Plug'n'Play yet you definitely should! This tool supports it out the box, it's install times are *ridiculously* fast 🙂 And I agree I often only want to install deps in a single package or only in say all web app packages. It does have a simple yet powerful 'include' option that supports comma separated package names and also wildcard names like 'app-*' 👍 
On my current clients project we use Lerna which works ok. What's nice about this tool is that I can use it on all my projects even if the rest of the team isn't.
Hi /u/sasisiva, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Hi, I do understand your point, but the project itself does parse gigabytes of JSON per second using Node.js. I did not mean I created the project aside the bindings for Node.js, I meant that I made it possible for Node.js. Cheers! 
Some people use '_' for identifiers which aren't used. E.g. if some callback is called with two arguments, but you don't care about the first one. Then you might feel inclined to use '_' to tell others (and future-you) that you won't actually use that first parameter.
This is stupid, great work
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/formula1] [Ricciardo's F1 Adventure - JavaScript Game (x-post from \/r\/javascript)](https://www.reddit.com/r/formula1/comments/avocvz/ricciardos_f1_adventure_javascript_game_xpost/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
hey, well i did i'm sorry if this is not permitted but i made little search to see if i can make a post for different subreddits if the posts content is linked to many subs.
where is the game ? 
hey click on the link "a javascript game" to see the video the game is not hosted online, i have it on my laptop only
&gt;a javascript game I do not see that link, maybe you can put it on github or something. 
I have a plan to put it online and the ability to record scores this way there will be some competition, maybe in the weekend i'll work on that 
i considered PixiJS but since React has more job demands, i would prefer the latter. &amp;#x200B; Thanks 
Well said by ino about _. Two arrows means a higher-order-function, meaning getCallback takes state and returns another function that takes value.
Why not both? You can build apps in react with a pixi app as a part of it. It’d give it a shot.
Do you wanna feel like killing yourself from RxJS, two way data binding and IN LINE HTML? Choose Angular! Want to get a modern web application out the door? React. ‘yarn create react-app ’ and you’re on your way. Want to have the shitty parts of Angular mixed in with React and claim it’s easier to work with? Vue is for you!
My philosophy is I never write "a game" in React or Angular. I write specific components in them. Because Angular demands you throw everything in it, it's automatically out as a choice (and many other reasons). React is good for simple UI that doesn't have complex animations. I'll probably do the board with custom code, and the rest of the UI as React as it's simpler.
Did you even click the benchmarks link in the repo? It actually shows you how much of a difference it makes.
It does not matter at all.. Just choose what you feel better with.
This question is answered here: https://github.com/tc39/proposal-class-fields/blob/master/PRIVATE_SYNTAX_FAQ.md#why-arent-declarations-private-x
React will make that easier, you have well supported libraries for drag n drop, gestures and so on. As well as powerful renderers into native stuff like canvas (react-konva), pixi (react-pixi), three.js (react-three-fiber) and so on. In other words you have the option to use not just divs with imagines in them but real game sprites or 3d figures, etc, and control them in the same reactive way that you control your UI. 
Interesting 
Just a heads up: Check out MoneyBrilliant. They have a very similar product. You're in for some competition :/ &amp;#x200B;
Judging this as a one day effort: 0/5: Deplorable and worthless: get rid of it or change it immediately 1/5: against most standards and you're gonna cry later 2/5: not bad, but pretty boring 3/5: good 4/5: dang i wish i thought of that 5/5: dang patent that idea and sell it gameplay: pretty basic. I was staring at the letters most of the time instead of the game itself 2/5 graphics, audio,vibe: simple but interesting. I buy it. 3/5 code: move your css out, you could have done this with canvas in 2d - why even threejs?, otherwise ok 1/5 Where do you want to take this? I used to make small things like this in c++/SDL and now I'm making UIs. Would love to have a chat :) &amp;#x200B; &amp;#x200B;
*YOOOOOOOOOO!!!!* It's your **7th Cakeday** MiguelKT27! ^(hug)
Thats the best way of doing the chess idea imho. Write each part with the best tool. Pixi for 2D graphics, React for UI and state management
Budgeting app competition..? It's like a one step further from a todo list, I wouldn't care about competition AT ALL.
I'll add another alternative, with a little bit different use case - [https://github.com/mateodelnorte/meta](https://github.com/mateodelnorte/meta)
Definitely checkout [Chessboard JSX] (https://chessboardjsx.com/) I have been in the process of building a simple chess game using react and its been working out great.
That's a neat approach, I know some teams that would benefit from this
But I can implement it in 69 lines of code!!!
TBH there's so little to something like a chess UI, if it were me making it I'd probably forego a framework altogether and just use websockets / vanilla js. But really, you do you - there's so many frameworks out there because everyone has a different preference for their approach.
Worth to mention that this implementation is not 100% equiv to native Promises because it is not async (and it is not microtask, but that is cannot be emulated, iirc). 
Does this blow your mind? function getCallback(state) { return function(value) { ... } } Because it's exactly the same, `this` binding notwithstanding
One thing about React is that it doesn’t have to be used like a framework. All you need is JSX and one call: ReactDOM.render(). This alone gives you 80% of the benefit of React for 20% of the effort.
This is a stupid idea... And I love it
I wonder if it could work with something like https://github.com/stackgl/headless-gl for the gl context.
I used to be with ‘it’, but then they changed what ‘it’ was. Now what I’m with isn’t ‘it’ anymore and what’s ‘it’ seems weird and scary. It’ll happen to you! Seriously I don’t lerna or yarn are. I can guess what a mono repo is, I guess. 
Yarn is an alternative tool to NPM built by Facebook. It offered some much needed competition in the space and really forced NPM to to up its game, which it has done considerably. [https://yarnpkg.com/lang/en/](https://yarnpkg.com/lang/en/) &amp;#x200B; A mono repo is just a repo with lots of JavaScript packages in it, instead of a single package to a single repo. &amp;#x200B; My library @enzsft/mono and lerna are tools that helps you manage all those packages easily. [https://github.com/lerna/lerna](https://github.com/lerna/lerna) I don't use mono repos for all my repositories, but for quite a few projects I've found it to greatly speed up development rather than managing lots of disparate packages in different repos and manually symlinking them etc. Hope this helps. (Love the quote 😹)
React is a library, Angular is a framework. Angular is heavier but will give you pretty much all the tools you need, routing, form management, animations... React is just a library to handle the view, it gives you the freedom to pick other libraries you want for specific needs. It's down to a matter of preference, if you're a beginner with JS I wouldn't use a library/framework but do everything in vanilla JS until you're comfortable with it. 
I feel like you went to easy on React. &gt; Want to battle lifecycle hooks, constantly install and delete depreciating libs and think you need to reduce components every hour. Don't hesitate, choose React! FTFY
Your scientists were so preoccupied with whether or not they could, they didn’t stop to think if they should.
&gt; And if you haven't checked out Yarn Plug'n'Play yet you definitely should! This tool supports it out the box, it's install times are ridiculously fast 🙂 ❤️ And about to become *even faster* with the [v2](https://github.com/yarnpkg/berry) ;)
How would this be used for image processing?
Just use the [magnifier](https://imgur.com/a/pUPNcRK).
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/ZqT3jtu.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20ehgx15c) 
You know you can just use ANY text editor that supports syntax highlighting right? This isn't a compiled program it is text scripting and you do not need to pay money or require any special editors to do it.
Hi /u/Rasha__Essam, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Any of them. Angular is a framework, React is a library, but both can be used to build the same type of Web apps, that includes games.
React has the momentum at the moment and probably because it's better for more people's use cases than angular. Having used both, I prefer react for everything, but I can imagine that some of the features of angular could appeal to some people. 
You're making it out as if this isn't also true for Angular though... I'm also a React user and have very little interest in Angular but it's misleading for you to suggest that React will make it easier. It may be easier for you or me, because we're accustomed to React, but not necessarily for everyone.
I mean you don't even need JSX necessarily.
&gt;graphics, audio, vibe: simple but interesting. This is not our song, this is "Trash80 - Cascadia" &gt;why even threejs? We thought about to add more shapes, like triangles, etc., but we ran out of time. We choose because it was a hackathon and we wanted to try something new. &gt;Where do you want to take this? That was just a hackathon project and we want to rewrite the code from scratch in the summer holidays, because there are more than one bad decision, e.g. variable "z" and functions like "drawSquare" in the index file.
One more DOM classname string builder if you not enough yet 😁 It is **[lightweight](https://bundlephobia.com/result?p=cnbuilder)**, **[fast](#performance-recent-benchmarks-results)** and has **no dependencies**!
Let's say you want all the messages from a certain person. In a REST world, you might have to do one API lookup to get the id of all that person's messages, then a separate request for each individual message. You could build an API that actually just returns that right query, but if you want front end people to have more "write your own query" type powers, GraphQL is meant to solve that. I really don't like how many people have jumped on it - it's not a problem most users face.
Think of an image as a 2d array of colours, each of which has a red, green and blue component; and you want to darken a 4k image by 50%. All you have to do is multiply each colour component individually by 0.5. You have 3840 (horizontal res) x 2160 (vertical res) x 3 (red/green/blue each need multiplying separately) = 24,883,200 multiplication operations to process. That is a lot of very simple operations, and unless you're taking the overhead to go fully multithreaded for what should be a simple operation you're doing them one at a time (ignoring for a moment SIMD and similar CPU tech, they can reduce things by about a factor of eight or so on a high-end modern CPU). You're also going to have to keep track of at least one loop counter to iterate over the array which'll probably double the amount of work itself. The GPU is different though- it's always multithreaded and it's built to do the same operation on a lot of data. Even if you do go multithreaded an i9 can run 16 threads at once, but a 2080ti GPU is running 3,584 threads. Each of these threads is nowhere near as capable as those in the i9 but all we're asking them to do is simple multiplication, and they have special handling for colours since that's a normal data type for GPUs and so have dedicated hardware which gives them benefits at least equal to the CPU's SIMD. This is with the simplest image operation too, something slightly more complex such as a square blur with a two-pixel border involves multiplying twenty five colours by varying weighting values and then adding the results together for every pixel. More complex operations can involve thousands of mathematical operations per pixel easily. In a sense though this is what GPUs are meant for- they're graphics cards, they accelerate the massive image manipulation tasks needed to display even a simple UI nowadays. People are just using them for different sorts of image processing- Photoshop has been using GPU acceleration since at least CS6, browsers use it (it's called 'Hardware Acceleration' in Chrome, try turning it off if you want to see the difference) for rendering, and self-driving car tech is using GPUs not only for the AI but also for the image pre-processing necessary to convert camera feeds into a form the neural network can better handle. (Okay- I admit it, I'm really a graphics coder who just happens to also write a lot of Javascript)
Well we don't need computers necessarily. We can communicate with smoke signals. /s
Despite your sarcasm, by saying that you’re implying it’s uncommon or even difficult not to use JSX. Many people do so just fine! It’s simply a matter of personal preference.
Of course it is. But when using React's approach to stateless UI, you want to build the UI out of its elements, you don't want to just use it for a few nodes/tags, it makes no sense. And if you'll be building piles of HTML this way, then some declarative HTML-like approach becomes somewhat necessary so you can copy/paste HTML into your document (save for the few differences), and so you can read the resulting mess. To me, JSX is 40% of React's value and the stateless conditionally updated DOM is the other 40%, hence why I said "you get 80% of the value for 20% of the effort". In general we don't need React, sure. But the approach has some considerable advantages, because you don't have to react to events, you rebuild full models. More than half your code may be partial updates. That never has to be written for React.
&gt;then a separate request for each individual message. Not really, you always have a list operation and it is a common practice to allow a choice of fields. So no.
If this is a project intended to improve your skills and create programs for your portfolio, do it in React **and** Angular. And Vue. And vanilla JavaScript. Make four separate implementations of it. Here's my reasoning. Using all the current frameworks and vanilla JavaScript will show you're flexible (able to work in different environments), knowledgeable, and - most importantly - have a strong understanding of the underlying concepts of development in JavaScript. So, pick a framework and build your application. Then pick a different framework and duplicate it. Rinse and repeat, ideally with analytics showing the pros and cons of each.
I really don't like GraphQL. It violates HTTP verbs and is in my opinion a bit SOAP 2.0 combined with ODATA. If you want queries for your backend, I personally prefer ODATA. But I usually just write a really simple REST API that follows the HTTP verbs and am happy with that. I've never seen a usual sized application that actually needs these super duper nested queries GraphQL allows. Also from my experience, the frontend clients all have issues.
RESTful is awful at handling non-hierarchical, complex and dynamic relations. Just think if we have a RESTful API to search fast food locations in US, so you start with API like `/{brand}/{state}/{city}` but then some people would like to use zipcode so you would have `/{brand}/{zipcode}` but what if people don't care about the brand, but just location? So the better API is `/{state}/{city}/{brand}` for this use case. &amp;#x200B; So in the end you are indeed implementing a lot of APIs with duplicating functions and many of which might not even be used at all. This is ok if your code is only used among a few parties. But suppose your app or service is a big success and you get the VC funding and decide to roll it out internationally. Now what to do with you next version of API?
Maybe take a look at googles firebase [https://firebase.google.com/](https://firebase.google.com/)
I feel like I just leveled up at life while reading that. Thank you for such a well thought out response.
Whatever fits your developement style is the better. I'm more used to Angular (And only seen basic React examples) But for a simple one page application like this I'd recommend React, because it's way simpler. (But I'd use Angular because I'm used to that) But either way, one thing I can definitely recommend is TypeScript.
I'd put RxJS in a react app anytime. Once you learn it it's really great. I'm even using it in simple node.js apps.
Hi /u/NewPenBrah, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/abhorentmoron, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Depends on your usecause. The employer I work for had dozens of backends with REST services that we used to make our site. It was fine, but every page required connecting to 2 or 3 different endpoints and managing all the layers was a beast. As we looked to make it an isomorphic site, putting all that in code that would get shipped to the client seemed a little crazy, not to mention the fact that most of the responses shipped far more data than we needed in some situations (but not always). You could certainly convince me the syntax of graphql is weird, but the ability to get just the data you need with one query/endpoint is pretty slick.
Hi /u/HumanBirdFish, this post was removed. Prohibited low-effort content includes: * Questions that are easily Google'd. * Memes, jokes, etc. Please post to /r/ProgrammerHumor instead. * Most images and gifs. * [Listicles](https://en.wikipedia.org/wiki/Listicle). Please just no. * Polls, surveys, etc. unless from an accredited academic body or trusted source (StateofJS, etc.). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/isnotabagel, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/techprentice, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/AtACarnivorus, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Bennygak, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jonasosilva15, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/itjustaspot, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/SimplyStranger, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I'm happy that a lot of people started using without any "advertising", and I want to say: \- This tool can be used for "evil" I agree. however I'm using for give us great data for what software engineers should study or do to apply to enter on the best companies, or even do a better CV, so yes.. you can also use that for good stuff. \- LinkedIn asks for a manual check every time you log in a new device, so when people deploy it on a remote server without a GUI to solve manually the check..it's a blocker. So I'm looking for help to solve that automatically.. or another solution for that. Thank you and I appreciate feedback!
Not what I’m saying... why would one care if it’s doing the actual work in C?
My bad. It was about 7:30am when I replied, so my first thought was that you were being sarcastic about whether the library was any better than the default implementation in node. I wouldn't have made the same mistake if you'd said "Does it matter?", or said "Does it make a difference that it's being done in C++".
This will work with Node.js when version 2 launches. The brain.js dev is giving gpu.js a ton of love.
Great, now I'm going to be constantly looking for the hidden game in every favicon 
No prob!
I needed a very flexible React circular range input so I built one with Typescript and Hooks. You can find quite a few examples at: [https://react-circular-input.now.sh/examples](https://react-circular-input.now.sh/examples). You can easily animate it, style it and add your own custom components. Let me know what you think!
Whoa... people still use ember?
The interactive (input) ones are honestly some of the most frustrating UI controls I’ve ever used. They look cool, but it’s damn near impossible to get either 0 or 100%.
These are very cool! My only suggestion would be to not wrap so that it stops at 0 and 100%
Whats wrong with Ember?
Fair point! The interaction can be controlled by the consumer to allow complex customisations. I added an example that shows how to implement "steps": [https://react-circular-input.now.sh/examples#steps](https://react-circular-input.now.sh/examples#steps) . As a potential solution you could control the interaction to "snap" to 0 or 100 if that's a common need for your users.
How so? It doesn't exist in Angular is what i am saying. You can't [drive a THREE scene](https://codesandbox.io/embed/9y8vkjykyy) in Angular or a Pixi game, etc. What you would do is do it manually, then slap a HTML button over it. Thge concept of a reconciler is entirely missing in it. The eco system support is also not even close. I am also using Angular at work, so what, it's just a framework.
Hi /u/Pazze_, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
These hard hell on mobile :(
No keyboard support :(
What is the point of posting something like this? It's just a release announcement, lots of small/medium libs are posted like this here, they all have maintainers. No one is trying to make you use it over the other popular choices.
In this article I try to introduce Babel from the ground up in relatively easy to understand terms. The article discusses AST and parsing and how one can create their own Babel Plugin
Perhaps /u/iamp01 would like to explain further. 
Oh might be a bug as there should be keyboard support when the element is focused (down,left arrows to decrement and up/right arrows to increment)
Literally what I said to myself.
Nice post. I'm trying to decide between Gatsby and WordPress right now so I'm intrigued to read your "Why I choose WordPress instead of Gatsby (coming soon 😜)" post!
Yes, ember is still used by projects that don't chase the latest web dev fad.
This sounds stupid but because Developers, Developers, Developers When I was at UNI, the OS/2 vs NT war was just starting. Many people (including me) loved OS/2 and thought it was superior, especially compared to WIn 3.x. The problem was that C++ for OS/2 was something like $1700 with the student discount. Visual C++ was a few hundred and Boreland C++ was about $100 (DOS morning only). Once MS had the Developers, that’s where all the new apps appeared and along with some (cough) creative marketing and sales $$$, they pushed business onto Windows in droves and never looked back.
Looks amazing!
I don't really see the point of this. I could see it being useful continuous interactions, like scrubbing audio/video, except that it resets as soon as you get back around.
Stay tuned 😉
Hello, I'll take the job, remotely
For legacy projects, sure. Not so much for new ones, other than if the team is well versed in ember and not in Vue or React. It's still a solid framework for some types of web apps.
I did try out Yarn PNP, and while it does have fast install times, it unfortunately was breaking at postinstall/runtime on some random transitive deps (fs-events, globby and some other ones I forget off the top of my head). Also wanted to look at tink but it was still far too experimental when I looked at it a couple months ago. I'll definitely still keep coming back to evaluate yarn PNP again as it matures, but currently it's still having trouble with our dep set.
My guy idk what you’ve done in your React app that has lead you down these problems. - use a lock file and nvm to ensure no changes of deps between dev machines - overuse of lifecycle typically means stuff is in the wrong place, this is also solved with Hooks - stop writing big components ? All of these problems can easily happen in Angular and Vue as well
You should consider blocking scroll while interaction is in progress. Near impossible to use on mobile.
You can finally use your magic degree
?
to be cheeky
Hey, thanks for responding. It would be nice if that were an option. The idea is to get everyone together in meatspace.
I live in an isolated community, that would not be possible for me. Happy coding.
Hi /u/WorthPlantain, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Only thing I can imagine is a virtual DJ kit, a **D**igital **A**udio **W**orkstation
1) Hate, it's a bad idea. Only one advantage of typescript is IDE integration, and it can show some error right in editor. 2) Because no need to be a genius for setup jest, for typescript currently crappy support. 3) Output will be same js, but development slower.
Nothing, I don't think... I've never even used it lol. I was just commenting on how with the big 3 out there, I've never worked anywhere that uses Ember. And it's really rare to see a blog post or video with "How to make X in Ember" vs "How to make X with Angular/Vue/React." Just a cheeky comment really. ;)
The point is to make a little joke and maybe have someone crack a smile. Maybe even get a convo going on older/smaller libs vs the big 3.
Looking into it!
It's really nice if you work on a bunch of projects and don't want to have to think about what stack of stuff you taped together into an ad hoc framework per project. Top notch CLI tools, solid test helpers, less time bikeshedding. I want to like React more than I do, but whenever I start a project with it, I'm annoyed at how much research I have to do about things playing well together, or not having something simple like a service injection without having to wrap stuff in a provider. I haven't touched it in a while, though, so maybe I'm just dumb and things are better now. Hooks seem cool.
Project Page (?): https://github.com/rmolinamir/typescript-cheatsheet *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I started to learn it recently and figured it would be a great way to memorize all of its most useful features, if there's any error or anything similar just let me know and I'll quickly edit it! By the way, if you'd rather read this kind of stuff from a *README.md* file, [here's the link](https://github.com/rmolinamir/typescript-cheatsheet/blob/master/README.md).
Suppose you have a function accepting one parameter. Now this function does not accept null value for this parameter. What you do in JS is checking the value and throw if it's null. Sounds good, but if the callee does not know and pass null value then your app will crash. You may say check the value before calling the function. But if you change function to only accepts string then you have to check every callees that call this function. Yes, you can write more intergration tests to detect this (unit tests do not help you here). In Typescript, you can prevent this by default because the compiler will always yell at the callee. Without typing, you are just making assumptions everywhere. Typescript helps you REDUCE assumptions thus REDUCE test cases. As a result, this makes refactoring so much easier. Furthermore, dynamic languages are not taking over. Most new languages are static types: Rust, Go, Scala, Dart, Swift ... Even PHP includes some static-type features. &amp;#x200B; &amp;#x200B; &amp;#x200B;
Not for me 😕
Why we have to make everything about sex? :)
No problem, thanks for the explanation
In additio, \[Glimmer\]([https://glimmerjs.com/](https://glimmerjs.com/)) is sort of the Ember equivalent of React: just the view engine without the kitchen sink included. So it might be a good fit for projects where full Ember would be too much. 
gr8 b8 m8
Most libraries can be incuded local, but modern js doesn’t want you to work like that anymore.
You might want to take a look at Electron though. It uses Chromium to render your Javascript app in a window (like a regular software).
\*UPDATE\* I got the internship.
Sure, I do it all the time for things like portable reports, I package the data and the script and the html all into one html file and email it out. You can even wrap a js library in a script tag. Just put the stuff that isn't cut and paste at the top so you don't have to scroll through it. Or you can rely on the file system if you don't need it all parceled. OR, if you have enough space and a network-like connection to the microcontroller, you can put a little server on there. You need one, of sorts, anyway, you just need to teach it to serve "static" files (and figure out how to package them). arduino isn't going to have room for much of a page though, but you can probably do something interesting with it, might just roll your own canvas/svg code if space is tight.
I'm not 100% sure what you mean by 'customised' but if I assume correctly, the answer to your question is something like this: `function promiseResolvingFunc(res, rej) { ... }` The above function can then be passed in to your promise constructor directly, passing in the `resolve, reject` parameters. This also allows you to reuse this function in a case where you are making multiple promises. Hope this was what you were looking for. 
 function delay(time) { return new Promise((resolve, reject) =&gt; { setTimeout(resolve, time); }); } console.time('time'); await delay(1000); console.timeEnd('time'); You need that to actually end (resolve or reject) your promise.You can return data you want to be passed to `.then` method. function writeFilePromise(filename) { return new Promise((resolve, reject) =&gt; { fs.writeFile(filename, function(err, data){ if (err) { return reject(err); } resolve(data); }); }); } &amp;#x200B;
Hi /u/Devstackr, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/MrDragonNicaze, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/vagara, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/coco_pelado, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Thank you for your answer but we must go deeper. I understand the part with the function as the parameter in the Promise's constructor. What I don't understand is the two functions `res` and `rej`. They probably can be default implementations from the `Promise` object. However, the fact that they can be passed as parameters, hints that we can use our own versions. What I want to know is why would I want to do that and how these functions would look.
the `Promise` constructor takes a callback as param which will be called with the `resolve` and `reject` objects. These two objects are used to fulfill your promise, wether by resolving it or rejecting it. The callback allows you to either directly call the `resolve` or `reject` or to execute some code and pass these object to a different function to allow you to complete your promise some other time. Let's pretend we have a function `someFunc()` that return a `Promise` would be consider an asynchronous function. You could then use `someFunc().then((value) =&gt; console.log('foo'));`. What would happen is when your `resolve` object is called, `foo` would be logged to the console. In ES8 javascript, you could do the following instead, and it would result in the same execution order. `var value = await someFunc();` `console.log('foo');`
Oh I think I understand now, Short of overloading the actual implementation of Promise, the naming of your `resolve`, `reject` as parameters is as 'customisable' as you get with this. "... The fact that they can be passed as parameters, hints that we can use our own versions..." Umm, if by _versions_ you mean _names_ then yes, but if you mean _versions_ as in actually fundamentally changing the returned object from the Promise constructor, as I said before, short of overloading, not possible. "... Why would I want to do that and how these functions would look..." As far as I can see there is no implementation of Promise where you can define your own returned object fundamentally.... (again, without overloading...) So I can only assume you've seen this somewhere and potentially misunderstood the other person's implementation? If that is the case I'm intrigued to take a look at that code, care to share? Otherwise, personally, without having written an application that calls for that kind of implementation to be changed, I am not sure what a use case for something like that might be... Hope this helped? Lol
No, I haven't seen code like that anywhere. It's just that I got curious and what if. By versions I mean providing a different `resolve` function. Let's say, for example, the default `resolve` function is something like { resolve: function(){ this._resolved = true; } } or something like that Maybe I could provide a version that would do var my_resolve = function (){ throw_fireworks(); console.log("Yes it resolved"); this.resolve = true; }; and then return new Promise(function(myresolve, reject)){
Ok that makes more sense, cheers!
todo apps do not show anything other than a bit different syntax. So the comparison is kinda useless. Not to bash on article, just stating as is really.
You’re still cool Node, cheer up. Go to Bloomingdale's, get a new dress, and a facial. Oh, and hire a web designer quick, 'cause damn!
``` const obj = { [x]: y, [a]: b, [c]: d, }; ```
You could go one further and have snap points. I could see snapping to 25%, 50% etc useful. 
This is pretty cool. Is there something like this for building "slides" like powerpoint decks?
There’s an example for that! :) https://react-circular-input.now.sh/examples#steps
I usually don't bother stating this, as it's kind of pointless to go into a thread specifically about vue and shit on it, but seeing as how this is about both, my opinion is more on topic this time around. I really hate vue. I've given it a shot, I get what it's aims are, but ultimately you're giving up a ton of freedom you get with React when working in vue. Just look at this article is a great example. I already understand how binding works, and how this can be hijacked by callbacks. that's a very common theme in javascript. So i already get that either arrow functions or .bind is required to hold onto the context i want in my callback. In react land, i need to be taught nothing, as react doesn't even attempt to solve this problem. In vue land, I have to learn their way of dealing with binding. Plus, did we all forget the mess that was 2 way data binding from angular.js? it's like we realized redux was the way to go, then someone brought out a new shiny tiny very similar to react, except it had that two way data binding that caused so many issues for us before, and we're apparently sold on the idea now. anyway, long rant I know, but i just still don't get why vue has had so much traction these days on reddit.
Neat, I don't think you should restrict people to having to use the extension though. You also risk alienating people that already use a "new tab" extension.
did you ever find out? ran into first time today
Hi /u/RRASTX, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/chtulhuf, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
alright :) good luck!
Not every programming project has to be totally unique, I hate this attitude 
So True!
I totally agree with you. That's why at @30-seconds we developed all projects as separate websites. For example JS snippets could be found here: [https://30secondsofcode.org](https://30secondsofcode.org), interviews over here: [https://30secondsofinterviews.org](https://30secondsofinterviews.org) etc. This extension was a way to connect all educational resources together and provide seamless learning experience :)
not saying it's bad cos it's unique. That was a heads up, \_juuuust\_ in case he wanted to develop it further into a product or sth. I see he probably didn't :3
So, disclaimer up front, I am a complete React fanboy (and a Redux maintainer), and I don't ever want to use anything else. Having said that: each of the major frameworks has its own totally valid selling points, and it's perfectly reasonable for different folks to pick different frameworks based on their own opinions. Some examples: - React - "It's just JS" - no templates, no special syntax other than JSX - Big ecosystem, pick and choose the pieces you need to fit your use case - Lots of new concepts and innovation with React itself, and the broader ecosystem - Very widely used - Core team provides tools to help migrate older code patterns to newer ones - Angular - "Enterprise-class" - Batteries-included, well-defined patterns, CLI for generating new functionality - Use of TypeScript works well with large-team dev and maintenance - Vue - "Just drop it in and go" - Single-file components provide a simple pattern - Core team maintains and integrates all pieces, with great docs - Don't have to worry about doing things "by hand" - state changes update UI automatically - Ember - "Stability and consistency" - Convention over configuration means projects work the same way every time - Careful addition of new features in a backwards-compatible way makes incremental updates easy - Excellent CLI tool for managing various aspects of development So, plenty of reasons to choose any of these tools.
Oops, forgive my ignorance! I've heard of 30secondsofcode, should've figured this wasn't just aping the name... You guys do great work!
How does Ember compare to Next JS or Fusion JS?
Pretty neat, thanks for sharing! I noticed that even after turning off React in the options, I still get React questions and snippets on new tabs. This does not seem to be the case with Python or PHP. Any plans to add Angular questions/snippets?
Hmm, that’s a weird bug. The project is still in early release so it might need few more fixes. Speaking of Angular, I think we will definitely make 30 seconds of Angular im the future. Making those websites with quality material takes time and knowledge so it’s not a one day one man job. But we will try our best. 
Thanks for the response. Looking forward to seeing what improvements you come up with. It's already a great resource and will undoubtedly help me prepare for my upcoming job search.
Good luck with job search. If you happen to need any help, feel free to drop me a DM.
Thanks, I may do so. I really appreciate that.
Hi /u/ClearedFram3, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Until tests would help you not to make such a fragile external interface in the first place. An export function which outright crashes on null is not common in js. That kind if thing may have a place in C because you optimize for each opcode. But there is little value for that type of micro optimization in js. If you are wrapping a c++ lib you guard it, you don't pray the compiler detects nulls. If its a native function, don't go out of your way to crash or throw. Leaving time bomb functions all around your code is goofy in a weakly typed dynamic language. A null works fine almost anywhere a string does, not to mention nearly any other type. If you are spending time on this you have already lost the battle for efficiency. Coming up with makework like this is not good justification for type overhead. Within a module, use unit tests to prove it has no landmines or bad corners. Across modules you present regular and uncomplicated interfaces, not types or classes. You avoid sharing complex relationships or multiplicity assumptions. There is very little for a type checker to do but slow you down. 
Demo [https://amitdiamant.github.io/magnify-3d](https://amitdiamant.github.io/magnify-3d)
Dreamweaver opensourced
This is a really good summary. My way of viewing Vue vs React is that React is more robust and have good concepts and patterns to go after and it's good for large applications. Vue is easy and small with simple ways to put it in most projects. At work we use Vue to complement a already finished frontend with new components. And we use react for new applications that will be full JavaScript frontend.
I used "null" here is just a example. What I want to emphasize the type of the function parameter is not known by the caller which is dangerous. For example, your function accepts a number but the caller puts in a string instead. This is not micro-optimize but a security issue.
Snippets could use some more code coloring, I find it hard to read when everything in react is white.
That can be because with Ember you dont really need a tutorial 😉
Dang this is awesome but I can't replace my new tab screen because it has useful shortcuts on it. If you could expose some interface to store some HTTP links at the top or on the sidebar so we can put common links there, I will switch to this!
Does const i=2 and i++ work? 
This is awesome ty 
I'm having the same issue. My settings don't stay saved. 
The 30 seconds claim is misleading... makes me not want to use it at all. There's just no way you can understand all of the ticker example in 30 seconds. Even two minutes seems generous. I checked the GitHub repo and none of the snippets are trivial.
Really happy to hear you like the extension, and yes I'm aware that a lot of people have their New Tab extension they don't want to replace. There is always an option to use [https://30secondsofcode.org](https://30secondsofcode.org/) it has all the js snippets found in this extension, or [https://30secondsofinterviews.org](https://30secondsofinterviews.org/) which has all the interview questions from the extension. After all the extension is powered by these great projects. If you however think that a quick bookmark feature would benefit this extension, you are welcome to open an issue here [https://github.com/petrovicstefanrs/30\_seconds\_of\_knowledge/issues](https://github.com/petrovicstefanrs/30_seconds_of_knowledge/issues) . This way I won't forget about the suggestion and others can comment on it so we can better decide if it's something that would be good to add. &amp;#x200B;
Thanks for the response, glad you are liking it so far!
Thanks for the feedback, I'll se what I can do for syntax highlighting for React. We are using highlight.js that does this for us but I see what you mean about React not really being readable.
What you're describing would definitely require overloading; It would look something like this (with some non-existent notation) `@overload function Promise(cb) { this.cb = cb return { this.cb(...arg) } }` Just for the record, this will definitely not work, but if you look into function overloading in javascript, you can create a function that will allow you to overload other functions, which will allow you to do what you are asking. Hope this helps ☺ 
Been using this one for a while. I think it would be great to add simmilar snippets category from one of the following: https://github.com/ryanmcdermott/clean-code-javascript and https://labs42io.github.io/clean-code-typescript/ they have a similar short syntax and would fit in even better for a quick read (as opposed to as somemone mentioned below some of current snippets whcih require much more than 30 seconds). 
Done! Cheers. Glad to know about the sites, thanks. I like the way the new tab makes the learning passive :)
Sorry for this dumb question but how I can use this extension man? Is this extension filled with javascript projects or codes,interviews so you access them, because I have installed and I have no idea how to use it ?
Nevermind i forgot I had to start a new tab in Chrome to see what's the purpose of this extension lol. A question: When I open a new tab it shows me sometimes answer of question so every time I open a new tab it shows me answer below too right?
Try screenshoting it
or you can use a different version of chrome. https://www.google.com/chrome/canary/
Use 2 chromes? Why would I do this?
@colcosmos, Hey man thanks for the feedback! I mean, yes, sure it's not possible to understand every single piece of code in 30 seconds. If that was true, programming wouldn't be as competitive profession as it is. but think of it more of a catchy name that indicates learning in short bursts on concise and usable examples of code. In any case there is no timeframe for you to read and understand the snippets provided by the extension, and you can always save them for later if you find something you like and would like to explore it further. In any case, thank you again for your feedback and if you have any more concerns or criticism, please do tell. Any constructive criticism is more than welcome and will help me push the extension in the right direction! Cheers. 
Actually i put a little save button and a library, faster than a screenshoot :P
Hey, if you are talking about Interview Question snippets, then yes, all of them come with at least partial solutions and answers. However it is only to motivate you to inform yourself on the topic more and come up with your more extensive answers :D
what a great tool! 
Hey /u/jimmykup, /u/CarpetFibers, I've gotten this complain once before but wasn't really able to replicate it in order to find a solution for it. If any of you two are willing, could you open an issue here [https://github.com/petrovicstefanrs/30\_seconds\_of\_knowledge/issues](https://github.com/petrovicstefanrs/30_seconds_of_knowledge/issues) and provide some more info about the problem. It would be really helpful. Thank you both for your feedback!
Glad you are enjoying it!
Hey /u/soulshake, I'm afraid that the content from those repos wouldn't fit in with the format of the snippets currently in the extension. I could see it as a separate extension though. Maybe a new one in the future... :D
Seems like ... &amp;#x200B; `const result = ticks.reduce(( result, elem, i, arr ) =&gt; {` `if ( i &lt; 2 ) return result;` `result.push( process( arr[i-2], arr[i-1], elem ) );` `return result;` `}, [];)` &amp;#x200B; Ought to work ... ?
I installed it. I clicked off PHP, I'll see if I still get those questions or not. So far, it's working as it should. Thanks!
Hi /u/mo-salah22, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
love this! a port to firefox would be great : )
Planing a port for firefox, some of the contributors are already working on it. Hoping it won't be long before there is a firefox port as well. :D
If your options don't get saved for whatever reason please do go over to github and open an issue :D [https://github.com/petrovicstefanrs/30\_seconds\_of\_knowledge/issues](https://github.com/petrovicstefanrs/30_seconds_of_knowledge/issues)
Great, will try to se how to implement the bookmarking feature so it makes sense with current content. Thanks again!
So after restarting my browser, I was unable to replicate the problem. May have been a one-off thing. If it comes up again I'll be sure to open an issue with more details.
Great, will try to implement it in a way that makes sense with current content. Thanks again! :D
Deal, if the issue shows up again give me a nudge on git :D
Oh I remember gulp, those were the days...
You realize how silly it is to crash, rather then using Number on an external interface when there is fragile code inside ? Js does weak implicit typecasts, so this is nearly never an issue.... if you prefer fragile code with strong types maybe you shouldn't use a dynamic language at all... 
Throwback Thursday.
It's easy to find something without security out of the box. Hard to find with security out of the box.
Seems like this is equivalent: const processArray = (arr) =&gt; arr.reduce((acc, val, idx, array) =&gt; { if (idx &lt; 2) return acc; return acc.push(process(array[idx - 2], array[idx - 1], val)); }, []) &amp;#x200B;
"Js does weak implicit typecasts" =&gt; you state the problem. When your function expect a number, you put in a string. When you put "0" instead of 0, what you got is "0" + 1 = "01" but you expect 0 + 1 = 1. Again this is a very simple example. "if you prefer fragile code with strong types maybe you shouldn't use a dynamic language at all" =&gt; Please suggest a language for front-end web development besides JS. I have one now. It's TypeScript.
If you are using js under protest, I get why you are so type oriented. You never chose dynamic, and you don't get it. There is a reason why strong catenation isn't done that way. Don't write fragile code. `${x}0` or "" + x + 0 work regardless of the type of scalar. It takes the time consuming handcuffs off to not baby sit the types and compiler. 
Almost, except Array.prototype.push returns the new length of the array, not the full array. 
I'm not say it crashes or it doesn't work. I'm saying the result of the function is not what you expected. function plusOne(num) { return num + 1; // This is simple code. Please don't say this is fragile. } plusOne(1) =&gt; returns 2 plusOne("1") =&gt; returns "11" In typescript: function plusOne(num: number) { return num + 1; } plusOne("1") =&gt; Error
Ah good catch, should've been concat()
If you know how weak types work, you put the type of the constant first so the second argument gets cast from whatever to the type you need for the operator. So yes, that is poorly written compared to other 1 + n. Alternatively you can call Number (n)+1. But obviously it can still go wrong if you pass it a NaN or an infinity. And types cannot help you with that. In practical terms, types are 2%-3% of possible bugs. It's just not worth the level of effort for such a trivial return. Watch this video for a longer explanation: https://vimeo.com/74354480
I only caught it because I've made the same mistake a lot :) 
Hi /u/knazim667, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
1 + "1" is same as "1" + 1. Both returns "11" and will cast to string first. Number(n) + 1 =&gt; Obviously this works but JS now requires more work than TS. I know I cannot persuade you. I programmed long enough to know JS &amp; TS well. The fact that you got a lot of downvotes on your first comment did say something. So good luck. 
RemindME! 12 hours “check spro”
Hello community! Sometime ago I created this library: [https://github.com/fega/mongo-server](https://github.com/fega/mongo-server). Is a Quick restApi development library I have been thinking about the posibility of evolving it to a headless Cms, but I'm really bad at naming things. I'd like to know some of your suggestions and pick the best/more popular. thanks so much!
&gt;https://github.com/narendrasss/coin You're using localStorage to store the token on login and then reading from localStorage to determine whether or not the user is logged in. Unfortunately, localStorage will throw errors when the user is in "Private" or "Incognito" mode. A quick fix is to use the following npm module. **Local Storage Fallback** [https://www.npmjs.com/package/local-storage-fallback](https://www.npmjs.com/package/local-storage-fallback)
In 5 years the same user will ask: # Whoa... people still use react? 
Thanks! I added that as an issue on the repo.
I like this, but I've had issues with custom rolled. Csvs in the past, particularly when the value to encode is a string with quoting or a newline character for multi-line values. It's really minor, but the system I worked on previously did something similar and we had a lot of trouble with data that showed up years down the line after the original programmer had left, and the systems weren't easy to fix. Since it's wrapped up in a function it should be easy to refractor, but I'd keep it off the snippets list personally. 
Is it available for firefox?
Hello, I was looking for something like this for a personal project [https://github.com/fega/mongo-server](https://github.com/fega/mongo-server) But even after check the docs is not clear for me how to use it. I'd like to see a quick basic implementation in the quick start page
I like it!
I'm developing static analysis tools called [DeepScan](https://deepscan.io). As the developer for the tool and the product manager in charge with project's code quality, I have some favor of using static analysis tools in the development workflow. To me, adherence to coding conventions has lower priority. Saying that to developers is some tedious and fix for it can be automated by the tool like prettier. But detecting possible runtime errors and common pitfalls earlier is important for the projects' reliability and developers' productivity. So my development team uses the static analysis tool in two ways: - Developers immediately check his code by the tool when they write the code in the editor - Managers check project code by the tool in the CI server's daily build (Detected code issues are notified to the team)
Hi /u/coding_is_life, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
You should post here when it's done.
Unfortunately not yet. However contributors are working on it, so it’s just matter of time when it will be released. 
They do. Ghost has all its UI written in Ember. 
Great.
Nice to hear that, I'm already longing for it, lol.
Please let us know when you’ve ported to ff
The downvote come from other java people who don't choose js because it is awesome and instead use it under protest. Even if you aren't willing to open your mind a bit, you should at least recognize that many people are not java newbs or haskelites, and actively prefer python and js because they are dynamic. Watch the video link, it's quite entertaining if nothing else.
It would be nice if there were a way to disable it.
Yeah, I like the simplicity of [Earth View](https://chrome.google.com/webstore/detail/earth-view-from-google-ea/bhloflhklmhfpedakmangadcdofhnnoh?hl=en) for new tabs. Beautiful photos from satellites curated for the viewers pleasure.
What's Ghost?
[https://github.com/vitkarpov/fast-xml-parser](https://github.com/vitkarpov/fast-xml-parser) &amp;#x200B; Hey there! &amp;#x200B; I'm a front-end developer "making something for fun in TypeScript", and here's my "blazing fast" (no performance tests yet 😂, aiming to comply [https://github.com/AndreasMadsen/htmlparser-benchmark](https://github.com/AndreasMadsen/htmlparser-benchmark) tests), with zero dependencies, XML parser in TypeScript. &amp;#x200B; Any feedback is welcoming, you can: \- point a direction or similar projects, where this could be useful, etc \- say that the code is horrible you should look at project X \- say that you ❤ TypeScript as well, want to practice, and we'll be collaboration and learn together &amp;#x200B; I'd like to think about this pet project as a public resume / showcase of the development approach. Open source on GitHub shows kind of project "management and maintaining" skills (issues, PRs, readme, docs, tests, linters, etc).
Long story short - they (generators) are pretty useless. If you want to check an array for prime numbers, use `some/filter/every` function: `arr.some(isPrime)`. 
Do not assume TS users are all Java users. TS is nothing like Java. TS is an optional static-type language, not a strongly-typed language. TS is more flexible then Java in any ways because you can do both dynamic and static programming. Java is stricter but does not make it a not bad language. Many enterprise open-source projects are written in Java because it works well for by enforcing constraints using types. For example, Hadoop, Cassandra, Kafka,... I used PHP and JS a lot before TS came out. I know dynamic languages well. Dynamic languages is plug-and-play. You can just start writing code and it does it job. But when you start working on enterprise projects with lots of team members, you gotta make some design decisions and type system allows you to do that through designing interfaces. I'm not saying dynamic languages is bad. But start with TS is always the right choice because it gives you more power because TS is a superset of JS. You don't know how fast or how big your project can grow.
As an _alternative_, you might want to go in a different direction. This would be extracting the _chunking_ operation into it's own function, without caring that much how that is implemented: let chunkify = step =&gt; size =&gt; array =&gt; { let chunks = []; for (let i=0; i&lt;array.length; i+=step) { chunks.push(array.slice(i, i+size)); } return chunks; }; Now, you have two distinct operations. One is setting up your data, the other one is processing it. So you would use this as: let splitInThrees = chunkify(1)(3); splitInThrees(data).map(process); One small note, though. The `chunkify` above is a common implementation that behaves slightly differently from what you want. I've written it that way because it's generally the behaviour most used. The difference is that it produces some dangling chunks at the end that are not guaranteed to be the full size. That is, with the above: chunkify(3)(3)([1,2,3,4,5,6,7,8]) // -&gt; [[1,2,3],[4,5,6],[7,8]] And in your case, there would _always_ be such chunks... chunkify(1)(3)([1,2,3,4,5,6]) // -&gt; [[1,2,3],[2,3,4],[3,4,5],[4,5,6],[5,6],[6]] As I said, this is _usually_, the desired behaviour for most cases. You could account for this later in various ways. In some cases you might leave it as is. In others you might account for this by discarding the last few chunks. But if you don't really want this, then you might just change the behaviour by writing it this way: let chunkify = step =&gt; size =&gt; array =&gt; { let chunks = []; for (let i=0; i+size&lt;=array.length; i+=step) { chunks.push(array.slice(i, i+size)); } return chunks; }; let splitInThrees = chunkify(1)(3); splitInThrees(data).map(process); Which for your case, it would produce... chunkify(1)(3)([1,2,3,4,5,6]) // -&gt; [[1,2,3],[2,3,4],[3,4,5],[4,5,6]] But for other more general cases would mean discarding some of the elements... chunkify(3)(3)([1,2,3,4,5,6,7,8]) // -&gt; [[1,2,3],[4,5,6]] instead of [[1,2,3],[4,5,6],[7,8]] Which _may_ -or may not- be more undesirable for a general approach.
Awesome, the chunkify operation sounds exactly like what I want, especially since it's generic and it covers other use cases.
Looks like it does, I was testing the code in CodeSandbox, vanilla TypeScript and it ran. May have been transpiled to a `let`. WebStorm on the other hand complained even with TS.
More like webflow opensourced :)
[removed]
I mean, Chrome provides this option by default, is there any particular reason for me to explicitly add it as a feature?
FYI, here's the talk Abstract Join this session for a deep dive on how Uber leverages javascript across its engineering orgs. From building frontend properties with a full javascript stack using express and react to the tools and infrastructure we use to automate best practices.
[https://imgur.com/a/U8YBjlH](https://imgur.com/a/U8YBjlH) Issue is with child objects not containing what you want them to. I'd recommend evaluating all state based properties before the return on your render function, keeps things cleaner.
Oh, are you talking about a specific snippet in the extension? It would be great if you have an issue with some of the snippets to open a discussion on [https://github.com/petrovicstefanrs/30\_seconds\_of\_knowledge/issues](https://github.com/petrovicstefanrs/30_seconds_of_knowledge/issues) for that specific snippet. This way since the snippets are community contributions we can have an open discussion if some of them need review-ing or removing! :D
If there was one thing I would say to pitch 30SoK instead of Earth View, it would probably be: "We don't track you" :P Anyway jokes aside. Of course not everyone wants to replace their new tab and there is no way for us to actually implement all the things people would miss from their preferred new tab extensions, that's why there are online versions of the snippets you can visit as normal websites. This extension is just a way to give some passive learning opportunities to people. Cheers! :D &amp;#x200B;
Hi /u/DimerBwimba, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
thanks I understand.
Are you using React js 
Agree with the second point, disagree with the first. They are both a) extremely useful, especially for creating custom iterators, and b) necessary for implementing features like async/await. Of course if they're used for tasks that don't suit their intended purpose they'll look superfluous, but they're far from it.
This looks great, Thank you
Stay tuned. The next workshop is coming.
Thank you very much! Glad you are enjoying it!
I know that they used under the hood of async/await, I also know how they work. But I've never seen anyone use it in real project for real purposes. Can you provide any real world use case for them?
Had never heard of webflow.. thanks!
I've seen several examples based on D3, though can't name any off the top of my head, so it might be worth scanning through their gallery ([https://github.com/d3/d3/wiki/Gallery](https://github.com/d3/d3/wiki/Gallery)) and looking for libraries that wrap it (there is a list of some examples of those at the bottom of the gallery page).
Ember has come a long way. You can use ES6 classes now, typescript support, angle brackets, decorators (RFC 240) and the Ember team has hands down the best release cycles around.
Registering my interest for a firefox port. 
Yes..Welcome
[removed]
Why does this extension need permissions to modify copy/past actions ?
You hid all the game logic into util. Why?
I agree the main functions for generate grid and update grid should have been in reducers file itself. I guess I did it to make reducers look clean. Please can you suggest what could have been better practice.
LinkedIn aswell IIRC.
Well there is a button to copy the code from snippet so you can paste it into your codebase or where ever. To do this i must explicitly state in extension permissions that I need a permission to modify copy/paste actions | clipboard. If you have any privacy concerns you are more than welcome to check to code, it is open-source. No data leaves your computer. The extension is intended to work offline as well so its not communication with any backend. Hope I cleared the confusion.
Project Page (?): https://github.com/tarekraafat/autoComplete.js *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
I run two chromes when doing webdev, so I can run different sets of extensions for "personal" and development use. Canary also means you get to test newer changes to chrome earlier, which can help spot future compatibility issues. For example, when the Symantec-issued SSL certs got disabled in Chrome it was rolled out on Canary first.
&gt; I get what it's aims are, but ultimately you're not learning javascript anymore, you're learning vue specifically. I really don't understand why people keep saying that. If you don't learn JS while working on a vue project, the problem is YOU. Back then when I only knew ES4/5 I made my way all trough ES7+ and latest JS features only through Vue projects. When I discovered it back at that time I really loved the concept and kept using it for my personal fan projects. The project that taught me the most JS and its latest features was a fan project for a game when I had to pull data from a server, organize and display them on the front-end with many option for filtering, optimization, searching and stuff like that. People are exaggerating about Vue directives preventing you from learning. Like, seriously do you still need to learn for, map reduce and co? Vue fans understand these things are utterly trivial, and that's why they op for directives because 1) it makes code clearer 2) more readable and 3) easier to setup than native for/map/whatever specs. If you're still at the stage where you have to learn a JS for loop to shit on v-for, YOU are the problem. &amp;#x200B; I personally dislike React just for its syntax. JSX. In my opinion directives are WAY cleaner, and easy to read. JSX is too verbose. 
Or that don't use Chrome (there's dozens of us!).
I find them useful for extracting/reusing loop functionality. Loop I want to reuse: ```js function logFiles(dir) { for (const fileName of fs.readdirSync(dir)) { const filePath = path.resolve(dir, fileName); console.log(filePath); const stats = fs.statSync(filePath); if (stats.isDirectory()) { logFiles(filePath); // recursive call } } } const rootDir = process.argv[2]; logFiles(rootDir); ``` Reusable: ```js function* iterFiles(dir) { for (const fileName of fs.readdirSync(dir)) { const filePath = path.resolve(dir, fileName); yield filePath; const stats = fs.statSync(filePath); if (stats.isDirectory()) { yield* iterFiles(filePath); } } } const rootDir = process.argv[2]; const paths = [...iterFiles(rootDir)]; ``` Details: http://exploringjs.com/impatient-js/ch_sync-generators.html#example-reusing-loops
Nah, Mongo is the shit.
you mean its 'the shit' == very good? or that its 'shitty'
Hi /u/big3ass, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Just don't import them? Or am I misunderstanding something from your description?
&gt; Long story short - they (generators) are pretty useless. Not really, lazy execution is actually every useful and can improve performance in certain use case. 
No, you’re completely right. I had utterly over complicated it in my head. 
Hi /u/2774a29a6a5b9b08000, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Happens, drink more coffee until it passes.
it d be nice if I could see examples on the website :) fyi, it gave me a https certificate warning
Hi /u/hardemeg, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Really great extension. But not sure if it's great to have it as a new tab. Maybe you make it that whenever we click on icon it opens the page, instead of new tab.
Also just a general suggestion, instead of keeping all the banner images, css, etc. in your codebase, upload them to some kind of storage and then write some agnostic code that will load relevant sale data and assets from a config file which references the applicable storage folder according to a single variable.
naming your frontend conf "IE" sounds a lot like bad luck :P
Hi /u/That-Redditor, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
\&gt; what would be good stack for fast blog? Fastest loading option will always be a static site hosted behind a CDN. Look into static site generators.
Strapi, gatsby, butterCMS some of them. I am using firebase with node for intance for small CRUD app with authentification, very handy.
Do not worry. Nothing deprecates or is removed. Some new syntax has been added and you are free to use it. But not forced in any way.
If you can solve the problem easily I'm es5, you can just use es5. It hasn't stopped working. You are just allowed to use new language syntax or features, but they can accomplish the exact same tasks. So basically. If you use .then.then.catch syntax it's fine. But you could use async/await and get the same result. But you are not required to, just able to.
Hi /u/mburakerman, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
There's a lot less _new syntax_ than you might think. And, as has already been pointed out, you are not forced to use _all_ of the new things nor suddenly stop using any of the old ones.
 earliestDateInTimeSheets != earliestDateInTimesheets 
Hi /u/elliotforbes, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Calor1, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
I mean, I prefer Firefox like any good American, but I still have to test in Chrome!
Hi /u/justnicepersonhater, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Earhacker, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jetthoughts, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
It sounds like highlight.js might not like ‘.jsx’ file extensions, if there is no syntax highlighting for React. Most of React code is just ordinary JavaScript, with a bit of HTML-like syntax for the component return values.
Hi /u/abhinav098, this post was removed. If you'd like to post a link, then please use the "Submit a new link" option. If there is additional commentary or links you wish to add, please do so in a comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
What [Maidzen1337](https://www.reddit.com/user/Maidzen1337) said. No bug in the system, just that it's case sensitive and you're calling the keys with different cases
Why not use the Web Extension standard so it could work in other browsers? Oh wait, I guess we only care about Chrome now.
may help with some perspective. I've been working with JS since my career began 14 years ago. I know it forwards and backwards. However, for the most part people i work with don't. They wouldn't begin to understand prototype inheritance. now that one can just write `class X extends Y`. and i get it. there super useful features of the language now. So, i don't learn these frameworks from the perspective of not fully understanding the feature set of es4 or es5, or even es7 and beyond. However, that isn't the case for everyone. people who start on stuff like vue. they couldn't tell you when half the features we have today became a thing, so how are they supposed to know which features aren't even JS features, let alone vue specific ones?
I don't see the option to disable it anywhere.
True. Thats most likely the case. I could simply use js syntax however I’ll look into a more complete solution that handles jsx as well
I've worked on many enterprise java stacks. They are horrible; the oop overhead really adds up and makes them slow. Combine that with threads, and you end up with megabloat. Some take multiple minutes just to start, and aren't fully hot for 45! Java is one of the worst languages in history. Php is not good, but even that train wreck is more productive than java. The reason I choose js when I have a chance is to avoid the chance that someone will use ts features. For browser work, I don't mind allowing jsx, but never ts when I get to pick the tech. Native node is optimal for server side, and high performance sections can we wrapped c++ if crtitical.
Thanks for the suggestion. I will add a demo section to the website :D if thats what you had in mind. I don’t plan to add all snippets onto the website for now though :D
Thanks for your feedback. That could be an additional feature but I think its rather subjective. Someone will like the new tab option better than the alternative. I still have to round up a lot more feedback to see in which direction to develop the extension further. 
Not sure why so passive aggressive towards Chrome. This was built as a weekend project. And as any mvp I made decisions to do as much as possible in a short amount of time. That meant choosing things I was most familiar with. The firefox version is most likely coming soon anyway :D
any advantage of CRA?
Very slick, really well done.
I use an app called JamKazam which appears to be an electron based music app. Not what you're specifically talking about, but might be good to look at.
There's a bug, higher zoom levels don't work. There's an offset out somewhere...
[https://developer.mozilla.org/en-US/docs/Web/API/Web\_Audio\_API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API)
Thanks, I'll check it out anyway, sort of looking for any kind of lead right now! 
TGIF, right? We've all been here before.
Almost got the same question in the r/reactjs community, here is the answer: &amp;#x200B; [https://www.reddit.com/r/reactjs/comments/aw48hb/rb\_a\_simple\_boilerplate\_for\_your\_react\_projects/ehk3if6](https://www.reddit.com/r/reactjs/comments/aw48hb/rb_a_simple_boilerplate_for_your_react_projects/ehk3if6) &amp;#x200B; &amp;#x200B;
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
Fixed! Thanks u/license-bot 🤖
My gosh *facepalm*. Thank you /u/Maidzen1337!!
Indeed! Boy is my face red. But you guys couldn't be more friendly and helpful, frankly. Thanks for being awesome.
Ugh, you're right on the money. Thanks for finding this!
Thank you vey much!
JS is case sensitive
The MutationObserver API is great. Perhaps one of the lesser known cool aspects of it is you can use the MutationObserver to tap into the browsers event loop and create microtasks, giving you an efficient way to batch changes and perform heavy script operations. Quite an undervalued API, in my opinion.
People are so caught up in React, they forget not everyone likes the idea of gluing together 100 Npm packages to build their own quasi-framework. Ember gives you everything you need out of the box, tooling rocks, it works, performance is great. I don't dispute React is the popular option, but I find it to be counterproductive in terms of time spent scaffolding a React skeleton, and if anyone has ever seen a React app at scale: they're usually almost always a mess, spaghetti.
https://bellwoods.xyz
Your bad impression for a language does not make the language bad. Every language has it pros and cons. It just that you choose a wrong language for the project. Try to build a compiler using OOP then you’re stuck. Building a compiler with functional programming makes more sense. Similarly, ElasticSearch is huge and is written in Java but no ones complain it’s bloated or slow. The software architecture is also important, not only the language. No matter how good a language is, your project will become hard to maintain if your architecture is messy to begin with.
Dr. Axel Rauschmayer's books are excellent reference sources! I think those books along with MDN might be all you really need.
Upvoting for OP's embarrassment 
You can always trust JavaScript. If it says its undefined it is undefined. Never question the engine. It's made by immortal gods.
[mfw](https://i.kym-cdn.com/photos/images/newsfeed/000/472/169/c71.jpg)
It wasn't a dig at you at all :). Honestly I do wish there was a way to alternate between what shows on new tabs. Maybe I could build something... but then again I don't do much code writing outside of my 9-5 lol.
I'm sorry, but I stopped reading at: &gt;Web apps are getting complex on the client-side nowadays. You have to do a lot by listening to DOM changes. For example, you want to send a real-time notification to user from a DOM change or you’re using a JS framework that has different behaviour for a different kind of change, or you have to do a thing based on JS plugin’s return value. WHAT?!? "You have to do a lot by listening for DOM changes"? Maybe if you're a complete moron, but every sane web application developer has thing called "Javascript code" powering their application, and if they actually understand their own code they can add more "Javascript code" to places that change the DOM to trigger logic in response. And if you can't understand your own code ... you have bigger problems. It's kind of how web development has been working since .... always. You should *never* need to watch the DOM in your application logic, unless there's a special circumstance like you're using a 3rd-party library, eg. to serve ads, and you need to respond to that library's actions (eg. skip a bad ad you don't want on your site). But otherwise listening form DOM changes should be a *debugging* activity. And while MutationObserver sounds *amazing* for that, I think I'll wait for an article that explains them without making ridiculous/insane claims before they even get to the explanation.
little tip - unless you have really good reasons for keeping them separate, you could easily combine the projects and use something like `npm-run-all` to start both servers at the same time
I came across some useful production libraries with filters, effects and stuff. Shouldnt be too hard to find just give it a quick google
Plenty of people see elastic search as slow... Cassadaga is a better example. I agree you van overcome the limitations of the language with discipline, but java makes that very difficult. It's always pushing people into bad patterns. Js is the opposite, since it has no threads and no blocking, it actually pushes a much stronger style on people than they might choose on their own. Ts undoes that by putting bad pattern back into reach. Annotations are one example; semantically they are radioactive arsenic. OOP is another; it leads to spaghetti code. Types are another, leads to poor testing and falsified confidence, and a profusion of repetitive code and boilerplate typing. What's good about a programming language is what's missing more often that's what's present. The lack of blocking apis in js is why it's much nicer to work in than C++. In c++ you have to constantly avoid half the language. It just has too much available.
yeah! a demo d be cool :)
You can check out howler. Js
I wish we could take the emotion out of it completely. Why waste your effort hating something that helps people build cool things? I use both Vue and React and they are both great. The main reason I think Vue is gaining popularity is that it delivers more features out-of-box, where if you pick React, you now have to make a lot of decisions. If you switch companies, React apps are probably going to look *completely* different, with Vue less so. I get that as humans we have an interest in having picked "the right" choice and we don't want to feel like "our team" is threatened by competition, but we all need to chill out and be more supportive of each other. React is cool, Vue is cool, let's be friends!
I'm 99% certain this is not a good idea. The browser is not an ideal environment for every problem on earth. 1) Latency If you don't get why latency will be a problem, then you will need to do a lot more research. Check out how ASIO (windows) and Core Audio (OSX) and Jack (Linux) works. https://github.com/distopik/node-audio-asio - maybe look at this thing (I can't vouch for it). 2) File sizes A few hours of work and recordings can generate many gigabytes of raw data. 1 hour of 96khz/24bit stereo uncompressed audio is ~2gb. Where does it get stored? In memory? On your server? 3) Memory usage Audio data is often stored in ram for faster read times to combat latency. How much will you store? How quickly can someone run out of memory when running your app in chrome knowing how much ram chrome gobbles up? 4) Plugins How will you support VST, VST3, AU, AXX plugins in a browser? Probably can't, but stoners need their reverb and echoes and angry people like me need distortion. So where are some basic audio effects going to come from? Will you code these yourselves? Can JS and a browser apply real time reverb that sounds decent? 5) MIDI A DAW will be expected to support MIDI, and a user will expect low latency from their midi inputs. Maybe look at this: https://github.com/mudcube/MIDI.js/ 6) Various other performance issues Just read through this: https://padenot.github.io/web-audio-perf/ 7) Right tool for the job Perhaps consider that this is a golden opportunity to spread your wings and learn new tricks, like C++. I could be wrong, but I really feel like the browser and JS itself are not appropriate for DAWs.
If you want to implement sheet music or tablature, Vexflow is a wonderful JS plugin! 
You would.probably want to understand FFT as well. https://youtu.be/spUNpyF58BY this guy has great videos on this subject and many other advanced math subjects
&gt;"You have to do a lot by listening for DOM changes"? Maybe the author hasn't heard, but 99.9% of web application developers instead rely on this thing called "Javascript code" I don't get what you mean. You use javascript code to listen to dom changes!
Hi /u/Maanuppa, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Thanks for your reply. I'll check all those things out! If it doesn't work out I dont mind so much its just a project. Javascripts my favourite language to work in and I wanted to experiment with handling music and sound files and projects. and I was thinking of using AWS to handle processing but I think your right about latency on the network, I'd need a very stable and fast connection for it. Perhaps an electron project or straight up using a different language would be better. Thanks. Again for the links! 
I work on Uber's web platform group. Our stack has changed quite a bit since 2017. These days, we use webpack instead of gulp/browserify, jest instead of tape, koa instead of express, yarn instead of npm. We're also adding support for GraphQL as an alternative to RPC. A lot of our stuff is also open source now (e.g. [fusion.js](https://fusionjs.com) and [baseui](https://baseui.design/)) The data vis stuff he talks about at the end of the video advanced quite a bit in the past two years as well. I think the data vis team here is amazing; I still find the [deck.gl](http://deck.gl/#/showcases/overview) project to be one of the most impressive JS things I've ever seen. If anyone is curious how we do JS these days at a large tech org (800+ engineers commiting to web repos), feel free to ask me questions :)
While serious, my bet is that this is an honest mistake rather than malicious, as that's the same tag used on https://mean.io/ itself. Folks should obviously still fix avoid using it themselves though. &lt;p&gt;This project is maintained by &lt;a href="https://github.com/linnovate"&gt;linnovate&lt;/a&gt;&lt;/p&gt; &lt;/section&gt; &lt;/div&gt; &lt;script src="/assets/js/scale.fix.js"&gt;&lt;/script&gt; &lt;!-- Global site tag (gtag.js) - Google Analytics --&gt; &lt;script async src="https://www.googletagmanager.com/gtag/js?id=UA-36499287-4"&gt;&lt;/script&gt; &lt;script&gt; window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-36499287-4'); &lt;/script&gt;
No, you don't. You use Javascript code to listen to *events* (and stuff like promises and timeouts), not DOM changes. You use Javascript code to *make* changes to the DOM. If you look at any web app from the past fifteen years (ie. the entire history of web development prior to MutationObserver) I guarantee you will not find find Javascript code listening to DOM changes, because it simply wasn't possible before. The way you "listened" for them was to find the place in your code that made them, and then add code either before or after.
i also wonder how people are ok with having google and facebook software running on their front end. lol. so dumb to me.
How would it claim ownership of your domain?
The source code is open, any one can review it 
Claim the domain in Google Search Console, not with the registrar.
100% agree. I was struggling to make the title sound non-accusatory while also conveying the seriousness of the situation.
yeah, and there is tracking shit in all of it. just like OP is talking about.
I see, I'm not accustomed to the google platform. Do they verify you based on the existence of analytics code with your gtag on your website now? AFAIK they do some verification based on a file you have to serve from the root of your app, but I never heard about the former.
Yes of course it is subjective. Just proposing an alternative since I noticed many people here comment about not wanting their new tabs changed. Other wise really great extension. Thanks for it.
Well. ElasticSearch is not the same as Cassandra. Cassandra is a NoSQL database and ElasticSearch is a search database for ad-hoc complex query. The performance I mention here is the start-up time, not the query-time which completely depends on query and user indices. Architecture-wise, JS is of course a lot simpler than Java due to its being single-threaded and having the event-loop architecture to handle non-blocking IO. This makes JS very good for building servers and micro services which requires no more than 1 CPU. Again, it only uses one thread. That’s why people say JS is not good for working with heavy computation because it blocks the event loop. When building a game engine, a graphic software or a database engine, you must make sure to utilize all the cores wisely. In this case, JS is no longer the choice. 
Yeah, you can do the file verification, but having the GA tag installed is another option.
&gt; If it doesn't work out I dont mind so much its just a project. Javascripts my favourite language to work in and I wanted to experiment with handling music and sound files and projects. That's totally fair, and I personally feel that the best way to learn new skills is to do something you actually want to use. You'd learn a lot no matter what. &gt; and I was thinking of using AWS to handle processing but I think your right about latency on the network, I'd need a very stable and fast connection for it. You will want to work with uncompressed audio not just for quality but because it's a lot easier to work with in your code, rather than trying to fumble around compression algos in MP3s or OGGs for FLACs. So even if you want to avoid real time audio altogether, you're still dealing with gigabytes of data transfer in both directions. I don't mean to be discouraging, and maybe I'm being a bit dramatic in a way since I am also a musician and have worked extensively with a handful of different DAWs, but these are not simple applications at all. If I were in your shoes, I'd avoid setting myself the goal of making a DAW, and instead make a wave editor like https://www.audacityteam.org/ (whose UI leaves a lot to be desired). This thing is much much much simpler but still rife with important challenges, many of which can be general purpose. But a tool like Audacity doesn't need to worry about being real time, MIDI, and so on, but still requires the same math skills, has similar UI structure and so on. Just learning how to generate the wave form from the audio data and being able to zoom in and out of it is a skill that you can apply to many other non-audio applications. Good luck,
They have a bunch of different methods. Using analytics is convenient because it requires no further action from the user. I guess they parse (or maybe even run) the index page and extract the ID and then check if your Google account has access to that analytics profile. You can also validate by adding a DNS record or uploading the special file you mentioned (and iirc some other methods)
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/meanstack] [Your MEAN.io stack might be sending Google Analytics data to an unknown party that could claim your domain\/verify ownership in google related products.](https://www.reddit.com/r/meanstack/comments/aw7mdv/your_meanio_stack_might_be_sending_google/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I think I'm checking out of the framework wars. The data and events were never a problem for me, just making it look decent was. I've got EJS templates working in node now, which is a lot like php/jsp templates, because it is a hell of a lot more natural than jsx if you are gonna mix js and html anyway, and don't want the BS. Most of the stuff I make doesn't have any serious volume anyway, and it would be absolutely trivial to pre-render everything if it did.
No worries didn’t take it as a dig at me at all. Just wanted to to make sure we’re on the same page and thanks to your feedback I think i have an idea for a new feature that could possibly solve the issue you have. Not sure but possibly :D
Then a demo there shall be :D
&gt; everything you need right there straight away My experience with tools that make this claim is they include a lot of things I don't need and they don't include a lot of things I do need. Plain react/vue/backbone/vanilla plus node/php/c#/java comes with "everything you need" if you're building a simple CRUD app. Ember doesn't come with "everything you need" if you're building something other than a simple CRUD app. I'd like to see an Ember app at scale that only uses the tools/libraries provided by Ember.
I would agree, all the super performance critical bits are best done in c or lower. Js is a wonderful glue code/ sandbox language. Even in node, the crypto bits are just wrapped c++. It's the best choice in the field, over ruby perl and py etc. For system code or high perf speed there is yet no good alternative to C ime. Threads otoh are a non issue for those tasks which js is good for. If you design your code well, you can easily split tasks across processes. Not using oop and spaghetti types helps that immensely, because external module boundaries are already clean untyped and asynchronous, you can move work to another process or even device easily. 
can you ellaborate on infinite sums? illustration/example would be helpful. thanks
11:50 - Did they prototype some of their app using paper cut outs and moving them around? Genius, never seen that done before.
Webassembly is actually a game changer performance-wise so if you get to the point where the WebAudio API is limiting (it has never occured in the few projects i've done) there is a csound wasm port) 
Here’s the [showcase hosted on CodeSandbox](https://codesandbox.io/embed/z3o46jyr34?codemirror=1)
Yes of course it is subjective. Just proposing an alternative since I noticed many people here comment about not wanting their new tabs changed. Other wise really great extension. Thanks for it.
No totally agree. I may have an idea to bridge that gap maybe. Anyway all the feedbacks here gave a lot of ideas. So thank all of you actually :D
Inline HTML ? What the fuck are you talking about ? And you’re saying two way data binding is a bad thing too ? What the fuck ?
Clannism heightened by competition for resources. Learning a framework is an investment. You want yours to trend up today so there are more jobs for you tomorrow. Speaking ill of other frameworks, to trend them down, helps.
hmm https://forum.juce.com/t/juce-plugins-in-webassembly/25255/4
The article actually shows this off, but it's as simple as: function* infiniteAddition() { let i = 0; while(true) { yield i++; } } This generator will never stop yielding results, hence it's essentially calculating an infinite sum.
I've worked with Angular in the past and now work with React. As long as you understand what problem the framework or library or toolkit is trying to solve, a team can then work around or inside it. I don't see much in the way of circle-jerking around which one's better, but at planning meetings, we did discuss the merits of which framework out there is better for the team and the more useful won would win out.
Hi /u/zApexio, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Eloquent JS ?
You could do @Override and put in a method for that after it. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/learnjavascript] [Best practice for overriding functions](https://www.reddit.com/r/learnjavascript/comments/aw97zq/best_practice_for_overriding_functions/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Hi, this is a good article that I've found on the web. https://blog.nodeswat.com/implement-access-control-in-node-js-8567e7b484d1
I have never been to oover Java
Well, I wrote it with a `for` but it doesn't really matter.
One as your regular browser, one for video entertainment content.
That's not vanilla JS. 
Either way it's what I have been taught and it's what I know. 
Hi /u/iftoxicthengtfo, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
 function Biscuit() { this.eat = b =&gt; b + 1; } Biscuit.prototype = biscuit; if (isSpecialDeployment) biscuit = new Biscuit(); biscuit.eat(1) // 2
Really cool, but does it support CSS Preprocessors ?
Do you mean Java? 
Thanks! My “Exploring” books cover a fair amount of detail. For a quicker, comprehensive read, there is “[JavaScript for impatient programmers](http://exploringjs.com/impatient-js/)”.
This is great. I also really appreciate the language/library customization. I have no need for PHP, so it's nice to be able to turn that off. Thanks!
I could mean java. I'm currently learning so many different coding languages at the minute I'm losing track of them. 
Thank you very much for trying it out!
Hi /u/chained_to_desk, welcome to reddit! Unfortunately, this post was removed because you are a new user. This is a spam-prevention measure, we hope you'll understand. You'll be able to post in a few days, however, you can start commenting now! We'd love to get to know you. In the meantime, please read the site [reddiquette](http://www.reddit.com/wiki/reddiquette) and [/r/javascript's guidelines](http://www.reddit.com/r/javascript/wiki/index). Also, **/r/javascript is not a support channel.** For help with javascript, please post to /r/LearnJavascript instead. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Really? On which device / browser?
Can you point to some online examples of the animosity that you mention? Because I haven't seen it. It's probably just the people you work with. 
Amazing ! Well done !
Careful using the word "know." You are talking about a feature of Java, not JavaScript.
&gt; Biscuit.prototype = biscuit; `biscuit` is undefined.
You should take a line out of the OOP playbook and mark your original `biscuit` a class, then extend that class with one that overrides `eat`. /u/lhorie does this in ES5. The ES6 syntax will look something like this: class OriginalFlavor { eat(b) { return b - 1; } init() { console.log(this.eat(2)); } } class NewAndImproved extends OriginalFlavor { eat(b) { return b + 1; } } In one deployment, `biscuit = new OriginalFlavor()`, in the other deployment `biscuit = new NewAndImproved()`.
My apologies I am still learning in college and I've a long way to go yet. 
If you like to code in js you can try https://github.com/crucialfelix/supercolliderjs and not necessarily in the browser. Supercollider is a full-featured programming language for audio synthesis and sound design, and because of its client-server structure there are many possible implementations of the client, in this case a js client
This is amazing! But for us who are looking to switch to FireFox... can you port this over there? :)
Isn’t the bigger concern that it includes their Google Tag Manager script? They could deploy redirects, harvest user data, etc. Basically inject their JS on your page and leave no trace long-term.
Of course! I've been slacking at my work for the last hour because I keep opening new tabs on Chrome!
Hi /u/jones-macallan, this post was removed because your title included a URL. Please use the `submit a new link` option with a descriptive title. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Mostly ignorance. I hear people all the time who will talk bad on Angular/Vue/React what have you, and then say something along the lines of "But that was Angular 2 so maybe it's better now" or "but I've only gone through the tutorial". People learn one framework and either hate on the rest, or learn a tiny amount of another framework, are annoyed with the fact that it is different, and then hate on it.
I probably won't use this since I have to support IE11 still, but this makes the concept a lot clearer. Thanks!
This is going on on flexboxgrid.com as well
Hi /u/TopazSleet, this post was removed. Since we are a programming subreddit, there are very few instances where visual media is valid content for /r/javascript, including screenshots, demos, etc. Memes and other low-effort content are already prohibited. Please use the `submit a new link` option with a valid source URL, whether it's the project homepage, a blog post, etc. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*
Use p5js it's also called processing for JavaScript.
Back-end ed dev here but am responsible for our front and back-end dev/test/qa environments. We use Docker + Kubernetes and our environments are almost never offline. Health checks enable auto restarting of services makes a big difference. In my view an environment being offline is unacceptable. It is an impediment to productivity and fosters the wrong kind of attitude about the product. People should be able to rely on things working. Training 0, meetings might be 15 mins on a good day and 4 hours on a bad one. 
Gtag.js is not GTM 
Cool, open source?
Interesting. How big is your company?
Roughly 10,000 acorns a video almost immediately too. 
I just left a midsize to large company that only had a dev and prod environment. The QA testers are obviously handicapped by this, but have always been told that it’d be too costly. Another factor is the prod/dev data and behavior are way off from each other; if they can’t get two environments to align, sure as hell couldnt do three. The last task I was given before I left required me to test my code in the dev environment bc certain functionality would not work locally. This means I had to commit code to the same environment that the testers are testing in. Even worse, the department will not allow us to use version control branches. On top of all this, there’s constantly production issues and dev boxes down for one reason or another. These systems are ten years old and the company has tried and failed three times to replace them. Now, when looking for a new job, I ask questions during the interview that’ll help me figure out what that landscape looks like. 
Sounds similar to my last job. People made changes on QA for client releases. I kind of wonder how the whole thing hasn't blown up in their faces. I'd be curious to know what questions you ask?
And more disheartening video/post comments than you can count!
Thanks.
Hi /u/jchaplin7, this post was removed. Posts must directly relate to JavaScript. Content regarding CSS, HTML, general programming, etc. should be posted to their respective subreddits instead of here. Here's some related subs that might be useful: * /r/css * /r/php * /r/html and /r/html5 * /r/webdev * /r/frontend * /r/programming Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/Pud11es, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/smiles_low, this post was removed. `404` Well, this is awkward. Whatever you did is so uncommon that we don't have a canned response for it. It's also possible that you broke several guidelines. Either way, please have a good look over our guidelines (linked below and in the sidebar). Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/jones-macallan, this post was removed. To show off a project (i.e. a finished or semi-finished page, demo, working example, etc.), please include one (1) of the following: * A link to a project page with unbuilt/unminified source code -- sites like GitHub are perfect for this. * A write-up about the development of the project. This can take the form of a blog post, a `README.md` within the project, or a comment on the post itself. The details are up-to-you; you can write from a high-level about your architectural decisions, or you can write on a lower-level about the pros &amp; cons of specific libraries and frameworks you used. The main point is that you're discussing your code -- or your approach in creating the code -- in some way. * A working codepen/jsfiddle/etc. of the code. One of the easiest and most common ways to satisfy this requirement is to simply include a ["Fork me on GitHub"](https://github.com/blog/273-github-ribbons) ribbon your site. Another way to satisfy this requirement is to comment on the post itself, with either a link to a write-up, or with the write-up as the comment. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/evilsniperxv, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
Hi /u/naynay447, this post was removed. * For help with your javascript, please post to /r/LearnJavascript instead of here. * For beginner content, please post to /r/LearnJavascript instead of here. * For framework- or library-specific help, please seek out the support community for that project. * For general webdev help, such as for HTML, CSS, etc., then you may want to /r/html, /r/css, etc.; please note that they have their own rules and guidelines! ---- /r/javascript is for the discussion of javascript news, projects, and especially, `code`! However, the community has requested that we not include help and support content, and we ask that you respect that wish. Thanks for your understanding, please see our [guidelines](http://www.reddit.com/r/javascript/wiki/index) for more info.
?
The company has 10000+ employees but we’re it a tech company. The technology team is at most 100 people. 
Why is vscode listed as a required software?
Congratulations on getting started, it's a fun little project. Some assorted bits of feedback: - this is very nitpicky, but what's the `a.out` file in the repo? it looks like it shouldn't be there. - in `addPlayingEffect` you're querying `div.'+pressedKey`, but when adding the event listeners you're using `#key`. I think these should be consistent - `#key.'+pressedKey`. - having said that, IDs are supposed to be unique - `document.querySelectorAll("#key")` technically works but should be avoided. You can use the `key` class instead. - it would be nice to have the project hosted somewhere with a link from the GitHub page, so someone can check it out without having to clone it. You can use GitHub pages for free: https://pages.github.com/ Beyond that, there are a couple of things that aren't really a problem in a project of this size, but will come back to bite you on larger projects (or if you keep adding to this one): - Your CSS is styling tags directly - `div` and `span`. What if you add a new part that uses a div or a span but should look completely different? You'll end up with a clash. I think it's preferable to go to the little bit of effort of always adding a class first and styling that instead, rather than waiting to get a clash and then trying to untangle it. On a bigger project, managing clashes can become a nightmare. - You're using classes for JS functionality (e.g. `&lt;div id="key" class="key s d"&gt;` and `&lt;audio class="t" src="sounds/hihat.wav"&gt;`. In a small project it's not hard to look over the entire thing and figure out what those classes do, but in a bigger one it could be much more complicated. It's not obvious that "s" and "d" are there for the element to be looked up by the letter pressed. The simplest fix would be to make the class names more descriptive - `&lt;div id="key" class="key key--s key--d"&gt;`. Some people prefix with `js` - `js-key--d`, for example, so it's obvious when looking at the HTML. Other than that, an interesting next step could be thinking about how you could make this more easily extensible. Just say you want to add another drum sound - at the moment you need to copy and paste the markup for the key, then add another audio tag, making sure all the class names match. The info about each key is spread across two places. And what if you end up with 10 keys then realise you want to change the key markup - you have ten edits you need to make by hand. What if you could define the keys in the JS instead: ``` const keys = [ { name: 'hihat', src: 'sounds/hihat.wav', keys: ['t'] }, { name: 'snare', src: 'sounds/snare.wav', keys: ['s', 'd'] }, { name: 'kick', src: 'sounds/kick.wav', keys: ['x', 'c'] }, ]; ``` And then write some code that loops through that and dynamically creates the HTML and audio tags for you on page load? Then adding a new sound just means adding another object to that array.
I'm just going to be honest. I don't think posting a link to a pdf of python code and asking for "help" with the implication that someone convert it for you is going to be very successful. &amp;#x200B; Do you have specific issues that you have run across? Have you started the process at all? 
after you import biscuit... [`biscuit.eat`](https://biscuit.eat) `= function (b) {` `return b+1;` `};` &amp;#x200B;
kick ass
slick!
Let me guess if you make a mistake your fucked. 
Interestingly you just need to build standard ES modules. What’s tricky is the transpiling, currently running with a rollup config for each module then importing them into the main config in the project root. These take the files in the src folder of the main repo and can be considered separate modules in their own right, although I’m distributing them as a library style package all it would take to make them like loadash is to build a package.json for each of the rollup configs
This is nice! I've struggled with doing this before, next time I'll give your library a go.
I found it to difficult to configure all of these, eslint, prettier, airbnb style guide, git hooks etc. So I wrote an article. Let me know what do you guys think
&gt; Interestingly you just need to build standard ES modules What does that mean :) Do you have an example repository?
Transpilers AKA Babble FTW. Write modern JavaScript, run on IE11 anyways.
Yes I am not able to figure out with that request.session part. I used fetch for JavaScript with the URL but how to include session
Really cool, well done. 
This is really smooth! Good job!
At the moment we support LESS and SCSS, but intend to provide more options also.
Best is yet to come ;)
Thanks for the tips. I will definitely follow them.
Bookmarked, thanks!
Some advice. Create a repo, or host the .py file somwhere. Not a png. You mentioned having attempted the JS, I would post what you have and have some comments regarding the area where you were confused. Useful refs:
So cool and interesting, wish I could see the code.... any github repo?
this is awesome. I'm also interested in looking through the code.
[This](https://cdn-images-1.medium.com/max/2600/1*6WlCVT6kSeZYvY3sA5e6zA.png) is not a one-liner. Also it's very un-idiomatic javascript. If you're going to line break, then use a curly brace.