Hopefully it's as simple as something like: OnData -&gt; push to Duplex stream App.get('/video') -&gt; duplexStream.pipe(res)
No codebase is too large for its writer to navigate without docs unless the code is just wretched. Good luck with that sir.
And then you have no real tests and they're all integration tests, and you're back to square one.
That's a pretty short sighted judgement to make. Agree to disagree, I suppose.
Whats the benefit from having it in the commit message instead of having it in the code? I don't understand why comments would be a bad thing, as long as the comments describe why and not what. I would rather read comments instead of checking the docs. The two points you bring up are both good but not applicable in all cases, e.g a new hire will understand the codebase and business logic faster if its explained in the code. If the team consists of 30 people pair programming only covers so much. I understand that there can be such a thing as stupid comments, but atleast i think good comments help a lot.
Got a repo? I'll take a look. Seriously I'm just trying to help you because you sound like you are coding in a bubble on a 'long overdue project' but you aren't coding anymore... you are documenting.
Fair
The aha moment is when you need to change how that whole class works, split it in smaller ones, change parameters, return values, module exports etc, etc. And I mean in a serious codebase, not your everyday medium article about "creating an API with express". In JavaScript: you do this, hope that the tests will cover it all(don't forget you have to rewrite them also) and it will just work out. In reality you will see a gazillion undefined is not a function errors and other weird stuff. In a typed language: it will never even compile, you know that as you can change stuff and the compiler will tell you where things have changed and how. It won't compile your tests, it won't compile shit. Yeah, you can introduce bugs, but in an order of magnitude lower in scale.
With a proper modular design, static typing (i.e. TS), and a good IDE (e.g. VS Code or WebStorm) then you should be able to wrangle a million LoC code base without issue.
The debate has always felt like a preference thing to me. I use \`let\` and \`const\` in my JS code because it makes sense and is consistent with other languages that I use. I work with someone who uses C# and \`var\` is his preference since its what you use for setting variables in that language. On the flipside, if you have a complex code setup than the scope level will affect your code accidentally, especially if you are just modifying existing code and not totally aware of what is going on. I've had this happen a couple of times in a huge JS legacy file that I had to modify for a quick change. Should've been easy, right? Well, the person was flipping between var/let for most of the file and pieces were being overridden. But then again - goes back to preference. It would have been MUCH easier to edit if it was just straight vars and lets so I could quickly scan through and identify some problem spots, versus debugging line by line.
Nice job 
The difference being the amount. Even if MS has Australian developers they are few in number-- even fewer are those who are part of Github. Conpanies have started paying for their Australian employees to relocate.
I think I C what you have done there
You seem to be arguing for all of the behaviors people want `let`/`const` to solve. (Note: using `const` (or `let`) in global scope doesn't create a global variable, and you can create them without `var` by omitting the declaration completely). There are differences. You just listed them. If you don't want them, that's up to you. But there are inherent dangers that `let`/`const` can help protect you against that `var` does not.
Code organization is super important. As is a code intelligence tool. Typically code intelligence requires static typing, or at least overlay typing or type hints. I have personally developed a code intelligence tool for a dynamic language and I know the limitations first hand. 
😂 Love when it works out like that. Thanks for the heads up!
I don't think your second bullet point is true. You can update a variable that has been initialized using let and then modified in a loop and then access that variable outside of that loop. let and var are basically the same, except let is block scoped and var is scoped to the execution context (usually the function) So if you have function foo() { { let x = 2; var y = 3; } console.log(x); console.log(y); } foo(); the console.log(x) will error out since x is not defined in the function scope, and the console.log(y) (if reachable) will print out 3.
No. You know what gives you a mental breakdown? Dealing with code you wrote 10 years ago and having no one to blame for the shit infront of you other than yourself. Sure, you try to comfort yourself by saying "oh, well, that was 10 years ago, I'm much better now" but who cares, you're still in the muck, dealing with your past crap. You really want to rush over to someones cubicle, to give them hell for making you deal with all this garbage, but you'd just run in circles. This is my nightmare.
Very cool!
&gt; So I would love to see a non-contrived situation where using let instead of var is actually useful. Something that could only be done by using let. You misunderstand the purpose of let. It's not there to allow you to do things you could never do before, it's there to make variables behave the way most people think variables behave. In some cases, this means it deliberately *restricts* how you use them as compared to vars, thus forcing you to use styles of code that make it easier for your code to be understood by us humans. But these restrictions don't make it impossible for you to write the same things as before, they just make you do it in ways that are more standardized. &gt; Need a global variable? Then you need to use var. (Or const, if you want to prevent reassignment.) The fact that vars at the top level will result in values being surreptitiously added to the window object is confusing. I've had to debug people's code where they write something like this: var closed = true; console.log(closed); // logs out false Most people would not look at this and immediately think "oh, that's clearly trying to add a property to the window object, and since window.closed is readonly therefore the first line has no effect". If you want to add a value to window, just add it to window explicitly. People reading your code (including future LordPachelbel) will then know that that's what you meant to do, rather than trying to guess whether you understood the implications of your code. &gt; Need a variable that will be modified in a loop and then used outside the loop? Then you need to use var. Just need to move it before the loop. And by doing so, people who assume variables have block scope will find the code quite sensible, whereas they would not have if you kept it inside the loop. &gt; Need to reference a variable before it's declared? Then you should probably restructure your code so that you're not doing that in the first place, because it's usually bad style.* But leaving aside questions of style, if you're relying on hoisting, then you need to use var. I agree that this is an indication you should restructure your code. To my mind, your argument reads as "var allows you to get away with writing sloppy code", which is true, but not really an argument in var's favor. 
I had a project at a company from a had project manager that was a nightmare. He was trying to build an operating system out of an app. It had gotten so large and required so much refactoring of core functions, it lost consistency. The same codebase literally was ending up with different stylistic code I'd written. We didn't follow any proper software features. It was always add, add add
Obviously you didn’t rest what he said before deciding to be a rude prick - he’s just taken on this project from another developer. Should really read first before talking or that could get you in a lot of trouble in life my friend. 
Time to start refactoring any bits you can, using technology you know or want to get better with. Take small steps to make your codebase better, even if it's just one function at a time. Add Doc comments wherever possible, and write (more) docs, potentially generated from those Doc comments you're going to write. You shouldn't have to keep track of it all in your head, it should be put in writing.
Computer science is about that, right? Handling complexity! I'm not an expert, but I always forget a lot about my code :D, usually have rough idea what it dose, but after couple of month in please don't ask detailed questions.
r/suicidebywords
Interessant article. I have just one complain. There is a sentence almost in the end that says "*There is a stage 3 proposal for dynamic imports which will allow you to conditionally load modules via import().* " with *dynamic imports* as link. I, as a user, want to see the referred proposal when I click that link, not another page about something *somewhat* related. Even in the other article you have this sentence *"The two most common approaches are using Webpack and its bundle loader or the ECMAScript dynamic import() proposal which is currently stage 3. Any chance I get to not use webpack, I take, so we’ll be using dynamic import() in this post."* Where *stage 3* is a link. That link just go to the history of ECMAScript...
`var` can create a bug that is very difficult to find. suppose you have code like this import ms from 'convert-to-milliseconds'; function foo() { const value = ms('200 seconds'); /** hundred lines of code **/ var ms = 1000; console.log( ms + ' ms' ); /** hundred lines of code **/ } Adding the `convert-to-milliseconds` import to this existing code base and invoking `ms` on line 3 would yield an error `undefined is not a function` since `var` overwrites the import. A bug like this could take a long time to debug since it's not obvious that the error was caused by something later in the code. if `var` was replaced by `let` a `duplicate naming error` would be thrown, which would let us spot the error quickly. 
Maybe it's cause I'm a front end guy? Every place I've worked. I write the code, I run the code, it doesn't work, I debug it, it now runs, I throw some behavioral test cases such as collecting emails form user input or fetching data from the server and if it does what I expect... I merge it mark it done and pass it to qa. I suppose I can see the case for reducing bugs before compiling, but... is that not what my linter is for? It highlights or underlines areas of the code where there are problems before I even save it.
The car models are made in something like blender?
No I actually used all models from sketchfab. Don't have experience with modeling for now so relied on sketchfab
uh oh
I do exactly the same and after 5 years of coding daily on the same project everything works pretty well.
Cool
Imagine if your linter could tell you "hey, the object you're assigning here doesn't have that method. It has this other method that requires these three inputs."
I'm really enjoying C-sharp, and Unity basically requires it. The syntax is pretty similar, too.
If it were easy, everyone would be doing it.
* You don’t need var to create a global variable: attach it to the global object instead. * You can modify a variable in a loop with let just fine. You just can’t declare that variable inside the loop, which you shouldn’t do anyway with var. * Third point: they are identical. * You can always declare the let variable first, at the top, and then assign it below where it is used. This is best practice with var too, when you have circular references to variables in various in line functions like event listeners. * Fifth point: they are often the same, but let is more intuitive, since no hoisting is done. * Well, off the top of my head, it could be used for better minification and gzip size, for one. &gt; I will grant that using let can help beginner programmers avoid certain kinds of bugs, but so can writing code with better style. This is not an argument to avoid let, it is an argument to use both let and good programming style. To my knowledge, there is exactly one valid use case for var over let: When you need to have code that compiles to different versions based on environment variables (development vs production versions), and you don’t want to add the unnecessary cost of the variable hooks to the version that doesn’t use those functions. In that case, you must use scope hoisting to pull the declaration outside of the if statement. Then again, a good enough minifier could probably detect that such a variable, defined with let but never assigned, and remove it.
This is pretty fly
While I agree with you in principle because they're a shit company: It's not an exploit it's a injected script There's no hack needed you can disable it in the control panel It's not temporary the setting is permanent The article is about reverse engineering the script not about a hack
The functions are pretty explicitly named. What confuses you?
I have no I information suggesting anyone else is doing it, but if I was using any shared host at all I'd be looking at my website for anything I didn't put there.
Documentation should akways be kept at the minimum: What should I document ? What I am doing or how I am doing it ? or both ? and how detailed should be my documentation and how difficult will become to read my code after I have filled it with many explanations ? And how difficult and how much work will be needed in the future to keep all this documentation in sync with the code ? 
It's so dreamy... I like it!
This is really good overview of what this likely means. A lot of people can very easily work within an established system. Building one from scratch takes a different skill set though.
[removed]
Yeah, you are are so far off man, you can't even begin to grasp it, not to mention that linter are fo style or common nuances such as double vs triple equal. I suggest you try it, or don't, I wouldn't care.
`void 0` just returns `undefined` - I guess the JS packer put it in there as an abbreviation.
This takes me back to PS1 days... awesome work!!
Because with Typescript if I want to change a property on a 'User' object from say `fullName` to `firstName`, Typescript will let me know if I missed any occurrences. In plain JS I'd be afraid I would miss some, so I'm less inclined to try to make naming improvements for fear of adding bugs.
You've refused to admit you were wrong about anything, most notably the OOP tirade. I wasn't taught static typing. I was taught PHP and JavaScript. It was my own use of Rust that led me personally to believe that static typing had something to offer, and when I went back to TypeScript I stopped abusing `any` and have been benefiting ever since. I am speaking authoritatively about TypeScript because it's very clear you haven't given it a serious try. I'd love to know the very specific problems your team had with it, general unease with the concept of static typing aside.
Why are you focused on full stack? Typically, you'll cut your teeth on either backend or front end, periodically dip your toe on the other side, and then call yourself full stack. Advice being, focus on one side , don't be super quick in reaching for react until you understand primitives, functions, standard methods, modules etc. It's cliche, but with a solid foundation things just start clicking. 
&gt; You've refused to admit you were wrong about anything, most notably the OOP tirade. Im not wrong. &gt; I wasn't taught static typing. I was taught PHP and JavaScript. I So you are fairly junior, and you started off in PHP which probably caused considerable damage. I recommend circling back with some Knuth to pick up the basics. &gt; It was my own use of Rust that led me personally to believe that static typing had something to offer Rust is a niche language with extremely limited use cases. &gt; I am speaking authoritatively about TypeScript because it's very clear you haven't given it a serious try. You must be joking.... do you think you are you god the creator? The scientific evidence supports the conclusion that static typing is dead weight. Watch the video and learn. You clearly lack experience and knowledge. 
Hi /u/AlaskanIceWater, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/bihgofillmycupyea, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/WorldOracle, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/devnoid, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/alien128, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
Yes that’s the way to do it. For so long I would try be good at everything, when in reality I just had to be really good at one thing. Once you think you are really good at whatever you are doing, then you can move on to learning new stuff. Until then, use assets created by other people. There is so much free content for all of us to use for a reason. Nobody can do everything.
Absolutely agreed. 
yep and one lesson is that if something is ugly but easy to read then leave it ugly. I had axios ajax calls all over in my code. another dev took over and extracted that to have a more clean code base. when I work with that dev he always gets lost on that code he wrote. it was klunky before sure but it was easy to see what was going on.
You should create a GH issue
&gt; I work with someone who uses C# and `var` is his preference since its what you use for setting variables in that language This is like saying "I work with someone who says 'Oui' instead of 'Yes' because his wife is French and that's his preference." It's utterly ridiculous. If your friend uses an almost deprecated language feature becuase it's reminiscent of something he's used to in another language then he is - how shall I put this - oh yes, an idiot.
Oh, seriously. I guess I will learn it as you recommended then 
Keep at it. One day the confusing function will be a tool instead of a puzzle. If you’re completely stumped on functions, one thing that helped me was writing out the function syntax until I didn’t have to try to remember how it was formatted. This frees up some space to learn further. If you already know the syntax well but don’t know how to apply it into a working function, you can get a simple working function of any kind from examples on tutorials or anywhere and learn it until you won’t forget... this way you’ll at least know how it compares to any mistakes you’re making with your own functions. I went through the same thing, understanding will come through exposure 
This library is very new and highly experimental, so I'm really hoping for some feedback and ideas for new / better features.
Whatever next, a post about how to launch a browser... ?
Did you seriously come here and whinge about code we cannot see?
Not sure I want to take CSS advice from someone who justifies his text.
I think you’re making assumptions that your teammates are aways going to be perfect engineers that can instantly grasp any piece of code, how it works, and why it’s necessary just by looking at it once. In the real world that’s simply not the case. Believe it or not, engineers are people and most people communicate best with words, not code. You can save a hell of a lot of time and head scratching for your teammates by just writing a single line comment where relevant instead of making them grep for answers every time they have to touch part of the codebase they may not be familiar with. Especially true when you have junior engineers on your team who already need to spend extra time researching “how”, in addition to trying to understand “why”. Comments help everyone get there quicker.
Nope. If that happens it's a sign that you are all doing all wrong. Teair it apart and start again. Break it down in micro-projects.
LOL what is it with typescript fanboys... you can have totally unmanageable mess even if you have type. Ask any Java dev.
I maintain like 2 magento shops with gigantic code bases which by itself this is not the issue. But I fucking loose my shit when i am forced to push new futures without proper QA because somebody set a unrealistic deadline. This shit happens way to often. 
Hi kenman This is not really a post about CSS, HTML or other general programming. The intent for this survey is to try and increase quality articles about JavaScript specifically. The creators of this idea are professionals in the industry and would like to see more content for professional development. However what they have heard from this industry is that talented writers in the subject of JavaScript are unsure of the market demand for their knowledge base, therefore the question begs, would a funding platform help professionals who are also excellent writers be encouraged to write more JavaScript content if they had some sort of financial backing. This is just a concept that we are trying to validate if community readers of JavaScript content would do prior to developing the platform for it. &amp;#x200B; I hope this helps to make the intentions of my post clearer, and hope you may allow the post to continue. &amp;#x200B; Jasmine
RemindMe! 18 months "was this a trainwreck in the making"
I will be messaging you on [**2020-07-15 22:59:45 UTC**](http://www.wolframalpha.com/input/?i=2020-07-15 22:59:45 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/javascript/comments/agegyj/im_finally_ending_my_25_year_long_distance/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/javascript/comments/agegyj/im_finally_ending_my_25_year_long_distance/]%0A%0ARemindMe! 18 months ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
You’re continuing your last paragraph as if React and Redux are interchangeable. OP isn’t talking about redux so your opinion seems quite off topic. 
Yes, my question was more about good practice and if its normal to break even simple interfaces into multiple components and containers.
Yes, it is, although it can be overdone of course.
GitHub: https://github.com/asjadanis/3d-scene Feel free to experiment
Do you think the current ES6 () =&gt; trend promotes readability ? I find that it "looks" fancy but in the long run, is going to KILL you.
THIS. A code can be inefficient but readable, or stylize and "modules" to be "cool and hype" but in the end, having top open modules within modules is UGLY.
Unpopular opinion, I HATE typescript. I LOVE and constantly uses the dynamic type nature of JavaScript.
&gt; The human brain is limited to 7 +- 2 bits (and generally assume the 5 for simplicity). The fuck did you know about that ? HOW ?
I AM using JQuery Mobile !!!! Are you psychic ?
Re-factor is just a fancy word for re-write right ?
Thank you!
Hi /u/littlebluebrown, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/kaskone, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Start writing a test suite. :) 
Media temple is owned by godaddy I believe. That’s why I ask. I’m not sure how to check for this 
Sorry, bits is probably the wrong word, I typed too fast... https://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two 
Scenes like this used to take *hours* to render in AutoCAD. I never dreamt I'd see the day when a mobile phone web browser could do this in seconds. 
Modularization. Look it up.
So... it's a linter?
Neat.
Don't follow.. More of a concrete example?
Why not use async/await to help clean up some code here?
I believe the only place \`await\` could be used was in \`app.js -&gt; init()\`, but I could be wrong. There's nowhere else it's \`then-ing\` inside of a function. I edited the post to use \`await\` there, and removed the init iffe to make it look a bit cleaner. 
You can await on any promise. let cache; const ready = asyncLoadData() .then(d =&gt; { cache = d; }); 
Love your articles, especially the call back, promise and async, await one. I've always confused about their difference, but not after reading yours. The example and metaphor are unforgettable. Thanks for helping us old devs out there.
Your `main` function should be set as `async`
thanks, fixed
What resources are you using to learn threejs?
Thanks, I made some of the changes. 
I use this Babel plugin and it suits all my needs, and doesn’t pollute the window object with anything. https://github.com/babel/minify/blob/master/packages/babel-plugin-transform-inline-environment-variables/README.md
This, I started to play with it and made the cube the docs introduce you to and other small things, and of course the best thing to learn is just play around with everything but if you happen to have any cool material please share
Webpack has this already. https://webpack.js.org/plugins/environment-plugin/
Divide to conquer, it's rule number 1
I'm getting there with a project I'm doing. I've got a mobile front-end, web front-end, chatbot, API. I'm in the process of adopting Lerna so I can easily share code between all 3 projects. I might switch the API over to JS to for the same advantage. I'm also going to check out ways to write react components for native and web to repeat myself less. &amp;#x200B; The main thing is to have the code do only as much as it needs to do and be no more powerful than it has to be. The future ain't here til it's here. It's like rolling a Katamari, wait to get the big stuff until you're bigger. You have to anyways, whether you realize it or not.
If you have a US based website on Media Temple, open the page in your dev tools and have a look. Everything you see should be something you put there.
Nice. This way, we can directly replace the values in JS instead of going thru templates.
Looks like webpack supports it out of the box: [https://webpack.js.org/plugins/environment-plugin/](https://webpack.js.org/plugins/environment-plugin/) 
Definitely a lot more set up for the variable than the link I provided. I’m not sure it’d cover the one downside I have found so far though. I use heroku pipelines to manage my deployments. I have to manually redeploy the branch to transition from staging to production (rather than using heroku’s “promote to production” feature) to trigger a rebuild/reinjection of the environment variables. 
Basically. I mean you try your best to simplify it though.
I had a similar idea when I built [tryad](https://github.com/citycide/tryad) - it's interesting to see another take on the concept. I like that it's typed too, that's been a goal of mine but I haven't gotten around to it.
I mean, how else do you expect environment variables to work? 
I understand the logistical issues with having them on the front end. I’m just wishing for a perfect solution I’m 99% sure doesn’t exist
What's a lone ranger programmer?
Yeah - from experience, static typing isn't something you learn to love until you use it. My CS program's core was all mostly in Python, so thinking about what type things were came later. Started work in a Java place and learned that it really is nice to know exactly what things you're sending and receiving. And that when you change a reference (the type of a return or a name or whatever), it'll either cascade that change (if the IDE can figure it out) or at the very least the compiler will tell you exactly where something's wrong. Notably though, some IDE's will give you some the magic type checking features, even without a statically typed language. PyCharm I know can do some of the neat things. Neither static or dynamic typing are necessarily better, they each have their merits.
Then what the fuck are you doing in r/javascript. Get the fuck out.
It's honestly not that hard if you're not looking at your bundler to do everything - precede your source code with a called function that looks for a `&lt;script type="application/json"&gt;` with your ID of choice, parses its content into a `process` variable (or whatever), and deletes the element from the DOM - leave the rest of your code to use `process.env.stuff` as usual - use a template file for your HTML and let your server render the client's environment variables into the json script tag voila, client environment variables that are actually gotten from the environment. not quite as fancy as installing a webpack plugin though.
Stripe
To be fair, if I have to read Past Me's code repeatedly, that might push me into becoming a serial killer. And I _usually_ know where I am, too.
Static typing, even when it's inferred static typing, can give you tons of hints. Not even at save time, even while you write the code. Ex: in one of my personal projects, I use typescript. Which is really just a compiler for a superset of JS. Typescript likes to infer things, so when I declare variables with a value I don't even have to actually tell it the type. Because if I do `let resourcesLoaded = false`, that's obviously a boolean. I can see it, you can see it, the compiler can see it. So it's inferred. I can return that value from a function, and we all still know it's a boolean (along with all the fun things that means, like that trying to call `resourcesLoaded.toLowerCase()` is an error). Well, that extends to a common OOP concept - interfaces. They're like classes, but they don't have implementation. They're a promise that X object has some properties (functions, values, whatever). So now I can have a PositionComponent that I use in my code - where a PositionComponent has a `name` and a `data`, where `name` is a string, and `data` is a Coordinate. And a Coordinate is another interface, that says it'll have an `x` and a `y`, both numbers. I also built a utility function `createPositionComponent()` that creates a PositionComponent given a name, x, and y (in that order). This is where it's pretty interesting. So now, when I'm typing along, I go and say `let val = createPositionComponent(`. Now, since we're in a statically typed variation on JS, at this point I can get a hint - the next thing you type will need to be a string, and that there'll be two more parameters after that that are both numbers and should be x and y coordinates respectively. A linter on its own can't do that. Even further, the compiler knows that the return value of that looks like `{name: string, data: {x: number, y: number}}`. It knows that I can do something like `val.name.toLowerCase()`. It'll also give me an immediate compile error if I try to do `val.data.toLowerCase()`. The concepts go even more extensively and I could certainly give you more examples of neat things a static typing system helps you do. But I think this is a solid representation of the good stuff you're missing. It cuts down on that tedious debugging phase because the compiler just doesn't let you write [some categories of] bugs. On the other hand - a linter is not to catch bugs. They can sometimes catch some categories of bugs, but they're usually for "gotchas" (== vs ===) or stylistic things (`{Component}` vs `{ Component }`). A linter alone doesn't really reduce bugs in your code - they just try to make the code more clean and understandable. They don't hurt, but don't overestimate their power.
Interesting thanks. Maybe someday I'll see the light. :)
Cool. Thanks! I do see the benefit of coming in to a codebase, not knowing anything about it, and having something tell you the arguments a function expects when calling that function. I've done hello world type programs in typescript before, I guess I'll just have to keep using it to really see the benefits in action.
i'll look into it, but right now its not high enough priority for me to worry about messing with the build pipeline. Thanks for the response though!
Seriously cool! 
I love cognitive shortcuts. Freeing up brain bandwidth feels like a superpower. Because let has fewer rules than var, it’s a lighter cognitive lift for me. I can focus better on the important parts of the problem. 
this is kick fucking assssssssssssssssssssssssssssssss
Hi /u/codihsi, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/nak3nak, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Yeah - Typescript is a neat little toy in small programs (where it's neat but doesn't provide a huge amount of value). It's a lifesaver in larger codebases, especially spread across several developers or even teams. It's nice to be able to safely use a function even if I didn't write it, or even ever look at it outside the docstring. 
Hi /u/harrison2020, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
You could call it a glorified linter but it transforms your code, so I would call it a compiler. If you use VSCode to write plain JS then it uses the Typescript compiler as a kind of linter. You can just opt in gradually by writing types in comments in plain JS files.
Amazing! I probably watched this way more times than I’d like to admit. Great job!
This doesn't answer my question, but i now have a better idea of what im looking for now from your answer. Thank you for writing this up. 
Because this article seems to be a very easy for you, doesn't mean it is like that for everybody. I recently spoke with my friend who asked me: &gt;"Why do you want me to install Node using NVM? I already installed node using an installer. By the way, what is Homebrew?" This is a helper for people who are staring with Node.js / JavaScript, maybe this is their first programming language. By the way — I recently played a lot with Puppeteer so my next article can actually be about opening a browser. Thanks again for constructive criticism.
Seriously, animating with WebGL is a bit easy than most GUI software. Very cool work man.
&gt; For so long I would try be good at everything Even I used to think that. I was flocking around trying to be good at everything that I liked. 
I have been trying to configure react and three just for a while now so it's a lot of tutorials from here n there but mostly medium.
I've been forced to learn bits of js to maintain my personal blog on data analysis, and at some point I needed a way to make interactive linear algebra visualisations. I wrote some code, and it turned out pretty nice, so I decided to publish it as a library so others can use it too. There are demo files in the repository, but if you prefer an online version, [here it is](https://www.expunctis.com/2019/01/11//vtvt-demo.html) (I like #4 very much!). The code is probably crusty, but as I said I had practically no exp with js before, and working on this library made me learn tonnes of new stuff. More importantly, I've created something practical. If you know a math instructor working on visualisations for students, kindly suggest them to take a look at this library since it might make their job easier.
cool
Wow, that's pretty great! A couple of minor things you could to to make it even better is to offset a bit the animation for each bird, so they don't fly in perfect synchrony, and make the cars spawn a bit behind the actual canvas, so it doesn't look like they spawn out of nowhere, but it would look as they actually came from behind. Still, amazing, great job.
Good bot
I think the cars were working like that spawning behind the scenes , but I'll make sure of it. Thanks.
I suspect the problem is how you have it organized. Take a look at a codebase like webpack. It's massive, and has an ungodly amount of stuff going on, but one guy knows how all of it works. Sure, there's a team of contributers, but the core maintainers have to be familiar with all/most of it. The difference is that they have abstractions, and modularity, and documentation
Looks good! Any reason to why you're using snake_case instead of the standard camelCase for the API?
I’ll definitely take a look. Thank you. When Comcast did this with their rate limit pop up the entire bit of JS they were using was really hard to sniff out amongst other stuff being loaded in. 
Nothing has changed recently in Mapbox sources. It looks like your code is for Mapbox.js but you’re loading Mapbox GL JS. You want something like [this](https://www.mapbox.com/mapbox-gl-js/example/drag-a-marker/).
Yes
Hello Sir: I am using this script on Firefox, but there may be a small problem. When I copy the code using the 'COPY' button, the original formatting of the code changed, it only remains one line. Thank you very much for helping.
Thank you! I think this habit comes from years of playing with embedded C. Here I tried to use camelCasing for class methods, but it just didn't feel right to use it for variables.
Const isn’t global btw. 
I use three.js at work for a 3D rendered box packer and it surprised me how simple and fast it was. This is next level though, nice work!
Love it! Only remark I have is regarding the source code; I'd try to create a separate class for the mathematics, one for the canvas animations and one for the events. That's just my personal preference, though! 
Programming is 80% naming things right, 15% logic flow, and 5% hoping you're long dead before anyone else finds your old code.
It's breaking a 32 bit number into four different 8 bit characters. Given that Javascript doesn't have strict types.. well this is a horrible place for JS.
 Things I know: * you can access Function, Boolean, Number, Array, Object etc via getting a value constructors * you can access window via `(function () {return this}).call(null)` * you cannot rewrite/redefine document, origin, location, domain properties of window - this will cause page reload * if you will be able to access `Blob` somehow, you will be able to test `WebWorker`/`iFrame` elements * `Web Worker`/`Shared Worker` context is secure (as it is uninjectable), so if you are able to spawn `Worker`, you are able to use all that `WorkerNavigator` provides to you * you can create Web Worker from data URI (`data:`), which is trusted (but we still cannot access `Worker` object safely); you can create `Blob` in it, which will be a `blob:null/%uuid%`, and this blob can be opened anywhere (instead of only-same-domain same-origin policy) * you can check `Web Worker` against content-security policy. This is something page do not know, so you can allow only limited `worker-src` CSP. If it works, it works and responds, otherwise you cannot simply get a response. It cannot help in verification of `Worker` global object, however, you can get trusted Blob URI (if using some cryptography additional stuff for authentication)
&gt; 5% hoping you're dead Hey, I'm pretty good at that part
If you feel that way you should talk to your peers and clean up, going for the simplest solution. You can (should?) break up components into smaller parts when they can either be re-used elsewhere or help clarity. On the other hand doing it overzealous can lead to the opposite. 
Lovely. Thanks also for including an online demo page, too often missing by library developers.
This is of particular interest given that Jest is made by Facebook, the creators of Flow. It's looking like the community has pretty much decided on TypeScript now.
This is of particular interest given that Jest is made by Facebook, the creators of Flow. It's looking like the community has pretty much decided on TypeScript now.
i'm interested in more argumentation about loopback . Because it supports access data to Oracle db, and is the only one , as far as i know.. &amp;#x200B; 
I just realized that I do this as well. Good to be mindful of it and then accepting that you don't need to be good at everything. 
The second is called destructuring. Details here [https://stackoverflow.com/questions/38660022/curly-brackets-braces-in-node-require-statement](https://stackoverflow.com/questions/38660022/curly-brackets-braces-in-node-require-statement)
Would be nice to show a demo side by side with and without the effect applied. 
It can be no doubt useful to someone, but in _this_ sub....?
Destructing is a different thing. This is just the syntax for export (and also import): `export { someVar as foo }` Also, `export default Items` is the same as `export { Items as default }`
I don’t see why it’s horrible. The bitwise operators in JS simply treat everything as 32-bit signed integers. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators
Good idea! Will see if I can add that. In the mean time, open the site in a desktop browser and prepare to be underwhelmed :D
[MDN](https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export): &gt; There are two different types of export, named and default. You can have multiple named exports per module but only one default export. As for the brackets, nothing special there. Yes, it's everything to do with objects. {ALL_ITEMS_QUERY} // is the same as: {"ALL_ITEMS_QUERY": ALL_ITEMS_QUERY} That, it's an object literal, with the property `"ALL_ITEMS_QUERY"` which has whatever value `ALL_ITEMS_QUERY` was defined as in the module.
No, it is not and Houdini is a fracking Mistake!
I like to take a break from my side projects (sometimes a month) and come back to it. If I see stuff that doesn't make sense or takes too long to wrap my mind around I refactor it. I understand that this isn't a solution at work. TypeScript is a huge help as well. I converted my project to TypeScript with strict settings and it is some sort of documentation for different pieces of code. Besides TypeScript I actually try to write some documentation for myself too. Right now I am learning to test with Jest, and I will be writing tests for my side projects soon as well. 
so for example if you exported formatMoney as named you'd import it as =&gt; import {formatMoney} from "../lib/formatMoney"; whereas if you exported it as default you'd import as =&gt; import formatMoney from "../lib/formatMoney"; or maybe also import "../lib/formatMoney" or am i still not getting this? 
Glad to see fb project starting to use typescript 
If you... export { something } ...then you... import { something } from '...' If you... export default whatever ...then you... import whatever from '...' But this is just the basic syntax. Then there are a lot of variations that allow different things e.g. assigning different aliases. Also, you would _only_ do... import "../lib/formatMoney" ...on its own if you only wanted to, let's say, _execute_ that file but not really import anything from it. I.e. you just want to run it for its side effects, but it doesn't export anything (or you don't want whatever it exports). Do read both MDN pages for export and import and also the links they offer (e.g. [this one](http://exploringjs.com/es6/ch_modules.html))
a bit off-topic but I just tried to shake my browser window with no luck (I'm on desktop) and accidentally discovered this acts as "minimize all other windows" on Windows 10
What's happening is for each connection you're starting at zero, then sending an update every 500ms with an incremented number What you need to do is put the count variable at a higher level, outside the connection callback, and increment it separately from the websocket connection, in its own setInterval "loop"
I came back to reread your reply again. You just opened my eyes to another dimension. I guess I will ground myself with the frontend for now. Thanks
Thanks. Yes, I assumed this is the right approach. However, I can't figure out how to send the ever changing variable in this "loop" to my websocket connection.
Typescript is useful for helping keep your code organized, modular, and easy to read. Also helps your IDE with code completion, and you with remembering what your objects contain. I think the best way to explain it to someone unfamiliar with typing systems is this: At it's core, it's a comfortable system for helping you remember what each piece of your code is and does.
Haha :D Thanks for that!
Sounds like it wouldnt hurt to start using it then? For me that writes a ton of vanilla es6, would the "switch" be big?
It's not so much a switch as it is an addition. I see no reason for it to cause discomfort, or to have high onboarding costs. I suggest to try it with a few classes/functions, see how it goes. At worst you'll find it unnecessary. At best you'll have gained a useful tool.
Just have to say that overall, that's some pretty nice code in itself. Good to see people that don't just throw up on their keyboard when developing libraries. 
No worries, thanks for letting me know!
Typescript, when used correctly will help you write better quality code and find more bugs. So yes you should learn and hopefully use it.
how would I use this in typescript?
Have you tried babylon.js? Just wondering, because for me babylon was easier to use / adjust to my needs.
https://pastebin.com/XZ1SWVZ5
I have looked into it but due to the bigger community and support for three just I have been using it more. But yes comparing both frameworks, would be awesome.
Dude! This totally works! Thank you so much for taking the time to write this out you have idea. I can't wait to dig into it more and figure out exactly what's going on. Based on StackOverflow threads I had a hunch that using connection ID's would be part of the solution, but I couldn't quite figure out how to do it. What a relief. I'm celebrating with a beer and pouring one out for my homie. j/k I would hate to waste one. Cheers! Take care.
Yes, it’s worth learning. TypeScript layers itself on top of JS so you can start very small and work your way up. I hooked it up in an existing project, turning my settings to a pretty weak (not strict) configuration and then started adding new components to my project one piece at a time. The biggest win with TypeScript is the strict typing. It can really help with nailing some current and future bugs where you are able to look at your self-documented code, versus trying to remember what all changed. 
Thats look pretty awesome, could add some very nice things to websites
I want that blog thanks XD
I'll try to write something in the coming months :)
I'm not sure, I don't have a lot of experience with TypeScript, maybe someone else can chime in?
Thanks!
The 2nd option you suggested might be my go to, as it is in-code so transfers with the project, doesn't require much setup to do, and absolutely ensures that the 'real' app is only served when authenticated (while the login is only served if not authenticated). This also allow you to potentially move your login to another system if you find you require more concurrency (e.g. system outage and then lots of users queueing to login).
The general idea is this: On the one hand, you want to run that counter of yours and you want it to "just run", independently of any connections or anything, right? So that's what you do. You just set up an interval that counts. On the other hand, you receive connections. But you don't want to just write to those clients when they connect. What you do is simply acknowledge that they have connected and store the connection somewhere (`activeConnections`). Finally -or else nothing would really make much sense-, you _do_ want to send stuff to any connection that is open at any given moment, right? But you want to do that only when there's a new number available (i.e. when the counter increments). So that's exactly what you do. When the counter increments it also calls a function (`notifyConnections`) that just does that: goes through every connection in `activeConnections` and sends them the current counter.
What... do you mean? You'd use it the exact same way, right?
Default exports are always worse than named exports imo
I don’t see why. Sure, if you’re exposing a bunch of functions. But if it’s a React component or some sort of service class it makes sense to me that this is the file’s “main thing”. 
Didn't realise this was r/elitistcoders...
Typescript is awesome! However it feels like it's overhyped at the moment. If you are the only JS dev of a project and mostly work with animations, keep it simple. You will know when you need type checks, interfaces and other TS features 
Hi /u/Calada2, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
Hi /u/harrydry, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Intellisense is better for named exports last time I checked. And I've had annoying bugs due to default importing the wrong thing, which would never happen if they were named. Also personal preference but tslint can enforce only named exports, while it can't do only default exports so I like picking just one and sticking with it. 
Been a thing since at least Windows 7. Very annoying, I've triggered it many times just moving windows around until I finally got fed up and looked up how to disable it.
I read this initially as, “grandmas recipes for cooking a roux”. Then I looked at the sub name. Nope. Not a roux. 
Thanks for your response. Do you have any links or any pointers regarding the technicalities of implementing this on Express? I am sure it is one of these things that is obvious once you know how to do it...
I wasn’t expecting to be impressed. I am very impressed. Well done!
im not sure
Cool! 👍 I did something similar a few weeks ago, just with more particles and more obstacles. https://gabrieltavernini.github.io/GeneticRockets/
I remember messing w/rhino and nashorn. It was kind of a gateway drug. Pretty soon I realized I didn't need java at all.
Take a look at Passport. If you want managed authentication, check out Firebase Auth. 
I am already using passport and I have already complete the authentication system. I need to understand the technicalities of the conditional rendering of the bundle based on the user's authentication status.
Pretty much how ive felt about all JavaScript development since the demise of jQuery. Just keep saying things like: "Yeah ES6 is great, but ES8 is better" "Oh just use babel/bagel" "I used to use Vue but I now use React" "Koa is over-rated, now you can just use asynchronous expresses" "Beans is better than webpack" "I prefer to Gulp FroYo5 than Grunt fro-yoyo-2" "Node? Your not still using that are you? You should check out Deno, it still has some minor bugs, but I find the fact that it support typescript nativley worth the occasional bleeding and nausia"
Lol. Yes, you use it the same way. You've got me rather curious now though... Do you frequently use Typescript?
First thing I disable on a clean install.
Thanks for this! Although I wish we can set the speed so we can see it more clearly in slow motion.
yeah i use typescript for my IONIC apps, I know a way but i was looking for some more cleaner way.
Pay it no mind, they are confused. TypeScript transpiles to JavaScript.
Build them as two different applications. Only serve the second one to authenticated users. Better yet your bundle shouldn't have any sensitive information in it. If yo I need sensitive info, the J's should be getting it from a server on bootup.
How to go there? Able to write your own library.
&gt;Interessant article Are you Dutch by any chance? 
So cool, such a brilliant concept. I love it. 
&amp;#x200B; This map is generated with leaflet, which I believe uses openstreetmap data. The UI controls outside of that is just whatever components you have that talk to the leaflet interface. [https://leafletjs.com/](https://leafletjs.com/) &amp;#x200B; There are react libs for leaflet or you can interact with the raw leaflet js. [https://react-leaflet.js.org/](https://react-leaflet.js.org/) &amp;#x200B; At our organization we switched from Leaflet to Mapbox, which can also do this stuff. Same with google Maps. What I feel like you are really looking for is the coordinate shapes for these municipalities. I am from a different country, so I am not sure how to source your shapes, however, openstreetmap wiki seems to have contributor data for these territories. See SKOPJE REGION in this link [https://wiki.openstreetmap.org/wiki/Mk:WikiProject\_Macedonia/Administrative\_Boundaries](https://wiki.openstreetmap.org/wiki/Mk:WikiProject_Macedonia/Administrative_Boundaries) &amp;#x200B; &amp;#x200B; I hope this can help get you started. &amp;#x200B; &amp;#x200B;
Maybe the reason there are no answers is because: 1. this is one really general problem you're describing and you need to be more precise 2. you should ask at stack overflow instead of reddit If you want to make some globals then dont! I don't have much experience in plain JS, but some solutions come to my mind. Maybe you should create some namespace, make use of ES6 modules or the best option: use some \`store\` for your variables, methods and other stuff. Once again I don't know if it solves your problem. &amp;#x200B;
It works on Android Chrome. 
100% definitely not detecting a Rick &amp; Morty fan right here....
I may be misunderstanding your goal, but it *seems* like you're trying to ensure security at the client-end, and that's a fool's errand.
If you do it again it brings them all back up 
You need to declare your `count` variable at the parent scope - outside of the *onconnect* method.
Great idea! Going to check this out after work.
It is really a trade-off. I find it a lot easier to prototype with dynamic types, i.e. you are still cycling with the client rep to help them figure out what they want. But a more complicated and "mature" system might benefit from static types, but it adds build step convolutions and syntax and some debugging headaches. IMHO if you are doing intensive javascript, it is more important to know the primitive types and how to organize your data structures for best performance (i.e. leverage integers and arrays wherever possible), which typescript isn't really designed to do as it is just a number, but is possible in javascript. But in my experience that is really the power of having different types in the first place, that you can pick the best low level type for the job.
So... I don't use Typescript often, but if I understand it correctly... it's just a superset of regular javascript. It complies down to regular js. It reads regular js just fine. So that's why you can use this shiny.js module in Typescript just like you would use it in any js application/environment. You don't have to do anything special to use it with Typescript.
Going to write this on my wall
You might like this (you've probably seen it): [https://www.youtube.com/watch?v=TIUMgiQ7rQs](https://www.youtube.com/watch?v=TIUMgiQ7rQs) It's basically an evolution of that concept, in that it correctly reacts to the lighting of the environment around you instead of being arbitrary.
https://media1.tenor.com/images/64bc3308c0389af5cf45b82d21356053/tenor.gif?itemid=5141411
That looks awesome :) 
https://media.makeameme.org/created/I-DONT-LIKE-5cg3rc.jpg
How are you moving windows around so violently? lol you have to give it a good bloody shake to activate it I've found.
Thanks. Im definately going to use this one in my next shiny app.
You're asking how to write your own library? Just... write the code. And then host/save it somewhere if you want to use it again.
👍
You can have a GitHub page for each repository you have, you just need to select the branch from which files will be served in the repository settings and it will be accessible through https://username.github.io/repository-name . User page is separate from your other repositories and can be published by pushing files to a repository named `username.github.io`. I think `homepage` field is used by `create-react-app` (maybe something else too, you didn't mention what you're trying to publish), but you don't need it to publish to GitHub pages (you don't need `package.json` in the first place), it's there to fix your links if your app is actually served from https://username.github.io/repository .
You can’t, generally. You have no control over what other code runs on the client. Write code with that in consideration, instead of trying to guarantee some security on the client side. 
This is fucking amazing. Well done. Im not sure where Im going to use this, but Im gonna use it.
I think if you can, then you would usually prefer to use `await` rather than `then` since the syntax is usually cleaner. One downside if you're down-compiling to older JS for older browsers, then async/await code can be compiled into some pretty ugly/bloated ES5. You'll likely still want to use Promises for `Promise.all` or `new Promise()` even if you're using `await`.
Await would be used when you want to do things completely inline and want everything to wait for the results. If you specifically wanted things to continue, you could use .then to start what is basically a second thread that will happen then the results are in, and then continue doing things in the original thread. On a more advanced level, you can start multiple things without await and then await them later as you need them and keep things running smoothly. You absolutely can use both of them in the same source code. It may make your code slightly harder to read and debug, but if you use it thoughtfully, it shouldn't be too bad.
It's a library to create text drawing animations. https://github.com/akzhy/Vara
Really nice on Chrome on Android but mega stutters on Firefox Android.
Hi /u/_jabher, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/rwieruch, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/SkawPV, this post was removed. Please see our rules, and do know that 'Java' !== 'JavaScript'. Thanks for your understanding.
Hi /u/starzmustdie, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
😂 Sorry. No, I am not Dutch but I am living in Germany for some years now and sometimes I make those mistakes.
I simply prefer `await`. The only exception is if I'm doing a quick mapping of data after retrieval. Example: ``` const name = await getPersonFromDb().then(p =&gt; p.name); ``` The reason is that Promise chaining often attempts to make the asynchronous process look more synchronous by encapsulating asynchronous processes into synchronously executed contexts within the `then` statements. Fundamentally async/await does that better because async/await code doesn't look too dissimilar from normal synchronous code.
Great package! Such a cool concept. Completely off-topic but i noticed the video is being manually captured. If you’ve got an iPhone you could use the screen recorder to clean up the shakiness of the video! 
I don’t know what would I use this for but damn it looks cool
It’s a terrible idea thought up to fix a nonexistent problem.
Alternative approach: Stop "writing a ton of console.log statements".
Not in my experience. It's been a while, but IIRC it generally happened because I'd move quickly from one monitor to the other, my hand would shack a bit from the sudden stop, and that oscillation was sufficient to trigger it.
There's a menu in the network tab that you can use to simulate slow internet connections 
There are an awful lot of exceptions and gotchas to that.
What is your approach to debugging? 
Simulating touch events
My guess? Using the debugger
Let and const have certainly been over aggrandize by punctilious developers. Not using them will not hurt your app, but they have a point.
I use the debugging tools. I set up breakpoints in specific places. I use **very few** log calls. If I need to log something, which does happen sometimes, of course, I generally set up one or two conditional breakpoints where I need to make the inspection. Rarely, but sometimes also, I write one or two log calls in the code itself. In general I'd say the approach regarding logging is I keep it to the _minimum_ instead of mindlessly logging a ton of stuff.
Can't this be written as: const { name } = await getPersonFromDb(); or if the name is `personName` instead of `name` from the Db: const { personName: name } = await getPersonFromDb(); 
You could also make it appear as if you are offline. 😊
I think I found a typo in your code on your landing page. The example for "AnimateGroup" that uses the letter R E A C T, it has a &lt;/AnimateGroup&gt; ending tag for the &lt;Animate&gt;
Device toolbar to simulate phones/tablets.
For this kind of question you should go to /r/LearnJavascript
Yes, but I think both are acceptable and there are many cases where a simple transformation can be done with a `then` that doesn't involve destructuring. I was trying to provide an extremely simple example. ``` // For example, I believe there are cases where this: const names = await getPeopleFromDb().then(people =&gt; people.map(p =&gt; p.name)); // Can be more appealing than this: const names = (await getPeopleFromDb()).map(p =&gt; p.name); ``` Specifically in instances where you wish to wrap the data retrieval and transformation in a single async context. At the end of the day, it's tomato/tomatoe. Use async/await in 99% of your code. `then` is fine in small doses.
Github: https://github.com/asjadanis/react-three-boilerplate
Considering the feedback on my last post here is a boilerplate for you guys who are new to webgl/threejs to get you started in no time. Feel free to experiment and make amazing 3d content on the web. 
- [Code coverage metrics](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage) that show how much js / css is actually used. - [Sensor emulation](https://developers.google.com/web/tools/chrome-devtools/device-mode/) that allows you to, well, emulate phone sensors - [Lighthouse audits](https://developers.google.com/web/tools/lighthouse/) that show you how to make your app better
It worked \^.\^ [https://i.imgur.com/MSWukIB.mp4](https://i.imgur.com/MSWukIB.mp4)
Thanks. It is definitely the route I want to go. How do I actually have Express serve different bundles? It's part of Express/SSR/React I am not familiar with at all.
There are some problems for which writing tons logs is the only answer. 
View here: https://react-three-boilerplate.herokuapp.com/
Code coverage looks pretty awesome. Could be handy for finding your way around a new code path when grepping points in 10 different directions. 
Oh nice i didnt know these existed.
Yes, found out about this earlier today when someone shared Shiny.js with Bob Burrough, amazing demo.
Thinking again, I'd consider mounting both apps as subapps in express. That way, you can use middleware to check the Auth. Alternatively, mount the main app as a subapp of the login app. Again, you can check Auth and if they're not authed, redirect them to login. It depends on your architecture more than anything. You might also be able to use nginx with 2 subdomains, but I'm not sure on how you'd integrate Auth from your app into nginx.
Fantastic! :D
I think webkit/blink might be dealing with `background-attachment: fixed`differently from Firefox. I'm going to have to try to switch to CSS transforms instead.
Oh very nice! I knew this was possible but didn't have time to find out how to do it and wanted to quickly publish to Product Hunt this morning. So rush, rush... :D
[removed]
Can it make my pokemon shiny?
I never knew that you can test your website in chrome browser on your mobile phone (any other device) just by connecting it using the USB cable. All it takes just a port forwarding in the console. No need to setup any network config or something of same sort. Helped me a lot while developing PWA applications. Best part is mobile screen is available on the desktop too so inspecting elements become much more easier.
[removed]
Remote devices tab. Can be used to debug chrome browser on your phone. (The phone's usb debugging should be enabled) 
console.table(array)
You can read the messages of the websockets
Do you have a package.json file in the project? if so, could you post it here? :)
Hi, I had a similar problem. If you want to go with JWT you can check my [application](https://github.com/nikolapavlovic994/Clockuvo). What I did is I made sure when the client login that for every request that needs to be protected in Express server to go through middleware that will verify token. If the token is valid I will provide him with requested resources but if it's not then I will forward him to 403.
&gt; As you can see No, that's the problem. We _can't_ see. I understand it's private code and whatever, but you're not giving enough information for anyone to see anything. You mention something about versioning but don't explain; you mention not being able to install with npm but again you don't explain the problem. The only advice I can give you is this: Go ask the original author, or that "gate keeper" you mention. Someone has written that website and has put it on Heroku, right? Then go ask them. They should know.
Dude, you should look in to using a style-guide like [https://standardjs.com/](https://standardjs.com/) or [https://github.com/airbnb/javascript](https://github.com/airbnb/javascript). Your code is sadly all over the place right now :(
looks good but it sticks tabs in front of the console.log statement. They should use the tab settings in the environment. Mine is set to use spaces not tabs.
[removed]
They are literally the same thing under the hood - just comes down to if you prefer a more functional or imperative style. Neither is more or less correct - just pick whichever communicates your meaning most effectively to whoever you’re working with 
It's pretty much standard in JS, so I would recommend to change it.
I am running live the console in my head while typing code. Am I sick?
I thought I was in that sub! My bad... 
Also, your code is kind of old-school. But you knew that already :-P Rollup.js is great for building libraries. I love it combined with Bublé (also from Rich harris) [https://github.com/rollup/rollup-starter-lib/tree/buble](https://github.com/rollup/rollup-starter-lib/tree/buble) &amp;#x200B; Cheers!
omfg i love you
Thanks 
You can [take full/screen size screenshots in any resolution (you set) using Chrome DevTools](https://www.gungorbudak.com/blog/2018/06/28/capture-full-size-screenshot-on-chrome-without-extension/). So, no additional extensions are required anymore!
POODR is a great book and although it’s written for ruby, most of it’s principles can be applied to any object oriented language. JavaScript is a multi-paradigm language, which means that you can write it for example in both functional or object oriented way. So there may be several books for javascript, depending on your preferred paradigm.
Pretty printing and debugging of minified production code, even without source maps. Midline breakpoints. Video capture of progressive load states, so you can catch the flash of unstyled content.
Yes, theoretically I can do the mental mapping between OOP techniques in Ruby to JS, but, not knowing JS as well as I do Ruby, it may be hit or miss, and I'd still be missing the functional parts. One or more books with the approach and quality of POODR for JS would be gold. Hoping to find some recommendations in that vein.
JS has some of the best and easiest to use debuggers in the programming ecosystem and the prevalence of people only using print statements never fails to baffle me.
Lots of people don't know about conditional breakpoints, request blocking, and the `Break On` menu when right clicking on an element in the elements tab.
I do like to wrap my statements in a try catch block, which will make it less clean. My last ‘nicety’ when working with promises is Kleisli Compositions. And then wrap the whole composition in a try catch :)
I can’t quite see it but you might have a r/mapswithoutnz post 
Awesome but now thinking where I can practically actually use this without me obviously just trying to shoehorn this in randomly. 
Awesome but now thinking where I can practically actually use this without me obviously just trying to shoehorn this in randomly. 
I didn't know there was a subreddit for it 
A don't know about him, but i studied that notion at university, Psychology field.
I would rather not go into details as it’s a period that’s highly unpleasant to recall. In short, however, I didn’t listen to my gut and was tempted into a project by ever increasing amounts of money being offered each time I said I wanted nothing to do with it. It was a true nightmare where, at one point, the idea of jumping in front of a bus seemed almost rational. The year it took to recover was spent learning new and unrelated skills outside the world of development, getting back into the real world and gaining perspective and insight into how it happened and how to avoid it happening again. tldr: Always trust your instincts, don’t work on things that feel wrong and only with project managers who can push back against their stakeholders and protect their team. 
I would rather not go into details as it’s a period that’s highly unpleasant to recall. In short, however, I didn’t listen to my gut and was tempted into a project by ever increasing amounts of money being offered each time I said I wanted nothing to do with it. It was a true nightmare where, at one point, the idea of jumping in front of a bus seemed almost rational. The year it took to recover was spent learning new and unrelated skills outside the world of development, getting back into the real world and gaining perspective and insight into how it happened and how to avoid it happening again. tldr: Always trust your instincts, don’t work on things that feel wrong and only with project managers who can push back against their stakeholders and protect their team.
Is it the same thing Tinder does on their "gold" texts? I noticed this the other day it was a nice touch of UX
Pretty cool. Try looking into object pooling if you haven’t already 
Whats what debugging if for bruh
The codebase I recently inherited has about one log statement every 10 lines. They told me that it hasn't been modified in \~2 years, so those log statements weren't added recently. They've been going live to production all that time. Oh, not only that. The developer found that writing console.log all the time was too much effort, so he wrote a custom logging function (that only calls console.log as far as I could see).
Woah, super useful! Thanks a bunch 
Might not be amazing but I often find preserving network log quite handy.
You can debug devtools with devtools. 
I found a new wallpaper to my collection. Thanks man.
Just to give y'all an idea of what kind of features I have in my mind: * Support for HLS (+ FairPlay) in order to support DRM content on MacOS + Safari. * Picture-in-picture. * Continue working on Google IMA integration (if enough interest). * Proper advertisement UI (eg: countdown, clickthrough, a bit like YouTube). * UI support for mobile. * Proper quality selection (bitrate switching or ABR for auto) for both HLS &amp; Dash. * Fake "fixed" container for fullscreen support on iOS (if still needed).
In the elements tab, search obeys xpath. For example #foo finds `&lt;div id="foo"&gt;&lt;/div&gt;`
Right now it requires you to modify `Scene.js` to change the animation. The next step would be to separate the setup/teardown from the actual details of the scene. You could accomplish this using render props, something like this (simplified for the purposes of this comment, but should give you an idea): ``` &lt;ThreeJsScene render={renderer =&gt; { renderer.setPixelRatio(window.devicePixelRatio); renderer.shadowMap.enabled = true; renderer.gammaOutput = true; renderer.gammaFactor = 2.2 renderer.shadowMap.type = THREE.PCFSoftShadowMap; }} /&gt; ```
Ctrl+shift+f. Search all available sources.
Agreed nice example, but I wanted it to keep it simple so peeps can configure stuff on their own and develop a component heirarchy however they wish.
Simulate different `@media` states. For me, I was debugging why my 8.5x11 page was being squished in weird ways when trying to print it, so I found that you can simulate `@media print`. This is great, because debugging it otherwise would be one of the worst things ever.
🤔
Just curious...and this may not be the best place to ask it, but you seem experienced in this space: Is there a benefit to using a library like three.js to build VR experiences vs using something like Unity and C#? I’m imagining there would be a way to export a Unity project for web?
I’m not experienced at all in this but i assume this is a better choice because it runs on JS meaning it only uses one core and won’t cook your CPU and it doesn’t require a gpu.
There are options to export unity projects to web, I am a noob in tools like unity etc but yes you can definitely export to web. Comming from a JavaScript background I can recommend to look into ar.js and aframe for developing web ar/vr web browser experiences. Plus if you are developing stuff for the web JavaScript seems pretty reasonable since you can do all the cool stuff. Also at Google I/O 18 there were talks about immersive web VR+AR tagged under webxr if I am not forgetting.
Pros: Don’t need to learn Unity to build something for web Cons: ??? Pretty sure you can do a unity project in js, but not sure about ‘exporting’ a C# project for web.
Thanks for the reply. Yeah, for this situation I am using create-react-app just as that seemed the easiest way of getting something like this up and running, but it's good to know there are other ways of doing this through JavaScript. &amp;#x200B; That's a cool feature of GitHub -- to have pages that serve your client-facing application. It seems like a good alternative to re-creating your app in something like CodePen or something in order to show a live version of what you've made.
In the network tab, you can right click on a connection and do "Copy as -&gt; " with a bunch of different options. In the Sources tab, you can blackbox scripts - it means you don't have to see vendor libraries messing up your call stacks. 
All right all right so is this buzzwords or is this actually worth my time?
Hi /u/MrYellowSapphire, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Ronniemanseaman, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Chatterfoam, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/KaizenLionNinja007, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
I love developers. With great power comes great willingness to build random whimsical shit to impose ourselves on the world. Love this. 😂😂😂😂
I learned about that one a while back its fantastic
You can also throttle your CPU to simulate old/slow computers too.
If Dev-Tools are open, cache is disabled. But you need to activate it first, not the default option.
Something I have been searching on lately. Will definitely give that a go
It's great that they're finally acknowledging this, but what are they actually planning to do about it? This post seems rather pointless without a call to action, especially since the problem is already well known and has been discussed extensively here and on other forums.
I think this is fine for null checks for this snippet of code. However if you are trying to avoid doing this all over your code, you may want a helper function to handle this. Checking `searchComponents.indexOf(null) == -1` enforces a check on the entire group and is good for dependencies but might be more flexible if there were no dependencies. &amp;#x200B; `const isNullThen = (maybeNull, thenCall) =&gt; maybeNull == null ? undefined : thenCall(maybeNull)` &amp;#x200B; adding a helper, you could do. &amp;#x200B; const isNullThen = (maybeNull, thenCall) =&gt; maybeNull == null ? undefined : thenCall(maybeNull) /* Check if null then fire callback with non-null element */ isNullThen( document.querySelector(".search-frm2"), (el) =&gt; el.action = "staff-directory", ); isNullThen( document.getElementById("searchsubmit"), (el) =&gt; el.value = "staff-directory", ); isNullThen( document.getElementById("search_que"), (el) =&gt; el.name = "q", );
In inspect element mobile preview, nexus 5/5x can have a mobile keyboard opened view to evaluate screen changes with keyboard coming up. It helped us with fixing auto height resize bug when keyboard comes up in Chrome mobile.
Using... copy($r.props) ... in the console to inspect/copy the props of the currently selected React component. &amp;#x200B;
(probably a function of the React Chrome Dev Tools plugin)
In general, the trade off you're making by typing your code is extra time spent on the initial development process (sometimes that time is spent working through type errors that wouldn't cause problems with the logic) for a better development experience (autocomplete and more errors are caught during compilation) and less time spent writing unit tests (they will still be very important but some scenarios will be covered by the type system). Luckily, Typescript is incrementally adoptable so you can just choose to use it where it seems valuable and decide on your own if it seems worth it to continue investing: [https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html](https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html)
Also inspecting node processes (as long as they are run with the `--inspect` flag)
[removed]
Thanks for sharing. I think you did a good writeup overall, and I enjoyed reading it. A good topic for a future blog post might be to look at similar bits of technology that aren't quite JavaScript, but compile to it - I tend to think of them as JavaScript-adjacent. Things like Elm, ReasonML, and ClojureScript. In some cases, they're wrapping React: ReasonReact and Reagent are examples. In the case of Elm, it is its own language, as well as its own vdom and application framework. 
One big difference is that a Unity export is massive, like 10s of megabytes for a basic spinning cube. three.js is 500kb minified. Also AFAIK Unity export doesn't work on phones (or at least it didn't last time I checked.) Also three is free (MIT) so no required splash screen.
Unity or three.js are both single-threaded when running in a browser. WASM doesn't support threads yet. Unless you set up a web worker yourself. Both use the GPU otherwise they would be dog slow.
I use this when preparing demos for conferences where the use of conference WiFi is likely. If it works on a dreadful connection then it'll work well with anything normal. 
**Search** It's a tab alongside the console tab where you can search all of the loaded files. Super super useful when debugging unfamiliar or old code. You probably have to click the three dot menu next to "console" to bring it up.
Assuming there are no firewalls or NATs in the way, connecting players across the internet is the same as connecting them on the LAN. You just set up a "server" listening on their interfaces, and then connect to the first user's IP from the second user's game client. You've apparently already done this with LAN IPs. If there are firewalls or NATs in the way, to connect directly client-to-client you need to do something called "NAT punching" which is absolutely no fun at all. If you add a server into the mix, it's as simple as having both clients connect to the IP of your server, and then your server sends the information to each client appropriately.
Hi /u/spabsa, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Thanks great to hear that you like the articles. Also thanks for idea I will consider it.
huh, TIL. Thanks!
Cmd-P or Ctrl-P depending on your operating system of choice will also bring it up.
Preeeeeeeeetty sure this is JavaScript and not java buddy
The right approach is not using only a debugger or console logs. It's always depends on the task running. &amp;#x200B; Sometimes it's easier to see a log print and a stacktrace, than skipping breakpoints endlessly.
Not much special sauce with react and threejs . Mainly threejs won’t react with the dom outside of canvas through the vdom On a side note this vue implementation is pretty interesting https://github.com/fritx/vue-threejs
&gt;This reduction in friction enabled what came to be known as the “small modules” movement. Literally worst movement in history of movements, maybe ever. &amp;#x200B;
Can you tell I'm new... fuck. haha
LOL.
Pro-tip: When posting code, put three back-ticks on the line preceding your code block and on the line following your code block. It will format the code in a much more readable fashion.
Thank you :) i will update that.
There are 2 probably causes... A: There is no HTML element defined as having a class of `cont` B: Your code is being ran before the DOM has been fully loaded. How are you calling this script? I'm assuming via a `script` tag in your html? If you could, please also post that code. Cheers!
I already acknowledged sometimes you do want logging. The problem I pointed out is not logging but using “a ton of logging”. On the subject of “endlessly skipping breakpoints” I would suggest either not using breakpoints that way or using conditional breakpoints. You can log whatever you want on a conditional breakpoint without stopping.
Thank you for the reply! looks like `.cont` is a CSS element in my files. &amp;#x200B; `{% if page.handle == "staff" %}` `{{ 'staff.js' | asset_url | script_tag }}` `{% endif %}` &amp;#x200B; That's how I'm calling it in my liquid file. &amp;#x200B; &amp;#x200B;
Separate the art from the artist. What R Kelly has done (is doing?) is disgusting but that doesn’t mean I can’t enjoy Ignition (remix) on a night out. That being said, projects are the best way to learn new tech so great job! 
Oh forgot. You can undo html and css changes you made with ctr z
I lied - the HTML element is: &amp;#x200B; `&lt;div class="cont s--inactive"&gt;` `&lt;!-- cont inner start --&gt;` `&lt;div class="cont__inner"&gt;` `&lt;!-- el start --&gt;`
chrome://inspect let's you debug and control websites and web views on your phone from your computer. there's also dev tools for node in there.
In your HTML, are there any elements with the `cont` class specified? (The "A" scenario) Also, in the case of the "B" Scenario... This may work... https://stackoverflow.com/a/800010/2285245 ``` document.addEventListener("DOMContentLoaded", function(event) { // All of your current code goes here... }); ```
I typed it all out in brackets, saved it as .html and it doesn't work. When I copy/paste your code it works. When I compare the files online, the diffchecker says the files are identical. Any ideas what I need to do? Its my first javascript. Thanks
Ok, so it's probably Scenario "B" - check my other answer
"B" Scenario worked!!!! Thank you so much - I've been scrambling trying to find a solution for 2 days now. &amp;#x200B; You're my hero. Seriously. Thank you.
Cool, was looking for something similar for Vue. Too many examples out there use older versions of three.js it’s difficult to get started on something new. Also looking at GeoJSON integration for easy globe plotting of routes.
Ain't no thang. Glad I could help!
Note, this won't work in some older version of Internet Explorer... but that honestly shouldn't be much of an issue.
https://github.com/Foxhunt/Convos A creative tool to help with inspiration and creative holes. Draw with others on a shared canvas. You can only control your brush but can throw your brush into other people's brush. And particles. convos.art
Missing a lot of stuff in the README. No description. No usage instructions. No nothing. 
Dark Mode.
Conditional breakpoints
Sure. My codebase has made me cry on the OUTSIDE. I too am a man. No shame in crying. Gender roles are so 2018. Everyone else isn't wrong. Abstractions are great. Clean code is great. BUT! In my case, it's a game engine. I have: Database -&gt; AWS -&gt; Infra/devops -&gt; Server -&gt; Rules -&gt; Scripts -&gt; AI -&gt; Client -&gt; Sharedlib, not to mention some analytics, a chat bot and a few websites. No matter how abstract and how clean your code is that's A LOT to keep in your mind! The best thing is to get help. Just ONE person working on ONE of the modules makes me so much happier. If that's not an option, don't try and work on projects that touch everything too often. Pick a little niche of the code and live there a few days. Makes the walls stop closing in around you a bit more... Good luck!
Never understood why people can’t use a debugger properly. So much more powerful and easier to use than to go back, add another print statement, compile/relaunch, run, rinse and repeat... Seriously from the early days of php up to now and it still sticks like a nasty chewing gum to the shoe
The [queryObjects](https://twitter.com/ak_239/status/902927604507844608?s=19) feature is one of my favs. Let's you find all the instances of an object in memory. You can right click the result and save as a global to manipulate them.
Is this from the coding train example?
Magic variables * $0 is the selected DOM node * $_ is the result of the last evaluated statement in the console * r-click a value in console and store as global temp
Check out websockets. [https://www.npmjs.com/package/ws](https://www.npmjs.com/package/ws)
It's this kind of thinking that made him a millionaire and gave him the power to evade prosecution for so long. I agree with separating the art from the artist to an extent, but when it's something like this, no way. 
this syntax doesn't work, unless you are returning a promise inside a promise. when you use await you return whatever 'then' would be equal to
I am going to go against the prevailing opinion and say "No". Native JavaScript already has ways to modularize your code - you should learn and use those first. I worked with TS on my last project and it really just looks like JavaScript for programmers that love Java. It adds a lot of verbosity for questionable improvements. If you are an experienced Java dev and want to get into Javascript I would recommend it, but otherwise it is not worth it.
Printer as debugger. Old school
You're welcome, you can set the speed by modifying the time interval as shown in picture.
I quite like using `debugger` keyword. Instead of looking through multiple files in Devtools to find the problematic code, just write `debugger` into the code in your IDE to insert breakpoint at that location.
Well, there's no need to simulate that with my ISP...
You should look at my map of traffic data in Pittsburgh and tell me what functionality to add next. The map right now isn't very extensive since I'm still fairly new, but basically the site takes data in the form of a CSV, reads it using D3 and maps it using Google Maps' API. I created infoWindows in order to display the hourly count, which is an average over 2 years (2012-2014). What should I add next? I was thinking about creating a heatmap or maybe a boxplot, but I'd have to clean up some of the data first or use a different dataset since the sensor data was corrupted at some locations. Link [here](https://jsarlo.github.io/), mouse over my projects and click Traffic Flow Map. Any thoughts?
Last comment saving grace. 
Ideas for features: - Quit your bullshit
Why? What about Roman Polanskis work?
Very cool concept. One of the most unique things I've seen in awhile. Though I'm not sure of a practical use? Focus on the smallest possible dist size and I could see it as a nice easter egg. On any unrelated note some of the comments on this thread are worthy of screenshots. 
The Earth is flat! However, good job 👏 
Nice. That documentary was absolutely harrowing. Cool project. Thumbs up to this issue too --&gt; [https://github.com/bradkovach/ng-mute-r-kelly/issues/2](https://github.com/bradkovach/ng-mute-r-kelly/issues/2)
I used to rely 100% on JQuery and I loved it! I wanted to tattoo it on my chest. It was like crack for me, I couldn't stop using it. But I was addicted, too dependent. Without my fix of JQuery I couldn't do anything. That's when I quit. Had to go to rehab for a few months, started leaning VanillaJS from scratch, slowly picking up ECMAs and before I realized I wasn't even needing $ signs anymore. I had enough ECMAscript knowledge to do most of what I wanted, and what I couldn't do, frameworks helped me to achieve. &amp;#x200B; I can't recommend ECMAscript enough if you want to move from JQuery, the latest versions are pretty cool.
NZ is there @ 0:07
I use a Promise when a library I'm calling only supports callbacks, and am wrapping that callback into the promise (I haven't tried if [util.promisify()](https://nodejs.org/api/util.html#util_util_promisify_original) works on non-native modules, though). I also use then() when building my server startup file, since you can't call async/await outside of a function body, I write a async function and execute it with then(). [https://github.com/theogravity/node-aws-pca](https://github.com/theogravity/node-aws-pca) \- see the code in the readme as an example of this If you use timers in your function and want to return a promise, and resolve when the timer is finished, that's another use of using a Promise.
see what happens when you go online???
May be you should remove the passwords from the source code :)
Thanks for showing me where it is. I know basically nothing of javascript and my code before made sense. I guess I will have to put this on the back burner for now.
Yo dawg! 
Seconded.
I don't know that I'd call it "hidden" but the Lighthouse Audit is great for measuring your site's performance and accessibility and other metrics. Not only will it grade you, it also gives you tips on how to improve.
Uh every time you stream that trash song you are sending him some royalty money. Effectively sending a message not only that you're okay with his wrong doing but that you also have no problem in actively supporting him.
You can get it to activate with small movements if you move it slowly enough in a "shake" pattern. I activate it enough times by accident when I'm hesitant where I want to place the window. Fun fact is you shake the window again and it opens all the windows back up.
Thanks. I will do some edits
I've re-read this code so many times. I'm sure it's a small typo or missing character,just haven't found it...
You seem unaware that the OP is literally not forcing you to stop listening to him.
The OP is literally not forcing you or anyone else to stop listening to him. No more than Spotify is forcing you to listen to Justin Bieber by offering the choice to.
Wait can my Playlists be modified by a 3rd party without my consent? 
This is one step from the twitter blocklist silicon valley people use to unperson potential hires. Also, it's uses angular, which I find personally offensive.
just like NZ
this is cool!! wanna come post it at /r/ReactJS ??
1. check the console for errors (F12 in chrome) 2. can you upload your html somewhere or PM it to me?
Dude, just what I was looking for! What inspired you to do this? Thanks so much! Can't wait to get familiar with ThreeJS.
&gt;This is one step from the twitter blocklist silicon valley people use to unperson potential hires. So are adblockers, I guess.
&gt; Add a canvas element to your web page with its width and height specified (must be equal!) in CSS. How did you decide on requiring equal width and height?
Title cracked me up. Bahahah
Read. Ydkjs
Oh nice. Had no idea. Does it work with mapped JS files?
I do like the accessibility auditor and use it, but the Axe Chrome plugin is much better. 
Is that file size difference an exaggeration? If not, that’s wild! Are you referring to the Unity to WebVR hack released by Mozilla?
Wait... what worked?
Of course not, you probably authorize in the web app. 
I only see Tazmania
Man I can barley twiddle with react. This stuff looks like freaking wizardry. 
Why would you wrap the entire composition in a try catch? I'm assuming you're using [`composeP`](https://ramdajs.com/docs/#composeP) from rambda?
Sure 
`then` works with functions that return a promise and that return something other than a promise
Augruyis a great dev tool plugin for debuting Angular apps. I use it daily. https://chrome.google.com/webstore/detail/augury/elgalmkoelokbchhkhacckoklkejnhcd?hl=en
Press Ctrl+shift+P on the console. A command pallete will open. Type "Screenshot". Get the screenshot of your whole webpage or a a particular element (node screenshot).
How do I use the code coverage to actually strip my JS / CSS files down?
While debugging, the bottom right section has a list of the current variables. You can edit the current variables and their values change in the console instantly.
I read the headline as 'an anger project' 
yes, you are spot on. It was nice learning. 
Man, I sure love spending 10 hours setting up a project so that I can't compile my code if a white space character is missing!
You need to add target="\_blank" in the element. More info [https://stackoverflow.com/questions/4907843/open-a-url-in-a-new-tab-and-not-a-new-window-using-javascript](https://stackoverflow.com/questions/4907843/open-a-url-in-a-new-tab-and-not-a-new-window-using-javascript)
Is earth should be flat ?
I meant how does it take you to be able to write your onw library. I always feel amazed.
This was probably a fun project to work on, and you probably learned a lot from it, but you really should just learn to use the debugger
I think you have some misconceptions about it. It can be dead simple.
Is there a shortcut to close a tab of a source file in the sources tab?
More verbose: export default () =&gt; &lt;div className="Home"&gt; &lt;div className="lander"&gt; &lt;h1&gt;PolyFlash&lt;/h1&gt; &lt;p&gt;A simple flashcard app&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;; When writing fat-arrow syntax, the first line is considered the return. Usually you see this as a one-line statement such as this: export default () =&gt; 'something' The result of executing the default function is the string something. In your function's case the result is a JSX object. You don't need to add the `return` statement because it's implied. The downside to this is that for multi-line returns, such as the one in your example, it's confusing for developers. In programming there are tradeoffs to consider. Do you reduce code to make your life easier, or do you add the extra code to make your code easier to understand by your peers? I figure that it takes longer to explain to my peers why the code looks like it does than it would take to add the return and the curly braces. This is the way I would have wrote it, although I don't think the parens are necessary. I would have also avoided nesting divs like this, and the className for the top level should be lowercase. export default () =&gt; { return ( &lt;div className="Home"&gt; &lt;div className="lander"&gt; &lt;h1&gt;PolyFlash&lt;/h1&gt; &lt;p&gt;A simple flashcard app&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; ); };
This was perfect, thank you!
This is an arrow function with implicit return, so no parentheses or brackets are required. ``` const add = (x, y) =&gt; x + y; add(2, 3); // returns 5 ``` The contents of this function is [JSX](https://reactjs.org/docs/introducing-jsx.html), which is non-standard and requires a tool to transpile to JavaScript.
If time is kept server-side, then nothing can be done. If I was forcing someone to spend a specific amount of time on something, I would track it server-side.
The article explaining how I coded the entire editor is 25% complete, it's a beast of burden. But I hope to finish it in a few days and share with others just to see how it was done. It's not super hard, just a few classes and a solid mouse UI.
I started with the goal of supporting custom aspect ratios, but then it occurred to me that in order to visualize rotations, the aspect ratio shouldn't be too different from 1:1 (otherwise stuff would end up off screen). Then dealing with rescaling upon orientation change on mobile devices just to have a little bit of extra space along one axis didn't seem attractive anymore, so I decided to restrict the aspect ratio to 1. Besides, I need to move the numerical representation of the matrix outside of the canvas onto a separate html element, so I will be able to utilize the empty space in the future.
I think you should learn it. Especially since you do websites. Learning typescript,.you'll understand angular very well and you then might want to get into web apps and use the MEAN stack for developing 
I'm a big fan of his tutorial writing style in general. This thing starts at square-0, but it goes DEEP! Includes HOC, RenderProps, Fragments, Hooks, .Lazy/.Suspense, Code Splitting... Plus sections on Router, Redux, Webpack... Not the first React resource on the web, not the last, but pretty darn complete and worth the sharing.
*Types with face*
Using console.log in conditional breakpoints is awesome ! At the end of the day, just remove all breakpoints.
"People usually confuse between the two terms and don't really realise that both are not "equal". Let us now figure out what these actually mean and how do they function." This can be very misleading. Blockchain is very hard to use outside of bitcoin. 99.9999% of the time "Blockchain" is a pseudoscience used to sell scams. Blockchain is a useful data structure in bitcoin. 
iPhone 3G a decade later
[removed]
So you agree but not when it’s as bad as R Kelly? Where do you draw the line? What about Kevin Spacey? Bill Cosby? Chris Brown? 
It is nice effect, I think I'll use for my next project.
Are you referring to graphics on web or the boilerplate 🤔
Well I saw this on Twitter... Thanks by the way for visual dictionary free PDF edition one and two
I'm sure you can use the APIs for Dropbox or Google Drive. Haven't had a look myself but that seems like the obvious option. And there's probably a NPM module out there...
you seem to have misinterpreted the post completely, my point was that bitcoin is never the same as blockchain and that blockchain is just the ledger system that is used to run cryptocurrencies like bitcoin. Blockchain will definitely find its application in various fields regardless of whether bitcoin will die or live
I don't think there's a tool for that (not even sure if it's possible to implement such a thing). You have to do that manually.
Sooo, after billions were invested into this field in 2017 and 2018 I yet have to find an example of a successful blockchain product - except various cryptocurriencies. I mean, maybe I'm just not informed, but [yeah](https://www.theregister.co.uk/2018/11/30/blockchain_study_finds_0_per_cent_success_rate/) - might just be that Blockchain isn't all that useful, considering. Anyways, understanding the technology behind it important anyways.
Found the comcast customer (and then posted this once my own connection came back up)
const legend = this.man
Nice little refresher, thanks for sharing!
This is really cool. Haven't tried it yet, but I love the idea. 
Why would R. Kelly be in your playlists in the first place if you hate him so much?
Does this do what I think it does?
&gt;in a modular fashion What do you mean by that? Do you have an example?
When will the linux and windows version be ready? 
Right click on an object property in the console or network panel and select 'copy property path'. Alt-click on an object or html node to expand all the content.
This is great! Thank you!
Its a great concept, for a learning tool of observables, i think you missed some opportunities to really embrace them. The \`toPromise()\` you have on your RXJS are anti-patterns for subscriptions. Most of the time you see toPromise you should be using switch map. And alot of the time you're using \`new Promise()\` you can use observable \`of\` . Alot of the code here is promises not Rxjs: [https://github.com/bradkovach/ng-mute-r-kelly/blob/master/src/app/playlist/playlist-list/playlist-list.component.ts#L106](https://github.com/bradkovach/ng-mute-r-kelly/blob/master/src/app/playlist/playlist-list/playlist-list.component.ts#L106) &amp;#x200B;
Ditch that old and busted dev server and give [https://www.npmjs.com/package/webpack-plugin-serve](https://www.npmjs.com/package/webpack-plugin-serve) a try. Post an issue there and we'll help you setup out-of-bundle reload.
Accurate. How they haven’t figured this problem out yet is beyond me. 
Nice, on what browsers can it run?
This and fact that create-react-app comes also with typescript support means fb decided on ts for sure
Your question isn't so much a JavaScript question, but could be applied to any programming language. Let me have a go at it: 1) The benefits of modularisation is that it promotes reuse. Do you think that any part of your data structure should be modularised so that some dev in the future could use that tiny bit in their projects? It also depends on the type of project. For example if it's a small project, then modularisation isn't necessary but clearer code is. Whether "clearer code" means you should modularise depends on you. In a similar vein, large projects should bias towards modularisation as it helps break up the code into smaller pieces that help devs get to grips with your project. In the context of data structures modularisation is a necessity because you can have linked lists, doubly linked lists, stacks that all share some basic principles. Thus a lot of that code can be reused. 2) Too much modularisation can lead to confusion unless properly structured. Also, you have to know when to stop modularising. I always like to think in terms of a future developer. What would I as a developer working with my data structure in the future want to exposed/used so that I can extend or implement my own logic ontop of it. 3) An algorithm is a piece of logic that performs a certain thing. If you are going to be using that algorithm again and again, then sure, modularise it :)
Pretty much any browser that supports webgl You can visit this page to check if it's supported on your browser. https://get.webgl.org
My advice would be to avoid any abstraction unnecessary to the task at hand. When the time comes to reuse your stuff, then refactor. &amp;#x200B; Waaaaay too much time has been wasted making reusable things that will never be reused.
Try it and see.
Damm right
Or users running Windows and Chrome with anything less than 4GB RAM
So first thing I would recommend is to fix your portfolio page. It has a bunch of errors that should be fixed, especially if that is your look at me and my work, best to have initial impressions be good. You can run it through the w3c validation service here - https://validator.w3.org/ 
It's a bit outdated by today's standard, but this book would be a good start: https://www.amazon.com/Functional-JavaScript-Introducing-Programming-Underscore-js-ebook/dp/B00D624AQO In general I would that if you want to write robust and idiomatic JavaScript (as far as there is such a thing), you'd be better off following the functional path rather than the object-oriented one (though you shouldn't be a zealot for either). 
Very nice example, thank you. It looks to me like you are only protecting the /api/ route, is that correct? In my case I only have "/" and "/graphql" routes, so I assume I will need to modify it to protect "/" and I will use (assuming it can be done) middleware to find the graphQL query type and reject anything that isn't a login query if the user is unauthenticated. BTW I am starting to think this is a bit easier than I thought because I am used to static files having come from PHP not too long ago but now I fully grasp the nature of ExpressJS and res.send() it seems much easier to do. Only thing that might be an issue is if there are static files that need protected. Any static files I have I planned on hosting on AWS S3. If it is an issue, I will deal with that when required.
Number 3 says &gt;arr1.filter(i =&gt; !arr2.includes(i)) To find the difference. So why doesn't number 4 say &gt;arr1.filter(i =&gt; arr2.includes(i)) to find the intersection?
No, you must complete an authorization to get started.
I hope to address the toPromise invocations in a next release. I was able to utilize observables in the paginated sections so I am glad about that, but realize there are a few more to tackle. Re: formatting: it’s all delegated to prettier. I only tell prettier to use tabs over spaces and let it do its thing.
Beautifully simple. I like it
Hi /u/_synaps_, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Dzoko1, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/DisastrousBrain, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/textbookgirl, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/crafted-canada, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/artosousa, this post was removed. Please see our [posting guidelines](http://www.reddit.com/r/javascript/wiki/index) (specifically, _Posting: Showing off a Project_). Thanks for your understanding.
Thanks.
Thats cool that you'll clean up the promises. Its looks like a fun project. As soon as you said 'tabs over spaces' you lost me. We can't be friends now :-(
"Blockchain will definitely find its application in various fields regardless of whether bitcoin will die or live" Since a blockchain only works because of the incentives of the coin if bitcoin technology dies then blockchain technology dies. What is Blockchain? I only know 2 definitions. 1) "Blockchain" marketing scam to sell tokens to fools 2) A data structure in bitcoin &amp;#x200B; Blockchain is very tied to bitcoin and it's not clear how you would separate them. Bitcoins blockchain works because of game theory. Without the coin and incentives it's hard to see any use for the data structure. Federated chains maybe. &amp;#x200B; Since 99% of the time "blockchain" is used to sell scams I think you should add a warning or make that clear in your article
Thanks so much for spotting this, this makes absolute sense
You're: 1. getting just the first of the buttons: var button = document.querySelector("button.btn-primary"); 2. Checking if that one, the first one, is the one you want to click. If it is, you click it. If not, you just don't do anything. if (button.innerHTML.indexOf ... Also, your approach with the images is all wrong. You create some variables with the URL of the images and then you check if those strings you have created, do indeed exist. You're not checking anything at all about which page you're on or what image is being shown in reality. I would suggest re-thinking your script completely and visiting /r/LearnJavascript if you have questions. 
The custom iterator example (`obj`) has a few errors - not returning from the iterator, missing `this` for an `idx`, not resetting `idx`, and simply that `idx` is a member property. As a member property you couldn't reliably have two consecutive iterations running at the same time. Iterator methods should be self-contained and independent. Instead of an `idx` member property, it can instead be local to the method call. const obj = { numbers, [Symbol.iterator]() { let idx = 0; return { next: () =&gt; { if (idx &lt; this.numbers.length) { const number = this.numbers[idx]; idx++; return { value: number, done: false }; } else { return { done: true } } } } } }; Also "with an interesting use-case" is kinda click-baity given that isPrime is not an uncommon [example](https://h3manth.com/new/blog/2014/prime-number-generation-with-es6-generators/) [used](https://www.sitepoint.com/ecmascript-2015-generators-and-iterators/) [with](https://timtaubert.de/blog/2013/05/working-with-infinite-sequences-in-javascript/) generators :P
You're a high schooler, confirmed.
I was googling this a week ago and found nothing that works with the web version of Netflix. Thanks! I'm gonna try it.
Have you checked out the webextensions API's/JavaScript API's? 
Great examples for people like me with only 4 months into programming because like you said most examples for these methods are very similar. It was great to see different examples thank you .
Thanks for the suggestions. Well, I didn't mean to clickbait, but when I first looked at symbols, iterators &amp; generators, I couldn't make much sense of them. Then when digging deeper and using them more, it clicked - and it clicked with this example that's why I shared it. :)
Do you mind if I link to your reddit profile from the article when I make adjustments?
very cool! thanks for sharing. =\]
It works perfectly fine in a JSFiddle: https://jsfiddle.net/50Lr7zup/ I'm guessing there's something else going on, which you've not included in your snippet
Side effects, OP, they'll fucking kill your brain as a programmer
&gt;webextensions API's Not. For what? This is an APIs for browser extensions, not for web pages, am I right? &gt;JavaScript API's Only one thing I found for this search query was https://stackoverflow.com/questions/12154191/adding-bookmark-to-mobile-browser-using-javascript (unanswered)
Whoa. I’d love to the story of the development process behind this. Fascinating stuff.
No , just ancient code warrior
Very helpful. I am a basic programmer and I want to have an understanding of more complex algorithms and systems used in computers and some companies. I enjoyed this, thanks.
I always forget about using Set. Thank you! 
There's something happening to UPGRADE in code that's not shown here. &amp;#x200B; \&gt; For some odd reason it does not What happens? It just logs `undefined`?
* Quit your authoritarian bullshit
Ill stick with Fira. Thanks. 
You can, but don't feel like you're obligated to ;)
Nice job, I made a Tetris myself but I used a canvas to "paint" the game... I could take some things that I really like from yours :p Try it out if you want, it's made to play in multiplayer (because it has some debuffs to make it more fun to play) [https://github.com/albertodeago/tetris-online](https://github.com/albertodeago/tetris-online) &amp;#x200B;
This is only for Android devices, right?
Needs font ligature
Yep (probably exceptions where it fails, but I've never had an issue) -- it knows to take you directly to the map file
I deliberated over that choice for days, but finally decided not to implement them— decided to go with a more purist approach. Maybe I'll give it a shot again in the future...
A couple other people mentioned/alluded to this, but `chrome://inspect` is a game changer for Node apps that consist of anything more complex than basic restful endpoints. I recently wrote an app in Typescript and this feature would not only allow me to log/debug my Node app like a client-side app but, of course, also makes use of the devtools' ability to digest map files so that I could explore breakpoints within the Typescript (rather than the compiled JS).
Looks pretty good aside from that. I'll consider using it if u add ligature :)
I’d like to know if this is possible as well; let me know if you find out
Something like this? let dropdown = document.querySelector('#dropdown') dropdown.addEventListener('change', evt =&gt; { dropdown.style.backgroundColor = !evt.target.value ? '#ffff99' : '' }) http://jsfiddle.net/uc2dh6t8/1/
Ah, the return of the dilemma. Dang.
When is @horse_js?
This worked great. Thank you
This is a fantastic post! Some great examples! I am confused with #9. For the following code: `let countries = Object.keys(cities).reduce(` `(acc, k) =&gt; (acc[cities[k]] = [...(acc[cities[k]] || []), k], acc) , {});` I don't understand the right-hand side of the equation. The Spread part is what I understand, but the Key following it and the 'acc' are a bit confusing. Can someone explain it to me, please? &amp;#x200B; Thank you!
Reduce computes a single value from an array. It does this by "accumulating" a value through iterating over the items of the array and returning the value of that accumulation after all of elements have run through. This is accomplished by taking an initial value, passing the current value in as the first argument (traditionally called `acc`, short for "accumulated"), and returning the next value after each iteration. The syntax is var result = array.reduce(function(acc, item) { // Do something to acc based on item return acc; }, initialValue); For example, if I wanted to sum an array of numbers, I could do: var sum = [1,2,3,4,5].reduce(function (total, n) { return total + n; }, 0); Because arrow functions implicitly return the value of the last expression, this can be written with an arrow function as: var sum = [1,2,3,4,5].reduce((total, n) =&gt; total + n, 0); In the code you pasted, the accumulator is an object. The `{}` at the end is a blank object which serves as the base, and as you go through the array you add things to that object (and the final `, acc` is to return the object, equivalent to `, return acc`).
Found some solutions: https://gist.github.com/oilvier/70abd45d1f2ffc98b568 https://www.thewebflash.com/how-to-add-a-cross-browser-add-to-favorites-bookmark-button-to-your-website/
not a dev, what kind of table is this?
You can do the same with Safari and OSX.
+1 on needing style improvements. But the library itself looks intriguing enough that it got a star and a release watch from me.
Yes, I have only protected backend routes for my application. For static files, you can use something like React. That's what I'm doing. I am building static frontend with reacting and every single piece of data is coming from ajax calls to a backend. This is why I protect backend routes. So no data flow will happen if an unautorized client tries to do something.
Thanks, but neither of these would work for me as I’m trying to let the user install a bookmarklet (JavaScript).
Garbage click bait article. How many times can people just rewrite the same shit? 
You 2nd example exceeds the precision available in floating point numbers. https://en.wikipedia.org/wiki/Floating-point_arithmetic The coming BitInt support in JS would help here. 
Hi /u/Fasyx, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/mrlmadsen, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/SecretAgentZeroNine, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Nice b8 m8
I created a VSCode theme generator which both holds the code for generation and also already published themes. It has several modes for creating a new theme, but it lacks documentation. I think reading test would help to figure out code's purpose &amp;#x200B; [https://github.com/selfrefactor/niketa-theme](https://github.com/selfrefactor/niketa-theme)
I wasn't aware of this myself, but I found this stack overflow post about it [https://stackoverflow.com/questions/24257881/javascript-parseint-incorrect-conversion](https://stackoverflow.com/questions/24257881/javascript-parseint-incorrect-conversion). It looks like this is part of the javascript number specification [http://www.ecma-international.org/ecma-262/5.1/#sec-4.3.19](http://www.ecma-international.org/ecma-262/5.1/#sec-4.3.19). `11111111111111111 - 1 === 11111111111111112` is true in javascript.
Thank you, I am working on improvements. A more realistic version is under development.
Couldn't find out if commercial use is on free license or you need to buy at least the lowest license for that?
https://github.com/gajus/unnest Creates a cartesian product of properties identified using value pointers. A utility for normalising data after it has been aggregated from a hierarchical document (such as HTML).
The free version isn’t for commercial use.
Thank you. I do know what .reduce() does, but cheers for the summary. :) I think what I was most confused with was the shorthand. I agree that that sort of code is not readable and therefore shouldn't be created. Utilizing *let* to keep things within scope makes for a clearer variable to read and understand. 
Thanks!
Every time I get a quiz, it always has something like "remove the duplicates from the array." Using Set is simply amazing for this. 
Right but everyone else can ask javascript questions here???
&gt; I agree that that sort of code is not readable and therefore shouldn't be created. I'd pick this nit a bit. I'd take umbrage if code like that was used *in production.* Also probably not a good call to use it in an article like this which is targeting an audience of people who aren't already intimately familiar with JS's features. That said, there are plenty of cases where this is perfectly fine. * Writing a one-liner in the console to calculate, debug, prototype, etc * Code golf and similar challenges * Just as an exercise in playing with different features to help learn and internalize them
http://i.imgur.com/7rpMk.gif
/r/learnjavascript 
Good points Asmor! I'll update the post with your clarifications, do you have a medium account? I have to mention you there.
It’s. It clear to you how they’re separate. An important distinction. There are companies currently using and implementing Blockchain specifically in the logistics field and banking for track products from source to distribution using rfid scanners that are automatic and push tracking to Blockchain. There’s more uses as well. However, ur right to a degree. The public has a tough time distinguishing between bitcoin, Blockchain and any other cryptocurrency. Also, there’s a huge number of companies that it just won’t make sense to use Blockchain either from cost to transition or the lack of necessity compared to their current usecase. 
Hi /u/mrlmadsen, Beginner questions are not welcome here. Have a time-out on me so you can learn to be civil. Thanks.
I wrote this article because I didn't find any article clearly advocating why you shouldn't eject and the alternatives. Do you have an example of an article similar to this?
Right keep on your high horse. Spend your life deleting peoples questions that need help...or get a real job. What a douche
Thanks for outing yourself -- enjoy your permaban on both accounts!
You're such a hack you need me to Google it for you too? Come up with something original, and not just piece meal shit you read after a Google search. And then give it a click bait title to scare all the Noob's. Fuck you. 
Nice post, I have written similar post in my blog site. [https://www.zeptobook.com/eleven-ways-to-learn-javascript-array-iteration-effectively/](https://www.zeptobook.com/eleven-ways-to-learn-javascript-array-iteration-effectively/)
I think it's somebody's nap time.
Rub my back for a bit first!
Hi /u/thistoohard2, please refrain from personal attacks. Thanks.
Fair. I can read most of this quite easily, but some of it I have to break down like you did. When you're prototyping a solution, then perhaps it's acceptable. Just that if I were to find this code after a few months of it being written, it might be a bit difficult to understand. Suppose it depends on the level of the developer. :p
You got it, won't happen again. 
I've mentioned you guys in the article :)
TLDR; &gt; There’s nothing wrong with ejecting — there’s a reason it was built into CRA. There are workarounds and escape-hatches that are worth exploring, but for some cases, they’re just not enough.
I've mentioned you guys in the article :)
&gt; It clear to you how they’re separate. An important distinction An important distinction if you want to mislead people and sell pseudoscience &gt; implementing Blockchain specifically in the logistics field and banking for track products from source to distribution using rfid scanners that are automatic and push tracking to Blockchain If you knew any details on these systems you would know that most are so hilarious broken its hard to get your head around 
It's a simple role based authorisation library I built. [https://github.com/gwuah/ottis](https://github.com/gwuah/ottis)
Awesome! That's really nice of you! Thanks!
I’m going to look at this later today, but if I’m reading this correctly, that sounds awesome!
Crap, sorry. Forgot to include the log. TypeError: UPGRADE is null
I am using React. I assume if I have my app.js bundle in a directory where it cannot be accessed directly and has to be servered through Express that should suffice?
Without seeing your code, it's hard to help. 
We can help you if you give us some code to look at :)
Hope you like it! Here's a link straight to my [demonstration video](https://twitter.com/LinguaBrowse/status/1069531994336436224) to give you an idea of what it can do.
I guess so. Not exactly sure before you try.
Thanks for sharing! I will definitely have a look on this, as it is a recurrent need. 
Kinda cool, but that emoji URL filled my browser history with almost-identical links and rendered my back button pretty much useless.
Its just a simple remove method, but I added the code to the main thread
I have a feeling that your JS code is being run before the HTML element is actually on the page. That is why it works in the developer console, but when you run the file. There are 2 ways to fix this - the easiest is to simply move all of your &lt;script&gt; tags to the bottom of the page (just above the &lt;/body&gt; tag). You can also listen for the `DOMContentLoaded` event, and run your code inside the callback document.addEventListener('DOMContentLoaded', () =&gt; { // put code here });
The issue is not with the \`remove\` method. I assume it's related to the if statement. Have you added some \`console.log\`s to make sure the script is behaving as you expect it to? If you can see what \`textToFind\` and \`text\` are at runtime you should be able to debug this.
I ejected to use Mobx. Migrated to (ejected) CRA2 in a few hours. So why not, really? Plus, I enjoy the `.?`/`.?()` operators.
Yes, I omitted that part but I do have a console.debug for when its being removed, and i DO see that message in the debug window yet the element isnt removed
You mean you want to make a web page that looks like a physical book? You can achieve that with html and css. Here is an example I found by searching for "css book effect": [https://codepen.io/erinesullivan/pen/gxdbzp](https://codepen.io/erinesullivan/pen/gxdbzp) &amp;#x200B; (This type of question is probably better suited to /r/learnjavascript, btw.)
&gt; I ejected to use Mobx. This would be a good case for [customize-cra](https://github.com/arackaf/customize-cra), which lets you make tweaks without manging your whole build. &gt; Plus, I enjoy the .?/.?() operators. Yeah, if you want to use &lt; 3 stage proposals, you'll need to eject. I would love to use those operators too, but I'll probably wait until they're more stable.
sure thing man. hopefully you find it useful.
I want it to be interactible that when you press the page it flips and shows another. And sorry for posting it here, didn\`t know that subreddit existed. &amp;#x200B;
just because you can, doesn't mean you should.
Why are your fantasizing about a minor?
If only you could quit your minimum wage job.
That code is too confusing to maintain and I would request changes on a PR.
I believe this is the core issue, also Node.remove() is not supported on IE11 :)
I tried this: document.addEventListener('DOMContentLoaded', () =&gt; { MyMain(); }); my code is in the function MyMain(), but it seems to break it because now MyMain isn't being called at all! does it have anything to do with my code being a firefox addon? dont think it should matter anyway its just couple of JS lines.. 
Try searching for "css page flip".
Oh yes, it does that. I was going to mention it but the article was long enough. &amp;#x200B; Interestingly, Chrome may soon make a change that would keep your back button working just fine: [https://chromium-review.googlesource.com/c/chromium/src/+/1344199](https://chromium-review.googlesource.com/c/chromium/src/+/1344199)
it's not past it's present, we talk 'are' not 'was'.
But "should try"? I think yes!
It took you that long to come up with that? We'll add "a little slow" to your description. 
They're used almost everywhere nowadays, and are a great way to define anonymous functions with an inherited `this` context, rather than having to `bind` your functions with context. I'd go so far as to say most modern JS large open source repositories will use arrow functions heavily. The [Node.js docs](https://nodejs.org/api/fs.html#fs_fs_readfile_path_options_callback) also use them in all of their documentation for callbacks. 
Keep watching the Udemy course. They'll probably explain it there. As for its relation to React? Absolutely nothing. React is a UI framework used for displaying information, not getting it. 
Got it! A person should focus to understand and master it very well. Thanks!
Alright. I haven't started React, I just have this idea that it's the framework used for web development. Just a dumb question, I guess.
Whatever floats your pedoboat.
OMG I got suspended from a website!! Who fucking cares. I got accounts for days. But good job trying to toot your own horn. And if it's such a beginner question..what's the answer? Bet you don't know.
`document.querySelectorAll('input[type=radio]').every(e =&gt; e.checked)`
That's awesome! The multiplayer feature is very cool
&gt;document.querySelectorAll('input\[type=radio\]').every(e =&gt; e.checked) when I use that it says .every is not a function. 
rofl
The very second sentence, " That was +/- 4 years ago.", makes me skeptical on the content. 
I've never needed to do this, but MDN says to try: if (document.readyState === "loading") { // Loading hasn't finished yet document.addEventListener("DOMContentLoaded", doSomething); } else { // `DOMContentLoaded` has already fired doSomething(); } https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded#Checking_whether_loading_is_already_complete
It's a newer feature so you're most likely to find it with newer code. That will likely be true for "creating small solutions for startups" but not necessarily "programming for multinational corporations coding enterprise apps". In the multinational company I work for, I'm working on an enterprise app with components that both use and don't use arrow functions. One component is newer, so it does. The other is older, and stuck in ES5 (no arrow functions).
Node.js isn't really a framework, it's just the environment you need to use Javascript on a server or desktop. Plenty of people write plain Javascript for Node. Plain Javascript is also used everywhere that frameworks are used. Frameworks are made of plain Javascript, and if you're doing it right the non-Web parts of your application should all be written in framework-agnostic Javascript. There are thousands and thousands of jobs that aren't front-end specialists that won't use any JavaScript beyond jQuery. Many, many Web sites are mostly build using mostly server-side programming or even just plain HTML, and they don't use frameworks.
&gt;const r = Array.prototype.slice.call ( document.querySelectorAll('input\[type=radio\]') ); &gt; &gt;r.every(e =&gt; e.checked); &gt; &gt;every fails on querySelectorAll because querySelectorAll creates a nodelist not an array &gt; &gt;elements need to be in an array to use the every function &gt; &gt;use [Array.prototype.slice.call](https://Array.prototype.slice.call)( ) to turn nodelist into array, a better solution may exist &amp;#x200B;
It's still used plenty. Frameworks are an unnecessary overkill and/or dependency for simpler functionality
If they're dropped, I'm prepared to refactor. They are very very useful.
No, I don't. No mention is necessary, but I see you already have so thanks.
I believe you could use [history.replaceState()](https://developer.mozilla.org/en-US/docs/Web/API/History_API#The_replaceState()_method) for this purpose if I am not mistaken. &amp;#x200B; &gt;`history.replaceState()` operates exactly like `history.pushState()` except that `replaceState()` modifies the current history entry instead of creating a new one. **Note that this doesn't prevent the creation of a new entry in the global browser history**. &gt; &gt;`replaceState()` **is particularly useful when you want to update the state object or URL of the current history entry in response to some user action**. &amp;#x200B;
Maybe \`Array.from(document.querySelectorAll('input\[type=radio\]')).every(e =&gt; e.checked)\` ?
Hi /u/jyourman24, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/Mande21, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/geerizzly, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/wulfgar4president, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/calicchio77, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Hi /u/saifdez, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
\&gt; **is there something better?** Personally, components all the way down is serving me quite well. Write some util and helper files here and there. \` PenguinController\` methods could easily be inside the Penguin Component. \&gt; I don't like the use of .bind either, seems dated and I just run out of enthusiasm for updating things. Class propeties babel plugin is useful for that, but I suppose you don't want to compile. The obvious alternative is to use arrow functions. Would need to scope them properly though, and that might be a pain. 
Hi /u/iamqbm, this post was removed. For javascript help, please visit /r/LearnJavascript. Thanks for your understanding.
Ah I did try to google it and tried document.readyState === "completed" but it didn't work very well since the state was "interactive" .. so I tried your solution and so far it works thanks. The site im debugging though is making some changes so its hard to see if it always works atm, but so far so good.
Jesus Christ, nice to see ya on my front page dude! Cool stuff yo. I'm working with your bro now; sick guy. Keep kicking ass breh.
Bamboo build server. Years ago I used it and what an utter nightmare trying to fine any tutorials or documents on how to use it. It's not as bad as Jenkins. But it's up there. The biggest thing was that at the time nothing was intuitive of how to use it, what what even a use case was for it. 
This is fixable.
Small price to pay for emoji animations in the loading bar.
Yeah bummer.. I actually wasn't aware of replaceState, but I just tried it and had the same throttled result. &amp;#x200B; Thanks though!
Oh god, don’t give people ideas!
[removed]
Please reveal your secrets
&gt; your components will be completly rerendered I'd recommend looking at paint times to validate the assumption that sub 1kb payloads offset runtime costs of doing naive re-rendering.
Just a couple of random thoughts. Don't take the following as any exhaustive review or anything remotely similar because it's not. #### First, I don't really see much of a resemblance to Emmet. I mean ok, maybe in some sense, from a distance. But really, this looks _intrinsically_ different from Emmet. Sure, Emmet is capable of many of the things here, but it's _essential_ usage feels quite different from your Temme. I'd say Emmet's strongest point is its simplicity and the repetition tools. This is why it is _so_ popular as a tool inside editors and IDEs. You _write_ a very simple `div#menu&gt;ul&gt;li*8&gt;a`, press some key and it expands to the appropriate HTML _and you forget about the original string_ and go on to edit the links or whatever. It's essence is that simplicity. On the other hand, Temme's syntax is **essentially** different. It's extensive, detailed, obviously more flexible (or it _could_ allow more flexibility, but more on this later). It is almost as extensive and detailed as the HTML it produces. You just need to look at the examples to notice that, due to a couple of quirks, it is in fact not less but _more_ extensive that the HTML produced. A second, but also essential difference is that Emmet produces **text**. While Temme produces a DOM fragment. I understand why, but then again it only adds to the _difference_ between them. They seek a largely different _goal_. For these reasons, and while I understand that Emmet may have been the starting point that pushed you into creating your library, I can't really think the final thing still bears any relation to Emmet. #### I would compare it with hypertext [Hypertext](https://github.com/hyperhype/hyperscript) feels like a **much** closer comparison. But then again, if I compare it to _h_, I'll have to confess that I much prefer it to Temme. And not only for reasons of maturity, but also because if I do compare them in technical features, _h_ "wins". On the one hand _h_ is **much simpler** in its syntax. There's far less quirks to remember (more on those quirks in Temme later). The syntax is more uniform _and_ it also allows for _more features_ (such as event handlers). Also, _h_ recursive usage allows for a number of patterns that feel somewhat more elaborate in Temme. #### A couple of quirks and a general comment on the code About those quirks I mentioned. It feels not only too elaborate but also _weird_ having this... content: { value: 'Card header' } ...on an element's definition. It's tedious and I would expect to simply write `content: 'Card header'` and be done with it. But, of course, you allow using a _type_... content: { type: 'html', value: 'Card &lt;em&gt;header&lt;/em&gt;' } But now it feels even _weirder_. On the one hand _text_ is the default and you don't need to specify it, so we're assuming -correctly- that it will be used say 95% of the time. But you still need to put it into an object with a `value` property instead of simply passing a string. Not only that, but why allow HTML at all? Isn't this _exactly_ the purpose of the library? If I'm going to put random HTML into those strings it feels like I'm invalidating, at least partially, the point of all this. One other thing that _may or may not_ be a quirk is that thing about references. I can't say for sure if I consider it a quirk or not, because I'm having a hard time finding a clear use case for it. I've read the documentation and it's still not clear to me if or when I would use that at all. I mean, I get it, I understand _how_ it works, sure. But... it feels like a _fairly complex_ thing to set up for the few use cases where it could be useful. If anything I _might_ imagine some limited usage of what you call _template inheritance_, but I don't think I'd use the rest of the features. Finally, about the code... But first a **warning**: I haven't looked at the code. Not for more than 30 seconds total. So I won't say anything about how good or bad it is because I simply don't know. But I've looked at the tests. I've looked because something stupid crossed my mind at one point. It was about _form elements_, such as an `&lt;input /&gt;` I mean. The thing is that an _input_ has both an attribute `name` and an attribute `value` but no content, and I was thinking that having something like... { name: 'p', content: { value: 'Some random text.' } childNodes: [ { name: 'input', attributes: { name: 'username', value: 'EOussama' } } ] } ...feels somewhat confusing because of the usage of `name` and `value`. But anyway, that's not what I was going to say. I looked into the tests and they feel a bit scarce, at least those in `temme.test.js`. There's almost no testing done on _attributes_. There are some "inheritance" tests that use one attribute, but that's it. I think it would be a _good idea_ to write at least a couple more tests in general. (One idea: What happens if you give a node both an `id: 'one'` and an `attributes: { id: 'other }'`? Or what happens if you write an `attributes: { 'class': 'whatever' }`? Or even... can I actually do that thing I just did where a node has _both_ `content` and `childNodes`? What would/should happen then?) Ah! Why did that thing with the attributes catch my attention, though? Well, mainly because I later verified that the correct syntax is what I wrote above, but then again, the example in the README shows a... attributes: [ { contenteditable: true } ]
Ohononono
Thanks for sharing your open source project, but it looks like you haven't specified a license. &gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you. [choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing. 
&gt; There are no villains in this story. Just smart people doing their best, and unfortunately working at cross-purposes through no fault of their own. No I am sorry I am not buying this. The fault was _entirely_ their own - it boils down to their stubborness. If Facebook hadn't spun out yarn and provided some competition we still wouldn't have lock files. Even when they implemented it they did it all wrong - package.json overrides package-lock.json, what is the bloody point then. Only in the last couple of months they have finally - _finally_ - provided the npm ci command so that a lock file will always override the package.json. They always refuse to enforce namespaces like say github. That would have avoided the whole leftpad drama /facepalm They simply refuse a -c flag to the npm command to allow different config files to be used. And so on and so forth. They are extremely opinionated and refuse to adopt tried and tested best practice from maven and other repos simply out of stubborness. 
Well to do it 'properly' you'd wrap it in a try / catch in one case, and add a .catch in the other
Rhino? Blimey that's a blast from the past. I remember using it 10 years ago or more with some of the early test runners. And Google Apps Script. I wouldn't go anywhere near it.
Oh nice, small world! Surprised to be on the front page of anything. I heard you're working with him, nice one :D also sounds like you've impressed him, so you must be doing something good. Also see you forked Elasticsearch last year. I've been wrestling with it recently; sure you have some horror stories. Hope to catch up with you sometime!
&gt; offset runtime costs of doing naive re-rendering or the UX
&gt; github.com/warcha... Added license. Thank you.
What's going wrong?
I recently did a fizzbuzz, dont feel like you're a failure if you cant, more than likely you might not be aware of a couple of things. Show your code and lets,talk it through
You're just learning. Failure is \*essential\* to learn and it does not mean that \*you\* are a failure. If you weren't failing, that would mean you weren't learning, and to me that would be much worse. So just keep learning. Look at examples of correct implementations of the algorithm and figure out why yours didn't work, and why the working ones do work. Then try again. Once you can write it confidently, move on to harder challenges and just keep at it. Remember that every failure is a golden, actually quite necessary, opportunity to learn.
This has to do with your problem solving skills, some people are natural born with a great capacity to solve problems, others not so much, but everything can be learned, and with practice you might get there, you will eventually start to recognize patterns and solve problems more easily. A true expert programmer does not need to know every language there is, nor know everything about a language, though it is not bad to master a language, really good programmers are people who solve difficult problems applying techniques they learned either by studying, or through experience. This is merely my opinion. But keep in mind, even if you are not a good programmer, if you like to do it, just keep doing it.
&gt;I am able to create a simple tic tac toe game using javascript, css, and html. I understand lexical scope, type coercion, objects, loops, and have a basic understanding of closures. However, when I tried to do fizzbuzz, I could not get it to work properly. I understand if, else, and conditionals, but I could not get it to work properly. the failure here is judging yourself so harshly. fizzbuzz is not _the_ yardstick of whether you're a **real** programmer or not. it's just a heuristic shortcut we use in hiring. failure here would be giving up and saying you can't do it, when you have an opportunity to learn and get better. so post your code and we'll tell you how to fix it.
Have you taken a traditional programming class that goes over more mathematically oriented problems and how to go about solving them? If not, you definitely should - there are a thousand APIs to learn to get things to happen, but what's really valuable in programming is having a strategy to go about logically writing code to solve more complex problems (examples: Making change, drawing a circle on a canvas point-by-point, calculating statistics on data like max, min, average, implementing game logic like checkers, etc.)
Wow I didn't know about Array.prototype.some() Convenient!
I've noticed people who can't do some of the problems typically start coding right away without actually thinking first. If you think about the problem and solution before even writing a bit of code, you'll waste less time and write better code. Or just watch a few algorithms videos on youtube.
Industry secret: if you don't know know how to do something, it's ok to look up how others do it
Are you familiar with the modulo operator?
No, the only way you would be a failure is if you gave up on programming because of this one blind spot and never went back to it. 
&gt;Class propeties babel plugin Thanks for the help! I read [Babel’s Transform Class Properties Plugin: How it Works and What it Means for your React Apps](https://medium.com/@jacobworrel/babels-transform-class-properties-plugin-how-it-works-and-what-it-means-for-your-react-apps-6983539ffc22) and this seems interesting, but you are right, I don't want to compile. I don't really know what type of components you are talking about, could you give an example of: &gt;PenguinController\` methods could easily be inside the Penguin Component. Thanks!
Thank you. This has made me feel a lot better. I know how to write code and I know how to manipulate the DOM and create functionality with javaScript. I just saw others talking about if you can't do fizzbuzz you're not a programmer and that made me question weather I was or not.
If you're not self hosting builds, we wrote bitbucket pipelines from scratch to address a lot of the feedback we got from Bamboo. Also for what it's worth, Atlassian has changed tremendously in the last few years. We've invested a ton into UI/UX to make things a lot more clear.
Yes I am. For some reason it does not appear to be outputting correctly. I added the code in my OP.
Oh I forgot about String.includes
If you're writing code, then you're a programmer. That's all there is to it in my book. That said, not being able to write fizzbuzz does mean that you still have yet to learn certain fundamentals that are essential to many programming tasks. This is not a reflection on who you are, only a reflection of your current level of knowledge and experience. You can absolutely gain that knowledge and experience, and hopefully it's exciting and fun for you to do that. 
Can you use WebSockets? As far as I understand (I never did any stress tests) WS are directly based on TCP, and under TCP frames are resent (and arrive at order). How does that translate to lost connection drops is not clear to me, though. 
&gt; [...(acc[city] || []), k] I don't find this simpler than just writting: `acc[city].push(k)` Is that not the same thing?
Thank you. Your words are very encouraging. I mean, I know I can write programs and I can manipulate the DOM and apply classes or attributes to elements. I even did this from a programming challenge from codewars. function removeSmallest(numbers) { for (let i = 0; i &lt; numbers.length; i++) { if (numbers[i] == 1) { numbers.splice(i, 1); return numbers; break; } } } console.log(removeSmallest([1,2,3,4,5])); console.log(removeSmallest([5,3,2,1,4])); console.log(removeSmallest([2,2,1,2,1]));
Whoops. Yeah, you're right. Thanks for pointing that out. It's not outputting like the example here. https://eloquentjavascript.net/code/#2.2
I guess I don't understand the question. If you reload the page, the global variable will no longer be held in memory. Each refresh, resets the counter back to 0.
Close. That also creates the array if it doesn't already exist, so it's equivalent to: acc[city] = acc[city] || [] acc[city].push(k)
You're not a failure. This is the process of coding. You learn the basics then keep failing at getting it to work until you finally get it working. 
It's not outputting like in the example here. https://eloquentjavascript.net/code/#2.2
Yeah I don't think this would work in my usecase. When a client is offline for an extended period of time any websocket would time out and the data would be lost I think. Thanks for the answer though :) 
&gt;FeathersJS this is quite valid answer actually
I need this as well. I haven't done the research yet. My only thought is implementing something with localStorage.
2 more things in that example, if it is not %3 or %5, print the number. if it is BOTH %3 and %5, print FizzBuzz.
I cannot find confirmation of this feature on WS but under TCP it is one of the design rules - all packets must be acknowledged. There’s also no problem with resending them, unlike with POST verb, because of all this ack numbering scheme. So that should come for granted with WS, right? Alternatively, make all your messages PUT verb, collect them in an array, resend every now and then, and delete from the array only at getting 200 OK. Server sometimes would get duplicates but with PUT you won't violate restfulness.
We think alike
Think of different numbers going through your loop, keeping in mind that the first condition it matches is what's going to grab it and work on it. Only one will grab it. If nothing else does, the else will grab it. So if it's 13, what output do you want? Now walk through your if else structure and think about what's going to grab it. Same thing for 14, then 15. Like others have said in better ways, you will constantly find yourself looking at something that you know has to work, but it doesn't. So come at things from different angles, put in intermediate outputs to see if what you're getting is what you expect to get. Test each step on the smallest scale possible. Also, spend time defining the problem you are experiencing. That's a huge part of the battle. You want A, and you're getting B, which shouldn't be happening because of C, D, and E. Ask if you really know if C, D, and E true, and test them. Sleep on something and come back. If you hit a dead end, return to a high level of looking at it and come up with some other thing that just might be relevant, even if it sounds crazy. Know there's an answer, and know you're resourceful and stubborn enough to find it. 
Programming is about coming up with solutions to different problems. And the more time you spend developing solutions, the more patterns you'll begin to recognize. There are going to be several times in your career where you just can't wrap your head around some issue that you've been staring at for too long. You might just need to take a break and do something else for a while. That's critical, because it allows you to step back from the problem, letting you think of it differently rather than attacking it head on with a narrow focus. And that change in perspective often helps you re-evaluate the problem, and thus the solution. &amp;#x200B; With that said, here's my understanding of the FizzBuzz problem. Print numbers from 1 to 100...BUT if the number is divisible by 3, print "Fizz" instead, if the number is divisible by 5, print "Buzz", and if the number is divisible by both 3 and 5, print "FizzBuzz". &amp;#x200B; There are 4 kinds of outputs here: \- A number \- "Fizz" \- "Buzz" \- "FizzBuzz" &amp;#x200B; I don't want to be too specific about your code, because I'd rather you come to a solution yourself. But if you need a little more push, don't be afraid to ask for specifics. &amp;#x200B;
However. At some point you start to think in code, so why not just write it down. Once I had that moment ”Ok, that's hard, maybe I just scribble some pseudocode to get me thinking” Plot twist! My pseudocode was Python all along.
Okay so I apologize for this noob-sounding question. I’m a React dev pretty fresh out of college and I’ve recently been working with React Native to build a mobile app (it’s on TestFlight but is far from done). So like, I “know” it but I don’t know the magic behind node and react, if that makes sense. Is this related to React Native, and if so, what benefit does this provide? If I’m just reading it at face value it sounds like you can call like Native things the phones can do.. from the JavaScript? How is this different from React Native, or what functionality does the IDE provide versus VS Code (I’m using VS code now) Any explanation you could give me would be great, just trying to learn new things!! :) 
Are you trying to pass the wheelEvent event object as `e` into bind? Or is that an additional parameter to the event you're trying to provide to servicesAnimation? As it is now, your servicesAnimation signature would be something like function servicesAnimation (e, event) If you're using `e` to represent the event, then you don't want to be passing it into bind. When you pass in arguments into bind, they're added to the argument list of the function create in addition to the actual arguments passed in. If you are expecting just the event argument, i.e. function servicesAnimation (e /* e is for event */) then you don't want to pass anything into bind and simply allow the event handling to do that for you. servicesAnimation.bind(this)
You might want to utilize browser localstorage if you are trying to save something as basic as the counter across page reloads. Ie. //sets counter to an integer based on localstorage item, or 0 if not set/cant read var counter = parseInt(localstorage.getItem(‘counter’)) || 0 //run counter code localstorage.setItem(‘counter’, counter) Primitive and there is probably a better way but I am tired. I haven’t tested any of this, just spitballing. As far as I remember localstorage only stores string values, which is why you would use the parseInt() on the retrieval.
Lit 
A simple (but fully customizable) react tag input component built using styled components. [https://github.com/leekevinyg/react-tag-input](https://github.com/leekevinyg/react-tag-input)
Building your own UI library is a great experience, and I've learnt alot by going from a similar simple library to a full-featured solution. Instead of focusing on the library size, I'd recommend for you to start researching all use cases/edge cases that are covered by other libraries, then try to create a solution that covers all this use cases. If you are like me, your first solution will be insanely complicated (it maybe counter-intuitive, but complicated solutions are so much easier to write). Then you can try to figure out how make it simple and performant, I'd guarantee that you will learn alot more if you won't focus on the code size when you just starting to explore this problem space.
Cool to see happen, but bleh. Novelty wears off in seconds.
Thank you so much for this. You have all been so helpful and have really lifted my spirits. Here is my new solution if you care to evaluate it. for (let i = 1; i &lt;= 100; i++) { if (i % 3 === 0) { console.log("Fizz"); } else if (i % 5 === 0) { console.log("Buzz"); } else if (i % 3 &amp;&amp; i % 5) { console.log("FizzBuzz"); } }
For those who don't know, Sophie Alpert was the lead of React and top contributor. 
You could try something like: window.history.back(); location.hash = '🌔';
It's inverting a map of city&amp;rarr;country to country&amp;rarr;[city] Would benefit from Object.entries over Object.keys let cities = { Lyon: 'France', Berlin: 'Germany', Paris: 'France' }; let countries = ( Object.entries(cities) .reduce((acc, [city, country]) =&gt; { acc[country] = acc[country] || []; acc[country].push(city); return acc; }, {}) ); 
😢
Do note that with this solution, if a number is divisible by both 3 and 5, you will check for divisibility by 3, have a successful check, and never check for divisibility by 5. Also, if the number is divisible by neither, it will not be printed, even though you should print the number in such a case.
Ohoyayaya
💯
Coming Soon to a URL Bar Near You: ｡･ﾟﾟ･ 💸 👉 gOtO:: [CHEAP.VIAGRA.BIZ](https://CHEAP.VIAGRA.BIZ) bEsT pRiCE 👈 💊 ･ﾟﾟ･｡ &amp;#x200B; (and it moves and wiggles and blinks)
&gt; i % 3 &amp;&amp; i % 5 Is the opposite of what you want. Say is 15, this resolve to `0 &amp;&amp; 0`, which is false and won't run. You still need the `=== 0` in there. 
I don’t think this is what you’re looking for. It looks to me like a misunderstanding of the how the if / else if / else works. It’s been a while but my understanding of the fizzbuzz problem is output ‘fizz’ if a number is divisible by 3. Output ‘buzz’ if it’s divisible by 5. Out put ‘fizzbuzz’ if it’s divisible by both 5 and 3. With this solution it’ll output fizz for the divisible by 3 and buzz for being divisible by 5 but only fizzbuzz when divisible by neither. I say it looks like a misunderstanding of how the if / else if / else construct because you have to realize as soon as a condition is met the rest of the else’s that follow are ignored. If you want me to expand on that I can. Also there’s a few ways to attack this problem. Sometimes when I get stuck on a problem I consider other approaches. Sometimes I go with one of those sometimes thy help me find the flaw in my original solution.
Wow, I had no idea she quit. She was probably the second-most visible React dev next to Dan Abramov. Facebook must've really fucked up here (surprising no one)
Definitely going to check this out. Thanks for doing all the hard work! Also, I love the name ;).
I tried that and it didn't output "FizzBuzz" I guess I will never be the programmer I want to be.
This is not a stab at you, just the idea itself. Good job nonetheless :)
Facebook has a diversity problem? FACEBOOK?! &gt; in some buildings, there are more 'Black Lives Matter' posters than there are actual black people. Wait, aren’t there more white people in the Black Lives Matter movement than black people?
You want a service worker, and yes you could implement it how you say. If the order really doesn't matter then it will be even easier, but make sure that's really the case. ie you have two clients on the same account, one goes offline for a while and some changes are made to the same object on both ... what happens? 
As the OP says, the connection will timeout after a while. So your app will be told that the message didn't successfully get sent and the TCP stack will stop trying to resend it. 
 javascript:(function()%20{%20var%20meta%20=%20document.createElement('meta');%20meta.name%20=%20"theme-color";%20meta.content%20=%20"#000000";%20document.getElementsByTagName('head')\[0\].appendChild(meta);%20var%20tag%20=%20document.createElement('style');%20tag.type%20=%20'text/css';%20document.getElementsByTagName('head')\[0\].appendChild(tag);%20tag\[%20(typeof%20document.body.style.WebkitAppearance=='string')%20?%20'innerText'%20:%20'innerHTML'\]%20=%20'\*%20{%20background-color:%20white%20!important;%20color:%20#444%20!important;%20%20}%20html%20{%20filter:%20invert(100%)%20grayscale(100%);%20}';%20})();
I know how if else works it's just that when I get to the final condition it is not outputting fizzbuzz.
Wow! That's really sharp. 
Because the condition has already been ,etc so it never checks it ... that’s how if / else works. I wasn’t trying to insult but clearly that’s where your mistake / misunderstanding is
More evidence of a systemic issue in tech culture
Thanks for taking the time out to reply. But this does not bring the said changes together. No changes appeared.
I know you're not insulting me. I know I am better than this, but for some reason this is giving me problems. I guess I am just having a bad day. I think this is correct now. for (let i = 1; i &lt;= 100; i++) { let message = ""; if (i % 3 == 0) { message += "Fizz"; } if (i % 5 == 0) { message += "Buzz"; } console.log(message || i); }
😀
A promise that promises itself? This one promises itself AND resolves to itself: &gt; const p = new Promise(resolve =&gt; setTimeout(() =&gt; resolve(p))) &gt; Uncaught (in promise) TypeError: Chaining cycle detected for promise #&lt;Promise&gt; at &lt;anonymous&gt; at setTimeout (&lt;anonymous&gt;:1:45)
I agree with everything that the others have said - just because you don't know how to solve a problem doesn't make you a failure. Everyone starts from somewhere so don't be afraid if you're making mistakes. The most important lesson is trying to figure out where your mistakes are coming from and working on fixing those mistakes. So don't give up! &amp;#x200B; For your particular implementation, what I would recommend is pretending that you're the computer and WRITE DOWN everything by hand what is happening. For example, walk through your "if" statement starting at i = 0 and go all the way to 20 (for example). Write down both what you expect to get and what you actually get when you're pretending to be the computer. Hope that helps a little!
Let's break down your code, I reformatted it for legibility: ```javascript for (let i = 1; i &lt;= 100; i++) { if (i % 3 === 0) { // If divisible by 3 console.log('Fizz') } else if (i % 5 === 0) { // If divisible by 5 console.log('Buzz') } else if (i % 3 &amp;&amp; i % 5) { // If dividing by 3 has a remainder AND dividing by 5 has a remainder console.log('FizzBuzz') } } ``` It looks like your 3rd if-statement is checking for something different than you intended. You can try using variables to abstract the conditionals and keep it DRY and consistent. Try something like: ``` const isDivisibleByThree = (i % 3 === 0) const isDivisibleByFive = (i % 5 === 0) ``` This way, it's easier to understand, and you won't have to rewrite the conditional when you're trying to compare the case where the number is divisible by 3 **and** 5. TIMTOWTDI, but let's try making it simple to read.
Lol. The content is otherwise good though. 
Very useful
\+++++++++1
Thanks. Yeah, I noticed my mistake. Here is my code again. for (let i = 1; i &lt;= 100; i++) { let message = ""; if (i % 3 == 0) { message += "Fizz"; } if (i % 5 == 0) { message += "Buzz"; } console.log(message || i); }
Thanks 😊.
Well to start off, let's run these through `decodeURIComponent` to get rid of the `%20`s (actually, the second function threw an error when I tried this, so instead I just ran `THE_STRING.replace(/%20/g, ' ')` to replace them with spaces) and format the actual code so it's readable. Ahh, much better. ``` function() { var meta = document.createElement('meta'); meta.name = "theme-color"; meta.content = "#000000"; document.getElementsByTagName('head')[0].appendChild(meta); } ``` ``` function() { var tag = document.createElement('style'); tag.type = 'text/css'; document.getElementsByTagName('head')[0].appendChild(tag); tag[(typeof document.body.style.WebkitAppearance == 'string') ? 'innerText' : 'innerHTML'] = '* { background-color: white !important; color: #444 !important; } html { filter: invert(100%) grayscale(100%); }'; } ``` Now just combine the function bodies ``` function() { // first var meta = document.createElement('meta'); meta.name = "theme-color"; meta.content = "#000000"; document.getElementsByTagName('head')[0].appendChild(meta); // second var tag = document.createElement('style'); tag.type = 'text/css'; document.getElementsByTagName('head')[0].appendChild(tag); tag[(typeof document.body.style.WebkitAppearance == 'string') ? 'innerText' : 'innerHTML'] = '* { background-color: white !important; color: #444 !important; } html { filter: invert(100%) grayscale(100%); }'; } ``` And then run it through [a minifier](https://javascript-minifier.com/), `encodeURIComponent`, and re-wrap it in the `javascript:` wrapper: ``` javascript:(function() {var%20meta%3Ddocument.createElement(%22meta%22)%3Bmeta.name%3D%22theme-color%22%2Cmeta.content%3D%22%23000000%22%2Cdocument.getElementsByTagName(%22head%22)%5B0%5D.appendChild(meta)%3Bvar%20tag%3Ddocument.createElement(%22style%22)%3Btag.type%3D%22text%2Fcss%22%2Cdocument.getElementsByTagName(%22head%22)%5B0%5D.appendChild(tag)%2Ctag%5B%22string%22%3D%3Dtypeof%20document.body.style.WebkitAppearance%3F%22innerText%22%3A%22innerHTML%22%5D%3D%22*%20%7B%20background-color%3A%20white%20!important%3B%20color%3A%20%23444%20!important%3B%20%20%7D%20html%20%7B%20filter%3A%20invert(100%25)%20grayscale(100%25)%3B%20%7D%22%3B})(); ```
Oh please don't tell me Gamersgate and Comicsgate are trickling into my line of work as well. :'(
That's likely because, as others have said, that one needs to be first. 
I don't think you're a failure but I do think you're suffering a little from only learning out of books and simply doing guided examples. You're approaching programming like it's puzzle solving, because that's what the books are encouraging you do. Every once and awhile you need to put the book down and create something yourself with your new found knowledge. It's the only way you'll really appreciate that code is organic. It's a script you write that goes line by line to complete a series of tasks in a logical order. You need to break things down and solve things one at a time and not all at once. Don't just run your code and see the result. Understand how it gets there. You need to step through your code and figure out why it's outputting FizzBuzz when it does, and why it will never output it when you want it to. I think if you stepped through the code and ran it line by line you'd see where it's going wrong pretty quickly. 
Oh wow, that's a completely different direction from your previous code. Seems to work, though. Congrats!
I have created things myself. I made an image slider with html, css and javascript. I don't know man. I guess I didn't try long enough and imediately felt bad about it. I learn from books, but I do apply the knowledge when I think of something fun to do. 
Thanks. I appreciate you and everyone else here helping me. I wasn't having a good day and when I had trouble doing fizzbuzz and seeing comments about not being a programmer from not being able to do it, it really affected me and made me feel bad. I guess I have imposter syndrom.
Tl;dr use momen
find a new job.
But what if the smallest number isn't 1? The way I would do it would be use [Array#sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) to sort the array in ascending order, get the first element of the array (which would be the smallest number), then use [Array#filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) to return entries that don't match that smallest number you found. Something like: const removeSmallest = arr =&gt; arr.sort((a,b) =&gt; a &gt; b).filter((e, _, a) =&gt; e !== a[0])
Before you type out one character of code, write your thought process down on paper. Write every thought down. Even the thoughts that are merely .oO(Maybe I should do this.) Keep the ideas that are wrong. It's a learning process and you learn from your mistakes. Print out the state of your variables after each line along with what you expect the answer should be. Is there a moment where your expected output deviates? Try to understand why it deviates. for (let i = 0; i &lt;= 100; i++) { if (i % 5 == 0) { console.log("Fizz"); } else if (i % 3 == 0) { console.log("Buzz"); } else { console.log("FizzBuzz"); } } When trying to understand what is wrong with your program, first try to limit the output so that it is readable. If you know in which case your program is not working, you can set the range that specific value. eg. for (let i = 0; i &lt;= 20; ++i) { if (i % 5 == 0) { console.log("Fizz : " + i); } else if (i % 3 == 0) { console.log("Buzz : " + i); } else { console.log("FizzBuzz : " + i); } } Looking at your program, I want to make one recommendation, learn about [boolean algebra](http://www.pbte.edu.pk/text%20books/dae/math_123/Chapter_11.pdf). 
On the white privilege thing, because presumably the usual defensive rants are coming: Personally I don't like the "privilege" framing of American social justice discussions because I find it obfuscatory. I have worked in Silicon Valley, and what America has is a racial caste system in employment. That caste system is not the fault of J Random Whitedude and we don't have to feel guilty about it. It doesn't rely on every single white individual acting racist, it's a sorting mechanism that operates from a young age. [Here's Neil deGrasse Tyson explaining what it was like for him](https://www.youtube.com/watch?v=inz1sdhsMCU).
I see you've had some good advice on debugging the `if else` approach, an alternate approach is to build a string, `console.log((i % 5 === 0 ? 'Fizz' : '' ) + (i % 3 === 0 ? 'Buzz' : ''))` it's worth exploring as the ternary operator `? :` is very useful 
From what I remember of the challenge someone posted on codewars, 1 was the smallest and you had to remove the 1 while preserving every other number in the array. That's an interesting solution you have.
&gt; aren’t there more white people in the Black Lives Matter movement than black people? [No](https://www.google.com/search?q=black+lives+matter&amp;safe=off&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=0ahUKEwi004fUtfbfAhXCsHEKHXWqAY4Q_AUIDigB&amp;biw=1212&amp;bih=730) African Americans are, however [incarcerated at more than 5 times the rate of whites](https://www.naacp.org/criminal-justice-fact-sheet/), and despite the fact that blacks and whites use drugs at similar rates, blacks are 6 times more likely to be in prison for drug use.
One of the things I miss about using PHP is its extensive built-ins libs for dealing with time.
Your boss is a sadist, an idiot, or both. Run far away. 
If that's the case, even simpler would be: [1,2,3,4,5].filter(e =&gt; e !== 1) I'm not sure if it's part of the challenge, but your code is only removing one of the smallest numbers, not filtering them all out. I'd recommend modifying your code to remove all existing 1s, and then try to modify it to work if the smallest number isn't 1. Your approach is fine. Once you get it, then I'd take a look at the code I posted.. filter is part of functional programming, and his friends map and reduce are also very useful in writing nice clean javascript. 
&gt;Let's break down your code, I reformatted it for legibility: [Man, mobile really sucks sometimes.](https://i.imgur.com/Z5ktknR.png)
If a dev claims they never struggled with simple stuff they’re a lier 
Feel free to trickle out if valuing diversity and respecting people is gonna cramp your style.
You can be a good front end developer without having good grasp on algorithm design. I wouldn’t worry about it. Those kind of tests are more important for CS style competency checks and still not great anyway 
Hahaha. This is exactly what I imagine when people try to sell me serverless functions on the proprietary cloud. 
[removed]
What is your point other than spewing nonsense arguments?
To answer your question, I would literally Copy/Paste code between my text editor and my code environment. E.g., copy code from the source, paste it into the text editor, work on it for awhile, then copy the results back into the source. There's not really much else you can do if the code environment itself is a pain-in-the-ass. I would strongly suggest leaving this horror show. The most valuable metric a company can optimize for is Developer Experience, and your company's DX is absolute shit for seemingly no reason at all. It's not worth the trouble.
Thanks sir/miss. I'd have to look up the challenge to see. Maybe I have it bookmarked, but I think the objective was to remove them. I'll definitely check it out later. My brain feels a little fried right now.
I don't feel guilty working hard to earn my position in life.
I fail all the time and feel down and dumb. But that is the only way to learn. That's just how it is 
Haha. I guess I need to get used to feeling like a complete idiot from time to time. 
Whites and blacks may use drugs at similar rates, but they don't commit crimes at similar rates. 
The next decade is going to suck for you.
This is why, traditionally, Computer Science is largely just majoring in discrete math. Doing a *lot* of logic problems helps reinforce that methodical thinking. There are also good fundamental logic classes under the philosophy and computer engineering disciplines, and I find that all of those tie together, especially for boolean logic-type problems, which a lot of programming ends up being.
You shouldn't and no one is saying you should.
You basically had it, but just forgot to check for multiples of 3 AND 5 first, otherwise it will never print fizzbuzz since it would have been caught by the 3 or 5 condition.
Have you looked at the size of moment? It’s like 58kb minimized. 200kb min with locals. Vue is 58kb for comparison Date Fns is slimmer alternative. 
Oh, there are quite a few people who say I should. That I didn't face hardship or setback because I wasn't a minority. That my life was just handed to me.
Was hoping someone would eventually tell him 
That is squarely in the camp of being excessively concerned with package size, IMO. Use the most standard, powerful, and convenient tool, load in 40 extra kb. Worth it every time imo. 
Don’t kick yourself over it. I can’t do stuff like this sometimes under certain conditions and I have been doing it for a very long time. 
Downvoted for facts. Ah reddit.
What about Asian they are massively over-presented in tech 
It's the progressive way.
Impressive!
White people are a minority at Facebook and are likely being discriminated against https://www.statista.com/statistics/311847/facebook-employee-ethnicity-us/ 
It depends who your users are, but I generally agree. I'll bet there's some assholes out there with mandatory loading Retina images while also stressing about the 58kb from moment... 
Lots of people are. The person in this article is
It sounds like she left without making a ruckus which is good. It sucks she had leave because of a leaked memo, even if I don’t particularly agree with the politics on it. Once again front end programmers prove to be a drama machine. This shit very rarely happens in other languages, compared to JS.
Yes, Asians are positioned higher in America's racial caste hierarchy than African Americans. Well observed.
It sounds like she left without making a ruckus which is good. It sucks she had leave because of a leaked memo, even if I don’t particularly agree with the politics on it. Once again front end programmers prove to be a drama machine. This shit very rarely happens in other languages, compared to JS.
Neil deGrasae Tyson was born in the 50’s. I don’t think he experience is typical of anyone in STEM today. Also he’s a harassing pervert so there’s that. 
And higher than whites socioeconomically 
Facebook does practice [affirmative action](https://www.bloomberg.com/news/articles/2017-01-09/facebook-s-hiring-process-hinders-its-effort-to-create-a-diverse-workforce) in who it interviews, but not in who it hires. At the hiring-decision stage, the incentive is to pick people who went to "good schools" etc. That discriminates against working class candidates in general. In the UK this is a well-known problem in university admissions. In America, a class discrimination problem automatically becomes a racial discrimination problem, because slavery, the defeat of reconstruction, Jim Crow, and modern-day discrimination all conspire to keep black wealth - and hence access to opportunity, good schools etc - low.
What systematic issue? What is Facebook doing to keep minorities or women from working there?
Thanks everyone for the feedback, I feel a lot better now. Was worried I might've been a bit close minded about new tech.
Hello dude who has never posted in /r/javascript before, but does post swastika memes and negative stuff about Jews. What brought you here?
Oh honey, you're a Silicon Valley rockstar making bank and you up and quit because some colleagues ~~harassed~~ disagree with you and or hurt your feelings? Talk about **privilege**!
Use the document.getElementById().style 
Hello guy who posts creepy weird homosexual incest porn and posts aggressively in a communist subreddit. What brought you here?
Where? Show the quote. I notice that you've never posted in /r/javascript before, but do post regularly about the pseudoscience of racial IQ. What brought you here?
Oh cmon dude you know most of the people are left leaning and get riled when they see the buzzwords (diversity and inclusion). These people are far from consistent.
I'm a professional javascript programmer, senior dev of over a decade. Never posted any incest porn though, what a weird thing to say.
This is awesome!! I would love to use Vara.js Loved it! Hats off!
Enterprise or mobile requirements. I’ve had initial page loads that had to be &lt; 200kb for fortune 500 clients. Sure I could probably Ajax the script or do a doc write but not when you have guys in India deploying on ancient Java servers. 
Good thing we have tools for that. Oddly defensive about it I see. I’m also a senior dev. Have about 10 years of professional rails development. Been full time in JS world since 2013. Telling people they don’t belong here is a gross type of gate keeping btw 
Thank you.
Thanks, hopefully I maybe able to create a more realistic one.
Jesus he has a lot of violent posts in communist subreddits 
Here's the challenge and what the person wants people to do. https://www.codewars.com/kata/563cf89eb4747c5fb100001b/train/javascript
What the fuck kind of framework is that? What's it called?
For me tic-tac-toe is more complex than fizzbuzz. Don't worry, you'll get there. I spent about a year from "typing letters in hope that it will work" through "typing letters in hope that it will work as intended" to "hey, boss, I did last assignment, what's next?" My problem was that most articles in internet is garbage, and many useful articles don't explain some "common knowledge" that I was struggling to find. Ask people. It's very important to ask more experienced people about things you don't understand. You can find mentor IRL or just ask us here. You can even write me pm if there is questions, but I'm awful mentor and my time is GMT+3. And now for your current problem. Try http://pythontutor.com/javascript.html#mode=edit as it will show you how your code actually work, so there could be some insights.
Did you even read the article?
lol That's what I don't get. I can make tic-tac-toe, but I struggled with FIzzBuzz. I am working hard to be a good eveloper. I am learning HTML, CSS, JavaScript and Ruby. I am working on a personal project right now which is a website. I even made an image slider. I solved my fizzbuzz problem. Here is my code. Thanks. I will definitely ask here or you again if I am stuck or have questions. You have all been helpful and encouraging. for (let i = 1; i &lt;= 100; i++) { let message = ""; if (i % 3 == 0) { message += "Fizz"; } if (i % 5 == 0) { message += "Buzz"; } console.log(message || i); }
NO, YOU ARE NOT A FAILURE...... YOU ARE A WONDERFUL HUMAN BEING♥️ Don’t let anyone or anything bring you down. 
The word guilt does not appear in the article.
You are absolutely right, I wrote that down in the README ;-) For smaller apps I found no really disadvantage and analyzed the performance with Deb Tools even with over 1000 nodes.
Semantic argument? Don’t be a coward. She’s saying white people shouldn’t have their job because of their race
Thanks for your reply. The focus on size was not the primary goal first but reachable at the end ;-) I don't wanted to create a second react it's already there. And there will be use cases where react is the better solution with it's rendering logic. I focused to build the minimal set of functions to be able to write full SPAs at minimal size at first boot. Please feel free to report cases that are missing for a minimal set :)
She had people on an anonymous message board that has nothing to do with her company, disagree with her that there are "too many white men" on the board. This is not harassment. Also - can you IMAGINE someone saying that there are "too many black women" on a board of directors, even if it were 90% black women? The backlash would be swift and crippling. I'm glad the racist, sexist person left. 
I fucking love it. Thanks
I feel bad but why would you leave? everything isn't perfect, HR is there for a reason.
This is why I asked you for a quote. Then we can discuss the meaning of the quote. Otherwise, this is pointless assertion.
depends on the breadth of coverage your product is to deliver. we can't use things like dayjs, which is a more relevant comparison than a dom api like vue...
&gt; It depends who your users are /thread
Thank you so much for taking your time to look at it and helping. I appreciate it a lot. It works like a charm. Thanks. You are good at it.
Her claiming she was harrassed doesnt make it so. A 3 year old stamping their feet in a supermarket yelling 'you hate me' doesnt mean the mother hates her. A lot of her claims are through being over sensitive. I certainly wouldnt hang out with her.
https://www.youtube.com/watch?v=VwcKwGS7OSQ
[https://www.neptune-software.com/low-code-development-platform-planet-9/](https://www.neptune-software.com/low-code-development-platform-planet-9/) &amp;#x200B;
That's such an SJW strawman, almost nobody really thinks like that. Even the very far left would agree you probably did face hardship and oppression on the basis of class (like most people do), and unless you were born to a rich family with a silver spoon in your mouth, they wouldn't say that your success is unearned. You probably worked very hard and overcame a lot to get where you are... the problem that leftists identify is not that you had it easy, but that systems of power have rigged the system so that most people can work their asses off and do everything right and *still* not be able to get ahead and find success. For somebody who comes from a working-class background (i.e. lower class and most of the middle class), most people who work really hard and do everything right will still end up with little to show for it. It takes a great deal of luck as well. That doesn't invalidate your hard work or mean that you don't deserve success, it just means that you shouldn't assume that just because your own sacrifices worked out relatively well in the end for you that this happens to be the case for everyone, because it usually isn't. And the idea that people of color have it harder is just a statement of reality, but again, it doesn't invalidate anything you did. If you didn't hurt anyone to get where you are in life, you SHOULD be proud of your own success and being able to reach it despite the hardships you faced. The people who ACTUALLY think you should feel guilty for simply *being* a white male are so few and far between that they're really just a caricature, a strawman that doesn't reflect any meaningful portion of society. Of course you shouldn't feel guilty for simply *being* white... nobody chooses the race they're born into, and even if they did, there's nothing inherently bad about white people. You don't even need to feel guilty about the very real fact that white people like us are in a very real position of privilege in society, because that privilege is conferred on us by other people. The idea of feeling guilty for it is totally absurd because the privilege we experience isn't itself a bad thing that should be taken away, it's actually the kind of treatment that **everyone** should be entitled to. So instead of feeling guilty simply for the circumstances of our own births, what people actually *should* feel guilty about is the wilful ignorance and total denial of the existence of our privilege, because by refusing to acknowledge that society further stacks the deck against certain groups of people, we contribute to the perpetuation of so much injustice. You're right that life isn't just magically easy for all white people... our economic system is rigged against most white people too by the very rich, and whites and people of color should recognize our common interests are much more significant than any similarities working whites have with the super rich. It's okay to be white. What's *not* okay is allowing further oppression of other groups of people by turning a blind eye to it all. The ruling class **wants** us to be paranoid about losing our privilege (or, the way they prefer to frame it, having to face discrimination against ourselves) because as long as we're blaming each other for our problems and fighting each other, we're too distracted to fight back against the REAL perpetrators of our social ills... which is **them**. And it's all especially dumb because, again, this kind of privilege is not a zero-sum game; it's not something that needs to be taken away from white people, but rather something we can and ought to simply extend to everyone. The idea that we should feel guilty about merely being white, the idea that a large portion of society actually thinks you should feel guilty about it, and the idea that we have anything to lose by even just acknowledging the systemic oppression of other groups of people are ALL totally false and only serve as deliberate distractions that stop us from being able to identify and address our **real** problems and our **real** enemy.
If you did image slider from scratch or ruby site, you shouldn't be worrying about fizzbuzz much. As I said, it will come eventually. Since you have problems with purely algorithmic challenges, may I suggest you codewars for algorithmic training? There is lots of small katas that you can practice on. But most importantly, after you solve one, you'll see how other solved same thing with voting based on "most clever", "best practices", etc. 
&gt; Please feel free to report cases that are missing for a minimal set :) "DOM diffing or intelligent algorithm" are used to preserve internal DOM state. Web UI library is useless without such feature, you won't be able to create even basic forms.
By the way, `sort((a, b) =&gt; a &gt; b)` is actually undefined behavior. You need to return an integer. More information here: https://stackoverflow.com/questions/24080785/sorting-in-javascript-shouldnt-returning-a-boolean-be-enough-for-a-comparison
That challenge has 1 as the lowest in all of the examples, but you're making an assumption that isn't explicitly called out and is going to leave you with less generic and this less reusable code.
Probably to do with them committing more crimes I suspect ....
Glad you like it ! I do it for you, the people.
\`dayjs\` matches the \`moment\` api to a large extent and is 2KB
HR is there for the company, never for the employee.
You can find whatever evidence in this that you like. One might argue that rage quitting over 'harassment' and obsessing over gender and race is endemic among a certain type of individual.
&gt;Facebook's diversity has been improving, but the company is still largely white and male. CNBC is garbage
Classes were always present thanks to prototype. It's just a fancier way to write. 
I would suggest you get started with jquery. It is fairly easy if you know the basics of javascript. You can use the following to get your work done: `$('#dropdownLinkID').click(function(){` `$('body').css('background-image','url(imageFile.jpg)');` `}`
JavaScript, before React era, was used to make HTML smarter. Now, as a full blown programming language classes are used more. I myself still don't understand why people want types.
It's also immutable, which in my experience solves so many problems. Unfortunately, this means it can't be a drop-in replacement, but then any true drop-in replacement would probably end up being almost the same size as moment just by dint of needing to replicate all the exact corner cases and less-used features...
Google Image Search is not a good source of evidence to your “no” answer, since you can find images with more white people than black people depending on the specific march or photo taken, to say nothing of the fact that being in a movement doesn’t require one to show up to marches at all, but could involve things like donated legal work and such. No, I heard that there were more white supporters of black lives matter than black, which I think has to do with relative populations. For example, if just 30% of white Americans supported Black Lives Matter, then they would represent about 18% of the population, compared to 100% of black Americans accounting for only 13.5% of the population. Of course, not all black Americans support the Black Lives Matter movement. And according to this survey, white Americans appear to support the movement at about a 40% rate, not 30%. No idea how accurate it is, but it could be inaccurate by more than 10% and still show more support by white Americans. http://www.pewresearch.org/fact-tank/2016/07/08/how-americans-view-the-black-lives-matter-movement/ That’s why I found the statement so strange. Of course you would expect more posters about a movement than people said movement wants to help. That’s how political posters work.
In summary, fuck dates amirite?!
In what way exactly? Please help me understand.
In the time it took you to write this, I implemented a feature for my company that will increase revenue 2 - 4% per month through cost savings. That's five figures per month. But keep talking.
Ok, but where is your statistical breakdown of wall poster rates to racial representation? That is what I am talking about.
With no official support for timezones and a [3 year old issue](https://github.com/date-fns/date-fns/issues/180) stating as much.
Oh ok, you were making some sort of obtuse nerd point. That's more than reasonable for a programming forum. I assumed you were one of the many nazis brigading the thread, and for that I apologise. To be a pedant myself: being in a movement is different from supporting it in a poll.
Hello Reddit! I’ve been looking for a great journaling app for quite a while and never found what I was looking for. Many apps were intransparent about how they store their data, bloated with features, or just not very nice to use or look at. That’s why I created Mini Diary. &amp;#x200B; **Features:** * Beautiful and clean design * Light and dark themes * Private and secure thanks to local encryption * Import from other journal apps * Export to various file formats The app is built using Electron and React and is completely free and open source.
Ah you're right, fixed
Your code won't work if the list of ratings are [2,3,4,5]. The description says to remove the lowest, which is 2. But you're only removing 1s. Try to program to solve the problem, not the exact test cases given.
I clicked at that ”Blind” app (great name in this context BTW) and guess what I got at the top of the posts? A whining about ”PC culture” and pointing to Alpert with gender English honorific (Mrs) in inverted commas. Yeah… definitely not a problem here…
Upvoted because the title made me laugh 
Neither dayjs or date-fns support timezones.
Maybe I am confused. It says to remove to smallest value which is 1. If there are multiple elements with the same value being 1, remove the one at the lowest index. That's what I wrote does. 
I can't are myself whole heartly agreeing with this statement. Prototypical inheritance aren't really classes, despite the fact that ES6 made some semantic wrapper around it. That being said people seem to be investing in mimicking class like functionality, judging from proposals for TC39. And I'm not quite convinced that there is definative functional advantage to it. Especially when in last few decades we learned that inheritance is generally not a clean practice and composition should be preferable, even in strict OO languages like Java.
It's possible and I will add examples as soon as possible after improving the docs. The missing part in the docs is actually the event handling of components. So your comments are quite understandable at the moment.
In an industry dominated by white men in the USA, I'm not sure how the word diversity is a dog whistle for mixing it up, it's just a given.
Uhm I think I didn't get the memo. Why is inheritance in oop bad now?
Gatekeeping does have its place.
I think anybody that has had to deal with timezones in JS has had the opportunity to really appreciate the stellar work Moment has brought to the table. Date-fns is awesome too.
&gt; why Javascript is moving to classes rather than structs? It's not. Nothing is changing. The `class` keyword is not a fundamental change to the language. Javascript has always been strongly OO oriented, but OO is not *opposed* to functional paradigms, they're strongly complimentary. &gt; Recently I've been learning Rust Rust is a great new language, but it's a very different language than Javascript, and it's frankly absurd to suggest you could just tack on Rust-like semantics to JS at this point. &gt; Anyhow, why you think classes are the big thing in Javascript? Because JS was designed around inheritance in 1995. The `class` keyword is just some syntax sugar to make things slightly more concise, but it's not a fundamental change. &gt; Is it's Typescripts influence No, Typescript copied it from JS. &gt; I feel that I miss typed objects way more than classes, especially when defining shapes in React. Use Typescript then.
&gt; Prototypical inheritance aren't really classes No. It's *exactly* classes. A class is a mechanism to define how an object should look (a "prototype" of the object, as it were...), which you can then stamp out duplicates of. JS differs from some languages (such as Java) in some details, but it's very similar to how many other languages work, such as Python. &gt; Especially when in last few decades we learned that inheritance is generally not a clean practice and composition should be preferable No we haven't. Yes, composition should be *preferred*, and inheritence *can be harmful* if abused, but that doesn't mean one is always good and the other is always bad. And even if you're not really using inheritence, you can still benefit from classes.
Okay thanks :) yeah for my specific usecase the order doesnt matter. I'm making an attendance app and the only data that changes is the information who was present on a specific event. ``` { personId, eventId, state: "present", changeDate: new Date() } ``` I'll send a changedate as well so the server can easily just drop a change with the changedate is older than the current stored data. 
Oh ok, you're just a fucking cunt.
58KB is not insignificant at all. Mobile connections, if I remember correctly, take on average five seconds to load 1MB. 50KB would take 250ms to load, assuming it's not cached. That's a long time when you consider users start to lose interest in sites after three seconds of loading. Bearing in mind that libraries such as Moment.js have a fairly limited use case, I personally don't find the convenience tradeoff worth it every time. At times, yes, but not every time. This industry is heavily about knowing when to use what.
It just says to remove the smallest value, it doesn't define the smallest value as 1.
Don't forget hard-working and successful.
Ok i understood is a local storage problem. So in case i want to create a simple javascript rock/scissor/paper game and keep tracking of the score, how can i do? There is no way if i want play through the chrome console?
that's.. weirdly brilliant..
moment is 4000 lines of code and the locales are 9500 lines of code. Our library and application used moment and it duplicated, making it twice as big. luckily i was able to resolve it with webpack ignore plugin for locales and resolve.alias for moment library. The worst part? webpack plugins use moment as an example on how to use them.
I think she is a 'Miss' anyway ..... 
While I agree. Moment needs to be parsed as well. Not just downloaded. Usually before anything even shows up. Images on the other hand, will be loaded asynchronously by the browser. 
You just make yourself look like a closet racist arguing in bad faith the entire time because this has literally nothing to do with anything I said. I even acknowledged that white people don't magically have easy lives and that it's okay to be proud of your own successz.
The _instant_ you start thinking, "I can do date/time manipulation better," you're wrong. Dates and time and time zones are hard. No one gets it right. Ever. Our best bet is to use the standard that's had lots of eyes on it and lots of bugs already fixed. Shit, even something as simple as "add an hour to this timestamp" has pitfalls most people won't think about. 
Isn’t ”miss” like XIX century, kind Sir?
You just make yourself look like a closet racist arguing in bad faith the entire time because this has literally nothing to do with anything I said. I even pointed out that white people don't magically have easy lives either and that it's okay to be proud of your own success. But I guess we all have different ideas of success. Doing something constructive for the world in order to put more nutritious food on the table is fine, but the specific thing you chose to brag about was making more m
Doing it through filter is redundant. If you know the smallest is the first element, why bother iterating through the whole array? Either do Array.shift() or return [smallest, ...newArray] = array.sort(...)
Who knows these days ... at least for me its easy .... I was born a 'Mr' and I will be a 'Mr' until the day I die. No swapsies for me .... 
Uh, no. Nazi means “National Socialist German Workers' Party”. I am not a socialist, nor a German, nor would I be part of any Worker’s Party. I’m only a nationalist in the sense that I believe that nations exist and should be protected from forces that would destroy them, like colonialism. Of course it is. It now comes down to “who decides who is in the BLM movement”? If you want to define it as “only black people can be in the BLM movement, then yeah, there are move black people in it. However, we have apples to apples comparisons between white and black “support” of the movement, so it is reasonable to correlate them to whatever “being in the movement” means. And by those numbers, white people would outnumber black people due to relative population rates. It’s not obtuse. It’s directly related to one of the quotes in the article that is, as I hope I have demonstrated, a mathematically invalid criticism.
What’s constant through ages, that it’s easy when you’re born in one of these ”easy groups”.
To be fair the person in question was born into the same easy group as me ..... life is only complicated if you make it that way ... 
Increase the size of your other files so that moment feels smaller by comparison.
Java: The Complete Reference, 11th Edition \-- Book Description Publisher’s Note:Products purchased from Third Party sellers are not guaranteed by the publisher for quality, authenticity, or access to any online entitlements included with the product. \-- Coverage includes: \--- \-Data types, variables, arrays, and operators \-Control statements \-Classes, objects, and methods \-Method overloading and overriding \-Inheritance \-Local variable type inference \-Interfaces and packages \-Exception handling \-Multithreaded programming \-Enumerations, autoboxing, and annotations \-The I/O classes \-Generics \-Lambda expressions \-Modules \-String handling \-The Collections Framework \-Networking \-Event handling \-AWT \-Swing \-The Concurrent API \- Stream API \-Regular expressions \-JavaBeans \-Servlets \-Much, much more \-- Visit website to read more, \-- [http://itraloi.com/downloads/java-the-complete-reference-11th-edition-2/](http://itraloi.com/downloads/java-the-complete-reference-11th-edition-2/) \--
I have a question though, isn't 8% transgender an over representation of transgender people? Why do we think that 80% (or so, I don't know) white people is not OK in a company but 8% trans is? 
What the fuck does that even do? It's one of those websites that flood you with information which does not actually convey much meaning. Enterprise at it's best...
LOL no! This year I'll complete my CS degree but I'm still don't exact conditions for binary search.
Oh but it gets better. There’s absolutely NO git version control. They made their own from scratch that’s compatible with nothing.
Are there actually any benefits in using that? I have zero enterprise or sap experience so I couldn’t possibly know. 
It's incredible to me how much this idea of keeping tally of how many black and white faces and male and female genitals is somehow 'progressive'. Back in my day - and I'm only in my 30s - the idea I was brought up with was that you simply treated people as individuals. That seems to have gone out of the window now. If you dare question whether someone's skin colour or sex organs should be any kind of basis for employment or position then you're now the bad guy. While people like this who see a room of individuals as a collection of labels and check boxes are the good guys. It's utterly baffling and utterly backwards.
Saying "we have too many people of some race/sex in the company" - totally fine. Hearing "white privilege doesn't exist", "you should be fired for being aggressive towards your colleagues" - HARASSMENT. Typical hypocritical trashy SWJs.
The two benefits I see are allowing teams to cooperate and communicate on a single project fairly well and it deploys and listens on port 80 instantly on Ubuntu or any OS. The SAPUI5 HTML5 library is pretty nice, but this whole “less code” design philosophy enforced by planet 9 gets in the way, nearly all GUI lists appear to be incomplete and can’t bind to arrays.
yup, thanks.
You created a monster! I think it's super funny but I wouldn't ever want to see that in production. 😮 Please think about your environment and keep the URL bar clean. 🌏 
Easy way... Get scores e.g. localStorage.winCount = localStorage.winCount || 0; localStorage.looseCount = localStorage.looseCount || 0; Change scores e.g. localStorage.winCount++; localStorage.looseCount++; Reset scores e.g. localStorage.winCount = 0; localStorage.looseCount = 0; 
Separate tools needed: [https://github.com/FullHuman/purgecss](https://github.com/FullHuman/purgecss) [https://github.com/rollup/rollup](https://github.com/rollup/rollup)
You just make yourself look like a closet racist arguing in bad faith the entire time because this has literally nothing to do with anything I said. I even pointed out that white people don't magically have easy lives either and that it's okay to be proud of your own success. But I guess we all have different ideas of success. Doing something constructive for the world in order to put more nutritious food on the table is fine, but the specific thing you chose to brag about was about making more money for your boss – imagine being that much of a cuck? And instead of putting nutritious food on the table, your diet consists entirely of animal products (seriously? enjoy the coming colon cancer, btw) and boot polish. Speaking of cancer, I should have probably checked your history before replying to you at all. No use trying to talk to someone so openly racist, anti-semitic, misogynistic, trans- and homophobic, and just straight up fascist in good faith. What a gem of a human being.
I’d leave. Immediately.
I redesigned google's landing page: https://github.com/jescowuester/google-redesign
There are a couple of methods. e.g. let bgImage = "url(https://site.com/image.jpg)"; document.getElementById("dropDownMenu").style.backgroundImage = bgImage; //or... document.querySelector("#dropDownMenu").style.backgroundImage = bgImage; //or... document.querySelector("#buttonDropDown .dropDownMenu").style.backgroundImage = bgImage; 
What I think happens (i didn't test it out) is that the new page loads before the old connection times out. This will overwrite the old websocket and when `ws.on('close', () =&gt; ... )` gets called it deletes the new socket. You can try `connections.push(ws);` instead of `connections[id] = ws;` This will add the websocket to the end of the array instead of overwriting the last websocket. The thing you have to be careful still is how you delete the old connection on `ws.on('close'`
That’s a force directed graph. It depends on what your data looks like more than what backend you’re using. 
About this: const dict: Record&lt;string, number&gt; = {}; dict.a = 1; dict.b = 'a'; // ERROR: "a" is not assignable to type number isn't it much more clear to do ``` const dist: { [book_id: string]: number | string; } = {}; ``` ?
Well you can have JS in a DOM-less environment like node.
I'd learn them together. DOM isn't another language, it's really only one way to use JavaScript in conjunction with HTML/CSS. You cannot really do much with the DOM if you don't know JavaScript.
I do talk up how much money I make my boss. Since I'm my boss. Times 3 companies. Colon cancer and all chronic disease is caused by near exclusively by carbs. My colon is in better health than yours.
Thanks! Wish I could do more, but I’m totally out of free time. The name was a miracle. I don’t think I realised that it spells out “(i)nside” at first. Worked out nicely :D
You thought you made it simpler, but the code you've changed is actually an important part of the ID management. `connectionId` is the global connection ID variable. `id` is the session connection ID. When a client connects, a new instance of an `id` variable is created and initialized with `connectionId` for that connection session. The `id` variable is kept alive for the whole code block of the `connection` event handler. This means that the `close` handler uses that `id` variable, and use it to delete the connection when the client closed its connection. If you eliminate `id` and replaces it with `connectionId`, when a client closed its connection, the server will use the ID which was already incremented, and not the ID at the time the client connects. The result is that the server deletes a non existing connection when a client closed its connection. This is fine, but the closed connection is still in the array, so the interval timer choke when trying to send data to a closed connection.
You'll get it in a day. I highly recommend learning it before jquery!! Just know how to select elements and change them, have a look at how to find items (queryselector, selectbyclassname), how to add/remove/toggle classes, what user events there are (onclick etc). In production, it's unlikely that you will work with pure javascript dom manipulation as you're probably gonna use a framework like react that interacts with the dom in different ways or something like jquery, that also makes your dom manipulations more secure against stuff like XSS.
Why not both? Might as well add html and css. I found the hour long Traversky crash courses useful for getting a good introduction.
We use moment with our React app that has jquery, bootstrap, reactstrap and a few other libraries. Our load time is under a second on most devices, and it loads on 3G pretty quick. I think 58kb is a non issue when most phones have 4-10 GB of ram and mobile networks supply anywhere from 5 MBps to 40 MBps speeds. 
Really sad to hear that she's left the React project. Sad because I'm a massive fan of React and use it prolifically; sad because because she was actively involved in the community and helped people on Stackoverflow and in an array of other forums and did not lock herself up in an ivory tower, but most of all I'm sad that, in 2019, people will still bully and harass others because of who they are. I understand that statements such as "white middle aged males, damn tech bros, need to learn how to behave and give way to \[insert marginalised group of your choice\]" can be perceived as provocative and even offensive; nobody wants to be lumped into a group and criticised on the basis of who they are, in the same way people of color, for instance, don't want to be told they can't be good engineers and should focus on, I don't know, writing music. Nor do I think that such statements are constructive; if you truly want to achieve change, you engage in discussion, you don't make blanket statements. I'm a vegetarian and I'm rather passionate about animal rights, but I don't think I'm going to convince anyone to either cut down on their meat consumption or drop it entirely by, say, calling them murderers and contributors to to environmental degradation. No, I try to highlight the positive aspects of a meat free lifestyle, and make it attractive, and I always try to listen and be sensitive to the views of the person I'm having the discussion with. By not adopting a confrontational approach to a problem or social issue, you are much more likely to bring about the change you want to see. &amp;#x200B; Having said that, we need to take context into account. The fact of the matter is that people of color, the LGBTQ community and other marginalised groups have lived under horrible duress and abuse for no other reason than who they are. To think, for example, that it was only in 1967 it became legal to engage in homosexual relationshipsin the UK is shocking. That's not five centruies ago; a lot of people that lived back then are still around today, and working, even. Needless to say, it is natural for members of these marginalised communities to feel a sense of anger, rage even, at the injustices they have been subjected to in the past, and as Sophie's example comes to show, even today. This is why - even if I can feel the adrenaline surging through my veins when somebody says that I'm priviliged for the simple reason that I'm white, straight and male without knowing anything about me or the challenges I have faced in my life - I won't take offense or lash out if somebody from a marginalised group rages at my demographic or tells me personally to watch my privilege (which has actually happened on a few occasions). I understand their pain, and I understand their anger, and while it might not be constructive, it does in no way justify subjecting them to abuse. &amp;#x200B; If you get angry hearing people say that you are priviliged, ask yourself why you get angry. Do you feel threatened? And if you do, what does that say about you? How's your confidence doing? Engage in constructive discussions, explain to your counterpart that it hurts when they make such general statements, and then talk about the actual issues at hand. &amp;#x200B; I have the feeling I'm gonna get lambasted for writing this from both sides of the debate, which wouldn't surprise me at all; nuance seems to be something that is seriously lacking in todays political and discursive landscape, and I mourn that fact. &amp;#x200B; Having said that, best of luck to Sophie and thanks for your(just in case she reads this, LOL) work on React and for being an integral part of the community.
Google's documentation is pretty good. I already did the same with a gallery and it was easy to follow
Maps are niche data structures for when you really need to store/add/delete a lot of data. You can't initialize a map with object literal and can't access elements with [ ] or . syntax. Always use object unless there's a special need for map meaning you have to use object as a key or have to perform some heavy calculations. Even then I'm not sure performance boost is that significant. Generally, you don't need to care about even 10x performance boost of some actions over others, because they aren't usually the bottleneck anyway. (Example: for(let i = 0; i &lt; arr.length; ;i++) is much faster than for..in which in turn is faster than for..of which in turn is still faster than forEach. Should you care? No, use whatever is most convenient). Now, about method of array called map. It's an entirely different concept that comes from mathematics. https://en.wikipedia.org/wiki/Functor Name signifies a transformation of set to another set and it's present in most languages. 
I've been scratching my head for weeks trying to make some decent abstractions between Vue.js &amp; Google Maps V3 API. There's a tons of different ways to do it. But in order to make it decently nice, you need Vuex and eventEmitter For me it has been a great project for events (y) Otherwise, perhaps roll your own micro-library just to get your head around it See these great examples [https://github.com/kbrsh/voke](https://github.com/kbrsh/voke) [https://github.com/BrodaNoel/duix](https://github.com/BrodaNoel/duix) &amp;#x200B;
This might help you: [https://eloquentjavascript.net/06\_object.html#h\_gAcc11EHzV](https://eloquentjavascript.net/06_object.html#h_gAcc11EHzV) 
Wow, why did I not think about this before? This made my day man
Wow. I bet there are more trannies than actual girls at facebook HQ :PpPppP
Just lazy load the moment library If you don’t need it in the first home page...who cares how big it is
Have you tried anything yet or do you just want someone to do it all for you?? All you need to do in spy is add the relevant member functions and state to the function it returns. Keep track of what's been called with an object.
* “Should I use Maps instead of Objects? if not, when should I use Maps?” * In JavaScript, objects are used in two roles: As records and as dictionaries from strings to arbitrary values. Since ES6, it is better to use Maps for the latter. * “map keys can be any type of objects, even function -&gt; is that something useful outside of very niche cases?” * Usually no, because only primitive values are compared by value (=their “contents”). Objects, incl. functions, are compared by identity. * There is one exception, though: Using WeakMaps to attach data to objects. http://exploringjs.com/es6/ch_maps-sets.html#sec_weakmap * “.map() returns... an array?? Why? Is that just confusing naming? * Yes, it is confusing. `Map` (noun, the class) vs. `.map()` (verb, the Array method).
You could make some really simple game-type thing where little circles (single celled organisms?) move around the screen interacting with eachother - they could communicate with a manager or with eachother using events, for example when they've collided, if they have collided if they want to reproduce with or attack the circle, something like that.
A few more clarifications: * “everything is javascript is an object” * Not true. There are primitive values and there are objects. http://exploringjs.com/impatient-js/ch_values.html#primitive-values-versus-objects * “A map is an object that has not only keys but also its own indexes.” * A Map is an object that manages (key,value) mappings in an internal data structure that is accessible methods such as `.get()` and `.set()`.
Exactly. It can be confusing since all the examples in the challenge use the same range of numbers, but consider a different scenario where ratings are from 1-100 and the lowest might be 20. For instance, the array below could be a valid input for your function, but would return the same array without change. let movieRatings = [87, 24, 53, 33, 100, 20]; So while your function works perfectly well for the cases you tested for, it creates limits for itself by looking for a specific number as opposed to being more dynamic. What the commenters above me are getting at is rather than hard coding your solution to only remove 1's, it's better to anticipate a variety of inputs and look to accommodate them all. So possible solutions are to sort the array first and split at index 0, or iterate through the array and keep track of the lowest value, etc.. It's very common for these challenges to be vague and ambiguous, and in these cases all the more important to ask clarifying questions (if in an interview) and when in doubt, make no assumptions and seek a more universal algorithm. Once you get the hang of it, you'll start to spot these curveballs much sooner. Like u/barrtender said, coding for a more general solution that can handle these different scenarios is what makes good, reusable code.
I have never understood why you would Implement a web worker for this kind of use case. If you where lucky you have created a 2 layer access in your javascript that wrap all Http calls and then you must only decide to create a buffer strategy for the calls you want to enqueue when the user went offline. A webworker ist just not the right place to do this or at least not the best as its completly seperated from your code. If you want to cache js files or other content that are requested by the browser itself, then you might go well with a webworker because you cannot intercept anything before your code is loaded. But as soon as you code is there you can just take care of all caching you want without going with a webworker. 
Ah, right. I forgot that the scientific consensus on complex (((carbs))) is just a huge plot to poison us all. And yes, I'm aware of the efforts of the sugar industry funding bullshit research to deflect blame for certain health problems on to fat consumption, but that's still a very far cry from the nonsense that *"all chronic disease is caused by near exclusively by carbs"* lmao. It definitely goes to show that you don't need any meaningful degree scientific literacy to be able to own a business. I can only hope many more people like you adopt a totally plant-free diet.
I've updated my question.
I don’t feel this stuff really matters. Look. I’ve done this shit for a while now. I’ve worked on all shapes of project, all sizes of company. I’ve been part of scrum teams in megacorps with hundreds of developers, I’ve worked in little kanban groups at startups, I’ve even worked as a solo developer in companies just being born. And in that time I’ve seen so many projects fail, for so many reasons. Cashflow. Long sales cycles. Product market fit. Bad marketing. Better competitors. Inchorent pricing. Interal politics. Legal issues. Wring team. Investor conflict. Pretty much anything, except I’ve never seen a real commercial project fail because of the wrong fucking module export convention. This is worse than the most absurd code microoptimisation, and - permit to me salty, because I feel like getting my knickers in a twist and haven’t had a good rant in a while - if you are spending your time on this rather than actual revenue generating work you are probably wasting your employer’s money. Get the fuck out of here.
ITT: * People not reading the article / what she said * Jumping to conclusions based on little knowledge and one piece of information * Comments being gilded for the exact reason she left the company Keep it classy /r/javascript 
This is great, thanks. 
I was thinking this might sync the items if my app is maybe not in the forderground. I don't necessarily want to require the clients to reopen the app when they are back online. I'm not sure though if the web worker even does this kind of stuff. 
You are correct. I'll "excuse him" though, since his pedanticness and attention to detail is what led him to create ESLint, a project which has undoubtedly boosted the productivity of most of us in this ecosystem.
&gt; “everything is javascript is an object” I didn't mean that one literally, just that most things like classes, functions etc.. As far as I understand it most of js is built on existing, original data structures and in the end are just syntactic sugar, for example, classes are just a better way to write inheritance. I was wondering how true that is for Maps, are they just objects with a couple of new methods built in or are they an actually new data structure?
in Evaluation, always try to catch the most conditions first, and after that go to fewer conditions until you arrive at the default case as none of the evaluations resolved. So: if ( numberDivisableBy5(number) &amp;&amp; numberDivisableBy3(number) ) { return 'fizzbuzz'; } else if ( numberDivisableBy5(number) ) { return 'fizz'; } else if ( numberDivisableBy3(number) ) { return 'buzz'; } else { return number; } 
&gt;The instant you start thinking, "I can do date/time manipulation better," you're wrong. [This](https://www.youtube.com/watch?v=-5wpm-gesOY) video is a great overview of how difficult dealing with time zones really is.
You won't get a serious answer.
Hi, I just got a free PDF to to image converter at visit this site: [**https://www.pdfchamp.com/pdf-to-image.html**](https://www.pdfchamp.com/pdf-to-image.html)
I don’t understand, is she arguing she isn’t in a privileged position? Having a position of privilege and the opinions she gave on white privilege aren’t really the same thing.
I am partially agreeing with you, but i think i can defend "cognitive load" as an impactful thing for my use case. I work in custom development ageny, where we develop (mainly react now) internal (so no eshops) web applications. No boxed solutions, every project is custom tailored to customer needs. In this enviroment, we can not easy go back, or take to, to fix things, or repay the technical debt. We are extremely limited in time/funds. So extreme code, structure and logic clarity is very important for us. It enables us to develop better applications in given time/budget and hence better support customer's business. Which means revenue for him. We have invested heaviny in thinking about stuff like cognitive overhead and i can say, it pays off. Very.
The systemic issue of tech bro culture. Most programmers in Silicon Valley are white guys. White guys tend to hire more white guys. Seems like an issue to me. 
White men are not over represented at Facebook. White people are only 45% of the staff. Per capita they are significantly UNDERREPRESENTED 
So with your current setup, the way you'd compare arguments is by iterating over the list in a for loop looking for a match. But I think it might be nicer if you use a map or a set to do the lookup, as the lookup can be done in one step. [Here's a fiddle showing what I mean.](https://jsfiddle.net/omgtoblerone/u37smrLh/). I've commented and explained as I go. One question: What is the `returned` spy function supposed to do??
`npm i jasmine` 
&gt; Not true. There are primitive values ( &gt; undefined &gt; , &gt; null &gt; , booleans, numbers, strings, symbols) and there are objects (all other values). Pedantic: Numbers, strings, etc _are_ objects. Strings have `methods` ( _trim, split, etc_ ) and so do numbers and boolean ( if converted ) ``` Number(1).constructor // some function Boolean(true).constructor // some function ```
I have a feeling you’re a European who’s never lived in America and actually knows nothing about race relations here.
Everything matters.
Thanks for the reply. Being careful about how you delete the old connection on \`ws.on('close')\` is really stumping me.
Yup that is a solution that’ll work
The syntax for private fields are ugly, ugly, ugly
Does anyone even use jQuery in 2019?
&gt; Numbers, strings, etc are objects There are Number, String, etc. objects, then there are number, string, etc. primitives. There's a distinction between the two. And while primitives are more commonly used, they can have object-like behavior thanks to [auto-boxing](https://en.wikipedia.org/wiki/Object_type_(object-oriented_programming)#Autoboxing), where they are temporarily wrapped by their respective objects to allow them access to those objects' methods.
DOM is a simple concept, it isn’t very complex and aids you in imagining how the browser renders the page. I understood the basics of DOM/HTML/CSS before diving into JS and it helped me predict JS behaviour when it comes to manipulating elements more easily. So I’d suggest familiarising yourself with the concept and then dive deeper when needed. But it’s good knowledge to have overall while learning JS.
 `it("executes what does a function", () =&gt; {` `const testResult = spyTest('foo');` `assert.equal(testResult, 'foo');` `});`
use inline CSS or just regular CSS
One of my very first projects was building an online resume for myself with simple animations, and the more I dived into JS the more I added to the resume. It was a beneficial learning project+ was able to deploy it and show it off to employers as soon as I was done. Having an online presence certainly gave me an edge. There is lots of online inspiration, so you can search for that. It’s a simple, scalable, and beneficial project.
I can highly recommand you the video [FizzBuzz: One Simple Interview Question](https://www.youtube.com/watch?v=QPZ0pIK_wsc) from Tom Scott. Its great :-)
They are objects in the same sense that other types in JavaScript are objects, but they also have unique characteristics about them that makes them more than just an Object object with new methods. They have an internal state inaccessible to user code and functionality built in to the runtime (e.g. the handling of the mapping).
well.. from an employment POV this might be true, but software development is NOT just a business model. some people like to develop for themselves, and some like to improve their style just for their own sakes. Business is always full of compromises, and nobody expects (or at least should expect) to be able to always code at the highest standards in a business context, because ofc, time is money and all that. That doesn't mean though that we can't or shouldn't explore best practices, if only on our own time.
Find a new job is easy. The challenge is you as developer optimize the process experience. Show the value of the changes to your coworkers and make things better for everyone. Be that guy and you can work in any place with any tech and any team! &amp;#x200B; Probaly someone in the past thinked that using those tech is good for everyone.
1kb of js is way more expensive than 1kb of an image to download, parse, compile and exec on the browser. JS bundle sizes are one of the biggest web performance problems today
This doesn't even take into account the parse and compile time which is really the issue with bundle sizes
The idea is [composition over inheritance](https://en.wikipedia.org/wiki/Composition_over_inheritance). It's been around for a while and basically suggests that managing inheritance hierarchies is complicated and error-prone whereas with composition you have clearer representations for functionality that are easier to reuse.
Thank you for the reply. I think you explained things fairly well, but I'm still struggling so hard.
it boils down to this: "default" is magic. there's stuff going on that's not obvious to the viewer. and while magic can be mighty cool, it's always better for readability and long term support to avoid magic in favor of being explicit. So, I support this opinion, and prefer not to use default either. 
I agree with this wholeheartedly. Named exports are easier to trace through the code, the tooling is better, the syntax is clearer. This is correct IMO.
You are both right and wrong. Sure, there are other concerns, global warming, the state of the US government, but keeping your code clean and tidy is never a waste of time if you plan to continue using it going forward. This is the code equivalent of picking your dirty pants up off the floor. Sure it might seem trivial, but in the medium term it matters to the team.
Inheritance is not bad at all, but composition can make more easy to scale your application. When you want to make relation between objects to abstract better your program, inheritance can be tricky and composition is more natural way to think. &amp;#x200B; I finded a good explanation at wikipedia [https://en.wikipedia.org/wiki/Composition\_over\_inheritance](https://en.wikipedia.org/wiki/Composition_over_inheritance)
I'll give it a look, thanks!
Thank you a lot!
Turns out there are rational people on this thread. Good post. 
At least a new framework.
I added more documentation and examples :)
Thanks! 
Sure, I should've phrased "every time" differently. I think for most use cases, reaching for the lib when working with timezones is the right idea. &amp;#x200B; Also, you've prompted my brain into a helpful realization! I woke up this morning with the thought that I still have caching completely disabled for my bundle from when it was in full time development. This app is only used internally by our team, but it's still a 5MB bundle and I can probably save them that a whole bunch of times by re-enabling caching and making sure it's versioned correctly. Particularly our South African trainer who always has internet issues haha.
Wow this is cool! nice work!
ES3 works in every browser and companies made a lot of money with ES3 only. Let's all just use ES3 and move on with our lives. \-- Jokes aside, I get it. Revenue is important and I share the view - I've seen my share of companies failing for many things and never because of a module export. But I've also seen a company fail for slow development though. Time to market and fast iteration while "searching" for that product market fit are important and you don't usually go through those stages with unlimited resources - cognitive overhead can be a problem in that situation and consistency does help with that. Conventions do make our life easier and development faster otherwise why would cake, rails, django, etc be so widely adopted ? Then there's the ES3 joke. Not everyone is here to make money for a company. Some people work solely on pushing technology forward. Most still get paid, some by donations, others by god-knows-what, but generally their goal is totally different. I know that we live in the "everything is a market" times, but I like to believe there's still a couple of radicals out there who don't see it like that and that are able to push things forward just for the sake of it. And that's what I think this article is about. He's just sharing the experience he had while working on a specific thing and trying to come up with some insights on it. From there he can either be a lucky fella and bring the field forward because he nailed it or start a discussion around it (like this one). Either way, it matters. It is an insight and I bet someone who read it will think about it when doing a default export of a freaking float in a lib that defines Pi. Now, credit where credit's due - it was a nice rant
Thank you.
Is there any documentation on exactly HOW expensive parsing code is and how this affects actual devices that we'd see in real life? I'm certainly familiar with slow frameworks that bog down CPU's doing work (*cough* old AngularJs *cough*), and slow frameworks that bog down load time downloading MBs of code (for example, a quite decent browser on a device in Africa that might have an abysmally slow internet connection). But this is the first time I've heard someone suggest that the actual parsing and loading of a single MB of JS might exact a *notable* toll (note that obviously it exacts a toll, I'm not debating that, but if the toll 0.01ms per 1Kb of JS it may not matter, at least not for 58Kb).
You can strip out locales from moment, as necessary. It is a one-stop shop for working with time in JS
Besides Vue support my favorite is that inline decorators now stay inline (which is also related to my vue projects :D)