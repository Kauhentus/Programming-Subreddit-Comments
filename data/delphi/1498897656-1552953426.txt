Ill check that out because I think I searched for a property like that but didnt find it.
There should be convert functions. Like floattostr() Alternatively assign an onbeforeprint method to the textbox. It allows you to use the dataset.fieldbyname('').asstring syntax in the code. You might also be missing [ and ] around your code depending on wether you edit in code or on page 1.
If it doesn't show up in intellisense write it out and assign a value anyways and see what the compiler says. Depending on context some properties and functions won't show up. For example the dataset.fieldbyname method when you assemble a string variable. Since it returns a TField it makes no sense to pop up in a string. You can still use the method.
I ment I searched for it in the IDE's panel here it says its properties and events.
No not all controls have to be on the palette. It's ok to just derive from a control and treat it like an object. (call constructor and assign a parent). Everytime you create a form you actually create a new Component since it derives from TForm, yet your form is nowhere on the palette. I'd still advise to use published Properties since it gives you tons of rtti-functionality should you ever need it. Rtti is delphis reflect api. it also adds the getter and setter functionality. Component development is simple but tedious. The easiest way is to derive from a container like panel or groupbox or whatever and create whatever you need in the constructor. That way you can simply assign predetermined event handlers to each component at design time if you only want something rigid that is. Otherwise you need to familiarize yourself with windows messages. I am not familiar with drawing the controls but i believe that wm_paint is the message that gets sent to a handle when it is time to draw it, thats where you will intercept. You might want to look at custom drawing methods on the internet since those provide good insight into what has to be done to do it properly. You will find them for listview, grids etc. Etc.
My first idea would be: Pop up a modal window (so that the rest of the GUI can't be accessed) that can't be closed and shows a message for the user. Then close it programmatically.
This here is about the best idea. The window should display a meaningful message, and have a spinning, moving or some other animation to show it is still working. 
What would be the best way on going about this?
Create a new form and adjust it as needed. (e.g. `Position` = `poScreenCenter`, prevent user from closing it, ...) [The documentation](http://docs.embarcadero.com/products/rad_studio/delphiAndcpp2009/HelpUpdate2/EN/html/delphivclwin32/Forms_TCustomForm_ShowModal.html) shows that a form can be shown as modal with `Form.ShowModal`, but it doesn't return control until the form is closed (which you have to do yourself somewhere, not relying on the user). So you have several options: - Try to call that procedure you need to call in the `OnShow` handler. After the procedure returns call `Form.Close`. - (if the above fails) Start a timer before calling `Form.ShowModal`. In the Timer's `OnTimer` handler, disable the timer so that the handler won't be called again. Then call that procedure, and afterwards `Close` the form.
bring a transparent TPanel to the top of the window. Make it grey. The whole window will look disabled. when done whatever you need doing, put the panel to the back 
If you have an email address I have code for DirectX9. It's actually FreePascal code based on Clootie's headers, but that should definitely not be an issue. Drop me a line- I can craft an example with you if you so desire.
Might still react to keyboard shortcuts though.
It has been years since I wrote in Delphi, but I think you can put everything on a TPanel and then disable that when you want.
Downvoted and no assistance? It says right there "everyone is welcome to post/ask anything that relates to Delphi", so I thought this would be cool. I even offered to compensate people for their time. :/ I'm sorry I'm not running XE4, I'm stuck with this awful legacy project from 1998 and am trying to fix the areas I don't understand well so I can get all this upgraded to Delphi 10 Berlin or Tokyo. 
when you create a new TForm-descendent at runtime then make sure to call CreateNew instead of Create. createnew does not require a .dfm-file but all your controls and events should be added in the constructor.
I suggest asking on [Stack Overflow](http://stackoverflow.com/questions/tagged/delphi). Make sure your question is clear and well constructed or David Heffernan may yell at you.
Key is of Word type (unsigned integer). **KeyChar** is of Char type and should be the variable that you use. I would use something like this: if ((KeyChar = #8) or (KeyChar in ['a'..'z', 'A'..'Z', '0'..'9'])) then 
&gt; This is a bit of a shame since performance critical parts of your code can still hugely benefit from assembly optimized &gt;routines.... I don't agree with this at all. It's 2017; people don't write assembly by hand anymore unless they're a Delphi user, and that's because the compiler is barely optimized. https://stackoverflow.com/a/9601625/2128279 Despite that difference of opinion, the article is very well-written. 
I agree that the Delphi compiler could do a much better job at optimizing the code. For the Delphi compilers that use the LLVM backend, maybe it would only be a case of enabling other optimization passes. It is not true though that only Delphi users write assembly. In the multi-media world (audio, video, high performance gaming) there is still a lot of hand-written assembly code. Just look at FFMPEG or x264 for example (I know, those are not your typical applications). Thanks for liking the article though!
Your second example is literally what arrays are for.
I believe there was a reason I wouldnt use a array in this case...
Sadly, the LLVM backend is not properly used/configured by the NextGen Delphi compiler, so it does not produce optimized code. The worse being the Linux 64 compiler when working with floating point... see https://plus.google.com/103246155735524926641/posts/SbLxpp2DipK
Very strange, since every 64-bit CPU has SSE2 support, and using SSE2 for floating-point is easier to implement than using the FPU. I would think LLVM would take care of all that, but like you said, it may not be configured to do so.
I'm still newish in coding maybe someone can explain the purpose of this? Is it for hosting a local Linux desktop?
The first part of this article was just about launching a Linux process in the background. Eventually it looks like the author will build a Linux [daemon](https://en.wikipedia.org/wiki/Daemon_(computing\)), which is the rough equivalent of a Windows service, basically a task that will sit in the background and do something on occasion. For instance a scheduling daemon (cron is the most popular example on Linux) launches processes at specific times or intervals. 
If it makes you feel better, someone downvoted my suggestion to ask in a place where you are more likely to find help. Some people are just difficult to please.
The **definition** of ShowModal is that it doesn't return until the form is so closed. If you want to show a dialog box, but then return so you can continue with other code, you want `.Show` instead.
But I shouldnt be able to click on the form under it.
That's when you do manually do what Windows developers do: disable your self form while you're doing your stuff. otherForm.Show; Self.Enabled := False; try //Do my stuff finally Self.Enabled := True; //critical that we are enabled before we make the currently active window disappear end; otherForm.Hide; Raymond Chen notes why [it's critical that you re-enable the owner before you hide the child form.](http://blogs.msdn.com/b/oldnewthing/archive/2004/02/27/81155.aspx): &gt; When you destroy the modal dialog, you are destroying the window with foreground activation. The window manager now needs to find somebody else to give activation to. It tries to give it to the dialog's owner, but the owner is still disabled, so the window manager skips it and looks for some other window, somebody who is not disabled. &gt; That's why you get the weird interloper window. &gt; The correct order for destroying a modal dialog is &gt; - Re-enable the owner. &gt; - Destroy the modal dialog. &gt; This time, when the modal dialog is destroyed, the window manager looks to the owner and hey this time it's enabled, so it inherits activation. &gt; No flicker. No interloper. There is only one thing left: there is no way in Delphi to specify the "owner" of your child form (so the Windows window manager knows to keep your **Please Wait** form on top of your form that showed it. It ideally would be something like: otherForm.Show(Self); Self.Enabled := False; //Do my stuff Self.Enabled := True; otherForm.Hide; But the [guys at Embarcadero fundamentally misunderstand the Windows concept of a window's **owner**, and refuse to support it](https://stackoverflow.com/questions/31705874/how-to-show-a-modal-dialog-from-a-modeless-form#comment51351273_31705874)
The Code works it just higlights where I declared mt richedit I have removed the RichEdit and placed a normal one now it works. So I just need to create my rich edit dynamically. 
The feature set of this "lite" edition is stated nowhere in the web site... 
Good luck! Hope you get a buyer and I totally understand loosing interest in a project once is done.
deleted, because T_D runs scripts to exploit comment history in an effort to threaten doxxing... ^^^^^^^^^^^^^^^^0.3065 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/94729)
WP-TotalCache or something is broken on your blog, it sometimes returns a page full of �&lt;�Jρ���d/;G�.
I don't think anybody will buy it without seeing sales figures and how many clients have the lifetime upgrade version. Also, how many demo downloads that correspond to purchases.
Another way Ive found to do it (maybe will go with this) is to hide the self form. 
The graphics are rendered using OpenGL ES 2.0. It can be done with Lazarus probably more easily that with any other tool/programming language. The toolkit I am using to develop this and other examples is called bare game (as in minimal, old site linked here http://www.baregame.org/). I am in the process of creating bare game version 2. The basic idea with programs like these is that you can created rich media applications, games, kiosk interfaces and the like for most any platform: pc, windows, mac, android, ios. ect. The underlying framework is SDL2, a library that helps you create a window, read input, get a graphic context, and an abstraction to playing sound. Note, that SDL is not a game engine, it's just an API to abstract different hardware platforms to get something up and running. A game engine, like bare game, adds on top of that things like loading textures, drawing sprites, handling collision detection, providing basic geometric math support, and so on. People could use a highly developed game engine like Unity, but sometimes it gets in the way. For example, I like to work directly with OpenGL and writing shaders. I also like svg and animating vector graphics. Accessing those in things in Unity isn't so cut and dry. Anyhow, to answer your question: OpenGL is used to generate those graphics.
Thank you, WP autoupdate gone wrong.
Check out StackOverflow, batch files are still there, even PowerShell does not overwhelm them.
Thank you!
The amount I ask for it is the exact amount one would spend to develop it from scratch. So sales figures are not a question.
I do not understand what you're trying to do here: a MODAL box will enter its own eventloop until it is closed. Now, if you're processing stuff anyway (not using a worker thread) you simply want to display a message without the modal. If you ARE using a worker thread, you're going to (a) need some safeguards to take care of events in the meantime, and (b) use a splashform. On the offchance you're one of those guys tossing a wild 'ProcessMessages' left and right: don't. Only other option I can see is one where the modal form actually does the work -perhaps even on a timer- in which case the form would close itself. You also don't need .Parent:=Someform; ... as I said, I'm not sure what you're trying to do but for all intents and purposes, ShowModal is where execution STOPS until the dialog closes; or otherwise put: the Close should come from the modal form itself. Have a nice day,
Oh- found your other thread, where you got the idea from. Simply execute your code in the modal form and close it from there ;-) In case you want to recycle the same form for different functions, simply set a procedural hook to whatever you want it to execute while waiting. Cheers!
Update: I added the a "mars" planet style to the example. This new style includes depth of field and atmospheric effects. https://www.getlazarus.org/videos/bareterrain/#mars
What exactly did you try?
 unit U_Form_Main; interface ///////////////////////////////////////////////////////////////////////////////////// uses Windows, Classes, Controls, Dialogs, Forms, Graphics, Math, Messages, StdCtrls, SysUtils, Variants; type TForm_Main = class(TForm) Btn_Down : TButton; Btn_Up : TButton; LB : TListBox; procedure GUI_Btn_OnClick (Sender : TObject); procedure GUI_Form_OnCreate(Sender : TObject); end; var Form_Main : TForm_Main; implementation //////////////////////////////////////////////////////////////////////////////// {$R *.dfm} procedure TForm_Main.GUI_Btn_OnClick(Sender : TObject); begin if (Sender = Btn_Up) then LB.ItemIndex := Max(LB.ItemIndex - 1, 0) else LB.ItemIndex := Min(LB.ItemIndex + 1, LB.Items.Count - 1); end; procedure TForm_Main.GUI_Form_OnCreate(Sender : TObject); begin LB.ItemIndex := 0; // only if there's already at least one item in the listbox end; //////////////////////////////////////////////////////////////////////////////////////////////// end.
A listbox stores its contents on the Items property, which is a TStrings.
So then how do I check that?
Whether you are creating an XML web service (SOAP Server Application), WebBroker app (Web Server Application) or a DataSnap or DataSnap REST server, they all give you the option to create stand alone FireMonkey or console applications or Apache modules (as well as VCL applications and ISAPI modules). Start by picking the server you want to create, select Stand-Alone application in the wizard and when you are prompted, select FireMonkey application. Leave your platform warnings on and you're off to the races.
You wrote that you had done this with TStrings before. Just do the same thing here. Iterate through the listbox's Items and see if there is a match.
How are you trying to get it now? Maybe try [GetDocumentsPath](http://docwiki.embarcadero.com/Libraries/Seattle/en/System.IOUtils.TPath.GetDocumentsPath) in IOUtils. Most of the RTL is cross-platform, including this unit, so it works equally well in VCL and FireMonkey. 
TPath.GetHomePath Works , like I said in the roaming folder. TPath.GetDocumentsPath gives me a error: Undeclared identifier
Found a completely different way: if ListBox1.Items.IndexOf(TOpenDialogLoad.FileName) &lt;&gt; -1 then begin ShowMessage('Already exists'); exit; end;
Which version of Delphi?
Was looking for alot more ELI5... Ive worked with Java and Tomcat so I do have SOME experience but Delphi (XE2 Firemonkey) is something else. 
I think its XE2 Firemonkey. Yes, it is.
It looks like GetDocumentsPath was added in XE3. You could use the same method that GetHomePath uses. Call SHGetFolderPath with CSIDL_PERSONAL instead of CSIDL_APPDATA.
What kind of server are you trying to make, and which edition are you using (Professional, Enterprise ,other)?
I needed to refresh my memory a little, but XE2 was the first release with cross platform features, and cross platform server support was limited. It came out in 2011, nine releases ago. I'm not sure there's an easy guide to creating what you're looking for.
deleted, because T_D runs scripts to exploit comment history in an effort to threaten doxxing... ^^^^^^^^^^^^^^^^0.3065 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/94729)
&gt; Don't forget to check the modal result of the dialog, before you use the filename property. ???
Could you post a example please?
Backspace doesnt work. The rest do.
Id throw it on Apache to make it simple.
Unfortunately, explicit Apache support wasn't (re) introduced until Delphi XE6 in 2014, and that first release might have just been for Windows.
Open System.SysUtils.pas and search for GetHomePath. Create a method that does the same thing, except replace CSIDL_PERSONAL instead of CSIDL_APPDATA.
PChar or PAnsiChar? I think that starting in 2009 PChar refers to WideChar valies. [StrPas](http://docwiki.embarcadero.com/Libraries/XE2/en/System.SysUtils.StrPas) converts a null-terminated string to a regular string, and there is a PAnsiChar version. I assume from previous posts that you are using Delphi XE2. In more recent versions of Delphi, this has been [deprecated](http://docwiki.embarcadero.com/Libraries/Tokyo/en/System.SysUtils.StrPas), and you would use the version in the [AnsiStrings](http://docwiki.embarcadero.com/Libraries/Tokyo/en/System.AnsiStrings.StrPas) unit.
deleted, because T_D runs scripts to exploit comment history in an effort to threaten doxxing... ^^^^^^^^^^^^^^^^0.3065 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/94729)
You're trying to store a function in a string?
Im trying to store the return value of the function (which is a pchar) in a ansistring.
AFAIK, pchar. So, from what I understand I need to: aansistringvar:=strpas(thefunctionthatreturnsapchar); ??? Because trying that just gives me the same result :(
Oh, OK, I got you now. I only add one at a time. If Files.Count is 0, I do nothing.
So Id have to run it on IIS???
Or as a stand-alone VCL or console application.
Something seems odd here. You need to provide more information. What is the function? If it's not from the RTL, can you show the signature? Have you examined the data to see if it's Ansi or Unicode? 
- Does it really have to be a menu instead of, say, a virtual TTreeView? - Instead of saving the entire object, how about a custom binary file format? - If you have the program running on the same computer as the folder you can let the OS inform you about changes in the folder. Should help with the IO.
* It's an Intraweb app and I've been instructed to use a TMainMenu (what happens when you're working for a boss). * Not sure how I would use a custom binary file format? * The Intraweb service runs on 2 servers, and the folder is on a 3rd server. I've tried populating the TMainMenu when the service starts and then copying\cloning it to each usersession's TMainMenu, but have been unsuccessful so far. 
pansichar I needed to use a pansichar
We cant use VCL as we depend on Firemonkey. And the end game was to treat this like a console application.
&gt; Not sure how I would use a custom binary file format? Turns out a text file format is enough. const Tab = #9; var OutputFile : TextFile; procedure TForm_Main.Save(const Item : TMenuItem; Indentation : string); var i : integer; begin i := Item.Count; if (i = 0) then begin // file WriteLn(OutputFile, Indentation + 'f ' + Item.Caption); end else begin // directory WriteLn(OutputFile, Indentation + 'd ' + Item.Caption); WriteLn(OutputFile, Indentation + IntToStr(i)); Indentation := Indentation + Tab; for i := 0 to (i - 1) do Save(Item.Items[i], Indentation); end; end; procedure TForm_Main.Save_MainMenu; begin AssignFile(OutputFile, {...}); ReWrite (OutputFile); try Save(MainMenu.Items, ''); finally CloseFile(OutputFile); end; end;
Well. Formwait is an instance of your form, yes? And you NIL it. What you want to do, is either leave it as-is (just close without Freeing it) -OR- create a new instance before using it. Currently, you make FormWait NIL and the next time around you attempt to access said NIL instance, hence the bug. A closed form can be reopened simply by .Showing it -- it retains all data it previously held but will re-execute OnShow. (OnCreate, obviously, is executed only once)
That's very helpful, thanks for your help!
Here's an advice: open HKEY_CLASSES_ROOT\CLSID. There's a system provided pool of random GUIDs for this PC. Pick any. Note: after you choose a GUID, you have to delete that registry key so that no one else can claim it. ^^^&lt;/joke&gt;
deleted, because T_D runs scripts to exploit comment history in an effort to threaten doxxing... ^^^^^^^^^^^^^^^^0.3065 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/94729)
I'm not using (nor will allow multiselect) If the person hits escape or cancel, Count is 0 so...
OK, so the issue is with free (I tried nil if it was that but ill remove it since it didn't solve it) Ill give that a shot tomorrow.
deleted, because T_D runs scripts to exploit comment history in an effort to threaten doxxing... ^^^^^^^^^^^^^^^^0.3065 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/94729)
Why not just use TArray&lt;&gt; for storing the list? Why use a "capacity" field and not the dynamic array length (which is the capacity)? NII syndrome perhaps... not high quality code for sure...
Free releases all memory associated with an instance of an object. If you have an app with hundreds of possible forms, you can imagine you might now want them all hanging out in memory when they weren't being used. So, in that case, you would not let the forms be automatically created by the app, but instead you would create them yourself when they were needed, and destroy (free) them when you are done. That would look something like this: var FormWait: TFormWait; begin FormWait := TFormWait.Create(Application.MainForm); try Formwait.Left:= (self.Width - Formwait.Width) div 2; Formwait.Top:= (self.Height - Formwait.Height) div 2; self.Hide; Formwait.Show; finally FormWait.Free; self.Show; end; end; Right now, your forms are being automatically created for you all when the app first runs (take a look in your main project .DPR file and you'll see where it happens). There's a project option that you can use to turn that off. If you want to keep having the forms automatically created for you, then don't destroy them unless you are absolutely sure you won't need them again.
&gt; free (Better use FreeAndNIL.)
It's a matter of opinion. I would never use that variable after my finally block, but if for some reason I was tempted to put code after that and write some huge procedure in which something like that might happen, then you could use FreeAndNil(). But really, buy and read "Clean Code" and just don't do stuff like that. FreeAndNil does have it's uses, I just wouldn't bother with it here, but that's mostly because of my coding style. YMMV.
&gt;Using code I found on Stackoverflow ... I get a stack overflow. I guess that's one of those "I don't know what I expected" moments. ;-)
lol
BTW, I tested hitting escape like you mentioned and it Works...
- *VCL Reference:* ItemIndex property (TCustomListBox) Specifies the ordinal number of the selected item in the list box’s item list. - *Delphi syntax:* `property ItemIndex : Integer;` - *Description:* Use ItemIndex to select an item at runtime. Set the value of ItemIndex to the index of the item to be selected. ***The ItemIndex of the first item in the list box is 0. If no item is selected, the value is -1, which is the default value unless MultiSelect is true.*** If the value of the MultiSelect property is true the user can select more than one item in the list box. In this case, the ItemIndex value is the index of the selected item that has focus. ***If MultiSelect is true, ItemIndex defaults to 0.***
It seems if Listboxpartes.ItemIndex= -1 then begin exit(); end; Does solve it. Thank you.
Are you suggesting I edit a system path? That sort of would break the code if I pass it to another dev. There must be a workaround, even if dirty.
You can just write if (Listboxpartes.ItemIndex = -1) then exit; 
No, I'm suggesting that you create your own GetDocumentsPath method in a separate utilities unit using the GetHomePath method in XE2 as a guideline. 
Hate that with a passion. It looks EXTREMELY unclear. 
Oh ok. Where is CSIDL_APPDATA = $001A; For documents?
Create a TStringList, store the string in the list, get the value of key "Filename". var List : TStringList; List := TStringList.Create; try List.Text := {...}; {...} := List.Values["FileName"]; finally FreeAndNIL(List); end; 
 function GetDocumentsPath: string; const CSIDL_PERSONAL = $0005; var LStr: array[0 .. MAX_PATH] of Char; begin SetLastError(ERROR_SUCCESS); if SHGetFolderPath(0, CSIDL_PERSONAL, 0, 0, @LStr) = S_OK then Result := LStr; end; For everyone else.
The equivalent for Documents is CSIDL_PERSONAL. Create your own constant with the value $0005. 
Thank you. You have made my life 10000000000000x easier. Out of curiosity, does this only work with key=value or with key:value as well?
&gt; Out of curiosity, does this only work with key=value or with key:value as well? Yes. TStrings has a [NameValueSeperator](http://docwiki.embarcadero.com/Libraries/en/System.Classes.TStrings.NameValueSeparator) property that lets you use something other than "=" between names and values.
So basically you try to convert a unicode string to an ansistring?
 function NewGuid: String; var Guid : tGuid; tempStr : string; begin CreateGuid( Guid ); tempStr := GUIDToString( Guid ); System.Delete(tempStr, 1, 1); System.Delete(tempStr, Length(TempStr), 1); result := tempStr; end; That will give you this each time you call it: FCDBA779-B162-4AEF-8B99-4F21812EB1D4 63651C6A-3193-417F-AF8D-3A9FBD16266A D7755A9A-9E2F-4B01-84D6-0A72B8D0E48D E420D5BB-3EDA-432C-9A80-9D818C477954
[removed]
You might be able to get away with it, but he's right that it's essentially undefined behaviour that could change without notice, breaking your code. I would code it more defensively.
How is performance? In a listbox I have "C:\somefile\1.bmp" "C:\somefile\2.bmp" "C:\somefile\3.bmp" and when doing onClick on that listbox I change the text Filename=C:\somefile\1.bmp Width=500 Height=90.23 Return=1 Filename=C:\somefile\2.bmp Width=500 Height=90.23 Return=1 etc. (I obviously check if I truely do have a item selected) And I change back and forth between items and sometimes List.Values["FileName"] returns "" if I do it fast enough.
This seems unnecessarily complicated. You might be better off populating an array or list of records instead.
Could you write a small snippet? Not sure how to turn that string into a array or list of records.
First, can you completely describe the problem that you are trying to solve?
There is a function that returns the string: Filename=C:\somefile\1.bmp Width=500 Height=90.23 Return=1 In order to avoid substrings, searching for = and #10#13, etc. I wanted to convert it into something easier which seems TStringList does but performance is slow.
Parsing these four values is not very slow unless you are doing it a lot, and I'm not convinced that speed has anything to do with occasionally getting empty results. I suspect that this function occasionally returns blank results. I would add a test for that and display the contents of the returned string. In other words, be careful about making assumptions and be sure you are solving the right problem. 
&gt; Parsing these four values is not very slow unless you are doing it a lot Each time I click on a item in a listbox, onClick is launched and when I click very fast, it returns a blank value. 
And you need to do some troubleshooting to find out why. I don't think the StringList is a speed issue, though. You can create a TStringList, populate it, read all of the values back and destroy it one thousand times in about 2.5 milliseconds. Faster than you can click in your listbox, even if you click very fast. If you'd like some help, then we need more information. What does the OnClick look like?
 iRandom := Random(iPlacesUsed); inc(arrPlaces[iRandom]); Random(iplacesUsed), results in a value 0..iPlacesUsed-1 You will get an AV violation when the result is zero since your array is [1..20] Change line to: iRandom:=1+Random(iplacesUsed);
You're reading outside the bounds of your arrays. If you compile with Range Checking enabled and you'll see a more helpful range check error instead of an access violation. In your final loop, the index variable is J, but you are using I in the loop. I happens to be 21 from the previous loop, which is larger than your array size. Note: reading the value of an index variable outside of a for loop that sets it is undefined behaviour, so you can't count on it being 21. for J := 1 to iPlacesUsed do begin redOut.Lines.Add(IntToStr(arrPlaces[I]) + arrBar[I]); end; 
I originally had all the loops using I but changed it to use different letters and probably forgot to change the others too. thanks
Also this.
Unless they are nested, I don't have a problem with using a single index variable for multiple for loops. The variable i is kind of my defacto standard for these.
I'm just getting back in to Delphi after an extended period away (last touched BDS2006 after starting with Delphi 1.0 many many years ago), so this is perfect timing. Grabbed a copy, and looks good so far, a very useful guide to FireMonkey and mobile development and some of the other changes recently (it's actually nice to see how much Delphi has moved forward since I last used it). Thanks!
OK, was able to get the code. Before posting. * As you can see I cannot show what I pass to a string due to a NDA. Its just a string. There are no functions side or anything strange **I hate to program so when I write code, I want things to work. I dont care about optimization** (except specific cases like this where tstringlist seems slow) **I rather use 40 variables than 3. Please all comments go towards seeing what clicking on the listbox sometimes gives a empty value. If you dont have anything to comment on that, just dont comment. If it gets out of hand, Ill just delete the fucking code. Thanks** procedure TForm1.ListBox1Click(Sender: TObject); var passthisstring: ansistring; exit: pansichar; goodexit: ansistring; startpos: integer; endpos: integer; imagefile: ansistring; InStream: TResourceStream; MemStr: TMemoryStream; thelist: TStringList; previousvalue: string; widthp: string; heightp: string; begin if Listbox1.ItemIndex= -1 then begin exit(); end; if Listbox1.Count = 0 then begin exit(); end; widthp:='150'; heightp:='112'; if dllHandle &lt;&gt; 0 then begin //Due to a NDA I cannot show what I pass to "passthisstring". It just a string //passthisstring:= xAFunc := GetProcAddress(dllHandle,'AFunc'); exit:=xAFunc(7,pchar(passthisstring)); goodexit:=exit; thelist:=tstringlist.Create; thelist.Text:=goodexit; if length(thelist.Values['Filename'])=0 then begin exit; end; //If I change the value too quick, it is empty. Temp fix if length(thelist.Values['Filename'])=0 then begin exit; end; try MemStr := TMemoryStream.Create; MemStr.LoadFromFile(thelist.Values['Filename']); //This is and will always be a BMP MemStr.Position := 0; imagepreview.Width:=strtoint(widthp); imagepreview.height:=strtoint(heightp); imagepreview.Bitmap.LoadFromStream(MemStr); sleep(100); finally thelist:=nil; thelist.Free; memstr.Free(); end; end; try Case Listbox1.Selected.Index of 0 : begin self.NumberBox1.Enabled:=true; self.NumberBox2.Enabled:=false; self.NumberBox3.Enabled:=false; self.NumberBox4.Enabled:=false; self.NumberBox5.Enabled:=false; self.AnotherNumberBox1.Enabled:=true; self.AnotherNumberBox2.Enabled:=false; self.AnotherNumberBox3.Enabled:=false; self.AnotherNumberBox4.Enabled:=false; self.AnotherNumberBox5.Enabled:=false; end; 1 : begin self.NumberBox1.Enabled:=false; self.NumberBox2.Enabled:=true; self.NumberBox3.Enabled:=false; self.NumberBox4.Enabled:=false; self.NumberBox5.Enabled:=false; self.AnotherNumberBox1.Enabled:=false; self.AnotherNumberBox2.Enabled:=true; self.AnotherNumberBox3.Enabled:=false; self.AnotherNumberBox4.Enabled:=false; self.AnotherNumberBox5.Enabled:=false; end; 2 : begin self.NumberBox1.Enabled:=false; self.NumberBox2.Enabled:=false; self.NumberBox3.Enabled:=true; self.NumberBox4.Enabled:=false; self.NumberBox5.Enabled:=false; self.AnotherNumberBox1.Enabled:=false; self.AnotherNumberBox2.Enabled:=false; self.AnotherNumberBox3.Enabled:=true; self.AnotherNumberBox4.Enabled:=false; self.AnotherNumberBox5.Enabled:=false; end; 3 : begin self.NumberBox1.Enabled:=false; self.NumberBox2.Enabled:=false; self.NumberBox3.Enabled:=false; self.NumberBox4.Enabled:=true; self.NumberBox5.Enabled:=false; self.AnotherNumberBox1.Enabled:=false; self.AnotherNumberBox2.Enabled:=false; self.AnotherNumberBox3.Enabled:=false; self.AnotherNumberBox4.Enabled:=true; self.AnotherNumberBox5.Enabled:=false; end; 4 : begin self.NumberBox1.Enabled:=false; self.NumberBox2.Enabled:=false; self.NumberBox3.Enabled:=false; self.NumberBox4.Enabled:=false; self.NumberBox5.Enabled:=true; self.AnotherNumberBox1.Enabled:=false; self.AnotherNumberBox2.Enabled:=false; self.AnotherNumberBox3.Enabled:=false; self.AnotherNumberBox4.Enabled:=false; self.AnotherNumberBox5.Enabled:=true; end; else begin self.NumberBox1.Enabled:=false; self.NumberBox2.Enabled:=false; self.NumberBox3.Enabled:=false; self.NumberBox4.Enabled:=false; self.NumberBox5.Enabled:=false; self.AnotherNumberBox1.Enabled:=false; self.AnotherNumberBox2.Enabled:=false; self.AnotherNumberBox3.Enabled:=false; self.AnotherNumberBox4.Enabled:=false; self.AnotherNumberBox5.Enabled:=false; end; end; except on E : Exception do exit(); //ShowMessage(E.ClassName+' error raised, with message : '+E.Message); end; end; 
I wonder if the call to the function in the DLL is causing you some grief because processing the StringList is fast.
Its the only other thing it could be but...it Works pertty good most of the time when "normal clicking"
you can use the High() function for the to-parameter of a for loop for K := 0 to High(MyArrayWithLength20) this ensures that K will never be higher than the highest index of the Array and allows you to adjust the length of your arrays only at the top of your function. alternatively there is the length(myarraywithLength20)-1
go above your TForm declaration but below the interface keyword TMyRecord=Record Filename:String; width:Double; height:Double; return:Integer; end; TMyRecordArray=Array of TMyRecord; your record may look different depending on what values you actually need. afterwards you may use the TMyRecordArray datatype anywhere where you can declare variables. function myfunction( AStringList:TStringlist):TmyRecordArray; var ARecordArr:TmyRecordArray; begin setLength(ARecordArr,1); ARecord[0].Width:=List.Values('WIDTH'); ... Result:=ARecord; end;
when &gt;xAFunc := GetProcAddress(dllHandle,'AFunc'); is always the same function then you are better off to load the procedure address once in formcreate or somewhere. also try to use a (Sender as TListBox).BeginUpdate and (Sender as TListBox).EndUpdate function at the beginning of your OnClick-Event and also at the end, wrap it in a try finally block though.
Why am I creating the List and then assigning it to a "Record"?
It was in response to this: &gt;Could you write a small snippet? &gt;Not sure how to turn that string into a array or list of records. ------------------ &gt;Why am I creating the List and then assigning it to a "Record"? because the list is only containing strings. I forgot to add List.Values('WIDTH')**.ToDouble()**; depends on your delphi version though.
&gt; because the list is only containing strings. And? strtoint as neccesary. At most, Im looking for something that doesnt glitch out sometimes which means giving better performance but
When you strtoint whenever you require it you must also perform security checks that the string you try to strtoint is really containing a valid integer value and when it does not that you either perform operations to make it a valid interger or you assign a default value. Otherwise you risk to disrupt the flow of the program for when there is not a valid integer in your string. However... The code snippet was only meant to demonstrate how to create a record structure and also how to pass an array of records between functions. Since my understanding was that you didn't know how that worked. That is all.
And there's still this golden oldie: http://v.mahon.free.fr/pro/freeware/memcheck/
Man. I need to reinstall lazarus. Haven't written anything in Pascal for ages
I remember trying it in 2010 and can't remember the specific details but I recall feeling overwhelmed by it; it seemed very complicated and there was no documentation or assistance anywhere, and I let it go. I wonder if it's been made more user friendly since rhen.
Yes and yes. I can just comment on Windows and Linux. Usually you can rely on installing the packages provided and installation will work smoothly. What you described went away shortly after you gave Lazarus a try mostly due to better dependency support by the package managers on Linux. I use the latest version 1.9 (Win32) located a USB drive attached. Build from source works pretty easy. http://wiki.freepascal.org/Installing_Lazarus Anything else (pre packaged) works even more great. You can rely on Linux 64 bit, Linux 32 bit and Win 32 cross compile against Win64 as well as Win64 solely. Cannot comment on the Mac ... Concerning 1.8 RC3 under the latest Ubuntu one needs to compile without optimizations in case of debugging using gdb 64 bit. That seems to be related to the FPC compiler for 64bit Linux (I think so) in some special cases. I gave several distributions a try and Lazarus and Freepascal work very good and setup is easy. Concerning the coding experience, debugging, memory leak tracing, code navigation, package management, components ... Lazarus/FPC does it's job very/pretty well. I personally prefer more coding oriented lean IDEs (Sharpdevelop, Fire and so on) and Lazarus gives you both the coding experience as well as the GUI design facility. You can add/integrate whatever you like and more but for me Lazarus works out of the box. I just customize Delphi syntax highlighting, grippers for the cools bar, change the tab width and adjust the object inspector. There are so many great things built into the IDE today. You would have to check in the options dialog.
I've been coding in Pascal since 1983, and Delphi since 1995. I still love making VCL projects because I'm so good at it. It flows naturally for me. 
Only one way to find out.
When using GExperts to search for something, if I select a result and press enter it positions the cursor on the line where the match occurred, but then this thing from CnPack pops up and the cursor loses focus to it (IIRC, tbh I don't remember why it was annoying me). Anyway, how can I get rid of it?
&gt;I often wonder when observing "developers" using other enterprise-graded developing tools - both expensive proprietary ones (that are way more expensive than my Delphi subscription - and who also adds application run-time usage licensing) and common language IDEs - **why are they either so non-productive or over-complicating things.** GOOD QUESTION... I keep wondering the same thing myself. It seems like the whole concept of RAD (rapid application development) has been forgotten, and I just don't understand it at all. It's amazing how quickly I can get applications up and running in Delphi... it's a matter of minutes for simple utilities. &gt;So even if mostly everyone find the Delphi "language" and the compiler tools nice, when they used it the last time - the bickering goes on about either; cost staying updated to latest versions This is one of my big questions. Does anyone know the latest version of Delphi that does NOT have an online DRM model? I am maintaining a couple of highly specialized applications that have 30-year lifespans and it would kill my business if, say, my hard drive fails in 2028 and I need to get the compiler working on a new machine... then I find that Embarcadero was bought out by Foxconn, Delphi was killed off, and there's no way for the installer to validate my Delphi installation. I got burned by a few other applications where the developer went out of business. I am still at Delphi 7 but I am about to upgrade, but I don't know where I should go. Can anyone shed some light on this for me? What's the highest version I can migrate to and still be safe from a problem like this? Does Delphi Tokyo use online installer license management?
Delphi 7 is the last version that didn't require an online registration, and even that had some kind of pseudo-registration. I do (almost) all of my development in virtual machines. Not specifically because of this, but it solves the problem of losing my development environment because of a machine failure.
Ahh -- VM! That never even occurred to me. If I can run the latest versions of Delphi in a VM without any problem, then I'm a lot more comfortable with upgrading all the way to Tokyo. What are you using for a VM?
Probably VirtualBox.
I have used VMWare for years with great success. It's not just useful for the occasional PC failure. It makes it very easy for me to upgrade to a new physical box without having to reinstall my development environment.
Seconding VMWare here, I use Workstation and Fusion and run Delphi inside VMs on both, works great and makes backing up easy!
KaM Remake author here (the other one, not Lewin). Still using Delphi for gamedev - works out very well for me. Of course there are few flaws/bugs, but over time I got used to them and they don't bug me that much, compared to Delphi benefits. E.g. just this weekend got compilation speed up x10 (did a neighbor post on this matter). P.S. Check out the project @ knightsprovince.com - Alpha version available!
Or, if I'm going to do something stupid or potentially system altering, I can take a snapshot, do my stupid thing and then roll back to a known good point. As many times as I like.
Windows defender in Windows 10 does real time intercepting of every file operation (joining the ranks of all shit anti-virus everywhere). Delphi full build times Windows 10: - **Windows Defender On:** 86 seconds - **Windows Defender Off:** 3.9 seconds 
Native code in Windows? Delphi is great. Web Development with JS front end, Delphi doesnt exist outside their REST server. FMX is a poor excuse for Android development, as it doesnt use native controls or material design. The problem isnt Delphi, the problem is the world moved away from Windows Apps.
&gt;GOOD QUESTION... No, it's not a good question because there's no such thing as development tools that are expensive, proprietary, not Delphi, and have "run-time usage licensing". That's why there are no names given. &gt;I keep wondering the same thing myself. It seems like the whole concept of &gt;RAD (rapid application development) has been forgotten, Sigh... yes.... BY DELPHI. Manual memory management, lack of type inference, coding everything in sections a la COBOL, etc., are not RAD. Look at the popularity of Python and then say "RAD has been forgotten". That claim is just ridiculous. I'm not doing new development in Delphi today precisely because it's nowhere near the state-of-the-art in RAD that it was in the 1990s. Back then the main option was C++ and Microsoft Foundation Classes, which was a big mess. You had to keep track of window handles, dispatch all sorts of unimportant messages, in early versions of Windows a restored window had to manually repaint all of its controls, etc. Along came VCL, which handled all of the housekeeping for you (yet still allowed you to get at the internals when you needed to). You could concentrate on the problem you needed to solve and not on dealing with Windows. It was amazing. But this is 2017. Plenty of frameworks exist, and even the official ones are very nice. Rapid Application Development is not about manual memory management, declaring all of your variables beforehand, nested try...finally statements, forward declarations, and all the other claptrap the Delphi language is still carrying around with it. It's also not about needing to expend vast sums of money, be limited in the number of systems you can install to, wait for bugs to be fixed, etc. This is the era of open source. Heck, according to Stack Overflow's surveys, almost half of developers don't even develop on Windows anymore. You install an open source compiler and editor onto the OS of your choice - no DRM, no credit card required. You have bigger, richer frameworks than VCL and modern language features (type inference, tuples, functional programming features, memory management, etc.) to make development fast. Popular tools integrate with popular continuous integration frameworks, popular documentation generators, popular DCVS systems, etc. so one code push triggers a bunch of automation and collaboration becomes almost seamless. Open source also extends to the richness of an ecosystem. A recent computer science paper found that the single biggest factor influencing developers' choice of tools (to a large degree) is the number of libraries available for it, particularly open source libraries. Here, Delphi is anemic. Torry has listed &gt;10K, &lt;11K libraries for at least five years now. Meanwhile Python was at 18K at the end of 2012 and is over 110K now! Most of what is on Torry is either D5-D7 era or shareware demos anyway. In the Delphi world, you're still expected to hand over hundreds of dollars for libraries while in the rest of the programming world you just hop over to Github. We have a few heroes like Arnaud Bouchez and Eric Grange donating code, but they are only a handful. This weekend I wanted to do a little project to automatically download new images from certain Instagram accounts to use as wallpaper. Delphi? nothing on Torry to help; I could pay TMS about 200 dollars for a "cloud pack" with wrapped APIs, including Instagram. Python? Found several Instagram API wrappers listed, but better yet found two scrapers that didn't require an API key and even offered CLI tools that did 98% of what I needed already! After getting it up and running almost immediately, I wanted to filter out close duplicates (trivial in Python to add code to find exact duplicates). Any fuzzy image hashes on Torry? Nope. Python? found a module that implemented four of them! Again, so much time left over I spend time playing with the different options and now have gained enough understanding that I have ideas for my own fuzzy image hash I want to implement this coming weekend. Python was RAD for me. Delphi - not even close. I have more complex projects I'm working on that involve a variety of tasks from scraping javascript-equipped web pages to adding info to ODF spreadsheets, running classification algorithms, manipulating timestamps with time zones - every major facet has an equivalent Python library while doing it all in Delphi would cost THOUSANDS of dollars and still not give me the equivalent. That's not RAD to me. &gt; It's amazing how quickly I can get applications up and running in Delphi... Please name one language feature lacking in other languages that gives you a development speed advantage. &gt;This is one of my big questions. Does anyone know the latest version of &gt;Delphi that does NOT have an online DRM model? You've asked that before. Delphi 7 is the last version. However, there are cracks available that work with even the latest version of Delphi. Hence, the question is what's the latest version of Delphi you can work with that the DRM can be circumvented if you ever need to. In that case, it's the latest version. 
I'm not entirely sure what you mean by JS front end. Maybe any browser front end for a Delphi application? You might have missed web tools like UniGUI (which just released version 1.0), IntraWeb and WebFMX. I'm not sure if there are others. I actually kind of like the WebBroker model (alone or along with a DataSnap REST server) and have used it in a bunch of production projects. As for native components in FireMonkey, you might have also missed the work Embarcadero has been doing with native controls and third party suites from TMS and the open source D.P.F. open source native controls for iOS and Android. If you aren't familiar with versions of Delphi since XE2 from 2011 and are interested, there's some interesting reading [here](http://glooscapsoftware.blogspot.ca/2017/04/getting-started-with-delphi.html)
Well, you could store the countdown time as Timer.tag := seconds * 1000; and assign a button to trigger Timer.enabled := true. In the OnTimer event do something like Timer.tag := Timer.tag - Timer.interval and check for completion, and if you like, output the text as inttostr(trunc(Timer.tag/1000))+" seconds remaining...". For something that has to be accurate I would use subtraction with the now() function, using a very short interval timer which calculates the elapsed time and updates the status text.
Snippet? The time Ill show is minutes and seconds remaining although the possibility for hours would be nice as well (just in case)
&gt; So I did a quick optimization – removing unused units Why were there unused units? And isn't this something the IDE itself should be able to do? The author confesses to needing to spend an hour fiddling with units and moving things around and then ends by praising the compiler! 
Here's a big reason lots of developers don't develop on Windows anymore. That's a HUGE difference! 
Unused units typically appear when you move things between modules. Module A was using something from module B, then it got moved to C or removed. Now A has unused unit B reference. That would be a good thing to have in the IDE indeed. Lack of it is a small inconvenience that I got used to (given there are external tools to handle it). I reckon that spending an hour on the book-keeping once a year or two is not that terrible. Especially given, that even 70 sec is outstanding for 346kLoc of compiled code. So 8.5 sec is definitely worth a praise IMO.
Maybe the post wasnt clear. I want to, for example, set a timer for 2 minutes and it should count down and update itself in a label. 1:59 1:58 1:57 etc
- that's a fault of Windows Defender - that's a fault of anti-virus software Any good user disables real-time monitoring on their workstation.
&gt; “there are no Delphi jobs” myth I live in a tech heavy industry and there are NO Delphi jobs here. Haven't been any for over 10 years. They all dried up about 2008 when everyone moved on to C# and Java. Back in 1999-2002 companies were throwing money at us to code in Delphi. Not anymore. Oh you can find some in different states (like Texas DOT) - mostly government jobs where they haven't changed in 20 years - if you don't mind poking around in old code. When I ask the new round of developers fresh out of college none of them have heard of Delphi. I still code all of my personal projects in Delphi, but code in C#, VB.Net and Java to make a living. 
I've been developing software professionally for longer than this, but Delphi has been the development tool I've used the most since 1995. There is a certain amount of legacy work (I like to call it software rehabilitation), but over the past five years, my new development (from scratch) projects have outpaced maintenance by 2 to 1, and appears to be going strong. So there are some Delphi jobs out there, including new development.
I started in Turbo Pascal in 1983, moved to Turbo Pascal 4, 5, 6 - 7, then started Delphi in 1995 with Delphi 2. Used 2, 5 and 6, then moved to a personal copy of 2009. All my personal projects are in Delphi like [AvoBase](http://www.avobase.com) and [Alagorn](http://alagorn.infymus.com). I love the old days of client server + DB - but everything now is web based and slow now. 
Nice. I've used every single version of Delphi in production, by which I mean paying jobs, not just personal projects. I don't write client/server applications much any more. I wrote my first multi-tier application in 1999 or 2000 which had an application server between the client apps and the database. I have written a bunch of server applications in Delphi that require almost no resources, run fast, run forever and just work. Right now I am working on some interesting (I think) web front ends for Delphi servers (WebBroker) or web applications whose back ends talk to my application server (DateSnap REST). The same application server can be used for both the web front end or native (Delphi) client applications. A lot has changed since 2009. If you're still using Delphi for personal projects and are interested in taking a look, a stripped down Starter edition of the latest version is [available for free](http://glooscapsoftware.blogspot.ca/2017/04/getting-started-with-delphi.html).
I skipped a couple versions of Delphi - 3 and 4 were awful and 7 just didn't feel as well rounded as 6. If I need to toss together something to fetch/mangle data, I'll boot up Delphi 7 simply because it's so lightweight. I can code in C# pretty well but I'm a thousand times faster in Delphi because I have 34 years in the underlying language. What Embarcadero needs to do is release a version of Delphi like Microsoft does with Visual Studio Express C#. You can do a lot with VSE C#. The prices for Delphi are just absolutely ridiculous. My 2009 CodeGear RAD Studio was around $5000. Then add on third parties like QuickReports and stuff and it gets way pricey. 
You saw my link to the free Starter edition, right? One advantage it has over the D2006 Turbo editions is that you can install third party components.
You're right. There are no Delphi jobs. The guy you are commenting with is a MVP aka "salesperson" for Delphi. They spread fake news about its use on the industry. 
The lack of Delphi jobs is sad, really. I'm in Salt Lake City UT and we have programming jobs everywhere here. I only know of a few places where the still have Delphi code. I have a friend who still codes in Delphi - but it's a state job maintaining way old legacy stuff. 
Yeah. Same with Seattle, but Emb MVP will point to a single ISV in the area that runs a monolith Delphi codebase with 100 layers of inheritence for advertising and say its in use. Compare those 10 jobs with employed people to the 100s of react/node.js jobs avail paying $100k to kids just out of college.
Anonymous posters don't get to cast aspersions on the motives of others. Or mindlessly disparage comments they don't agree with as "fake news". There's enough of that nonsense going on already. There aren't as many jobs for Delphi as there are for C#, for example, but there are jobs available. Ask all of the people who still make a living using Delphi.
I'm in New Jersey just across from New York City and Dice only lists 1 Delphi job within 100 miles of my location right now. By comparison a search for "Java developer" turns up over 5,000 jobs at a 100 mile radius. So many of these "Why I Keep Choosing Delphi" articles either spread myths or are filled with sour grapes (e.g. why automatic memory management or any other advance in computing languages is really a bad thing). Many of the articles list reasons that apply to almost every language in existence (what language today **isn't** cross-platform?). If they were honest, they'd say either "It's all I know" or "I like it and don't want to put the effort into changing". There's nothing wrong with those reasons, but they're personal reasons, not objective reasons that would sway anyone else. That creates the need to try to conjure up rational justifications. 
Don't set a timer for two minutes. Create a TDateTime field variable that contains the target time. Set the timer to one second and in the OnTimer event, compare Now to the target time. If Now is less than the target time, update your label with the time remaining. If Now is greater than or equal to the target time, then disable the timer and run whatever code is supposed to run when the timer expires.
Snippet? Looking thru Google and It doesnt work like I thought 
Something as simple as this in your timer event: procedure TForm1.timCountdownTimer(Sender: TObject); begin if Now &lt; FTargetTime then begin lblCountdown.Caption := FormatDateTime('n:ss', FTargetTime - Now); end else begin timCountdown.Enabled := False; lblCountdown.Caption := 'Done'; // code that runs when countdown is done... end; end; 
Good old dirty hacks
By timer event I imagine you mean "OnTimer" I think its a bit more complex than your code. Lets say I set 2 minutes. I should set FTargetTime to Now + 2 minutes then run your snippet Thanks for the snippet. It gave me some ideas that I have to test.
Set your target time and enable the timer. That's all there is to it.
But the code should be (pseudocode): Targettime:=now() + numericboxminutes+numericboxseconds; Correct?
I don't know what numericboxminutes and numericboxseconds are. The set the target time to two minutes in the future, add System.DateUtils to your uses clause and try this: FTargetTime := Now + 2 * OneMinute; 
&gt; I don't know what numericboxminutes and numericboxseconds are. User would be presented with 2 NumericUpDown controls, one would be how many minutes he wants to countdown from and the other how many seconds he wants to countdown from.
I don't know which controls these are specifically, but assuming they have a Value property: FTargetTime := Now + (numericboxminutes.Value * OneMinute) + (numericboxseconds.Value * OneSecond); 
NumberBox sorry. I kept forgetting that for some odd reason Delphi does not have a numericupdown control. Your code still works and applies. Ill read it over tommorow, try to implement it and get back you. Thank you very much for the snippet.
It has [TSpinEdit](http://docwiki.embarcadero.com/Libraries/en/Vcl.Samples.Spin.TSpinEdit).
LMAO...Im laughing at logic, not at you, my helping friend TSpinEdit like you said exists and its what Im looking. I go to search for it and it doesnt show up. But there is something called [TSpinBox](http://docwiki.embarcadero.com/Libraries/Tokyo/en/FMX.SpinBox.TSpinBox) **which seems to do the exact same fucking thing** 0 logic.
Your code worked 100%. Modified it to my use and it does exactly what I wanted. Thanks
&gt; Set the timer to one second Is there a reason it jumps sometimes two seconds instead of one?
Setting your timer to something like 500ms might make the countdown smoother.
But wouldnt that affect the countdown? **EDIT:** Tested it. It isnt even noticable and it makes the countdown as you said: Smoother.
TSpinEdit is in XE2 under Samples. I can't remember if Samples are optional or if they are always installed. How did you search? There's a search box at the top of the tool palette. Edit: It just occurred to me that you are using FireMonkey instead of VCL, which is why you found TSpinBox instead of TSpinEdit. For what it's worth, XE2 was the first release of FireMonkey and it had issues. It wasn't until XE5 in 2013 that it really began to get stable.
Using the search box near tool palette. TSpinEdit shows nothing. TSpinBox does popup.
See my edit
Remember, the countdown depends on the target time. The timer is just updating the display, so a shorter timer won't affect the target time.
How about an occasional upvote, then?
I'd be curious what the vcl bug is 
Please explain in a different way, because I have no idea what you're asking. If you're wanting to set the value of the TNumberbox, then you would use something like aux.Text := '5'; // dunno what property needs to be set, not familiar with TNumberBox
I hope this is a sign that Embarcadero is gearing up to take web development seriously.
So they bought a company with a product that falls almost as far behind the time as Delphi. 
Can repost in English please? You can use Google Translate or another online translator. 
Backhanded Delphi comment aside, I'd be curious to know why you think that.
Are you sure about the "J := -1"?
I don't know how ArrayA is defined, but I bet setting its dimensions with a negative value (j := -1) would give you a range check error. And if range checking is turned off, it might return an access violation.
Nowadays react, angular and maybe vue are eating the JS world. Developers today think in their Paradigmen about the web. Not only regarding the technological aspects but also regarding their free(ish) and open nature. While ext is in parts more sophisticated than those, on the other hand it has a decade of "doing its own thing" while it never reached the brilliance of Flex (whose only fault was the dependancy on Flash). 
IDERA is where software goes to die. They have no development team (outsource everything to partners), don't care about maintaining/investing into the products, and just milk the company for the revenue. This was a fire sale and once they have consumed the technology, IDERA will slash operating costs to 0 and watch recurring revenue roll in. 
We'll see...
I've heard this before, but we have seen fixes and new features added since the acquisition. We'll see what happens, but Delphi doomsayers have a consistently poor track record.
another 1000-page book Why the size doesn't matter
Ill attempt. Lets say for the sake of argument, the property is text I have a object called "NumberBoxVar1". Right now its Text property is "6" aux:=FindComponent('NumberBoxVar' + IntToStr(1)) as tnumberbox; showmessage(aux.text); A message box would popup saying 6. Thats great and thats OK. We are reading values. Now I want to SET the value. Something like: (this code doesnt work/exist but I just want to explain it so you guys can understand): (FindComponent('NumberBoxVar' + IntToStr(1)) as tnumberbox).Text:=99; GetComponent(('NumberBoxVar' + IntToStr(1)) as tnumberbox).Text:=99; messagebox(NumerboxVar1.text); And it would show 99 instead of 6 How do I acomplish that, setting values?
Your code should work. Once you've set aux to refer to the TNumberBox object, then you can get and set any property values you like via aux. eg. ShowMessage(aux.Text); // displays 3 aux.Text := '5'; ShowMessage(aux.Text); // displays 5 In your examples you tried to set a string property to a numeric value, which will fail. Maybe you're not converting properly? Try IntToStr(99). Also - is aux declared as var aux: TNumberBox; If you have it declared as a TObject or something, then it won't have a Text property.
So I can modify the object thru aux???
"balloon"? What does that mean in the context of Delphi?
Yes. It sounds like you don't have a good grasp of Object Oriented Programming. Objects are created and have one or more references to them. In this case, there is at least one that the 'system' keeps to your TNumberBox object because it can find it through FindComponent. When you set aux := FindComponent(...), you're creating another reference. Only one object exists though, but it can have many references. You can make changes to the object using any reference you like, and those changes are visible to all other references.
I honestly have no clue. I had a delphi coder work on it a bit for me but they got too busy with class to finish it. I can show you the original source that I pulled it from if you are interested?
This doesnt work in all OOP languages. I did not know if Delphi supported it or not.
You can fix the actual problem in two ways: 1. Explicitly refer to TBitmap: Graphics.TBitmap.Create 2. Change the uses order so that Graphics comes after Windows uses Windows, Graphics; But to answer your hacky workaround, there **is** an alternative: //LoadLibrary(....); SafeLoadLibrary(....); 
&gt; 2.Change the uses order so that Graphics comes after Windows &gt; uses Windows, Graphics; Sometimes I just want to tell Delphi to go fuck itself. We actually tried the first method and while it worked for .Create, we had a issue with a function called LoadThumbnailFromFile I believe it was called. What is the difference between LoadLibrary and SafeLoadLibrary and is there a reason I should use one instead of the other? I do see that LoadLibrary returns a handle (whatever that is) and SafeLoadLibrary doesnt seem to do that and I need that handle to pass to another function.
Windows has an [Application Binary Interface (ABI) requirement that floating-point exceptions be masked.](https://docs.microsoft.com/en-us/cpp/build/fpcsr) all valid Windows applications are required to adhere to this basic fundamental requirement. This means that it is right, correct, and faster when application to perform y := x / 0; and check the result of the calculation at the end. The problem is that Delphi does not generate valid Windows applications. The first thing Delphi does during application startup is unmask floating Point exceptions. This means you can get some strange bugs in your code where someone else calls: ScrollHeight := pageHeight / windowHeight; And then sometime later in your code you perform: Taxes := subtotal * taxRate; And you will spontaneously get a division by zero exception. This is because Delphi is unmasked floating oint exceptions, and suddenly the leftover division by Zero from earlier now raises an exception now in your code. This is a long-standing bug in the Delphi compiler: [Borland compilers and floating-point exceptions](http://www.virtualdub.org/blog/pivot/entry.php?id=53) We've been trying for years to get Borland Imprise CodeGear Embarcadero Idera to fix their compiler http://qc.embarcadero.com/wc/qcmain.aspx?d=107411 But they insist on generating invalid Windows applications. But what is SafeLoadLibrary? ------- SafeLoadLibrary - saves the current floating Point exception masking flags - set the exception mask Flags to the correct windows requirements - calls load Library - puts the exception mask Flags back to their incorrect Borland defaults It's "safe" in that it doesn't cause the bugs of the Borland compiler to trip up external code properly written for the windows platform. 
I don't know if this will be helpful for you. But you can try [Process Explorer](https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer). Find your running program and then in properties check Strings. Maybe you will find your password.
My guess would be you lost the competition then? Tip: if it's not UPX packed, simply skimming over it with a hex editor might reveal where data starts. Reading through assembler code isn't going to get you anywhere UNLESS the debug info isn't stripped from the .exe yet.
While I appriciate your explaination and TIL, it doesnt really answer my question about the handle
Should work. A pointer is a pointer, and you can cast it any way you please. Has been working ever since Turbo Pascal 6 ;-) If you happen to get aux as, say, a TComponent, you can always typecast it to whatever you need to access all of its properties (when unsure, .InheritsFrom comes in handy) Cheers!
My money's on fake. (then again, my production machine is XP so perhaps they've added some new stuff in the API)
I think so too but if using none for window border, how can we automate Windows key for arranging Windows like start button and left arrow etc Thanks for replying
Balloon as in BalloonHints and/or popups?
You could always call PSTOEDIT from Delphi using [command line parameters](http://www.helga-glunz.homepage.t-online.de/pstoedit/pstoedit.htm#section_2) and parse the output.
&gt; I do see that LoadLibrary returns a handle (whatever that is) and SafeLoadLibrary doesnt seem to do that and I need that handle to pass to another function. You really should check again: **System.SysUtils**: function SafeLoadLibrary(const Filename: string; ErrorMode: UINT= SEM_NOOPENFILEERRORBOX): HMODULE; begin //...snip Result := LoadLibrary(PChar(Filename)); //..snip end; It returns the exact same thing as **LoadLibrary** returns, because it returns exactly what **LoadLibrary** returns.
so is there any other way to get the password? I can crack it but it won't give me the password.And no :v It's a challenge kinda,no time limit.
I don't understand the first graph :(
The first graph shows how many of the different versions of Delphi were ever used by the people taking the survey. For example, over 50% of the people taking the survey had owned or used Delphi 7. I don't know if it's significant that the three most recent versions have the highest numbers or not.
Thanks!
I prefer integrating it into my program
Is this a legit project offering? Sent pm days ago, no reply.
Vmware workstation is end of life. Try HyperV included in Win10. 
Its your best bet. Old languages don't have a lot of open source activity for old tools like this.
What competition? Can you point to the executable they specified?
I'd gladly buy a book on "OOP best practices". Most of the Delphi books I see is "here's how you add a form to your project, and here's how we drop a TButton on it". This is true of the Delphi manuals, too. I'd like to see something more in the realm of intermediate level (not advanced) stuff so I can go over the fundamentals of all areas of Delphi.
&gt; Most of the Delphi books I see is "here's how you add a form to your project, and here's how we drop a TButton on it". How hard did you look? * [Book! Book! Book!](http://glooscapsoftware.blogspot.ca/2014/10/book-book-book.html) * [Moar Books!](http://glooscapsoftware.blogspot.ca/2015/10/moar-books.html) * [Books Part 3 - This Time It's Personal](http://glooscapsoftware.blogspot.ca/2016/10/books-part-3-this-time-its-personal.html) * [Books - But Wait, There's More!](http://glooscapsoftware.blogspot.ca/2017/05/books-but-wait-theres-more.html) * [Oh Look, Another Book!](http://glooscapsoftware.blogspot.ca/2017/06/oh-look-another-book.html) 
It's a community named hackthebox.We have various challenges to solve.This is one of them.
And to which challenge are you referring?
Could have sworn I read on another page that it didnt return anything...Hmm.
As far as I see, the PSTOEDIT is a C library correct? I have a C library already into the Delphi program. I just dont know PSTOEDIT's functions
Easy pass in reversing section 
I was hoping to take a look at the executable to see if it's something obvious, like stored in a resource, but I see that you need to join.
Do join :D it's fun
Look around, there's tools to create interface files for DLLs. I just doubt you are going to find someone that's done the work already.. cuz its Delphi 
you may need to look into property editors, windows messages and obviosuly component development. for starters just take what you did in code already go to components -&gt; new component -&gt; choose a panel or another container component as ancestor enter a name for your custom class/component, what page it should be located in etc. and create a new unit and paste your code there. you can later compile your unit into a seperate package which can be installed and deinstalled but focus on finishing your component first. the newly created unit will be where you are working, imagine it like a VCL-Form file only that you can not access and design a form and that your constructor is not named formcreate you write a constructor, destructor and whatever you want to appear in the object-inspector at design time of other projects belongs into the published section like this: property MyProp:String read FMyProp write setMyProp; custom property editors will become relevant once you want to do complicated design-things or add collections to your component. everything you want to appear on the panel you just extended should be placed in the constructor. for example you want the property Image of type TImage to be always at the top of your panel. first you define a private member-variable and a published property that will access that variable Type TMyPanel=class(TPanel) private FImage:TImage; //private member procedure setImage(value:TImage); protected public constructor Create(); destructor Destroy(); published property MyImage:TImage read FImage write setImage; //property as seen in Object-Inspector end; implementation constructor TMyPanel.Create(); begin inherited Create(); Self.Width:=200; Self.Height:=200; FImage:=TImage.Create(Self); FImage.Parent:=Self; FImage.Align:=alTop; FImage.Height:=50; FImage.OnClick:=MyImageOnClickEvent; end; that's it, that is the general gist of it. windows messages will be relevant when you want to have even more custom behaviour without wanting to miss out on assigning your own event-handlers in design time of other projects, I made an Edit-Control once that you can assign a Dataset to and everytime you change the text it filters the dataset, WM_CHANGE or something was the message I used for that. If I had assigned the OnChange event to my EditControl instead of the message then I couldn't use the event for other purposes in other projects, because If I assigned it anew I'd lose the one I already had assigned to it. 
Is there a reason to use a panel instead of for example a rectangule? I was going to use that because I think it is easier to set/paint a background image. &gt; enter a name for your custom class/component, what page it should be located in etc. and create a new unit and paste your code there. &gt; you can later compile your unit into a seperate package which can be installed and deinstalled but focus on finishing your component first. This is a bit fuzzy to me. Lets say its a scordboard (it isnt but) should I put the name, unit, etc. as scordboard ? So each time I drag it into my main form it will be scordboard1, scordboard2, etc ??? 
You should choose a container class that derives from twincontrol. Twincontrol components have windows handles, everything that has a handle can recieve messages. Panels are already rectangular and function the same plus more. If you want a flat panel then simply set the bevels to none. You can also use a panel and it you put a rectangle in if you want. You can also use a timage that is aligned to the client panel and it will function the same as a background. Also if you gain access to the canvas property of a wincontrol then you also have your rectangle. When you go to components -&gt; new component then you are being lead through a component wizard. It will ask you which framework you want to use, foremonkey or vlc etc. Then which class you want to extend, afterwards it want to know what the class-name of your new component should be and where in the component-palette it should be located (Win32 tab for example). Once all this is done you get to choose wether you want to create this as a unit or as a package. When you want to register and install components into the IDE they have to be contained in a delphi-package. But you can create a unit and later create a package and put your unit in there. Once the unit is created you have your first component template. After this it is almost exactly like developing vlc-forms only without designer.
this is great 
Well they are laying all the Sencha developers off so make whatever conclusions from that you may. 
That would be terrible. Source?
Take a look at LinkedIn and twitter. Nearly all the developers are being laid off. It's on the Sencha forums. 
I'm not a fan of the outsourcing model. We'll see what happens.
[This thread](https://www.sencha.com/forum/showthread.php?377323-Sencha-sold-to-IDERA) on the Sencha forums is an interesting read. There seems to be a split between peoples' opinions of the product vs the company. It reminds me of Borlnd's final years where they gave up on their development tools and sold them off. I don't hear much from Borland these days, but Delphi had a resurgence and is alive and kicking. With any luck the same thing will happen with Ext JS. I am still really pleased to see Embarcadero finally starting to take web development seriously.
"But firing all of your people, these amazing people (some of whom had worked there for 5, 6, 7 years) who had poured blood, sweat and tears into the company and the community is… just really shitty. That’s not "taking care of your people"." -- https://www.akawebdesign.com/2017/08/29/fond-farewell-sencha/
lol DeDe. Did you really think an application written by some russian teenager in 2001 was going to give you all the answers? Try IDR (the Interactive Delphi Reconstructor), written by a guy who calls himself Crypto2011. It's also not anywhere close to perfect (nothing will ever be) but it's miles ahead of what DeDe ever had to offer.
How are you a programmer who doesn't know what a handle is?!?! Come on, man, pull yourself together. Have you just spent your whole life plopping TButtons onto forms with zero consideration as to how anything works? That being said, SafeLoadLibrary also returns a handle, just under the alias HMODULE. Both of those things amount to nothing more than a DWord on 32-bit systems, and a QWord on 64-bit systems. Personally I would recommend that you just always use SafeLoadLibrary and ignore LoadLibrary all together.
what if I want to use AVX2 instructions though oh yeah that's only possible in FPC while Delphi only supports the 16-year-old SSE2 instruction set at the highest
Wow, thanks. (Not.) What kind of idiot would possibly need a tutorial on something like this?
Yes. On windows it's literally just called FP.exe and can be found in the main binary folder where the compiler executable is. No idea why you'd want to though...
&gt; How are you a programmer who doesn't know what a handle is?!?! Im not a programmer and I hate programming. Im just that damn good that I can program too. &gt; Have you just spent your whole life plopping TButtons onto forms with zero consideration as to how anything works? Basically yes. 
I'll have to look again as I searched high and low. Maybe I just missed it, but i did try running "fp" in that directory, so that should've done the trick. I'm a Vim guy when on Linux, so I prefer to try to see if i like the language before doing all the nuances of a complicated IDE. I m mainly write console apps too, so an IDE is less important to me.
lol
The best Pascal documentation I have ever seen. Everything is explained with simple examples. Definitely a "must read" for all Pascal programmers.
Sounds like a good reason to stick with nVidia cards.
It's open source too! So feel free to contribute. (It's .NET C#).
The button is not likely to cause any problems. But you never know. But a Net program with a timer? To solve a problem in the Delphi IDE? Why not just a Delphi plugin? Sorry, I really don't want to offend anyone. But I think that's very funny. I had trouble with the hammer. Now I have tightened the screw with the frying pan:)
Haha! I made it in .NET just to spite Delphi. Taste of my humour there, I guess. I don't think it was the button, but rather how VCL / the IDE handles the drawing of the button. You'll probably notice greyish shadowing as you scroll, and this was accompanied by the super slow scrolling. :)
Feels a little like a time warp - shifting to Enterprise as Borland did. Maybe it's better this time around, with a shift in a few different directions at once to benefit everyone. Linux support on the cheaper subscriptions would certainly improve perceptions.
I have believed that the C/S and Enterprise SKU has been the minimum standard for professional development since Delphi 2, so I'm not too bent out of shape about certain features being introduced in Enterprise. That said, I think Linux support in particular should be included in all SKUs at the same level as Windows support. Not just in Professional, but in the free Starter edition as well.
There is a free course code in the article
2 actually are free
They should really all be free...
If you're in the market for a Delphi driver for MongoDB that doesn't depend on another framework (except maybe Delphi's own Variant type), please have a look at [TMongoWire](https://github.com/stijnsanders/TMongoWire).
Online HTML. Its editable, will help your organic search results and IMHO is how people expect to consume in today's day.
Would you say the majority of people prefer that? The big problem of course is that it requires Internet, so that could cause usability problems if someone doesn't have a signal or is at a remote location. I guess one way around it is to have a local set of help files and then switch to the online ones if there is a connection.
I always used PDF; at least it digests identical no matter where you read it.
If you still want to generate both a PDF manual and a Windows html-help (.chm) and HTML help from a single master document, I recomend Help+Manual it is worth the price. You may think it's rediculous, in which case you should just write help manually in html and don't complain. http://www.helpandmanual.com/products_hm_overview.html
Personally I **prefer** chm. The instant searching is what makes it work.
CHM is an old, dead, proprietary file format. There are two documentation formats of relevance today that you need: HTML to put your documentation online, and PDF for offline distribution. You can write your documentation in a markup language like RestructuredText and use [Sphinx](http://www.sphinx-doc.org/en/stable/) to generate documentation in a variety of formats and it won't cost you anything. I believe this is what RemObjects uses for their Oxygene docuementation.
There are plenty of documentation generators today that can generate documentation in many formats, including HTML. Paying $600 to over **one thousand dollars** is ridiculous. I don't need to write manual HTML and not complain either... I can use [Sphinx](http://www.sphinx-doc.org/en/stable/) and write in RestructuredText. I don't know what it is with Delphi documentation tools and GUIs either. What's the point of duplicating the word processor or text editor the user no doubt already has? 
You can also view the documentation on anything, including Android and iOS tablets. 
For some products, where .CHM outputs is desirable, I'm not aware of any way to target all three (PDF,CHM,HTML raw) simultaneously. Sphinx can't target CHM right? Delphi is a commercial tool. If you sell commercial tools that you charge money for, and Delphi makes sense, and .chm online help are necessary, I would argue, that H+M makes sense. If you don't, it doesn't. There is another pretty cheap option but I've never tried this: free or 99 euro, 299 euro. https://www.helpndoc.com/store 
Also the CHM format integrates nicely with native win32 app for context sensitive help. 
Windows is not old and dead, and the tools to build a CHM format help file is neither easy nor cheap, yet CHM is the relevant windows platform technique for local offline help. That being said major products like Visual Studio don't even use it. It's really every developer's call if they want context sensitivity and local offline help, in some reasonable view with an index. Pure html can do most of this with a local browser browsing offline files, but not all of it. 
&gt;Windows is not old and dead Off-topic, but I'd argue Windows stopped being relevant some time ago; even Stack Overflow shows half of developers aren't using Windows to develop with. Nothing new infrastructure-wise has even happened in the past ten years that's been closed-source - big data, noSQL, containers, etc. Google didn't even port their widely adopted deep learning neural network tool, TensorFlow, to Windows for more than a year and Facebook has yet to port the deep learning library they released to Windows. Cool stuff just doesn't happen on Windows anymore. MS is currently trying to add a package manager to Windows, trying to build a copy-on-write file system, getting rid of GUIs for Windows Server management, sticking a copy of Ubuntu in Windows, open-sourcing and porting Powershell and .NET Core... they're undeniably playing catch-up rather than leading. &gt;That being said major products like Visual Studio don't even use it. MS' last release of features for CHM was in 2001 and they announced they would no longer be adding features to it - in other words, it's a dead, proprietary, single-platform format. Single-platform closed formats are very much out of fashion today in a world in which people are as likely to be viewing your documentation on an iPad or Android phone as a desktop.
&gt;For some products, where .CHM outputs is desirable, I'm not aware of any &gt;way to target all three (PDF,CHM,HTML raw) simultaneously. Sphinx can't &gt;target CHM right? While it's not a direct builder option, Sphinx has an HTML Help Builder. "This builder produces the same output as the standalone HTML builder, but also generates HTML Help support files that allow the Microsoft HTML Help Workshop to compile them into a CHM file." HTML Help Workshop is available for free. 
That's fantastic. I will check it out. 
While I agree with you, and I personally like using Linux and Mac more than I like using Windows, as a developer, there is a lot of money to be made, and I earn a tidy sum myself, writing commercial apps which run on windows. These apps even have licenses that shut off when the customer stops paying, much more restrictive than anything on your average Linux and Mac app world. It's great business. 
Jeez, not standardizing on a mean or mern framework is a good way to not have any web dev skills. Not having web dev skills is a good way to never have a job.
MSDN: [HtmlHelp function](https://msdn.microsoft.com/en-us/library/windows/desktop/ms670172\(v=vs.85\).aspx)
Yep. I am a Grade 12 student in south africa and we were just starting to get to now Java(In grade 10 ) and we were told to stop and wait for Delphi 2010 licenses. The language is not bad. The only thing I find sad is the overly priced IDE. If we whould attempt to write software after school we whould simply use a other language.
You know what's cool? Serving up web content from a DataSnap REST application server.
There's finally (again) a [free option](http://glooscapsoftware.blogspot.ca/2017/04/getting-started-with-delphi.html).
Yes. I've seen the cost of RAD Server, not to mention the Windows license... https://www.embarcadero.com/app-development-tools-store/rad-server It has ZERO usefulness outside of making LEGACY code restful. You are an Emb MVP to evangelize the products. Show me that Emb brouchure again that shows more countries using their product which exist in the world? http://online.flowpaper.com/79e6075d/Delphi22Magazine/ Page 4 says 201 countries use Delphi. There are only 195 countries. Fake News. It also summarizes the lies on page 53 with 3m devs in &gt; 200 counties. Fake News. 90 of Fortune 100 companies". Rght, Sure. http://www.worldometers.info/geography/how-many-countries-are-there-in-the-world/ You do not represent a truthful organization.
Man. Jump on learning Java and Javascript. Delphi was cool in the early 2000s to make WinAPI dev easier, but it doesn't exist in today's web world. Don't believe me? Google programming language yourself and take your own career in your own hands. EMB just wants to sell large site licenses and they will absolutely lie to you.
Yea everyone is moving to webapp systems
I didn't mention RAD Server. Seems like a non-sequitur. On the other hand, I'm taking advantage of DataSnap in new development, so your legacy comment isn't very accurate. I was a Delphi supporter long before I became an MVP, so your implication is incorrect and more than a little insulting, anonymous detractor. There aren't 201 countries in the world, so at least you're right there. Good on ya!
Not sure how many people are jumping on to learning Java, though.
_Not sure how many_ _People are jumping on to_ _Learning Java, though._ &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^- ^bmcgee ------------------------------ ^^I'm ^^a ^^bot ^^made ^^by ^^/u/Eight1911. ^^I ^^detect ^^haiku.
The topic at the local Delphi user group last night was web development using Delphi. Interestingly, I've been working on a bunch of projects with at least some web component to them. Anyone doing software development would be doing themselves a favour by having at least a working understanding of web development.
Just making a point Unintentional haiku Now isn't that nice...
Java is one of the top languages for close to 15 years. If you don't know it, you should *jump* on it, as this is how you get a job... knowing languages businesses use. https://www.tiobe.com/tiobe-index/java/ Delphi usage is basically a rounding error compared to the top 10. https://www.tiobe.com/tiobe-index/ 
Haha, [Tiobe](http://glooscapsoftware.blogspot.ca/2017/02/delphi-programming-index.html). The final straw for me was when the Java install includes third party junkware apps and wants to change my browser settings. Oracle is getting a little litigious, too. Reminds me too much of the SCO business model. Java is declining in popularity, but if you want to jump in now, please feel free. You're clearly not happy as a Delphi developer. Maybe you'll have better luck with something else. I'm using more JavaScript in addition to Delphi, but if I were going to jump in to another programming language with both feet, C# would be way higher on my todo list than Java.
&gt; sequitur It's great not have a job as a web developer. In IT you make good money with old things ;). I don't think that web development experience does have anything to do with Delphi or Windows programming at all. There are times in which IT technologies tend to harmonize or simply spread. Delphi developers very seldom use one language or technology stack. Usually those developers who know only one adhere to their beloved one. If you only know plain C/C++ development on Windows you will not succeed in providing marketable results. One day the music will end, the demons will rise and hut you down (Roterfeld, Blood Diamond Romance) Web design and development is already in the process of being outsourced to regions in Africa where a solid base for experiencing a certain golden age for IT people compared to the amount of a lousy avg. income here. Simply dependent on the price level. It's just fair that some people who really finish one web development job after the other gain about 3k USD which is a lot in this region. (similar to SAP consultancy at it's peak here - relative to the cost of living). Let them enjoy their gold rush.
When you are at our age will very likely know a lot more technologies than Java and lot more than web technologies which already peaked a few years ago. In that area you are at the stage of 'Restelsaufen' which is a term in Austria for drinking what's left in the glasses at curfew from all glasses. Concerning Java. The language is one thing, but the class libraries are another story. I do have my doubts that you will succeed with just knowing the traditional Java core libraries. In our area you have to be a Java expert to become a 'developer/consultant'. Java already reached the level of having to know what is really required at a certain company and/or business domain. Otherwise you simply don't pay. The story is maybe a different one in South Africa but I doubt. On the price. If I think back of the first Java tools before Eclipse was released ... Delphi even today is pretty cheap. Other technologies will come and tools still cheap today will reach the long tail too.
&gt; It's great not have a job as a web developer. I wouldn't want to only be doing web development, but it's a very useful skill for developers to have in their tool chest. Especially if you are writing multi-tier systems where web makes sense for a portion of it. It's also interesting to me, which automatically bumps it up on the todo list. 
TL;dr "because I'm in the MVP network or I'm directly employed by them" https://www.embarcadero.com/embarcadero-mvp-program
"Or I have 18 million lines of code and can't possibly port it all to something else." Nobody chooses Delphi *today*; they chose it a long time ago and now they're stuck with it for better or for worse. Let's take one from Jens Fudge: "I have been using Delphi since the first version came out back in 1995.... So, I was hooked, and I have been using Delphi ever since." Basically you never learned another language. &gt;But why do I continue using Delphi? There are multiple reasons. &gt;One thing is, I know my way around Delphi now, See above... it's all I know. &gt;It's blazingly FAST. Both compiling the projects, even large projects, even &gt;really massive projects are compiled very FAST That's because it's a very poor ancient single-pass compiler missing either SIMD or optimizations depending on if you use the 32bit or 64bit compiler. This is the time of continuous integration and build servers anyway; I'm not sure why compilation speed should be an important factor today. If it was really important you should be using Ruby, Perl, or Python anyway where the compilation time is about zero. This is more like starting from the conclusion and then trying to find reasons to justify it. &gt;It's built on a technology that is robust and stable. Insert your own jokes here. I'm guessing Jens considers Java and C++ to be fragile and unreliable? &gt;Delphi... is Delphi, keeps on evolving and just gets better and better. If Delphi were evolving it would be... Oxygene. &gt;In the Delphi box I have all the language features I want So long as you don't want (decent) memory management, type inference, tuples, list comprehensions, strings in case statements, tuple packing/unpacking, named parameters, generators, slice notation, design by contract, lambdas, etc. then sure. &gt;the RTL *) as well as the VCL *) keeps growing bigger and bigger. Of course C#, Java's and even Python's runtime libraries dwarf Delphi's today. Delphi's runtime library doesn't even include such developer essentials as logging, mocking, unit testing (native, not third party), documentation generation, HTML parsing, arbitrary precision arithmetic, profiling, etc. &gt;There is also the component based development. Its so easy to drop &gt;components on the form My nephew is learning how to code like that too. He's 6. &gt;Delphi Community is also just so great. There are quite a few, at least in &gt;Europe, Delphi conferences going on Where the biggest tends to draw about 60 people and there are none in America. Python can draw in 2,500 and Java several times that. Some of them aren't even senior citizens! No mention of jobs either. All that text, and there's still not a single line that really says why they choose to spend lots of money to use an unpopular language (and all the trouble that brings) vs. one of the more popular languages (other than bringing up Silverlight in the suggestion that everything else is just a fad). It all boils down to these are people who simply have never looked at anything else. Oh wait... as you noted, this is another MVP so they get Delphi for free. :-( There is a case to be made for Delphi... but it needs to be made by people like David Heffernan, Craig Stuntz or Warren Postma, who have demonstrated knowledge of many languages and can meaningfully compare and contrast them. Also Arnaud Bouchez and Eric Grange. In fact, I think 4 out of those 5 aren't even MVPs despite having contributed a great deal to the community. Interesting that I've seen Arnaud, Eric, David and Warren at least be critical of Delphi or Interbase on occasion. Agree with them or not, you always know their opinions are their own. EDIT: Also, Marco's summary didn't actually summarize anything or identify the patterns he claimed he saw. You're the only one who provided a meaningful summary. :-) 
I especially liked [this one](https://delphibydesign.com/why-i-choose-delphi/). Ray Konopka also has some great stories about how he [uses Delphi at Disney](http://delphi.org/2015/03/an-interview-with-ray-konopka/). If you ever have a chance to see him speak in person, I recommend it.
That's what I ment. Of course web development is useful skill in our case but I would not want to be stranded in a job where only one skill is required without any vision to move further. That's why those guys very likely learn Java. There is absolutely nothing wrong with that. It makes no sense to blame Delphi for not being well suit for the web from the silver bullet's perspective and arguing for another silver bullet.
Why would they want to provide a method for customers to see problems other customers are encountering with the products? /s its been an issue, literally ten years now.
Apparently it was brought up on Google Plus, Marco Cantu was paged, he said he'd inform someone, and now it's fixed. It's hard to believe no one at EMBT was aware the forum wasn't working. Call me crazy, but maybe if any of them actually read it once in a while they'd notice these things or be inclined to keep it working.
From what I've gathered in the past, there is one employee keeping it together with spit and bubble gum and it's essentially a volunteer task. They had no interest in rewriting it or upgrading the hardware to make his job easier either. They have new forums that work but no one uses them. All the content and active posters are on the old forums, but that forum barely works. And most of the old-time posters are actually still posting through USENET clients believe it or not. 
Usenet aka nntp? I guess i thought they dumped that, early 2000s... i used to keep a local repo of the entire forum, so i could actually search the content. 
So much activity on Google Plus. Wish the UI was better, so dang hard to search.
Found a solution for anyone else looking, ComponentAce's ZipForge.
Zlib streams would be the most obvious I think. 
The JCL has some great wrapper classes for them, maybe you could use those
I agree! Pascal is such an awesome, readable, fluid langauge... it's really unfair C++ has remained so dominant, and VisualBasic and PHP got so much traction. Borland Delphi was so affordable back in the day while VisualBasic Studio had ridiculous pricing. Now if we just had some articles on coding styles and practices, I'd be happy. Every single Delphi book I pick up is 200 pages of explaining the GUI and 100 pages of explaining database objects.
&gt; Now if we just had some articles on coding styles and practices This is the topic of our next user group meeting. It's part of our "Back to Basics" series that will cover a bunch of the things you can do to when setting up a new project from scratch. I can't wait for code formatting to come up. It might get heated. :) 
Everything about this comment resonates SO hard with me. 
&gt; agree! Pascal is such an awesome, readable, fluid langauge... it's really &gt;unfair C++ has remained so dominant, and VisualBasic and PHP got so &gt;much traction. Borland Delphi was so affordable back in the day while &gt;VisualBasic Studio had ridiculous pricing. We're not back in the day though... now you can get Visual Studio for free (that comes with a whole host of languages) and Delphi costs $1400+. C++ has also grown, becoming very powerful and performant and not controlled by a single corporation (that periodically gets sold to other private companies). And being historically tied to Windows didn't help once OS X and Linux become much more popular among developers (Stack Overflow surveys suggest 50% of developers today develop on one of those two). &gt;Now if we just had some articles on coding styles and practices This ties back in to your claim that it's a readable language. Culturally and historically the community hasn't put much emphasis on style or best practices, which decreases its readability. You have to really hunt to find the Delphi style guide on Embarcadero's website, and it hasn't been updated in ages as it still references Borland and CodeGear. Worse, there is nothing that covers features introduced this decade (generics, anonymous functions, etc.) In fact, the visual RAD style tended to encourage bad programming practices (putting logic in on-click events being the most common). Similarly, the community was very late to adopt version control because it wasn't "in the box", late to unit testing, and there hasn't been an emphasis on high quality documentation since the days of Borland printed manuals. &gt; Every single Delphi book I pick up is 200 pages of explaining the GUI and &gt;100 pages of explaining database objects. Many remaining Delphi developers are still maintaining legacy front ends to database apps, which probably explains this. That and there aren't many new Delphi books at all. You might want to check out some of Nick Hodges' books as they tend to focus on modern Delphi features and general object-oriented programming issues.
This is another of these articles that don't actually sell the language. We learn that it has types and OOP. Unless you're using a pure functional language, so does everything else. When I pointed this out, the author insists it's more of a "while Pascal is still usable" essay, which again isn't very inspiring. I still want to see a prominent, non-MVP member of the community with knowledge of several languages write one of the these articles. You can't answer "Why Pascal?" without also answering "Why not C#? Why not C++? Why not Java? Why not Rust or D or Go?" despite what the author claims. Actually, one of the people I suggested write one of these, David Heffernan, commented on this article and tore apart the claim about Delphi being as fast as C++ and how poor the benchmark cited was. He's the guy I want to see write one of these articles more than anyone else (for those who don't know, he's famous for answering almost every Delphi question on Stack Overflow). 
Here's what I learned twenty years ago using Delphi. Nobody else will touch it for support. You wrote it in Delphi, you support it. Customers didn't want it written in Delphi when they wanted the source code. I had to rewrite a Delphi control panel app in C++ with MFC for one customer. Borland's QA was awful. So where is Delphi now? Borland -&gt; Codegrear -&gt; Embarcadero -&gt; Idera. Yet another attempt to be cross platform - I remember Kylix and how that ended. Now I understand all the team developing this new buggy unfinished version of cross platform have all been sacked, leaving what? I stopped paying for the subscription. Why pay for something that seems buggy and unfinished? Object Pascal shares a similar problem to C++. It has the same definitions in two places. Worse though is the requirement to declare all variables outside of code in var statement. That's going back to C. C++ doesn't have that restriction. I code in C++ and C# nowadays. I've come across a number of legacy projects - some with MFC, some with OWL and one with VB6. There just is ZERO acceptance of Delphi as a serious language.
&gt; Actually, one of the people I suggested write one of these, David Heffernan, commented on this article and tore apart the claim about Delphi being as fast as C++ and how poor the benchmark cited was. Got a link? (And did he also compare it with Free Pascal?)
If there's video of it I'd be interested to see it. Now that I think about it, there might be some similar content on YouTube, I just need to find it.
What is your opinion on Lazarus?
&gt; now you can get Visual Studio for free (that comes with a whole host of languages) Seriously? I'll have to take a look as I need to get up to speed on some of the other languages. Any recommendations on which language most people go for in Visual Studio? C++?
It depends on your use case, but often it's better to implement the actual "business logic" (can also be game logic etc.) in its own class and/or unit, and only call the methods/properties of that class. This keeps things clean and ordered; you can then for example use the class even without a GUI.
I tried it on Linux. Never seen so many accvios.
&gt; Got a link? It's in the comments of the quoted article. David Heffernan's criticisms are based on experience and have at least some basis in fact. Joseph Mitzen's (alcalde), [not so much](https://www.reddit.com/r/programmingcirclejerk/comments/1xz0da/epic_delphi_rant/). These "[Why I use Delphi](http://blog.marcocantu.com/blog/2017-october-why-choose-delphi-summary.html)" posts really seem to wind him up, which is fun.
We don't record these, but I might blog about some of the things we talk about. It will be an open discussion on things like IDE settings, suggested project folder layouts, setting up an empty unit test project and a build script, source control strategies, naming conventions, etc. All the things that make sense to have in any non-trivial project from the get-go, giving you a good, clean starting point. Similar to how you start cooking something or a project in a shop. Have your tools and materials prepared when you start so you don't waste time looking for them as you go along, and then cleaning up afterwards. Work clean. Which reminds me, I need to tidy up my desk. You can pick up bits and pieces from [CodeRage](https://www.youtube.com/playlist?list=PLwUPJvR9mZHhduLqFX352uV1APPIRAu1h) and [Skill Sprint](https://www.youtube.com/user/EmbarcaderoTechNet/search?query=sprints) replays, but I don't know if I've seen a comprehensive blog or webinar on the subject. One of the coolest things I saw recently was watching Cary Jensen, Nick Hodges and Ray Konopka roll through a bunch of their favourite tips and tricks at [Delphi Developer Days](http://www.delphideveloperdays.com/) last year. 
&gt; The onClick should call a function? So I can learn, I am curious why that's a better idea. Or use [actions](http://www.blong.com/Articles/Actions/Actions.htm), which call a method, ideally in a separate unit. Separating your business logic from your UI makes it less susceptible to breakage when changes are made to an application. It also has the benefit of making your business logic easier to reuse and easier to test. Ideally, it would be done the other way around where tests influence how you write your business logic and separation of concerns is a natural side effect, but that's [another discussion](http://agiledata.org/essays/tdd.html).
For native application development on Windows, interacting with the Windows API, and COM, all other languages are terrible. - calling COM from C is a nightmare - COM from C++ is a verbose letter soup - calling native API from C#, Java requires tedious, cargo cult translations of header files Delphi has the best COM, and DLL function calling support of any language. And every other language gets strings wrong. They make them (hopefully) null terminated run of characters, or make them immutable.
Couldn't agree more, I stopped doing any Delphi dev around 10 years ago, it was let down after let down. I still have a fondness for Delphi but honestly these days it's no longer viable unless you're happy to pick up legacy work, even then I can't see it being very lucrative.
Oh no *shudder* - please don't call the code quality police - I'm too pretty to go to jail :-D
&gt; there aren't many new Delphi books at all. Well, there are a few. [Book! Book! Book!](http://glooscapsoftware.blogspot.ca/2014/10/book-book-book.html) [Moar Books!](http://glooscapsoftware.blogspot.ca/2015/10/moar-books.html) [Books Part 3 - This Time It's Personal](http://glooscapsoftware.blogspot.ca/2016/10/books-part-3-this-time-its-personal.html) [Books - But Wait, There's More!](http://glooscapsoftware.blogspot.ca/2017/05/books-but-wait-theres-more.html) [Oh Look, Another Book!](http://glooscapsoftware.blogspot.ca/2017/06/oh-look-another-book.html) If I remember correctly, I first learned about Dalija's book from you. I'm surprised you didn't remember.
&gt; Nobody else will touch it for support. I've worked on a bunch of legacy Delphi projects to fix bugs, add new features and generally bring them up to the latest version of Delphi. I like to call this "software rehabilitation". &gt;Yet another attempt to be cross platform You know what they say; Third time's a charm! &gt; I remember Kylix and how that ended. Yeah, that sucked hard. &gt; Customers didn't want it written in Delphi when they wanted the source code. Sometimes, but the source is included with almost all of my Delphi contract projects. I just document any third party components that are used and include a nice, clean build script. &gt; Worse though is the requirement to declare all variables outside of code in var statement. That's going back to C. C++ doesn't have that restriction. What? I love that! Picture trying to track down a bug in an irresponsibly long method in a legacy project or something written by a colleague (you know who you are...) with lots of variables declared inline. Sometimes close to where they are used, but usually not. The one exception I might accept would be for loop variables. &gt; I code in C++ and C# nowadays. Been there. More C than C++, but I really like C#. C# and Java were my fallbacks for Delphi, but I've kind of soured on Java since Oracle started including junkware in the Java installer. That and the suing customers thing. &gt; I've come across a number of legacy projects I know, right? It's like I was saying earlier. Half of my current projects are new development, and the rest are legacy projects written by someone else. The oldest are usually Delphi 7, but I'm talking to someone about bringing a Delphi 3 project up to date. Cool! &gt; There just is ZERO acceptance of Delphi as a serious language. Well, some people certainly invest a lot of time and energy trying to convince people of this. My experience is different. I suggested once that any list of interesting or useful applications would include at least some written in Delphi and jokingly called it [Hanselman's Law](http://glooscapsoftware.blogspot.ca/2017/04/something-something-delphi-something.html). Some of the applications in the list are old. Others are more recent, and a lot of them are still receiving updates. I even stumbled across some applications written using Lazarus. Nice! As a kind of corollary to Hanselman's Law, there's a good chance the average Windows PC has at least some applications that were written in Delphi (or C++ Builder or Lazarus). Anyone that's curious can [check for themselves](http://glooscapsoftware.blogspot.ca/2017/05/software-made-with-delphi-how-do-you.html). 
&gt;Object Pascal shares a similar problem to C++. It has the same definitions in &gt;two places. That's a relic of Delphi's ancient single-pass compiler design, from an era in which memory size was measured in kilobytes. &gt;Worse though is the requirement to declare all variables outside of code in &gt;var statement. That's going back to C. C++ doesn't have that restriction. Even then, it's a limitation going back to C89 / ANSI C. C99 doesn't impose this limitation. As one Stack Overflow user put it, &gt;Grouping variable declarations at the top of the block is a legacy likely due &gt;to limitations of old, primitive C compilers. All modern languages &gt;recommend and sometimes even enforce the declaration of local variables &gt;at the latest point: where they're first initialized. Because this gets rid of the &gt;risk of using a random value by mistake. Separating declaration and &gt;initialization also prevents you from using "const" (or "final") when you &gt;could. I'm more inclined to liken it to COBOL, which has enforced "divisions" like Delphi: $ SET SOURCEFORMAT"FREE" IDENTIFICATION DIVISION. PROGRAM-ID. Multiplier. AUTHOR. Michael Coughlan. * Example program using ACCEPT, DISPLAY and MULTIPLY to * get two single digit numbers from the user and multiply them together DATA DIVISION. WORKING-STORAGE SECTION. 01 Num1 PIC 9 VALUE ZEROS. 01 Num2 PIC 9 VALUE ZEROS. 01 Result PIC 99 VALUE ZEROS. PROCEDURE DIVISION. DISPLAY "Enter first number (1 digit) : " WITH NO ADVANCING. ACCEPT Num1. DISPLAY "Enter second number (1 digit) : " WITH NO ADVANCING. ACCEPT Num2. MULTIPLY Num1 BY Num2 GIVING Result. DISPLAY "Result is = ", Result. STOP RUN. There hasn't been a single new statically typed language introduced since the start of the century that doesn't use type inference. It's even been added to older languages such as C++. This alone makes the language look bizarrely dated to new, young developers. &gt;Customers didn't want it written in Delphi when they wanted the source &gt;code. Enterprise isn't going to trust mission-critical code to a single-vendor language with few developers left that has been in four different hands over 10 years. That alone disqualifies it regardless of the merits of the language. 
As I've noted before, I live a stone's throw from New York City across the water. Dice.com lists only one Delphi job within *200 miles* of my location! That's well within the range of Wall Street, the state capital, largest city in state, HQs of two pharmaceutical firms, USA HQ of Panasonic, HQs of Toys R Us and Bed Bath and Beyond, etc.I can just imagine how bad it must be if one lives in less urban/industrial areas. 
&gt;For native application development on Windows I guess the question has to be - why does a Windows application need to be "native"? (In a sense, .NET *is* the "native" way of doing apps for Windows now, or at least MS wishes it to be). &gt; interacting with the Windows API, and COM, all other languages are &gt;terrible. It works just fine in Python. import win32com.client import tkFileDialog # Launch Word MSWord = win32com.client.Dispatch("Word.Application") MSWord.Visible = 0 # Open a specific file myWordDoc = tkFileDialog.askopenfilename() MSWord.Documents.Open(myWordDoc) #Get the textual content docText = MSWord.Documents[0].Content # Get a list of tables listTables= MSWord.Documents[0].Tables &gt;Delphi has the best COM, and DLL function calling support of any &gt;language. Absolutely not. Languages like Python were designed to be "glue languages" with the purpose of binding libraries from other languages together. Delphi was not. It's not exactly easy to call object-oriented C++ from Delphi, is it? Python has means of binding to or wrapping C, C++, D, Matlab, Octave, R, Fortran, C#, Java, PHP, Perl, node.js, lua just off the top of my head. That's not getting into things like Cython, which lets you mix/inline c++ code with Python, or Jython or IronPython, implementations of Python for the JVM or .NET. Basically today you write your main application in as high a level a language as possible, test, profile, and rewrite bottlenecks (if any) in a lower-level language (generally C or C++). You step down to C++ today, as opposed to Delphi which steps down to raw assembler. &gt;And every other language gets strings wrong. They make them (hopefully) &gt;null terminated run of characters, or make them immutable. Immutable strings are backed by computer scientists, while Delphi's string is backed by... um.... Marco Cantu. :-) I don't think Marco is more correct than people with PhDs. There are many reasons for immutable strings: https://stackoverflow.com/a/22398222/2128279 
I'm sorry if I wasn't clear. David's comments were in the comments section of the article itself.
&gt;&gt; now you can get Visual Studio for free (that comes with a whole host of &gt;&gt;languages) &gt; &gt;Seriously? Seriously! The terms are these. If you're an individual, or a business that makes no more than one million dollars a year and has fewer than 200 (or 250, I forget) PCs, you can get up to 5 free copies of Visual Studio Community Edition, which is essentially Visual Studio Professional. Needless to say, that covers most Delphi users today (one poll on a Delphi blog found that 70% of readers worked in companies with 1-5 Delphi developers). This is why I thought it was HUGE when MS made this move. Embarcadero did nothing in response except announce a start-of-year price **increase**. :-( It took 18 months for them to decide to make the starter edition of Delphi free, but that edition is crippled - all the way down to code completion being turned off in the IDE! Meanwhile, VSCE is the full VS product. Worse, EMBT made Linux available as a target only in the Enterprise ($3500USD) edition; VS added C++ Linux support to Visual Studio Professional/Community Edition. That means you're getting Linux support for either free or $500, or 1/7 the cost at most. It's a huge difference and makes it absurdly hard to recommend Delphi to anyone anymore based on cost alone. It's not like Delphi Enterprise gives you $3000 more value over VS Pro. As I'll explain in a moment, quite the opposite in fact. &gt;I'll have to take a look as I need to get up to speed on some of the other &gt;languages. Any recommendations on which language most people go for &gt;in Visual Studio? C++? In my opinion Visual Studio is trying to give a developer one of every *type* of language they'll ever need. You have: * a managed language: C# * a "bare metal" langauge: C++ * web/internet languages: Javascript, Typescript, ASP.NET * a functional language: F# * a dynamically typed language, Python * interactive analysis - supports using R and Python in an interactive, Matlab-like notebook format In addition, VSCE can target the Unity game engine for cross-platform and mobile gaming. MS also bought and then **open-sourced** Xamarin, which means you can also target cross-platform mobile for free too! You can target Linux via C++. Oh, and frustratingly enough, despite being a competitor, there is now [a native version of Visual Studio for the Mac](https://www.visualstudio.com/vs/visual-studio-mac/). There's no sign that Delphi ever intends to run on anything other than Windows. So the question isn't really which language you should try, but what you want to do with it that will inform your choice. You've really got every kind of language you could need in one product for free or $500 while Delphi Enterprise wants $3500 for C++ and Object Pascal. &gt;&gt; putting logic in on-click events being the most common). &gt;The onClick should call a function? So I can learn, I am curious why that's &gt;a better idea. There's a design idea called [MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller) - Model - View - Controller, which stresses separating the core functionality from the GUI from the control logic. This makes it much easier to reuse code and also allows the different parts to be worked on simultaneously by different developers. Marco Cantu mentioned some related issues in a blog post he wrote a long time ago: https://edn.embarcadero.com/article/10463 
[removed]
right click and click view as form
alt-f12
I know someone in the "Delphi is dead" crowd is going to have a field day with this, but it won't make up for the sad, lonely years they've spent trying to convince the world that Delphi is going to die any day now.
https://insights.stackoverflow.com/trends?tags=delphi
Some people who make a passtime of trolling Delphi groups used to quote the Tiobe index, but it doesn't really fit their doom and gloom narrative any more. So this will resonate for a little while.
Honestly I shouldn't have trolled, and I feel sincerely bad about it. But there are a number of other metrics, including [Google Trends](https://trends.google.com/trends/explore?date=all&amp;q=%2Fm%2F01z1nj), that fit with a decline in Delphi interest. (Delphi is certainly radically underrepresented in GitHub activity). I'm honestly interested: what story fits these together with the hypothesis Delphi isn't in decline? (PS I don't think Delphi is "about to die"; it's almost impossible for a programming language to die as long as legacy codebases need to be maintained. But I think it's undeniable that some, including Delphi, are in a long-running decline in % of programmers using them. Whether that decline lasts for years or decades is sort of beside the point).
&gt; Honestly I shouldn't have trolled You weren't the particular troll I had in mind. :) There's no denying that there are fewer Delphi jobs than say C#, and there was a definite quality issue after Delphi 7, but that's not the whole story. &gt; I'm honestly interested: what story fits these together with the hypothesis Delphi isn't in decline? When Embarcadero bought CodeGear in 2008, they reported several years of impressive year over year revenue increases, both from existing customers and new sales. They invested heavily in the product and (finally) in marketing. Almost as a joke, I looked at how much of the software mentioned on Scott Hanselman's Tools List were [written in Delphi](http://glooscapsoftware.blogspot.ca/2017/04/something-something-delphi-something.html). Some old, some new, and many are still in development and being updated. There was a follow-up piece about Delphi software in the wild and [how to check](http://glooscapsoftware.blogspot.ca/2017/05/software-made-with-delphi-how-do-you.html). Make sure you check out the additional links. Niagara Falls isn't that far away and the lights are really cool. Anecdotally, Delphi wasn't the first language I used professionally or the only one I use now, but I have been making a living with it since 1995. Right now, more of my paying projects are new development than working with legacy software, and I'm fairly busy. I'm also an MVP. Some people might suggest that this means that my opinion is bought and paid for, but those people have no idea what they are talking about. So that's at least one data point. 
What's the deal with so many dislikes? Is it cool to hate on Delphi, or are people grinding axes against Embarcadero/etc and the price models?
If you haven't read the [entire post](https://stackoverflow.blog/2017/10/31/disliked-programming-languages/) yet, it has more nuance than the title. And then contribute by filling in your own [developer story](https://stackoverflow.com/users/story/join). 
No. You didn't post any code. 
It's probably two things. One, as you noted, ex-Delphi developers who wouldn't want to go back. Second - it's perceived as being old and outdated (and incredibly expensive). It really makes the case that Embarcadero is not about to expand the number of Delphi users any time soon. 
Where would I find the code? I have the data files and corresponding tables. Whats the file ending for the code location? 
I don't know, you have the project files. Usually the source code is stored in .pas files.
Something tells me you didn't write this application, you just post on the Delphi forum because it's got the name "delphi" in the path didn't you? Usually, opening the project and looking for "Invalid Directory. Directory:" will get you to the piece of code that throws this error. From there you should be able to deduct who called it and more importantly, why "c:\delphi\staples" was passed as a parameter. Could be hardcoded, could be a config file, could be a fallback mechanism by lack of a config file or registry key- who knows?
Yup! you are correct. I am trying to get install this program (made around 2000 from delphi 4) onto another computer that runs on Windows 7. Proving to be quite difficult without proper Delphi/coding knowledge. Google only tells me so much. 
AH! In that case, I think I have a hunch. Copy its old registry keys to the new computer's WOW3264 node or whatever it's called. Microsoft screwed up. Didn't exist at the time depli4 was around, isn't backwards compatible. If you don't have any code whatsoever you're looking at compatibility issues between operating systems, and the registry is one of them. Other options are directories it can no longer access because microsoft introduced bogus security and things you could do on XP no longer work on Vista and later. Are you really *really* sure you cannot find the code of this application anywhere so we can actually fix it, recompile with a Vista+ aware compiler and, you know, do something about it? As far as I'm concerned, without code, it stops being a programmer problem and becomes a sysadmin problem. Good luck!
Oh my... you are better then google search! Thank you so much for your help. I did install delphi 4 into c:\program files, but the database files are in c:\. Maybe I should reinstall delphi 4 and leave it outside the "program files" also. The application works in conjunction with Database Desktop. I will try the registry keys tip you suggested tomorrow also, and see if i can find the code so it can be fixed. 
It's possible. I'm not sure how the Idera model is going to affect things long term. Then again, people argued that Delphi was in sharp decline even when Embarcadero was reporting big year over year revenue increases, so facts don't always factor in to the "Delphi is dead (or dying)" argument. Some of the people who make (very) long term hobbies of being anti-Delphi cranks are more obsessed with the product than some of the people who make a living with it, which just makes me chuckle.
It might also be easier to just emulate XP with VirtualBox, and run the program from there.
Right click and Run as Admin. Downgrade to WinXP. Fix the 17 year old software. Is it really fair to expect something almost two decades old to run? If it was a Apple product, we wouldnt.
It's because [Windows Maps the executable and our check the version information](https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843). And because the image has the run from SWAP flag, it has to bring the entire image across the network before it can read the version information. You can simulate the effect of swap run, without incurring the start-up delay, by spinning up a thread that touches every page in the module. Windows will bring the page across the network and cache it in the page file
&gt; Is it really fair to expect something almost two decades old to run? No. I'm four+ decades old and I don't want to run either.
Hehe. Me neither. 
By that chart C# and Perl are also dieing on StackOverflow. https://insights.stackoverflow.com/trends?tags=delphi%2Cperl%2Cc%23
I think it's a matter of just accepting it. I love Delphi but I haven't coded professionally in it since 2008 (well, nobody has *paid* me to do so). I have 33 years now in Pascal/Delphi - and I keep coding my own personal projects in it. But for the industry - it's really dead unless you find some legacy State application still using it (like Texas DOT, Utah DOT) and they don't want to change. I think a lot of the *aha* moments for me where when new coders out of college joining our development teams had no idea what Delphi was - were not taught any Pascal or Delphi at their college. Yeah, I get called *old* a lot, but then again, my first modem was an Atari 830 Acoustic. I ran BBS's written in Turbo Pascal from 1984-1993.
The pattern seems to be that the people who don't use Delphi don't think anyone is using it, but the people who are using it are pretty sure that people still do. 
I, personally, _hate_ ORM. There are some more people that do also, and that can write better about it than me. One of the reasons is that in _every_ real live project I've seen using ORM, it plainly failed at doing what it should: make your life easier. Some say the same goes for OOP. If you think about it, OOP is a way to _prevent_ a programmer from doing things. The freedom you loose should get replaced with protocol and structure that _should_ prevent you (and others in your team) from making mistakes, but in practice, again, risks making things unneccessarily complicated. If you keep calm, and have a team that's geared toward keeping interfaces modifiable enough and/or a systems architect that feels the pain and knows what to change, neither OOP or ORM should get in your way, but _never_ should take too much precious human-time away from the real job at hand. That said, if you're (re)working an application for modern days, there's no way around the web. It's quite a benefit you can depend on users having a rich HTML client to do whatever. An installer download and update scheduler is avoided, but the downside is you'll have to administer a server to host the thing. But there's another trap right there: Many attempts have been made to marry the RAD-IDE-concept into something that spews web-pages, but I hate them as much as I do ORM. They need to set the balance somewhere and end up building a 'platform' with inherent limits you _will_ hit a soon as your quest brings you to attempt something that wasn't foreseen to fit in that set-up. Apart from the HTML assembled for clients being b***-ugly and convoluted. So what _do_ I prefer? Not finding what I was looking for in existing solutions, I rolled my own: [xxm](https://github.com/stijnsanders/xxm#xxm). I wanted server-side logic and HTML in the same files, and use the power and speed of the Delphi compiler to have a new DLL build and load by a press of the &lt;kbd&gt;F5&lt;/kbd&gt; button. It works as smooth as PHP and ASP of yesteryear, but with the power of Object Pascal, and server-side anything you could do with a Delphi project. When developing, it's still a Delphi project so you can step through it with the debugger, on the live server you deploy the very same DLL with either IIS or Apache (or others that do SCGI). An example of a full fledged xxm project is [here](https://github.com/stijnsanders/tx#tx).
A major contender is Arnaud Bouchez's open source [Mormot Framework](https://synopse.info/fossil/wiki?name=SQLite3+Framework).
I love ORM so much, and for any new project, I am able to use ORM for 90-100% of the data access layer. It definitively makes my life much easier.
mORMot ORM is mostly to be used on new code, since it has some expectations (e.g. primary key should be an Int64). But it has huge performance (e.g. via optimized JSON, batch insertion, or by-passing TDataSet - it is definitively much faster than Aurelius), and unique features like real-time replication, automatic sharding, NoSQL support (switch from SQL to MongoDB in one line of code without changing the queries), optional direct REST publication with user rights, inter-server redirection, JSON-enabled from the ground up.
I ran "Typed @ Operators" on my codebase when doing the UNICODE conversion, but I make network software. The legacy code, which sometimes lacked source, got to be too much of a PiTA dealing with it, that I turned it back off. I remember those few days, I certainly pulled a bit of hair out trying to work the problem.
I am personally a big believer in ORMs, and I am not alone. Look at all the ORM open source projects for Java and .NET. I even went so far as to write my own (hcOPF) in the D7 days when Delphi didn't have the language features used by ORMs like Aurelius. I have used hcOPF for developing a POS system from the ground up about 5 years ago. From personal experience, I can attest to the fact that using an ORM helps separate out the business logic from forms even using a RAD approach, making it easier to make your code DRY, and easier to maintain and evolve. If you are still looking for help re-developing your new system, and would entertain a remote contractor, I would be interested. I can be reached by email using lhengen at tpersistent dot com
Superb! Thanks for the link
I have a few open-source projects of my own that each fit in to one of the categories. Should I make one big pull request, or a separate pull request for each so you can decide between which to include? (Or none at all whatever)
So. Much. Content. 
The state of the Delphi blogging community is apparently a bit threadbare. 
This is simply a rant without any basis or fact checking. The only person BS'ing is @alcalde Don't believe everything on the internet, including this "flippantly reacting" poster, claiming 195 countries. I'd believe Wikipedia's total of 225 as a properly vetted list, well before I accept this rant. According to some of the following links there are over 300+ countries and territories. A software company can't be expected to play politics. If someone register for a boot camp and lists a particular country, that's the country assigned to their registration. Separately, given that in every country and territory at least someone is using Skype (just one of many software products written using Delphi), it would be more reasonable to think Delphi users are truly worldwide. http://travelerscenturyclub.org/countries-and-territories https://en.wikipedia.org/wiki/List_of_countries_by_population_(United_Nations) http://www.lead.org.au/list_of_countries_and_territories.html 
&gt;This is simply a rant without any basis or fact checking. " And yet it's filled with facts.... &gt;Don't believe everything on the internet, including this "flippantly reacting" &gt;poster, claiming 195 countries. I'd believe Wikipedia's total of 225 as a &gt;properly vetted list, well before I accept this rant. You'd believe whatever makes you feel good, including the idea that every bloody country on Earth had users attend an online English-only Delphi course. &gt;According to some of the following links there are over 300+ countries and &gt;territories. The United Nations recognizes 195 countries. No one recognizes 300+. Your own source for 300+ is a traveler's club, which says "Although some are not actually countries in their own right, they have been included because they are removed from the parent country, either geographically, politically or ethnologically." Basically this is nothing but a travelers' bingo card! For instance, it counts Niue, which is in "free association with New Zealand" but is not recognized as an independent country by... well... anyone. &gt;Niue, whose capital is the village of Alofi, is a self-governing state in free &gt;association with New Zealand; and New Zealand conducts most diplomatic &gt;relations (though not all) on its behalf. Niueans are citizens of New Zealand, &gt;and Queen Elizabeth II is head of state in her capacity as Queen of New &gt;Zealand. Between 90–95% of Niuean people live in New Zealand, along with &gt;about 70% of the speakers of the Niuean language. Not a country. Worse, if you think there's a Delphi developer on an island with 1,600 people, I don't know what to tell you. &gt;A software company can't be expected to play politics. A PR department for a software company can make up all sorts of facts and figures, however. See their previous claim of "over 3,000,000 users". An anonymous Embarcadero employee once claimed the real internal figure is 50K-80K and once Idera took over they claimed "over 10K users" instead. In fact, when I pointed out to Mr. Popov that the Embarcadero people had put up the 3M figure on the website again, it disappeared shortly after, this time for good. &gt; If someone register for a boot camp and lists a particular country, that's the &gt;country assigned to their registration. And you really imagine people from 201 countries/territories signed up? Even places like North Korea, Iran, Cuba, etc. that are banned from U.S. software sales? Tiny islands like Niue? Zimbabwe, with 90% employment? Syria? Afghanistan? &gt;Separately, given that in every country and territory at least someone is &gt;using Skype (just one of many software products written using Delphi) Skype is not written using Delphi. The GUI of the Windows version was done in Delphi. Skype itself is written in C. &gt; it would be more reasonable to think Delphi users are truly worldwide. How is that reasonable? NO ONE USES DELPHI. Look at the membership in this subreddit - a little over 1,000. Python's? Over 100K! Look at job boards. Look at commercial publishers dropping Delphi after 2005. Look at Stack Overflow showing a constant downward trend in Delphi questions, including a 12% drop last year. Look at Indeed.com's job trend graph, which shows Delphi cratering. Gihub's ranking of new repositories by language had Delphi go from #34, to #39, to #44. I could go on and on... there is no quantifiable data which shows Delphi with appreciable market share. 
I ran the Delphi Boot Camp, and I pulled the reports of the registered attendees and counted the different countries. I was surprised too that there were that many different countries. Now perhaps I could have gone through and looked to see if some of the countries were "an island with 1,600 people" and said they didn't count, but I didn't see any reason too. It would be great if Delphi had a larger community, I won't argue with you there. That being said I've attended events and met developers all over the world, and what I've found is that there are many Delphi developers out there that we just don't see in online communities. I just got back from an event in Brazil with 500+ developers in attendance. I've been to similar events in Japan, Australia, and South Korea. I talked to a medical company in New Zealand that is using Delphi to develop mobile applications for hospital outpatients. Reddit isn't the only online community. There are a number of Delphi communities on Facebook with way more users. Here is one with over 6K members: https://www.facebook.com/groups/137012246341854/ and here is the Portuguese language one with over 7K members https://www.facebook.com/groups/DelphiExperts/ and I've heard there are some Asian ones with even more. Then there is Google Plus, where this community has almost 10K members https://plus.google.com/communities/103113685381486591754 Your claims "no major company is writing new software in today is Delphi" is unfounded and based on your narrow and biased view. I've personally worked at major international companies that run on Delphi internally (for example, URS Corporation is ranked #256 on the Fortune 500). About 5 years ago I had a friend who was interviewing at Phillips Healthcare (ranked 375 on Global 500) for a Delphi developer position. If you would like like to produce a list of all the major international companies, and then provide a statement from there CTO's that they are not using Delphi internally, then we can talk. Until then you really aren't adding to the conversation. The simple matter is if no one was using or buying Delphi then I and everyone I work with would be out of a job. If you ever want to check, just use this web page to find out if Delphi is dead yet. http://www.isdelphidead.com/
@alcalde The Wikipedia count is 225, Delphi marketing claimed 201 countries had attendees in the Delphi Boot Camp, that is well under the total and a very reasonable statement. Further this reddit has now been addressed by the very person who ran the Boot Camp, confirming his count. Your point is bogus, your ranting is a waste of time. End of discussion. BUT I'll indulge this thread for once because you brought up some interesting points that many redditers will like to know about. &gt; 1. "No major company is writing new software in Delphi". &gt; 2. "NO ONE USES DELPHI". Any sensible reader will move on after reading this type of white washing language and you'll be written off.. HOWEVER.. let me elaborate for the benefit of any that might give you the benefit of the doubt. You really want to demonstrate how clueless and biased you are! And seem to be proud of it! Ok, here goes.. The largest medical system in the world, i.e. for the U.S. Veterans, by the "Veterans Administration" uses Delphi at the very heart of their whole infrastructure, processing millions of patient's data successfully reliably in-spite of their internal and external political issues and a healthy dose of government red-tape. There are others very large organizations that I know of that use **Delphi in myriad ways** but I'll particularly use this one system to show how flawed your comments are. Keep in mind this system is ALSO used around the world in many other major hospital systems. Do some research and find out for yourself. I'm a Senior Architect and Lead Developer on JUST one of the medium size products in the above mentioned VA system. We are currently updating it with new business requirements and features, investing multi-MM into the system. So you're wrong on both your statements #1 and #2. On your sad laughable ignorant comment about COBOL. Here's what my product, written in Delphi, **DOES daily for the VA**. In a fraction of the code size of most comparable technologies today (.NET, Java, javascript, blah blah etc. etc. ad nauseam), Delphi accomplishes all of the following **natively** without using any "C", "C++" or other library. In no particular order, TCP/IP at raw socket level, Multi-threading, web services, REST, JSON, XML input and output, PDF rendering, JPEG and other image handling, web client, large database access, over 130 major sites and almost 1000 minor sites of distributed data with multiple load balanced servers covering millions of veterans (and of course doctors, nurses, pharmacists etc. etc.), all of their multi-millions of records for healthcare, historical data going back decades, all the veteran benefits, connections to Linux and other OS's, protocols like SSH, SFTP, HTTPS, HTTP and others, features like IAM, Single-sign-on, two-factor authentication, user definable rule-sets, dynamic run time forms with user definable event handlers (stuff that even today's "latest" HTML5 browsers can barely do), dynamic run time reporting, full range of reporting from plain old ASCII to the latest formatted reports printed or PDF converted and other formats capable, message queuing, extensive error reporting, developer hooks for production debugging, inter-process communication, windows registry handling, flat file + relational + hierarchical database handling, talking to plain ASP websites in the background unattended, talking with API exposed on MongoDB, Encryption, Decryption, Hashing, electronic signatures, HIPAA compliance, 508-compliance, HITECH compliance and I'm not done yet with the list. **All of that** in under 1 million lines of code. **Code that in COBOL!** Or Java! Or Javascript! Or VB! or C#! or Python! and whatever else you find on any of the "metrics" websites! 
thank you sir!
Very good information, thank you.
&gt; but now I can't even evaluate it. If I recall correctly, there were issues installing it if you'd ever had an evaluation version of Delphi installed and I don't know if they ever fixed it. &gt; So you get a sales call from Delphi and they told me the Starter edition &gt;couldn't build a 64 bit executable - really? Lazarus/FPC can. The starter &gt;edition doesn't have Databases built in - Lazarus does. The starter version is very, very crippled. 32bit, Windows programs only. You don't even get code completion! If you want to evaluate the Delphi product you're better off with the time-limited evaluation version. &gt;Should I totally give up on Delphi? I mean is it even worth messing with &gt;compared to Lazarus/FPC? It depends if you're willing to spend from $1400 up through several thousand dollars or not. What kind of code are you writing? In my opinion Delphi isn't competitive value-wise with open source or free development tools today. Visual Studio Community Edition, for instance, nets you (no pun intended) several languages from managed to unmanaged to functional, plus a great IDE and lots of other tools. For most people the cost should be zero. RemObjects also offers you far more in regards to languages and targets for less than Delphi. With FreePascal you don't need to deal with issues with installing multiple copies, and you can develop on OSes other than Windows. The compiler seems to be faster for numeric operations but slower with strings. In both cases you're dealing with a very small ecosystem with few third party libraries though. If one had the money for Delphi and there were needs that weren't being met with FreePascal I'd suggest RemObjects' Oxygene, since you'd get the most advanced Pascal-derived language available along with the ability to utilize the vast ecosystems of .NET and the JVM. You can even compile to bare-metal now! If you want to look beyond Pascal there are many interesting choices today, some more like Pascal than others. Again, we'd need to have some idea what kind of code you're writing or want to write and what issues led you to look at Delphi in the first place.
Still celebrating christmas?
Soon all developers are mvp's.
Listbox.Selected[myindex]:=false Listbox.Selected[myindex+1]:=true
Thanks! I've tried sometimes to use scrapping or apis but this is clean and useful. Do you think it could be adapted to use TheGamesDB.net ?
The OpenSubtitles.org API implementation would be easier to adapt as it uses XML (TheMovieDB.org implementation is using JSON). https://github.com/bLightZP/Delphi-OpenSubtitles.org-API-support-for-Zoom-Player It's just a matter of changing the base URL for the API, implementing the calls specified here: http://wiki.thegamesdb.net/index.php/API_Introduction And of course parsing the XML result.
Using now the "Large line/No loop" true type version in Delphi. [Download (zip)] (https://github.com/belluzj/fantasque-sans/releases/download/v1.7.2/FantasqueSansMono-LargeLineHeight-NoLoopK.zip)
Guys, in Windows10, do you usually install TTFs or OTFs? It's the same with different format? or one of them is prefered? thanks!
I use TTF because I'm not sure that Delphi can use OTF, but I am lazy to test :o)
Thanks for this work Andy. It's sad that after 20 years Delphi still hasn't fixed basic bugs. - install new version of Delphi - re-fix 20 years of VCL bugs 
You are doing God's work. Thanks friend.
If it doesn't have to be UTF8 compliant, you can simply grab a character (char) from a string as in for example k:=MyString[1] (first character). You can then typecast this char to byte and compare; which whips something like this: Byte(upcase(MyStringA[x])) &gt; Byte(upcase(MyStringB[x])) Upcase converts a string to uppercase (a -&gt; A), byte will simply cast the character to its ASCII code (in the case of A, this would be 65 for example). Obviously this won't do with strings where weird characters are involved, as these can take up multiple bytes for one character; but for a school project this'll do.
&gt;I don't think Delphi is on life support. It is alive and well, and kicking and dancing. No, it does not do everything I'd like it to, but hey, neither do other languages. Oddly enough, yeah, I've got a major app in Delphi 5 that is still earning me money... I haven't gone to D7 yet as it has a weird dependency and would need a whole new round of debugging. I do wish I could do something about the form components... they kind of stink, they look old and have the odor of 2000, Sugar Ray, and Razr phones. I have no idea what to do about it.
Just use Lazarus/FreePascal. 
Unfortunately Lazarus has a plugin system that requires recompiling the IDE. And they're also not very good citizens of the Windows ecosystem (respecting proper placement of files - CSIDL)
I'm a FreePascal/Lazarus guy and jumped ship to C++. I really miss the structure and readability of Pascal, but I love the features of C++. Can we get something in the middle?
don't make this a such big problem, recompilation works well and smooth even tho the solution is suboptimal, i am sure they will have that sorted out too eventually.
Which features are you missing?
Just use Lazarus/FreePascal. 
&gt;Unfortunately Lazarus has a plugin system that requires recompiling the IDE. So? Never had a problem with it. 
Falls apart when you run applications from protected locations. Plus, i don't want to have to restart the IDE to use a component. I want plugins to be hosted out-of-process; like Windows Explorer does with its plugins. 
The first 4 bytes might be a size of something.
I know Delphi has easy enough access to [zlib](https://zlib.net) compression. Off the top of my head I don't remember the format of what zlib outputs. But it's not like Zip - it's not a directory of files and folders. It's just the raw output of zlib compression. If you can get ahold of zlib for your favorite compiler you might try saving the blob contents to individual files and running through them through different decompression. My fear would be that it's actually compressed and then encrypted. But it doesn't make sense to encrypt attachments.
Run it through TrId, maybe it can identify the file
Sadly it couldn't
[D](https://dlang.org/)?
I'm a **big** fan of D, but it's not a solution to the problem I posed.
Writing good code is mostly language agnostic and there are tons of books about that - like "Clean Code" by Robert C. Martin.
You can add an internal/external manifest file to make the windows widgets (buttons, scrollbars, etc) at least look normal without having to change a line of code.
There are [lots of recent Delphi books](http://glooscapsoftware.blogspot.ca/2018/02/new-books-for-new-year.html) (check out the bottom of the page), and I pick up little things from most of them, but [Nick Hodges](http://www.codingindelphi.com/blog/) writes a lot about good coding practices.
Totally underrated stuff. Top quality code, i just read it to learn better Delpi.
Do you have a reproducible example of this happening?
Note: code only meant for use by one sending and one receiving thread
I'm shocked to learn there are bugs in the Delphi IDE. Shocked I say!
First Joanna Carter, now Jeroen Pluimers. And there's Rudy again, claiming that there may be "another side of the story". This is the same nonsense they did with Joanna after she went public and claimed she was kicked out for publicly complaining about the price of Delphi and other issues. Rudy and ilk replied with the charge that this wasn't why she was kicked out, "you know why you were kicked out", then absolutely refuse, even years later, to inform us as to what that reason was. They did this with Starkey too after he publicly described how they screwed up making Interbase open source. They insist his story is completely inaccurate, but refuse to give us their own version of events. As Christopher Hitchens said, "That which is asserted without evidence may be dismissed without evidence". If you look around today, some of the biggest names in the Delphi community, including Arnaud Bouchez and David Heffernan, are not (and have never been) MVPs. These are the people whose integrity I trust. They have and continue to contribute to the community (Mormot framework and stack overflow respectively) and have no financial incentive to lie or keep their mouth shut about problems. 
&gt;Avoid WITH "Yeah, well, you know, that's just, like, your opinion, man." There is a place for WITH and it's best to keep it to a singular object. I can't tell you how many times in the last ten years coding in C# not having a WITH is a pain in the ass. 
I think you're comparing apples and oranges here. Your example covers the specific use case where you want to create and initialise an object using parameters, which is completely legitimate, and already supported using things like overloaded constructors, class methods, etc. More often, I see people wrapping entire methods with a WITH to avoid using the name of a database connection (for example) or to make code that uses really deep object references shorter. You could argue about the usefulness of first example, but I think it hurts readability rather than helps it. I have sympathy for the second case, but I prefer to use an explaining variable. I'm not sure what the try..finally comment is getting at. Memory management has to happen in any case. If you don't like explicitly freeing your objects, then you have interfaces or records with methods or even ARC. [Dalija wrote a book](http://glooscapsoftware.blogspot.ca/2017/06/oh-look-another-book.html). And I think you're misusing the term RAD. That said, I would LOVE for Delphi to support true named parameters. Optional parameters are great, but can get awkward in non-trivial cases. You should open a feature request. I'd vote for it.
No, I was not surprised about the lower performance, I am wondering if the x4.6 performance difference makes sense considering the hardware used. TDP is not a really factor of performance, there's 15W parts these days that are faster and cooler than the 95W sandybridge. Intel desktop CPUs during the sandybridge generation were not really designed for a low TDP.
Such numbers do make sense. But the Delphi Android compiler is probably *less* optimized than the Windows compiler, since the LLVM back-end used has been reported to be not properly tuned. The heap is not handled by FastMM4 on Android (it is from the Bionic libc IIRC), and ARC memory management has a measurable cost.
&gt;But the Delphi Android compiler is probably less optimized than the Windows &gt;compiler, since the LLVM back-end used has been reported to be not properly &gt;tuned. Similarly, the 64bit Windows compiler is also said to not be optimized though.
I need a Git For Dummies... a lot of these Delphi articles are over my head. :( I have a lot of Delphi books but they're all "this is how we place a button on a form"... someone should write an intermediate level coding book.
[removed]
Nice, can't wait to read this.
too vague man. We can't optimize code we don't see or without any tools (such as a profiler, or the assembler output) and without knowing anything about the conditions other than that it's delphi 5. Why does it have to be Delphi 5 to begin with? Doesn't it compile under another pascal compiler? (FPC 1.6.4 comes to mind) As for passing by reference or not, it's usually not a performance issue but more a matter of what you're trying to achieve: delphi will make a copy if you're trying to work on it, or use a reference when you're only reading from it. As soon as you attempt to write to it and you changed parameter passing for "performance reasons" it will no longer perform the same as before! If it really is just a small function and you can't inline it or use another compiler, why not put it in an include file? Although, if the program worked for 20 years, chances are something else is at fault. TL ; DR: we need more code, assuming you have a good reason to stick to that old chestnut to begin with.
In practice, a Delphi 5 app could be faster than one compiled with the latest Delphi 10.2 compiled. Apart from inlining with Delphi 2007, there was almost no optimization in the generated code since Delphi 5... Keep the functions small, with no dependency, and if possible a very few parameters and local variables. If the function is really called a lot of times, don't assume that calling it will be slow. Don't guess. Our guess will most probably be wrong. Use a profiler to actually MEASURE the bottlenecks, then, only if it makes sense and if the function is really small, you may inline it manually. Note that inlining sometimes is worse than non inlining with newest versions of the Delphi compiler, especially when working with FPU. The main point about optimization is about data structures, not compiler. The first main Delphi 5 optimization is to replace the default memory manager by FastMM4. Then you could find a lot of optimized functions in existing libraries, e.g. our Open Source http://mormot.net which SynCommons.pas core unit works very well with Delphi 5, which is also able to patch the RTL with optimized asm code if you define the DOPATCHTRTL conditional. For writing fast multi-thread applications, check this old but still relevant blog article: http://blog.synopse.info/post/2011/05/20/How-to-write-fast-multi-thread-Delphi-applications
indeed - FPC has some optimizations which don't exist with latest Delphi. See e.g. http://blog.synopse.info/post/2015/06/21/Why-FPC-may-be-a-better-compiler-than-Delphi But using FPC will expect a separated heap, so for most process it won't help.
Using include files may be tempting, but they are not well handled by the IDE, and debugging them is a nightmare. It sounds like a path to premature optimization and maintenance nightmare.
Yeah gotta be honest with ya, I'm used to the FPC compiler. Don't know for sure if Delphi does it the same way, or if delphi5 did it at all for that matter...
The best optimizations are usually algorithmic ones. Don't call that function thousands of times. Maybe cache the results and reuse them. Other than that, explain your situation and post some code. There's too much that can be done wrongly to tell without particulars.
 I'm curious, why stay with D5? Why not D7 (which was the best version of that era) and trivial to port.. or the latest Delphi, which is not trivial, but enables a lot of modern language features.
It's going to be a few weeks before the raw data comes out; I really want to check the salary data. 75% of survey participants were younger than 35. I'd say it's not a stretch that 75% of Delphi users are probably older. This would mean more experience and hence greater salary. I'd like to see how Delphi holds up in salary when adjusting for years of experience. As for the "most dreaded" part - when 65% of your customers wish/hope they were no longer using it, and you don't show up in the "most wanted" section at all (which goes down as low as 2.6%), that's not good. It means the majority of your customers weren't your customers and effectively no one who isn't already a customer wishes they were using your product. :-( Again, it'll be interesting to see if there are exceptions to this based on country and how it breaks down regarding age, but it'll be several weeks yet before the raw numbers come out. Another interesting fact is that 49.9% of developers do their work on Windows, marking the first time total Windows users have dipped below 50%! This also means that Embarcadero's continuing to ship a Windows-only IDE curtails the number of potential customers, which is also not good in combination with the dreaded/wanted figures. Interbase also fails to register in the summary results at all. 
OK, someone helped me find this.... https://insights.stackoverflow.com/survey/2018#work-salary-and-experience-by-language Notice Delphi at the far, far right on experience. Delphi users were indeed a significant outlier in terms of number of years of experience. However, note they're well **below** median for salary overall! This suggests there may be a response radically skewing the U.S. Delphi results (or an extremely low number of U.S. Delphi users responding). Now I really can't wait to see these data. 
My understanding is that the Rust sample itself is a small one, but apparently the small number using it are very happy with it. 
&gt; C++ Rename Refactoring This appears to require using the clang compilers. That makes it useless for large projects, at least until RSP-16827 is fixed. 
Looking forward to the virtual treeview as a browser-based widget
It's also interesting that most popular and rising modern languages are not on the dreaded list - C#, Python, Typescript.
Four humbler ideas for Embarcadero: - fix the IDE crashing bugs - [fix the Error Insight errors](https://stackoverflow.com/questions/19146709/is-there-a-workaround-for-the-error-insight-bug-in-the-ide) - [fix the refactoring crashing bugs](https://i.imgur.com/JUu1B1h.png) - [fix the 22 year old bugs in the VCL](https://stackoverflow.com/questions/8192961/is-there-a-bug-in-the-delphi-list-view-control-when-using-custom-drawing) Bonus: Have Delphi support the new feature added in Windows 95: the taskbar. - Windows can be shown modelessly, appear on the taskbar, and the user can minimize, maximize, and restore them. - Even better, is use the Windows standard paradigm of a window's modal windows having an *owner*: //Native Win32 MessageBox(owner.Handle, ...); //WinForms MyForm.ShowDialog(ownerForm, ...); //TaskDialog TaskDilog(ownerForm.Handle, ...) //IProgressDialog progressDialog.StartProgressDialog(ownerForm.Handle, ...); Something Delphi doesn't support 31 years after their invention; [and Sertac will go down swinging that you shouldn't be able to **choose** your modal owner.](https://stackoverflow.com/questions/31705874/how-to-show-a-modal-dialog-from-a-modeless-form) Showing a modal dialog should disable the entire application, exactly not like how Windows, Win32, WinForms, WPF do it, and that's that! 
Can anyone comment why Embarcadero can't benefit from adopting the same business model as Digia with Qt? Dual licensing - and make money with support.
they're not exactly experts at support.. doubt they'd make any money..
&gt; There are a very small number of Delphi users left (despite what the MVPs will tell you) So I keep hearing. Mostly from you, Joseph. As long as [well-known anti-Delphi cranks](https://www.reddit.com/r/programmingcirclejerk/comments/1xz0da/epic_delphi_rant/) spend lots of time hanging out in Delphi forums trying to convince people that no one uses Delphi any more and implying that the MVPs are lying, then the product is probably doing OK. I mean, I spend a bunch of time it those groups, too, but I use the product in my day to day development, so it's a little less weird. I hope you follow up with a really really long wall-of-text post. I love those.
Catch 22
No interest in yet another social media platform.
 JDE0tab1000: array [0..3, 0..4] of double = ((1721139.29189, 365242.13740, 0.06134, 0.00111, -0.00071), (1721233.25401, 365241.72562, -0.05323, 0.00907, 0.00025), (1721325.70455, 365242.49558, -0.11677, -0.00297, 0.00074), (1721414.39987, 365242.88257, -0.00769, -0.00933, -0.00006));
Thank you! So when using matrices I should use \( \) instead of \[ \]... Yeah, the index was wrong.. \[0..3\] , thanks for notice/fix that too.
Here is a good article that explains how the arrays should be defined: http://www.delphibasics.co.uk/Article.asp?Name=Arrays
That was a very confusing article on what should be a simple subject. It's insistence in the last example that memory locations have to do with anything is baffling. I don't think it's correct on what it's labeling immutable either. If two different threads try to access that object at the same time there will be a problem simply because the object really isn't immutable. 
What is the point? This isn't a real world test of any sort. 
Here's a real-world build-time using Delphi XE10.2.2 on a VCL/Win32 project, compiling on Win10Pro (guest), inside Hyper-V running Win10Pro (host) on a Dell XPS 9550 with M.2 NVMe SSD... 7 million lines in 39 sec https://imgur.com/a/qTTg89J
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/r4E4QHv.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
There is no point, even using a tree like this is crazy. I just saw the original in generating C code and wanted to do it in my fav language of all time: pascal. Also, generating code and the compile is a good test for compilers. Check for example FPC can't compile this, but Delphi does. I am not saying FPC is better or worse, is a great project, just can't compile huge procedures.
Speechless... If anyone has coded anytime a compiler (or process huge amounts of formatted text...) you'll know how great is this.
I've learned enough over the years that I will screw up threads. That's why the only new threads I prefer to write are *fire-and-forget*. I want a background that to export the data to an xlsx. It's over step short of spawning a process
If that list is a private member of an immutable object, then the outer object can still be regarded immutable, in some cases. Take the example of Java's BigDecimal. BigDecimal is immutable, but it has a member called precision that is a cache for a calculated value. If you call the precision() function, it check if the member field is 0. If so, it calculates the precision, stores it in the member field and then returns it. If it is not 0, it simply returns the value from the private member, because the precision never changes. So the internal state changes, and thus the BigDecimal itself is internally mutable, but externally immutable. I do think that setting the value of the member should be done with a lock, if reading and writing it is not atomic. Immutability is generally done to make objects "thread safe".
Have I come into wrong group?
yep. Delphi Forums will come up with a Google search. It's not a part of Reddit. The link I gave you elsewhere should work.
Have you tried Free Pascal?
What is that?
Where did the JS example come from? It's hilariously bad. Did the author deliberately set out to write such terrible code to support the argument? 
Hello, if I understand it correctly, it's the other way around? c++ object -&gt; c-api -&gt; pascal-object wrappers.
Impressive little video there, I enjoyed watching it and remember the TWebbrowser component from the olden days. Not having used Delphi for years, it makes me itchy to get back to doing a project in it. What engine/franework is TWebbrowser using in this video? I remember under Delphi/Windows it used Internet Explorer. Is that still the case or can you also use Chromium/Blink or Firefox/Gecko or something else, also with Delphi/Windows or is that Lazarus\-specific? I've never actually gotten around to trying Lazarus, although I've heard about it in passing. Does it make sense as a "gateway" for getting into Delphi at low\-cost? Or has it become too different from Delphi to be any help in that regard \(apart from learning Object Pascal, that is\). Is Lazarus VCL compatible \(can it use Delphi components?\) and are the source files compatible, i.e. could you open the project in Delphi without problems? Would love some insights.
Sure, the Lazarus project is free, easy to use, and easy to get started with. I run the website https://www.getlazarus.org, and it has a download sections making it easy to install both the Free Pascal compiler and Lazarus IDE. More information about the web browser component is available here and here: https://www.getlazarus.org/forums/viewtopic.php?f=23&amp;t=170 https://www.getlazarus.org/forums/viewtopic.php?f=23&amp;t=171 Regarding compatibility with Delphi, on a source code level much of Lazarus is compatible with Delphi. FPC currently has nearly complete language parity with Delphi, meaning most anything you write in Delphi can also be compiled using the FPC. And finally, most project source files are compatible, assuming you have all the sources and not just dcus or bpls. The VCL may have some differences, but if your projects uses the standard controls you should be okay using it in Lazarus. 
[removed]
Not so much Delphi as just OO. Think OO when working with an OO language.
It seems like [StrToFloat](http://docwiki.embarcadero.com/Libraries/Tokyo/en/System.SysUtils.StrToFloat) failed. What are you trying to do?
its to calculate an average number [this is the StrToFloat](https://i.imgur.com/8yA1sP2.png)
Maybe one of your Edit's is empty or has invalid input. 
Delphi is similarly all-over-the-board. While this article makes it sound like M$ jumps from one paradigm to another, we're talking about 20 years... I admit, I have a VCL Win32 application, which has been compiling to native-code since 2001.. but to say that VCL has continued to evolve is a misnomer. It's M$'s support of the core WinAPI, which has kept the VCL/RTL alive while Emb spends it's R&amp;D on FMX, RAD Server and other ventures unrelated to the VCL. IMHO, the VCL has been almost ignored by Emb for years.
You don't think the VCL has evolved? New functionality and controls are constantly being added, and sometimes, support for new Windows functionality is available in the VCL before it's in .Net. What was the most recent version of Delphi you used? It would be interesting to list some of the changes that have happened even since then.
Age of Wonders I and II. GREAT games. 
The latest Skype for Windows client (7.41.0.101) was built using Delphi.
https://jonlennartaasenden.wordpress.com/2014/11/06/famous-software-made-with-delphi/
My favourite example, if not the most well known, is the artist Montreal based artist [Rafael Lozano-Hemmer](http://www.lozano-hemmer.com/bio.php) (Antimodular Research), who [uses Delphi](https://creators.vice.com/en_us/article/nzdmm8/user-preferences-tech-qa-with-rafael-lozano-hemmer) in a bunch of his art installations. There is an unofficial list named [Good Quality Applications Built With Delphi](http://delphi.wikia.com/wiki/Good_Quality_Applications_Built_With_Delphi), which people continue to update, but I can't guarantee that it's up to date. Of course, you can always [check for yourself](http://glooscapsoftware.blogspot.ca/2017/05/software-made-with-delphi-how-do-you.html).
man.. this is super hard up. Poor Delphi IDE.
**Miniatur Wunderland** Miniatur Wunderland (German for 'miniature wonderland') is a model railway attraction in Hamburg, Germany, and the largest of its kind in the world. The railway is located in the historic Speicherstadt district of the city. In October 2016 the railway consisted of 15,400 m (50,525 ft) of track in H0 scale, divided into nine sections: Harz, the fictitious city of Knuffingen, the Alps and Austria, Hamburg, America, Scandinavia, Switzerland, a replica of the Hamburg Airport and Italy. Of the 6,800 m2 (73,195 sq ft) of floorspace, the model takes 1,490 m2 (16,038 sq ft). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/delphi/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Wow, incredible model ! Thanks
I've seen this article linked to all over.. 2014 seems very aged now and a lot of the software in the list seems equally or even more dated. Perhaps Jon should compile an updated list, though I've a hunch that might be struggle.
Same here, i wish more people could contribute to this sub with more news, sources, tuts, etc. I am myself a newbie so not too much to share.
As I wrote in another comment, [you can check for yourself](http://glooscapsoftware.blogspot.com/2017/05/software-made-with-delphi-how-do-you.html). [IsDelphi](https://cc.embarcadero.com/Item/22159) can tell you if there are any executables on your hard drive written in Delphi, C++ Builder or, sometimes, Lazarus. And then, if you like, you can [dig a little deeper](http://delphi.wikia.com/wiki/Determine_Delphi_Application). I'm not sure it's practical for any one person to keep a comprehensive list. It would have to be crowdsourced. A [public list](http://delphi.wikia.com/wiki/Good_Quality_Applications_Built_With_Delphi) that people actively vet to make sure the information is accurate in the first place and still up to date. Maybe a field to indicate if something has been independently verified with a relevant link if one is available.
Not a problem everyone! That's what I'm here for :)
It seems to have a limited time to download \(8 hours more from now\). I have just downloaded it. If anyone wants it you can PM.
Are you a Delphi newbie ?
Are you kidding me.. seperator lines ? Really ?
I use madexcept, but I've dropped all IDE extensions, except for FixPack for speed, due to random errors in the IDE. (Delphi 10.2.2 on Win10 guest in HyperV on Win10)
It's Windows XP running in a VM with Delphi 6. If I ever need to touch up the old code from the early 2000's, (And late 90's)then I still can. (Such as to have it support newer windows native UI looks.) To its credit, the code is still running commercially on many Windows clients around the world. Code from the Delphi 1 days is still in there and working fine on Windows 10.
I throw castallia out the window and use cnpack, ddevextensions, idefixpack and gexperts. If my delphi 7 Environment at work could handle all those things it would be nice. But as soon as install cnpack i am unable to compile our main app. Error message is "not enough ram".
You need MMX code explorer - it's a productivity boosting monster, which has become free recently.
Thanks, downloaded it!
I've been working on Zoom Player since 1999 and it's written in Delphi. I'm writing a somewhat bgi Android game in Delphi at this very moment.
Did you install the Delphi Speed Up + Delphi Dev Extensions from http://andy.jgknet.de/blog/ide-tools/delphispeedupand http://andy.jgknet.de/blog/ide-tools/ddevextensions ? It helps a lot stabilizing the Delphi 7 IDE, and let CnPack work with my biggest projects. Node that for huge units, you could disable the CnPack syntax highlighting depending on the number of source code lines, in its settings.
Nah i tried those in the past but they didn't help. The error occurs during the linking process in some dll often also without any extensions installed. I don't know how to identify the root of the Problem either.
Delphi is a proprietary extension to the Pascal language which, subsequently contains a framework for Windows 32\-bit (VCL) and multi\-platform MacOS, iOS, Windows, Android (FMX). The IDE is quit tied to these frameworks and can't really be used for any other flavor of Pascal or any other language... Delphi can't exist without it's IDE and the IDE can't exist without Delphi, Delphi is kind of useless without the IDE and VCL/FMX frameworks.
hehe... kind of a few era's ago... Borland \-\&gt; Insprise \-\&gt; CodeGear \-\&gt; Embarcadero \-\&gt; Idera Software
I use to post links. They stopped getting approved.
Visual Studio Code uses InnoSetup for it's installer. InnoSetup is built in Delphi.
Delphi was in fact first a 'working title' for a new Borland product that would compete with Microsoft's Visual Basic, halfway the 1990's. It was chosen so that when people overheard Borland people talk about it, it would not be clear what it was (back then it was, and still is, a Greek city). But by the time of release, no new name was assigned, and the product was released as Delphi 1.0: an integrated development environment based on an extended version of the Pascal, already introduced by the Borland Turbo Pascal products: Object Pascal. Since Delphi has had reasonable success since then, both Object Pascal and Delphi have been used interchangably to denote the programming language.
Strtofloat does not return 0 when you pass it an empty string. Try StrTofloatDef. The def version is returning the second Parameter as a default should the conversion of the first parameter fail
I read Delphi was directly related to the excellent support for Oracle. We had a 20 person Delphi shop in the late 90s/ early 2000s and enjoyed using it for our Oracle 7/8i on Netware. Snicker. 
Should be: Borland -&gt; Insprise -&gt; **revert to Borland** -&gt; CodeGear -&gt; Embarcadero -&gt; Idera 
Hey, Joe from the Coding Blocks Podcast here - we recently did a round-table-y type discussion about Cross-Platform Development with RAD Studio and thought y'all might be interested in watching. Trigger warning, there will be a crack or two about the age of Delphi but we were all really blown away by the capabilities. I think the jaws start dropping around minute 9 :) Thanks!
Amazing... How people bash Rad/Delphi without knowing what they´re talking about. 
There are now 5 more devs that have seen the light :)
&gt; Should be: Borland -&gt; **Insprise** -&gt; revert to Borland -&gt; CodeGear -&gt; Embarcadero -&gt; Idera The name was **Inprise**, not Insprise. [Source](https://en.wikipedia.org/wiki/Borland#The_Inprise_years,_and_name_changes)
I usually just pass MaxInt s := Copy(name, 4, MaxInt); s := Copy(name, 4, Length(s));
Email: manish.ad@abroaditconsulting.ocm
This is something i've been thinking lately a lot. The idea is, trying to improve my pascal (be Delphi or FPC), leads to start using things as generics, new features, creating more robust code, test units, etc... A lot of things I've read but not implemented because I do not code for working, just small ideas and tools for my other hobbies. There are fantastic free code repositories out there, Mormot, Jedi, VTG, Alcinoe, etc,etc and a myriad of nice tools in GitHub providing source code for mature projects (Free manga downloader, EmuLoader, Mame MCM...); rogue-like games as DoomRL, Gearhead, LambdaRouge; emulators as DSP, etc,etc ... So, sometimes I need for example a function to convert from an integer to a string with thousands separator (mormot provides...), of course, i can code it, but i prefer to read the code, doing my version or reusing the already coded one. My idea is to collect all these sources in a folder, and index, as in the article, so i can do advanced searches in all that code repositories. I've found some free options, as Google code search (https://swtch.com/~rsc/regexp/regexp4.html), and others as MMX (it has a code indexer). And commercial ones, as Filelocator pro, dtSearch, etc... Also the article mentions other ways of doing it. If there is interest, i could write about this if I finally implement this idea in some way. 
Delphi can absolutely do this, but be careful about translating the language of demons. You may not like what they say :) It's hard to answer your question, since we don't know your skill level. However, the general solution is probably just a "search and replace" of the text against some kind of dictionary for each word in the text. To do that, though, you need a dictionary of all possible words, so that's maybe more than you want. So, you could do something like swap vowels around or something to make some kind of pig latin translator. Knowing how to manipulate and replace strings is your starting point. Have a look at StringReplace, for example: http://www.delphibasics.co.uk/RTL.asp?Name=stringreplace
if you want to replace letter by letter only then I suggest this: have two constants one with the alphabet of mortals and one with the alphabet of demons, for example: const Mortals=' ABCDEFGHI...Zabcdefghijklm....z'; Demons=' MDOZUFhefs..........................'; then when you pass a a word to your application you iterate through the word in a for loop for i:=1 to length(AMortalWord) do begin //Do something end; in the do something section you ge the letter of the word, and get the PosEx() of it in the constant for the mortal alphabet. the PosEx()-function returns the index of the letter which will be also the index of the demonalphabet. then you add the demon-letter to your result-string each time you get an index&gt;0. in the example above the mortal lettter A would correspond to the demon letter M, notice the whitespace for word seperation. if you want something more fancy then you need rules for your language, that need to be translated to code.
Flip children for when you want to test your software for other cultures. 
Thanks, I've sorta learned how to use stringreplace, but my only problem is if i make multiple string replaces, only the most recent one works, how do I fix that? 
This sounds great, but I have no idea how to use PosEx, and I can't find a tutorial. Is it possible for you to post an example of how it works? 
Its in another unit, strutils, include it in the uses section. It is equal to the function pos() Searches in a string the first appearnce of a substring and returns its index. If it cant find the substring it returns 0
I had the same problem but they seem to be back up now.
This is gold for understanding development for a "complete" system
In general I use it like this. Given case: name, string = 'Foobar': `s := Copy(name, 3, Length(name));`
To put this in a bit of code for an example: ```delphi var Floaty: Extended; Stringy: String; begin Stringy := ''; Floaty := StrToFloat(Stringy); // results in an exception Floaty := StrToFloatDef(Stringy, 12.5); // no exception, results in 12.5 end; ```
Maybe it's better to seperate your pas files correctly into subfolders. Good unit-names are a must-have too. Example: /YourProject/Source/Forms/&lt;all form files&gt; /YourProject/Source/Threads/&lt;all thread files&gt; /YourProject/Source/Utils/&lt;all utils files&gt; and so on. I prefere to always name my units like &lt;project name&gt;.&lt;unit type [Form, Utils, Thread, ...]&gt;.&lt;unit name&gt;.pas Other people like other namings. This for me is perfect. It's clean, every type of unit has its own subfolder and it's "ok-ish" readable.
Hey, Normalement, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
delete
 delete 
Is the code avaliable to read anywhere, perhaps on GitHub?
Really I'd suggest using a language with easier String replace methods built in. Maybe JavaScript or Python, then you can use Regex and do advanced pattern matching. It'll be quicker and easier for you if you're not familiar with Delphi.
Are you open to constructive criticism? This is a very impressive project, but there are some rough edges that I think could be easily smoothed.
I would post any feedback/questions on the blog page itself. This subreddit is still under the radar for most content creators and I just post their blogs directly.
I would post any feedback/questions on the blog page itself. This subreddit is still under the radar for most content creators and I just post their blogs directly. 
Yeah too bad embarcadero fired all the compiler devs. If this is gonna happen it will be in FreePascal. 
I don't think that's right; they fired the Spain branch of the IDE team IIRC?
I would love it if records could have assignment operator from the same type. TMyRec = record class operator Implicit(source: TMyRec): TMyRec; end; This, along with generics, [is how C++ performs garbage collection.](https://youtu.be/86xWVb4XIyE) (i.e. `shared_ptr&lt;T&gt;`. Once the allocation and destruction of objects is automatically handled by the compiler (as it already is for records, interfaces, integers, strings, floats) you get a lot of new powerful programming paradigms available to you. Unfortunately Delphi arbitrarily decided that you can have an implicit operator from any type [except the single most important one that anyone cares about](https://stackoverflow.com/questions/17979886/how-to-overload-assign-operator-for-record-in-delphi)
You are looking for RemObject's Oxygene, a Object Pascal style language that implements all this. Or Nim language.
I did, looks like he's refused my comment. Oh well.
I know people who have Surface Pros and are very happy with them, although they generally use them with external keyboard, mouse and monitor. That said, I consider modern laptops "light" so it depends on what you mean there. It also depends on what OS you prefer (OS/X, Linux or Windows), and what kind of work you do. I write software, so I prefer as beefy a laptop as possible with a large screen. The choices for 17" laptops are more limited. I would suggest you provide more details, in order to get better suggestions.
[removed]
Fantastic! But they had to do it 10 years ago.
&gt;Log in or create an Embarcadero account to download the free Delphi Community Edition Yeah... no.
Borland had Personal editions of some of their versions, but outdid themselves with the Turbo edition, which was functionally identical to D2006 Professional except that you couldn't install third party packages. They never followed up on this and let it die out. Years later, Embarcadero offered their Starter Edition, which had some odd feature limitations. It was available for sale at first and then was made available for free. Great for getting started, but a little frustrating to use because of the limitations. However, they didn't kill it off after only one version, so they're already ahead of the game compared to the Turbo editions. The [Community Edition](https://www.embarcadero.com/products/delphi/starter) replaces Starter and is the most feature complete free edition they've ever offered. It is functionally identical to 10.2.3 Professional, which includes Win32/64 and mobile. You could argue that they should have done this sooner, and I'd absolutely agree with you, but I think the important thing is that they (imho) have finally done it right.
Yes, better late than never.
Doesn't anyone know a tldr of what is can NOT do?
It is functionally identical to the Professional edition. The difference is in the licensing, which seems to be better than the terms for the Starter edition.
There doesn't seem to be a Rad Studio version, so Delphi and C++ Builder Community editions can't be installed on the same computer.
As identical you means that comes with all Pro features? Firedac? I will install on a VM to see it.
Yes, exactly. It has the same FireDAC support that the Professional edition does.
I will look into this tomorrow. I hope they do the same thing that Microsoft does with their Community Edition: free for development shops with 5 developers or [less](https://youtu.be/J7E-aoXLZGY 
You can use it with 5 devs with less than 5K$ revenue. As soon as you hit 5K$+ you can spend all your revenue on 5 licenses. Idiots. 
I was hoping that they'd have fixed the Delphi/C++ Starter incompatibility issues, but it appears not. I'd love to do some C++-ing with Builder. I used it years ago and had a lot of fun. Like most Delphi devs I've migrated to Visual Studio for future projects, but it would have been nice to have the option. Maybe the incompatibility is by design, but you're not helping developers stay using Embarcadero tools. I've always thought they should combine Delphi and C++ Builder to a single license... £2000+ is not a good deal for both. 
I'm not sure. I'd be reluctant to suggest anyone start using Delphi today.
Can't log in (password rejected). Recover password, log in with new password, rejects new password. Guess I'll stick to Lazarus.
This is great news!
I'd be reluctant to suggest, but there's a lot of great projects done in Delphi, and the availability of a free edition makes it not unthinkable that new contributors install it and contribute instead of rewriting in Rust. This gives Delphi a chance to present its strengths to them, too.
This is great news!
Your day job salary does not preclude you from using Delphi CE as a hobbyist at home.
This is fantastic for me. I have a 10 year old (communications based) hobby project I maintain in Delphi 7. The target market now has a large population of Bluetooth low energy devices. I may now be able to reach those users as well!
I'm talking about using Delphi CE in my day job. The four us here at our company use Visual Studio Community Edition. And we *"can't"* use Delphi Community Edition. 
Indeed. Oxygene has all of these including the await/async support mentioned in the comments.
Should work as intended. Now with Community Edition, if possible, give a try, it's based on Tokyo 10.2 version
I'll try
Okay, I was annoyed when I got how simple the solution was: uses ActiveX; var f: Single; i: Integer; procedure for i := 0 to 3 do begin SafeArrayGetElement(fooObj, i, f); Mainwin.Memo1.Lines.Add(' foo.coeffs[' + IntToStr(i) + '] = ' + FloatToStr(f)); end; end; This is the tricky bit: if you have 'VarUtils' (or maybe 'Variants', not sure) in your initial 'uses' statement at the top, then the compiler defaults to a version of SafeArrayGetElement() which expects a pVarArray instead of pSafeArray. To fix my problem, I just had to delete some unused modules from my 'uses' statement, and then I could use SafeArrayGetElement() as described in the [tutorial](http://blog.virtec.org/2008/07/the-mysteries-of-psafearray/).
That's quite a fluff piece from Jim.
Send navigate a URL of the form 'file:///yourospathhere' . It's been a couple of years, but if I remember right, you have to use the three slashes following the 'file:', for some reason
I had a chat with someone from a reseller (they must have been told I'd downloaded the community edition of C++ (which is a bit naughty, and maybe even violates GPDR). His interpretation was that the $5k revenue was only that generated by the community tool being used. He agreed that a $1m turnover company that used it for free stuff could use it. It also has nothing to do with salary (as the poster above alludes). Purely the revenue generated by the products developed with the tool in question. There is no way to run the community edition side-by-side with a paid-for Delphi or C++ Builder though, which is really, really, annoying. And as a side note. I can't even buy C++ Builder and run it side-by-side with my Delphi license. Excellent work Embarcadero. The RAD Studio suite is currently a bargain at £1500 should I decide to go that route (maybe at £500, not at £1500).
Maybe. Or maybe now's a good time to get all those old and great Delphi projects rewritten in something else. Haskal is the go-to now isn't it?! I've loved Delphi since I started using it in 1998-ish, but every passing year puts it closer to irrelevance.
Must be performance review time. :-)
Yeah man. Mostly a lurker here but i like many of the posts 
So far so good. Looking forward to the next five years.
This subreddit is about Delph**i**
Use the report function to let this topic disappear (hopefully). As already mentioned, this subreddit is about Delphi (Delphi IDE, programming language), not about some blockchain.
I just installed it -- looks good so far. But: how can I add more platforms (64bit, in my case) to an existing project? edit: because the "Add Target" menu item is disabled. edit2: found the solution [here](https://stackoverflow.com/questions/42126708/i-cannot-add-android-target-platform-for-packages-via-ide) (2nd answer)
Your function is general and allows you to get any sequence of bits from a byte. But if you always need the first 4 bits and the last 4 bits, i.e. what's sometimes called the low nibble and high nibble, then it's better to use var A, B, Value: Byte; A := Value and $F; B := Value and $F0; // or if you want to get the 4 upper bits into the lower bits: // B := Value shr 4 
Try this: type T_Byte_BitCount = 1..8; T_Byte_BitIndex = 0..7; function GetBits(const Value : byte; const Index : T_Byte_BitIndex; const Count : T_Byte_BitCount) : byte; inline; begin Result := (Value SHR Index) AND ((1 SHL Count) - 1); end; But this might still not be the fastest way. I recommend including these definitions: // U_Tools.pas // Bit? = int value with bit ? set // Bits? = int value with bits 0..?-1 set // u? = uint type of ? bits // i? = int type of ? bits const Bit0 = 1 SHL 0; Bits0 = Bit0 - 1; const Bit1 = 1 SHL 1; Bits1 = Bit1 - 1; type u1 = Bits0..Bits1 ; i1 = -Bit0 ..Bit0 -1; const Bit2 = 1 SHL 2; Bits2 = Bit2 - 1; type u2 = Bits0..Bits2 ; i2 = -Bit1 ..Bit1 -1; const Bit3 = 1 SHL 3; Bits3 = Bit3 - 1; type u3 = Bits0..Bits3 ; i3 = -Bit2 ..Bit2 -1; const Bit4 = 1 SHL 4; Bits4 = Bit4 - 1; type u4 = Bits0..Bits4 ; i4 = -Bit3 ..Bit3 -1; const Bit5 = 1 SHL 5; Bits5 = Bit5 - 1; type u5 = Bits0..Bits5 ; i5 = -Bit4 ..Bit4 -1; const Bit6 = 1 SHL 6; Bits6 = Bit6 - 1; type u6 = Bits0..Bits6 ; i6 = -Bit5 ..Bit5 -1; const Bit7 = 1 SHL 7; Bits7 = Bit7 - 1; type u7 = Bits0..Bits7 ; i7 = -Bit6 ..Bit6 -1; const Bit8 = 1 SHL 8; Bits8 = Bit8 - 1; type u8 = Bits0..Bits8 ; i8 = -Bit7 ..Bit7 -1; const Bit9 = 1 SHL 9; Bits9 = Bit9 - 1; type u9 = Bits0..Bits9 ; i9 = -Bit8 ..Bit8 -1; const Bit10 = 1 SHL 10; Bits10 = Bit10 - 1; type u10 = Bits0..Bits10; i10 = -Bit9 ..Bit9 -1; const Bit11 = 1 SHL 11; Bits11 = Bit11 - 1; type u11 = Bits0..Bits11; i11 = -Bit10..Bit10-1; const Bit12 = 1 SHL 12; Bits12 = Bit12 - 1; type u12 = Bits0..Bits12; i12 = -Bit11..Bit11-1; const Bit13 = 1 SHL 13; Bits13 = Bit13 - 1; type u13 = Bits0..Bits13; i13 = -Bit12..Bit12-1; const Bit14 = 1 SHL 14; Bits14 = Bit14 - 1; type u14 = Bits0..Bits14; i14 = -Bit13..Bit13-1; const Bit15 = 1 SHL 15; Bits15 = Bit15 - 1; type u15 = Bits0..Bits15; i15 = -Bit14..Bit14-1; const Bit16 = 1 SHL 16; Bits16 = Bit16 - 1; type u16 = Bits0..Bits16; i16 = -Bit15..Bit15-1; const Bit17 = 1 SHL 17; Bits17 = Bit17 - 1; type u17 = Bits0..Bits17; i17 = -Bit16..Bit16-1; const Bit18 = 1 SHL 18; Bits18 = Bit18 - 1; type u18 = Bits0..Bits18; i18 = -Bit17..Bit17-1; const Bit19 = 1 SHL 19; Bits19 = Bit19 - 1; type u19 = Bits0..Bits19; i19 = -Bit18..Bit18-1; const Bit20 = 1 SHL 20; Bits20 = Bit20 - 1; type u20 = Bits0..Bits20; i20 = -Bit19..Bit19-1; const Bit21 = 1 SHL 21; Bits21 = Bit21 - 1; type u21 = Bits0..Bits21; i21 = -Bit20..Bit20-1; const Bit22 = 1 SHL 22; Bits22 = Bit22 - 1; type u22 = Bits0..Bits22; i22 = -Bit21..Bit21-1; const Bit23 = 1 SHL 23; Bits23 = Bit23 - 1; type u23 = Bits0..Bits23; i23 = -Bit22..Bit22-1; const Bit24 = 1 SHL 24; Bits24 = Bit24 - 1; type u24 = Bits0..Bits24; i24 = -Bit23..Bit23-1; const Bit25 = 1 SHL 25; Bits25 = Bit25 - 1; type u25 = Bits0..Bits25; i25 = -Bit24..Bit24-1; const Bit26 = 1 SHL 26; Bits26 = Bit26 - 1; type u26 = Bits0..Bits26; i26 = -Bit25..Bit25-1; const Bit27 = 1 SHL 27; Bits27 = Bit27 - 1; type u27 = Bits0..Bits27; i27 = -Bit26..Bit26-1; const Bit28 = 1 SHL 28; Bits28 = Bit28 - 1; type u28 = Bits0..Bits28; i28 = -Bit27..Bit27-1; const Bit29 = 1 SHL 29; Bits29 = Bit29 - 1; type u29 = Bits0..Bits29; i29 = -Bit28..Bit28-1; const Bit30 = 1 SHL 30; Bits30 = Bit30 - 1; type u30 = Bits0..Bits30; i30 = -Bit29..Bit29-1; const Bit31 = 1 SHL 31; Bits31 = Bit31 - 1; type u31 = Bits0..Bits31; i31 = -Bit30..Bit30-1; const Bit32 = 1 SHL 32; Bits32 = Bit32 - 1; type u32 = Bits0..Bits32; i32 = -Bit31..Bit31-1; const Bit33 = 1 SHL 33; Bits33 = Bit33 - 1; type u33 = Bits0..Bits33; i33 = -Bit32..Bit32-1; const Bit34 = 1 SHL 34; Bits34 = Bit34 - 1; type u34 = Bits0..Bits34; i34 = -Bit33..Bit33-1; const Bit35 = 1 SHL 35; Bits35 = Bit35 - 1; type u35 = Bits0..Bits35; i35 = -Bit34..Bit34-1; const Bit36 = 1 SHL 36; Bits36 = Bit36 - 1; type u36 = Bits0..Bits36; i36 = -Bit35..Bit35-1; const Bit37 = 1 SHL 37; Bits37 = Bit37 - 1; type u37 = Bits0..Bits37; i37 = -Bit36..Bit36-1; const Bit38 = 1 SHL 38; Bits38 = Bit38 - 1; type u38 = Bits0..Bits38; i38 = -Bit37..Bit37-1; const Bit39 = 1 SHL 39; Bits39 = Bit39 - 1; type u39 = Bits0..Bits39; i39 = -Bit38..Bit38-1; const Bit40 = 1 SHL 40; Bits40 = Bit40 - 1; type u40 = Bits0..Bits40; i40 = -Bit39..Bit39-1; const Bit41 = 1 SHL 41; Bits41 = Bit41 - 1; type u41 = Bits0..Bits41; i41 = -Bit40..Bit40-1; const Bit42 = 1 SHL 42; Bits42 = Bit42 - 1; type u42 = Bits0..Bits42; i42 = -Bit41..Bit41-1; const Bit43 = 1 SHL 43; Bits43 = Bit43 - 1; type u43 = Bits0..Bits43; i43 = -Bit42..Bit42-1; const Bit44 = 1 SHL 44; Bits44 = Bit44 - 1; type u44 = Bits0..Bits44; i44 = -Bit43..Bit43-1; const Bit45 = 1 SHL 45; Bits45 = Bit45 - 1; type u45 = Bits0..Bits45; i45 = -Bit44..Bit44-1; const Bit46 = 1 SHL 46; Bits46 = Bit46 - 1; type u46 = Bits0..Bits46; i46 = -Bit45..Bit45-1; const Bit47 = 1 SHL 47; Bits47 = Bit47 - 1; type u47 = Bits0..Bits47; i47 = -Bit46..Bit46-1; const Bit48 = 1 SHL 48; Bits48 = Bit48 - 1; type u48 = Bits0..Bits48; i48 = -Bit47..Bit47-1; const Bit49 = 1 SHL 49; Bits49 = Bit49 - 1; type u49 = Bits0..Bits49; i49 = -Bit48..Bit48-1; const Bit50 = 1 SHL 50; Bits50 = Bit50 - 1; type u50 = Bits0..Bits50; i50 = -Bit49..Bit49-1; const Bit51 = 1 SHL 51; Bits51 = Bit51 - 1; type u51 = Bits0..Bits51; i51 = -Bit50..Bit50-1; const Bit52 = 1 SHL 52; Bits52 = Bit52 - 1; type u52 = Bits0..Bits52; i52 = -Bit51..Bit51-1; const Bit53 = 1 SHL 53; Bits53 = Bit53 - 1; type u53 = Bits0..Bits53; i53 = -Bit52..Bit52-1; const Bit54 = 1 SHL 54; Bits54 = Bit54 - 1; type u54 = Bits0..Bits54; i54 = -Bit53..Bit53-1; const Bit55 = 1 SHL 55; Bits55 = Bit55 - 1; type u55 = Bits0..Bits55; i55 = -Bit54..Bit54-1; const Bit56 = 1 SHL 56; Bits56 = Bit56 - 1; type u56 = Bits0..Bits56; i56 = -Bit55..Bit55-1; const Bit57 = 1 SHL 57; Bits57 = Bit57 - 1; type u57 = Bits0..Bits57; i57 = -Bit56..Bit56-1; const Bit58 = 1 SHL 58; Bits58 = Bit58 - 1; type u58 = Bits0..Bits58; i58 = -Bit57..Bit57-1; const Bit59 = 1 SHL 59; Bits59 = Bit59 - 1; type u59 = Bits0..Bits59; i59 = -Bit58..Bit58-1; const Bit60 = 1 SHL 60; Bits60 = Bit60 - 1; type u60 = Bits0..Bits60; i60 = -Bit59..Bit59-1; const Bit61 = 1 SHL 61; Bits61 = Bit61 - 1; type u61 = Bits0..Bits61; i61 = -Bit60..Bit60-1; const Bit62 = 1 SHL 62; Bits62 = Bit62 - 1; type u62 = Bits0..Bits62; i62 = -Bit61..Bit61-1; type i63 = -Bit62..Bit62-1; type i64 = Int64; const Bit63 = QWord($8000000000000000); Bits63 = QWord($7FFFFFFFFFFFFFFF); type u63 = Bits0..Bits63; const Bits64 = QWord($FFFFFFFFFFFFFFFF); type u64 = QWord; type bool = Boolean; f32 = Single; f64 = Double; int = Integer; uint = {$IFDEF CPU32} u32 {$ENDIF} {$IFDEF CPU64} u64 {$ENDIF}; Then you can do things like a := (b SHR 4) AND Bits4; directly in your code.
Thank you very much, both of you! :)
When that answer was written, Starter was fairly feature limited and Professional didn't support multiple platforms out of the box. Now, Professional supports mobile by default and Community has all of the features that Professional does. In my case, I installed WIn32 and Win64 with the initial install, so "Add Target" is enabled for me when I create a new project. If want to change what targets I have installed, I can do that in the "Tools|Manage Platforms" menu in the IDE.
I'll try to do so, thanks 
But wouldn't the point be to create something that's source and binary compatible with Delphi, as Swift is to Objective-C? Whereas Oxygene can't interact with existing Delphi code except through C-style DLL exports, correct?
Just an idea: in lazarus / freepascal, you can just use a bitpacked record. 
[removed]
Give each panel a different tag number.
How do I do that? 
Change the value in the Tag property for each panel. It's an integer (NativeInt).
Your OnClick handler method receives the Sender parameter - that's the panel being clicked.
And then what would I do once I found out the tag of the one that's clicked? Case statement? 
Depends on what you want to do with the panel.
I basically want to make a game called chain reaction. When a panel is clicked it will create a circle on the panel that is clicked 
Or if statements. Or something else. It's hard to say without knowing what your game is or what the logic looks like. But whatever you do, don't code your game logic in an OnClick event handler. Keep your game's state separate. Clicking on a panel or a button or whatever sends information to your game object, which acts on it (valid move, etc), changing the game's state, which is used to redraw your user interface (game board).
Or if statements. Or something else. It's hard to say without knowing what your game is or what the logic looks like. But whatever you do, don't code your game logic in an OnClick event handler. Keep your game's state separate. Clicking on a panel or a button or whatever sends information to your game object, which acts on it (valid move, etc), changing the game's state, which is used to redraw your user interface (game board).
Cast the Sender as tpanel For example: Showmessage(Tpanel(sender).name)
with proper inlining, GetBits() should produce almost as fast code as using those verbose Bits# constants - or just write `a := (b shr 4) and (1 shl 4);` which is IMHO more readable 
`Bits4` is imo much more readable (and less verbose and error-prone) than `pred(1 shl 4)` ;)
Use the `Tag` property of the panels.
Ah yeah that'll work. Sorry I'm dumb lol
I agree with the use of the Tag property. And you want to store more advanced information, you could create an object that stores lots of information, and store the pointer to it in that Tag property. 
Tag size is not necessarily pointer size... unless newer versions of Delphi have 64-bit tags.
Interesting. I have done this before, but I don't know the default size of integers in the latest Delphiw
Or an index into a list or array of objects.
I think that accurately sums up the thoughts of the majority of Delphi developers. I'd love it to survive another 10 or 20 years, but I feel it's had too many owners and too much mis-management for that.
The one thing that nobody else can beat Delphi on is Windows application development. Nobody else comes close to Delphi's visual form designer. And I'm not designing user interface's in XML or markup ever again. Also I think Delphi is the only compiler that has figured out how to compile everything into one executable.
The Visual Studio form designer is as good as Delphi's. In my opinion it's slightly better when it comes to auto-positioning controls in rows/columns. However, the VCL is unmatched on the desktop. I think that TMS (specifically) have been a powerful force in keeping Delphi popular. In fact it might be fair to say that TMS have done more for Delphi's popularity that Borland/Inprise/CodeGear/Embarcadero ever did.
&gt; The Visual Studio form designer is as good as Delphi's I assume you mean WinForms designer? Which i want to murder with a rusty spoon.
Yes, sorry, WinForms. It doesn't have the component choice, but I think it's as good.
Given that almost nobody is using Delphi, I find it hard to believe that nobody can beat Delphi on Windows application development. &gt;Also I think Delphi is the only compiler that has figured out how to compile &gt;everything into one executable. You think Delphi invented static linking? Also, on the Linux platform you'd be shot on sight for static linking and making massive binary blobs. It's 2018. Why does everything need to be in one file? 
There are things they could have done, but they'd need to have done them a long time ago. Back in the early Codegear days, Nick Hodges floated the idea of a Delphi compatibility mode and a "nextgen" mode that would introduce features that weren't backwards compatible to let the language evolve. When you look at what Remobjects did with Pascal via their Oxygene dialect you can imagine what a fresh, modern Pascal++ would have looked like. Right now those who maintain legacy software rule the roost and they don't want Embarcadero to change anything. The downside is that Pascal looks to kids today like COBOL looked to me when I was in school. When Borland closed down their European office, Jetbrains snatched up many of their employees. They implemented Borland's friendly "like a book" licensing and they also had a very smart idea: they created a very powerful, *modular* cross-platform IDE that they could use with different languages. By offering the IDE for many different languages, they were able to make their profit on volume (lots of sales) rather than margin (high prices). You can get most single-language Jetbrains IDEs today for $89 and a user (opposed to business) subscription fee of $249 first year ($149 by the third year on) gets you ALL of their IDEs! Codegear began offering a "Delphi for PHP" program that, while not very well done, was a step in their stated plans of branching out beyond Pascal and offering products for other languages. Of course, JetBrains were also smart enough to not try to create their own compilers, frameworks, database, etc. too. They did eventually create their own language, Kotlin, but made it open source. Again, they figured that they'd profit by making the best IDE for it. They've been successful enough with it that it's become an official Android development language and they also were chosen for the Android Studio IDE offering. By not trying to do too much they've actually achieved more than EMBT has in the mobile space. Now Imagine a high-end IDE equipped with an Oxygene-like Pascal and a company flush with cash thanks to also offering tooling for C++, Java, Python and other mainstream languages. Imagine a Delphi that costs $200 as a result and not $1400. Imagine partnering with Digia and making Qt the next-gen cross-platform framework instead of Firemonkey. Imagine an Embarcadero that was a frequent contributor to open source and decided to work *with* the Free Pascal project on a next-gen compiler. That's the future that could have been, and it makes me angry that so many short-sighted and greedy people, plus people who were completely blind to the fact it wasn't 1995 anymore (e.g. Intersimone) let things get so bad. On the one hand we've got a community edition now, but it's still 3.5 *years* after MS offered theirs (and still can't compete with what MS offers or its licensing terms). And even for free, I'm not sure the many bugs, lack of popular support, crufty language or Windows-only tools can attract the kids today. After all, the kids can pop a flash drive into a PC and in 15 minutes have a Linux distro installed with every development tool you can imagine for free. Delphi doesn't offer them anything they can't get from an open source Jetbrains or other IDE, clang or other free compiler, and the open source Qt framework. There are no compelling language features or performance benefits either (Delphi desktop compiler benches to about 50% of C++ performance). I think it's just going to be a long, slow spiral where they keep milking people stuck maintaining legacy code or too scared/stubborn to learn anything else until enough paying customers retire, leave or die that the product is no longer profitable. I mean right now there's an August 1 deadline for making changes to the Android tooling to support the latest SDKs (Oreo) or one's new app won't be allowed in the Play store (by November even updates to existing apps won't be allowed without supporting Oreo). There's no sign that EMBT is going to meet the August 1st deadline (last word 10 days or so ago was that they were "working on it" and had been "for months"). Already, the lack of 64bit OS X support means one can't submit apps to the OS X App Store. And the inability to submit apps to the Windows Store was only solved by Microsoft changing the rules. Come August first this expensive "cross-platform" tool won't be able to submit Android or OS X apps to their respective stores! Idera's outsourcing the last developers is beginning to catch up to Delphi. They simply lack the ability to keep up anymore. Oh, did I mention they refuse to remove the claim on their web page that says you can submit Delphi OS X apps to the App Store, despite not being true for months? *Something's* got to change, and I don't know if the Community Edition will be enough to keep people around. 
&gt;Given that almost nobody is using Delphi, I find it hard to believe that nobody can beat Delphi on Windows application development. I've used WinForms. I've used xaml. They make me want to die. &gt;You think Delphi invented static linking? If you look at your typical .Net or Java application, it seems like every source code file became its own assembly. I cannot remember which application auto updated a few days ago - Discord, Twitch - but it was moronic when it said it was downloading 173 files. Compare uTorrent which is 1. &gt; Also, on the Linux platform you'd be shot on sight for static linking and making massive binary blobs. Don't confuse static linking with what I said. 
can we use it with data base like SQL server ?
It has the same features as the Professional Edition, so out of the box FireDAC only talks to local databases, but you could use ADO (dbGo) or a third party library.
&gt; I cannot remember which application auto updated a few days ago - &gt;Discord, Twitch - but it was moronic when it said it was downloading 173 &gt;files. Compare uTorrent which is 1. But what practical difference does this make? When I install Rapidminer, I'm sure it's over **1000** files. OK, I just did a recursive file count and it's **5,293**. Still, just extract the archive and run. &gt;Don't confuse static linking with what I said. Static linking is what Delphi is doing. Modern applications depend on a lot of open source libraries. 
&gt; But what practical difference does this make? It makes a ton of practical difference. Every single file you download has an HTTP overhead. It's often faster to download a single large file than 1000's of tiny ones because of that fact alone. And then there's how the filesystem behaves when asked to save and/or access 1000s of files at a time. I find it hard to believe that anybody complaining about the size of statically linked binary blobs wouldn't already know all of this.
&gt; almost nobody is using Delphi Hi Joseph, Did you ever take the time to run [IsDelphi](http://glooscapsoftware.blogspot.com/2017/05/software-made-with-delphi-how-do-you.html) on your computer? I'd be very curious to hear if anything you have installed happened to be built using Delphi. Or C++ Builder or Lazarus, but mostly Delphi.
Yes. OwnerDraw
Get VirtualStringTree. Way better than the basic TreeView and open source.
\&gt;It makes a ton of practical difference. Every single file you download has an HTTP overhead. It's often faster to \&gt;download a single large file than 1000's of tiny ones because of that fact alone. Again, how much faster in reality? \&gt; And then there's how the filesystem behaves when asked to save and/or access 1000s of files at a time (it \&gt;behaves poorly). How poorly? You install a program once. Linux divides everything up into individual libraries; installing some large applications could involve 60 or 200 files. No one complains that it takes too long or the filesystem behaves poorly. In fact, I'd argue it behaves better. No need to load a giant monolithic file in at once before startup. Also, since there's only one copy of each library on the system unlike Windows (which often has each program installing its own copy of the same library or again, static linking) caching means less disk access. Memory savings too - one copy of a library in memory at a time. 
&gt; How poorly? Considering linux has one of the worst system update processes in the history of OS's, I'd say pretty damned poorly. &gt; No one complains that it takes too long or the filesystem behaves poorly. Have you not listened to every desktop user over the past 10 years? EVERYBODY complains that linux system updates take too long and don't behave themselves. The only people who don't are people like you who make excuses for why it behaves so poorly when it has such a "superior" design.
Since it is a TDrawGrid, you need to supply the drawing code yourself, which means also saving the "state" of each cell (if multiple cells can have a clicked colour or an unclicked colour). In a TDrawGrid, each cell does not have its own Tag property. You may want to look into third-party grids, which have done a lot of this work for you.
" If you check the license for Visual Studio that’s what it says: you get to use it for five years, then you better pony up the cash. And by that time you have no doubt advanced to Enterprise level, which means that check will be signed in blood. " Who writes this nonsense? There's no mention of any limit in the license. Any company that goes from nothing to 250 employees or $1m turnover in 5 years probably has the cash to buy Visual Studio anyway, it's much cheaper than the Embarcadero alternatives. And isn't the revenue limit only $5k for the Emby offering. Let's also not forget that it's impossible to install the community edition of C++ Builder on system with a licensed edition of Delphi. I know it's still the fashion to bash everything Microsoft do, but the terms for Visual Studio are arguably much better. " With this in place Embarcadero is cementing a foundation of growth for our community, the languages and the future. This is awesome! " Yeah, erm, no. Just check out the number of Delphi jobs out there compared to C#. It's about 1:100 in the UK. It's dead. It was fun while it lasted, but let's move on. No company in their right mind is using Delphi for new projects. Disclaimer: I love Delphi, and have done for nigh on 20 years, but you can't ignore the radical shift in the market over the last 10 years.
&gt; No company in their right mind is using Delphi for new projects You wouldn't be the first person to accuse me of not being in my right mind.
What a joke of an article.. In the comments section he claims he wasn't referring to the free "community edition of visual studio".. Then what was the point of his whole comparison? 
From my experience over the past 5 or so years it's true that few companies are using Delphi for new projects. I've spoken to many who keep Delphi around for legacy projects only - and most of them are replacing the Delphi apps with C#. I don't think there's anything to touch Delphi in terms of power and speed of development. But these two things are not the whole picture (otherwise I'd write everything in assembler ;). I love developing and I'd love to still be doing it in 10 years. If I stick with Delphi then this is unlikely to happen. As much as Delphi devs might hate it (I'm one of them), C# is now the #1 desktop language out there. I don't think it's #1 on the web though it's likely a #2 or #3 (depending on which language index you read). Companies are finding it harder and harder to get Delphi devs (I speak to recruitment agencies regularly and I hear the same thing every time). It's in a company's interest to make sure it has a good pool of developers to pick from. If it picks C# then it has a sea of devs, if it sticks with Delphi then the current lake is going to have evaporated to a puddle in a few years. The Delphi developers I do know are moving away from commercial development to C# and C++. I've put a lot of effort in to C++ this year. I might have said it once before, but I'd love to be using C++ Builder along side my copy of Delphi. I always hoped that perhaps one day Microsoft would buy Borland or CodeGear or Embarcadero and give it the freedom it deserves. If Delphi hadn't gone through so many owners in such a short time; wasn't £1500; had a proper free version 10 years ago; ~~Embarcadero had given me the cool apps prize~~; then perhaps we'd be in a different position.
Well, you aren't wrong about the Delphi job market being a little thin. And there are definitely stories about companies moving away from Delphi. I have a few of those. I also have a couple where someone abandoned Delphi and went back or dropped their Delphi development for what they thought would be greener pastures, and never recovered. My favourite was a friend who insisted that I had to drop Delphi right away and start using SilverLight. Good times... From my experience, more than a few companies are using Delphi. Fixing bugs in legacy software, bringing old projects up to the latest version of Delphi and adding new features, new development at places that used to use Delphi and, my favourite, new development for people who have never heard of Delphi. Delphi is very productive and it lets me get stuff done. Fast development and time to market, hassle free deployment and easy maintenance and migration to new versions of Delphi. I'm glad Embarcadero finally released a full featured free version. It makes it easier to share some of the free stuff I'm doing (Starter was usable, but limited). Better late than never. I hope it has an impact on adoption. Not that there's anything wrong with C#. I started playing with .Net in 2002 and there are some things that I like a lot. Or web development. In fact, a lot of my projects over the past few years have had a web component to them. Just because Delphi is my first choice for any kind of new development doesn't mean I can't tinker around with other development tools and languages. It gives one perspective.
I agree that Open Source definitely needs to be leveraged. Projects like GExperts, Spring4D, DelphiMocks, DUnitX etc should ship with Delphi at least on a Companion CD or Download like they used to. I am sure a lot of developers who look at the product don't know about these third party offerings and therefore don't see lots of IDE features, and class libraries that simply come stock with other environments. I would also like to see FPC support in the Delphi IDE and collaboration with Lazarus/FPC to give Object Pascal a viable future. For that, I fear we need to conquer a lot of political issues, and standardize the language. Idera just bought Whole Tomato Software for their Visual Assist. Another sign that they simply do not have the resources to offer a complete IDE solution for multiple languages. Just like their purchase of FireDAC signaled that they had fallen behind on database access. OS/X 64 bit support, Linux UI support, and now Android also indicate the issue is still not being addressed. If the Community Edition does not bring in more developers it will likely lead to more price hikes because EMBT could lose revenue at least initially by people starting to use CE rather than buying Pro, especially with mandatory subscription pricing.
There are some ways, the most simple is just drop a TMediaPlayer component. Also, what platform are you targeting? I dont know if it will play Ogg files. Other option is about search for external components, such: * [http://www.fmxexpress.com/free-game-audio-manager-wrapper-class-in-delphi-xe6-firemonkey-for-android-ios-windows-and-osx/](http://www.fmxexpress.com/free-game-audio-manager-wrapper-class-in-delphi-xe6-firemonkey-for-android-ios-windows-and-osx/) * [https://github.com/CHERTS/newac](https://github.com/CHERTS/newac) Also, take a read here: [http://wiki.freepascal.org/Multimedia\_Programming](http://wiki.freepascal.org/Multimedia_Programming) / [http://www.noeska.com/doal/tutorials.aspx](http://www.noeska.com/doal/tutorials.aspx)
Just Windows as platform right now.
BTW i don't want to make a media player, i want to make when the players clicks a Tbutton and plays a sound, get it?
No need to add any info anymore, i got it! Thanks!
This author is a real Delphi fan boy, having once penned the article "C# Users Should Just Shut Up", claiming that C# is basically Delphi. He develops Smart Mobile Studio and was very recently hired by Embarcadero for reasons he can't talk about. Given their purchase of Sencha, it's not hard to figure out what's coming. 
&gt; Delphi fan boy Heaven forbid that pro-Delphi people should hang out in Delphi related forums. The very nerve... 
Any Delphi cookbook better feature Marco Cantu's spaghetti sauce recipe.
And it's by Packt, which will publish anything (getting them to pay royalties is another matter). https://plus.google.com/+ricardocabello/posts/PDVcovR7Sir
I hope it's written better than that blog post. "Cookook" "wich" "We works together every days" "...can be grasped also by the new Delphi programmers. " "Enrich your knowledge of Delphi deepening the libraries made available"
Except you get a single site license with RAD Studio Enterprise for free which means the server is \~$3k. Not sure why anyone would buy the RAD Server site license when you can just buy a bunch of RAD Studio Enterprise licenses for $2k cheaper each.
&gt; this is one of the ~5 books about Delphi that was published after 2005. I don't know why you would think that, but you're in luck because there have been many many more than that. Clearly, this needs to be communicated better. Right! I'm on it! I've blogged about this since 2014 when I noticed a real uptick in the number of new Delphi books being published. * [Book! Book! Book!](http://glooscapsoftware.blogspot.ca/2014/10/book-book-book.html * [Moar Books!](http://glooscapsoftware.blogspot.ca/2015/10/moar-books.html * [Books Part 3 - This Time It's Personal](http://glooscapsoftware.blogspot.ca/2016/10/books-part-3-this-time-its-personal.html) * [Books - But Wait, There's More!](http://glooscapsoftware.blogspot.ca/2017/05/books-but-wait-theres-more.html) * [Oh Look, Another Book!](http://glooscapsoftware.blogspot.ca/2017/06/oh-look-another-book.html) * [New Books for a New Year](http://glooscapsoftware.blogspot.com/2018/02/new-books-for-new-year.html) And there is this brand new batch. If I'm honest, I was procrastinating on this latest post, so thanks for the reminder. * [Summer Books](http://glooscapsoftware.blogspot.com/2018/08/summer-books.html) It turns out I'm not the only one who has a thing for technical books. Michael Riley recently wrote about his [Delphi book collection](https://capecodgunny.blogspot.com/2018/08/delphi-book-collection.html). He has a nice mix of oldies but goodies and new releases on his shelf.
I'd love to know this too. Delphi 7 rocked.
[The most recent update](https://github.com/TurboPack/AsyncPro) I know of supports Delphi 10 Berlin. I don't think it would be tough to build it for Delphi 10.2.
Thanks very much for the link. I had looked in several places- including a link from Embarcadero's website, and had found nothing after Delphi 2010. This means I will likely be going forward with the Community Edition. Most/all of the other custom components used in the project are very simple- consisting of one or two source files- and could easily be converted. The only other thing I will have to find/build is a VCL component that uses the Microsoft voice API. That is currently supplied by a purchased, no source component that does not support newer versions of Delphi.
It's a cloud API but: [https://azure.microsoft.com/en-us/services/cognitive-services/speech/](https://azure.microsoft.com/en-us/services/cognitive-services/speech/)
I only wish it were more active 
It's about time they did this. Delphi has always been a superb dev tool but too expensive for most people to buy into. This will give organisations a good shot at updating old apps and developing new ones. I just hope it is not to little to late!
Just realized this one isn't even an issue! AsyncPro has a SAPI component of it's own. So I won't need to find a new one, just change the current code too use the Async engine rather than the one currently in use.
Well but... Is this book good or not? 
Fixed :)
If the data is stored in Interbase, then look for an Interbase client library in whatever language you want to use or use an Interbase query tool? Delphi shouldn't need to be part of it.
I gave up at opening a command line. I grew up with DOS 3.2, DOS 3.4, DOD 4. But then graphical user interfaces came along - Windows 3. I've already used the command line. I'm not going back to that archaic thing.
I have this client with a really old system: Delphi 7, Firebird 1.5, Zeous. My sql code will execute on any tool that i tried, even on Zeos SQL query tool, but not on Delphi. I gives me all those crazy errors, specially on Alias. It will crash saying SQL dynamic error. When i try to put in code line it wont run. Here is the code: SELECT cliente.codcliente , cliente.nome , v.DATA_EMISSAO , COALESCE(v.QT_VENDA,0) AS QT_VENDA , COALESCE(v.VALOR_VENDA,0.0) AS VALOR_VENDA , COALESCE(a.QT_ADIANTAMENTO,0) AS QT_ADIANTAMENTO , COALESCE(a.VALOR_ADIANTAMENTO,0.0) AS VALOR_ADIANTAMENTO , COALESCE (VALOR_VENDA,0.00) - COALESCE(VALOR_ADIANTAMENTO,0.00) AS SOMA_TOTAL FROM CLIENTE JOIN ( SELECT particularvenda.codcliente , max(particularvenda.DATAEMISSAO) AS DATA_EMISSAO , COUNT(*) AS QT_VENDA , SUM(particularvenda.valorpago) AS VALOR_VENDA FROM PARTICULARVENDA WHERE particularvenda.datapagamento is null GROUP BY PARTICULARVENDA.codcliente ) AS v ON v.CODCLIENTE = cliente.CODCLIENTE left outer JOIN ( SELECT ADIANTAMENTO.codcliente , COUNT(*) AS QT_ADIANTAMENTO , SUM(ADIANTAMENTO.valor) AS VALOR_ADIANTAMENTO FROM ADIANTAMENTO WHERE ADIANTAMENTO.CODCLIENTE IS NOT NULL GROUP BY ADIANTAMENTO.CODCLIENTE ) AS a ON a.CODCLIENTE = cliente.CODCLIENTE ORDER BY cliente.nome ASC I had to try using less Alias as possible but still getting errors on 'AS V'. I am going crazy over this. (sorry for the code in portuguese, but i think its about the structure)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/nelLsLu.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e53ijqp) 
Btw, thas not the original code, thats me trying to debug this. This code wont compiple on Delphi, but every where else it does. There is no problem with Zeous either. If i execute it on Zquery, it will compile and show expected results. But in line code it will crach saying SQL Dynamic Error... How do i fix this?
Check your SQL query, looks like a missing comma in the 7th SQL.Add()
Tell them to remove that closing curly brace on the last line
Actually i am having "token exceeds size limit error". I dont have a clue on what this means.. 
I don't know how to print a Virtual machine and a remote access at the same time without printing inside it's systems. Do you know?
Ok, where to start... the author is advising the use of miniconda, a minimal package manager whose function is to download and install a specified version of Python (it can also pull in other python packages afterwards). What in the world would that look like as a GUI - a window with a single drop-down list to select the python version and an OK button? Second, miniconda is very useful in software deployment, providing a simple way to install python on a target system as part of a program installation process. And if it were a GUI, how would it be controlled or scripted? Third, we're programmers dangit. If you were making an argument about using vim or emacs in 2018, I'd be right there with you. But installing a programming language? Really? Command lines are also not archaic in the sense that command-line programs are essential for the [UNIX Philosophy](https://en.wikipedia.org/wiki/Unix_philosophy). They make scriptability and piping possible. You might write graphical applications, but I hope they each have a complete command-line interface. As an example, I was switching from one media player/podcast manager to another and wanted to port all of my podcast subscriptions to the new program. The old program used a standard SQLite database to store its settings. The new program had a complete command-line interface! This made it simple to write a small script to read podcast info from the old program's database and launch command-line processes to add new podcasts to the new system. If it only had a GUI, I'd have been out of luck automating the process and would have had to copy, paste and manually add every podcast. Yuck. I've similarly used command-line interfaces to download all YouTube videos from a playlist, extract the audio and convert it to mp3 (thanks to FFMPEG). I look askance at any new software program I consider adding to my workflow if it doesn't have a command-line interface or API. You're simply giving up too much if it doesn't. Microsoft seems to realize all of this, since they've moved away from providing GUI interfaces for server management (which made Windows sysadmins the targets of jokes for years). Instead, they now favor web interfaces and command-line utilities. They've also finally added SSH support to Windows, created Powershell, ported bash to WIndows and open sourced and ported Powershell to Linux. Similarly in data analysis Excel is now frowned upon except for quick-and-dirty calculations and presentation. In addition to the above-mentioned reason of automation, there's also the issue of verification. There's no way to know what a user did or didn't do in a spreadsheet. With code (e.g. Python or R) you can see what steps were done, verify them, and of course reliably reproduce the results. You can also add it to version control and see changes quickly. It's still possible to live in an all-Windows, all-GUI world, but it's not easy to do and it's not as fun and, ironically, often a lot more work. 
**Unix philosophy** The Unix philosophy, originated by Ken Thompson, is a set of cultural norms and philosophical approaches to minimalist, modular software development. It is based on the experience of leading developers of the Unix operating system. Early Unix developers were important in bringing the concepts of modularity and reusability into software engineering practice, spawning a "software tools" movement. Over time, the leading developers of Unix (and programs that ran on it) established a set of cultural norms for developing software, norms which became as important and influential as the technology of Unix itself; this has been termed the "Unix philosophy." The Unix philosophy emphasizes building simple, short, clear, modular, and extensible code that can be easily maintained and repurposed by developers other than its creators. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/delphi/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
 &gt;It's still possible to live in an all-Windows, all-GUI world, but it's not easy to do and it's not as fun and, ironically, often a lot more work. I know because Microsoft is starting to refuse to provide graphical user interfaces for their graphical operating system. They're starting to favor Powershell interfaces. If your application for a graphical user interface operating system does not have a graphical user interface than your application is incomplete. Which is why, speaking as a professional software developer for 19 years, I will not be doing that. Hell, there are still programs that insist that you have to add them to the environment path. Developers don't realize that [Microsoft solved that issue two decades ago](https://docs.microsoft.com/en-us/windows/desktop/shell/app-registration). And Python will insist that you have to add it to the environment path. It's time to write modern Windows applications.
Have you tried to be consistent with the table aliases before the Columns? What Database ade you using? Do you get any other error Information like an errorcode? Have you tried a simpler SQL-query? What components so you use?
If you want you can use the oncalcfields Event of the dataset. It triggers pretty often and always for each Records of the dataset. It will only Trigger if autocalcfields property is set to true auf there is a field of type fkCalculated in the dataset. You can add fields by double clicking in the dataset.
I feel like you're making this far too difficult. Your TMeal just needs to contain 3 fields: the amount of protein, fat and carbs. All other information can be calculated based on these amounts. Furthermore you need 2 properties, Goal and Ratio with getters and setters. The goal getter returns the sum of the caloric value of the 3 components, and the setter sets each amount to reach the desired total while keeping the ratio intact. The Ratio property getter calculates the ratio based on the amounts of protein, fat and carbs. The setter takes the current total, but adjusts the amounts to add up to that total number of calories using the desired ratio.
A meal consists of different Kind of foods and i don't want to keep track how many g of Protein did i eat with food x y and z. I want to create a table of foods. All the stuff i usually buy. Then i want to weigh how much g of what food am i about to eat. Since i store the Information about how many proteins etc. 1g of each food has i just add the weighed amount of a food to a meal And calculate the total amount of macros eaten. I then compare the total eaten amount of each macro to the goal-macros which were previously defined by either setting the meal-macro-goals directly or by saying i wanna eat 750kcal with this meal of which 60% are Protein, and 20% each for carbs and fat. If i were to just use a tmeal with only 3 fields i'd lose a Lot of flexibility in preparing a meal-plan and i'd also lose the ability to See, at a later Time, what i ate to reach a specific calorie-goal. 
Or even that you can do Ctrl+C on a MessageBox?
Might not work on non-standard message boxes.
At this point, I'm not sure why any new user would choose Delphi over Oxygene. You get a more modern language and can target JVM, .NET, Cocoa, iOS, Android, bare metal/native and soon web browser for only $600. Even if you need backward compatibility with old Delphi code it would only be $500. Either way it's significantly cheaper than a new copy of Delphi Pro, you can use Visual Studio's IDE and even target Linux. Come to think of it you can get all other languages, Java, C# and Swift, and still be cheaper than Delphi Pro. 
I have a similar doubt, slightly different. I'm not sure why any new user would choose Oxygene over C#. You get a more modern language and infinite resources on the internet, books, tutorials, courses, everything. Ah, and I almost forgot: You also find developers which actually know the language.
A big problem is that Firemonkey is so different I don't see how any converter tool is going to work without you also having to go over the resulting code VERY carefully and restructuring much of it, so in the end, I don't think you'll save much (if any) effort. I look at it as an opportunity to rework my applications to use a modern architecture and user interface. Once you get used to it, I think you'll find Firemonkey much more capable than VCL -- I use it for all my apps now, even the Windows-only ones, mainly because of how easy it is to make cool, custom GUI elements.
Thanks, for new projects this certainly is a good idea, but for the tedious work of converting all used components of existing projects this looks like a good choice. I'm just somewhat confused by the payment system. I just want a one-time payment for a software i'm gonna use for a couple of days for a batch of a few projects.
I own a license to MIDA Converted. Used it on an old WebBroker project. It worked (converted BDE to FireDAC). FireDAC is a bit different some there were some settings changed to make it work 100% as it did under BDE. The subscription is just for updates. If you want updates get the subscription. If you don't; don't.
Where can we get this?
Finally we have a cross platform development IDE! Where can I get this? Does it have any debugging support?
No it doesn't have debugging support. IMO, no debugger = slightly better than Notepad++ I'm not underestimating the effort of the people involved, but professional development without debugger doesn't exist. &amp;#x200B;
&gt; but professional development without debugger doesn't exist. Bah. Just stick in lots of WriteLn statements. ;-)
Similar things happening here in Brazil too. I would suggest you publish, if not already, at Delphi community in Google Plus, as there will have more visibility
If your edit control has focus (i.e. the cursor is blinking in it), then the 5 should appear without you doing anything, whenever you press a key on the keyboard. Now are you talking about a calculator keyboard that you have created? In that case, in the button's click event you would say: `edit.text := edit.text + [keyvalue]` You would have to figure out yourself how to assign a value to each number key and how to get it out and use it for `[keyvalue]`. Look at using each button's Tag property for an easy way. &amp;#x200B;
This looks awesome!
I did and it was deleted. Owner tells me they don't allow "policy" discussions there, only code-related issues. Of course, that's far from the case in my observations. 
If I were you, I would not panic because if what you say is true they don't have any legal ground anyway. They would have to prove that your company has made money from using the CE edition. Just for laughs, imagine if you were an employe of a mega corp like Microsoft and you from habit used your corporate email account to download Delphi CE edition for testing purpose, do you really think Embarcadero would have legal grounds to extract money from Microsoft? The whole idea is silly at best. Until you show us the redacted version of this email you are receiving it's very hard to say what is going on. Are you for sure this are not automated emails? If you are still worried, I suggest you contact https://plus.google.com/+MarcoCantu through that portal, I think he's the best person you can reach out to atm regarding this, explain the situation. 
&gt; Just for laughs, imagine if you were an employe of a mega corp like Microsoft and you from habit used your corporate email account to download Delphi CE edition for testing purpose, do you really think Embarcadero would have legal grounds to extract money from Microsoft? The whole idea is silly at best. That is my whole point, the guy over e-mail doesn't understand that. The people from Dannysoft, understood but quickly changed subject to: *but you have used it, etc, etc* Well, ya, for a damn day or two, think that I didn't even compile anything, not sure. &gt;Until you show us the redacted version of this email you are receiving it's very hard to say what is going on. Are you for sure this are not automated emails? The first one, yes, totally a template, name was incorrect and based on domain used upon registration. Next ones, they had more information. Thank you!!! I'll try to reach Marco.
If this photo doesn't scare us, nothing will... http://blog.marcocantu.com/images/forblog/2018_09_delphiconference.jpg Where are the next generation of Delphi developers? As the rest of us move on, retire, or expire, there need to be others to take our place or the number of Delphi users will drop below profitability for EMBT and that's it for Delphi. 
I was actually at that event as a speaker, and that photo doesn't do justice to all the attendees that were there. There was a large group of developers who i guess were in there 30's. A handful in their 20's. And even a few women in the mix. The demographic is ever so slowly turning for the better (not to diminish the capabilities of the older devs out there).
Yeah, i phrased that a bit bad due to me not knowing better. I actually have a Panel for my self-made calculator, not an edit, but I already found out how to do the whole keypress thing. I did it with virtual keys, if you're curious. But I have another problem: Im now trying to press SHIFT+0 for the EqualClick function, but I dont know how I make delphi register that im pressing 2 buttons at the same time. My idea was if (Key=48) and (Key=vk\_Shift) then begin EqualClick (Sender); Equal.setfocus; end; but that didnt really work. all it did was highlight my 0 key and add a 0 to the Calculation.caption. Do you have any idea how I can do this?
So you are trying to grab keyboard presses, not just clicks on the calculator buttons? If you handle the KeyUp event, I believe that should do it, because the event includes a TShiftState parameter. Alternatively, you can [check at any time](https://stackoverflow.com/questions/3475305/can-i-capture-capslock-shift-key-presses) (not only when a number is pressed).
Sourcegraph is a source browser, indexer, etc... I've read about this: https://langserver.org/#implementations-server And thought a Delphi one would be useful for big codebases. 
Ah nice. I got it working. Thanks for your help.
The first order of business is that someone would need to create a language spec for Delphi. Unfortunately Delphi has no language spec; it's just whatever the Borland compilers happen to have done. Then someone needs a parser, and can turn it into an abstract syntax tree.
Wow. Win so.e Embarcadero swag, who could resist?!?!?
I really really really wish Embarcadero would add extension methods. People confuse class helpers with extension methods, thinking that the latter is the equivalent of the former. And they're fundamentally different things - to the point that you cannot use class helpers for anything real. To that I wish they would add record copy constructors. And now we have C++ style automatic garbage collection using raii, and Linq.
Wow. I'm actually looking for a postgrade project related to blockchain and I work programming in delphi. I was wondering if I should learn another languages like php, Java or python for the project. This is also interesting but I'm afraid delphi is not a cool programming language and probably the proposal will be denied if it is written mostly in delphi :/
Is there an easy way to create the build batch? We have some bigger projects in Delphi and the default generated bat does not seem to work. Can I somehow say "Just to the same thing you would do in Delphi"?
There is nothing there. 
Wtf is this? The sub doesn't exist. Besides, are there really so many Delphi jobs being posted that this is needed? 
&gt;Visual Studio Code (or VSC) is one of the few that prefers using UTF-8 with &gt;no BOM. &gt; The BOM (Byte Order Marker) is a sequence of bytes (3 bytes for for &gt;UTF-8) that marks the file to make it simple for an editor or a tool &gt;processing the file (like a compiler) to figure out the internal format. Given &gt;the similarities in many cases, you might have to read an entire file to see if &gt;it is UTF-8 or ANSI encoded I don't know where Marco gets this stuff from. You're not supposed to be using a BOM, and most editors (at least not WIndows-specific ones) don't add one by defauly (e.g. Eclipse, Kate editor, GEdit, Sublime Text, etc.). From Wikipedia... &gt;The Unicode Standard neither requires nor recommends the use of the &gt;BOM for UTF-8, but warns that it may be encountered at the start of a file as &gt;a transcoding artifact BOM is for UTF-16. Delphi's doing it wrong. 
I created it 4 years ago, but never promoted it until yesterday. 
There are many already done and tested Pascal/Delphi parsers, DWscript for example, or Castalia, both with source codes out there. Maybe someone with enough skills could do something. Thanks!
Somebody's going to have to see some code somewhere in order to diagnose anything. Maybe you have exceptions turned off Maybe you didn't actually select anything Maybe the query returns no rows Maybe you did not point the datagrid at the Tadoquery component maybe you didn't manually add the column that design time that represent what the query should show
There is some data in the table you are querying? Can you query the database using another tool? Have you tried stepping though [the code using the debugger](http://docwiki.embarcadero.com/RADStudio/Tokyo/en/Debugging_the_Application_(IDE_Tutorial)) to check it is doing what you think it is. - you can see various variable values in a watch window 
You're missing executeSQL. It's in your textbook. 
DevArt DAC are really good components but there is nothing wrong with ADO either. There is also no prof nor official statement from Microsoft that they want to stop supporting, quite the contrary: [https://blogs.msdn.microsoft.com/sqlnativeclient/2017/10/06/announcing-the-new-release-of-ole-db-driver-for-sql-server/](https://blogs.msdn.microsoft.com/sqlnativeclient/2017/10/06/announcing-the-new-release-of-ole-db-driver-for-sql-server/) and that is only driver for SQL Server, not the entire technology.
Please show us some code if you want any meaningful help.
Anyone else find that OutputDebugString, and anything that outputs to the IDE Event log (like threading and module/dll load messages) slows the IDE down like crazy? Each OutputDebugString message seems to cause like a 2-3ms stall in the application (which greatly affects the realtime performance of our app). I know the issue is not with the windows api call OutputDebugString itself as we have no issue using it in Visual Studio. Running the same app with the same OutputDebugString calls outside the IDE results in no slowdown at all.
Link to that article appears to be broken?
for a total beginner how to start learning delph?
http://glooscapsoftware.blogspot.com/2017/04/getting-started-with-delphi.html
I would recommend also, apart from reading books, as @jazzrider wrote, check github for Delphi/Pascal projects. &amp;#x200B; There are big (big for me at least :D) codebases there in Delphi. &amp;#x200B; Reading a library source, and the examples, will learn you a lot of how a much more experience coder does the magic. If you need some examples, just ask what do you think you are going to learn most, or you are interested. Example: are you going to do heavy db stuff? or maybe networking? or maybe GUI design? ... &amp;#x200B; Good luck!
Install the community edition and watch the bootcamp videos: [https://www.embarcaderoacademy.com/p/the-delphi-ce-bootcamp-2018](https://www.embarcaderoacademy.com/p/the-delphi-ce-bootcamp-2018)
http://glooscapsoftware.blogspot.com/2017/04/getting-started-with-delphi.html
If you know C or any other language where you have to do memory management yourself and some OO you don't need anything but practice. Embarcadero's docwiki and community-base wiki-like websites have everything you need documentation-wise, StackOverflow has good Delphi programmers active on the website, and that's all you need support-wise. The rest is up to you.
Never!
There have been some (minor) breaking language changes that are not going to be fixed/changed/whatever. Obviously I couldn't say about your specific problem, but that may be it.
Very nice, though I doubt we'll rewrite our code-base to take advantage of this feature where it's most useful. Also I wonder if and how this will affect compile times.
In the provided code examples 2 different ways of variable declaration can be seen: "var I: Integer := 3;" and "var I: Integer = 3;". I wonder which one will be correct. The second way feels more natural to me since we already declare constants that way.
Yes, hopefully. This already happens with untyped constants, so it would make sense that inferred inline variables will behave the same way.
So they've applied a thin cosmetic layer of changes to the UI, but the code completion, error insight, etc. are all still broken? :-( They really need to bite the bullet and just develop a new, modern AI with a single parser, no .NET dependencies, etc. 
I can't imagine any perceptible speed improvement will come from inlined variables. Their benefit is in improving code legibility and development speed. 
I'm not sold on the Office 2003 look...
Your app fails to parse floating point values if your phone is set to a locale that uses the comma as its decimal separator.
If there are specific reproducible bugs you can submit to quality.embarcadero.com then they have a good chance of being fixed. With a project as complicated as RAD Studio it is hard to find all the bugs, but once they are reproducible they can be fixed.
Let me give you one that persists from at least Delphi 4, and i'll try it now in 10.2. Yup: https://i.imgur.com/l2raJZ2.png And it's an issue that's been known since at least 1999, and it still exists in 10.2. - https://stackoverflow.com/questions/13485761/delphi-tlistview-ownerdraw-subitems-change-default-font-its-bold-somehow-aft It was reported over, and over, (and over, and over) in the old bug forums. I remember Embarcadero's solution to the collection of bugs in the old bug site was to delete the old bug site (and all the bug reports with it). You can't have unfixed bugs if you delete all the bugreports! So this one particular bug is because `TCanvas` resets the DCs font to DEFAULT_FONT when it's being destroyed; rather than **not** resetting the font to something. The fix is to have the listview custom draw handler record the font before it calls the custom draw handlers, and restore the font when the draw handler returns. During TCustomListView.CNNotify &gt; NM_CUSTOMDRAW: &gt; if Assigned(FCanvas) then &gt; begin &gt; // Remember the BkMode this DC started with before any custom draw calls (likely TRANSPARENT). &gt; // If the BkMode is altered by FCanvas.Brush and not restored then the text painted on the next ListItem &gt; // will have a black background when the ListView is in themed mode. We initially decided to change the &gt; // brush style but that was not picking up all cases. That likely happens because a brush style change &gt; // doesn't necessarily materialize until some form of painting happens using the brush. We decided that &gt; // this code should assume that the DC needs to be put back to exactly how we received it after the custom &gt; // painting so we do that in the finally near the bottom of this case statement. &gt; &gt; nMode := GetBkMode(NMCustomDraw{$IFNDEF CLR}^{$ENDIF}.hdc); // Get the BkMode set when the hdc was passed to us &gt; ---------- // This code was destroying the current font and leaving the stock font in the DC if nothing // in canvas had changed. We patch the VCL every time to fix the bugs. - https://i.imgur.com/ACWnDEe.png A sampling of other bugs: Reading a column's width can return zero function TListColumn.GetWidth: TWidth; var IsStreaming: Boolean; LOwner: TCustomListView; LVColumn : TLVColumn; begin LOwner := TListColumns(Collection).Owner; IsStreaming := [csReading, csWriting, csLoading] * LOwner.ComponentState &lt;&gt; []; // The TCustomListView handles the ReCreateWnd message by streaming the properties out to a memory stream during // DestroyWnd and then reading them back in during CreateWnd. It also sets the Reading flag when doing this. // If someone attempts to read the width while this is happening then FWidth will get overwritten with the // width of the underlying listview column width when it shouldn't be (It shouldn't be because FWidth was just // read from the memory stream in an attempt to restore it). The check for LOwner.Reading will stop // that from happening. if not LOwner.Reading and ( ((FWidth = 0) and (LOwner.HandleAllocated or not IsStreaming)) or ((not AutoSize) and LOwner.HandleAllocated and (LOwner.ViewStyle = vsReport) and (FWidth &lt;&gt; LVSCW_AUTOSIZE) and (LOwner.ValidHeaderHandle)) ) then begin // Issue: The main listview column will fill the listview width and all sub-item will look hidden. They are not // actually hidden but they appear that way because they all have zero width. You can still use the mouse to resize // them but it's not obvious and it's not at all what we want the user to see. // How to Re-Create: // 1. Drop a TListView on a form. // 2. Add a resize handler to the listview. // 3. Access the column widths in the resize handler. // Why It Happens: // MSDN Return Code documentation for ListView_GetColumnWidth() // Returns the column width if successful, or zero otherwise. If this macro is used on a list-view control with the // LVS_REPORT style and the specified column does not exist, the return value is undefined. // The problem is that it returns zero on error or zero if the column width is zero. How do we know the difference? // The 'original call' below sets the member variable to zero in cases where the ListView is returning error. // That's bad because your TListColumn will now think it has a zero width and when UpdateCols gets called it will // re-create the column with a zero width. It only happens when you access the column width early in the initialization // phase but I haven't fully tracked down exactly when. We tried calling UpdateCols in the // WMParentNotify handler hoping that it would initialize the columns sooner and everything would be fine but // that doesn't seem to be the issue. If we refuse to access the column width (during a resize) until after // the form's OnShow has been called then everything works fine but that puts the burden on the developer. The method // below returns True on success so we only set the FWidth member if it gets valid info from the ListView. // It's probably a little more expensive but it works. Chris Sept. 10, 2014 // We could FillChar() the structure but it's extra cycles for nothing, mask is the only thing that matters. // If ListView_GetColumn comes back True then we know LVColumn.cx has been set to the value we need LVColumn.mask := LVCF_WIDTH; if ListView_GetColumn(LOwner.Handle, FOrderTag, LVColumn) then FWidth := LVColumn.cx; // original call, bad because FWidth gets set to zero on error // FWidth := ListView_GetColumnWidth(LOwner.Handle, FOrderTag); end; Result := FWidth; end; Deleting a ListView column doesn't keep the TListColumn's internal FOrderTag in sync: procedure TListColumnsFixed.FixOrderTags(Item: TListColumn); var nIndex : Integer; ListColumn : TListColumn; begin // The Windows ListView adjusts the LVColumn.iOrder when a column is deleted. FOrderTag is not adjusted in the // original TListColumns collection so it gets out of sync. This class fixes that. for nIndex := 0 to Count - 1 do begin ListColumn := Items[nIndex]; // if FOrderTag &gt; FOrderTag of the item being deleted then adjust it if ListColumn.FOrderTag &gt; Item.FOrderTag then Dec(ListColumn.FOrderTag); end; end; procedure TListColumnsFixed.Notify(Item: TCollectionItem; Action: TCollectionNotification); begin case Action of cnDeleting: FixOrderTags(Item as TListColumn); end; inherited; end; Pressing `Alt` brings the MainForm forward: // Picture the scenario where the user just taps the Alt key. Normal windows apps hilight the menu on the current // form or do nothing if they don't have a menu. // This code propagates CM_APPSYSCOMMAND to the Application which gets handled by the main form. // I can't see a reason for this. It doesn't do anything if the main form is disabled and that is the case when // something is shown modally from it. If the main form is enabled then it pops the main form forward and hilights // the menu. That seems awkward and I can't imagine that that is the intended behaviour. I just commented out the // the propagation to the main form and act as though we hanlded the message. 2016-09-01 procedure TCustomForm.CMAppSysCommand(var Message: TMessage); {$IF NOT DEFINED(CLR)} type PWMSysCommand = ^TWMSysCommand; {$ENDIF} begin Message.Result := 0; if (csDesigning in ComponentState) or (FormStyle = fsMDIChild) or (Menu = nil) or Menu.AutoMerge then {$IF DEFINED(CLR)} with TWMSysCommand.Create(Message) do {$ELSE} with PWMSysCommand(Message.lParam)^ do {$ENDIF} begin // SendCancelMode(nil); // if SendAppMessage(CM_APPSYSCOMMAND, CmdType, Key) &lt;&gt; 0 then Message.Result := 1; end; end; Pressing a shortcut key on your form causes it to run a shortcut on the MainForm: snipped for 10k limit Delphi does not handle WM_WindowPosChanged message correctly: snipped for 10k limit TPrinter.SetPrinter passes wrong parameters to `DocumentProperties` api: snipped for 10k limit And don't get David Heffernan started on how Delphi refuses to generte a valid Windows application by ignoring the Windows ABI (Application Binary Interface), and specifically [unmasking floating point exceptions](https://stackoverflow.com/a/39684636/12597) ---------------------- These are all bugs known by the Delphi community, and have been known for years. &gt; submit to quality.embarcadero.com then they have a good chance of being fixed We shelled out $5k for XE6. And for six months i took a screenshot every time the compiler crashed, had an error, or a bug. I think i got to 500 screenshots before i gave up. I installed Community Edition, did a build, and got a compiler crash; the same one i get in XE6. Submitting bug reports to Embarcadero is where bug reports go to die. 
Excellent. Have you reported to quality.embarcadero.com?
I'm just...not. I'm just...i just can't. I have no more energy. The bugs are already documented. - listview - floating point masking - errors list in the IDE - find unit - etc And it doesn't help that Embarcadero goes out of its way to make it harder to report bugs (i.e. i can't just create a login and report them). People can't even **browse** the bugs to point them out. And even if i did, Embarcadero doesn't support products for longer than 6 months (contrast that with Microsoft's 5 years of mainstream support). So the only way i would benefit from taking the energy to report something is by paying thousands of dollars. &gt; Have you reported to quality.embarcadero.com? Probably, make it publicly accessible and i'll Google search it. 
Not exactly sure what you mean by "embed the database." Do you mean just the tables/DB or the entire SqlLite system? SqlLite or any DBMS needs to be installed on the target system. The data/tables can be transferred, see this post [Copy data SQLite](https://stackoverflow.com/questions/2359205/copying-data-from-one-sqlite-database-to-another). I guess the Sql dump/export files could be contained in a memo/text file in the exe and then added to the data base. You could also do this with an install script. 
AB is a God among men
That's partially cool and partially wtf.
These blog posts are always top-notch and even if I never need to make an extension, this is some good information.
This looks great, although it seems the Win64 compiler bcc64 wont get the update from clang 3.3 to 5.0 like bcc32c is (If I understand the article correctly?). Anybody know when 10.3 will be released?
&gt; we recommend migrating to a different multi-windows model That bumps into the other ability that Delphi hasn't supported since the invention of the taskbar: specifying a form's owner. - in Windows you specify a forms owner - in winforms you call showdialog(owner) - with Iprogressbar, you specify an owner - with message box you specify an owner But Delphi stubbornly refuses to support a user interface concept that everyone else in Windows does - https://imgur.com/a/Xxkrl1e It's standard enough throughout Windows. WinForms, WPF, TaskDialog, ProgressDialog, SHFileOperation, IFileOperation. Lets call this preferred behavior "the pit of success", and Delphi's inability to do it "the pit of failure". 
Man, you shouldn't publish these things in the media. Now I know I can do it! :D
The [What's New](docwiki.embarcadero.com/RADStudio/en/What's_New) page
Here is the [customer reported issues fixed](http://docwiki.embarcadero.com/RADStudio/Rio/en/New_features_and_customer_reported_issues_fixed_in_RAD_Studio_10.3) page.
Does anyone else experience the issue of the code editor marking inline variable declarations as invalid syntax?
The default blue look is terrible. The default should match the current Windows look. If I use the default flat white Windows then Delphi should match it. The blue shades look like a throwback to Office in the XP days. A checkbox for "Classic IDE coloring" that gets it back to Tokyo IDE coloring would be appreciated. &amp;#x200B; I was hoping that being able to save the "Startup Layout" so that I would be able to get rid of the welcome page. No such luck. The welcome page always comes back. Is there a new hidden option to turn it off and keep it off? Also, why is the Desktop Speedsetting up in the title bar area? Put it down with all the other cutomizable toolbar components so I can disable it if need be. &amp;#x200B; Code Completion seems busted? When it is enabled I get no popup after a ".". When it is off I cannot force the popup when needed with Ctrl-Space. I usually have it off by default as it slows down the IDE too much. Ctrl-space gives a quick half second blue circle cursor, but no popup appears. &amp;#x200B; msbuild command line builds fail. 'msbuild' is not recognized as an internal or external command, operable program or batch file. Is there something special that needs to be done to get command line builds working with 10.3? &amp;#x200B; madexcept doesn't seem to install or work with 10.3 either as yet (even the latest version from 5 days ago). Hopefully a new version will be released now that 10.3 is officially out. [http://forum.madshi.net/viewtopic.php?f=4&amp;t=28631&amp;sid=f5f2ceea7befea07d034db33b7f6aaf7](http://forum.madshi.net/viewtopic.php?f=4&amp;t=28631&amp;sid=f5f2ceea7befea07d034db33b7f6aaf7) &amp;#x200B; Back to 10.2.3 for now. &amp;#x200B;
Yup.
Do you mean the red squiggly line error highlight? If so, this is the error insight part of the IDE. It uses a separate compiler to do the highlighting. It has never worked reliably and you are better off disabling it. Looks like they did not update the error insight compiler to know about inline variables.
Have you tried using FastMM4 to see if it is a memory leak [https://github.com/pleriche/FastMM4](https://github.com/pleriche/FastMM4)
Anyone tried the API 26 permissions? If so, os that easy? 
The dreaded "phantom squigglies". It's gotten much better, but they dropped the ball on recognising this new feature. Here's hoping that it's fixed in the first update, because it'll get old quick.
How do you even miss that. Did they not try their own IDE?
Measuring used memory via Task manager is not the best idea. D2009 introduces new memory manager called FastMM, so the behavior of allocated memory per process might be different when you comparing different versions of Delphi. What is happening in your case is that when you free your list, it frees the memory but FastMM does not release this memory to the operating system. This could be seen as an optimization because next time when you will need memory, there won't be a call to the Windows asking for memory, because it is already allocated for you. So you will gain increased performance for your application.
BTW: Move away from D2009 if you can, upgrade to at least Delphi 10.1...
I am assuming they know how bad the error insight is themselves and they always disable it too :)
 procedure TForm1.Button2Click(Sender: TObject); var i: integer; begin for i := 0 to 9 do begin Button1Click(nil); FreeAndNil(T); end; end; Just use the button2 and watch what happens to memory.
I went back to install the previous version today and hit the install license count max again. I know this has been complained about for years now, but do they really think this is a good idea? Now I need to wait for a human to get into work and check my email and then decide to give me another measly 3 installations before I need to ask again. If the above bugs persist that means I kill 2 installs just trying 10.3 and then rolling back to 10.2.3 if the bugs are still there after a clean installation. &amp;#x200B; Isn't a more logical approach to licensing; 1. Give each registered user a minimum of 5 installs. After a period of time (2 weeks, or a month maybe) have the license count drop down again. No need for a human to specifically log into their internal system and manually bump the count. 2. Allow me to sign into my EDN account and self-bump another 5 installs. Unless I abuse this system (asking for more than 10 in a month?) this needs no humans. If I do suddenly go over a limit then force me to email someone asking for more. 3. What happens when their server is down one day and the installer cannot contact them to verify the license? There should be a grace period of at least a week if the install max is reached or the server cannot be contacted. That way I am not stopped using the product I paid for while I wait for some support person to get into work and answer my requests. So now I continue to wait. Way to punish your honest legit customers.
Thanks for the tip.
https://youtu.be/usfiAsWR4qU
&gt;but that also means that their code must be able to distinguish between &gt;random acts of hate and bullying, and moderator operations There's a difference? ;-)
Is there a way to force FastMM to release the memory back to the OS? i have an app that uses more than 1 GB of memory and then it runs idle for most of the time. BorlandMM back in Delphi 7 released the memory instantly when it's done, and the performance hit isn't really noticeable for me and not really important for the app. I just need the memory back to the OS for other memory intensive apps. &amp;#x200B; Sorry for the delayed response.
Didn't know that after certain Delphi version, they switched to FastMM. So it's not a memory leak or a problem with TObjectList.
&gt;Is there a way to force FastMM to release the memory back to the OS? i have an app that uses more than 1 GB of memory and then it runs idle for most of the time. BorlandMM back in Delphi 7 released the memory instantly when it's done, and the performance hit isn't really noticeable for me and not really important for the app. I just need the memory back to the OS for other memory intensive apps. &gt; &gt;Sorry for the delayed response. Is there a way to force FastMM to release the memory back to the OS or a way to use the old Delphi 7 Borland MM in newer Delphi? Performance is not really my concern here. I just want to have the memory available to the OS for other memory intensive tasks. Sorry for the delayed response.
What are the benefits? simple app exe file size in latest Delphi is at least 1+ MB and it's growing with every version. Maybe i'll make the switch when i need to port something to Android.
I mean, that is something you could look on google before asking :) [https://sourceforge.net/p/fastmm/discussion/443400/thread/2f35c77d/](https://sourceforge.net/p/fastmm/discussion/443400/thread/2f35c77d/)
Yep. It is working
Is there a release date on 10.3 yet?
It's out already, at least if you have a maintenance contract.
We do. Must have missed that upgrade email. We are still in the middle of our pre-Unicode to post-Unicode conversion. 
I'm not sure if I got an upgrade email or not. Ok, I definitely did - Nov 21.
Thanks! I’ll have to get that downloaded. 
Good luck. I haven't had a chance to do anything with yet, and probably won't until January.
Both of these work as expected on Windows 7.
You can get a full FREE edition of 10.2.3 here [https://www.embarcadero.com/products/delphi/starter](https://www.embarcadero.com/products/delphi/starter) You do have to create a (free) user account, but after that you can legally download and use the full product. No need to pirate it.
True. They are collecting information about you IP, Computer Name, Username, Domain, Recent Projects etc. You can get a Free version thought 
Really? Got any link/info about this or just paranoia?
1st hand knowledge. The sent us a complete listing with that data and blackmail us to buy the full versions. 
When you used a pirated version? Why would they blackmail you to buy a license if you were using the community edition? Even still that is a reason to find a crack or hack to block Delphi having any Internet connectivity.
There are lots of 3rd party components available for Lazarus as well. Most importantly ZEOS database library and JVCL.
This is completely false. Even if they collect data on you that is against the GDPR. They can land themselves in big trouble. They threaten people who use community edition that does not meet the requirements. Like always, it's good practice, to update your hosts file with these entries: 127.0.0.1 license.embarcadero.com 127.0.0.1 track.embarcadero.com 127.0.0.1 comapi.embarcadero.com 127.0.0.1 object.ws.sanctx.embarcadero.com 127.0.0.1 external.ws.sanctx.embarcadero.com 127.0.0.1 services.server.v8.srs.sanctuary.codegear.com 127.0.0.1 LicenseUsageServicesImpl.services.server.v8.srs.sanctuary.codegear.com 127.0.0.1 RegistrationServicesImpl.services.server.v8.srs.sanctuary.codegear.com 127.0.0.1 LicenseRenewalServicesImpl.services.server.v8.srs.sanctuary.codegear.com 127.0.0.1 license-stage.codegear.com 127.0.0.1 license.codegear.com 127.0.0.1 embt.usertility.com 
Community edition didn't exist 4 month ago so. I really don't want to post the emails nor give more information this could get me in trouble as it is. And yes, we could sue them for GDPR or something, but the costs of litigation in UK will be far more expensive the buy the f\`king licenses we need anyways. &amp;#x200B;
[removed]
I work with delphi and don't want to mix it, but thanks.
Can I use Class Completion (Ctrl Shit C)
Exactly. They collect so much info on you that breaks the GDPR that they wont do crap. But still. If you wanna be safe for sure just use community edition.
What happens when you try and install with these in place? Fails? If so, they need to be open for install, but blocked after that. But who knows what other info they collect when you first install and enter your license details? It would be good to get an official response, or someone who is good with tracking this stuff to see what info is sent. They do deserve a fine if they really are collecting data they should not be.
OK, so to be clear, you used the Community Edition to write some commercial software. They sneakily collected enough personal info on you and your project to demand payment for the full versions?
I've had the same experience. I learned to turn off Error Insight years ago because it generated so many false positives it was a hindrance instead of an aid. Have you tried the CnPack plugin? It has an awesome code-completion feature. One warning though, the code-completion in CnPack is VERY customizable and has tons of options, so it can take some time to get it configured to your tastes, but I find it to be well worth the effort.
Turn off code insight, it hasn't worked well in a decade and seems to be only there to provide a feature checklist. It was also broken, in a different way, in 10.3 with variable declaration in scope. 
&gt;Code Completion - Turn off &gt;Code Parameters - Turn off. &gt;Error Insight - Turn off. At that point you may as well just use Notepad; those are the three primary features of IDE editors. :-(
Not at all. Code completion and code parameters are valid and useful functions, but not when they constantly slow down the IDE to a crawl. Being able to still use them when I want with the shortcut keys is the ideal solution. Over the past few hours I have been coding with those off by default and it is like a brand new fast IDE.
Do you have Delphi installed on an SSD or HDD? An SSD should make an enormous difference in speed for things like this.
For total beginners I'd say this is a good plan. As far as Delphi to Tokyo that might be difficult because there are not any direct flights so it could be really expensive. The airlines also cost to check bags now which is outrageous if you ask me! We should do something about that.
not sure if serious :)
Not serious.
I would recommend you bitwisecourses.com. It's like 60USD and it starts from zero but you need to have minimum programming knowledge (what is a variable, a loop, etc...)
And... What if I open and edit in my Comunity edition sometimes projects from the company where I work (where I work with a valid and paid lincense) ? Can I have troubles?
It would be good to hear from someone at Embarcadero on this. u/Neonimous Marco? What data gets sent? Where in the EULA does it cover this?
Start with this book... https://www.embarcaderoacademy.com/p/object-pascal-handbook-by-marco-cantu ...and then check out the other courses.
so it's better this, small course + book. [https://www.embarcaderoacademy.com/p/interfaces-in-delphi-intro-to-advanced/](https://www.embarcaderoacademy.com/p/interfaces-in-delphi-intro-to-advanced/)
There is this Delphi tutorial for beginners on YouTube: https://m.youtube.com/playlist?list=PLfrySFqYRf2dKxG1Xd1sJaEMtoVTeL5dw . I don't know wich version he is using, but the fundamentals are the same for all newer versions
Yes, this was on a 12 core i7 CPU with fast SSD with 64 GB RAM. It isn't a hard drive issue.
Or you can start the IDE with -np as startup parameter. This will disable project loading and welcome pages. I.e. it starts blank. 
Yes, but as you say that stops the save desktop working. I have gotten used to that feature so Delphi opens with the same units open as when you last closed it.
It is definitely stated somewhere that the custom VCL themes are not officially supported and YMMV when using them. I do agree that most of them aren’t very good, but it also isn’t officially supported. The option really only exists for tinkering, or at best, if you have modified one of the default ones.
Definitely enjoying Delphi as of recently, more specifically, the community edition. I pirated Delphi for years because I can’t afford to pay thousands of dollars for a license just to make little experimental programs. The community edition is awesome and now I can share my applications guilt-free and openly.
The data only has meaning if you're violating the license terms - it's their software, you have to use it according to the terms. Don't use it for a company and then expect to get away with it - obviously. If you don't like the terms, try FreePascal/Lazarus. 
As someone that love Delphi, although bugs and lack of some features, I am happy that 10.3 more than previous even I still did not have much chance to use it these days. I am also programming with Swift for macOS and there are a lot of things that make Delphi much more comfortable, that evolves both the IDE (which is the thing I hate more with XCode) and the language itself. Swift sometimes look likes still in childhood, even it has a powerful and complex syntax when you begin to code. Object Pascal should be more better known as a true player in the modern programming scenario.
In the right margin for this subreddit, there's a link to [Getting Started with Delphi](http://glooscapsoftware.blogspot.com/2017/04/getting-started-with-delphi.html).
&gt; Can we get any official response to this? This isn't the best place to get an official response. You might want to contact Marco Cantu directly. firstname dot lastname at embarcadero.com
The CnPack plugin lets you do that -- you can pretty much customize everything in CnPack, plus its code-completion feature is 10X better than what's built into the IDE.
"according to the terms" with very vague terms. It isn't the fact that I want pirates to get away with it. You are really happy with them secretly collecting personal info without any warning of doing such or listing what they collect? Will you install a quick program that I write now? I will state clearly in a EULA nobody will read that I will collect information, but won't tell you what info it does collect. Trust me.
Know what's even older than Delphi? Python.
Their terms aren't ambiguous at all, it's a legal agreement so it is written with exacting language - it says they're collecting data, for license enforcement, and it's in the agreement. "I didn't read it" can't seriously be your response when it is in the post above? It isn't "secret" at all - they tell you they're doing it in the agreement. Saying it is secret because you didn't read it is like how a toddler thinks they're hiding by closing their eyes. This is one of the reasons I use Lazarus/FreePascal - the license terms and quality of the releases are agreeable to me, and that it is open source. If you cared about your own data, or software freedom, you wouldn't use Delphi in the first place. You can't demand that Embarcadero change its terms to suit you - they're a business, those are their terms, it's up to them if it works or not. 
I really liked this and hope it goes forward for Part 2!
Show me where in the EULA they explain what data they collect. Their EULA is anything but exact or clear. "Embarcadero will collect information about your use of the Community Edition for auditing purposes and improve our products and services" does not say they are doing this to try and scare license fees out of people.
I appreciate that there are more "celebrity" speakers than before once Idera took over and David I left, but I still wish that the majority of speakers were regular users rather than MVPs or employees. Also, no more commercials masquerading as talks. Other conferences bar sponsors from speaking slots; for some reason CodeRage seems to embrace it. The MyDAC talk is a DevArt commercial and the AI talk is a Dew Research commercial. The FastReport one is also given by a company employee. Then when you throw in the Embarcadero presentations on Aqua Data and Ranorex, that's a lot of the available speaking spots given over to commercials. Yikes, I didn't even look at the other days yet! It goes on and on... Delphi Parser, Enterprise Connections, Intraweb, TMS Web products, ER/Studio Data Architect, FixINsight, Gnostice Document Studio, Assembla, Visual Assist (which doesn't even make sense in the context of CodeRage since it's a Visual Studio add-on), Froala.... Honestly it's a bit ridiculous. Just like they don't know the difference between a package manager and a software store, they don't understand the difference between a conference and a set of paid infomercials. Also, there's a difference between a talk and a tutorial. A talk should ignite the imagination and inspire the listener to rush home and try something with their own project/data. Dr. Yılmaz Yörü's presentations seem to be one of the very few by a regular person/member of the community regarding interesting things they've done. Honestly the talk topics overall this year just aren't very interesting. I miss interesting talks from long ago like Jim McKeith's presentation on building (Unreal? Quake?) AI bots. I'd love to hear more from regular users about interesting things they're doing with Delphi (*everyone* can't be maintaining legacy code!). Also, would it kill them to make an effort to recruit more female speakers? If other major tech conferences can approach 50%, CodeRage can too.
Barely, and only if you consider Delphi's birthday separate from that of Pascal's. Python, though, has continued to evolve at a reasonably consistent pace and survived two versions being maintained after they broke backwards compatibility to fix Unicode. 
&gt; The backwards compatibility is a great feature. All those years of Internet &gt;Delphi snippets will 99% of the time work in the latest Delphi version That's *not* a good thing; that's like still being able to fit into the clothes you wore as a child. &gt;Great for new starters who are searching for Delphi how to guides. And that's the problem - because that code still compiles, new users will think the right way to use a file today is to define a variable as "TextFile" and use Assignfile, like this Delphibasics page teaches: http://delphibasics.co.uk/Article.asp?Name=Files 
Just when you think they suddenly decided to enter the 21st century and do something nice, it seems like they did it for the data. :-( Disappointing. I wonder if a firewall filter could block the phoning home and what would happen if it did? If they don't tell you what data they're collecting it'll be time to install a copy in a VM and use Wireshark to sniff the packets and see what they're getting access to.
&gt;Their terms aren't ambiguous at all You have an interesting definition of "ambiguous". "Collecting data" is an inherently ambiguous term. &gt;You can't demand that Embarcadero change its terms to suit you Sure you can; they just did. The community has done it before too, such as when they tried to change the EULA to prevent Pro users from accessing databases. The pitchforks and torches came out and they backed down. In fact, it was probably the constant pressure from the community that led to the Community Edition! &gt; - they're a business, those are their terms, it's up to them if it works or not. It's up to their customers. If the customers aren't happy, they won't use the product. Businesses don't set terms their customers don't like or they know they'll lose customers. 
Of course you're right. EMBT have a history of being paranoid about people stealing from them. The developer edition of Interbase that's bundled with Delphi shuts itself down every few hours, for instance. The developer editions of Oracle, SQL Server and DB2 don't do this, despite being much more expensive products. And of course, you can get more advanced databases than Interbase for free (including a compatible Firebird), obviating the need for anyone to steal a copy in the first place. They've also tried to keep you from buying the product in region X but using it in region Y because they've feared someone might buy a copy that was cheaper (which wouldn't be a problem if there was identical pricing between regions), tried to mandate Pro users couldn't use c/s databases, added clauses to keep files out of the package manager that "compete" with them and used this to exclude the Mormot framework, added a EULA clause that said you couldn't use Delphi to build anything that competes with any of its products, etc. I'd definitely reach out to that email account for more details. In fact, their Privacy Statement doesn't say anything about collecting data for auditing or improving the product, suggesting it's out of date. 
This happens to me, seems that I make a key combination that activates this and the only solution that I've found is to restart the IDE. Is really annoying.
Well but for me this problem persists
It's some checkbox in the editor settings. If you don't find it wait a few hours until I'm back home with my Delphi.
Thank you very much... Would be awesome if you'd find it for me please
 Thank you very much... Would be awesome if you'd find it for me please 
It's the option "Overwrite blocks", see [here](https://i.imgur.com/XoWAvNm.png), to the right, 4th option down. When I switch this off, the editor behaves as you described it.
Yes, sure! About the magic button, no way. [https://www.embarcadero.com/products/delphi/starter](https://www.embarcadero.com/products/delphi/starter)
Thank you very much! It worked.
I get the same problem, it randomly ends up in this state, and like you I need to restart the IDE.. I also randomly run into a situtation where the Right Ctrl key stops working.. Left one works.. (the right ctrl key continues to works fine in other apps). You ever get this one? 
No, but that's because I rarely use the Right Ctrl key, to the extent that with a Model M I have, I use AutoHotKey to remap the right Ctrl to the Windows key.
It gets into this state (at least sometimes) when you accidentally press the Insert key. I've found that simply opening the Options dialog (Tools menu &gt;&gt; Options) then closing it again by pressing OK fixes the problem.
Well it isn't working for me. :( I am really desperate
Unfortunately doesn't work
It happens to me too. I push "Insert" key twice and problem is solved when I encounter it.
Well this thing actually didn't work I had to restore registry entries
10.3 is not completly identical to 10.2.3 ... You can now declare variables inline ;)
Just a shame they STILL haven't fixed error insight for inline variables... This is the only thing stopping me from using 10.3.
I didn't realize that interface extension methods were on the minds of other people. I would kill to even have class extension methods in Delphi. **Warning:** class helpers are fundamentally different from extension methods, and you cannot use them like extension methods (Documentation even reminds you not to use class or record helpers for new features)
Very nice tutorial. Keep us up to date with other posts just like that one. 
One upgrade-path that I did was buy an old/used version on ebay, then the new/upgrade version directly: now you have a valid license, capable of doing commercial-work, and save a huge chunk of money.
Wich components are you using for the query and connection?
Thanks for updating, I wonder if this has still some use, or just for legacy software. Personally I found great that people update old packages for new Delphi/Fpc versions.
Welcome back to the present. 
There was the same situation. It turned out all simple. Tools-&gt; Options-&gt; Editor Options-&gt; Key Mappings Changed "Key mapping modules:" to Default and everything began to work as before :-) Sorry for english, google translator ...
Same here. D7 was the best, IMO. I haven't installed community edition yet, but plan to.
&gt;I'll be able to add Bluetooth LE capabilities and re-design a chunk of &gt;the interface w/o having to learn a new IDE from scratch. Good luck! You might find that things aren't as stable or as well-documented as the Delphi 7 days though. 
It took Embarcadero a while to get here, but I'm really happy that they finally embraced a fully functional community edition. For the most part, migrating projects to newer versions of Delphi is very straight forward and a lot of the mechanics of the language, VCL and IDE are still very familiar. Just don't fall into the trap of using Delphi 10.3 the same way you used Delphi 7. A LOT has changed since 2002. I recommend looking at some recent tutorials and books. Check out the [Getting Started with Delphi](http://glooscapsoftware.blogspot.com/2017/04/getting-started-with-delphi.html) link on the right hand side of this group. In fact, a lot has changed since this was originally posted in 2017, so some of the links and references had to be updated to keep them current. Enjoy
If the components are licensed, they come with the source code. You should have a file "install.txt" inside the source directory. That file will explain what to open to install it on the new machine. It's basically to open the package group for your delphi version and install the packages. Just remember to add the path to the pas files in your library path (so Delphi can find the files when compiling projects)
Thanks... that was very helpfull!!
&gt; I was immediately amused and relieved at how familiar it felt. Some of the menus are essentially unchanged. Those of you who've upgraded for all of those thousands of dollars over the years may not be so happy about that There is nothing to be unhappy about. This is an IDE, there is nothing that could change dramatically over the years. &amp;#x200B;
Java is older as well!
Nah, they don't: [http://docwiki.embarcadero.com/RADStudio/Rio/en/Approaches\_to\_File\_I/O](http://docwiki.embarcadero.com/RADStudio/Rio/en/Approaches_to_File_I/O)
IBX? MWA Software? I was unaware FPC/Lazarus got forked -- I thought we only just had a new release (candidate)? Anyone got the scoop on this?
This isn't a fork of FPC/Lazarus - Newpascal is a fork of FPC/Lazarus because of development team drama. &amp;#x200B;
Off-topic: Is it possible to use Firemonkey (e.g. from Delphi community edition) in Lazarus?
I believe it is a win10 issue. By the way delphi supports multithreading
You could try a Linux Live-CD and try to run the program via WINE. Or use a spare disk (disconnect the current one) for a test installation of Win7.
I had a sudden slow on an old Application (also created with Delphi 7).... After quite time searching... The problem was... 32 bit Zeos Library on windows (7 I believe) 64 bits. Perhaps nothing related to your case but if you use some dll, maybe worth to check them.
Well...18 days later and I think I've installed all the custom components from the Delphi 7 version into my new Delphi install. Only thing that will be different- I wasn't paying to move a SAPI component to the new machine, so I installed a type library version. I'll only need to change 20 or so lines of code for that, as all of the speech in the app gets routed through a single function. My biggest bit of work is going to be with strings and chars. Much of the app uses D7s widestring, so should be easy enough to move. But I did not use ansichar (even though it was available in D7), so there's a lot I'll have to pick through. The app uses serial comm (through a USB port and an FTDI serial-USB chip) to communicate with a digital slot car track. The protocol actually uses two nibbles to build a byte (and often only uses 6 bits of that byte), and uses ansi chars as flags and demarcation points. So there is a ton of char-byte typecasting and manipulation that looks pretty ugly to a modern mind. The reason I'd like to port it to a modern version of Delphi: the company who build the track no longer offer their serial-USB cable. While there are plenty of aftermarket cables still available, many people now use the company's Bluetooth LE dongle with a tablet. Since the dongle and the cable plug into the same port, it would be nice to offer a Bluetooth LE connection to those with a computer that has one. 
I have found any GDI based graphical things became extremely slow on newer Windows. (Canvas.lineto, and similar) Any chance you might be using gdi for things? To fix things in my case I found doing all draws to an off screen bitmap and then doing only 1 copy to the screen was maybe 10 to 100x faster than drawing to the screen directly. In prior Windows drawing directly to the screens canvas was the faster choice.
Is it doing a lot of file I/O? [Windows 10 added a completely broken anti-virus system that mistakenly blocks any file reads until it has first scanned the file.](https://stackoverflow.com/questions/36834004/windows-defender-real-time-protection-service-slowing-down-visual-studio-etc) Does it do a lot of data processing? It might be the fact that [computation speed is no longer limited by the CPU, but by cache speed.](https://channel9.msdn.com/Events/Build/2013/4-329)
My app does a lot of file I/O, but I have antiviruses turned off since it interferes with a lot of programming type stuff. I don't believe I've disabled Windows Defender, though, can't recall offhand where it is or if it's a service level type thing. The cache speed sounds like more like something that could be the problem. It's doing very heavy data processing, lots of moving strings around. Anyway I put the app back on my other computer with the old Core i7 and Windows 7 and it works for now.
No GDI, it's all file I/O and string processing, but thanks, sounds like something to keep in mind.
Not using any libraries except for ZipMaster. Not entirely sure the bottleneck is there but I'll keep it in mind.
Well now i'd be ***really*** curious to see Windows 10 on the old PC. 
If you have access to vmware workstation, I'd be curious how it would run on an older os vm on the new machine.
I've heard this thing about Delphi not supporting multithreading before -- even recently at work someone was saying we shouldn't be using Delphi because of that. I wonder where that misunderstanding comes from?
Haha. Just google Tthread. I myself use multithreading for more than 10 years. Prejudice...
...and newer versions of Delphi have some quite nice new threading tools to make threading a lot easier, such as TTasks and TParallel.For.
Oh, it's not Delphi in webassembly. It's webassembly in Delphi. Took me a while, but I got it
Any difference between the source hard drives used on the two systems?
Share mote details. What is pIVideoWindow ? what does put\_Owner do?
Use VirtualBox 5.x or VMWare.
no problem at all... It is part of the code which focuses on dealing with webcams it can be found [here](https://pastebin.com/Z7ArAtwH). Hope it helps
There is a web site. It is cool. Stackoverflow.com
Thanks, I'll try them.
Version 6 just came out the middle of December, it's a major release and honestly it's still a little buggy in regards to a new method of accelerating graphics. Since you're testing something that depends on graphics settings, I'd stick to the latest 5.x release (5.24) rather than 6. I've seen 6 do some weird things (e.g. invisible fonts) when I tested it out this week. 5.24 is nice and stable for Windows guests though.
Sorry. No idea. &amp;#x200B;
Yes, same here... We will just probably migrate it to c# so no worries, just wanted to make sure that we are not able to do that
Yeah, good suggestion :)
That also shipped extremely buggy, causing lots of people to write them off. 
Maybe because the built-in support was low-level and horrible until very recently and there were many threading-unfriendly parts of the VCL?
The AMD FX's have a bit of an unusual architecture, but I can't imagine the Delphi 7 compiler generating single-threaded code that runs 4X slower on it. I have an FX-8320 and haven't noticed anything like that. I'd suspect the culprit to be the OS or something running on the new PC then. 
That makes a lot of sense - the VCL was particularly thread-unfriendly and could get you into a lot of trouble if you didn't know what you were doing.
Try this solution: http://forum.lazarus.freepascal.org/index.php?topic=35627.msg235915#msg235915
Are you using Firemonkey or VCL?
VCL. I have found a solution that works: [http://codeverge.com/embarcadero.delphi.general/copy-a-file-to-the-clipboard/1062307](http://codeverge.com/embarcadero.delphi.general/copy-a-file-to-the-clipboard/1062307)
 uses clipboard; Clipboard.AsText := 'My Text"; (Syntax may be a little off, writing this from memory)
 uses clipboard; var SL: TStringList; ... SL := TStringList.Create; SL.LoadFromFile(PathToMyFile); Clipboard.AsText := SL.Text; SL.Free; (Syntax may be a little off, writing this from memory) 
 uses clipboard; var SL: TStringList; ... SL := TStringList.Create; SL.LoadFromFile(PathToMyFile); Clipboard.AsText := SL.Text; SL.Free; (Syntax may be a little off, writing this from memory) 
Yes that will copy the filename and path. You will not be able to paste the file into a folder with that method. Only the filename to a text-container. I did find the solution, though (see one of my other replies to this post)
Oh, that's what you wanna do - copy/paste a file via clipboard, i/o copying the file's contents. I don't know which format the clipboard contents need to be for this case, but what I see from Clipboard viewer is, when I click "copy" in the Explorer's context menu, the full path of that file appears in DOS format (max. 8 chars per folder or file). But it is not in clipboard format CF_TEXT.
[Here's a start](http://docs.embarcadero.com/products/rad_studio/delphiAndcpp2009/HelpUpdate2/EN/html/delphivclwin32/Controls_TDragObject.html)
I might be a bit dense.. I can't se a path to a solution from there.. :P
You could also use [this suite](http://melander.dk/delphi/dragdrop#download)
Thanks, but I'd prefer to avoid 3rd party solutions, and get the actual coding solution ;)
This component suite has the sources included, so you can learn from them :)
You got a point there.
RIO compatible version [https://github.com/littleearth/delphi-drag-drop](https://github.com/littleearth/delphi-drag-drop)
Is it installed? Can you select it in wordpad? Is it true type? 
Are you kidding me? What kind of developer do you think I am?
[Perhaps because of this.](https://github.com/google/fonts/issues/225)
This is a smart answer... thanks.
All i know is that you didn't provide any hints. For all i know you never even downloaded the font, and you wished it magically appeared in the list. Did you run Process Monitor to see if the font is being enumerated by Windows? Did you try creating a test application and use the font? Did you try creating an app that uses the font picker dialog to see if a Delphi app can see it? 
If you were a decent developer you would have come across this problem (which apparently is not). I provided enough information for someone who has already taken the trouble to be able to help me, not someone looking for karma. &gt; Does it work in Delphi 5? Delphi 7? 10.3 community edition? Yeah, but apparently Delphi IDE is not good enough as Notepad (released in 1985) when it comes to fonts. Thanks for your time! &amp;#x200B;
Nvm I found out why. Centralized Cached Updates mode--when several datasets share a single change log and the changes are in historical order
Yes! Been fighting forms opening off screen with one of our older apps.
Good work, as a co-pascal gamedev who'se project is spanning since 2003 i salute to your work. Personally, i'd say there is a lot more of pascal/delphi gamedev, but a lot of it happens outside of active online communities and is not explicitely publicized
Why would there be a secret cabal of Pascal game developers?
Did this start as a learning exercise to build your own engine, did nothing out there satisfy your needs at the time, or....?
It was a learning experience in gamedev and it still is. Building your own engine is a fruitless goal - who will want to use it and for what? (Besides,all the engines out there already). It's much better to build a game, then another one and only after that think about abstracting the engine part (also, "rule of three").
Great work! I've been learning to program in Delphi for a while and I wish I could be able to create such games as you do. Though games are not my priority :) Keep doing what you're doing
I see no mention of fixing code insight. Are inline variable declarations still marked as errors?
Still appears to be broken. I really like Error Insight, so for me this is a blemish on an otherwise outstanding release.
There was a book published around 1995-1996 called "Delphi For Dummies". Surprisingly it's not on Libgen but there are probably used copies floating around on Amazon. I would have to say this is the most accessible introductory, friendly book I've seen to the Delphi language if you ignore the changes to the IDE and the more complex objects. I remember a good book series called [Who's Afraid Of C++](https://www.amazon.com/Whos-Afraid-Programming-Primer-PC/dp/0123390974) (and C) which was also very conversational. There really need to be more books like this, as there are so many Delphi titles just read like a rehash of the old Borland manuals and focus on the IDE too much.
Try this one http://www.marcocantu.com/epascal/
I believe it was also Delphi for dummies that I sat down on a weekend read the entire thing cover to cover, and typed in every example. It was a very good book.
Look at the Books section in [Getting Started with Delphi](http://glooscapsoftware.blogspot.com/2017/04/getting-started-with-delphi.html). A bunch of recent Delphi books have been published that cover all experience levels. Some are available as free e-books. Only English language books are included.
I often use both. Sometimes it’s convenient to set .visible := (some condition). 
Nice one!! lol
We should make this a regular thing. Nice work! 
Solid meme. Good work! Look! Delphi has someone under 50 y/o using it!
Yeah i have IT as a subject at my school (grade 10 now) and we use delphi. I think the main reason why we use delphi and not java, python or c++ is because our government uses delphi for all their things. Im from South Africa btw.
That would explain it... Brazil and South Africa has been Emb focus after loosing the US education system decades ago. Be sure you keep your eye on your career and use Python, Golang, JS. Delphi is a great educational lang, but it really has limited usefulness in today's world.
Yeah the summer holiday before i started grade 10 i tried python (with jupyter notebook) and its wayyyy easier. My brother's company (Byte Orbit) uses python and he advised me to try out python so i went ahead and tried it.
Terrible palette. 
Try turning off windows jit malware and any antivirus. Personally, i use a vm for delphi. As its just too laborious to maintain on my modern, changing OS
Already looked there. The registry DisableAntiSpyware is set to 1 and Windows Defender is completely off. No other AV installed.
My first thought was when you were running Delphi 5: you definitely have to give all users full control to the entire Delphi folder tree. My next thought when you mentioned the installer: was that it was an old 16-bit installer that doesn't work on 64-bit. For a long time now Microsoft has had a 32-bit installshield unpacker that knows how to peek inside a 16-bit installshield installer application and run it as a 32-bit installer. It's entirely possible that Windows 10 has ripped all that out. Windows 10 seems to be authored by people now don't remember anything about backwards compatibility. trying it on a 32-bit version of Windows 10, if such a thing exists, would answer that question. I have seen the effect you are talking about. Some spawned process for installing just sits there forever. I can't remember if I waited a long long time for it to go, like overnight. Or if I started randomly killing child processes from process explorer. But my first thought, and I hate to say this, is are you running the installer as an administrator.
I managed to get a Windows 7 VM up and running, and the Delphi 5 installer runs fine in that. I'm guessing this is some sort of problem with InstallShield (the installer framework) and Windows 10. The fact that I installed D5 just fine to Windows 10 several months ago but it doesn't work now makes me wonder if a Windows Update has torpedoed the old installers. &gt;My next thought when you mentioned the installer: was that it was an old 16-bit installer that doesn't work on 64-bit. That's true of Delphi 1. Those old 16-bit apps Windows will just show a blue dialog with ["This app can't run on your PC"](https://i.imgur.com/v5GamZZ.png). However the Delphi 5 installer and the executable are 32-bit and previously worked in Windows 10. All install efforts have included running as admin.
Update: Well, I never solved the mystery, but I did get Delphi up and running in a Virtualbox VM under Windows 7. However it's pretty clear that old versions of Delphi (or at least the InstallShield program) are misbehaving in Windows 10. It would be great if someone were able to figure out why. I do wonder if it would be possible to "force" Delphi to work in Windows 10 by manually copying the file structure and adding Borland/Delphi registry entries. However I don't know if there is old DRM that would prevent that, or if the DRM just keeps InstallShield from working.
[This answer](https://stackoverflow.com/questions/8460037/list-of-delphi-language-features-and-version-in-which-they-were-introduced-depre) on SO is being kept up to date when new releases come out.
It's for FreePascal, but there's a good introduction to modern Pascal here: http://newpascal.org/assets/modern_pascal_introduction.html
What's Turbo Delphi Lite?
Umm, my version of Delphi? It's is a software that we use in school, is it not a proper name? 
Umm, my version of Delphi? It's is a software that we use in school, is it not a proper name? 
Umm, my version of Delphi? It's is a software that we use in school, is it not a proper name? 
There was a version of Delphi released called Turbo Delphi all the way back in 2006 and was discontinued in 2009. The only reference I can find to a "Turbo Delphi Lite" is a remastered version that added additional software, fixes and ability to run from a flash drive and was passed around bittorrent sites, meaning it was an illegal copy. https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=en&amp;prev=search&amp;rurl=translate.google.com&amp;sl=ru&amp;sp=nmt4&amp;u=http://www.andyaska.com/%3Fact%3Ddownload%26mode%3Ddetail%26id%3D34&amp;xid=17259,15700022,15700186,15700190,15700248,15700253&amp;usg=ALkJrhin26JsY1GIrKjglGTYwlLsKdcQqA 
That's actually messed up because my teacher actually even spreads this and we learn in that software... But i guess it's Turbo Delphi then, could you help mě please
I haven't used either myself but it sounds like Intraweb or uniGUI might be up your alley. 
I see that I can install Intraweb 14 and IWBootstrapFramework. I'll look into this as a possibility. It appears that my Pro license limits me to no more than 5 clients, but for small utilities this is probably acceptable.
Back in the day I used Francois Piette's ICS library to make web servers of various types.
For the web server you can use indy. Here is a simple example on how to use indy to create a web server: https://stackoverflow.com/questions/7131093/indy-10-http-server-sample
Have you tried FreePascal/Lazarus? &gt;similar to how easy it is to throw together a desktop-based database app I hope you don't see Delphi as just a database tool. I've been using it (and FP/L) since [Delphi 5](https://en.wikipedia.org/wiki/Delphi_(IDE)#Borland_Delphi_5) and have never used a database. (Unless you count text/binary files.)
I've toyed with FreePascal and Lazarus in the past, but haven't looked at recent developments. The company buys my Delphi licenses, so I tend to stay in the Borland\Inprise\Embaradero ecosystem. (The product has transitioned mostly to maintenance, which is why we've got such a big gap going from XE3 to Rio.) I have used it for lots of different kinds of apps, but the main professional project I use it for is oriented around data processing. The product was originally written in Turbo Pascal (Turbo 3 I think, .com programs on DOS in the mid-1980s) and has been maintained and extended up through the versions. The first Delphi version was in 16-bit Delphi 1 on Windows 3.11 (I've still got the Delphi 1 Client/Server install CD, though I don't actually have a CD drive any more :D). The product has always been Windows apps (desktop and services), but we're seeing a lot more desire for web interfaces for server-side maintenance tasks like editing configuration settings. That's why I'm looking at technologies like Intraweb that will let me get existing data onto the web quickly.
For the sense of control I'd use mORMot (with built-in Mustache.pas template engine) on the server side, for the front-end, you can keep using Bootstrap, re. the dynamic part, I'll consider intercooler.js to avoid writing too much js code.
The MARS library is great, and then you could just right a simple front-end in Bootstrap and very poorly-written javascript. &amp;#x200B; [https://github.com/andrea-magni/MARS](https://github.com/andrea-magni/MARS)
&gt;I hope you don't see Delphi as just a database tool. It was originally designed to facilitate creating CRUD interfaces for c/s database backends.
Thanks for the hint about intercooler.js, that looks really useful for my use cases!
I've been considering MARS too, it looks pretty solid. However, it also looks like its less feature-rich than mORMot and has fewer users and less documentation, so other than maybe being easier to learn I'm not sure that it really brings anything I couldn't get with the other options. I'll give it a try for my test app though, no way to really know without doing!
Really good database functionality was one of the many design goals of the original Delphi project, but by no means the only one.
In my testing/research I found what I liked about MARS was it just did it's part well of creating a REST server and also being able to build clients. (In firemonkey) I did not really want the full framework (eg ORM) as I was integrating into existing code. MARS also support Linux where as I think mORMot only does via Free Pascal &amp;#x200B;
&gt;Intraweb 14 and IWBootstrapFramework I have used Intraweb 14 and IWBootstrapFramework , while the end result is fine. I would not say using it in the IDE is intuitive. Lots of CSS and HTML entered into memo boxes. &amp;#x200B; However, Intraweb 17 is looking very interesting [https://www.atozed.com/intraweb/v17/](https://www.atozed.com/intraweb/v17/) &amp;#x200B;
That's good feedback about editing in memo boxes, thanks. Do you think there would be very much of that when working with very basic site designs?
On reflection of looking at the code now which was just a quick tool it was a very fast way to get a standalone web server with a nice enough bootstrap interface. &amp;#x200B; So probably not much, 2 samples of what my forms looked like [https://imgur.com/a/f403K4d](https://imgur.com/a/f403K4d) &amp;#x200B; * Designing in the IDE is just the controls, positioning them has no effect on the outcome, I just did it to keep it tidy. * All click events are Async; which is a good thing. But can catch you out if your thinking in Delphi button click mode. I am keeping a keen eye on Intraweb 17; and apparently you will be able to run the 2 form styles side by side. So you could start the process in 14 and always migrate and build in 17. &amp;#x200B;
I started reading this book recently, its really good, I learned some new tricks, like creating two objects on the same procedure/function using only one try/finally block. I would recommend it to experiencied delphi programmers, if you are new, start with Mastering Delphi 6, then jump to Delphi 6 Developer's Guide, and then come back later to read this one. Its really cheap also, just get the subscription on packt.
Been having this issue where the compiler was ignoring the changes made in the source. I could add blatant syntax errors and it would just use the existing dcu. Until i manually deleted the outdated dcu, then it would pop an error. Fix Pack seems to have resolved this issue, though not sure if it was intentional, or how such a problem made it through in the first place. Thanks for this! and hopefully someone's got an explanation to the issue
What platform(s) do you need to support? For Windows (VCL) only, take a look at the Graphics32 package - it has all the primitives you need to do what you require.
If your only target platform is Windows, there are some ActiveX components for flowcharting that could be useful. Example: https://www.mindfusion.eu/gallery.html 
Yeh, it should cover Windows 32 and 64 only, I'm looking there, but there are so many things to ngs, TImage, TShape, TWinControl, TControl, I think I should do it using the TCanvas but am unsure. I cannot find any samples or examples on the Internet. I guess they want something like Dia but with greater functionality.
You might take a look at [this](http://www.efg2.com/Lab/index.html) -- while the content is a bit aged, it still has a lot of interesting algorithms for graphics and image processing.
Without knowing more details (what’s the compiler version, is it a unit you created or part of a distributed component, etc.) I’d look for duplicate .pas files — maybe what’s getting compiled isn’t the one you changed. Use an app like Void Tools’ Search Everything to quickly scan your drives for files with the same name. 
Trying to remember how this worked, but it can happen when using Compile vs Build, if the unit is not explicitly part of the project, and the project has access to the unit's dcu via the Search path (or some other path). Making a change to the unit and doing a Compile (ctrl-f9), it will find the dcu and won't attempt to recompile because it is not checking against the source file for changes (not part of project), and so your change is "ignored". Doing a Build will rebuild the unit regardless of the existing dcu. Maybe what you're experiencing...
It's a new bug in 10.3.
Sadly the IDE Fix Pack didn't do the job this time. I'm using 10.3.1, it isn't fixed in the patch. In tools options, try enabling auto save upon compiling or building. This is only a disaster if not using VCS, otherwise should be fine.
I doubt it is a search path issue but I'll check regardless. Saying this because the dcu is re-time-stamped, not used as is. Other comments point out it's a bug with 10.3. What worked for me so far is to enable auto save upon compiling. Though it might be just a coincidence.
Project was working fine on XE7 for a few years. This started happening in Rio. Added some details in the other comments as well
&gt; try enabling auto save upon compiling or building Oh God no. I'm only evaluating 10.3. I would never pay money for such a buggy mess. 10.2 was also a horrible buggy mess. As was xe6. I'll keep trying community editions until they have one that is stable.
For my experience this might happen due to: 1) Your application doesn't terminated by IDE and keep running in task manager. Somehow IDE doesn't see it and when you run application again it doesn't raise error on that that it can't output exe file to already exsited. The solution is to check task manager to make sure your app doesn't keep running. 2) Searching paths. Make sure that you don't have same units in different searching paths. You may fix a unit in path1 but IDE compiles unit with same name in path2. 3) DEFINES. If you use defines across code IDE can't handle this in 99% cases. The solution is use Build instead of Compile. 
I'd suggest Firemonkey. It has some default UI components in Shapes tab of tool palette. Every component in FM is container. For example, you can put Rectangle on form as if it were canvas. Then you can add inside as child other components. Add logic to add/resize these components. 
Interesting... I'm trying to see if JVCL JvDesignPanel can help me in anyway so far.
Why don't use datasnap + native html/js site with boostrap?
&gt;Design Patterns with Delphi Here is an excellent post about one try/finally block and exceptions in Destructor: [https://stackoverflow.com/a/48623639](https://stackoverflow.com/a/48623639)
Btw I'm still quite new to delphi. I have to use it for a school project.
Iles 6 to 9 are "uses"? Seems like there are some of them impossible to find. It compiles because your project is not using them. 
It is not only the 'uses'. Almost everything is red underlined in my code. I also do have a lot of "Undeclared Identifier '\[something\]' at line...."
&gt; I'll keep trying community editions until they have one that is stable. By the time it's nearing stable it's time for a new, buggy release. :-(
This is [Error Insight](http://docwiki.embarcadero.com/RADStudio/Rio/en/Code_Insight_(IDE_Tutorial)#Error_Insight). Or, as I like to call it, "gratuitous phantom squigglies". I actually use it all the time and it usually works pretty well. It's certainly better than it was when it was first introduced. However, it uses a different parser than the compiler does, so it's possible for it to get into an inconsistent state; Showing errors when the project will still compile. They also didn't add support for inline variables and constants in 10.3, so these show as errors. When error insight gets into an inconsistent state, like it appears to have for you, you could try closing and reopening your project or restarting the IDE. A full build might also clear it up. The feature really needs some attention from Embarcadero.
You in SA.? .. Older versions of Delphi did not make use of VCL. and WINAPI infront of the unit names in th uses list.. Get rid of both and then make sure the there are no doubles like SysUtils etc .... 
Could you like ... post the first 9 lines of that file please? I wasn't expecting class names yet in that area (and neither was the compiler LOL) - just post it and we'll take a look
I've never seen one become stable. They have a policy of not supporting the products. Instead they try to sell you the next one. 
As bmcgee says, this has been a known bug in Delphi for 10 years. The miniature compiler used to do code insight and errors as you type is nowhere near as good as the actual compiler used to compile a code. The only solution is to turn in the error insight feature off. 
What version of Delphi are you using? Are tue browsing and library paths okay? Can you see those units and open them from your code? Are the units in the uses clause? Did you try reinitialising the uses section?
Turning it off is not the only solution. I use it all the time.
These are the first 9 lines &amp;#x200B; unit Unit\_home; &amp;#x200B; interface &amp;#x200B; uses [Winapi.Windows](https://Winapi.Windows), Winapi.Messages, System.SysUtils, System.Variants, System.Classes, [Vcl.Graphics](https://Vcl.Graphics), Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids, Data.Win.ADODB, Datasnap.DBClient, Datasnap.Provider, Vcl.StdCtrls, Vcl.Buttons, MMSystem, ShlObj, Vcl.ExtCtrls;
I am currently using Delphi 10.3
Hmmm, not gonna lie- I normally use FreePascal rather than Delphi, so it is technically maybe perhaps possible this syntax is actually legit ; HOWEVER assuming WinApi, Datasnap and so on are real unit names, perhaps try something like this? uses WinApi, VCL, Data, DataSnap, ShlObj, MMSystem; Pretty sure you don't have to include System because it's the default unit (but sure, go ahead and put "uses System" in there as well, should't hurt). I don't think you're supposed to list every class you're using- just the UNIT FILES where said stuff is declared. If you add components to a form for example, the IDE will add "StdCtrls" once (even though you're using multiple components that reside all in the same unit). Now, in FreePascal at least, I do believe there are separate units for SysUtils and Variants so it certainly can't hurt to try "uses SysUtils, Variants" and see if the compiler complains it can't find them. WinAPI is another weird one-- I can definitely see "uses Windows" which declares most API functions and datatypes. That said, I have another question if you don't mind. How comes we're writing a program with variants and winAPI calls and MultiMedia and message dispatching and all that jazz for a simple school project? Are you sure you even NEED all that stuff?? iirc you said it gives warning but it still compiles and runs, yes? In that case, I strongly suspect you're not actually using anything in these units -provided they even exist (can't say for sure because of FPC..... it's been too long since I used Delphi). How about simply REMOVING them one by one and see what the compiler needs that it can't find?
Well, now there's forced subscriptions or you don't get any bug fixes at all. They also don't separate bug fix updates from new feature updates, so sometimes you have to choose between leave bug A or introduce bug B. 
You can write to text file on android too. Every app has its own data directory to read and write
Has happened to me in several versions, i.e. this is not new to Rio. It can easily happen if you move or copy a project from one version to another. Usually this is due to the fact that you think the file you have open in the editor is being compiled, while in reality a very similar file somewhere else is being compiled, due to things in the search path or Delphi library path, etc. Be sure to explicitly add all the files you want to have compiled to your project (do not rely on them to be compiled in). And check your library and project search paths. Check for duplicate source files using a tool like Everything (http://voidtools.com). Be sure that these are not reachable. But again, simply add all *your* source files you want to be compiled in to your project, just to be sure *they* get recompiled and they are the ones that are referred by other units in your project. But note that this is not specific to Rio or Tokyo or any other version. This has happened to me many times, over all the years, and in many different versions.
In my case, it was usually due to the fact that the unit I was editing was not **added to the project**. It was simply not being recompiled, and the old *dcu* was being used (but the modified code was shown). Sometimes it was also because I had copied a project over, with some wrong dependencies hard-coded into the project options. But current IDEs seem to handle this much better than older ones did. So now I always add **every** of my units to **every project that depends on them**. That way, I am sure they always get recompiled and that other other units reference the correct units.
Actually, the issue turned out to be related to background compilation. Turning off background compilation and the whole behavior disappeared.
The issue was that i had enabled background compilation. Search paths are correct, there are definitely no duplicate files, and i don't keep multiple files of the same project around, VCS does that.
There's no need to use RTTI to get the list of registered classes, you can simply use [`TClassFinder.GetClasses`](http://docwiki.embarcadero.com/Libraries/Rio/en/System.Classes.TClassFinder.GetClasses). Regardless of how you get your class reference, to check if it comes from a particular package you can do something like this: if FindClassHInstance(AClass) = GetModuleHandle('Package1.bpl') then ... &amp;#x200B;
You could introduce a class method returning a string.
Oh, that's interesting,but I can't override TFormClass, can I? And where do I store that string?
You could have a common ancestor in a package shared by the host app and the plugin packages. (baseform.bpl) type TBaseForm = class(TForm) public class function GetCaption: string; virtual; end; TBaseFormClass = class of TBaseForm; Then have each of your packages require baseform.bpl and have your forms descend from `TBaseForm`, e.g.: (package1.bpl - requires baseform) type TForm1 = class(TBaseForm) public class function GetCaption; string; override; end; Then have your host app list baseform.bpl in its runtime packages (project options) so you can reference `TBaseFormClass`: Button1.Caption := (AClass as TBaseFormClass).GetCaption; &amp;#x200B;
Yeh,this worked,only I overrode the Vcl.Forms.TForm class and initiated a strict private class car. So: Type TForm = class(Vcl.Forms.TForm) Strict private Class car FCaption: string; Public Class function GetCaption: string; virtual; Class procedure SetCaption(AValue: string); virtual; End;
You can get its location with TPath.GetDocumentsPath
[RemObjects Pascal Script](https://www.remobjects.com/ps.aspx) would probably be a good choice, though I have not used it in production. I do use [DWScript](https://www.delphitools.info/dwscript/) in production, though I don't use it with visual components. I have experimented with using both of these with the JVCL designer (back when RemObjects Pascal Script was InnerFuse), and they both worked fine, though it was a little tedious to connect things up. I imagine that will probably be a lot easier now with the improved RTTI.
Interested in receiving any background for the various applications that use this tooling. 