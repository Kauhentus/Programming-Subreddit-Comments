http://www.campwoodsw.com/ https://delphiparser.com/2017/04/20/delphi-code-inspection-analysis-tools/ https://www.peganza.com/ https://www.tmssoftware.com/site/fixinsight.asp
All I get from various "community" pages are 404s, is it something very recent perhaps with CEs being removed, or some other anomaly?
After a lot of suffering, I managed to get the "download page" for both Delphi and CBuilder, it looks like you could too if going to [https://www.embarcadero.com/products/delphi/starter/free-download/thank-you](https://www.embarcadero.com/products/delphi/starter/free-download/thank-you) . I don't know if the download will allow you to proceed without the key that is sent in an email. Very confused by the randomness of the CE signup!
Another option [Chakracore](https://github.com/tondrej/chakracore-delphi) I have used it to add scripting for data imports, just not used it visually. Actually have both DWS and Chakracore available, to allow pascal or javascript. 
Draw-Objects Orignal Site [http://angusj.com/delphi/drawobject.html](http://angusj.com/delphi/drawobject.html) Updated repository for later versions of Delphi [https://github.com/littleearth/draw-objects](https://github.com/littleearth/draw-objects) &amp;#x200B; Pretty much already does all you are chasing except maybe the searching, but should not be hard to add.
I will read about it, thank you.
I'll read about it, thank you.
[https://github.com/Fr0sT-Brutal/awesome-delphi](https://github.com/Fr0sT-Brutal/awesome-delphi) [https://github.com/jbsolucoes/pascalawesome](https://github.com/jbsolucoes/pascalawesome)
Nice additions! Thanks
https://www.devexpress.com/products/vcl/
It's depressing how many Delphi developers are trying to make money off of selling other people's open source. For example, http://www.delphiffmpeg.com/ from the above list. FFMPEG is free and open source, yet the top tier of their Delphi wrapper costs **$499**, of which you can bet not a penny goes to the maintainers of FFPMEG. Yunqa is another one, offering software that is really just wrappers of SQLIte, PCRE2, etc. https://www.yunqa.de/delphi/products/sqlite3/index 
&gt;There doesn't seem to be many actively developed third party components + &gt;tools any more. Are people still paying for software libraries in 2019?
Has anyone ever bought an app from the Windows Store?
I just published my 1st app for Microsoft Store. It is free, no one will pay me for that :)
What is the full list of problems this fixes in the IDE?
Follow the link to [IDE Fix Pack](https://andy.jgknet.de/blog/ide-tools/ide-fix-pack/), which includes the change log.
I really think Delphi needs new Product Owners.
Full list = everything changed in this fix pack which applies to the latest version of 10.3.1 Rio, not just the recent additions of this tool. The change log is not clear.
Has it ever really gotten better when they switch owners?
&gt; Has it ever really gotten better when they switch owners? After Borland (unwisely?) gave up on developer tools, I'd argue that Embarcadero did a pretty good job. They had (imho) better priorities, expanded Delphi and increased revenue. I think Idera has made some good (and some not so good) decisions. My favourite one was to (FINALLY!) release a full-featured Community Edition. There will always be people who seem to be heavily invested in predicting that Delphi is dead/dying/whatever, but after many years of getting it wrong, they might not be the best source of information
I guess when I say, "Product Owners", I'm referring to the technical people that are steering the development. I would never argue that the actual owners of Delphi have cared about anything other than profits and selling the company to the next company. &amp;#x200B; RAD Studio, imho, could have really made a difference in where I took my Delphi products after decades of VCL. But it's pricing is an absolute joke and they went for the money grab on legacy in-house applications... and priced it out of the ISV world. Nobody wants an application that is stuck on a desktop anymore. I have spent the past year putting a Golang/NodeJS layer in-front of the VCL and continue to bury old Delphi binaries into a system services. Not one dime has gone towards Delphi or the component ecosphere since my last subscription renewal, as it costs me around $1500/year to update Delphi and all of the components.. so, it always makes me laugh a bit, when Delphi keeps things like the FDIV option... but thinks changing Char/String to Wide variants was "no big deal" and they thumbed their nose at offering compiler-directives or options at a unit level to keep the old behavior. 
&gt;RAD Studio, imho, could have really made a difference in where I &gt;took my Delphi products after decades of VCL. Except they still believe it's the 1990s over there. :-( &gt;Nobody wants an application that is stuck on a desktop anymore. Now they own ExtJS and hired the fellow who helped create Smart Mobile Studio (Object Pascal to Javascript). Do they add web support to Delphi? No, and the fellow they hired was only as yet another evangelist. Meanwhile the last Stack Overflow survey shows only about 35% of devs are working on desktop apps and just over 50% of devs don't develop on Windows. Offering a Windows-only desktop app IDE (that isn't Visual Studio) doesn't seem to be the smartest idea anymore. &gt;I have spent the past year putting a Golang/NodeJS layer in-front &gt;of the VCL and continue to bury old Delphi binaries into a system &gt;services. Nice! &gt;Not one dime has gone towards Delphi or the component &gt;ecosphere since my last subscription renewal, as it costs me &gt;around $1500/year to update Delphi and all of the components.. WOW. I looked into using Delphi for a project that involved some data mining/machine learning, interfacing with websites, etc. and the price was ridiculous: I wanted my program to run on Linux VPS and possibly interface with a database hosted elsewhere, which requires the Enterprise SKU: $3500 Dew Research has a package that combines their matrix types, scientific and statistical function libraries and paltry (three basic methods) data mining libraries with a copy of TeeChart for: $1600. We're already up to $5100. That's before you start adding in the stuff you need to do serious work on Delphi - AQTime Pro is the only full-featured profiler out there, and it's $600. Documentation generation? Another $200. An ORM using modern Delphi features? About another $200. Steema's TeeBI for data manipulation? $279, plus another $140 to use TMS' Excel libraries unless you want to build your own interface to an open source library. And the list goes on with logging, HTML parsing, cloud API wrappers ($100+) from TMS or DevArt because no one supports Delphi, etc. Now we're over $6000. Playing around on PCPartsPicker, one can build an AMD Threadripper system (32 cores, 64 threads) with 64GB RAM, 2 NVMe SSDs striped for hyper-caching performance with a RAID 5 array of massive hard drives for storage, a high-end GPU for GPU computing of deep learning models, 4K curved monitor, etc. And you can just install Python and get all the libraries you need for free, while also being more full-featured and supported. For instance, an entire [machine learning suite in Scikit-learn](https://scikit-learn.org/stable/), a [stack of scientific data and charting libraries](https://scipy.org/), complete [web scraping framework](https://scrapy.org/), popular deep learning libraries like TensorFlow, etc. &gt;so, it always makes me laugh a bit, when Delphi keeps things like &gt;the FDIV option... I remember back in the 1990s complaining that "Delphi doesn't support the new MMX and 3DNow instruction sets but it has an option to avoid the original Pentium FDIV bug!". I was floored to find out *it's still there* (and of course, the 32-bit compiler never gained support for modern instruction sets while the 64-bit compiler was never optimized). &gt;but thinks changing Char/String to Wide variants was "no big &gt;deal" and they thumbed their nose at offering compiler-directives &gt;or options at a unit level to keep the old behavior. The problem with those who develop Delphi is that they don't *use* Delphi. It's a job for them - work 9-5 on system libraries then go home. They're not in touch with the application development world their users live in, nor do they have to use the libraries they produce. Contrast this with those who develop open source tools. Essentially everyone contributing is there because they actually use the final product to produce other production software. They have to "eat their own dogfood". For instance, no one gets paid full time to work on the python reference compiler. Even the language's creator (Guido Van Rossum) gets paid by his employer to work on Python-related stuff 2 days a week, but he does regular work the other 3. More importantly, he requested a developer job, not a management job, which means he stays in touch with the actual development experience. When Python was adding asynchronous support, Guido said he "thankfully" didn't work with code like this so he left it up to another core contributor to decide between competing syntaxes. That person was a full-time web developer, which meant he'd have to live with the additions for the foreseeable future. Do you think he chose very carefully? Marco Cantu, Jim McKeith and the rest of the gang don't depend on writing code to make a living. Whoever's making the decisions can just cram whatever they want into Delphi (often choosing what's easiest for EMBT devs rather than best for end users) and not suffer any consequences. And between subscription pricing and locked-in legacy users, most customers will simply have to put up with it. I think if they had to use their own product - say, write a new crossplatform IDE in FireMonkey - they might get a clue and lots of longstanding issues would be fixed.
Wish I could see the entire source, without being chunked up. But I'm not sure your solution is the answer, as it would kind of eff up the rest of it. The issue appears to be, wtf is FOperation==opNull? If you changed the StrToFloatDef() to return FCurrentTotal when FInputValue has an invalid float value, then the other FOperation modes would have errors. procedure TCalcStatus.CalcTotal; var NewValue: Double; begin NewValue := StrToFloatDef(FInputValue, 0); case FOperation of opNUll: FCurrentTotal := NewValue; opAdd: FCurrentTotal := TCalculator.Add ( FCurrentTotal, NewValue); opSubtract: FCurrentTotal := TCalculator.Subtract( FCurrentTotal, NewValue); opMultiply: FCurrentTotal := TCalculator.Multiply( FCurrentTotal, NewValue); opDivide: FCurrentTotal := TCalculator.Divide ( FCurrentTotal, NewValue); end; // reset status FOperation := opNull; FDisplayTotal := True; FInputValue := ''; end; &amp;#x200B;
opNull represents the state where no arithmetic operation is currently pending in which case the current total is correctly set to the last calculated number. In turn, this should be either zero the first time or the result of past calculations (FCurrentTotal). Setting zero as the fallback value of StrToFloatDef won't allow you to perform sequences of calculations, 10+5+5+5+5+5=35, for example.
 [http://www.riversoftavg.com/products.htm](http://www.riversoftavg.com/products.htm) [https://svgmagic.io/](https://svgmagic.io/) &amp;#x200B;
Do you have source that can be compiled. 
Project -&gt; Options -&gt; Application -&gt; "Application Icon Settings"
Open your project and go to Project -&gt; Options, In the tree structure go to 'Application'. Attached screenshot is from Delphi 10.1, but I believe all versions are similar. Don't forget to set for Base configuration, otherwise your release version still won't have the icon.
TeeChart Std is available out of the box
If you go to the Tools | Manage Platforms menu item in the IDE, then select the Additional Options tab on the form that comes up, you should see TeeChart Standard as an install option. Tick it if it's not already and Apply Options.
 Hi, quick note; Oxygene uses LLVM for all native targets: Android, Windows, WebAssembly, Linux, OSX etc.
Thank you!
Too bad the price for the compilers isn't included. Sure, you can get Linux binaries from Delphi, but it will cost you.. a lot!
It'll cost you almost three times the cost of my desktop PC. :-(
If one were to factor in language features in addition to the platform targets, Oxygene would win hands down as the most modern Pascal relative. 
Why not just use an available tool e.g. https://epacad.com/epacad-es.php 
Is it posible to make widows phone apss whit Oxygen? In one part of text its say yes. Can anyone confirm?
Also a small tip: have in mind that you can use a [multi-sized](https://icoconvert.com/Multi_Image_to_one_icon/) .ico file for your application icon. The [standard sizes](https://docs.microsoft.com/en-us/windows/desktop/uxguide/vis-icons) that are used by windows are: &gt; **Application icons and Control Panel items:** The full set includes 16x16, 32x32, 48x48, and 256x256 (code scales between 32 and 256). The .ico file format is required. For Classic Mode, the full set is 16x16, 24x24, 32x32, 48x48 and 64x64. With this way, we let the OS choose the rendering size to avoid icon pixelation.
Nice work man! The graphics look very nice and polished. &amp;#x200B; I'm trying to use the FMX framework every now and then, but everytime I do, I'm getting trapped by using too many Win32/Win64 based stuff and libraries :P I guess I'm more a VCL developer. &amp;#x200B; But.. great job doing this project!
I know about EPACAD, actually i'm using it already but this is part of an evalutaion project and i need to develop this tool myself
I started completely fresh here. I too have many libraries I rely on for Windows development, some of them even ASM optimized, so there's no chance to convert them to a cross-platform solution. I had to write pascal-optimized versions instead for some of them. I'm satisfied with the end results, but it was indeed quite a head-ache, especially scaling the image in high quality.
https://github.com/Mimisss/DelphiSuperCalculator
Looks very cool. I recently downloaded 10.3.0 and after 15 years I'm coding in Delphi again. I love every minute of it but I didn't try mobile yet.
The biggest hurdle for mobile development in Delphi is compilation speed and debugging. Compiling a project to a device/emulator can take a minute (A Windows build takes under 2sec) and debugging is very unreliable (doesn't always work and when it does, it's not always very stable).
FreePascal + Lazarus is the way to go :)
 [https://www.peganza.com/](https://www.peganza.com/) ?
Peganza's tools are great. This would be in addition to, not a replacement of. Understand is another option: [https://scitools.com/](https://scitools.com/)
Up to 8 votes... need some more!
I tried the eval version of Pascal Analyzer and it found some good things; but 95% of the issues are false positives. Is there any way to permanently tell it to treat a specific code piece as not an issue so it doesn't get flagged?
Up to 17 votes - keep going! &amp;#x200B; 25.56.35
Ah, reading the VCL documentation again, it seems I can use the initialization section, I simply used the wrong code. If I use the following (not via TStyleManager), then it works. &amp;#x200B; initialization TCustomStyleEngine.RegisterStyleHook(THTMLButton, THTMLButtonStyleHook);
Up to 22 votes - we need some more activity!
How does it handle SSL on the server side?
I haven't tried it yet SSL yet on the server but it looks like you can pass the cert hash into the component and it gets registered using HttpSetServiceConfiguration.
$224.55 USD for WebSockets. Poor Delphi developers and the ecosystem. Been using Delphi since Delphi 2.0 in the 90s. I have several retail products which are hopelessly locked in Delphi due to the costs of a rewrite. However, a year ago, I started pushing the Delphi code into a Windows System Service and using IPC to communicate with it from NodeJS/Golang and provide a REST interface to be consumed by React/Angular. Best decision I have ever made, and it makes my skills relevant again, as Delphi isn't going to get you a job and I do ZERO delphi work anymore. Websocket Server/Client is 100% FREE in the NodeJS ecosystem, as well as thousands of other pieces of code. No more do I need to spend thousands of $$ with each Delphi update and the components. [https://github.com/websockets/ws](https://github.com/websockets/ws)
Very well received news
One of the best sites for those new to Delphi is the DelphiBasics site Here's a link for CASE: [http://www.delphibasics.co.uk/RTL.asp?Name=Case](http://www.delphibasics.co.uk/RTL.asp?Name=Case) and one for IF: [http://www.delphibasics.co.uk/RTL.asp?Name=IF](http://www.delphibasics.co.uk/RTL.asp?Name=IF) which should get you started.
I think it's horrible. One step forward with type inference, one step backwards returning to manual memory management.
I'd rather have compatibility across the platforms.
I have asked people (mvps) to vote.
But if it's uniformly bad.... Memory management is something that's absolutely required today if anyone young is going to take an interest in the language. It's even more important with mobile development, where the official languages already have memory management and memory is at a premium.
To me, the AppMethod branding seemed to be their big attempt at going after new devs... and it simply didn't work very well. The only chance that I see Delphi growing market share is to continue to provide the existing base more reasons to get on the subscription model to provide the needed resources to plow back into the product and into marketing. They obviously need a better marketing strategy than they currently have as they miss so many opportunities to plug Delphi. Their online presence has been generally sub-par for quite a long time. There's a few glimmers of hope from time to time, but they need to dedicate a lot more resources and effort into it. Their forums are awful. EDN file downloads are still based on early 90's technology. They need young, energetic and creative people to take charge of their online presence and spend what needs to be spent. I suggest that they rewrite the EDN system in Delphi + Sencha. Hire it out if needed...I'm sure there are Delphi technology partners that would love to put their name behind it. Put the entire system on GitHub to show off the technology. Be proud of the online presence and not provide some lame tool for an online community which diminishes the brand, rather than enhancing it.
Thanks! I received an email from their CEO/Co-Founder (Olivier Gaudin) on April 8th that Delphi support is not currently on their roadmap. I hope to get enough activity on this request to change his mind!
I've been out of the Delphi community for about 13 years. Lately I'm back because of the community edition and I didn't find the memory management a problem. There are many many other issues with Delphi. Many roads block for new generation of developer, but I don't think memory management is a major issue.
Jedi JCL and JVCL But, i believe you need stuff linked with debugging symbols, which isn't generally done outside of debugging.
Might be helpful: [Unter der Luppe](http://edn.embarcadero.com/article/27758) (German)
Thank you, I'll definitely check it out. :) Yeah, in statically linked executables it's true. Thats why I'm looking for `.bpl` libraries. In my experiments they preserve all symbols until linking. Which makes sense since ,I think, they are used during linking to map calls to library functions. But maybe I'm wrong, because I was not successful in getting mangled symbols from `.dlls`.
Thank you, looks like it could be helpful. :)
You might find something here you can use: https://github.com/Fr0sT-Brutal/awesome-pascal
&gt;but I don't think memory management is a major issue. RedMonk's rankings list the top 20 most popular programming languages as: 1 JavaScript 2 Java 3 Python 4 PHP 5 C# 6 C++ 7 CSS 8 Ruby 9 C 10 Objective-C 11 Swift 12 TypeScript 13 Scala 14 Shell 15 Go 15 R 17 PowerShell 18 Perl 19 Haskell 20 Kotlin Discounting the shells and CSS, these languages have automatic memory management of one form or another: Javascript, Java, Python, PHP, C# (the top 5), Ruby, Objective-C, Swift, Typescript, Scala, Go, R, Perl, Haskell, and Kotlin. Manual memory management: C RAII, smart pointers: C++ As you can see, almost every language out there that people are using has automatic memory management or some limited form of memory management. Other than Delphi, no other language is requiring users to create nested try...finally blocks and manually deallocate every object. When I show this to younger developers, let's just say the reaction isn't positive. And as far as claiming to be a "Rapid Application Development" language - there's nothing rapid about manual memory management. Type inference was a huge step forward into the modern era; it's sad they're backtracking on their memory management progress (although admittedly they didn't handle the design of automatic memory management very well). tend to believe that Nick Hodges was right back in the days of CodeGear when he suggested the Delphi compiler have a "legacy" mode and a "modern" mode, the latter freeing up the language designers to implement new features without worrying about backwards compatibility.
Thank you very much. I'll use something from this for sure.
These kinds of articles tend to bug me. The advantages of Delphi include support for SQL databases and object-orientation? What *doesn't*? Clear syntax? Clearer than Perl and C++, but again, so is everything else while not being as verbose. Supports "entire Windows API"? No, it doesn't. They stopped adding built-in support for Windows libraries after Windows 98. And everything else can call the low-level C APIs of Windows. Interoperable with C++? Not easily, and far less easily than other languages with a dedicated FFI (foreign function interface). "Highly adaptable VCL framework"? I'm not sure what that means, but the VCL is archaic and impossibly entangled with Windows, requiring the birth of FMX for modern, cross-platform interfaces. "Minimal app maintenance required " - again, I'm not sure what this means. Other code doesn't need to be fed and watered. "Drag and drop mechanism for GUI implementation, allowing you to build GUI software quickly" - not exactly a novel concept in 2019 either.
Weren't the TurboPower libraries open sourced a long time ago? Or was this one sold long before then?
How is there no Delphi case studies? Maybe I'm missing something. [https://www.chetu.com/case-study.php](https://www.chetu.com/case-study.php)
I don't believe SleuthQA was ever released. I'm not from NexusDB, but I believe they purchased the rights long ago. I know they have been working on their own version (Nexus Quality Suite) since mid-2013 at least. &amp;#x200B; I've pulled the version and release date for a quick summary: 1.63: 2019-04-05 1.62: 2019-01-08 1.61: 2017-05-25 1.60: 2017-05-25 1.59: 2015-10-14 1.58: 2015-07-15 1.57: 2015-06-24 1.56: 2015-04-14 1.55: 2014-08-26 1.54: 2014-06-29 1.53: 2014-06-17 1.52: 2014-03-12 1.51: 2014-03-01 1.5: 2014-02-09 1.00: 2014-03-30 1.00 Beta 2: 2014-07-16 1.00 Beta 1: 2014-04-01 &amp;#x200B; The oldest issue I found in Mantis dates back to 2013-05-02 [https://www.nexusdb.com/mantis/view.php?id=1535](https://www.nexusdb.com/mantis/view.php?id=1535)
My favorite is when they try to defend Delphi against being "dead". As long as legacy software exists, it never really dies. Perhaps a better term is "zombie", as Delphi is lifeless, stagnant and propagates by destroying employment viability of developers that don't learn new skills and choose to stay with \*dead\* tools.
I found an old reference dating back to 2003 on SourceForge: "Non-library products will not be open sourced. We are currently pursuing other options for these products, and will make announcements regarding their disposition when more information becomes available. If you are interested in acquiring one or more of these products (and are capable/qualified to do so) please contact us. " [https://sourceforge.net/p/tpapro/discussion/241882/thread/c5ad2234/](https://sourceforge.net/p/tpapro/discussion/241882/thread/c5ad2234/)
We are a Delphi shop and we use Chetu for our front end development. The teams we work with know little to nothing about Delphi. We don't need them to though, since we expose everything through APIs that Chetu codes to. The one thing I learned from this article is that Chetu apparently has Delphi guys too, not that we'd use them for Delphi work.
Look at Mormot too: [https://synopse.info/fossil/wiki/Synopse+OpenSource](https://synopse.info/fossil/wiki/Synopse+OpenSource)
You expect people who use and like Delphi to obsess over it a little, but as long as there's a dedicated following of Delphi haters who spend more time in these groups than I do and breathlessly comment over and over and over again on how much they think people should dislike Delphi, then it's unlikely to fall into obscurity. You guys should drop by the local user group. I'll buy you a drink.
Following your example I would say that none of the languages you listed have the distinction between in "interface" and "implementation" (except c and c++ ) not to mention the distinction between "function" and "procedure". The younger developers I showed them Delphi were much more concerned and upset about this then using Try/Finally as you have to manage resources in just about every language (using in c# , with in python etc..) Personally I think one of the worst aspects of Delphi is the way object interface is implemented (one of the nicest things I found out about FreePascal that you can just treat interfaces as language construct not related to any memory module, as every other language in you list does!) It is true that manual memory management is not exactly compatible with the idea of RAD. But I never found it a major problem when dealing with client/server type of applications. I don't believe the Delphi team have the resources to re-write major parts of the compiler. I don't know what amounts to major re-write, but your suggestions sure does sound like one.
I will, thanks. :)
&gt;legacy software Lots of current software, too. \[You can check for yourself\]( [http://glooscapsoftware.blogspot.com/2017/05/software-made-with-delphi-how-do-you.html](http://glooscapsoftware.blogspot.com/2017/05/software-made-with-delphi-how-do-you.html))
To read The Object Pascal Handbook by Marco Cantu is a good way to learn all the aspects of the Pascal language.
Show me the jobs.
Well, speak of the devil... &amp;#x200B; You're right that there are fewer Delphi jobs than some other languages, but they're out there. I've been working steadily with Delphi since 1995.
How do anecdotal stories about working in Delphi since 1995 help? I have also been "working in delphi" since 1998. But that's with my own software that has a codebase that is hopelessly vendor locked to Delphi. Anyone can search Indeed.com for jobs using Delphi (weed out the "Delphi" hotel mgmt) and there's proof of the non existent job market. It's disingenuous to continually prop up this Emb MVP myth that you can obtain gainful employment with Delphi. Unless you live in Brazil or South African, you'd need to transport yourself back to 2003. But, of course, there's always categorizing it all as being a "delphi hater".
&gt;How do anecdotal stories about working in Delphi since 1995 help? Any more than your anecdotal stories, you mean? &amp;#x200B; &gt; Emb MVP myth that you can obtain gainful employment with Delphi Made by some of the people who have gainful employment with Delphi Which includes you, doesn't it? &amp;#x200B; So you're saying that you troll Delphi groups anonymously because you don;t thi9nk there are enough Delphi jobs out there? Interesting. Are you looking?
&gt;&gt;How do anecdotal stories about working in Delphi since 1995 help? &gt;Any more than your anecdotal stories, you mean? No anecdotes here, I said look at Indeed. Try to find some Delphi jobs. Here's a preloaded one for Seattle, WA within 100 miles. There's an odd smattering of around 9, 2 look like Delphi re-writes, the rest is mismatches... https://www.indeed.com/jobs?q=Delphi+-hotel&amp;l=Seattle%2C+WA&amp;radius=100 Now look at Node.JS, there are over 500... https://www.indeed.com/jobs?q=node.js&amp;l=Seattle%2C+WA&amp;radius=100 &gt;&gt; Made by some of the people who have gainful employment with Delphi Which includes you, doesn't it? I am not employed as a Delphi developer, no. Our Delphi code is stuffed into a Windows System Service, that never sees the light of day and is being re-written feature-by-feature. The work we perform on the product is written in a *modern* set of tools, Node.JS, GoLang and React. &gt;&gt; So you're saying that you troll Delphi groups anonymously because you don't think there are enough Delphi jobs out there? Don't get mad. I know you want to characterize any kind of dissent with being a "hater" or a "troll". It's not that there aren't *enough* jobs, it's that it's practically non-existent. This statement is directly relatable to the OP's posting and the article which directly says "Delphi isn't dead" and attempts to persuade people and sell development services as a result. Disagreeing, providing facts and writing about it is not "trolling".
Thanks!
&gt; Try to find some Delphi jobs I have some Delphi jobs. You could pick up Node.js. I hear really good things about it. &gt; I am not employed as a Delphi developer And yet you spend a bunch of time hanging out in Delphi groups. &gt; Don't get mad. More amused. What successful product doesn't have its fair share of anonymous trolls? Keep up the good work. That drink offer still stands if you want to show up at the local user group. We don't get really big crowds, but I assume the people who show up at the Delphi User Group are using Delphi. They could share their anecdotes with you.
I blocked you 1 year ago for incessant personal attacks; first time I'd blocked a non-spam account on Reddit and I'd been a member for over six years at that point. I decided to check out the sub today as a non-signed in user out of curiosity to see if anything had changed. I was disappointed but not surprised to find you continuing to make personal slights at my expense even though I hadn't seen or replied to anything you'd written in a year. I unblocked you for today to tell you that if you want to talk about haters you might want to examine some of your own behavior. Also, there are no more local user groups. Meetup.com is showing me 100+ meetups within 25 miles of me (helps to live just across the water from New York City) but no Delphi meetups. Scrolling down now... up to 200 meetups, no Delphi. Doing a search... zero. Sorry.
25 miles is 40.23 km
I have never had much patience for Delphi trolls. That hasn't changed. &amp;#x200B; [For example...](https://www.reddit.com/r/programmingcirclejerk/comments/1xz0da/epic_delphi_rant/)
Could you actually quantify that better than "they're out there"? That's what Fox Mulder used to say! Doing a search now on Dice.com (only tech jobs). Not looking good... expanding the search radius to 100 miles.... OK, discounting the one job titled ".NET Developer C#", there are a grand total of **two** jobs showing up for me. Now I'm within 25 miles of my state capital, the largest city in my state, multiple national headquarters (two drug companies, Panasonic USA, Bed Bath and Beyond, etc.) and New York City. Total Delphi jobs within 100 miles: **two**, and that's counting the one remote job Dice found. Now the two jobs are posted by the same company and the text is identical, suggesting it may just be one job. One of the requirements is: "1-5 + years' Delphi, C#, and SQL Server" So if you don't know C# or SQL Server that brings the count down to zero. Also that remote option is a blessing given Google says it's located just over 98 miles away in another state. Heck of a commute. So if you were a Delphi developer looking for a job and you didn't land this one or didn't know C# or SQL Server, you'd be unemployable. As for me, I needed to transition to a logistics analyst job in 2005 from supply chain software development because "Delphi" was about as useful as "candle making" or "whaling" on my resume. Seriously, the first time an HR person asked me "Delphi - is that a computer language or what?" I tried to suppress a smile at their lack of knowledge. By the **third time** I got that question, I didn't want to laugh any more. I knew I was in trouble. When I was working at Bed Bath and Beyond HQ after that I tried to get a copy of Delphi. **No one in the IT department below Director had heard of Delphi**. On top of that, it was the first time I'd been unable to get Delphi into a company I was working at. That's when I knew Delphi was in serious trouble. Things certainly haven't improved in a decade plus since. Who wants to pursue a career in Delphi because the jobs are "out there"? There are websites now where companies will bid on candidates! (I asked the biggest and they politely suggested that a Delphi user should look elsewhere, telling me that none of the companies they work with had ever asked about Delphi users) There are "boot camps" where they'll take programmers and turn them into web developers, data analysts, etc. and **guarantee** them a job or their tuition back! Can't do that with Delphi. I even know one place that, if you pass their screening, will train you for free and ask 10% of your wages for a year (or two, I forget) if/when they land you a job. In that kind of market where employers are desperate for developers, who wants to hunt for jobs like Agent Mulder hunted aliens?
&gt; Anyone can search Indeed.com for jobs using Delphi (weed out the &gt;"Delphi" hotel mgmt) and there's proof of the non existent job market. Fun fact: none of the Inquisition members who condemned Galileo to house arrest for life would accept his invitation to simply look through his telescope.
&gt; Here's a preloaded one for Seattle, WA within 100 miles. Heh, one of the bootcamps I mentioned earlier is located in the Seattle area. They're so hard up for developers there this place will train you and then guarantee you a web development job or they'll refund your tuition. We're getting data science boot camps on the East Coast now.
&gt;My favorite is when they try to defend Delphi against being "dead". Ok geez, Doctor Rudy just did that in a thread on Delphi-Praxis before it got locked. He pulled what I labeled "a rhetorical technique invented by Bruce McGee" to claim that people have always said that Delphi was dying or doomed since it was released. Neither he nor Bruce ever site any references for this. The implication is that because of unnamed people in a different time under different circumstances said that Delphi would die and it's still here, that negates any criticism of Delphi now. As I told him, "They laughed at Galileo!" doesn't have any bearing on criticisms that my new perpetual motion machine won't work. He didn't address that argument, just insisting he'd seen these predictions. Then we got to his "proof" that Delphi was, and I quote, "going strong" (although he seems to have moved the goalposts to "surviving" at this point): &gt;According to Embarcadero, and from what I see in forums like this, Idera's &gt;and on Stack Overflow, I think it is accuratet. I see lots of newbies coming &gt;from other languages having problems with some of the idioms (like &gt;1-based strings &lt;g&gt;, static arrays or pointers). Ah yes, South Africa adopting Delphi for education over resistance from their own teachers, who started a movement to stop it! And I'm sure the scholarships Idera subsequently awarded some South African students had nothing to do with the decision. &gt;It seems to be selling well, &gt;despite some of the current problems with 10.3. Oh, it is not doing as well &gt;as your beloved Python, but that's OK, Delphi has never been the top &gt;choice, but still strong enough to survive and get better (you don't survive if &gt;you don't improve). Rudy is too smart to believe his own argument here.
Hi Joseph, &amp;#x200B; Yeah, I wish there were more publicly listed Delphi jobs, too. &amp;#x200B; I think you're going at this the wrong way around and being disingenuous in the process. It should not be about a career in Delphi so much as using the right tool for a given job. In my case, it's Delphi more times than not. I'd go a step further and say that anyone who only wants to learn Delphi is being short sighted. &amp;#x200B; Another frustrating thing is hearing people claim that they can't find Delphi developers in the same city where Delphi developers say that they can't find Delphi jobs. There's a disconnect there. Networking and word of mouth help, but it needs to be improved. &amp;#x200B; I'm not sure where it's written that anything called a boot camp **guarantees** anything, but claiming so comes off as disingenuous again and a straw-man argument. &amp;#x200B; I don't care that you don't like being called a troll. Hanging out in Delphi groups and spreading half (at best) truths in an obvious effort to disparage a product that you don't even use with pretty much no redeeming value whatsoever; That seems like trolling to me.
Didn't we establish years ago that these lists tend to be dominated by software originally written in the 1990s? &gt; Companies don't necessarily go out of their way to talk about what &gt;development tools they use. Big successful ones do all the time. Paypal engineers have their own blog. Netflix does too and speaks at various conferences. Facebook, Google, YouTube. Major companies also tend to sponsor conferences devoted to the tools they use.
&gt;claim that people have always said that Delphi was dying or doomed How long have you been doing it?
&gt;Didn't we establish years ago that these lists tend to be dominated by software originally written in the 1990s? No. I'm sure you asserted it, but you'd be wrong. &amp;#x200B; &gt;I want to see a startup that chose Delphi this decade. If I told you that I've done work for three (I did), but won't discuss their names (I won't), would you take my word for it? If I was the one who brought Delphi into the situation for two of those, would that be considered cheating? Right tool for a given job and all... And there's a caveat. One of the companies is older than ten years, but are new to Delphi. &amp;#x200B; &gt; Big successful ones do all the time. Not in my experience. Ask HP, Asus and Dell what they use for software development. spoiler: there's some Delphi in the mix. Disney, too.
Sounds like you are trying to claim that being called out as a troll is some kind of persecution. &amp;#x200B; &gt; "delphi hater" Just a reminder that you were a frequent contributor to a group literally called the [Delphi Haters' Blog](http://delphihaters.blogspot.com/).
&gt;Just a reminder that you were a frequent contributor to a group literally called the &gt; &gt;Delphi Haters' Blog &amp;#x200B; This is literally a lie, the blog's last entry was July 2015. How is it possible to be a frequent contributor? In fact, it looks like every post was removed from it. [http://delphihaters.blogspot.com/](http://delphihaters.blogspot.com/)
"contributor" may imply that you were posting articles. I apologise. I meant that you commented frequently and quoted from it. I'm sure someone could use the wayback machine to see the specifics. In any event, it's difficult for someone who frequented "The Delphi Haters' Blog" to whine about being characterised as hating on Delphi.
I tried it for 2y and was plagued with problems. Finally we developed our own library and it was much better. But if you dont need a lot of performance it is a very good library.
That you have this bookmarked from 5 years ago proves my point. I don't have the comment bookmarked where /u/boulderdrop calls you the Baghdad Bob of Delphi. Nor did I bookmark the incident that caused me to block you where I complained that every time I try to have a decent conversation with you you devolve into personal attacks. You replied with a rant about my being a troll and claimed I'd been "banned" from several blogs; someone then asked you if you were trying to be funny or if you didn't realize you'd just proven my point. Proving history repeats itself, you just did the same thing all over again. It's hopeless.
&gt;I think you're going at this the wrong way around and being disingenuous &gt;in the process. It should not be about a career in Delphi so much as using &gt;the right tool for a given job. In my case, it's Delphi more times than not. I'd &gt;go a step further and say that anyone who only wants to learn Delphi is &gt;being short sighted. I didn't bring up jobs. Personally, I believe people should use whatever makes them happy. But if people take their own personal reasons and claim they're objective reasons that should apply to everyone else, that's misleading and what's actually disingenuous. When I bought my AMD processor a few years ago, part of the reason was because I'd never owned an Intel CPU in my life and didn't want to break my streak. :-) I did not go on hardware subreddits and argue that AMD chips were the best chip to go with at that time though. My beef with "articles like this", as I initially put it, doesn't apply just to Delphi. I've seen someone in /r/programming put it perfectly: "Not another Why I Use X article which turns out to be full of vague generalities that apply to every language, in the end only proving the author has never used anything else". There's a rather infamous one in which the author decides that Haskell is the most productive language in existence and gets savaged for it by commentators. :-) No disagreement about using the right tool for the job, but that's another topic. ​ &gt;I'm not sure where it's written that anything called a boot camp guarantees &gt;anything, but claiming so comes off as disingenuous again and a straw- &gt;man argument. Seriously? Where is it written? In the advertising of the boot camps that have tried to get me to sign up! Let's start with.... https://www.coursereport.com/blog/guide-to-coding-bootcamps-with-job-guarantees &gt;So you want to land a job after coding bootcamp? The statistics are on &gt;your side – 73% of bootcampers report being employed as developers &gt;after graduation. But did you know that many coding bootcamps go one &gt;step further and offer a job guarantee? We’ve put together a list of in- &gt;person and online coding bootcamps in the USA and around the world &gt;which offer guaranteed job placement. https://www.switchup.org/blog/coding-bootcamps-with-job-guarantees &gt;In recent years, job guarantees have become a popular way for both online &gt;and in-person bootcamps to stand out from the competition. Our list below &gt;includes programs like Bloc, an online program that guarantees a job within &gt;180 days or your money back, and Codeup which promises a job offer &gt;within six months of graduation or a guaranteed 50% tuition &gt;reimbursement. If you want a school with a job guarantee, explore our list &gt;below: This is the problem with trying to discuss something with you. Without checking anything out, you went and impugned my character, accusing me of coming off as " disingenuous again and a straw-man argument." You don't actually refute my claim (which is clearly true), yet jump right to a comment on my person. Meanwhile, I post facts with anything I write and check it before posting it. Like I said, you might want to reflect if you're doing a bit of projecting. ​ &gt;I don't care that you don't like being called a troll. Hanging out in Delphi &gt;groups and spreading half (at best) truths Which I've never done and no one but you has ever accused me of doing. Instead of bookmarking rants from 5 years ago, you should have bookmarked the epic battle over the "3 million users" claim on the old forum. That was the one where you told Dalija Prasnikar that yes, you believed that you knew the number of Delphi users better than the publishers at O'Reilly Media. Also the one where Nick Hodges continued to debate me because "he can't **know**" in a philosophical, absolute sense that I was right despite posting reams of evidence. I followed this by posting a link to his blog where he said he believed Delphi use was increasing; "I have no evidence of this; I just feel it in my heart". I'm not the one known for spreading half truths. I'm the one known for performing my own study of Stack Overflow tags before they offered their own analysis tool to study Delphi tag trends over time. I'm the one known for spreading uncomfortable truths, not half truths.
Bruce, can you EVER discuss a subject without making attacks upon the character of those involved? And in this case, a dumb one? You've scored an own goal here. :-) :-) :-) If making comments to posts on a blog called "Delphi Hater's Blog" makes me a Delphi hater, then making comments here makes me a fan. :-) You can't have it both ways. I also notice you're not criticizing any comment I actually made there; only that I commented on articles there. So this isn't even good character assassination. I wish the blog still existed so I could post for you the time I got the owner of the blog to take down one blogger's post which accused then Embarcadero CEO of sexual impropriety because he'd married his secretary and the other two times I got him to take down posts from a blogger who made homophobic remarks about people in the Delphi community.
I commented on articles there. That's his entire complaint. He's not citing anything I ever wrote in those comments. In fact, At least three times I posted comments that got the owner of the site to edit or take down posts when one of the bloggers there made unfounded accusations against the EMBT CEO or homophobic remarks about various employees.
&gt;In any event, it's difficult for someone who frequented "The Delphi Haters' &gt;Blog" to whine about being characterised as hating on Delphi. No, it's not difficult since you're not accusing me of having made a single inappropriate comment. Once again, you're trying to engage in character assassination through vague insinuation. Heck, YOU commented there!
Since it was dying or doomed.
&gt;Not in my experience. Ask HP No problem. HP has sponsored PyCon in the past. &gt; Asus and Dell what they use for software development. spoiler: there's &gt;some Delphi in the mix. I wouldn't be bragging about that, given that ASUS just got caught with malware injected into their software! :-( https://motherboard.vice.com/en_us/article/pan9wn/hackers-hijacked-asus-software-updates-to-install-backdoors-on-thousands-of-computers &gt;Disney, too. Disney no. One guy, Konopka, sold kiosks to Disney that run with Delphi software. Disney itself doesn't use Delphi, or at least there's no evidence of it. &gt;Not in my experience. https://medium.com/netflix-techblog/python-at-netflix-86b6028b3b3e &gt;We’ve blogged a lot about how we use Java here at Netflix, but Python’s &gt;footprint in our environment continues to increase. In honor of our &gt;sponsorship of PyCon, we wanted to highlight our many uses of Python at &gt;Netflix. https://web.archive.org/web/20141213011957/https://www.paypal-engineering.com/2014/12/10/10-myths-of-enterprise-python/ &gt;Today, Python powers over 50 projects.... In the coming series of posts I’ll &gt;detail the initiatives and technologies that led the eBay/PayPal Python &gt;community to grow from just under 25 engineers in 2011 to over 260 in &gt;2014. Everything is open source today anyway. I don't know what a company would have to gain by being secretive regarding its tech stack. That would make recruiting rather difficult.
Oh cry me a river.
Wow. Long. Please see my post about obsessive Delphi haters. Especially ones who don't actually use it but have a lot invested in insisting that it's dead/dying.
I don't have it bookmarked. Just search Epic Delphi Rant and there is is. &amp;#x200B; Just like anyone can search Joseph Mitzen and Delphi to see your long history of anti-Delphi trolling. They can judge how decent your conversations and very (very!) long rants are. &amp;#x200B; You should block me again. I don't have any more patience for your obsession now than I did years ago when you were up to the same shenanigans.
&gt; you're not accusing me of having made a single inappropriate comment Lots of misleading statements and half-truths, though.
&gt; dying or doomed Seems trollish...
You're misrepresenting, well, everything. But especially Disney's FastPass system. &amp;#x200B; Thanks
&gt;I didn't bring up jobs You kind of did... &gt; Doing a search now on Dice.com
Are you saying Disney wrote their fastpass system in delphi?
[removed]
Depends what your confusion is. case nMonth of 1: Name := 'January'; 2: Name := 'February'; 3: Name := 'March'; 4: Name := 'April'; 5: Name := 'May'; 6: Name := 'June'; 7: Name := 'July'; 8: Name := 'August'; 9: Name := 'September'; 10: Name := 'October'; 11: Name := 'November'; 12: Name := 'December'; else Name := 'Smarch'; end; &amp;nbsp; if nMonth = 1 then Name := 'January' else if nMonth = 2 then Name := 'February' else if nMonth = 3 then Name := 'March' else if nMonth = 4 then Name := 'April' else if nMonth = 5 then Name := 'May' else if nMonth = 6 then Name := 'June' else if nMonth = 7 then Name := 'July' else if nMonth = 8 then Name := 'August' else if nMonth = 9 then Name := 'September' else if nMonth = 10 then Name := 'October' else if nMonth = 11 then Name := 'November' else if nMonth = 12 then Name := 'December' else Name := 'Smarch'; Both work; but you usually use `case` when you have an specific *set* of things.
An outside company with a Delphi devotee built it as a contractor. Notice Bruce doesn't deny this. It's like Bill Gates buying a router which uses Linux and claiming that Bill Gates runs Linux.
&gt;You should block me again. As my late great friend used to say in the days of USENET, "Back into the bozo bin!" It's impossible to have a serious discussion with you.
No, /u/boulderdrop did, you replied to him, then I replied to you. My original post here was complaining that the article's pluses for Delphi were too vague and generic.
Oh yeah, my other pet peeve about you... when someone does you the courtesy to read your entire post and address each point, you simply state that it's too long and you're not going to read it. And then suggest that it's the other people who are trolling. A troll is someone who makes a post just to try to make others angry. Someone who makes an in-depth argument isn't a troll; they're someone who disagrees with you.
Well, that was a reasoned, well-thought-out reply.
You can't just claim this; you need to *show* this. All you do when someone confronts you with an argument you can't defeat is claim that they're full of "misleading statements and half-truths" and then make personal attacks on them until they go away.
&gt; You're misrepresenting, well, everything. Another masterful rebuttal.
You both brought up jobs. That second quote is from you. &amp;#x200B; Though it's hard to tell anti-Delphi trolls apart.
&gt; my other pet peeve Aside from having some kind of irrational grudge against Delphi? A product that you don't use but spend lots of time trashing?
We can start with your misleading commenets about Ray Konopka and Disney.
I think you're moving the goal posts and further misrepresenting the facts. Delphi was used and continues to be used at Disney by one of their internal teams. Not a single one-off kiosk from a contractor. &amp;#x200B; Disney is one of the big companies actively using Delphi today.
And you quoted from the Delphi Haters' Blog in other forums as if their posts were proof of something other than their self-stated hatred of Delphi.
Good idea. You obviously can't tolerate criticism of your criticism, so (further) ignorance is probably your best bet. &amp;#x200B; Good luck with your crusade.
Which page comes up for you first with a Google search? Delphi Basics is the first hit for me, and the page you've quoted isn't even in the first page of my results! Given that Delphi Basics has been around for so long, it tends to be the most visited and thus higher ranked in search engine results.
[removed]
Think there's any MVP's under 45? 50?
I'm not sure if you added the troll tags or if a Reddit bot is doing it based on your posting history. &amp;#x200B; But the answer is "yes"
I honestly don't understand what you are trying to achieve?
It's a joke.
And the truth. :-(
I think their intent is fairly [obvious](https://blog.codinghorror.com/what-is-trolling/).
I saw you listed as an MVP. Perhaps you'd like to know what [shill](https://en.wikipedia.org/wiki/Shill) means.
Yes, I'm an Embarcadero MVP and was a big fan of Delphi long before that. For that privilege, I have access to a license for Delphi. You seem to be suggesting that I'm only saying good things about Delphi in exchange for what amounts to a day's worth of billable time per year. You would be entirely wrong. And, unlike you, I don't post anonymously, so anyone who know me knows all of this already.
Congratulations to Loy Anderson and Holger Flick - our new regional coordinators for North America. &amp;#x200B; I know them both and if the goal is organisation, advocacy and education, Embarcadero would be hard pressed to find better people. I'm looking forward to what comes next.
- bug fixes - bug fixes - bug fixes - extension methods (not to be confused with the very not useful class helpers) - record assignment copy constructors The last two can provide extraordinarily far-reaching value that's not immediately apparent.
What do you mean by extension methods ?
Extension methods are very similar to Delphi's class helpers, and you can even retain the same syntax. But class helpers are fundamentally not meant to add methods to existing classes or records. The critical distinction comes because there can only ever be one class helper for a type. For example if you tried to declare a new class helper for a string, you lose all the existing helper methods for **string**. - There can only ever be one class helper in scope. All this is documented in the docwiki: that class helpers are not meant for general use. example I wanted yesterday was the ability to add extension methods to an interface TKnownFolderHelper = helper for IKnownFolder function GetParentFolderId: TKnownFolderId; end; Instead I have to write the classes: TKnownFolderHelper = class public class function GetParentFolderId(this: IKnownFolder): TKnownFolderId; end; Or more commonly: function IKnownFolder_GetParentFolderId(Self: IKnownFolder): TKnownFolderId; When you create extension methods, that starts to become the gateway to LINQ.
I get you, they should allow class/record helpers for general use.
Fix the IDE. Daily crashes are unacceptable
I thought this was about roadmaps; in reality it's basically a plea for users with older versions to get on the subscription program. Let's see... &gt;Today, subscription models are standard practice in the software &gt;industry. No, not really. &gt;We estimate that Update Subscription saves over 50% compared &gt;to the old upgrade model Many users did not upgrade every release, often upgrading every 2 or 3 releases. They didn't implement subscription pricing to cut revenue by 50%; they implemented it to try to compel those who didn't upgrade every release to do so or face significant financial penalties. &gt; In return, we can plan our release cycles focusing on stability and &gt;use cases that are practical versus chasing the “the next big &gt;thing.” Yes, Delphi was previously known for "chasing the next big thing". Like adding type inference in 2018 or Unicode in 2010 or automatic memory management on the desktop and 64bit OS X code in... well, not yet. &gt;The Microsoft team themselves praised RAD Studio for keeping &gt;current on features, in some cases faster than Visual Studio itself. I'd love to know the source for this one. The same Delphi that could only offer a skin to mimic Windows 8's modern style and couldn't add apps to the Windows store when it came out? &gt; it is probably time to consider upgrading your apps to support &gt;Windows 10 if you haven’t done so already. In another forum there was someone who wanted help getting the BDE to install on Windows 10 to run a Delphi 5 app. Good luck getting folks to upgrade. &gt; Our Update Subscription customers do have a priority vote. &gt;Making sure that you are heard is a great way to contribute to the &gt;future of Delphi (and C++ Builder, too). When has the community ever gotten a feature because it asked for it? As David Intersimone told me, "Some people leave Delphi for C#, some people leave C# for Delphi, so we just keep on doing what we're doing" when I tried to encourage him to listen to those who have left or were thinking about leaving Delphi. &gt;Free Styles - We have over 30 free VCL and FMX styles and plan &gt;to continue to grow the list. While these are not expensive &gt;independently, multiple customers requested the option having &gt;the option to pick and choose I can't imagine anyone asking for this. Is this related to the skinning in the IDE that now can't be turned off and slows the IDE down? &gt;Partner Tools - We are working with our partners to expand the &gt;offering of free tools available in GetIt every few months Stop working with "partners" and actually become friendly to open source Delphi developers. They won't allow the Mormot framework in there because it "competes" with Embarcadero products. Four years after introduction GetIt has about 200 packages, including 70+ "Internet Of Things" drivers and almost all the rest are just trials of commercial products. Trials don't belong in a package manager anyway. EMBT doesn't understand the difference between a package manager and a software store. &gt;Mobile Templates See skins. &gt;While we pride ourselves on ease-of-use and an outstanding user &gt;interface experience for developers Have you seen the state of Code Insight and Error Insight?!? &gt;We built a special Mobile Class for Delphi developers. The class will &gt;be available for FREE on Embarcadero Academy for Update &gt;Subscription Customers (a $999 value). A one thousand dollar value. Yes. People normally pay one thousand dollars to watch a few videos online. &gt;RAD Server - We are improving RAD Server, and David &gt;Intersimone (David I) is developing a new comprehensive manual. Please just let David I go away already. They fire him and he's still here. I call this "Nick Hodges Syndrome". David I has no background in technical writing. Why not hire an actual technical writer? &gt;We will offer a FREE RAD Server class on Embarcadero Academy &gt;led live by David I for our ENT/ARCH Update Subscription &gt;customers (a $599 value). See above. You can get all courses on Embarcadero Academy in a bundle for $299 a year.... how is this one class a $599 value? Also, are Marco and Jim McKeith not being paid enough that they had to start Embarcadero Academy as a side project? &gt;We are developing a guide, written to be a simple introduction to &gt;migration and source code management, that will help with the &gt;entire migration process, and will identify free tools as well as &gt;commercially-available tools useful in this process. Is David I writing it? &gt;EDN Evolution - We are investing to update the Embarcadero &gt;Developer Network (EDN) portal. Phase 1 (Licensing) is complete &gt;and Phase 2 (Downloads) will be complete by May. We are adding &gt;features for our Update Subscription customers, including easier &gt;ways to manage keys, account information, and access &gt;downloads. Good; this really needed an overhaul. &gt;One important change is that users that are not on &gt;Update Subscription will no longer be able to access EDN. One step forward; two steps back. &gt;We plan to offer our Premium Update Subscription customers &gt;access to exclusive EDN content. Has anyone ever chosen to pay for the Premium subscription? &gt;Why Updating to RAD Studio Architect is a High-Value Proposition Oh this will be good. My calculator is ready. &gt;You may or may not have noticed, but RAD Server is now included &gt;in the Enterprise and Architect editions. With features such as &gt;multi-tenancy, security, JS portals, beacon fencing, and much &gt;more, it is an ideal back-end or middleware platform. Other than an open source application server. &gt;Unlike other vendors, We do not require large teams to be on &gt;Enterprise Edition (ENT), but we make it &gt;easy to upgrade to ENT. Yes, because so many people want to be on Enterprise Edition and you kindly let them do so. Huh? &gt;Speak with your Sales rep to evaluate your options, especially if &gt;you have 5 or more developers. There aren't too many of those; the last survey I saw had 70% of Delphi respondents saying they worked in a firm of 1-5 developers. &gt;InterBaseToGo for Mobile (embedded InterBase with encryption) is &gt;also FREE for Enterprise and Architect ENT/ARCH users! SQLite is free for EVERYONE! &gt; On the server side, InterBase has a number of enterprise &gt;features BS. It doesn't even support time zones! It just added Common Table Expressions in the last release, something PostgreSQL added **eight years prior**. Worse, the documentation says that the **recursive** keyword is reserved but the functionality isn't implemented yet. PostgreSQL's CTE included the recursive functionality, so it's still not caught up to PostgreSQL yet. In fact, nothing added in the last release wasn't already in PostgreSQL. Interbase also lacks window functions. Firebird has them. Come to think of it, SQLite has CTEs with recursion and window functions now too. &gt;including a patent-pending “Change Views” that is unmatched by &gt;any other embedded database. Glorified log shipping. &gt; We are excited by InterBase’s roadmap and encourage you to &gt;give it a try. Just be ready to pay $7000 USD if you want the unlimited users server edition. And that's only for eight cores; it's another $1000 for each additional 8 and it seems to cap at 32. &gt; Importantly, the Architect Edition now includes a full Sencha Ext &gt;JS license ($1,800+ in value) Or you can use Angular for free, like Nick Hodges does. &gt; Aqua Data Studio license ($499 value) Or use DBeaver for free, or JetBrains' DataGrip for $89 individual/$199 corporate. &gt;Ranorex Studio extended trial Oooh, a free trial! &gt; and we are adding more. You better for $5,623. &gt; Combined with the unlimited RAD Server license, Architect is the &gt;must-have edition for any developer or team that wants to build &gt;serious multi-tier apps. ...and doesn't want to use free open source alternatives. &gt;As we add features and tools to our SKUs, Update Subscription &gt;customers get all of the benefits. JetBrains charges $249 for an individual subscription, $649 company. These figures drop to $149 / $389 by the third year. Half off for start-ups. You get IDEs to develop in C, C++, Go, C#, VB.Net, F#, Java, Scala, Groovy, Kotlin, PHP, Python, Ruby, Objective-C, Swift, Typescript, Javascript, Coffeescript and SQL for Windows, OS X, Linux, Android and iOS and on Windows, Linux or OS X. You can even get a free 10-user license of their code review and project management program, a 5-user cloud or 10-user self-hosted free license of their bug tracker, and a free 100 build configuration / 3 build agent license of their CI/CD server. Visual Studio gives up to 5 copies free for companies earning under $1 million dollars or &lt; 250 PCs. You get C++, C#, Typescript/Javascript/ASP.NET, VB.NET, F#, Python support in addition to an interactive notebook mode for Python and R, Xamarin for mobile development, Unity game engine support and the ability to target Linux. The regular price for this is $499, 1/3 the price of Delphi Pro. I won't even get into the thousand open source dev tool options. The value proposition of Delphi increased significantly when they added mobile support for Pro. It also took a step back when they stopped selling the database add-on pack for Pro. However, it's still not remotely competitive with existing offerings. Since their customer base is mostly legacy users, they're in a tough position: they need to radically lower prices to (potentially) attract new developers, but doing so would kill their profits from existing developers. Think how poor the support is now at $1500 a copy and imagine how bad things would be if the price dropped 2/3rds. &gt;We have a lot in store for you in 2019. Let's keep the Delphi &gt;momentum going! What momentum? They lost that with the error insight/type inference bugs and the theming making the IDE unstable and the fact they haven't fixed these yet.
EDIT: Just realized that Idera's own Aqua Data Studio doesn't support Embarcadero's Interbase database! Whoops!
do you have any events hooked on the query or fields, or are you using a calculated field? is this a sql database connection? (Ado can be used to read text files, but yeah, not quickly)
There's a lot of detail behind that question... ADOQuery represents a connected Dataset populated by a connection to a data source (typically a database server.) DBGrids are connected to datasets. StringGrids are typically representations of in-memory lists. A connected dataset is going to be many times slower than an in-memory list. I suggest some dataset reading: [http://www.jensendatasystems.com/cdsbook2/](http://www.jensendatasystems.com/cdsbook2/)
Yes, SQL, 6 fields, using a function to calculate hash of one field. Other 5 is just for checking other stuff, no operations on them. Should I use something else or stick to ADO ?
Yes, SQL, 6 fields, using a function to calculate hash of one field. Other 5 is just for checking other stuff, no operations on them. Should I use something else or stick to ADO ?
I'll take a look, thanks.
Delphi is a sad state these days. The IDE is the number 1 issue. Having that terrible default color scheme. Forcing users to use the theming that has a bunch of terrible almost unusable themes. Please spend time getting the IDE back in shape. Firstly full color customization with a default plain theme that matches Windows. Allow the theming to be fully disabled. Put a simple checkbox to allow opt out of all that marketing crap that appears every launch. That Office 2013 blue color scheme is terrible. That doesn't even cover all the crashes/issues/bugs/slowness with code insight and the other useless helper features. Delphi quality has unfortunately been going down hill for years. If you use any new feature added in recent years you can expect poor quality. Luckily (for now) if you stick with the older VCL and API tech you can still get a nice end result application. It seems Idera is not going to give Delphi the love it really needs. Who are the architects of the product these days? If you look around for any reviews or writeups about Idera purchases they never end well. Idera buys a company, guts the key staff, uses off shore cheap devs to patch issues, and then rides the inflow of money from subscriptions until the customers finally realize the product now sucks and leave. Just look at glassdoor reviews for Idera and the companies they have acquired over the past few years. None of them look good. Also, just do what every other software company does and setup a single store that we can buy and upgrade online without needing a human. Being forced to use a local reseller is not helpful. And fix the 5 install limit. Such a pain to have to wait for a real person to get in (sometimes after a weekend) to "bump" the install limit. Allow self bumping under the EDN account pages.
You do come across as someone who never has a bad word to say about EMB or Delphi. I could never trust any response from you. Kind of like Rudy in the old newsgroups. Didn't I read that MVP's have to sign a "contract" that makes them only say good about EMB and their products? Try listing the top 3 things that annoy you about Delphi. When someone posts a perfectly valid issue you could say "You know what, that really annoys me too. I recommend you send an email to [whoever@emb.com](mailto:whoever@emb.com) and discuss it with them. In the meantime this workaround may help."
If an MVP constantly trashes the company or Delphi, I wouldn't expect them to be an MVP for very long, but there's nothing in the agreement requiring MVPs to only say nice things. If you read that, then it came from someone who was being dishonest. &amp;#x200B; If you haven't seen me complain about something Emparcadero or Delphi related, then you haven't been paying attention. No one yells at Embarcadero as much as MVPs do. Mostly in private, but also in public. Three example of things that bug me might be: * Initial pricing is too high * Not enough being done to promote Delphi in schools (this one is for Rick Dermont) * I have complained about a free version since Turbo Delphi including charging for the Starter edition and then when it was free, the fact that too many features were stripped out. The Community edition is much better, but they still need to rethink the revenue part. &amp;#x200B; But don't expect me to coddle deliberate trolls.
Great galloping Gish Gallop!
Yes, for example, the DevExpress stuff.
I see both sides of the argument, both inflated way towards their side of the argument. You see a troll. I see a frustrated customer who probably was (or still is) a big fan of Delphi that hates seeing his favorite dev tool getting worse with each release. Not one mention of any fixes in the report. Show me anyone who loves the new IDE and is not frustrated with it. Same for the code helpers like code insight. If given the choice would users prefer a fast stable IDE without terrible theming or would they prefer a bunch of new coming features ignoring current problems? Personally, I would be happy if they put a hold on all new features for the next release and strictly fix bugs and work on performance. Or dedicate a much larger part of their time fixing issues before adding new features aimed at trying to bleed more money from their dwindling user base.
And this from the report "**EDN Evolution** \- We are investing to update the Embarcadero Developer Network (EDN) portal. Phase 1 (Licensing) is complete and Phase 2 (Downloads) will be complete by May. We are adding features for our Update Subscription customers, including easier ways to manage keys, account information, and access downloads. **One important change is that users that are not on Update Subscription will no longer be able to access EDN. We plan to offer our Premium Update Subscription customers access to exclusive EDN content.**" If you are one of the many users who are using older versions you will no longer be able to log into EDN to download your registered versions and/or get your serial numbers any more without paying? Or is it that they are splitting the current EDN into licensing and downloads and premium? The existing EDN may be outdated looking, but it works. All it needs really is a way to renew subscriptions online (picture a simple button next to each of your subscriptions to renew with a credit card). No need for a reseller. I just click a button, put in my CC and have another 12 months. Oh, and a way to increase installs. Put the button next to renew. Gives 5 more installs. Unless a user abuses the system trust the registered paying customer to self bump install counts. That is all automated so saves you guys money.
I know lots of people who have had a beef with Delphi at one time or another. I've been one of those people. I had a great chat with someone who was doing that after the user group meeting last night. The common theme is that they are almost always acting in good faith, even if they're frustrated. I've got some stories... That's not the case with Joseph Mitzen. He hasn't used Delphi in years, but harbours some kind of grudge against Borland/Embarcadero and spends lots of time in Delphi forums making very (very) long rants filled with half-truths and taking personal shots at people who worked for them. Just do a search for "epic Delphi rant". You might think there's a "both sides" argument here, but I don't. Dude's the very definition of a troll.
Maybe I needed to ask if anyone besides Delphi developers are still paying for software libraries in 2019? Look at this - it's PostgreSQL's list of drivers available for various languages: https://www.postgresql.org/download/products/2-drivers-and-interfaces/ Out of 30 listed drivers, the only commercial ones are for Delphi or produced by a Delphi component company for .NET in the case of DevArt.
https://youtu.be/xsnInhkJVJ0 Hello, it appears you tried to put a link in a title, since most users cant click these I have placed it here for you ^I ^am ^a ^bot ^if ^you ^have ^any ^suggestions ^dm ^me
&gt; Delphi quality has unfortunately been going down hill for years. Here's an example of an unsupported claim that's easy to throw out, but I don't think stands up to reality. Sure you could cherry-pick problems, but I've use every version, and except for some notable problems (phantom squigglies!), there has been an overall improvement in functionality and stability. &amp;#x200B; I'm not a fan of the install limit, though.
Yes, Telerik has quite expensive software libraries for ASP.NET AJAX, MVC, Core, Xamarin, Angular, HTML5 and jQuery.
Gang, bruh
?
I don't believe the existence of one Bulgarian company changes the fact that most development today is done with open source libraries and the Delphi community is rather anachronistic in that regard. Check out http://www.modulecounts.com/ . Most languages have tens, even *hundreds*, of thousands of open source libraries at their disposal. Open source won a long time ago. And it's criminal that Delphi users continue to try to make money *from* Delphi rather than *with* Delphi. Every commercial library released raises the bar for entry for new developers. On Delphipraxis.net I posted details of a project that would have cost over $6,500 to do with Delphi, while it was possible to do it (with better libraries) for free with open source in other languages. We've got a few heroes like the Jedi project, Arnaud Bouchez's Mormot and the Spring4D project, but all the users who want $120 for an HTML parser or wrap open source libraries like FFMPEG or implement open source protocols and charge $200 for it are putting more nails in the coffin. It's obscene for an RDBMS like PostgreSQL to be free but Delphi users trying to charge each other $200 for a driver for it (and not giving a penny back to the PostgreSQL project either).
 This is the subreddit for \~\~Borland\~\~ \~\~Codegear\~\~ Embarcadero Delphi and related languages such as Freepascal and Oyxgene.
Just my observation/opinion from using Delphi for years. The phantom squiggles have always been there since they first added the feature and never improved or fixed. The no support for the new inline variables shows they still have not looked at that part of the IDE code (or looked at it and decided it was too hard to fix). It obviously is not a simple fix as there is a second compiler handling the error insight and whoever originally coded it up is long gone from EMB. Compiler writing is a black art and not something some offshore coder can fix easily. Would it be a better idea to have the feature disabled by default? When you have the code insight features enabled the IDE will have constant pauses and slowdowns even on a fast PC with lots of memory and a fast hard drive. Once I saw another suggestion to disable them by default the IDE speed is suddenly fast without frequent pauses as the blue circle cursor turns. This is on the latest version. You can still invoke code completion and code parameters with control space and control shift space. If they work for you, great. These are basic obvious on the surface issues. Any first time user they can encourage to try Delphi is going to see these issues straight away. Try installing Visual Studio or Android Studio and see what sort of a good impression a first time IDE use can show. I remember when I used Android Studio for a few weeks writing a simple app and it was such a pleasure. Coming back to Delphi really felt like a big step backwards.
OK, I agree the personal arguments are not cool, but I do agree with a few of his points... &amp;#x200B; "Many users did not upgrade every release, often upgrading every 2 or 3 releases. They didn't implement subscription pricing to cut revenue by 50%; they implemented it to try to compel those who didn't upgrade every release to do so or face significant financial penalties." This is really what it feels like. Forced subscription to bleed more money from existing customers. &amp;#x200B; re: skins "I can't imagine anyone asking for this. Is this related to the skinning in the IDE that now can't be turned off and slows the IDE down?" I feel exactly the same way. Did they listen to the customers asking "Can we have more new skins that can help legibility in the IDE?" but ignore the requests for "Please allow us the option to disable skins". Forced skinning is ridiculous. By default the IDE coloring should match the default Windows "light" coloring. If the user has enabled dark theming in Windows then default to dark colors (colors NOT skins). Give clear options for the user to set each color as they wish. &amp;#x200B; For every new feature they add to Delphi it should be mandatory for them to add a checkbox option to disable it.
&gt; agree with a few of his points Mixed with lots of misinformation, making them useless, imho. Someone complaining in good faith deserve the benefit of the doubt.
Error Insight has improved over many versions and works very well, now. But it does trip up sometimes. It also works well for me in a VM on an underpowered machine, even on fairly large projects and project groups, so I wouldn't say that it's especially slow. I can't remember which version of Delphi had the worst performance, but it wasn't a recent one. I think they either need to use the same parser as the compiler does or make sure they both get their definitions from the same place to avoid them falling out of sync. Even if it's a non-trivial fix.
re: Skins - I can't say that I use them, myself. Ray Konopka has good things to say about them, which makes me think I should take a closer look, but I haven't had the need, so I keep putting it off.
 Function Remainder(dividend: real; divisor : integer): real; Begin Remainder := dividend - (Trunc(dividend) div divisor) * divisor; End;
Check out [System.Math.FMod](https://docwiki.embarcadero.com/Libraries/en/System.Math.FMod). I think it was introduced in XE8.
I probably wouldn't define the divisor as an Integer.
&gt;Auto Tables for RAD Server is a client server solution which auto generates a &gt;REST API client/server/OpenAPI for your databases. A similar project is Sandman 2, which can automatically construct a REST API for a database: https://github.com/jeffknupp/sandman2
Your link is not working for me, but this one is ok: [http://docwiki.embarcadero.com/Libraries/Rio/en/System.Math.FMod](http://docwiki.embarcadero.com/Libraries/Rio/en/System.Math.FMod)
Here is implementation of `FMod` from Delphi Rio: `function FMod(const ANumerator, ADenominator: Single): Single; begin Result := ANumerator - Trunc(ANumerator / ADenominator) * ADenominator; end; function FMod(const ANumerator, ADenominator: Double): Double; begin Result := ANumerator - Trunc(ANumerator / ADenominator) * ADenominator; end; function FMod(const ANumerator, ADenominator: Extended): Extended; begin Result := ANumerator - Trunc(ANumerator / ADenominator) * ADenominator; end;`
By the way, is anybody knows why they didn't use Generics here and in other overloaded functions (Min, IfThen etc)?
Fixed.
You can probably find someone to work on it (not for free) on UpWork.
Not interested in using that service. Thanks for telling me though.
Whenever they introduce new features they seldom bother to go back and refactor the system libraries to use it; sometimes this is due to backwards compatibility. But in this case, the issue is that you can't perform mathematical operations on generics in Delphi. :-(
First of all, I would make sure the DisableControls is outside of the try / finally ... just to be sure. In your case even if DisableControls fails (which it probably won't) you are still calling EnableControls, this might mess up a counter somewhere :-) &amp;#x200B; With regards to the rest of the question, it really depends on what other events you have attached to the DataSet, DataSource, Fields in the dataset. As mentioned before if you have OnCalcFileds eventus which calculate some values, or OnValidate or other events on your fields, it might slow everything down by quite a lot. &amp;#x200B; On another note ... a Query which returns thousands of records might not be a good idea to start with. Filter your data, limit your resultset and get the next batch of data when you need to. I know it's easier to just get all records at once, but there is no way you can display all 1000 in a grid anyway :-)
If you're on a recent version of Delphi, you might also want to test with FireDAC if that's available to your Delphi version / edition. It might even be fater.
I would add Spring4D to the set ... [https://bitbucket.org/sglienke/spring4d/src](https://bitbucket.org/sglienke/spring4d/src)
We currently use SQL Server with Delphi FireDAC and the Microsoft ODBC driver. The driver is free. [https://docs.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-2017](https://docs.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-2017) &amp;#x200B; I'm not familiar with ProstgreSQL, but does a Delphi FireDAC app need the DevArt ODBC driver to work? Is that the only way? I'm just curious. I'm not against using commercial software especially if it works better than the free alternatives.
Yes, we know you are a Python programmer. You're in the wrong group. There are lots of tools that do this.
What you believe and don't believe is immaterial to the facts. If you want to do a study of all of the paid software out there vs. open source software why don't you do that and present it to us to back up your claims.
Wonderful! I must say.
I notice you didn't mention Lazarus IDE. Any opinions on it already? Cross-platform or Windows only? If cross-platform, how do you feel about FireMonkey vs. Qt? (as VCL replacements)
Delphi/C++ Builder is still the best solution for Windows. Not perfect but best. Never ever could find a better solution.
Lazarus seems super promising. The lack of commercial users worries me a bit. The lack of a cocoa backend also worries me. The cocoa backend is in the "would be nice to have" category, but the fact that it's not there, being in my mind a very high priority, seems to suggest that they could use some more devs/more time. If someone would dump money and (more?) full time devs into Lazarus I'm sure I'd love it. Cross-platform is highly desirable but not necessary.
For Windows development, there is no better option
I used to use Delphi back in the day for custom windows apps (even sold a couple commercially). I still have a windows98 virtual machine with my delphi5 development setup. I never upgraded from that since I had so many commercial plugins I couldn't justify the cost of the upgrade(s) to support my one client. This is a windows front end to an old Foxpro Database using ApolloDB VCL components. That being said, I'm now trying to migrate that client's data to a web based/sql system, and in order to do it properly I've downloaded the free C++ builder, and am going to fork for the upgrade to the current ApolloDB components in order to massage the data. C++ Builders seems quite slow compared to Delphi, but it could be due to running it in a virtual machine on my Linux workstation. It turns out that delphi/c++ builder console apps actually run quite well under WINE on Linux, so I'll be able to automate some of the data import/export processes on the server.
I used Delphi on and off since v2. For Windows single exe applications it is great. The fast compiler is a big advantage and the VCL is still a great base to build Windows programs on top of. &amp;#x200B; I used to recommend Delphi to anyone who would listen and spend time giving demos of how great it was and simple to use for coding real world programs. These days they lost all of that enthusiasm and passion from me and I don't even mention I code in it. Sure for my needs it does the job for the most part, but there is no way I would recommend anyone to start using Delphi today. Idera would need to really show they are caring about the user base beyond bleeding the last cash from long term customer maintenance. &amp;#x200B; Watch out for the free version too. It apparently has lots of non-disclosed data collection they have used to blackmail people into buying copies [https://www.reddit.com/r/delphi/comments/a2wc9t/103\_community\_edition\_personal\_info\_data/](https://www.reddit.com/r/delphi/comments/a2wc9t/103_community_edition_personal_info_data/) &amp;#x200B; Such a shame.
Solidworks among lots of other expensive software does the same. I hate it.
I gave up being a Delphi dev 12 years ago. That was after 9 years of Delphi experience starting with Delphi 2. Anders created c# so I followed.
I'm still using Delphi daily. I mix in some C# but primarily use Delphi. At home, I use 10.3 community edition. At work, I'm using Delphi 5.
As a long-time user of Delphi (I started with Delphi 1 in 1995 and used it full-time professionally up through 2015 and part-time now (with other tools taking up the bulk of my dev time)), I still like Delphi but when I use it I feel like the community support (access to a wide variety of standard, well-supported tooling) is pretty thin, and often it feels like aspects of the design are intended to force you to buy more stuff. At this point for new development I'd be more inclined to go with C# and WinForms than I would with Delphi, and I say that with a newly registered Pro version of Delphi sitting here. WinForms is old, but it's simple, fast, still widely used in many corporate environments, and it's [open-sourced on github](https://github.com/dotnet/winforms) for .Net Core with active development.
Delphi guy spice 1996....I love Delphi, have been able to work ever since, but I worry about employability-had a scare a few years back, and the employment outlook seemed pretty dim.
Ultimately this would be for projects for which I have the say over what language to use. Not particularly worried about employment w.r.t. Delphi.
Pretty much this. DO not go down the firemonkey rabbit hole. It's not ready for prime time either on Windows or on Mac or on ios/android.
Compiler pretty good. LCL was crap last time I tried it which I admit was a year ago.
No. But we've been using it since 1.0 to make a LoB product that's made us millions.
&gt; crap ??
I've tried to use it like I usually use Delphi, I am sure it's a great product, as many big projects works perfectly with it (Mormot for example is focusing in FP/Lazarus if i am righ), but for me, just make it working it's a nightmare, and Lazarus interface/editor, well I think you could get to it, but if you've tried Rio for example... Night and day. Maybe the community? edition is enough for you.
I'm exactly in the same position as you! But after 120+ days since I registered my community edition I found out there is still a community out there and I move along with my project very nicely.
Been using Delphi for well over 20 years I think ... since Delphi 2 / 3, and have never regretted it. When everyone ditched Delphi for .Net I stayed with Delphi and didn't regret it for a minute. The community isn't what it used to be, but it's still alive and very helpfull. For me and my personal skills ... it is still the tool I use to get things done faster than most other developers and probably more stable as well. There are applications which have been running for over 20 years without too much problems (except for hardware). I'm loving it ... but I guess if you would ask any .Net fanboy they would say the same thing about their product.
I think conflating "license enforcement" with "blackmail" is a little hyperbolic.
As a person familiar with the VCL, the LCL is just not ready for real commercial or professional use. The problem mostly is that the VCL is an ecosystem with thousands of very high quality components, that do everything. The LCL does 90% of what the VCL does, and has 0.5% of the total set of add-ons and extra third party stuff around. &amp;#x200B; Any app you want to build with delphi, most things you need from a UI point of view are already built. &amp;#x200B; With the LCL, you're free to build it yourself. That destroys the point of using a Delphi (RAD) style tool. &amp;#x200B; Oh and the LCL was buggy last time I used it.
No idea about the other things, but regarding spreadsheets: http://wiki.freepascal.org/FPSpreadsheet http://wiki.lazarus.freepascal.org/TsWorksheetGrid Haven't needed them yet though.
I work in a bunch of different languages, and just had to build something in C# because there was no compatible library for what I needed in Delphi. Compared to Delphi, C#\\Visual Studio was a delight. It does require the runtime of course, so that could be a deal breaker for your needs it sounds like.
Gotta admit that's impressive. I am gonna give Lazarus another try.
Ok wow there's a LOT new since I last tried this.
I know people who worked for Embarcadero on the team, and I thought they were a good team, but their upper management were despicable, and are now, thankfully, all unemployed, since when Idera bought them, they basically nuked the "Embarcadero" you hated, including their bozo CEO, and their top level management team. Many of the engineering people, and the devrel team, including DavidI, are awesome people. But the Embarcadero that acquired CodeGear went from bad to real bad fast. The thing is that Idera, who acquired them, are worse than anything you can imagine. &amp;#x200B; The entire team that built Delphi was let go, and I believe they use contractors only, as Idera has no idea of building a team, they prefer to basically milk cash cows. I think the current head at Embarcadero div of Idera is Atanas Popov, who reports to Idera head Randy Jacops. The decision to axe the entire team was basically standard operating procedure for Idera, and is Randy's signature move, he's done it about 20 times so far.
Blackmail? I call bullshit. I am a fierce critic of Idera, but that's bullshit.
&gt;The entire team that built Delphi was let go Are you sure about this?
Oh no. It's done then.
I know some of the people involved. The entire US staff is gone, other than the sales team. The actual software development team, the core Delphi team, was based in California, and that office is closed and those devs are all gone. A secondary team in Spain that was not part of the RAD Studio team, but which had some pretty good engineering talent, is also gone. The romanian team which was mostly working on the database tools side, is also gone, axed a couple years before the Idera acquisition. The team responsible for originally designing Firemonkey which was based in St. Petersburg Russia, is gone. There are now some contractors based in Ukraine, if my sources are correct.
Yeah we're just going through this now. Esegece seems like it's working great, at first, but it eventually takes the CPU to 100% and stops communicating, and it locks up frequently. For $200+ I expect a piece of software that actually works. We're writing our own now, too.
We were impressed at first, too, except when we want a mission-critical client to run 24/7 and expect Esegece to be reliable. It's not. Randomly it starts consuming 100% of the CPU or locks up. Randomly the connect/disconnect events aren't called, so we had to write our own thread/timer watchdogs to make sure Esegece was doing its job. It's got memory leaks, badly behaved threading that often locks up when you free the object, and once in a while the software is unable to unload/terminate it when exiting, so it sits invisible in the Task Manager until you kill the task. This behavior happens when there's nothing but a single form and the TsgcWebSocketClient, a button (to connect) and a memo to hold the output. For $200+ we would expect a lot better than this.
All my new software products started in recent years are using Delphi. I understand the concern about the community/ECO system, but it's actual ok - for example, here are just some of the open source Delphi projects I cloned into my local computer - A decent run-time form designer, a library for accessing VirtualBox disk images, a html parser, an inter-process communication library using Mailslot, a lib. for reading the NTFS Master File Table (MFT), a unit for manipulating matrix, a DLL injecting library using remote threads, a MQTT client library, a OPC communication library, an enhanced TMemo, an improved version of the Synapse TCP library, and so on!
Professinal charting with Lazarus: https://www.tmssoftware.com/site/blog.asp?post=325 Professinal reporting with Lazarus: https://www.fast-report.com/en/product/fast-report-lazarus/
:-( so sad. &amp;#x200B; So Marco Cantu are what exactly? Contractor?
A sales person. A remote sales person working from italy. DevRel = marketing to developers.
And it's still FANTASTIC for that.
Wait, I thought you were a Python developer?
Hopefully. Otherwise, he'd probably starve exclusively doing Delphi development.
In 2019 there's no such thing as an X developer anymore. People use several languages. http://www.drdobbs.com/mobile/the-quiet-revolution-in-programming/240152206 &gt;The greatest effect these changes have had on software development is &gt;the requirement of multiple languages. Web apps, by definition, are &gt;multilanguage beasts. Many mobile apps require more than one language; &gt;and even if they can be written in one language, they often rely on a Web- &gt;or cloud-based back-end that's written in an entirely different language. &gt;And, of course, big data is written using all forms of specialized languages. &gt;We have had to become polyglots to develop almost any current &gt;application. &gt;...the research and analysis firm Forrester recently surveyed our readers &gt;about how much time they spend writing in any given language.... mostly &gt;sub-2% numbers for programmers coding more than 50% of the time in &gt;one language.
Oh, around here the Delphi jobs disappeared by about 2005. If you knew C# too at that time you could get a job converting Wall Street's Delphi front ends to C#.
And a persistent Anti-Delphi troll.
So they decided not to add Linux support to the Professional SKU. &amp;#x200B; yet...
DXF is not a trivial format and includes a large number of features, some of which are not easy to understand or render. I'd suggest starting with defining requirements for your project. Decide which DXF revision level and features you need to support for example. Then do a survey of the DXF libraries that are available, whether the licenses are compatible with your requirements, and what the price is. Then select a few of the libraries that best fit what you need and try each of them to see which work the best for you (easy to use and understand, perform well on the files you need to read, don't have unacceptable dependencies, actually do what they say they do, etc). Then pick the one you found works the best.
Very cool. That's the sort of thing that provides a fun and very rich environment for students to invent and implement features. Well done!
We use [CAD VCL](http://www.delphipages.com/comp/cad_vcl__2d_3d_cad_in_delphi_c__builder-21336.html)
Marco is the Delphi product manager and Nick Hodges does not work for Embarcadero anymore but for Gateway Ticketing.
I missed that transition. Nick is an awesome guy, but so is Marco. Let's see how long he lasts then. In my opinion the top guy at Embarcadero is a jerk, and so is the guy holding his leash.
We're hiring at Ideal Software in Meridian Ms. I need a Senior Delphi Team Manager if you know of anyone. &amp;#x200B; DM me
Link doesn't work :(
Try removing the https.
Doh! Thanks Bruce.
Try one based on that project: [https://github.com/RomanYankovsky/ndyacclex](https://github.com/RomanYankovsky/ndyacclex)
I use cracked Architect version.
Try use VCL for Linux, for create cross platform VCL application.
Article is about strings, not arrays. And here is docs about zero-based strings: [http://docwiki.embarcadero.com/RADStudio/Rio/en/Zero-based\_strings\_(Delphi)](http://docwiki.embarcadero.com/RADStudio/Rio/en/Zero-based_strings_(Delphi))
Why is this directive is ON by default?
I think that introducing zero-based strings in Delphi was a big mistake. Same as ARC future, that was almost [roll-backed](http://blog.marcocantu.com/blog/2018-october-Delphi-ARC-directions.html) in Delphi Rio release.
zero indexed strings feels like the sort of change that should have been brought in for delphi 1
I love Chad but he's making this way too complicated. His procedure TestIntf(aObj: TInterfacedObject); declaration should just be: procedure TestIntf(aObj: ILife); And all is well.
I disagree. I've added AddRef, Release, QueryInterface methods (and thus IInterface/IUnknown support) into plenty of objects with long lists of parent classes that start with TObject, without any problem. Except the Free call on interface references, he has a point there.
I love Pascal.
I guess most Linux software are on the server side, what's good is thta we still have Lazarus (with mORMot :)
👍
Heh, even **Windows** will be shipping with a Linux kernel (in addition to the Windows one) from now on. https://www.howtogeek.com/413564/windows-10-is-getting-a-built-in-linux-kernel/
Agreed, Just Use Interfaces. Also, instead of the "hacky solution": ```function GetALife(const aObj: IInterface): ILife; begin if not Supports(aObj, ILife, Result) then raise ... end;``` or: `Result := aObj as ILife;`
Agreed - and if you Just Use Interfaces, the Free call can be replaced by a nil assignment, or skipped entirely (the reference will be released automatically when it goes out of scope).
&gt;DO not go down the firemonkey rabbit hole. It's not ready for prime time either on Windows or on Mac or on ios/android. Oh, wow; really? It's been several **years** since they released FireMonkey, and it's *still* not ready for prime time? — Maybe they should have kept the *Delphi for .NET* compiler and leveraged out *VCL for the Web* \+ the web-browser component...
That would have been another hell. Their .net compiler was literally trapped forever by bad design decisions to .net 1.0. Now even .net 4.6 is really "dead end". A delphi for .net core, would be a great idea, if it was open source. I certainly don't want a closed source pascal on .net core, not when there's already a great C# compiler for .net core that's fully open source and light years ahead of the delphi language, on a feature set basis.
&gt;That would have been another hell. Possibly, but I'm not totally convinced. &gt;Their .net compiler was literally trapped forever by bad design decisions to .net 1.0. Was it? I have no problem believing it (do you have references/examples?), but how difficult would it be to have the particulars of code-generation modular? -- I mean, we could literally have an object-based IR with nodes that could have interfaces for x86, Dotnet, JVM, BEAM, whatever needed to be added. &gt;Now even .net 4.6 is really "dead end". &gt; &gt;A delphi for .net core, would be a great idea, if it was open source. I certainly don't want a closed source pascal on .net core, not when there's already a great C# compiler for .net core that's fully open source and light years ahead of the delphi language, on a feature set basis. Delphi's feature-set is hampered by bad design-decisions, usually from playing "catch-up" to Java, C# etc. A prime example would be generics; instead of looking around at say SML &amp; Ada (where you can have subprograms, values, and other generics as parameters) they instead opted for the weakest, most anemic construction: just types as parameters. &gt;Delphi Prism, which is now RemObjects Oxygene, is cool enough, but really. DO we need to have BEGIN END for our blocks? Really? Are people that lame? I like begin/end pairs, but then I do like Ada, too. &gt;I think the FreePascal project has a Pascal For JVM project, which sounds kinda interesting. BUt it's probably far behind where languages like Kotlin are at now. Hm, I didn't know about that project. &gt;The problem with Delphi.net and firemonkey's travails on iOS and Android are results of being on top of a fast moving platform that DOES NOT VALUE backward compatibility. The success and longevity of the VCL is mostly due to a few good early decisions in the VCL design, and the continued stability of the Win32 APIs. People give MS a hard time, but they do some AMAZING work when it comes to backwards compatibility. &gt;The walled gardens that Apple and Google have built for their mobile worlds, are fast-changing, ever-breaking messes. Whatever decisions they make one year, they reverse in years to come, making it hell to support mobile apps on their platforms. Most of firemonkey's problem is that it's not at home really either in the iOS/ObjectiveC/Swift API lands that Apple has, nor in the JVM-like android Dalvik world with its Intents based APIs. &gt; &gt;Android has moved to 64 bit and Delphi still as of today does not support 64 bit android. Hell they don't even support 64 bit on Mac OS X. So If you wrote a DESKTOP MAC app in firemonkey, it's basically as obsolete as a Mac OS 9 binary is these days. Interesting -- thank you for the rundown on the state of affairs here.
&gt;I think conflating "license enforcement" with "blackmail" is a little hyperbolic. Maybe, but then again how would they treat your second-hand copy of D7 off e-bay?
&gt;I'm using Delphi 5. It's a solid compiler, plus the help is a lot more usable than the web-based help system of \[IIRC\] RAD 2005+.
&gt;I know some of the people involved. The entire US staff is gone, other than the sales team. The actual software development team, the core Delphi team, was based in California, and that office is closed and those devs are all gone. Would you happen to have contact-info for them? I have a couple of ideas that they might be interested in.
They are all highly skilled folks and they had jobs within days.
&gt;They are all highly skilled folks Yes, I know.
Not sure what that has to do with the false statement made in the previous post. &amp;#x200B; But I don't think you're allowed to re-sell old licenses. Not sure since I've never tried.
I looked into RAD Server, when I needed to provide a MVC ui to my retail software. But after seeing the pricing, which starts at $99/device, the choice of node.js/express was obvious. https://www.embarcadero.com/app-development-tools-store/rad-server Plus the skills I learned doing node development keeps me relevant, as Delphi skills do not.
Yes, we get it. You don't like Delphi. &amp;#x200B; That said, I haven't dug into RAD Server yet, myself, and this is mostly because of the pricing. I'm encouraged to see that they are bundling licenses in the Enterprise and Architect SKUs. I'm hoping that RAD Server follows a similar path to MIDAS/DataSnap. It might be time to take a closer look.
The TMemo control has a property called 'lines' of type TStrings. TStrings has a property called 'count' that will tell you how many lines there are. Here is some example code. Drop a TMemo on a form and set up the OnClick event like this: procedure TForm1.Memo1Click(Sender: TObject); var i: Integer; begin memo1.Lines.Clear(); for i := 1 to Random(20) do memo1.Lines.Add(IntToStr(i)); ShowMessage(format('%d lines added', [memo1.lines.count])); end; In your question you said 'strings' and I assume you mean you are doing something like the Lines.Add() call in the example code. This will add strings as separate lines, but you should be aware that strings may contain embedded line breaks such that one string may be more than one line. That means that if you do this: memo1.Lines.Clear(); memo1.Lines.Add('this is a string'#13#10'so is this'); ShowMessage(format('%d lines added', [memo1.lines.count])); You will have two lines, though you only added one string.
Same here, the pricing made RAD Server a no-go for us. I went with PostgreSQL and [PostgREST](http://postgrest.org/en/v5.2/). Open source and very easy to set up and manage (if you are comfortable in a SQL database). And if you want GraphQL you can put [PostGraphile](https://www.graphile.org/postgraphile/) in front of it too. RAD Server does other things too, beyond RESTy stuff, so the choice depends on your requirements, but if you mostly want a REST/GraphQL API there are better options.
This question could use some clarification. &amp;#x200B; Do you want a count of the number of words in a memo, or do you want to know the number of times a particular string appears in a memo? &amp;#x200B; btw, where are you going to school?
Can you provide more complete requirements? What are the URL format changes? How should ads be identified and skipped?
&gt;btw, where are you going to school? Could it be anything other than South Africa? Embarcadero's Delphi development tool is now the exclusive choice of South African high schools [https://www.itweb.co.za/content/KwbrpOMgb4N7DLZn](https://www.itweb.co.za/content/KwbrpOMgb4N7DLZn)
South africa
South africa is right where are you from ? Cause most people don’t like Delphi much, the reason we are taught it has to do with some political bs
I feel for you. It's 100% political bs and I'm sure Emb paid people in SA govt to make it happen. Sucks for you, at least it's kind of like C#/Java... kind of, barely, well, not really at all. :P I'm in Seattle. Throughout the late 80s/90s and super early 2000s, American education system taught Pascal. Pretty much the time period in which Delphi was relevant. It came on the market when Client/Server was big for desktop apps, but it's a dinosaur in today's webcentric world. I'm only still in Delphi, 15%, due to vendor lock and my codebase costing too much to rewrite. Learning Pascal, is still a good first language, but needing to learn the Delphi VCL (like your what your question was about) certainly is a waste of time.
I have written code in at least 20 different languages. Delphi is my favourite though I don't get to use it too much anymore. Syntactically I like how it works. It is a great tool. There was a call for a new software utility to be made. I suggested we use Delphi but the Java/C++ guys duked it out and one of them won. I wrote the tool during a couple of lunch hours and had it finished before the other team of devs were even half way done. My tool was used until the other one was finished and then my tool was discarded because "it was written in the wrong language.". However syntactically if I was to create my own language it would be a combination of C#, Delphi and a few features of Modula 2.
1. It needs to support HTTPS and use that for the urls that are in its source. 2. Check out https://dev.twitch.tv/docs/api/ to learn about Twitch's new API. 3. Check https://github.com/streamlink/streamlink/pull/2369 and https://github.com/streamlink/streamlink/pull/2372 to learn how it is being done in a similar program.
I love (the idea of) Delphi but I arrived at it too late, after I'd already been spoiled by other more modern / higher-level languages. If only I'd discovered it in the early 2000s - it was the perfect match for what I was trying to do back then :( But damn if nobody else can even come close to the usability of the RAD editor, or the clean simplicity of the VCL. The situation is so bad in fact, that many people under a certain age aren't even aware of other options besides Electron-based desktop apps (outside of C++, where Qt reigns supreme).
Well other modern languages.... the VCL was great however they were trying to create a cross platform version of the VCL. Then MS head hunted one of the main Delphi Devs then we got C# and .NET. At the time MS was MS only. It is only now they are doing the cross platform thing. Personally I miss Delphi. What I would like is a language that is a combo of C# and Delphi/Pascal. I like the C# syntax. But I would like to have the Pascal ":= and =" over the C# "= and ==". I would also like the the AND OR NOT of Pascal over the &amp;&amp; ! and what ever or is these days. The words are more human readable and make no difference in performance. I also like that variables/constants are predefined. As soon as a language allows variables to be defined midcode.... that starts to become BASIC spaghetti code. If a procedure/function header can be looked at and the input output params are defined, and the internally used variables are defined before hand, then interpretting the code that follows should be easy peasy. But that is my thoughts of a mad man... and I have used PROLOG which makes everything else look wierd....
Someday in the future we'll be able to mix and match features and syntax to create our dream languages. Until then it's usually the work of a handful of obsessed individuals ... re: Pascal vs. Algol syntax - I don't think it makes a big difference once you've spent time with a given language. There are people who do Rust all day long, and while I personally think it looks ugly and painful to mentally parse, I also know it's just a matter of dealing with it every day. You mentioned Modula-2 originally - did you ever check out Modula-3? Another language I wish I'd gotten to spend more time with. But the world moves too fast ...
God have mercy on the souls of anybody that is still being taught Delphi in this day and age!
Read about Mod3 but never used it. I think another big factor is University and College. One gets a free or cheap IDE from a vendor Oracle, MS, SAP or something like that that is what they teach, then that is what is used. Or just plain JAVA as it is "free". Languages should be agnostic to developers, and that is how I was taught, to think in pseudo code, then port to language. However I have worked with too many developers out there that ask for a sample of how to use our SDK, and we give them a C# or Java example and they are flummixed.
Original Poster here. Recently I posted a thread about using a node based tool to manipulate images. The purpose was to teach children computer programming. Specifically how to write functions, giving them a way to connect functions together visually while seeing the results. My next project for teaching children is and audio tool. The link in this submission is a video of the tool after two days on part time work on the project, but the aim will be to allow for the same visual node based system, but to connect sound sources (wave generation functions or sound files) to effects. Instead of mapping those nodes to the display, like with the image program, this tool will allow students to map their functions to virtual piano, and then listen to those results. There is more work to do, but if anyone is interested the source code is here under the GPL license. https://github.com/sysrpl/SoundShop
&gt;Could it be anything other than South Africa? Russia. Brazil. It's part of the AS levels in the UK. &amp;#x200B; And people occasionally pop up in the Delphi facebook groups asking for help with their Delphi homework.
And since you cannot purchase a maintenance agreement any more after it's expired...you are apparently required to buy a new license if you want to move your software installation.
Can only say - good bye embarcadero/idera or what your name is. You have nothing to offer - people that invested in external components have a chain and most probably will stay.
A company who's dying: they're pretty eager to shit all over paying customers.
They have to. There are normally two ways of making more money: sell more stuff to existing customers or sell the same stuff to new customers. They can't get new customers and almost all of their new products have been the result of acquisitions since they don't have the talent to create new products anymore. And products like AppMethod have been failures. And of course there's the added challenge of old customers slowly disappearing without new ones to take their place. That leaves them with only one option: the undesirable third option of getting customers to pay more for the products they're already buying. And we've seen this tactic for years: the proposed EULA change to disallow database development with the PRO SKU, not allowing Delphi to be used for extended periods outside the region it was purchased in, the change to a subscription model, adding a clause to the EULA to disallow using Delphi to develop any product that "competes" with Embarcadero, etc. This is just the latest in long chain of events that have been going on since Embarcadero acquired CodeGear. And of course, recently we had Popov's blog post that was all about trying to get those who aren't on a perpetual subscription to do so (apparently users of old versions are the only market they think they can sell Delphi to nowadays). This is a desperate squeeze play to try to force those people using old versions onto the perpetual subscription path, which means the product line must really be hurting. Maybe Delphi sales and revenue look anemic next to the recent Sencha acquisition and Popov's under pressure to increase the revenue?
&gt; dying What, again? &amp;#x200B; After so many years, it's almost as if the doomsayers have absolutely no idea what they're talking about.
And emb has absolutely no idea what it is doing and what should be done. Sorry buying a DLC for activating once buyed software that is behind some 5 years comparing to others. I\`m out, in our company it is a matter of time.
imo, Embarcadero needs to cater to people who bought their software, even if they don't have a current subscription. &amp;#x200B; As for someone with a brand new account posting anonymously that they are rage quitting, good luck with your future development. &amp;#x200B; If you really do move away from Delphi and find yourself ranting in Delphi groups (with the same account?) about how it's about to die, take a step back and examine your life. It's kind of a loser move.
Sorry but i\`m not insulting you personally as you do and dont care if its a loser move if thats your dev marketing thats ok -. The brand new account has nothing to do with it. Where should i write that i dont like such kind of moves - to te technical engineer support and what?. emba moves arent right and i feel cheated - thats how it looks. And i think that many others feel the same.
The comment wasn't really directed at you. Unless you choose to troll Delphi groups long after you've stopped using Delphi. That would be a different story. &amp;#x200B; And as I wrote, I don't like this move, either. If you really want to lodge a complaint, drop a line to Jim McKeeth, Marco Cantu and Atanas Popov. Seriously, they read user feedback. If you can make the time to create a new Reddit account just to comment on this, I hope you can make the time to yell at Embarcadero directly, where it will do some good. &amp;#x200B; State your business case and make it clear how unhappy you are with this. If you think it will help, tell them that Bruce McGee thinks it's unacceptable, too. Perpetual licenses should be perpetual. I've already whined, myself, but I'm just one voice.
I\`m not trolling how can i troll things that just happend - by writing that i dont like it? Every negative opinion on movement of emba or delphi is trolling? Why do you people react so emotional about a product (yes it was fun to sit on the morning with coffee running delphi) ? Do they pay now for good opinions about their product? I dont care no more about delphi. - like i said i feel cheated on money.
As I wrote: &gt;The comment wasn't really directed at you &amp;#x200B; &gt; I dont care no more about delphi. So you weren't really asking where to lodge a complaint when you wrote " Where should i write that i dont like such kind of moves"? Fair enough. Good luck.
&gt; \- like i said i feel cheated on money. add to your quote - like i said i feel cheated on money. That will have more sense. Good luck to you too.
I just wish people who take the time to rage quit online would also take the time to give that feedback directly to Embarcadero. It might make the whole situation moot.
rage quit - please... dont be ridicoulous. It has nothing to do with rage just about money.
RAD Server single site comes free with RAD Studio Enterprise so $4.2k looks like. Then unlimited RAD Server comes free with RAD Studio Architect so $6.3k. &amp;#x200B; Obviously PHP is free so if RAD Server has something that you need and it will provide a better dev experience (like end to end FireDAC) then use it. Otherwise use something else.
This is more of the bleeding money from their last remaining user base. Hopefully they change their minds and implement installation counts in a more sane manner. Give each user 5 installs, but auto-bump that limit every so often automatically. Maybe 1 install a month. That way unless I do more than 5 installs within a month I never need to worry about asking for a bump. And allow "trusted" (although they do not seem to trust us) loyal customers self bump in their EDN sign in area. I sign in with my EDN login and click a bump button. Form says "Your limit has been increased. Thank you for your continued interest in Emb products". Unless I bump more than 5 times a month, TRUST ME. How this [https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy) reads to a skeptical me is Like our other acquisitions we fired the web masters and everyone who had knowledge of the web servers so we have outsourced a new Emb website to the cheapest contractor we could find to make us a whole brand new END site. Expect many new bugs and loss of functionality in the process. The main page will look more modern though! The final bit; Our objective is to make staying on Update Subscription a “no brainer.” We have to work hard to give you more and more value, and you will see the amount of free training, components, templates and sample apps grow. We thank you for your continued support! Means "We are working hard to make sure you suckers keep paying us for subscriptions even if you don't want to". Skip all the effort put into "extras" until you can fix the IDE and EDN first. If I was seeing real fixes and improvements in the product each release then subscription would feel more like a reasonable offer. No need to comment on this Bruce, but if you do have contact with Popov etc, send them this thread to read. Get them to read and understand all the complaints in this sub over the past forever.
Boy, the users are tearing David Millington apart in the comments! &gt;Generally guys, can you take the important company decision to actually &gt;release tested and working software. You charge for it $2.5k the least we &gt;can expect for its core to work. It's like selling a car, nice car, but with &gt;broken dampers, overheating engine, missing seat belt, and only few of &gt;your dash instruments working. Yes the car moves, but can you really &gt;drive it on actual road, except in front of your house? ... &gt;2K19 - For Embarcadero, 32 bit architecture is still a priority. WHAT THE &gt;HELL IS WRONG WITH YOU How could they release a C++ compiler that didn't support Boost anyway? I thought they were using Clang... what are they doing to it that it won't compile Boost? And no C++17 support for Windows 64bit is crazy too. C++20 will be finalized in July. &gt;One is that many of our customers still use Win32, not Win64 only. Win32 &gt;for the first release of the updated toolchain has the widest reach. So even on the C++ end, many people are just maintaining legacy software. :-( Jetbrains CLion, $89 for individuals- 64bit, C++17, and Boost support out of the box. :-(
I\`m curious why you assume every one doesnt like delphi?
 Oh Delphi, Delphi Oh Delphi, Delphi Oh Delphi, Delphi how was I supposed to know That something wasn't right here Oh Delphi, Delphi I shouldn't have nuked Windows And now you're out of sight, yeah Show me how to contact Team B Tell me Delphi 'cause I need to use Project Jedi Your installing is killing me (and I) I must confess I need a bump (need a bump) Using EDN I lose my mind I'm in a bind Bump me Delphi one more time Oh Delphi, Delphi The reason I reinstall? The IDE is locked up Oh 'spensive Delphi There's nothing that I wouldn't pay To get out of this cock-up Show me where to send the money Tell me Delphi 'cause I need to compile, all because Your policies are killing me (and I) I must confess I now believe (now believe) Dropping my subscription wasn't fine Here's dollar signs Bump me Delphi one more time Oh Delphi, Delphi Oh Delphi, Delphi Yeah, Oh Delphi, Delphi how was I supposed to know Oh 'spensive Delphi, that Popov needed the dough I must confess, that Oxygene is looking so good now Don't you know I still believe That I'm screwed and how EDN be kind Bump me Popov one more time Your Code Insight is killing me (and I) I must confess I still believe (still believe) One more squiggly line I'll lose my mind VS' looking fine Bump me Delphi one more time I must confess, that your buggy mess is killing me now Don't you know I'm still locked in I see with clarity Can't wait til FPC reaches feature parity Bump me Delphi one last time
You mean the people who don't use Delphi but hang out in Delphi groups year after year to take pot shots at Delphi, Embarcadero, employees and MVPs/TeamB?
...bugfixes?
- creates problem by inventing registration limits - can't figure out how to fix the problem dia🔥
Thanks. Wondering this issue for a while.
Android 64bit must be priority
yes If you have a subscription, I think you can participate in at least some of the betas. It gives you a really good idea of how many issues (public and private) are actually addressed in each release. And which ones aren't. Still waiting on the phantom squigglies, guys.
I'm still waiting to be able to do a compile without needing to do a 3 minute full rebuild for every code change.. So frustrating. It's been broken since Seattle.. :(
Do you have a reference to details? A QP report? I do regular compiles every day all day with no trouble. My work load may be different than yours, though.
- I need them to fix existing bugs - I need them to fix bugs that continue to exist since Delphi 4 - I need them to release fixed for a product that was released less than 2 years ago - I need them to support their products for 5 years (and not shell out $3000, and then 2 month later are shit-out-of-luck) I need ***BUGFIXES***
This is the issue: [https://quality.embarcadero.com/browse/RSP-22086](https://quality.embarcadero.com/browse/RSP-22086) That's not my bug report or code, but it is what we are fighting. There are a few other related QP reports and duplicates as well. It happens for us any time we make ANY change to the interface section of a file. Our project is a commercial app with 2mil+ lines of code, and takes a long time to rebuild, so this is a huge productivity killer. All of our smaller app's compile fine, it's only the large ones that show the issue.
thanks
They do. Lots of them. If you have some specific bugs in mind, are there bug reports for them? Can you post the links? If you have a particular thing that's bugging you, I was serious about participating in the betas. Otherwise, adding a bug report or improving an existing one and getting people to vote for it makes it more likely that it will be addresses. Especially if it affects a lot of people.
So it's changes to the Interface that triggers the problem and not every code change. It's possible that I would have run in to this in a large project (\~3m loc), but haven't noticed if I'm not making interface changes. Voted.
Not just changes to "interfaces" but any change in the interface section of a file, such as even just adding a variable to a class.
\+1 voted on issue
&gt; If you have some specific bugs in mind, are there bug reports for them? They were bug reports on the old old bug reporting site; before they deleted the backlog of unfixed bugs. I'm thinking of the well-known bug in TListView: - if you use custom drawing - then the font is reset to `SYSTEM` font It's a Delphi 4 era bug, that is well-known to Delphi developers, that still exists in 10.3. The bug comes when an internal TCanvas is destroyed, and TCanvas decides to reset the DC to `system` font. The fix is for the listview to record the existing before enlisting the help of TCanvas. That's a well-known VCL bug. There are also RTL bugs. There are also compiler bugs. And the worst of all is the IDE bugs. *Errors Insight anyone?* ---------- But the bugs were all reported, and lingered for decades, until finally Bor...Imp...CodeG....Embarca....Idera [deletes the entire repository of known bugs.](https://edn.embarcadero.com/article/44137) *Don't have bugs if you delete the bug site.* ----------- And what's the point of reporting bugs if 2 months after i shell out $3k, Embarcadero is going to say *"Tough shit"* and not fix anything. Especially when they can't fix the 20 year old shit first? ------------------ Someone at Embarcadero thought it would **hilarious** to block users from reporting bugs unless they create an account. And i'm pretty sure[ Google can't crawl it either.](https://quality.embarcadero.com/secure/Dashboard.jspa) Which is why we can start to report these bugs, and post VCL/RTL source code with fixes: So instead we turn to GitHub, where we can post bugs, and fixed VCL source code: - #22 Auto-generate version number algorithm broken; leads to version numbers rolling backwards `bug` - #21 Access violation at address 0DA2FE00 in module 'dcc32260.dll'. Read of address 0000000C 10.3 `bug` `ide bug` - #20 Compiler attempts to compile code was it was before changed 10.3 `bug` `compiler bug` - #19 IDE crash when showing code completion 10.3 `bug` `ide bug` - #18 IDE crash when reordering tabs 10.3 bug `ide bug` - #17 TUxThemeStyle.GetEnabled returns false when themes are available and enabled 10.3 `bug` `vcl bug` - #16 WM_WindowPosChanged does not realign controls 10.3 `vcl bug` - #15 TListColumns internal FOrderTag gets out of sync when columns are deleted `vcl bug` - #14 TListColumn.GetWidth uses ListView_GetColumnWidth rather than ListView_GetColumn, causing invalid widths to be stored `vcl bug` - #13 Custom drawing ListView SubItem causes subsequent subitems to be drawn with stock font `vcl bug` - #12 Resizing bottom dock with Metrics tab active pushes tabs off the bottom of the window `ide bug` - #11 "Find Unit" feature crashes when used `ide bug` - #10 Error insight does not understand record properties `ide bug` - #9 Dragging tab out of docked window leaves old title caption `ide bug` - #8 IDE Error: TDestopStates.RestoreDesktop `ide bug` - #7 TPrinter.SetPrinter fails to check return value of DocumentProperties `vcl bug` - #6 TPrinter.SetPrinter passes garbage rather than nil to DocumentProperties API `vcl bug` - #5 Shortcuts on the special MainForm are triggered from unrelated modeless forms `vcl bug` - #4 Pressing Alt on a form without a menu causes the application MainForm to come forward `vcl bug` - #3 TPanel does not AutoSize when containing a TWebBrowser `vcl bug` - #2 ListView column width becomes zero if you read Column.Width `vcl bug` - #1 TStatusBar does not erase background before painting text `vcl bug`
- https://imgur.com/a/fY2TBSc That's the kind of decline that only looks good if it were CO2 emissions. You can run it for yourself: - https://data.stackexchange.com/stackoverflow/query/1032108/tag-popularity-history
&gt;Facts don't lie. The fact is, Delphi is still in active development. It's being used in new projects and new licenses are being sold. Enough that Embarcadero is doing well.
The old bug list wasn't abandoned. So, which of these bugs affect you directly? Or are you just mad on principle?
I personally reproduced them all. I come up against them. They **are** a problem. They are a problem that i have to deal with. For all the VCL ones, i then have to investigate the VCL bugs and patch the VCL myself. Hours, and hours, and *hours*, and **hours**. &gt; So, which of these bugs affect you directly? Or are you just mad on principle? And there it is. There's the fundamental problem. As if users reporting bugs is a nuisance to be ignored. &gt; God, those users complaining about bugs. Won't they ever just shut up and give us money? I want **bugfixes**. It's industry standard to support your product. And Embarcadero stops supporting it 5 seconds after the next product comes out. - as if it is viable for me to shell thousands of more dollars - and re-implement all the bug-fixes - only to encounter new ones - on a product that Embarcadero refuses to stand behind. And, not for nothing, i don't expect support indefinitely. But i do expect support for at least 24 hours after i buy the thing - [because if i have to reinstall it 4 times then i'm locked out of using the thing i just paid for](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy). I don't demand indefinite support (like i said, 5 years tops is fine). But i absolutely do need to be able to use the product i paid for. --------------- But i want **bugfixes**.
Good job. If you point to current bug reports, people can vote for them. As for the bump issue, I don't think it works the way you're portraying it. I hope Embarcadero puts out a clarification soon.
Finally, but just too late. How can anybody accept that they get a new compiler via an expensive maintenance plan that no longer compiles their code?
&gt; people can vote for them. *oi vey*, implying that bugs fixes are only important if people *vote* for them... I can hear already hear the irrelevant retort: &gt; We have limited resources; we can't do everything that everyone might want. As for the limited number of installs: you only get a limited number of installs of the program you paid for. - you don't get to reinstall it an unlimited number of times forever - you don't get to reinstall it 25 times - you don't get to reinstall it 10 times - you don't get to reinstall it 5 times You get to install your own application 3 times; now bumped up to 4. &gt; Industry standard is to only support the current version of an application Ignoring the fact that he is simply lying about *current industry support standards* - we're not even talking about support - i'm talking about installing a program on my own computer that i've already paid for - i don't need your support to install a program Until they decided that after 4 installs you are sent to *Sales*. He needs to dia🔥.
Implying that people will vote for the ones that affect them the most, giving them priority. Or help improve an existing bug report to help find a solution. Or add a report that doesn't already exist already. All the things that are a part of fixing bugs. And, as I wrote earlier, anyone with a subscription can participate in the betas. Bugs are fixed all the time. Literally thousands of them. So your wish has been granted. In spades. If you want to emphasise specific bugs, then this is how you do it.
FL Studio is still Delphi? If that's the case, what are they using for a GUI on Mac? Do they use a custom GUI for everything? Some kind of Cocoa bridge? Other?
Except...i won't get them. Because rather than supporting their products longer than 2 months after i bought it...they drop you as soon as their next product lauches. - Microsoft: 5 years of support - Apple: [5](https://support.apple.com/en-ca/HT201624) years - Android: 2 years Embarcadero: 0 days after the successor launches They must release bugfixes for: - XE6 - support ended 4/15/2019 - **XE7** - support ends 9/2/2019 - **XE8** - support ends 4/7/2020 - **Seattle** - support ends 8/31/2020 - **Berlin** - support ends 4/20/2021 - **Tokyo** - support ends 3/22/2022 - **Rio** - support ends 11/21/2023 So we circle **allll** the way back around to what i said at the beginning, and i wasn't being glib, or saying this lightly: &gt; **I WANT BUGFIXES**
&gt; must Yeah, good luck with that. Whether people without a current subscription get updates or not, features are being added and bugs are being fixed. I wouldn't mind seeing releases supported for longer, but it's not at the top of my priority list. They're not as big as Microsoft and don't have Office and Windows to fall back on, so I also don't mind more resources being put to bug fixes and new features in new releases. 10.3 is the bomb.
&gt; 10.3 is the bomb. I'm playing with the Community Edition at home and it's...something...all right.
I like it a lot. All of the code written for our next user group meeting works in the Community Edition.
I lost about six months of my life, and very nearly my whole career with that tool. I could only get it to work for fleeting moments and it would break for any trivial change, while missing important stuff. It was worse than the code it was supposed to protect. After we quit using it, their sales staff kept hounding me like a dog until I finally had to tell them to get lost.
Not using TestComplete, but Ranorex. Although we had to do some custom implementations of IAccessible on custom drawn components, Ranorex recognizes almost all UI components and can click on nearly everything in our application. We use the DevExpress Ribbon component and some other UI suites. "Drawback" is that the tests themself are written in C#.
I believe it is, but if you're really curious, you can download the trial and [check it out yourself](http://glooscapsoftware.blogspot.com/2017/05/software-made-with-delphi-how-do-you.html).
Another vote for Ranorex. We're not as far into it as rtvdoorn above, but so far it looks pretty nice. Definitely worth evaluating.
Here's a link with a list of versions with their respective Active/Passive/De-Supported dates. [http://support.embarcadero.com/article/37740](http://support.embarcadero.com/article/37740) For example, 10.0/Seattle was "Active" upon release in September 2015, changed to "Passive" in April 2016, and "De-Supported" in November 2018 yielding a 37+ month support lifetime. If you have a support contract, you can raise individual support requests for older versions. You aren't going to get every single bug fix back-ported, but you can ask for specific fixes. The rules are not clear to me what types of bugs they will fix in Active or Passive status. You simply won't get every fix back-ported to the previous few versions. That's a completely different reality than the no-support as you are claiming. If you haven't used up your support requests - test the theory and provide them a working example of a problem in a supported older version and see how they respond.
With Ranorex, can you call functions of the delphi app from within Ranorex scripts? For example, from TestComplete if I had a form/class in my delphi app and add a method that returns some sort of test data, I can directly invoke that from TestComplete and get the data returned from it. Even private class methods of the forms could be called. To me, that seemed like a really big/cool advantange. &amp;#x200B; Do you use TVirtualTreeView controls at all? How do you handle checking the data in the treeview? This seems like it's going to be difficult to automate, as we mostly draw the treeview's by using DrawText calls inside the TreeViewDrawNode callbacks. &amp;#x200B; At this point I'm thinking neither ranorex nor testcomplete is going to be as useful as I was hoping; and I may decide to use Sikuli for all testing. So far it's been working pretty well for me and because it's all based on image comparisons it will handle the treeviews perfectly. I would like to find some framework to sit around Sikuli that can act like a test runner and handle things like launching various scripts and email failures etc..
I don't know about FL Studio, but I have examined some of these "built with Delphi" lists in the past and found several examples that were outdated (rewritten, as you said) or simply wrong. For instance, for some reason the Dolphin GameCube/Wii emulator appeared on one of them, despite Dolphin always having been written in C++ as far as I can tell. And then on top of it most of the entries tend to be shareware stuff from the 1990s.
&gt;Increasing registration count not possible without active maintenance agreement According to [this comment made by Atanas](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy?CommentId=9d23b0cf-4432-49bc-8586-46612d0f8d7c), it is.
This comment is straight up trolling. Instead of reading and commenting on the article you made up some FUD about some mythical past article.
No, I didn't make up fear, uncertainty or doubt (???) regarding anything mythological. Please leave accusations of fake news to Donald Trump. Back in 2014, Jon L. Aasenden gave us a similar article about applications made with Delphi and included the Dolphin emulator, along with other applications that turned out to be inaccurate. You could have verified that in less than 10 seconds via Google; for me it's even the first search returned for "applications made with Delphi" without even needing to include the word dolphin. https://jonlennartaasenden.wordpress.com/2014/11/06/famous-software-made-with-delphi/
That's Joseph Mitzen. He has a lot of time and energy invested in insisting that Delphi is dead/dying, facts not withstanding. &amp;#x200B; David's list (csvelovity) had some mistakes in it, too. When they're pointed out, he corrected them. No drama.
There was a great free tool available for that, back in the day, called [MemProof](http://www.scip.be/index.php?Page=ArticlesDelphi07&amp;Lang=EN). Sadly it has been bought up by some company, iirc.
The reality is that we bought XE6, and within 2 months it went *"passive"*. It took us 4 months to get a version of our software in a decent state due to all the bugs in XE6. We shell out thousands of dollars, and before we even had something usable again they drop support. And demand more money for the next version. *Don't worry, we have a new focus on bugs. XE7 will fix everything.* They cost **us** $30k for it taking two developers, with combined 30 years of experience, a full time 3 months to get the systems up and running again; and then they have the gall to ask us for more money after leaving us out to dry. **I want bugfixes**. Lets start with the c. 1999 listview bugs that still exist in 10.3. And then we can move on to Windows applications built by [Delphi do not](https://web.archive.org/web/20171221023547/http://qc.embarcadero.com/wc/qcmain.aspx?d=107411) follow the [Windows ABI](https://archive.fo/cjMSO) (Application Binary Interface). After playing with 10.3 at home, i obviously wouldn't pay money, or recommend anyone pay money, for this buggy mess.
Has anybody gotten Deleaker working with their RAD studio project? I tried with our C++ builder project a while back but deleaker just crashed. Would be great to have a solid memory profile as an alternative to AQtime.
silly question does memory start falling if you release the key or do you get same if you comment out code.
No, it doesn't start falling when i release the key. Sorry, im kinda new to Delphi.
Does it stop rising? I am kinda rusty in Delphi as I haven't used it in nearly 10 years, but general coding techniques will help, when dealing with memory leaks/bugs you need to try isolating what is causing it - one way is to remove a bit at a time until it you find what is related to then put it back to prove it - so try commenting out the stuff in the method and see if that stops the increases - reinstated it does it start again. Does not having the key pressed down stop the rise? It may just be something silly like you are flooding the message loop with keypresses and application can't process them quickly enough with timer running so they just build up
I tested the code above in a brand new empty project, the same thing happens. The memory usage goes up when the key is down and stops when i release the key. Too bad i don't have D7 to test if it works the same there. &amp;#x200B; unit Unit1; interface uses Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms, Dialogs, ExtCtrls; type TForm1 = class(TForm) Timer1: TTimer; procedure Timer1Timer(Sender: TObject); private { Private declarations } public { Public declarations } end; var Form1: TForm1; implementation {$R *.dfm} procedure TForm1.Timer1Timer(Sender: TObject); var KeyState: TKeyboardState; begin GetKeyboardState(KeyState) end; end. Even trimmed it a bit, this is the whole program, nothing else on it. Memory still goes up when i press random keys...
Another thing is how do you know this is a memory leak and not creep? Creep can be OK as long as it is eventually all released. Memory leak is bad. So if you check free memory, then start your application, run it for a bit and memory goes up, then close your application. Does memory go back down to where it was before you run it, or does it remain higher. If it goes back down to where it was, this is more of a creep and not leak. Leak means you never get it back until reboot of Windows. Also the usage could be coming from 3rd party drivers. With the software I supported customers would constantly complain about memory leaks when using our SDK. And they were right, but as our software made use of the default printer driver it turned out that at least 50% of the time it was the printer driver. Setting to use no printer or to use the Print to PDF driver the leak would go away. Good luck in finding your problem. There are a ton of tools out there to help analyze, don't know any off hand right now as I haven't done that sort of testing for a while!
Does the same happen when you comment out &gt; GetKeyboardState(KeyState)
Yes, it does. Is this normal? never seen such a thing when i worked with Delphi 7.
Sorry don't know - I'll point you to my statement about not having used in 10 years (and I last used D7 for anything meaningful - not even sure I ever used 2009)
&gt; then close your application. Does memory go back down to where it was before you run it, or does it remain higher. If it goes back down to where it was, this is more of a creep and not leak. Leak means you never get it back until reboot Wait, what? How would that be possible? If the memory isn't released when the program is terminated then that'd be a bug in Windows, and a pretty obvious one.
When you work with Developers that think, hmmm I need a value from a variable, but that variable is a local variable in a function. Oh I know the memory location of that function I will just create a pointer to that, move x many bytes in and read the data... and not understand how horribly wrong that is... and when they write their own memory allocation libraries and explicitly use them and not the ones provided by windows then you can understand that things can go wrong without it being a Windows bug.
I just did a quick test under Delphi 10.3.1 using your minimal example and there was no memory leak. Even with the timer set to 10 ms interval and holding a key down for over 30 seconds. So maybe a bug that has been fixed?
I did also test in 10.3, no problem there. To be honest, Delphi 2009 is a buggy mess.
Huh? This is for Delphi the programming language.
Well if we can make a setup.exe for him, maybe it will help?
Not downloadable
Sure it is. &amp;#x200B; When you click "Claim Now", it is added to your account, which is why you need a free registration. When you view it, either by clicking the "Access Now" button that is shown or through your account, there is a "Download eBook" link at the top. You can download as PDF, EPub or Mobi. The code for the book is available there, too.
Still couldnt find the download link. Maybe not shown on mobile.
[negatory](https://i.imgur.com/kEYTgXq.png)
I had to open it in the reader. The [Download eBook](https://imgur.com/a/T6Ix7eL) link is at the top
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/RYjeG7k.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme)
[again, no](https://i.imgur.com/0LXxNZ7.png) perhaps you bought or obtained a free version in the past sometime and forgot?
Maybe, but I saw it before I logged in when I clicked the "Access Now" button.
Hi, Packt employee here. This title (and any other Free Learning title) is not available to download in PDF/ePub/Mobi/MP4 unless the user is an active paying subscriber. When you become a subscriber the download options becomes visible and working, otherwise they're hidden and this feature remains locked. Packt users who claim free titles to their account can read or watch them in their browser or download them to the Packt mobile app (iOS and Android). Hope that helps, Myles
This contradicts [this comment made by Atanas](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy?CommentId=9d23b0cf-4432-49bc-8586-46612d0f8d7c). Renewals will still be done, just by different people. When did you receive this and has Sales responded? Perpetual licenses should be perpetual.
The email came in this morning (Monday June 10). I re-installed Delphi on Saturday and submitted a ticket to customer support.
I'd write to Atanas Popov directly and ask him about his promise to honour perpetual licenses. Tell him I said Hi.
Did you follow up with renewals? The change, as both your email and the post by Atanas explains, is that renewals handles this now instead of support. "as well as facilitate the necessary registration increases."
No, I didn't follow up. I find it humiliating to write multiple emails and asking to let me continue using product I paid for. Also, the email states I need to be in an active support to get my registration limit increased which means I need to buy a subscription.
This seems like a non-issue as you aren't following the directions provided: "Your renewals representative will be able to assist you with options to renew your support and maintenance, as well as facilitate the necessary registration increases. " Contact renewals and get the registration increase. If you do that, and you still don't get a bump, then it's a problem Right now the problem **appears** to be a simple change in the system which is being perceived as illegal / immoral / inept instead of a simple change of procedure. Email [renewals@idera.com](mailto:renewals@idera.com) instead of the previous action and the same result should occur. I assume a management change forced the sales team to strictly focus on sales and if a bump request comes into that side of the house they will try to sell a subscription which seems like a logical thing for the sales team, but the perception is horrible from this side of the conversation. Now ... if they don't respond as quickly to the renewal requests as they previously did, then they will be shooting themselves needlessly in the foot again in a very public way.
&gt;Right now the problem **appears** to be a simple change in the system Agreed. However, since the initial announcement was vague people are spinning this in the worst possible light, Embarcadero might consider clarifying the point as clearly as possible. Just so that they are crystal clear and cannot be misunderstood. Intentionally or otherwise.
&gt;Also, the email states I need to be in an active support to get my registration limit increased which means I need to buy a subscription. [Got one for you right here](https://www.lazarus-ide.org/)
&gt; Your renewals representative will be able to assist you with options to renew your support and maintenance, as well as facilitate the necessary registration increases. I understand your frustration. The way I understand (and I've been known to be wrong) is that support is no longer handling registration bumps for anyone without Update Subscription. Instead, they want you to talk to renewals so see if it makes sense for you to upgrade. But I read that to mean renewals does separate things: *"Your renewals representative will be able to* 1. *assist you with options to renew your support and maintenance,* 2. *as well as facilitate the necessary registration increases."* Anyway, it sounds like support already contacted renewals, so they should be getting back to you. It is always frustrating when things change, and I know there are conversations on how to improve things. Do please follow up here when you hear back from renewals.
Lazarus is a great tool. I think it complements Delphi nicely and it is useful to have both for sure!
Will do. I sent an email to renewals a few hours ago.
It's not a change in the system. You're redirected to sales because you're not getting bumped unless you renew your subscription. This is what people are being told. From the Delphi Praxis forum, a user posted this message: "I have copied the renewals team in this email response (renewals@idera.com). Your renewals representative will be able to provide you with the options to renew your support and maintenance. Once your licenses are current on maintenance, we will be happy to help with this registration limit increase. We are closing this case. Once you have arranged maintenance reinstatement with our Renewals Team, please submit a new case with your request." I hope that makes it clear it's not the users who are wrong.
Jim, that's an incredibly charitable way of putting it - "see if it makes sense for you to upgrade". Here's an email response that was posted on the Delphi Praxis forum: &gt;"I have copied the renewals team in this email response &gt;(renewals@idera.com). Your renewals representative will be able to &gt;provide you with the options to renew your support and &gt;maintenance. Once your licenses are current on maintenance, we &gt;will be happy to help with this registration limit increase. We are &gt;closing this case. Once you have arranged maintenance &gt;reinstatement with our Renewals Team, please submit a new case &gt;with your request." That makes it clear - if you don't renew, they're not helping you reinstall. Mr. Popov's recent statement on the matter was rather ambiguously worded and some people have taken the most charitable interpretation of it. Unfortunately, on Delphi Praxis email after email is popping up in a dedicated thread where it's clear that the original understanding was the correct one.
Unfortunately, people are vowing to move to Lazarus, Oxygene or C# exclusively over this issue: https://en.delphipraxis.net/topic/1119-increasing-registration-count-not-possible-without-active-maintenance-support/?page=3&amp;tab=comments#comment-9801 This is turning into a crisis of Delphi Pro EULA database proportions.
You're understanding it correctly, unfortunately. Several others have posted elsewhere with the same experience.
Been there, done that, got the t-shirt. Basically, Idera isn't making money on people that stick with an ancient version.. and new people are not coming in to buy licenses. So, they are trying to re-frame the need to obtain a new activation-license as "support" and putting a sales-person in the middle to facilitate. Not surprising at all, and I don't specifically deny that this qualifies as some form of "support", but certainly not worth thousands of $$. IMHO, this is just the sound of the casket closing.
&gt; Renewals will still be done, just by different people. When did you receive this and has Sales responded? The idea being that you will be directed to sales in order to arrange for how you'll pay them more money. &gt; Perpetual licenses should be perpetual. Everyone, except Embarcadero, agrees with you. Time to just use the Community Edition for commercial development.
&gt; I assume a management change forced the sales team to strictly focus on sales They *will* still focus on sales. If you wish to continue using your product you will have to arrange to give them more money. That is what **Sales** does - coordinates you giving them money.
&gt; and I don't specifically deny that this qualifies as some form of "support" Nobody *wants* support. I just want to install the product i already own a license for. Their installer is the one that is needing support - not me.
It seems like a good basis for a class action lawsuit against Idera.
I wish they release sources when they close doors.
And... this is what I got from renewals: &gt; My name is Xxxxx Xxxxx, I am your dedicated RAD Studio Account Manager here at Embarcadero Technologies. Recently you reached out to Tech Support requesting a permanent registration increase – as long as you are current on Support and Maintenance, registration increases will be able to be completed. Embarcadero is running a promotion that would allow you to take advantage of 3 years of S&amp;M, instead of our standard 1 year, with a license purchase this month. Would you like for me to send over a formal quote so that you can get up-to-date with Support?
do they do that on purpose and want kill delphi? it seems yes.
They've already killed Delphi; this is just an attempt to squeeze some last final cash out of it.
&gt; 3 years of S&amp;M Delphi has felt like 20+ years of S&amp;M. ;-)
Indeed. I am left with two options - rewrite the application which would take about 4-5 months of development, or find the "cure" to remove the ransomeware.
Atanas just updated his [post](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy) with this clarification: &amp;#x200B; ***Policy Update:*** *We still receive occasional comments on this and want to make sure we are clear on our Policy. Registration limits were introduced a long time ago with very valid use cases, but many of these are now outdated. We still do them, just now they get approved by Account Management (Sales/Renewals) vs. Support. Further, we have done several auto-bumps for everyone that should limit these issues altogether (and will do more as needed). As communicated, over the summer, we will work on a more automated way to increase registration limits through the self-service portal.* &amp;#x200B; It turns out there was some miscommunication and some of the auto bumps didn't happen. If you want to private message me then I can take care of your license now while we wait for the auto-bumps to be resolved. We have a lot of big plans for Delphi and improving the customer portal, it is unfortunate that we are stuck in between systems, but it will get better.
I just sent you a chat message on Reddit or you can email me firstname.lastname at [embarcadero.com](https://embarcadero.com) with your serial and I will get this fixed for you.
I've posted on that thread too. It looks like there was a gap between some of the changes. Sorry for the poor trouble and lack of communication.
Atanas posted this clarification to his [blog post](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy): &amp;#x200B; ***Policy Update:*** We still receive occasional comments on this and want to make sure we are clear on our Policy. Registration limits were introduced a long time ago with very valid use cases, but many of these are now outdated. We still do them, just now they get approved by Account Management (Sales/Renewals) vs. Support. Further, we have done several auto-bumps for everyone that should limit these issues altogether (and will do more as needed). As communicated, over the summer, we will work on a more automated way to increase registration limits through the self-service portal.
So you keep telling people. Literally year after year after year. It's almost like you're obsessed with a development tool that you don't use, but constantly troll.
I just looked at [Indeed.com](https://Indeed.com) and searched through the entire US for Delphi jobs. There's a new one!! 140k working for a defense contractor, with occasional travel for exhibits. But hey, going from 0 to 1 is infinite improvement of Delphi in the market!
What do you care? Oh ya, your job is to literally troll forums and pretend that everything in the Delphi world is A-OK. MVP ftw.
&gt;What do you care? I don't have any patience for deliberate anti-Delphi trolls. Especially ones who whine about getting called out for trolling.
Enjoy your decision.
That really is not a clarification. He seems to respond to you, so could you reply asking him to answer the questions and be perfectly clear about them? Especially the last 2 replies to his blog post (including mine). How hard can simple, clear, exactly worded answers to the simple questions be? 1. Registration bumps are now handled by [renewals@embarcadero.com](mailto:renewals@embarcadero.com) and not [sales@embarcadero.com](mailto:sales@embarcadero.com). 2. Customers need to have active subscriptions to get a bump. 3. Customers will soon (planned changes to happen "over the summer") be able to self-bump (or self-deregister an installation) at any time through their EDN page. 4. EDN logins will exist for all customers no matter if they do have an active subscription or not.
&gt;Enjoy your decision. If I ever decide to stop using Delphi for some reason, I guarantee that I won't spend literally years whining about it in every Delphi that I can find. Seriously. Talk about poor decision making...
It's been 2 days - did you get a response? I think a fairly rapid turnaround is a required element to this system. If you haven't received a response - did you try sending an email to Jim McKeeth as he suggested?
I sent an email to Jim and he increased my registration limit. Before activating I reinstalled RAD Studio one more time on Hyper-V virtual machine. Hopefully this is the last time I needed registration bump.
I wonder if error insight will ever be fixed. Didn't work in 10.2 and now it still doesnt work in 10.3, especially noticeable with their new inline variable declaration.
I use it all the time and it works very well most of the time, especially in recent versions. You can still coax it to mess up, though. Which is why it's so jarring to see it throw a bunch of false positives with inline variables and constants. Parsing needs to be done consistently across the product so they can completely get rid of phantom squigglies.
Looks fantastic, thanks for sharing!
The plan to adopt is low for all languages, so not too worrying a statistic. But really, I can't see anyone with a serious project considering starting with Delphi now. I can't recommend Delphi to anyone any more. I have tried migrating to FPC and Lazarus numerous times over the years, but certain features in Delphi make it impossible without major changes. I don't even use third party components. &amp;#x200B; The 1% usage is a pity. It really is a shame how badly Delphi has gone down since the glory days. I have said it before, but I have used Delphi in the past to absolutely out code C coders in time and quality of finished program time and time again. They may laugh and say "Delphi? That died years ago?" or "Isn't that pascal? I did pascal at uni 30 years ago!", but when I was given weeks to start writing a spec for a new program a company wanted I had a working prototype for them the next day using Delphi. &amp;#x200B; Idera doesn't look like they are going to give Delphi the love it needs. They can't even answer simple yes or no questions. [https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy?CommentId=9d23b0cf-4432-49bc-8586-46612d0f8d7c) Just a shame.
Any clarification update available yet?
I agree. I have used C++ Builder for years, and could create fast, reliable applications quickly. Idera has almost abandoned the IDE in favor of the Delphi product. If you are going to write Object Pascal, I would go with open source Lazarus over a $1000 IDE. I am learning Qt now.
The new web assembly support in QT looks impressive. The only thing I was wondering is how you do reporting in QT. I need a capable report engine for complex reports.
That is weird because I feel like they have actually increased investment on the C++ side. It just seems to all be going into upgrading the C++ language support on Windows to C++17 or C++19 or whatever is the latest. There are some non parity feature issues for sure though like Android service support.
Their new Clang compiler is ok, but they totally broke code completion! It takes 1 second for each lookup and you have to save your work before it will recognize new code. For instance you have to remember to save after each #include compiler directive. I can’t believe they released it in this state.
I agree. In Qt you can use their printer object and print html to pdf format. That is what I am currently looking at. I may have to write report tools with Builder from data collected by Qt applications. At least until they fix builder.
The HTML to PDF may be an option for some reports, but i also do a lot of master/detail. I use Delphi now and having a banded report writer is almost a requirement. I really don't want to draw reports by hand using x,y coords and calculating page breaks and stuff. Other than jasper reports, I haven't seen much available outside of Delphi. I really want to divest myself of Delphi so I may give Lazarus a whirl.
Someone over in the Qt sub suggested this http://limereport.ru/en/index.php for reports. On the surface, it looks like fast reports. I am going to research further.
Thanks for this link!
The only thing that could safe Delphi would be going full open source and then selling enterprise level support. There's no ecosystem left at all; even the commercial components are on life support and at best are ported to the newer versions to keep up with IDE. The IDE is outdated compared to other offerings, there's no Git integration. Project portability is horrible because it gets tangled with component dependencies. The current pricing is at the absurd levels, simple DB access adds yet another ~$1,500 while any other development environment or ecosystem gives it for free.
&gt; there's no Git integration [Sure there is](http://docwiki.embarcadero.com/RADStudio/Rio/en/Git_Integration_in_the_IDE).
How about GitLens and merge conflict handling?
I don't use it in the IDE, so I can't speak to specifics, but the Delphi IDE does have Git integration.
"Starting today, Delphi and RAD Studio customers with an active subscription to the Enterprise and Architect editions can download, install, and start using FMX Linux for rebuilding their FireMonkey applications to target the Linux 64 bit platform or build brand new Linux client apps "
Enterprise Delphi: $3k Architect Delphi: $3.5k [https://www.embarcadero.com/app-development-tools-store/delphi](https://www.embarcadero.com/app-development-tools-store/delphi)
Yeah, that initial purchase has some sticker shock. Subscription renewals are more reasonable.
Linux: $0 :-) You'd think instead of paying a third party to bundle FMX Linux they'd simply add Linux support to Firemonkey themselves. Maybe they don't have anyone there who knows anything about desktop Linux.
&gt;Linux: $0 Sounds like you're suggesting that people abandon Windows.
Personally I thought it was very clear. - any calls to support to help installing the product you already own - will be redirected to sales - so you can give them more money
My understanding is that registration bumps will continue as they did before except that it will be done by Sales instead of Support for people who don't have a current subscription. And that they are thinking about bringing back the self-service portal.
As of yet there are no stories of anyone without a subscription successfully getting a registration bump without Jim McKeith's help, but that may be because no one's tried again lately. I'll check around with some of the people who had problems before and see if things are working differently now.
Desktop Linux is about GTK and QT. Why not to add QT integration? Introducing QT binding would add real cross platform abilities for desktop applications.
Sorry but no, it's still not very clear. Some specific followup questions were provided to him: #1. Will you unconditionally state that registration bumps will be granted to those valid license holders even if they do not currently subscribe to your maintenance and support agreement? #2. Has your support staff been instructed to clear up this confusion in conversations with customers in which they have repeated stated that a current support agreement is required to obtain a registration bump? #3 If you are soon going to provide automation for this task - will it be available to those customers not currently on a support agreement?
And this is certainly nothing against Remy who has likely added more to the Delphi community than most any other non-Embarcadero employee on the planet over the last decade or so. (Definitely in the Top 5 devs.)
Just want to say i love you : )
Is there any reasonable alternative other than Indy?
A while back I would have said "SecureBlackBox" but am no longer sure after their purchase by nSoftware in mid-2016. nSoftware has their own IP\*Works! product that performs well, but it doesn't come with full source and they are stingy on update notifications/descriptions. I simply haven't used SBB support much since the buyout to know if it is still decent. (SBB support used to be great.) &amp;#x200B; Other than Indy, SBB, and IPWorks I would wager that ICS is likely the next most popular choice: [http://www.overbyte.eu/frame\_index.html?redirTo=/products/ics.html](http://www.overbyte.eu/frame_index.html?redirTo=/products/ics.html) You can get support here: [https://en.delphipraxis.net/forum/37-ics-internet-component-suite/](https://en.delphipraxis.net/forum/37-ics-internet-component-suite/) &amp;#x200B; Other possible choices: These guys have been around a long time: [https://www.chilkatsoft.com/refdoc/delphidll.asp](https://www.chilkatsoft.com/refdoc/delphidll.asp) So has: [https://www.dart.com/pages/securetcp-activex-control](https://www.dart.com/pages/securetcp-activex-control) [https://www.clevercomponents.com/](https://www.clevercomponents.com/) [https://www.weonlydo.com/index.asp?related=catalog](https://www.weonlydo.com/index.asp?related=catalog)
And don't forget Synapse, it's very lightweight and stable, though it's not as featurerich as Indy.
Add System.StrUtils to your uses clause.
I use SBB, 3 years now. It's good. The initial dev from the prev owners is pretty complete. After nsoft, there was a marked decline in any new features, as it's really just in bug fix mode, floating on the sales they can still get in the Delphi market. One note, it has really good codebase that does a lot more than Delphi, so hopefully it will be buoyed by other languages. But I wouldn't bank on it. Imho, get out of Delphi. If you don't have a plan to start isolating the codebase, walling jt off and putting a service layer in place, you are playing russian roulette.
Where to move? I use delphi for creating small windows utilities?
Before you do, you might want to get some other opinions. Some anonymous posters don't necessarily post in good faith.
Python. It has excellent support under Windows, can build GUIs and recently embraced by Microsoft. It also is very friendly, typed language, really good string parsing, \*free\*, and you'll be learning a language that is used and very common in the industry.
I tried python years ago. Creating gui was pain in the ass.
Is Synapse still being actively supported?
The things I don't like about delphi is being dependent of Windows OS and being kinda hard to deploy in comparison to web based applications (JavaScript and php projects). The dfm sometimes bugs with git and needs to be resolved manually, but this is a minor issue. For the syntax, I like it, it was the first language I learned, but today I like dynamic typed less verbose (php, JavaScript) languages the most, because it gives you easier time working with complex data structures and avoids repetition. I think the supremacy of the web, cross plataform and opensourced languages put delphi in a bad spot in comparison, that's why people complain about.
For me I will be using it exclusively for GUI desktop applications. Not in a web context. Node and PHP are my favs. for server side stuff too. I've build desktop applications with web technologies using Electron which is cool.
For desktop applications delphi is definitely the way to go
I love Delphi's syntax, aside from the FOR-LOOP. I wish it was more C like. But I like := for assignment (I read the : as "is" so it reads is equal/assigned to) and = for comparison. I don't like the C =,==. I also like the VAR section of the code. Makes code easier to read.
No serious flaws. People hate it, IMO, because it is Pascal. I've written everything from services to tray apps to full-blown database apps in it. They're small, generally have zero dependencies, and are FAST. That said, I haven't really done any serious Delphi work since D7. The reasons are job change and expense since I was the sold developer with it.
Delphi is fantastic for certain use cases, especially what we used to call 'vertical market' stuff. Narrow audiences, internal apps, etc. Very productive. It's not so great for more mass-market, web, or cloud applications (it can do that, but there is a lot of competition that can provide better value). A drawback will be that the ecosystem is pretty limited. There are far fewer people writing in Delphi so the available libraries and community support is dramatically smaller. Depending on what you are doing you can end up writing and maintaining a lot of stuff that would be off-the-shelf in many other environments. Before you settle on Delphi for sure you might also want to take a look at Xamarin, it offers similar cross-platform capabilities in C# while also having a very rich and active community (and Microsoft is still putting a lot of effort into developing the language and tools, much moreso than Embarcadero can with Delphi).
The language is really nice and you can do some crazy stuff faster and simpler then in C/C++. I love Delphi for that reasons but it has its limitations! After about 10 year of coding with it, i think i know them all. * First let be me clear the compiler is really fast (in compiling!) and debugging is so nice with the IDE but the compiler **sucks!!** The generated ASM code is mostly not optimised and slow (see as example [https://quality.embarcadero.com/browse/RSP-21764](https://quality.embarcadero.com/browse/RSP-21764)). If it's now fixed by now (probably not!) the generated code for y =x/2 is slower then y=x\*0.5! Nice right? The Delphi compiler doesn't know the AVX instructions set. **In 2019!!!** Event for SIMD support you must use external libraries. * And the IDE is not better - It crashes - corrupt your source files and so on. The red syntax error indication won't work on fairly big projects. The IDE had in 10.12 Seattle more than 3 types of line counting that were not consistent! The heck! * You know static libraries? Yea have fun using them in Delphi - you can't! * Embarcadero does not really care about the language. For them its more important to give you in the next update a Dark Theme mode than fixing critical bugs... and they event want some thousand Euros for that! Okay they gave us meanwhile the Community edition which is nice. * Have fun using a Delphi project with Git. The IDE will swap 2 blocks of \~5 lines of code of the project file if you change build mode fore some reasons. &amp;#x200B; I could go on forever i think :D But i still love it and still coding with it today... Delphi has/had some great potential but its not used sadly. For "normal" no heavy lifting application Delphi is alright but for the more complex stuff it's just not a good choice. That are just my humble opinions after some years experience in networking/performance computing/graphics(OpenGL)/and other stuff in Delphi.
&gt; I've build desktop applications with web technologies using Electron which is cool. Deploying a whole browser to create a GUI... :/
&gt;... That's why we have FreePascal/Lazarus.
That's true but the last time i tried it \~5 years ago it couldn't handle generics
I wouldn't say there is "hate" for the Delphi product. More disappointment. Delphi users used to have a real (deserved) passion for the product. &amp;#x200B; From my perspective as a long term Delphi user quality has been going down and the way Idera (Idera owns Embarcadero) is now "managing" new releases is not looking positive at all. All of the original Delphi developers are long gone and changes to Delphi are now done by cheap off shore developers. Quality suffers. &amp;#x200B; The object pascal language is fine. It allows me to go back to old code and catch up on functionality relatively easily. The forced structure of pascal is a big bonus in this way. The compiler speed is great. Applications once compiled tend to have very good performance (even with the outdated unoptomised compiler). &amp;#x200B; You may think the IDE looks cool, but man is it buggy and laggy. Once you use it for a while get back to us about what you think of it. The form designer does still work well. I wish all other development platforms had similar GUI editors. &amp;#x200B; Editing code in the IDE means constant pauses and slowdowns unless you disable the code insight features. Coming back to Delphi after doing some code in VS or Android Studio just feels like Delphi is so behind and slow. Other IDE code completion helpers do not cause the cursor to turn into the spinning circle for 5 to 10 seconds while they lookup the parameters. If Android Studio detects a bug it does not take 5 seconds and then highlight the wrong line. The problem with these sort of issues is that Delphi uses a second compiler to handle error insight (red squiggly lines) in the IDE. The second compiler does not get the attention it needs (or none of their new cheap off shore coders can do it) so when a new feature like inline variables is added, it is done in the usual half arsed way and they ignore getting error insight fixed with it. &amp;#x200B; Idera have had a terrible way of communicating with customers since they acquired Embarcadero. It looks like they are going to treat Delphi like their other purchased companies, ie sack all knowledgeable staff who built the product, bleed customer maintenance until customers realise they get nothing for their money and finally migrate elsewhere. This strategy makes the Idera bottom line look good in their board meetings, but gives no benefits to the Delphi end user. &amp;#x200B; Just a shame.
I have been using Delphi for decades and loving it. The only complain I have is the stability of the IDE. It crashes once in a while, but I never lost any code.. may be I save often! Fortunately, there is a [https://www.idefixpack.de/blog/ide-tools/ide-fix-pack/](https://www.idefixpack.de/blog/ide-tools/ide-fix-pack/) to reduce those IDE crashes. &amp;#x200B; I also explored other languages like C, C++, D, Go and Rust. I tend to like natively compiled langauges and care less about the interpreted / garbage collected languages (though I briefly explored such languages too). I have recently started developing small helper tools in Rust. I want to develop libraries in Rust and use them from our existing Delphi applications and see how it goes. No matter how that goes, we will continue to use Delphi. It's our secret weapon!
&gt; generics https://www.freepascal.org/docs-html/ref/refch8.html https://wiki.freepascal.org/Generics https://wiki.freepascal.org/How_to_use_generics
Thanks for the response. I noticed somebody mentioned Lazarus below. How does that compare? The one application I can't fault that was made with Delphi is Fruity Loops. I've been a user since it's release. They use embarcadero (they have a case study on the site). That to me is a large project, and speed wise etc it runs fast. I do believe they have some inline assembly for computational heavy stuff and they created their own GUI framework. To this day they seem happy using Delphi. They use FreePascal to compile their MacOS version.
I jump on all the trends to give them a try. I didn't say it's practical, but it's cool. Technically the browser isn't included ... the V8 engine isn't a browser. It's the engine that powers a browser.
&gt; Technically the browser isn't included ... https://en.wikipedia.org/wiki/Electron_(software_framework)#Architecture
I have been using it since 2005, and it's a great language. The hate it's been getting is because everyone wants the new fancy language.
This is true, but it's not a complete browser like chrome dumped in with the exe. There's also [Electrino](https://github.com/pojala/electrino) which produces small binaries compared to Electron.
There's no community of shared libraries. For example, how tf do I communicate with an api that requires oauth authentication? Everyone has to write their own interface for that. You can't get very far before you notice this issue.
Could you please point out the errors in my post, I will fix them if mistaken (david - csvelocity)
UniGUI https://uniGUI.com
On Windows: Delphi, on Mac: FreePascal and TurboCocoa
But I love Delphi and Pascal. I can't comment on FireMonkey because I'm currently only develop for the Windows plat and use VCL only, in this regard, I would say Delphi is still the BEST tool. There are still quite a lot of passionated delphi/pascal developers around. On the other hand, I really really don't like the management/company behind Delphi - Delphi deserved a better operator :(
God the ide changing stuff in the project files is the bane of my existence. Every week our builds fail because of conflicts in project files.. Doesnt help our CI buold switches to release build config and auto saves
Do they have any plans for anonymous functions? i use these a lot in Delphi
I just started looking at it now that some of the delphi 3rd party vendors are supporting it. It looks like a decent replacement for Delphi (although its missing a few language features). Runs great on windows, not so great on mac. I'll definitely be using it to build windows front ends.
What does Xamarin officially use as a multiplatform GUI? I know they had some forms thing but it only supports iOS/Android?
for (windows) desktops. Firemonkey was pure pain on the mac.
As opposed to C#, which is the standard today and obviously Microsoft's preferred choice? If you're going to paddle upstream instead of downstream, you need to have good reason. What serious advantages does Delphi offer that compensates for the negatives of using a niche choice (and paying at least 3x the price)?
A quick google search shows this: https://forum.lazarus.freepascal.org/index.php?topic=43892.0 Maybe there are even newer threads in the forum / on the mailing list. Maybe you're lucky and it's already working in the beta source code ("trunk").
Been using Delphi since 1995 Starting with Delphi 1.0. We did a big project targeting Windows 3.1 with it with some very smart people. Back then it was a Godsend. It was in 1996 that Microsoft bribed/poached/lured every single legendary developer that worked on it away from Borland. Apparently Borland just didn't want the developers as much as Microsoft did. What they built in 1996 (Delphi 2.0, the first 32-bit version) was absolutely light-years ahead of its time. It was so far ahead that even after Borland/Inprise/Codegear let it wither away, it was still the best thing on the market until about 2006 which .Net started to become viable. Who built .Net? Those original guys from Borland. If I were you I'd put my money on the legends... the C# guys. There's a reason C# is ruling the world right now... it is legendary, it was built by legends. I still use Delphi, but it is a love-hate relationship. Even this morning I am struggling with trying to get a damn "Hello World" application running on Android. I don't trust Embarcadero to deliver and continue to deliver updates to rapidly changing platforms built by companies with far more resources. They're going to miss the Android 64-bit deadline in about August 2019.... I use Delphi when I want a friendly C++ replacement, but even as I write this, I don't trust my own choices. Plus it has been a career killer. If you try to start a Delphi shop, your board of directors will fire you. Try to hire Delphi guys... do a nationwide search even of the USA, and all you'll find are idiots who could barely handle VB. For 3rd party libraries you'll have to write most of them yourself as most of them just plain don't exist... and the ones that do are riddled with bugs. I personally just put in pull-requests for some WebSocket on GitHub stuff that nobody has even looked at, let alone merged. Nobody contributes to my libraries on GitHub either. I think they just cloned the stuff like a kid collecting Nickleback albums on Napster (nobody actually wants them, they just downloaded them to screw over the authors). Avoid Delphi like the plague is my advice... don't become like me, lol. Luckily I know other languages and don't have be stuck in this corner.
This. Delphi is still fantastic. Great compiler. Great product on Windows. IFFY future though, for Firemonkey, on Android/iOS and OS X Desktop. I have doubts about the long term viability of Mac firemonkey as Apple will continue to break (evolve?) Mac OS X on every major release, and I doubt Idera has the engineering headcount and team depth to continue to keep Firemonkey a living thing on iOS, Android and OS X. It's not impossible, it's just unlikely that they will win this four front battle.
Xamarin has XamarinForms, right? I'm curious to hear from someone who has Xamarin mobile apps in production in the apple and android store.
Static Library (LIB) files don't exist, but you can compile and link in DCUs (which are not exactly OBJ files. They're compiled units). Typically you point Delphi at a folder full of DCUs and that's how you ship static "libraries"
DPROJ files are a bad thing. They really need to rebuild the project file system.
Great! really the only thing I miss from Delphi. Other than Spring4D
It's not really paddling upstream though is it? We're not talking about creating complex UI's with the Win32 API in C (I created a library for that). It's no more difficult to learn than Python if I'm honest. I've used C# and .NET for many years. Still do. Jack of all trades is me.
One thing you didn’t mention is Lazarus is a wonderful tool. I write in C++ and Object Pascal and it reminds me of Borland Builder 5. I still believe BCB 5 is the best IDE ever released.
This would be great, especially for us C++ guys.
The ancient version works. Period. End of story. If they don’t like it focus on building a modern product around the VCL. My guess is they don’t have the talent to start from scratch on a new IDE. If they did, they could rule software development again.
I have no idea how they stay in business. I mean with so much quality free stuff out there they're charging a pretty penny for something that isn't exactly broadly used. Can somebody who uses their tools enlighten me?
I don't use it, but look at this: [http://docwiki.embarcadero.com/Libraries/Rio/en/REST.Authenticator.OAuth.TOAuth2Authenticator](http://docwiki.embarcadero.com/Libraries/Rio/en/REST.Authenticator.OAuth.TOAuth2Authenticator)
I've seen stuff like that. And the odd things on sourceforge. Frankly they sketch me out. I'm spoiled by github...
Memory management and Delphi is just as easy a Python? Writing files, you think TFileStream and all the boilerplate try..finally baggage is just as easy as with...open..as..file? Your 3wk old account and this doesn't pass the smell test.
&gt;Plus it has been a career killer. If you try to start a Delphi shop, your board of directors will fire you. Try to hire Delphi guys... do a nationwide search even of the USA, and all you'll find are idiots who could barely handle VB. This is what every career developer needs to think about. If you haven't, then test your assumptions and go search for Delphi jobs. People are not taught Pascal in college for nearly 20 years, you will find nobody under the age of 40 has been exposed to Pascal... unless you live in Brazil or South Africa.
&gt;Memory management and Delphi Pretty easy, yes. &amp;#x200B; &gt;Writing files Also pretty easy. Traditional file IO, streams, TFile, etc. I'm not sure if you've used a modern version of Delphi or if you've bothered to learn about any new features, but they're there all the same. &amp;#x200B; &gt;Your 3wk old account Anonymous posters throwing shade at other posters? Ironic...
Above, you claimed that a three week account "doesn't pass the smell test", but this one day old account does?
\&gt; Memory management and Delphi is just as easy a Python? Yes. \&gt; Your 3wk old account and this doesn't pass the smell test. That's irrelevant.
Ignore him. Use your powers for good. Like getting a response from Atanos in this post [https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy?CommentId=9d23b0cf-4432-49bc-8586-46612d0f8d7c](https://community.idera.com/developer-tools/b/blog/posts/from-the-gm-new-updates-and-changes-to-the-registration-bumps-policy?CommentId=9d23b0cf-4432-49bc-8586-46612d0f8d7c) Or getting anyone at Idera to read and understand customer frustrations.
What's the sense of having power if you can't poke the occasional deliberate Delphi troll? I believe Atanas has answered that question. I don't think you're going to have much luck wringing a more specific wording out of him. And even that came about because of community backlash and not anything I could have said. As for the very broad "customer frustrations" thing, have you tried joining the betas? It's a sincere suggestion. You would have access to slightly more information than is available to the general public and a good opportunity to highlight bugs that are at the top of your hit list. Not so much feature requests, though.
This was the first Google result... &amp;#x200B; [https://github.com/stievie/POAuth2](https://github.com/stievie/POAuth2)
&gt;It's not really paddling upstream though is it? &amp;#x200B; Of course it is. The "official" / preferred way of doing things on Microsoft is .NET. The documentation is geared / more readily available for .NET, APIs are offered for Microsoft products and .NET, etc. The NuGet package management system for .NET has over *one hundred thousand* open source libraries available, etc. To go the Delphi way as a new user you have to pay a lot more and use a much less mainstream product. There are times that's a good idea, but only if there are significant gains to be had doing so. Back in the 1990s, Delphi had those significant advantages. Now its strengths are no longer unique. This again brings us back to what "killer features" it offers in 2019 *for 2019's problems*. Heck, the core problem it addressed in the 1990s - CRUD front-ends for client/server DBs - has been solved by web apps now. &amp;#x200B; &gt; Delphi is no more difficult to learn than Python if I'm honest. &amp;#x200B; Having learned both, I can't agree. Python is routinely taught to children - I mean very young children. For the adults, David Beasley has said that after two days of his course for non-programmers, students are able to open compressed web log files, traverse the logs, count page hits, summarize the top 20 page hits and pretty print the output. Not bad! &amp;#x200B; Embarcadero did the right thing making a free version available, but the fact still remains you don't have near the learning materials available for Delphi as you do for Python. Occasionally my local bookstore will have a special "The Python Book" 180 page magazine for about $18 (high price because imported from UK) that teaches non-programmers Python, using the Raspberry Pi, etc. The last one I saw even said on the cover it contained links to over 2 hours of video tutorials. There are books designed for non-programmers such as "Automate the Boring Stuff With Python" that encourage people to learn programmer (and the online version of the book is even made available for free). &amp;#x200B; The main point is that if you go the Delphi route you have a harder time finding learning materials, a much harder time finding open source libraries, you're tied down to Windows and one IDE, you have to pay a lot of money up front if you're commercial, there are fewer online locations to get help (this subreddit has 16 hundred subscribers while /r/learnpython has 216 thousand and /r/csharp has over 115 thousand), etc. You're paddling upstream. You're choosing the harder route. The question is then - if someone has no prior investment in Delphi, what would entice them to take on those extra burdens. Think of using a search engine other than Google, an ebook reader other than Amazon Kindle, a desktop OS other than Windows, an office suite other than Microsoft Office, etc. It's more work, and there need to be benefits to justify the extra obstacles. That's what I mean by paddling upstream.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [The online course for "Automate the Boring Stuff with Python" is free to sign up this week.](https://np.reddit.com/r/learnpython/comments/bz3rxv/the_online_course_for_automate_the_boring_stuff/) \#2: [I'm super annoyed and taking it out on learnpython](https://np.reddit.com/r/learnpython/comments/byfigg/im_super_annoyed_and_taking_it_out_on_learnpython/) \#3: [Why study programming when you can just play an RPG?](https://np.reddit.com/r/learnpython/comments/aw0au0/why_study_programming_when_you_can_just_play_an/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
\&gt;&gt; Memory management and Delphi is just as easy a Python? \&gt;Yes. &amp;#x200B; Ok, now you lost me. Manual memory management is just as easy as automatic reference counting? Seriously? Where's the Python equivalent of Nick Hodges going on and on about Free and Nil (one of many articles he's penned on the subject): &amp;#x200B; [http://www.nickhodges.com/post/Using-FreeAndNil.aspx](http://www.nickhodges.com/post/Using-FreeAndNil.aspx)
&gt;Writing files, you think TFileStream &amp;#x200B; Except if you do a Google search as a new user for "Delphi how to open file". In that case the first link is to the Delphi Basics web page (which I don't believe has been updated since 2001). There you learn about TextFile and TStringlist and nothing about TFileStreams at all: &amp;#x200B; [http://www.delphibasics.co.uk/Article.asp?Name=Files](http://www.delphibasics.co.uk/Article.asp?Name=Files) &amp;#x200B; That's the funny thing... Python was first revealed to the public in 1991 and reached 1.0 status in 1994, but still has the same "open" function to open a file. In Delphi, what do we have... five different ways to open a file, none of which will ever be deprecated (only some of which handle Unicode)? I believe five ways to open a file matches Java.
&gt; The "official" / preferred way of doing things on Microsoft is .NET. I stopped here. Never in my life have I heard such nonsense.
Interfaces, records with methods. There are lots of options.
I'm not sure what you're criticising here. The fact that new features have been added instead of just sticking with the original Object Pascal file handling routines? Anyone who has actually used the product in the past ten years is probably familiar with the new stream features and things like IOUtils.
&gt;why it's hated so much I'm not convinced that it is. There are a small handful of people who don't use Delphi, but invest lots of time, energy and walls and walls of text (best described as Gish gallop) insisting that Delphi is dead/dying and that people should abandon it immediately. Deliberate Delphi trolls have been around since Delphi was released. They aren't dealing in good faith and can safely be ignored. Some people like to say outrageous but untrue or impractical things like "no improvements since Delphi 7" or "Delphi will die if Embarcadero doesn't open source everything". I don't think anyone takes these claims or demands seriously. And even some otherwise legitimate users get frustrated and sometimes fly into a rant, but shouldn't be confused with the the first group since at least some of these rants have some basis in fact and deserve some consideration. &amp;#x200B; A lot of this is noise. Once you filter it out, you can have a real discussion about the pros and cons of Delphi. There are lots of things to fix and improve and that's much easier without all of the drama. &amp;#x200B; One pro and one con, imho. Pro: Lowering the barrier to entry by releasing the free Community Edition without crippling its features (identical to the Professional Edition). Con: They need to work on the pricing for their commercial editions.
The same way CbuilderX (anybody remember that??) and Kylx went... It's hard to imagine how successful Borland could have been had they not thrown so much energy behind so many half baked products... Thing is with some of them, like html builder, they were onto something, they just didnt quite follow it through.
My experience is 1 year old/outdated maybe so keep that in mind. Last time i used it(again, 1 year ago) the debugging experience was awfull. And that's where i draw the line for me. Inspecting values and properties is really cumbersome. But that might have changed or maybe it's not an issue for you.
8:00am CDT happens when this comment is 19 hours and 11 minutes old. You can find the live countdown here: https://countle.com/BHVlYnKkH --- I'm a bot, if you want to send feedback, please comment below or send a PM.
That's not even remotely correct.
Countle wasn't written in Python, was it?
Download: [https://cc.embarcadero.com/Item/30880](https://cc.embarcadero.com/Item/30880) (Webinstaller) [https://cc.embarcadero.com/Item/30882](https://cc.embarcadero.com/Item/30882) (ISO-image)
New features / fix list: [http://docwiki.embarcadero.com/RADStudio/Rio/en/New\_features\_and\_customer\_reported\_issues\_fixed\_in\_RAD\_Studio\_10.3.2](http://docwiki.embarcadero.com/RADStudio/Rio/en/New_features_and_customer_reported_issues_fixed_in_RAD_Studio_10.3.2)
I'd install it today except for having to do a full reinstall from 10.3.1. That's kind of crappy for a update.
It's like that for every update
Video on 10.3.2 what's new: [https://youtu.be/3tQ9KDpGsRQ](https://youtu.be/3tQ9KDpGsRQ)
If I recall correctly older Delphi and C++ Builder compilers used a specific type of OBJ file, different than the typical Microsoft compilers' .obj files. See for example here: [https://stackoverflow.com/questions/3114339/converting-coff-lib-file-to-omf-format](https://stackoverflow.com/questions/3114339/converting-coff-lib-file-to-omf-format)
Also, depending on what kind of work you need to do with regular expressions, I personally typically include the Microsoft VBScript Regexp library COM import into a project to do regular expressions. It's not strictly the very same than PCRE, but for basic and most advanced regular expressions they perform comparably.
Some issues: * Make a registry backup, it wiped out paths again * Breaks 'Documentation Insight', reinstalling that did not solve the problem. (Hotfix on the way) * IDE Fix Pack throws an error so the compiler was changed, however compiling without appears as if its much slower than 10.3.1
I must say from a quick test it seems like my previous annoyances seem to be fixed. The install (I went for the web installer) went smoothly. I don't see any fixes listed for code completion speed, but it seems fixed at last. When I press a "." after an object name the code completion is instant. That never happened for years. It would sit there and churn the hard drive as the blue circle turned. Now it works instantly like in other IDEs. I can now leave code completion activated. I had it disabled and would invoke as needed previously due to the IDE sluggishness. Similarly when I type the first ( for a procedure that takes parameters, the popup for the parameter help is instant. This also used to churn before display. Error insight (which I also had disabled) seems to also be faster and (so far) seems to highlight the correct incorrect code line. No idea if they fixed the inline variable error insight issue because I never use inline variables. I only use Windows and VCL and the basic IDE features so have no idea how the new Fire Monkey and cross platform components work. I will see if I get the same results on my other installation machines and laptop, but looking good so far. If Idera can fix the registration bump issues I will be a happy customer.
Great write-up. &amp;#x200B; \&gt; and Embarcadero has Android 64-bit support for Android 9 Pie (Android 28+) devices on their roadmap &amp;#x200B; They're cutting it extremely close though, aren't they? Is there any sign of the beta that will allegedly have 64bit support yet?
Looks like all the downloaders have killed the server. Maybe a good sign for popularity. Or maybe a sign the server is running off an old PC on someone's desk. I should have grabbed the ISO while the server was still up.
Alternative suggestion: Always use the GetIt installer, but also develop in a VM so you can take a snapshot before making big changes.
Server is still down?! Can you ping someone at Idera to kick the server? Hopefully before they all go home for the weekend. Are there any mirrors available so I can get the ISO?
Hope 10.4 will be released very soon
I think they have been thoroughly pinged. According to David Millington, they are aware of the problem and are working on it. I am almost certain that kicking the server and turning it off and back on again were among the first things they tried.
Thanks for checking.
He mentioned it on Facebook. They've been getting reports since it went down last night. Seems like it's a non-trivial outage.
And let's hope it's stable.
Haha. I cant even hope that much.
Still down. For anyone who needs it now, here is a working direct link for the full 7GB ISO. [altd.embarcadero.com/download/radstudio/10.3/delphicbuilder10\_3\_2\_496593b.iso](https://altd.embarcadero.com/download/radstudio/10.3/delphicbuilder10_3_2_496593b.iso) At least now I can get back to work and have the ISO for future installs.
Another new annoyance. Clicking the "Play" button to compile and run. Once the compilation finishes (and the compiler stats dialog disappears) there is between a 6 and 10 second delay before the actual exe starts. During the pause the blue circle cursor turns and Delphi shows not responding. Even with a brand new empty project. Compile takes 1 second, time to show the app once compiled takes up to 10 seconds. Things like this should be easily caught and fixed before release.
Getting some really weird results with rename refactoring too. The initial preview list showing what will be refactored shows correct but when I click the actual button to refactor is gets really confused. Only seems to work for very simple renames. I am getting to the stage now of weighing up old errors vs new errors and which annoy me worse. Do I stay with 10.3.2 and the new issues or go back to 10.3.1 with the errors I already know.
At least some of their servers came back up last night.