I tested this using Python 3.7.0 though.
Hmm... python 2.7.10 gives me the same results as described above.
I got the same thing. I believe OP made a mistake somewhere.
You're right, and I was able to get in by passing the username and password in the url. Thanks!
like php5.6
I think your example is incorrect. They both end up the same: &amp;#x200B; [https://repl.it/repls/MidnightblueInstructiveDistributedcomputing](https://repl.it/repls/MidnightblueInstructiveDistributedcomputing)
What problem with you in my comment? Or the problem with your think or my mind?
``` ~ $ sudo apt purge python2.7-minimal --auto-remove Reading package lists... Done Building dependency tree Reading state information... Done The following packages will be REMOVED: libpython2.7-minimal* nodejs* python-minimal* python2-minimal* python2.7-minimal* 0 upgraded, 0 newly installed, 5 to remove and 0 not upgraded. After this operation, 78.8 MB disk space will be freed. Do you want to continue? [Y/n] ```
&gt; when it was looked at before 4 years ago?
Nôm na nó là 1 dạng giải thuật để dịch chuyển 3 cột, thời sinh viên từng được học mang tên "Tháp Hà Nội". Còn thằng rep comment có í gì thì t cũng méo hiểu luôn :))
I propose 3.91, 3.92
Taking over a Django app that was started without considering the many out-of-the-box features of Django, I had to integrate many concepts/ideas like \- Data migrations \- Django admin site \- testing (!) \- password validation \- etc. And also general concepts like automated deployment and continuous integration.
For better or worse, Python doesn't use semantic versioning. They will deprecate and remove things between 3.X, 3.X+1 releases.
Can u send the rough copy of the code?
You are right, my example is incorrect, I edited the post.
I made an edit, you were right.
I made an edit, you were also right.
My number one velocity killer right now, but I'm glad its finally happening
The reason this works this way is because `a=[[]]*4` does not make 4 separate list elements, it makes one list element and then repeats it four times. As a simpler example, consider this: ``` x = [] y = x x += [1] ``` After this, `y = [1]` because `y` is pointing to the same underlying list.
So it seems to be creating a list containing four references to another list, while `b` is a list of four independent lists. Since they're all references, changing one will also change all others. These references are pretty much invisible to functions, hence why `print()` shows that `a` and `b` are equal.
Fair, but I’m talking more from a user’s point of view. Most python developers don’t hang out on reddit or python, they just do their work and go home. If two years from now the PSF announces python4, I can imagine it causing doubt in python’s direction or stability by people who aren’t well informed.
Thank you for your help, I think I understand now whats happening.
Aside from the personal preference issue, when working on a complex code base with a team, they are invaluable. It makes the code self-documenting by only viewing a function declaration.
Thank you for your help, since I've started programming in Python I thought I could forget everything that I know about pointers and references...
I know that. Python's 3.7 change broke numpy. I don't see why it's a problem to break a third party library, but not everyone else's code. Numpy is a very popular library in the python ecosystem.
Dude I gave the source code of the program. Check the comments
code : [https://github.com/ABSanthosh/Chemical-Structurer-](https://github.com/ABSanthosh/Chemical-Structurer-) Here you go
&gt; Why would someone spend that much effort on a broken version of Python? Exactly my point. Why hire the language creator to [port your code base over a period of three years](https://blogs.dropbox.com/tech/2018/09/how-we-rolled-out-one-of-the-largest-python-3-migrations-ever/) and end up with yet another broken version of Python? If you're investing that much time and money into a large rewrite, at least pick a better target language, right?
ok bây bê : ))
VFXPlatform 2020 finally lists python 3, so we'll see which DCCs follow suit.
That's because Python 4 is just going to be Python 3.10, that's just how they are going to continue with versioning
I was encouraged to learn 2.7 and stick with it over 3 about 3 years ago and aside from the print statements I can’t really figure out what’s different (I’m not a programmer; I use it for data analysis, image processing in astronomy, and playing around). What are some of the big differences between 2 and 3, in the language of non-CS people?
Did you write a [GUI interface using Visual Basic](https://m.youtube.com/watch?v=hkDD03yeLnU) for it?
:)) Thật ra "Tower of HaNoi" này k phải của Việt Nam tạo ra nên một số người hay nhầm lẫn Inform to you =))
I shudder to imagine what your code base looks like
Thanks, that is encouraging. Is what I thought, I just never found the time to do it, you know, always behind schedule
It would help if you were more specific. What about 3.7 broke numpy? Do you have a bug report or mailing list thread that goes into this
[`lru_cache`](https://docs.python.org/3/library/functools.html#functools.lru_cache) provides a practical example of this. Once you add a cache to a function, you can clear it or see statistics like the size of the cache, the number of misses, etc.
https://www.opensourceanswers.com/blog/you-shouldnt-use-python-37-for-data-science-right-now.html This goes into it. It links to 2 issues in numpy and 2 issues in pandas.
The release dates between RHEL7 and Centos7 was 7 months. They have a decent amount to do, it's not just calling "make" a bunch of times.
Package maintainers will switch from the psf repos to the RHEL source as their upstream. Probably a new project will form and linux distros will just link /usr/bin/python to /usr/bin/new\_name. I'm aware of no distro where python --version isn't 2.7. Too many other packages would break.
Python is just fine. Use Pillow for loading images and NumPy/SciPy/OpenCV for processing.
PythonAnywhere dev here -- with a paid account you can schedule up to twenty tasks (and that's a soft limit which we're happy to raise if you need it). So you could just schedule the same script 12 times, once at 2 past the hour, once at 7 past, once at 12 past, and so on -- then it would run every five minutes. (I'd recommend doing it slightly offset from the "round" times like 0 past, 5 past, 10 past and so on, because those are popular times for scripts to run so you'll have fewer risks of "noisy neighbours" if you run your script slightly later.)
Work with your team to set acceptable standards for contributing to your code. Communicate those standards to anyone who needs to make changes. Don't accept _any_ code without review. And fire anyone who willfully ignores the standards established by the team. This isn't hard.
Is anybody still using turbogears? It's quite an old framework. why didn't it become mainstream?
Those look like straight up bugs in numpy, not in python, and not related to 3.7 in any real fashion. At most the behavior of 3.7 changed somewhat to expose it, but numpy appears to have been bad to begin with. Certainly C libraries like numpy do interact closely with cpyhon's c interface, and its possible that changes to that interface could break those libraries, but even then I wouldn't consider those to be changes in the python language. I wouldn't expect C API compatibility between python point releases to the same extent that I would expect python language compatibility. In other words a ".py" you write and execute for 3.6 should work for 3.7. A ".c" that you compile and link to cpython might or might not.
I've recently had to explain this to people at work. But using the multiply operator on lists that contain mutable elements (such as other lists, like you did) can lead to some very sinister bugs and should generally be avoided. I will always suggest [[] for _ in range(x)] over [[]] * x
I have to assume that Py4 will be largely non-breaking. They have to have learned their lesson....right?
They stop receiving support, so they break slowly over time. Mirrors start becoming more and more seldom found. Then police come to your door and watch you refactor your code.
&gt; At most the behavior of 3.7 changed somewhat to expose it That's breaking backwards compatibility, whether you do it intentionally or not. I don't think Python should implement semver, but that would be disallowed by semver. I also think it's totally unfair for people to expect python to follow semver and get cranky when they break something, even though they explicitly state they don't follow semver.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Or you can install the centos RPMs on your system anyway, as long as you use python from /usr/bin and /use/lib64/python2.7, there's no change. Or, download the SRPM and build/patch yourself. RHEL 7 will get open critical bug fixes through June 30 2024, and extended life support (paid) for some number of years after that. FWIW, Red Hat are still providing limited support for RHEL 4 which was released in Feb 2005, 14 years ago.
&gt;it implies that I am singlehandedly controlling the coding conventions for the team You should be *working with your team* to establish these conventions. I did not mean to imply the onus was on you and you alone to force them on everyone, it has to be agreed on. &gt;that my team would speak with one voice Part of being a team is compromise. If you're the only one bitching about assignment expressions and get overruled, live with it or find another place to work. &gt;there are no other teams who merge their stuff into the same codebase out of sight If you have other teams working on the same codebase, then you need to get the team leads together to establish a common convention (and ENFORCE IT). As /u/TomBombadildozer said, this isn't hard. Stop making excuses.
That seems a bit extreme. There are projects for which this level of compatibility might be necessary (say the Linux kernel), but the whole point of updating software is to change behavior. What is your thought regarding this [xkcd](https://xkcd.com/1172/)? The standard for an interpreter like python seems clear to me: The language it interprets should not change from point release to point release. So a ".py" should work from version to version and only require updates at a major version number. Everything else is fair game. Libraries that interface with the interpreter might need to be updated. Libraries not shipped with the interpreter might be rewritten.
 import functools @functools.partial(lambda f: f) def foo(n): pass
Why not just wait and do it at the 2020 cutoff like Python itself?
Thank you
Yep, see [Flask-SQLAlchemy](https://flask-sqlalchemy.palletsprojects.com/en/2.x/). You could also use SQL libraries not specific to Flask, like [Pewee](http://docs.peewee-orm.com/en/latest/) or [Aiosql](https://github.com/nackjicholson/aiosql).
https://mail.python.org/pipermail/python-dev/2017-September/149192.html https://mail.python.org/pipermail/python-dev/2017-September/149195.html Reading through those mails, it seems everyone was actually in agreement that that proposed change would be less readable, require more effort when modifying code, and would add inconsistency to the language... all for a negligible benefit. Guido could've/should've explained a little more than his one-liner "Nah, thanks though" but I thought the other responders gave enough reasoning for the rejection to be valid. There was a *lot* more division in opinion with assignment expressions.
It seems that whatever installer you are using is not for the compiler (version) you are using, and it’s trying to use a command line argument that does not exist. Or, it *may* somehow be giving a number to something that is expecting an identifier? For better help you will want to capture the exact command line and probably ask about this in the visual studio subreddit also. Unless someone here knows this package and has a solution.
1. /r/learnpython 2. Why are you installing things from the test PyPI?
Version 2.4.0 was just released a few days ago ( [https://github.com/TurboGears/tg2/releases/tag/tg2.4.0](https://github.com/TurboGears/tg2/releases/tag/tg2.4.0) ) It's actually still used by many companies and some big projects, like [sourceforce.net](https://sourceforce.net) and RedHat. I think that all projects that were born in the TG community suffered from a severe lack of documentation and frequent incompatible releases, which made hard for them to grow a big community. Since version 2.3 btw TurboGears never broke compatibility anymore (and I have fairly big projects that were updated from 2.2 -&gt; 2.3 -&gt; 2.4 with nearly no changes) and the documentation continuously improved. Sadly it's hard to call back users that got burnt by the major incompatibilies that happened between 1.0 and 2.0 and thus the framework had to re-grow a community from scratch when it restarted with newer 2.X releases. There was actually a talk about this topic and the story of TurboGears at the recent PyConWeb [https://pyconweb.com/talks/26-05-2019/turbogears-10-years-of-redesigning-a-web-framework](https://pyconweb.com/talks/26-05-2019/turbogears-10-years-of-redesigning-a-web-framework)
Maybe it’s time to update the PEP 394? [https://www.python.org/dev/peps/pep-0394/](https://www.python.org/dev/peps/pep-0394/) When Guido is yelling to not use python2 and an official PEP is telling us that python is python2, then it’s hard to not confuse people. Time to break unmaintained admin scripts guys.
&gt; We finished moving to Python3 last spring. And unless you're using some of the more sneaky/hidden functionality then there's nothing missing in Twisted for Python3 that is preventing you from upgrading! Agree with everything else you said but this isn't accurate. The issue tracker is still littered with bugs related to Python 3, and it's not all weird, esoteric shit. Honestly, when you look at the work the Numpy and Scipy maintainers had to do to add Python 3 support, it's pretty sad that Twisted is so far behind.
&gt; it seems everyone was actually in agreement that that proposed change would be less readable is a clearly false statement. The PEP itself explains the view of those who believe it to be a readability improvement. I certainly thing that `break if` at the top level of a `for` loop is easier to read because it brings the `break` out to the level of the thing that it is breaking from. There is no cognitive load associated with realizing the `break` doesn't take you out of the `if` but rather the first enclosing `for` or `while`. That said I also recognize that it is a very minor improvement in the grand scheme of things. And this objection: &gt; I also think this is not worth it. This will save few lines of code but introduces some ambiguity and makes syntax more complex. perfectly encapsulate my view on both `break if` AND assignment expressions. ------ I don't object to their rejecting both, or to accepting both, but I don't understand why they rejected one and accepted the other. That is what I don't understand.
In other words, once you pick up momentum, don't piss off the people you gained.
This belongs in /r/learnpython &amp;#x200B; You got a response there already.
okay thank you man
Thanks man!
RHEL 7 came out in 2014 and had its version freeze in 2013, when Python 3.3 was a thing. This is well before Python 3 support really took off. The point of RHEL is to provide 10 years of rock solid platform support, so critical system level packages (like GLIBC, gcc, and python) do NOT change versions or break ABI at all in the products lifespan. Some of the OS level tools, like yum, are written primarily in Python so making an upgrade would break that. RHEL 8 provides a new solution for this by providing a ‘hidden’ python version for dependent OS tools, while allowing the user to install the python version of their choice from the appstream modules. Currently 2.7 and 3.6 are available for use. Red Hat also rewrote a lot of tooling to not use python, or reduce the dependency on it to further help with this.
Thank you for the clarification.
They specifically said "if you use packages with precompiled routines."
There are lots and lots of massive changes that occurred from 2 to 3. New libraries, new builtins, syntax changes, more consistent naming, etc. But in my opinion, the biggest change was from eager evaluation to lazy evaluation. The easiest example is `range`. In python 2, `range` creates a list of integers before executing the next line. This potentially slows the runtime down immensely if the number is large enough. Python 3 changes that by only adding to the list when it reaches that point. This removes that upfront cost, and in general speeds up the program.
I understood that sentence as two separate sentences: &gt;Python is just a wrapper for c code, so you are writing c when you write python and &gt;you just have to know how to do it right and you can get native performance if you use packages with precompiled routines &amp;#x200B; In my mind *precompiled routines* was never connected to the first part of the sentence. My bad.
I'm looking forward to dropping 2 support from my public libraries for sure.
I went into a local company to do some contract work, and found out not only are they still using Visual Basic 6, they were talking about moving to VB.net someday. They wanted a static website to be built, but only if I could build it in a specific piece of discontinued Adobe software, and another website to be modernized that was built in Google Sites. I just pretended that meeting never happened.
Yeah, range() behaves more like xrange() now. Parens in print statements can be annoying after being used to not using them, but it helps with clarity imho.
runtime type checking doesn't sound to me like something that would take a lot of time. Care to explain why you think this?
I have my own VPS! I will use it for hosting...thx anyway
You have to think about things like that though. If you don't decide what kind of breakage is allowed and what kind is not for the various major/minor/bug, you won't bump correctly and someone will get annoyed because you broke their code. They'll get annoyed anyways (see Python 2 to 3) regardless, so you can't even win. It's an unrealistic expectation to be perfect with semver. Python 3.6 "broke" the ability to pickle struct objects. Turns out unpickling them created bad structs, so they removed the ability to pickle them. I hit that bug, but it's easy enough to fix by deleting the structs. &gt;So a ".py" should work from version to version and only require updates at a major version number. And almost all of my code is pure Python. I use all sorts of 3rd party packages built on C/Fortran though and in their testing of prerelease versions of Python, they didn't come across it. There is a reason I wait 6+ months after a new version of Python comes out to upgrade. For any sufficiently complex program, you will be hit with an upgrade bug almost every version of Python/package you do, despite your best attempts to stay up to date. My 160k lined open source project runs into a few issues almost every time.
As I said, all my dependencies have moved on. I also release about once a year. If you want to be the first person to send me some money for the work I've done for 8 years, we can talk.
Not for single objects, no---but think of data structures. Is it going to check that every element in a list is an int? What if the list has a million elements?
It is, you're adding an extra function call (essentially, sometimes more) for every argument, for every function call, ini your program. Even if your type-checking function is very, very, very fast, go and look at profiling output of a simple program and see how many function calls happen. Its lots. Now imagine a isinstance checks, MRO resolutions, or worse, trying to resolve protocol or generic validity on every one of those calls.
Yeah but they've had years. Python 3.5 has been out for 4 years. It'll EOL before Py4 comes out. That's enough time to upgrade, especially if the upgrade isn't back-breaking.
And god damn is it glorious!
2020-01-01*
This is really cool. A [few years ago](https://stackoverflow.com/questions/18601019/using-hdmi-port-as-network-protocol-interface) I was toying around with the idea for a raspberry pi version 1! My thought process was the HDMI port was the fastest interface (by a lot) and wanted to exploit it for pushing more data than the 10/100 NIC could handle.
That doesn't even get into supporting varied OSes &amp; distros, even old ones (we get stuff for: HPUX, AIX, Solaris, SunOS, etc). Shit, we still get some support requests for WS2008. We have to have a 'quarantine' lab for a lot of the OSes we support because corp doesn't want them on their network (understandably). Most of the time when I see people lambasting others using python2 they are in a small company or startup, or a company that is heavily web-focused. You can usually tell by how much they talk about unicode vs bytestring :) If you're at all doing low-level system stuff, the conversion can be quite painful as you've said.
RIP in pieces those of us using jython which hasn't caught up to 3.
PHP's type hinting system is pretty nice. It allows for the same static analysis, but also does type checking at run time. They added support for primitives at PHP 7.0. The language as a whole got a huge speed boost at the same time. The changes were unrelated, but runtime type checking and speed aren't mutually exclusive.
Can’t you just transfer you project to python 3.7
it isn't always stinking cold in ND. It is 84 degrees currently.
WTF is your point? You seem to take the view that: * They don't attempt to be compatible between versions * Your shit breaks all the time as a result * And you don't seem to mind because you think it inevitable * in part because much of your code isn't pure python, or uses external libraries. That's great for you, but its not true for the rest of us. I have code that does work from version to version, it is pure python, it doesn't use external libraries, I do expect it to work, and I would be bothered if it broke. If python wants to say that anything and everything can break between python 3.6.1 and 3.6.2 then I just cannot upgrade python, ever.
It sheds its skin or else it gets the hose agin
The `:=` operator is something we all needed. It's been present for so long in other programming languages.
Great GUI. I like your work.
How is Python 3 broken? That link is a huge story of success, and it looks like they were able to modernize their entire deploy system instead of relying on an increasingly obsolete toolchain.
No updates or support from python.org, this includes security fixes. Some OS vendors(RHEL, Ubuntu, SUSE, etc) will continue to support Python 2.7 in their OS for security fixes until their product goes EOL. A previous job I had refused to put any resources into migrating to Python 3 because they're on RHEL7 which will receive support until 2024 :\
&gt; This will save few lines of code but introduces some ambiguity and makes syntax more complex. Yes, I agree you could make this argument against assignment expressions too. I still think there was a lot more division in opinion than occurred with PEP548.
Python.org won't issue security fixes but OS vendors like RHEL/CentOS will continue to patch Python 2.7 themselves.
Are you enjoying your fancy new dict comprehensions?
It's hard to take this proposal seriously when it doesn't appear you've done any background research.
This feels like a non-issue. Plenty of things can't accept arbitrary expressions. Why is this any different?
Can you comment it? I didn't understand the reason for the logo = "R10...." Thing, what does that mean
Your comment comes at a very appropriate time. Literally just a few minutes ago found a bug on one of our systems using 2.6 (my local development station is on 2.7): {k: v for (k, v) in dict.items()} You have to use: dict((k, v) for (k, v) in dict.items()) So, yes I am enjoying them! Sorry can't get the code formatted, the 4-spaces doesn't seem to be working.
[removed]
Personally I use them sparingly, but they hugely improve the intellisense in PyCharm I do think that strict overuse can hurt the dynamic nature of Python though. We're seeing a similar thing with Typescript. Python and Javascript are amazing partly because of their dynamic nature. Trying to turn js into haskell or rust is something i don't really like
I think proponents of 548 accepted the judgement and moved on. That is why their wasn't as much vocal division. A ruling was made that the language didn't need this sugar, and people accepted that they wouldn't get sprinkles, and moved on. Assignment expressions were a betrayal of that agreement, which is why there was more vocal objection. Guido had told everyone we wouldn't be getting sprinkles, we had agreed there wouldn't be sprinkles, now he wants to change his mind and put oreo crumbles?! Suddenly everyone wanted to get in line with their favorite topping, but Guido was only accepting orea crumbles and not sprinkles or gummy worms or M&amp;Ms...
&gt;New libraries, new builtins, syntax changes, more consistent naming, etc. &gt;But in my opinion, the biggest change was from eager evaluation to lazy &gt;evaluation. Fascinatingly you completely left out the Unicode string change, which is usually cited as the major change. :-)
That was me at Bed Bath and Beyond HQ in 2005, when I encountered Access 97 and Impromptu 5 (Impromptu had been discontinued at version 8). They were also using VB6 for internal development. I stayed six months.
It turns out Calibre is even doing work now to ready it for Python 3, so I think Kovar finally saw the light.
&gt; I know lots of scientists who use python 2 because it's faster than &gt;python 3. If your main goal is speed, you chose the wrong language in the first place.
Cool! But I honestly believe Python 2 will be forked to death and at least one of its variants will be supported for more 20 years (programmers are a stubborn kind :P).
&gt; That link is a huge story of success Ah, yes, the huge success of investing a lot of time and money in rewriting your code from Python2 to Python3, just so you can have more of the same. Genius-level business strategy, if you ask me.
Yes, I'm the author. You also have the possibility to implement your own Python-(text)-Code into Pythonic.
I feel like you're significantly downplaying the difference in opinions that occurred during the PEP572 discussions, especially within the core developers.
It's because of users. In the Delphi langauge's move to Unicode they introduced "ANSI strings" (8bit non-Unicode strings) as a tool to allow users to compile their old code in the new version and gradually port over to Unicode. What happened? Many users continued to write all of their **new** code using ANSI Strings and kept right on going like nothing ever happened. Then when there was talk years later of rewriting the compiler and consequently dropping ANSI strings, these users screamed "Wait! We haven't had any time to convert!" It got so bad these people managed to get ANSI strings added to the new Delphi Android and iOS compilers, which had never had non-Unicode strings in the first place! :-( The same kind of thing happened to Python 2. When I had asked the then-maintainer of Pyjamas (??? - one of the Python to Javascript transpilers anyway) about porting to Python 3, he answered "Python 2 is going to be supported forever, so why bother?" We've got a user here who *continues* to insist that the PSF will still move the support deadline for Python 2; maybe they're the same person.
Yeah, fortunately the code I work on is single-target and we control the environment, but if you have to do a full QA on your stuff for every platform it’s supposed to run on, it's even more of a nightmare.
? How? I'm saying that people accepted the rejection of PEP 548, and then expected a similar rejection for 572. When that rejection didn't immediately come out, then became much more vocal in pushing for the status quo as they understood it.
So I’ve been studying Python for two weeks now following ‘Learn Python the hard way’ which recommends python 2.7 over 3. What does this mean for me?
&gt; I have code that does work from version to version, it is pure python, it doesn't use external libraries, I do expect it to work, and I would be bothered if it broke. Yeah, most of my code works as well. Some of it doesn't though. Also, you're not pickling structs then. Python 2.7 also broke support for `float("1.0D+2")`. They changed the behavior and made code that didn't error (in one case didn't work right and in the other case was correct) now crash. You should be mad if that's your position since it's not some third party library. I'm not because it's a minor change. They also don't claim to follow semver, so it's unreasonable for them to be expected to follow it. It has nothing to do with inevitability or not. It has to do with that's not what they're trying to do.
Better interoperability, smarter handling of unicode strings, stronger library support, and on top of that, they upgraded their entire build system to be more robust. All wins.
RemindMe! 1st Dec 2019 "Hand in your notice"
I'm betting you need to install an older Visual C++ compiler than you currently have.
I think it's almost entirely for educational purposes, although they must be doing something right as it looks very professional now Going by their [pricing](https://repl.it/site/pricing), I think their main audience is computing labs in schools and universities where the IT services can be ridiculously stringent about updating/adding new software packages. Being able to quickly setup what would usually be a complicated dev environment without needing any administrator privileges is a big deal. Additionally, having been a student in and taught in a couple of programming courses, setting up the student's dev environment is honestly a horrible, boring, and annoying part for everyone involved, taking almost a whole 2 hour session to get everyone set up. That's a waste of teaching time And also repl.it is much more featured than it used to be: I just tried it and you can even program UIs in Java Swing with a javascript VM that runs a basic JVM. Pretty incredible! Pygame is there too, and also it seems full web stacks are available
If you're following [Sem Ver](https://semver.org/) (which I'm not sure if Python claims to do) then you wouldn't go to 4 unless you were breaking something. I'd hope that the version that comes after 3.9 will just be 3.10 if it's backwards compatible. If they go to 4, they *will* be introducing breaking changes for all the people who use `python3` to run their code.
&gt;people accepted the rejection of PEP 548, and then expected a similar rejection for 572 Or... OR... maybe there was a much *larger* group of people that disagreed with the decisions around PEP572. Due to there being a much bigger split in opinion.
Right, you wouldn't give a major release without breaking changes. But I assume there's going to be risk assessment after the 2-3 debacle to mitigate just how broken it would be
It's not a nightmare because everyone else has already done it. https://medium.com/@boxed/moving-a-large-and-old-codebase-to-python3-33a5a13f8c99 https://blogs.dropbox.com/tech/2019/02/incrementally-migrating-over-one-million-lines-of-code-from-python-2-to-python-3/
I use it on a daily basis for quick prototyping... but have struggled to find real apps built on top of it. I'm really curious to know if that's the end game or whether it's possible at all!
I can't wait. Then we might actually have a stable python version...
The full source is available on [Github](https://github.com/MarkMichon1/BitGlitter). I typed up a pretty comprehensive intro to it as well, [you can check it out here.](http://markmichon.io/2019/05/30/bitglitter-is-released/) &amp;#x200B; Feel free to ask any questions!
You'd be surprised. OpenSUSE Linux had a discussion about version numbering a few years ago. They used to go X.0, X.1, X.2, X.3 and then increment by 1 and continue. There was no meaning to the numbers, but it seems casual users didn't know that. Apparently people assumed that a .0 release was a major release and decided to wait for a .1 release to "work out the bugs". Point zero releases were actually showing **half** the downloads compared to other releases! Not only that, tech sites seemed to think the same way, as reviews of non-point zero releases were lower compared to point zero releases. They finally decided to drop point zero releases entirely. (They made a lot of other, dumber, numbering ideas later on, like going from 13.4 to 42 and then to 15, but that's another story).
Guido has been deposed. We've had regime change, so everything is up for grabs.
&gt;What new features do we have that are worth a breaking change? I can't &gt;name one. Get rid of walrus operators after they end up adding walrus operators, fix the asyncio mess, the mypy mess, etc. Maybe replace the urllib stuff with requests, datetime with arrow or similar, etc.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
&gt; Better interoperability, smarter handling of unicode strings, stronger library support Don't forget the converging synergies and future growth opportunities of paradigm shifts like "worse is better", "slower is faster" and "bugs are just undocumented features"! &gt; All wins. Indeed. I can't wait to hear all the wonderful ways in which Python4 will break backwards compatibility and thus provide gainful employment for thousands of Python Upgrade Engineers around the world. We can milk this cash cow for decades! Are you pypgraded™ yet?
I will be messaging you on [**2019-12-01 17:23:27 UTC**](http://www.wolframalpha.com/input/?i=2019-12-01 17:23:27 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/bun5px/dear_python2_user/epi8ygm/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/bun5px/dear_python2_user/epi8ygm/]%0A%0ARemindMe! 1st Dec 2019 ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! epic05z) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Okay...
Yeah right, because experience can be fully transmitted through blog posts, and never mind that the dropbox post mentions the start of the project is early 2017 while the end is around September 2018, for a whole team of engineers. It's not exactly a **nightmare** and it can even be fun at times, and it obviously has been done before, but it does not make it easy or quick.
Where's /u/nieuweyork? They were insisting that the PSF will definitely extend the support deadline for Python 2 again or else it would be catastrophic for Python... "Actually stopping security patches for 2.7 runs the risk that someone starts funneling funds to a new organisation that will keep patching a 2.7 compatible version. This would be...not good for the Python Foundation." https://old.reddit.com/r/Python/comments/bq4v99/amber_brown_batteries_included_but_theyre_leaking/eo27h5b/?context=10
The examples you are giving sound like behaviors that were broken in some fashion, and a decisions was made to make the behavior more consistent. If structs in previous versions were unpickling incorrectly, then they shouldn't be allowed to be pickled... that seems reasonable. I don't know what `"1.0D+2"` is supposed to mean, but if in some cases it gives good values and in others bad values, then that is clearly a problem. It would be preferable to fix these the other way, get structs to properly pickle, or get `"1.0D+2"` to convert to the correct value in all cases, but I understand if they can't. I would be angry if my code encountered these, but not because the behavior is incompatible with the old behavior, but because the functionality is broken. That it did something different in 3.5 is no great comfort if 3.5 did the wrong thing! That just makes me worry about all my code running on 3.5!
You should switch to 3, but it won’t make a ton of difference at your point so you might be able to keep using the same tutorials with the exception of the print statement.
Yeah I'll believe it when the deadline hits. This has been "definitely going to happen" more than once in the past.
&gt; I don't know what "1.0D+2" is supposed to mean, but if in some cases it gives good values and in others bad values, then that is clearly a problem. It's a form of scientific notation. The D indicates double precision. It's a Fortran thing and is still used today. Like this whole dead batteries thing, they removed the functionality. I kind of take the opinion that my code only supports what I actively test. You may get lucky outside of those versions, but I wouldn't count on all of it working. I occasionally find minor Python bug releases that cause me quite the headache. It's an implementation detail that most people will just never hit.
Interesting!. Reminds me of someone who was drawing pixels on ms paint and then they renamed the .bmp file as .zip and it contained stuff (actually I barely remember it, but it was something like that)
If they had documented that `float` accepted this Fortran notation and then removed it, I would absolutely be pissed. If they documented that it was supported and failed to implement it correctly... well I would also be pissed about that as well. If they documented that they supported it, but never actually did, and then removed it... well them I'm triply pissed, but at that point I'm not even sure what to be angry about.
After watching the "Rename Files" video i'm sold. Just be honest and say that's your channel lol
Nah it genuinely isn’t, I have my own 3yo mine craft channel lmao. Seriously tho it ain’t mine
It's a lot of fiddling with stuff and failing and then repeating until it works.
Thanks! And yeah, that's one method of transporting data over imagery, by essentially changing the extension and slapping a JPG header in front of it. This library uses the color blocks as the carrier of data, rather than the bytes themselves. Doing it this way, you have resistance to format changes, size changes, compression, and corruption within certain tolerances.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
It's almost June 1 and Guido himself is still saying it's going to happen. Do you think it's going to change December 31, or....? &gt;This has been "definitely going to happen" more than once in the past. But the conditions of the past are not the current conditions. If a doctor once says he believes you're going to die and you survive, you're not rendered functionally immortal as a result. As I've told you before, every major library from Pandas to Django is running on Python 3 now and many, including major web and scientific computing stack libraries, have already ended support for Python 2. That was certainly not the case when the deadline was extended in the past. In short, there's no *need* to extend the deadline again. What conditions do you see continuing to exist that would render a last-minute reprieve necessary?
That’s what Guido said a while back, I hope the new guidance council doesn’t share this view and just release 3.10, 3.11, …
Coming next year: https://vfxplatform.com/
Instagram said it went smoothly.... https://thenewstack.io/instagram-makes-smooth-move-python-3/
I was shocked myself.... https://github.com/kovidgoyal/calibre/blob/master/README.python3
Any more information about all the data he gathered and where from?
I find Calibre useful, wonderful and misguided at the same time. I never wanted an "iTunes for ebooks" (who does?) but I must put up with it in order to convert my files...
Oh yeah, I completely forgot he left
Would you please explain that?
I‘d say there are few, if any, better technology stacks than OpenCV+SciPy.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
numbering in general is just a dumb human thing. I think we should just give everything flavors and colors
Everyone important has said that this date is final.
security is no longer a supported feature.
F
I still think that it was a huge mistake from Python not to just bite the bullet and create some kind of Python 2-3 interpreter like a decade ago when it became obvious there was just too much momentum against moving to 3. Basically something that'd let you mark it and all of its dependencies as 2.7, do some fairly thorough translation that gets 99.8% of the existing code and ideally warning about things it felt it couldn't translate. Some performance loss would be acceptable. A flag could be given to print warnings for anything that wasn't 3. It didn't have to be perfect, it just had to allow a company to start writing new stuff in 3 only having to modify a few things without having to touch their entire code base. They could then also start incrementally porting things to Python 3 without having to make sure they do everything and their external dependencies at once. It isn't ideal, but I really, really feel like despite Python's progress over the last decade, it would have been significantly more if all the effort was on Python 3 and all the new features of Python 3 were available to the majority of the Python users. I wonder how many companies switched from Python 2 to golang or similar for features or performance that would have been acceptable in Python 3?
Honestly, if you're that familiar with programming conceptually, I don't think you really need much in the way of a guide. I'd just pick a project, pick a framework and get going. Architecturally it's not significantly different than anything else. The first project I did when I jumped over to python from javascript/php was a data intensive website using django. Django is useful at first, since it includes basically everything you need to build a web based app including database bindings, session handling, authentication, etc. It can be a bit monolithic in the long run, but it's a good starting point. Everything i needed to know i learned along the way by googling. That includes a lot of the nice pythonic syntax that is different than other languages. You'll just pick that up as you see it in examples and realize how it can be incorporated. I guess the last thing worth adding is that the data analysis packages in python are perhaps the biggest strength of the language, and definitely worth learning from the beginning. Scipy (and numpy), Sk-learn, and pandas are all amazing. Picking a project that incorporates these is probably a good way to go. Hope that helps
Funny thing you can do : 1 - encode a file into a video 2 - upload this video to YouTube 3 - now anyone can download the video and get the file back and YouTube is basically a big file uploading platform
straw man argument is strong with this one.
That's indeed a potential use for it. The default config for the library was tested on several platforms (shown in the video as well), and it has an effective transfer rate of 81KB/s with 100% frame readability. This is only with a 1080p sized frame at 30 frames per second. If you increase the frame rate to 60 fps and the size to 2K or 4K, which the library supports, I'm sure you can find a stable config that transfers many times more. I just wanted to establish a stable starting people that people could use.
For me, it just ends (segfaults) after 3 block get placed on the same pile. So, I don't know what that means.
You can't do that easily, no.
you mean it's time to maintain the unmaintained.
switch to QGis.
oh wow, so helpful.
You're going to need to put more detail in your post. Right now it's kinda like asking "how do I program" on stackoverflow.
2to3.py gave companies a way to easily migrate their code to 3. The ones who didn't really have no excuse at this point.
Your workplace definitely needs to hire someone to rewrite those frameworks within the next 6 months.
I did install the [Microsoft Visual C++ Compiler for Python 2.7](https://www.microsoft.com/en-us/download/details.aspx?id=44266). I also made sure that the Microsoft .NET framework 3.5 was enables as Windows 10 needs it for this older compiler, but still not really working :/ any other ideas?
2to3.py is not even close to enough of a solution for significant code bases. The ones who didn't migrate have pretty valid business reasons for not having done it yet. Basically, what it comes down to, Python's value in companies moving to 3 was greater than most companies value of moving to 3, so Python should have done more work to make it happen.
How does this exactly work?
Well, significant usage of 2.7 continuing through to the present.
Holy hell, you're using 2.7 for image processing? Whoever "encouraged" you to stick with it should be locked away. Anything involving big data is far more efficient in 3, because of the switch to lazy evaluation of iterators. Also notably, numpy and everything based on it (pandas, scikit, etc.) have already discontinued support for 2.
It's not the Python version that matters as much as the version required by the package. You can also look at the package source and change that parameter specifically in the build script.
Interesting... I'll have to look that up. Do you know what version of Maya your colleague is using?
you probably have no idea.
Check out realpython they have some really great tutorials. [https://realpython.com/](https://realpython.com/). "Django" (definetly checkout this) and "flask" (micro-framework) are two of the popular frameworks in python. I would recommend Dash (a visualization framework from plotly) , but also note that dash is not free unless your are using it not-for-profit. For mongodb (non-realtional database) use "pymongo" as the driver. All the best.
I’ll ask and get back to you. I’ve just upgraded myself and would be keen to know.
Interesting :-) Thanks for the link
What is the warning for ?! That flash hit my eyes three times in row as i read the title 😹😹
Seeing as i'm working within ESRI software, being suggested to move over to that is of no use. Thanks.
rock on! thank you.
They had 10 years to do it. Most did. The rest didn't out of hubris.
How can we get one?
If I was a betting man, I would be willing to wage an entire years salary that there are people doing just that. Its a critical automation framework that I don't think we can afford to function without. Though Im sadly not disclosed on the status of that just yet.
Does ‘import arcpy’ work from the command line?
/r/learnpython then
Nice
Python does not follow SemVer; it allows breaking changes in "minor" versions, like 3.7 -&gt; 3.8. See the development cycle page: https://devguide.python.org/devcycle/
oh, right, so no learning here then. Got it...
I luckily got it. Everything seemed to be working properly. I guess my interpreter was very slightly off. Thanks though!
No problem. I’m glad you solved it!
Right, but I believe these are the versions required by it. Could you walk me through how to change the parameters in a package source in the build script? Sorry I really am kind of new to a lot of this.
Nice work. This reminds me of a similar project that used an 'animated' QR code to transmit data. [https://github.com/divan/txqr](https://github.com/divan/txqr)
/r/unexpectedsnowcrash
Nothing was revealed...
Okay
Have you tried the celery docs? [https://docs.celeryproject.org/en/latest/userguide/monitoring.html#commands](https://docs.celeryproject.org/en/latest/userguide/monitoring.html#commands)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
so you finally decided to release it on reddit! been following this project for months now. great work mark.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I'll take a blue cinnamon py
great feedback words I was hoping to see. "Pick a framework" can you expand a bit? ie where to find what works best with what? Moreover what to stay away from, pitfalls etc (eg ur monolithic comment)
Thank you! It was a fair amount of stuff to figure out, but it's finally ready to see the light of day!
My shop is still heavily dependent on 2.7. Every once in a while this comes up and a coworker ominously links the countdown to the end of 2. I've still seen no talk of moving to 3.5. Its gonna be a rough Christmas.
In general, that would identify their reddit username (but I have no idea if OP here is already public).
That's a very large question, but I'll try to answer it in a short way. All data is made of 0's and 1's. This works in QR codes by making white and black replace those values. The more colors you use, the more bits you can fit in a given "block". The files you want to send are read over a few bits at a time, and are rendered into the color that matches its bit value. The project readme does a good job explaining this in greater depth if you're interested: [https://github.com/MarkMichon1/BitGlitter](https://github.com/MarkMichon1/BitGlitter)
hopefully this helps get some recognition and this becomes a bigger project! lots of potential
Try pip3 install
Now to figure out this damn script lol.
&gt;"pip3 install arcade" still gives me a sytax error anywhere I try it
So, how much can I store in a YouTube video, max?
1. /r/learnpython 2. Try `py -m pip install arcade` in Command Prompt.
This is a command-line tool used outside python, from a dos or bash shell. You cannot run it from inside the python interpreter.
this is awesome! i wanna encode secret messages for people and freak them out lmao
Thanks ! It worked. There is just a warning at the end : WARNING: The script f2py.exe is installed in 'C:\\Program Files (x86)\\Python\\Scripts' which is not on PATH. Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location. &amp;#x200B; Could you help me with this please ?
/r/learnpython
You're more limited by Youtube itself than the library, which supports package sizes of up to 2^(64) bytes, and up to 2^(32) frames. Those are big numbers. With the default \`write()\` config, you can store just under 3.5GB in the maximum video length of 12 hours. If you start playing with 60 fps, and/or larger frame sizes like 2K or 4K (all of which the library supports), that number could possibly be many times more.
Photosensitivity. Some people have seizures triggered by that.
I just noticed the mobile version acts kindof wonky with that video. It runs fine on browsers though.
Just ignore it.
Very cool! thanks for sharing! where did you learn the authentication part from? also when I try to run it, I cant add user, it asks me for secrets file or folder. What should go in it?
Hi there. There's software out there to detect the risk of that from certain videos. This tested below the thresholds of there being any chance to induce anything. Read this comment chain for more information: [https://www.reddit.com/r/DataHoarder/comments/bu5qv6/this\_might\_be\_an\_unusual\_post\_for\_the\_sub\_but\_i/ep7qjgw?utm\_source=share&amp;utm\_medium=web2x](https://www.reddit.com/r/DataHoarder/comments/bu5qv6/this_might_be_an_unusual_post_for_the_sub_but_i/ep7qjgw?utm_source=share&amp;utm_medium=web2x)
looks awesome, but I dont understand Why doing this, anyone care to explain?
Yes of course, but SQLAlchemy is way more complicated and less opinionated than the Django ORM. The Django ORM is very opinionated, but that makes it extremely powerful with a very intuitive API. &amp;#x200B; SQLAlchemy supports some complex polymorphism out of the box, whereas Django specifically does not be design. I would rather use Django ORM over SQLAlchemy any day, but each has a very specific use case and knowing when to use one of the other depends on your application requirements.
It was a fun proof of concept, and I used it to become a lot competent with Python, as well as programming in general. Making this work required some pretty serious precision both with rendering as well as reading... figuring it all out was a golden lesson in control flow.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I'm not so sure about this - **ALL GLORY TO THE HYPNOTOAD!**
they're going to finally stop backporting all the good stuff from 3 to 2.
You can do that, however installing rpms from another distro for a whole subsystem is a great way to (somewhat reversibly) screw up your installation and make the package manager end up in a tangled mess that just shrugs and gives up every time you try to use it... And yep. They provide support for crazy long times...
However of course not all Python 2 users are on a rpm distro, or even on Linux...
Are the static colors at the top some kind of header? The black squares beneath them? How many colors are you using?
Depends on the algorithm honestly. If it's a prototype, writing in python is ok. Then slowly go through profiling it and converting to C++ or vectoring with numpy is ok. Until you slowly end up with a single function call in python.
Those people are, presumably, smart enough to download the srpm and figure out the patch for themselves. The point being, the patch will exist, grab and install it however it suits you.
https://blog.packagecloud.io/eng/2015/10/13/inspect-extract-contents-rpm-packages/ Extract the files and mv them in to place.
Suppose we have an array of type T, wouldn't running something like if (type(element_to_add) != T): throw TypeError for each insertion be enough? I can't imagine that having a huge performance impact.
Dumb question: could you implement this as some kind of unnoticeable watermark on a regular video? Maybe one that you’d need a key to effectively detect?
What valid reason spans delay over a decade?
Has Red Hat confirmed support for Python 2.7 in userland, instead of just support for the OS's internal security?
The only issue would be YouTube's re-encoding of the video
Well it has been tested and it actually works
The future you see
Oh cool
Yep, that's one of the components of scanning blocks. Codecs and compression "fuzz" the colors, so one part of the process is snapping the color to the "closest" color in the palette.
But how does a function that you call know that your list is full of those types without checking? Sure, you can make your function only accept a `TList` object, which has elements of type `T` checked on appending. But you can get around that in Python, since we have no *real* safety around properties for the classes we write. If you have a wrapper class around a list, you could just `obj.inner_list.append(not_type_T_val)` for example. And any one way around this (in Python) has a workaround. So you can't guarantee that `TList` has type `T` elements. The only way you can *guarantee* it is to check. Every element. Every time you use the list. And if there's no guarantees, there's no point in having it check during runtime. Edit: and it would be `raise` in Python :)
&gt; I just wanted to establish a stable starting people that people could use. please explain
i still need your passport
replicate in minecraft?
hi, do you found a solution?
as someone that works in infosec, please stop hosting python2 installers so the message really drives in.
That was a typo, it should've been "I just wanted to establish a stable starting position that people could use." So in other words, it will run fine out of the box from the current configs, but if you mess around with it, you can likely get the transfer rate a lot higher.
that's very cool
If you watch it on gfycat long enough it decodes into a street view of Oslo, Sweden.
What you are describing is steganography and it can and is used for watermarking.
Any error correction in this?
I mean, still use it to encode a file, but it would be invisibly woven into the video data. Does that make sense?
Yes but the issue starts being with larger files they become easier to detect using methods like statistical analysis. Steganography is just you trying to hide data within another file.
This is how you leave the message to your hitmen/security assets on YT while the message hides in plain sight. Great application.
Oh, interesting. I guess if you wanted to hide something small, then it would be possible. Thanks for clarifying.
This is basically a 3D (2 dimensions + time) barcode!
Me too, free upgrade from 14.04 to 18.04!
Does it compress the datas or is it more a way to transform them?
This is great. I have always wondered about the possibility of doing something like this. Usenet started out as a messaging forum and people figured out how to use it to distribute binary files. I wonder if this will be the beginning of a similar thing with YouTube and video sharing sites. Nice work!
Thanks! It's a prototype/proof of concept more than anything, but I'm interested to see what directions people will possibly take this.
All data is compressed by default. This can be toggled in one the arguments of write().
If I squint hard enough, I can make out a nipple!!
Yes, that is steganography
Sure, I have a few questions... * What is the problem this is solving? * Does it incorporate error correction? * How well does it work for video that has been re-encoded, resized, etc? * How well does it work for blurry, angled, shaky video taken by a person pointing a camera at a screen playing the video?
I would guess this would go against YT's terms of use.
That is actually a concern for me. This is a form of [Steganography](https://en.wikipedia.org/wiki/Steganography) and could actually be abused by malicious actors (think: child porn rings).
I would thank you for your compliment, but then I would have to... nevermind.
Can I have that program?
It was a painful transition but man was it successful from my eyes. Good work nerds!!
Even the creator has 3.x words in his name....
That is awesome, I'll check it out and give it a try. I was actually looking at building something like this myself, but I never got around to doing it (like many other cool ideas lol). So basically if I'm lazy and I wait long enough, someone else will do it.
Sure, why not: [https://github.com/MarkMichon1/BitGlitter](https://github.com/MarkMichon1/BitGlitter)
Thank you
Guido is one of the five members of the steering council.
My account name is my name, so yeah, no
**bites on wallet
I'm gonna try it out on my lunch break. See what I can do with it.
That’s still better. Take what you can get. I upgraded a 2.4 project to 2.7 last year. I just removed hacks and fixed some bugs I created by hacking a 3rd party library to make it work in 2.4. I just decided to start using 3.7, even if other people continue to use 2.7. I’ll support it if I have to, but I’m going to make sure 3.7 works.
It took 10 years for wxpython to officially support 3.x. I moved onto PySide, but not other people.
4D. Horizontal, vertical, color, time.
I’m still waiting for the python 2.8 fork....there are two versions of Perl 6.
You sure about mypy? Python 2.7 is supported and you can always run mypy with 3.5. There is no reason other than very minor issues that you couldn’t run mypy.
Well, the good news is I misremembered, and that particular professor teaching image processing insisted on 3!
Will youtube compression algo mess this up ? How do you counter than problem?
Why are there a few at the top left left that don’t change? And what happens if there is loss in quality of the video/gif? Do those files become corrupted?
This is a very good and disturbing point... Or worse, they upload two videos with the encoded message being the difference between them with scaling such that the differences aren’t visible to the naked eye. That would be incredibly difficult to catch.
That's cool as fuck. Great job.
It is dramatically increasing the portability of data. I increased efficiency everywhere I could, but that's not the main purpose of this. There are 1000 better alternatives if efficiency is your most important metric. Most of all, it was mainly a fun proof of concept starting out. I knew nothing like it that existed when I started learning programming, so it was a fun unique way to learn. The frames itself don't have ECC, but there are two defenses against corruption: First of all, the default config for `write()` came to be after extensive testing. I'd upload a config to a variety of social media sites, download the compressed/modified version, and then run it through read. I iteratively got from 80% readability to 98% to 99% and finally 100% from a 8-9k frame test. So you can say the current config used is "battle tested" against changes to it. That's the first line of defense against broken streams. The next line of defense is a few layers of headers (several at the beginning of the stream, and another every frame). [https://i.imgur.com/gGDHSwR.jpg](https://i.imgur.com/gGDHSwR.jpg) There is a SHA-256 for the stream itself (taken of the binary package right before rendering and used as an internal ID when read), and a SHA-256 of each frame. The reader will read the header, validate it, and then read the payload. It will compare the hash in the header with the one it calculates; only if the two match will the frame be validated. There are also checksums in the headers themselves, so its next to impossible for the reader to accept corrupted data. Frame headers were a necessity to implement. Aside from the frame's checksum, they contain other important information that helps orient the reader, such as frame number. Headers also give you a few large benefits- frames can be read non-sequentially, or you can even interlace 2+ streams together alternating frames, and it still won't throw off the reader. Or it can quickly "fast forward" past a frame if it has already been read, without needing to read the entire frame to determine that. Because the carrier of data is in the color values of the frame itself, and not the byte data, it is resistant to corruption, size changes, format changes, etc. All that the reader needs to lock on for videos is the calibrator on the first frame ([pic related](https://camo.githubusercontent.com/581550c31b886af91fab0b4cd8377ee34f5a45df/68747470733a2f2f692e696d6775722e636f6d2f3455794b6a654f2e706e67)): the reader initially creeps along pixel by pixel, and decodes a little endian unsigned integer out of each axis, which is the block height and block width of the frame. It then does the math to determine the scan area of the blocks, and goes from there. Building on that previous point slightly, this is only for digital-digital transmission currently. Once the reader knows the scan geometry of the frame through reading the calibrator, those values persist throughout the read, so calibration stuff after the first frame is no longer necessary. That's one example of something you can do with digital transmission only barcodes that you can't do in the physical world (where you need constant reference points as the object or the scanner itself is moving around). I'm not saying this couldn't be read physically, but it would have to be a simplified version of it which would require constant anchor points, as well as reference pixels of the various colors embedded in it to account for changes in ambient light. I hope I answered your questions.
The only painful change about Python 3 is how unicode is handled. The tutorials still suck and nobody tells you even how to figure out what encoding you have. The reality is that user files are in a variety of encodings and they don’t even know what that is. No other change about python 3 is even worth discussing when planning/worrying about the transition to python 3.
That's why the pixels are so big.
That's already been accounted for! The read() part of the library doesn't require the lossless file. I go much more into it [here](http://markmichon.io/2019/05/30/bitglitter-is-released/) and [here](https://github.com/MarkMichon1/BitGlitter) if you're interested. Also, the default config has been tested quite a bit, and gets 100% frame readability on platforms such as Youtube.
Thanks!
/r/learnpython read the sidebar format your code for reddit
That is some unchanging bits in the frame header. A SHA-256 is taken of the binary package right before rendering, and that serves as an ID for it when its read (and used to verify its integrity when fully re-assembled). So that binary value is the only static thing in all of the generated frames. It's then used along with the frame number (which is also in the header amongst more stuff) to basically orient the reader with what to do with the frame after it has been validated. [Here are the different headers being used if you're interested.](https://i.imgur.com/gGDHSwR.jpg) The frames themselves may be corrupted, but it won't corrupt the stream being read. [This recent comment](https://www.reddit.com/r/Python/comments/buvrkh/i_created_a_python_library_that_encodes_files/epjzl7h/?context=3) elaborates on that. Right now, if a frame is unreadable after whatever distortion, it simply can't be read. However, if someone re-uploads the video elsewhere and it is higher quality, the reader will "fast forward" to those frames it was missing, read them, and then assemble the stream into the encoded file(s).
Is this a new book format? Videobooks?
Videoanything, really. lol
TIL I made an interdimensional barcode
Amazing. Thanks for the elaborate answers!!
Steganography at its finest!
How would they disprove it if it’s classified as abstract art? ;)
Not exactly what you asked, but https://github.com/opsdroid/opsdroid would do alot of the heavy lifting for you. It has a hello 'skill' loaded ootb, https://github.com/opsdroid/skill-hello Also has a breakdown of building the skill https://opsdroid.readthedocs.io/en/latest/extending/skills/ And it supports rasa-nlu among a bunch of others https://opsdroid.readthedocs.io/en/latest/matchers/rasanlu/ I decided to rewrite our errbot plugins this morning, and by end of day had rewrote it all to opsdroid skills.
 4 - profit?
I'm just curious to know what some applications might be.
Cool! Thanks for explaining. I was wondering the same thing all the way down this thread.
Show me de code to decode the file :D
Thanks for the links. I read and learned. So you could make passports with this technology. In the future, instead of showing TSA your ID, you stick your phone under the scanner. But I guess that isn't safe because someone could record it secretly and steal your identity.
And how long would it take to decode 12 hour video on a modern home computer?
Scarily enough, the one I'm thinking of deals with court documents.
Pycharm community edition, but if you're a student you qualify for a free copy of PyCharm Professional.
Does the "decode" function require the video to be displayed (ie: a monitor that supports 60fps 4K res)? Or does it just read the raw video files?
I think you can add the bytes/str split (which is closely related to the unicode handling). Any code base in python2 that was using str type to represent bytes is in a world of pain converting to python3.
As it currently stands, all of the heavy lifting in decoding is done with pure python on a single process. On my machine I get about 2.5 frames processed per second. 12 hours of 30 fps video is 1.296 million frames, so decoding at that rate would be 144 hours or 6 days. I'm well aware of how long that is, and in fact adding `multiprocessing` support to the library is one of the top few priorities we're focusing on right now. I've been an army of one working on this up until this point, but I've been gaining some new devs interested in contributing over the past few days. So that will speed it up on most people's machines by a factor of 4 or more. The next huge advancement would be by transitioning the math-heavy parts of the decoding process to C-extensions. During earlier development I used a pure Python encryption library. It took 30 seconds to encrypt a 1 MB file. I switched to another library that uses C.... it took 1 second to encrypt a 100 MB file. Do the math lol. That's not something I know how to do (yet), but when it becomes implemented, it will make a light year of difference.
It reads the raw video file and slices it one frame at a time. So rest assured, this will run on the most potato of monitors.
The only downside is YouTube uploading has a lot more steps than other free sites allowing uploads. But the cool part about this is how you can openly have data available and it’s useless to everyone except someone with the same encoder. It’s kind of like a modern version of shortwave number stations for spies, except short wave can be accessed anywhere in the world without internet accessibility.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I've always wondered about the possibility of a mesh internet consisting of TVs and cameras. A TV is running a video like this, and some distance away the camera records the video and converts it back into bits. Using plain old visible light as your transport medium.
&gt; The next huge advancement would be by transitioning the math-heavy parts of the decoding process to C-extensions. Just curious, have you tried out Nim (https://nim-lang.org)? It compiles to C/C++ (JS too), but reads like Python, and is static typed. It's pretty awesome :).
That’d be fine. It’s when you’re inconsistent that the pain really sets in. Python 2 did weird ass shit by flipping the encoding multiple times, so you had to encode when you got a decode error and vice verse. Then when you print it, it wouldn’t print correctly even when you had done things right. Python 3 fixed that.
Aah, this is how you can convert Pi into a video then!
You should probably start with google, then with /r/learnpython. While you're there, read the sidebar.
And find a source of entropy, too. ;)
[https://www.reddit.com/r/Python/comments/buvrkh/i\_created\_a\_python\_library\_that\_encodes\_files/epjzl7h?utm\_source=share&amp;utm\_medium=web2x](https://www.reddit.com/r/Python/comments/buvrkh/i_created_a_python_library_that_encodes_files/epjzl7h?utm_source=share&amp;utm_medium=web2x)
The color is a function of the pixel position in space and time, so it is a 3d function, just as a barcode is 1d, the only parameter is the horizontal position, but the values it takes on are just binary.
Oh that's what I needed to know, thanks!
http://www.mobiliodevelopment.com/1d-2d-3d-barcodes/#gref According to that, this video would be 4d
Get 1/2 deck of red-backs, and 1/2 blue-backs, riffle them together and then count how big your clusters of red and blue are. See if short groups follow long groups, or you're more likely to have big groups at the bottom or top. Then you can build a probability model of what a single shuffle is like.
Instead of just using print(), can't you create a text view in your gui and populate it with your print statement?
Wow this is pretty cool! Looks like it’ll cause chaos on video compression. Lol.
This could work. Do you know of any well written guides for this? Thanks
Technically, it would be a temporal barcode which still sounds pretty rad.
Professional version probably just adds more options to confuse OP and likely will not leverage pro features in my opinion.
It actually has a few things like better jupyter notebooks integration among other things. Also it's a fallacy that more available features are confusing. They're out of the way and don't need to be used.
call me when /usr/bin/python -v doesn't return 2.7.x
I love nim but I feel that saying its like python is a bit of a stretch I wish it was true though but nim lacks a lot of things that make python what it is. A lot of things from import this aren't applicable to nim unfortunately.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Your post reminded me of this: [https://en.wikipedia.org/wiki/Free-space\_optical\_communication](https://en.wikipedia.org/wiki/Free-space_optical_communication) It's really cool to think about. In something like that, you could even use different wavelengths of infrared rather than visible light, and that would penetrate dust and stuff more easily.
Dude, what you've done is awesome, and I understand what it is, but what I don't get, is why every time I try to open it in my phone, it crashes my app.
Hmm, thats pretty strange. Regardless of whats encoded in it, its just a plain mp4 file... maybe someone else can chime in here.
&gt;What if the list has a million elements? You should probably use a numpy array. Also, type checking doesn't actively check your types, so it's a moot point.
whats your background? 'the Doom source code'
? The person I'm responding to is discussing type checking during runtime in pure Python. Numpy is a different discussion since the types are enforced in C.
Works on my machine
Guido is on the council an was the top vote getter by 30% or so.
Try r/learnpython. The short answer is that guis are usually driven by an event loop, which is entirely different than what you're asking about.
No problem 😁
So... Disorder == Information. That damn video is right!
Your code looks like Go code. Definitely not like python.
Trading bot
How so?
It would be neat if you could add audio of someone reading passages from old books or podcast type info. Or discussing current events. YouTube would leave it alone.
Can we make this phone-camera-readable, like QR code? &amp;#x200B; 'Pointing my phone to the static noise on TV' is the experience I'm going for.
Math.hypot and, new in 3.8, math.dist are missing in this... For distance calculations you can also skip the square root if you only need to order by distance, and not the exact values
Someone did this with base 64 encoding and google drive directories to effectively get infinite storage. Just really slow...
Well, that article is simply wrong. Black and white are colors too, adding color doesn't make it another dimension---it just gives you more resolution; instead of binary black and white you now have multiple values. For e.g. a black and white barcode is a one dimensional barcode---the value (black or white) depends on position. If it were color, it'd still be a 1d function, the color would depend on position just like before. But now the range of the function is a larger set.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Sure, but the point is not solving the distance problem, rather solving exponentiation as fast as possible. The distance problem I was solving is what piqued my interest in understanding the performance of using `**` versus `x * x … * x` versus `math.pow()`.
This is another one of those posts where I just shake my head at the ingenuity. This is awesome.
it would take years to upload a movie, the file it self would be significantly bigger than the original file. The video is very suspicious ,they can easily detect this and remove in a few minutes. &amp;#x200B; Basicly this is just fun project for learning.
eventually you need to conclude but all the raw data turned into insights - you see how players played, how teams played, how they played away from home, red cards and assisted goals, fouls - it's amazing.
I saw in the GitHub that it relies on ffmpeg.exe. Would it be possible to use the program on Linux (I'm assuming ffmpeg's binaries for other operating systems are a drop-in replacement), and if not, are there any plans to support Linux in the future?
Hi there. And yes, they would. There's already been a few Linux users I've spoken with tonight, and even though the library does what it is supposed to do more or less, they are encountering some various issues: [https://github.com/MarkMichon1/BitGlitter/issues/8](https://github.com/MarkMichon1/BitGlitter/issues/8) Both people aren't having the same set of issues however, so perhaps everything runs just fine on Linux and these are issues with their systems. There could be other Linux users I don't know of, who simply haven't spoken up because they haven't encountered any problems. If anything pops up for you, please let me know with an issue ticket so I can take a look at it and start a conversation about it. Thanks.
Try this tutorial. It helped me understand how to achieve a shuffled deck. [python - deck of cards](https://youtu.be/t8YkjDH86Y4)
Instead of thinking in terms of color, think in terms of intensity. You can map black, black gray, gray, white gray, white, and every color in between onto the integers \[0,255\]. This is 1 dimension, representing the intensity of brightness. You can extend this to intensity of red, intensity of blue, or intensity of green. This would involve an additional dimension since you have intensity in one dimensional, and "intensity type" for the second dimension (0, 1, or 2).
I'm making a different point. The OP is using a finite set of colors, which can be enumerated just as grayscale intensity values can. It's an "indexed" image if you like, similar to GIF, where a gif only stores, say 255 values per pixel, but is not grayscale, since the values 0-255 map to colors.
Perhaps because of the camelCase? I'm not a fan of PEP8 either 😉
Ooooh yeah that does make sense. I stand corrected.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
That was an early on habit that kindof stuck lol. Aside from that though, I think everything else aligns with it mostly.
Convert the string using upper(). Always convert to a common case and check that.
On which, the if or the input? If on the input, how do I make it so I can still put numbers?
How does size comparison look like? Would be interesting to see that in the Readme. For example if I encode 1024MB file, what will be the size of 1080p30 video?
You have to use "OR" instead of "AND" in your if statement.
You really should compare this with mummy as well, given that your original problem should lend itself very well to be used with a “proper heavy duty number crunching” package.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Did this and now it repeats it all the time, even when I input n N or 2 to cancel
Don’t use `print`, use the `logging` module instead. You can tell it to write to a file very easily, and you can also add a custom handler that adds log messages to a GUI widget if you like. `logging` supports levels as well, so you can only turn on debug logging when you need it and not waste cycles the rest of the time.
Well numbers are strings until you convert them to numbers. "2" is not the same as 2. So something like this. ``` ans = input('1Y/2N').upper().strip() if ans == 'Y' or ans == '1': pass else: pass ``` Also check for the positive conditions not negatives.
Ok, do you know of any guides that explain this so I can get a better grasp? I have no idea what .strip() does.
Also, tried it and it works perfectly, thanks
Official guides are best https://docs.python.org/3.7/library/string.html
Thank you very much.
I am not sure myself but I really don't like Django. So Flask all the way.
I have 'unlimited storage' for images and 4k videos on my pixel 3 now I have unlimited file upload :)
Hey I did something similar but not that advanced at uni in fortran as a small project. Yours is looking much better and advanced! Well done!
Not the person that asked, but responses like these keep me reading. Well said.
Interesting. What inspired you to create a Shakespeare bot?
Maybe, I need to actually see the code to double check what I said is true---i was basing what I said off a comment OP made which may have just been a simplification.
Learning how to use vscode editor better with Python extension
Have you been reading this https://www.mongodb.com/blog/post/getting-started-with-python-and-mongodb
Python in Processing source code is on [my github in the dots dir](https://github.com/aaronpenne/generative_art)
&gt;accounted I think this could be used for free private video storage if the decompression is good enough, I shall try this out on my raspberry pi.
The ability to write secret messages to someone should not be worrying to you. Most of your data in your messaging apps is similarly encrypted (turned into "secret messages" that others can't read even though they can see the data), and that's not a bad thing.
If you're already using OpenCV, why use Pillow? It's slower for image IO than OpenCV is. Further OpenCV allows you to encode images without actually saving an intermediate file.
If you go to the repo, 98% of it is in the read folder. Let me know if you have any questions.
Thank you for bringing this up, I was unaware of the other functionality OpenCV has. This was added as a priority item for me to look further into. Currently, all image rendering in \`write()\` is done with Pillow. As for \`read()\`, OpenCV is only used for extracting files from the source video. All frame scanning is done with Pillow.
That's what I said.
No, read my other replies, the heavy lifting is done by fortran. Python glues everything together and handles the higher level stuff.
I might check it out a bit and see if there's anything obvious I see as possible improvements. I'll use the normal GH flow if there is. Cool project!
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Yes, but I think this is a case he doesn’t feel strongly about but that he still considered his decision / matter of taste when he was BDFL. And such cases will now be voted on, and if the others say “not doing semver is confusing and people will be scared by upgrading to 4.0” there won’t be strong arguments against that.
Here's also a [blog post](https://blog.jupyter.org/integrating-output-in-documentation-with-jupyter-sphinx-ecf569ddab85) with some context.
I think the bacterium example is providing an involuntary metaphor for what classes are best suited for: behavior. If you need a a very simple container, then a dictionary is better for you (probably). If you have a one call-one reaction behavior, then functions are the way to go. But as soon as your object has to "think about what to do", then you should start looking into classes. Like all metaphors, it has its limitations, but I think it's close enough to give the idea.
What is the book name author and cost
YouTube compression might play against you here.
you could use pyenv ( [https://github.com/pyenv/pyenv](https://github.com/pyenv/pyenv) ), which will install python in your home directory (assuming all the requirements to build are prsent on the machine)
This is awesome! It seems so obvious now that I can't believe it didn't exist already. Of course there is nbsphinx, but getting everything in an .rst file has its appeal. Is there any reason that this wouldn't work with autodoc like `matplotlib.sphinxext`'s `plot` directive? How about printing to stderr for logging, etc.; does that appear too? I note that there's no `stderr` CSS class as added by nbconvert, though you are using the `IPythonTracebackLexer` by the looks of things.
I swear I have been working on this idea like 6 months ago. But I kinda stopped cause I didn't see a good use of my time. I was only converting files to images tho
I am now blind in both eyes, but beside that loved the project.
https://pypi.org/project/sheet-disk/ Are you referring to this library?
Is this completely lossless? Would be a Shame to put files in a video and lose them due to video compression/other things video hosting sites do!
How come every time you test a condition you do "== False" or "== True"?
I haven't used Pypy in production and it's been a little while since I've used it. But I know for the longest time one of the biggest issues was C extensions. A lot of C extensions rely on CPython's ways of doing things, and Pypy often has to do a lot of work to compensate for it, making (sometimes a substantial portion of) the speed boosts with Pypy diminish/disappear when heavily using C extensions. But if they've been able to get around that, kudos to the Pypy team and I personally wouldn't know of any problems with using it.
By using their judgement.
&gt;saying its like python is a bit of a stretch Yes, I agree. I just said that it "reads like python". Nim certainly needs more community power to build more libraries. The reason I suggested Nim (apart from the fact that I've been using it for quite some time to replace Python and I've been liking it) is that: - the OP mentioned the need for speed, and - [Status.im is one of Nim's partners][1]. Status.im would need a strong support for doing cryptography, etc as they deal with Ethereum, and they are using Nim. I kind of loosely linked the dots as BitGlitter relies on crytography libraries too. &gt;A lot of things from import this aren't applicable to nim unfortunately. I didn't understand that. [1]: https://nim-lang.org/blog/2018/08/07/nim-partners-with-status.html
I would suggest the **tensorflow** tutorial of high level [keras APIs](https://www.tensorflow.org/tutorials/keras/basic_classification)
Maybe I'm missing the point. Are you using 3 bytes to store 1 byte now (1 byte === 8bit RGB value?). Also is file portability a problem that needs a new solution? There are plenty of free services that wouldn't require an encode -&gt; upload -&gt; download -&gt; decode process.
and lol at the code of conduct. But the project is cool.
PEP8 violation. Python programming is quite strict in naming things. Also, your code doesn't read very nicely. there's a lot of improper formatting and useless space that makes it really painful to read. That said, the project is cool.
That's one of the most well documented Github repos I've seen. Great work! Thanks!
How does this work?
1. /r/learnpython 2. You don't need a search here, you want a _regression_. Look into [`Polynomial.fit`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.polynomial.Polynomial.fit.html#numpy.polynomial.polynomial.Polynomial.fit) from NumPy.
Lmao what?
`for v in jsonData` loops over the keys of the dictionary named jsonData. The keys are strings (json doesn't support anything else as key). Try `for v in jsonData.values()` instead. Also, try printing your jsonData to see what format it is actually in.
Not every project really needs C extensions though.
Oh definitely not. But that's the main problem I've heard with using Pypy. That's why numpypy was (not sure if it still is) a thing. Wrapping Numpy was so unsuccessful that instead they decided to rewrite the whole thing because it was faster.
First you can start python ,y i suggest python means there are many opening .
Technically, "temporal" barcode doesn't cover the color aspect yet.
A barcode only is horizontal, but a QR-code is also vertical, aren't you missing that part then?
You could encode parity bits to circumvent it.
Wouldn't the encoding potentially fuck it up?
I keep trying to use PyPy but it always ends up slower than just CPython for my use cases :/
I imagine that you could put a few "start frames" that would tell a specialized camera app to start "streaming a file" until "end frame" gets hit.
I was wondering this too!
&gt; It seems so obvious now that I can't believe it didn't exist already. Thanks :) I think jupyter-sphinx should already work with autodoc, but if it doesn't, we should [definitely fix that](https://github.com/jupyter-widgets/jupyter-sphinx/issues/47). Good point about `stderr`, we [should handle it](https://github.com/jupyter-widgets/jupyter-sphinx/issues/48). The exceptions are appearing differently in the jupyter notebook format, that's what you saw. Thanks for the suggestions.
I've used PyPy2.7 in production, and it was an absolute delight. Much much faster than CPython, and had no stability issues whatsoever.
&gt; for v in jsonData.values() hey thanks for the tip. I have this"print (jsonData["balance"])" and this works
Can you please tell more about your use cases?
A lot of either: 1) multiprocess situations, where pickle keeps slowing everything down, or 2) dynamically importing a lot of modules as one-offs which don't have a hot path. Case 1 would be really useful but I see pickle taking up almost 50% of the runtime somehow in vmprof. I've seen little bits and bobs around how this is on ongoing issue. Case 2 would just be bad in any JIT so I don't really blame Pypy here.
My whole experience with pickle tells me it's better not to use pickle. It's slow, unstable and has weird caveats.
If solution is polinomial than use `np.polyfit`. Otherwise, try genetic programming with `gplearn`.
[ProcessPoolExecutor](https://docs.python.org/3/library/concurrent.futures.html) uses it to send data to each pooled process, so no getting around it there
/r/learnpython But also you should make your sql query get the data you want, rather than iterating over it. Like you should just ask the database for the Count of items with Consumable=yes, and not do that yourself Also if you're just using 3 columns, just ask for those 3 columns, not the full thing.
Well I started just playing with different inputs for textgenrnn just for laughs, but found the outputs to be occasionally funny but mostly just gibberish. I think it even says in the readme on GitHub, something along the lines of “most AI generated text hits are highly curated, we’re not quite to the point where we can consistently create entirely human-like sentences. But with the sonnets, I was impressed by the output. When you look at them closely, you’ll see they’re just an incoherent as the Donald Trump Tweets bot or any of the other variations in this idea. But at least to my (admittedly plebeian) eyes, they can pass for Shakespeare because they language he used is so foreign to our mind. When the Shakespeare bot reverses a couple words or makes up a new word, I might just assume that’s how Ye Olde English works. On closer inspection I’m sure anyone could differentiate between the real sonnets and the generated ones, but I think it’s a lot harder to do that than for most other input/output combinations. Even without human curation or digest these seemed really amusing!
Do you realize the much more simpler solution is just y=x+1? For this case you can use linear regression. Have a look at sklearn or something similar. [https://realpython.com/linear-regression-in-python/](https://realpython.com/linear-regression-in-python/) But be aware, you cant always fit data to a function perfectly. It depends on how many data points you provide and what type of function you want returned. for proportional relation eg. you only need 1 point, for linear relation you need two points. similarly to get the parameters of a function f(x) = a\_n\*x\^n + a{n-1}\*x\^{n-1} ... a\_0+x\^0 you need exactly n datapoints to fit the function perfectly. Provide fewer points and you can fit arbitrarily many funcitons onto your dataset (as you can fit inifinitely many linear functions though the same 1 point)
PyPy 3.6 is still beta so I can't vouch for that, but I've run PyPy 2.7 in production for quite a while. It works fine, but you have to pick and choose your C extensions to get the best performance. For example, last time I benchmarked things, the built-in JSON library was the fastest option for PyPy, but was slower than uJSON on CPython.
Thank you
You can even throw in some encryption and use it to distribute secret files to your friends.
I mean. A pixel has colour, colour is numbers, files are numbers
curious why the big picture elements and not just using single actual pixels? is it to be resistant to jpeg compression?
Would be cool to have a JavaScript version so you can make a browser based viewer. Some sites like Imgur have a liberal CORS policy so you can load the image to a canvas to access the pixel data, then render the data. You can then host any type content on free image hosts. Text-based content and images are easy and you can load some other things by generating a data-url.
camelCase I agree with, but vertical spacing to group related elements isn't a bad thing
I have a feeling that YouTube's compression algorithm would break this. You'd have to be able to build fault tolerance (like qr codes) into it
Make it NSFW ffs... This just gave me a headache while scrolling through my feed.
Variable names in loops like i, n, j, k? lol
I can see this being used in some sweet moving art steganography. Awesome work
I can't speak from experience, but would deploying your work as an .exe be suitable?
That's not a thing you can do. If people can run your application, they can modify it however they want. You could obfuscate your code to make it harder, but even that is pretty difficult in Python, and it obviously won't work if you need to share the code to collaborate.
You cannot. Learn something that compiles to binary. Go for example. Even then making binary run only on your computer is impossible if someone is motivated enough.
Could you also use another image/video as a cipher to encrypt the first image. Then the person you send it to you would need that cipher to deencrypt. Could be a really cool messaging service.
General bs instead of concrete advice.
Try Nuitka, it compiles python code to binary
If a thing has an `items` method, you can just do `dict(thing)`.
That would be /u/nieuweyork in [this comment](https://www.reddit.com/r/Python/comments/bun5px/dear_python2_user/epie55b/).
Indeed, but I need quite often lxml or asyncpg.
Significant, but not enough. Companies that didn’t switch now will never switch if the deadline would be pushed out for them. They’re the kind of companies that only starts thinking about buying fire extinguishers when 33% of the premises have burnt down and the fire has started to lick at the CEO’s rolls royce.
By running the decoder and showing it has data. But if you encrypt the data first...
When you code for a company it’s not your code. You should be proud if your boss uses stuff you wrote. You and he are working for a common goal. If your boss and company are benefiting you are doing a good job.
We're using pypy with pyparsing, it works fast and pretty good.
Or you just track which patches they include and create a build bot for your distro that applies those same patches.
I already have mechanisms built into \`read()\` to decode distorted files within tolerances. I go into into this in detail [here](http://markmichon.io/2019/05/30/bitglitter-is-released/) and [here](https://github.com/MarkMichon1/BitGlitter) and [here](https://www.reddit.com/r/Python/comments/buvrkh/i_created_a_python_library_that_encodes_files/epjzl7h?utm_source=share&amp;utm_medium=web2x) if you're interested.
Running only for you or on your machine? If it is something you made for your company? That’s positively antisocial. What if you get sick or die? Or are unable to run it for some reason? That program would turn into useless crap if you were to succeed. You are trying to fix a social problem by technical means. I think another possible approach could be to spread infos about those tools you made in your company. claim that stuff . Maybe you should reconsider your priorities too.
Check out all of my answers regarding this question, especially [here](https://www.reddit.com/r/Python/comments/buvrkh/i_created_a_python_library_that_encodes_files/epjzl7h?utm_source=share&amp;utm_medium=web2x) and [here](http://markmichon.io/2019/05/30/bitglitter-is-released/), as well as on the repo itself.
Others are saying it's not possible but that isn't really true. You can use a combination of obfuscating and overloading to achieve something nearly foolproof. For instance, you can overload something like __add__ on int objects to do something else fundamental to your script (e.g. you could switch __add__ and __sub__) in an external package. Then, as long as you can write your code under the overloaded conditions, it will only run correctly for you where your obfuscation package exists. But, I do not advise this, because it will seem to anyone reading your code that you have no idea what you are doing, and it is indeed against the spirit of open source.
The default config the library uses has 100% frame readability on platforms such as Youtube. This was done through extensive testing. There are some good answers scattered about, but [here](http://markmichon.io/2019/05/30/bitglitter-is-released/) is a good introduction to how it works.
not done like that.
From what I've read the main thing you have to watch out for is memory consumption.
I know 😅
\&gt; (Also, is there a way to not have to re-type the variable every single condition on an if statement?) if ask not in "nN2":
I am proud. But shouldn't my boss's boss be proud of me too? How can he be proud if he doesn't know I wrote the code in the first place.
What I meant was: If you write `print("Developed by xxx")` and execute the script. You will get "Developed by xxx" in the output. What if the other person removes that line. How can you show people that code was developed by you? Is there a way. You can write something without the other person deleting it?
That is a way you can write. But I want the others to understand my code just not claim that the code was written by them.
If I really do collaborate. I would want all of our names included in the credits section. But it would not matter if the credit section was deleted by an ahole.
Then it sounds to me like you're looking for technical solutions to people problems, and those rarely work. The answer to "assholes I'm working with keep stealing my work" is to not work with assholes, not to try to outsmart them.
No, that's not a thing you can do. If they can access the code, they can do anything they want to it.
No getting around it? That's definitely untrue. You can absolutely modify it to use something else.
1. /r/learnpython 2. You can't use Selenium inside WSL to manage a browser on your host, even if you do manage to install it correctly.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
We haven't felt any painpoints that pypy addresses and the trade off of losing lots of Python C-API libraries (pandas, scikit-image, etc) was not worth it.
Do you have any examples you can point me to, to change ProcessPoolExecutor to use something better for Pypy than pickle?
This should be covered by the r/learnpython sidebar which links to the wiki: [https://www.reddit.com/r/learnpython/wiki/index](https://www.reddit.com/r/learnpython/wiki/index) &amp;#x200B; The videos section of the wiki index could certainly be better (insert open source call to action). &amp;#x200B; To directly answer your question: * [https://pyvideo.org/](https://pyvideo.org/) (these entries link to the youtube pages) * Latest PyCon: [https://pyvideo.org/events/pycon-us-2019.html](https://pyvideo.org/events/pycon-us-2019.html) * PyCon 2019 Youtube Page: [https://www.youtube.com/channel/UCxs2IIVXaEHHA4BtTiWZ2mQ](https://www.youtube.com/channel/UCxs2IIVXaEHHA4BtTiWZ2mQ) * Latest SciPy: [https://pyvideo.org/events/scipy-2018.html](https://pyvideo.org/events/scipy-2018.html) * SciPy 2018 Youtube Platlist: [https://www.youtube.com/playlist?list=PLYx7XA2nY5Gd-tNhm79CNMe\_qvi35PgUR](https://www.youtube.com/playlist?list=PLYx7XA2nY5Gd-tNhm79CNMe_qvi35PgUR) * PyData Channel: [https://www.youtube.com/user/PyDataTV/playlists](https://www.youtube.com/user/PyDataTV/playlists)
Not sure why you want that answer but (((x*2)+2)/2) = ((x*2)/2 +(2/2)) = x+1 You probably will never get that answer since x+1 Is a better solution.
I guess you are right. But I have to do something so that the person viewing the output know I wrote it
I agree with some of the other commenters, that you’re learning about your career, and your question is motivated by other concerns. However, here is a technical answer, then I’ll tell you what I’ve learned in culture. This is the definition of code-signing. You will find that this is not often applied to python source code directly. In industry, I was once tasked to brainstorm solutions to this problem so we could distribute a standalone SDK for our product. With millions of dollars behind us (actually not a lot for a startup, just multiply 12 people by a reasonable salary and price out a production cluster to begin to see why), we came up with a completely different, hosted architecture. We gave them interfaces that were open-source, which abstracted our API behind HTTP and/or AMQP. These turn out to be the right ideas anyway 🙂 (it internalized the value of service oriented architecture at that point in my career). There are of course ways to do what you describe, but it’s impractical and probably doesn’t do what you actually _want_. I almost linked you to some code-signing google results I find legit. But nah. I think they would all mislead the reader of my comments. Back to what you more likely want. I once dealt with a developer who would “finish” my pull requests with squashed rebases, in an environment where management was actually using git statistics to gauge performance. First, don’t work for a company like that. Second, everyone figured out he was an asshole pretty quickly anyway. The few weeks I was annoyed seem funny now 😉 Talking about your ideas with colleagues also makes them hardened against authorship theft in a team scenario. It’d be a bitch to steal an idea from Linus or Guido, amirite? Or write your code in brainfuck
You can go and stand behind that person with a sign that says I WROTE THE CODE YOU ARE RUNNING RIGHT NOW, I guess. Seriously though, if people around you are claiming credit for your work often enough for you to be this upset about it, you should probably find better people.
Yup that is a way out.
I just read your question in its entirety and realized I didn't provide a complete answer... &amp;#x200B; When I google your question I find this fairly good list of channels: [https://realpython.com/python-youtube-channels/](https://realpython.com/python-youtube-channels/) &amp;#x200B; I don't know if a better curated list of channels exist, but the [pyvideo.org](https://pyvideo.org) service is an effort to provide a curated list of the videos themselves. PyVideo was started before YouTube was the defacto place for everything and some stuff was on Vimeo, Google Video, etc, so the idea that there are YouTube playlists or channels for the conferences isn't really handled there, though it probably could be incorporated. There are certainly a lot of improvements I'd love to see whenever I interface with pyvideo... the ability to sort the lists of conferences by date or the list of presenters by # of talks for example. If you want to provide feedback on pyvideo, your best bet is probably the [GitHub page](https://github.com/pyvideo/pyvideo/issues).
 You just told me the right word I was looking for. Code-Signing. I will continue my research on the same lines. Thanks for helping. But I think in the world of open source. There must be a lot of incidents of authorship theft. I am surprised the community didn't come up with something already.
I’ve tried to make pypy work but some packages that are required. Pandas. Scipy just don’t seem to work in pypy2.7
&gt; “not doing semver is confusing and people will be scared by upgrading to 4.0” Python does not follow semver. You don't need to vote to keep the status quo. You vote to change it. If you really want semver, propose a PEP, but don't be surprised when it gets shot down. Python implements large breaking changes in major versions. It implements small breaking changes in minor versions.
This is a social problem, not a technical one. If you don't trust people to honor the agreements they made with you regarding the code you wrote, then don't give them the code. Although if you are working under employment, then the default in most places is that anything you write on the job becomes the company's property, not yours, and that means your boss can do with the code whatever he (or rather, the company) wants, including removing your name, distributing copies to anyone they like, and forbidding you to use it. The code is not yours, it never was, you gave up your rights to it before you even wrote it, the moment you signed your employment agreement. And in fact, attempting to prevent your boss from exercising the company's rights to your code, e.g. by withholding sources, obfuscating the code, adding backdoors or boobytraps, etc., could be construed as sabotage, which could get you fired on the spot. If your employer just removed your silly "protection" and had a good chuckle about it, then you can consider yourself lucky you got away with it so smoothly.
That seems way too specific for a general `Python` subreddit.
It still has a type (e.g., int32, int64, float64, complex128, U8, S8, etc.). The PSF has stated that they're not going to implement type checking at runtime, so it's kinda irrelevant.
Great 🙂 Post again if you find a great workflow for 2019. I’m sure there are valid use cases. *But but but*: in every outcome you really want to accomplish, don’t forget to continually ask yourself WHY this solution is the answer. If you solve this or that problem, and it wasn’t actually the problem causing you trouble—well, you still have a problem
I assume downvotes are because it's likely bad advice. Why wait until the official cut off to prepare your own project for the future? Giving yourself ample time to respond to unforeseen issues.
&gt; we’re proudly backed by Bessemer Venture Partners, Goldman Sachs, Citi Ventures Their investors are companies that have the info.
We all likely grasp duck typing. But you're failing to grasp the idea of a static type checker that can easily be implemented into your workflow if you value what it provides. If you don't value it then you simply don't use it. That's it.
I don't care how the company uses my code. I neither care if it wants to distribute my code by removing my name. But I will not let anyone(including my boss) take credit for my code while showing the output to his boss. Isn't is like backstabbing? Okay, just to exaggerate. What if your boss gave a presentation to his boss showing all the work you did in which your boss didn't even help? But my hands are tied. My friends have the same experience. Imagine people praising your code but not you!!
You could use ZMQ instead
&gt; kovidgoyal Oh god I forgot about that developer. I wish I had the list of links to his shenanigans on hand to provide as context but I don't.
The author has, or had, a weird grudge against py3. Just ignore it and learn Python 3. It's almost 100% the same when you're starting out, except for print, xrange, and anything involving unicode.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
But seriously this belongs in /r/learnpython.
This will last about 5 minutes after tech crunch/mashable/El reg/Reddit front page.... gets wind of it. Best to keep such efforts in a small circle
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
No, that's why it's 3d. Horizontal, vertical, and time. As the top level comment said.
It's still a social problem, and corporate sabotage will only make it worse. Talk to your boss. If that doesn't help, take to your boss' boss. If that doesn't help, quietly go out and find a better job, one where you get the credits you deserve. Sociopath middle managers are unfortunately common, but lucky for you, your skills as a programmer are in insanely high demand, so finding a job should not take you awfully long. And then when you have found that new job just hand your notice, calmly, and with a bullshit reason like "I feel I am ready for a new challenge", or "this is an opportunity that I cannot ignore". No need to burn any bridges; if they are smart enough, they will figure out why you left, and if not, revenge wouldn't help anyone either. Stay calm and polite.
/r/learnpython
that whole repository is so satisfying to read through the readme. This is amazing stuff going to fork and mess around myself for sure.
sure, that’s close enough. if you really do semver for a large project, you end up like react, with major versions every few weeks.
Add annoying fingerprints nobody else would do like all your var names have your initials. You can even hide it, like spread across several lines ie. steganography.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I am a complete beginner, having started 2 weeks ago. Also, i dont know if I’ve done the while True loop correctly
You can't assign the output of a function. Int(x) cannot be assigned to. You are making it an int on the other side. Just remote the int() from the left hand side of the equation symbol on the first line.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Ok, now i get invalid syntax and it highlights the “while”
thanks. really a ton of stuff to learn from.
Yep, it'd be pretty easy. Py2 isn't going to be dead until 2024, as long as RH is patching it, which they've already committed to. Not that the user community couldn't patch anyway.
&gt;But be aware, you cant always fit data to a function perfectly I'd say it's more accurate to describe the problem as the opposite of this: that you **can** always fit data to a function perfectly. The problem in fact is is that you can find an infinite number of such functions. As you say, given n points, there must exist a polynomial of order &lt;=n that fits them, which means that you can always add an (n+1)th point **anywhere** and for each such point come up with a different function for each that will fit it *and* all the n points you have. Ie. given the 10 points the OP gives, you can come up with a crazy high order polynomial that perfectly matches them, but whose next 50 points has y being the digits of pi. Hence if you want to know *which* function to use, you need to have some means of deciding between them - eg. based on simplicity (like preferring "x+2" to that crazy 60 term polynomal). Indeed often in real-world data, due to the existence of noise in a lot of data, you'll prefer a simpler function that *doesn't* fit perfectly over a complex one that does (which is actually what polyfit will do).
Write the problem description please. I'll help you out.
6 line, missed if statement
Typo. Fatorial. That is one problem
You are assigning input to function call - use `factorial_number = ...` instead of `int(factorial_number) = ...` . The main parts of loop are correct - condition and stopping if. But if you want to print it at the same time (and don't make function for factorial calculation - not sure if you already know how to do it), you need a second variable. I'm not sure why you teacher want you to use while true loop, because there are much nicer ways to write it (for loop and especially recursion).
Yes I agree. I was referring to if your function definition space is polynomial and your data is distributed like Y=2^X you can only approximate the function
r/learnpython
obligatory: checkout /r/learnpython
The only reason I run tests for 3.4 is that my customers use Windows XP in many cases. I agree with 3.5 onwards not supporting XP, but it is a bit of a pain in some situations.
&gt; I am surprised the community didn't come up with something already. Theres Github, but also, you are fundamentally misunderstanding multiple concepts within open source software. Authorship is not anything anyone cares about, you aren't going to get royalties out of this. You contribute to open source, and when you do so you give up any right to that code.
Do you use the IdeaVim plugin?
You can install the main/normal NumPy nowadays. EDIT: a quote from their [blog](https://morepypy.blogspot.com/2018/09/the-first-15-years-of-pypy.html) dated Sept/2018: &gt; But nowadays CPyExt is even getting quite good, a lot of the big numerical libraries such as Numpy and Pandas are now supported (for a while we had worked hard on a reimplementation of Numpy called NumPyPy, but eventually realized that it would never be complete and useful enough). It might still be slow but at least you can install a lot of C extensions without much extra hassle. Also worth mentioning https://github.com/antocuni/pypy-wheels which provides some pre-built wheels.
use pycharm fam
These links seem to cover the relevant information. https://www.python-course.eu/tkinter_entry_widgets.php https://www.python-course.eu/tkinter_text_widget.php
I don't know such utility, but why don't do it in reverse order? from foo import bar def func_1(): bar() continue to develop and when needed. from foo import bar, baz def func_1(): bar() def func_12(): baz() In this way you have never to worry about importing useless things. You lost a small amount of time to scroll up and add require modules, but at the end you don't have import everything and you don't need to manually check all your code to import all the right module.
That doesn't mean you can claim the code is yours which is actually mine right? But yeah. No one cares about authorship. And the open source community is ethical enough to cite the publisher's work.
Well, yes, that is the alternative, and that's what I currently do. It's distracting though, writing code, then using something you haven't imported yet. You could ignore it, and think, I'll go and add that import in a minute, but then the linter starts screaming, mypy starts screaming etc. I also define a large number of NewTypes in most things I write, and that equates to a large number of imports, so that's why I'm looking for a way to do this :)
I don't worry about importing useless things either because flake8 is always going to shout at me for unused imports ;)
It would mean you couldn't short-circuit the evaluation, because the parameters couldn't be evaluated lazily. That's the case if you pass it a list or other materialised sequence anyway though.
You said this happened at work? First off, you don't own your code the company does. Second, if you you are using git, you should have a tag with your name on it. My company has automated this on check-in and you cannot bypass it. Lastly, why do you care? If you are working with your boss is it part of your goals or objectives? Do you get paid by the line of code? If your module is small part of larger system, your small contribution is just part of the team effort. All the things you are talking about will not work in a corporate environment. Look for other opportunities to show off your work. Does your company have an internal blog? Does it support hack days? Do you have end of Sprint demos? At school, it is bogus someone stole your homework assignment. In a work environment, no big deal you are all supposed to be working towards a common goal but if you want individual achievement to be recognized you have to look at other ooo or talk to your Boss.
If you really want to, is a way that you could do it - in untested pseudocode import tokenize import foo words = dir(foo) with open("my_script.py") as f: source = f.read() used_words = [] for tok in tokenize.generate_tokens(StringIO(source).readline): name = tok[1] if name in words: used_words.append(name) print(used_words)
Interesting. I'll play with this later! Thank you very much!
it would be confusing, because if it accepted `*args` a natural interpretation would be that `args` was itself the iterable you wanted to test instead you can use `any(itertools.chain.from_iterable(iterables))`
The single-iterable calling convention is likely for performance and memory reasons. It lets you call `any()` or `all()` on a generator without having to construct a list of every value that it yields, and if you hit a short-circuit return (`any()` returning True or `all()` returning False) you don't have to generate any values beyond that point. They're free-standing functions, rather than being methods, because free-standing functions play better with duck typing. It's easier to express "this function calls `__iter__()` on whatever object you pass to it" than it is to express "if you get to the end of the normal attribute lookup chain for `spam.any` and are about to throw an AttributeError, but `spam.__iter__` resolves to a method, then the reference to `spam.any` resolves to this built-in implementation instead of throwing".
If the heavy lifting is done by Fortran, then how could Python 3 have been slowing it down 30%?
Record this on VHS...
https://pypi.org/project/starless/ (disclaimer: my own project, really just quick and dirty tool to fix some codebases I had to edit)
Very often it is possible to not send data to another process, but more like a task description... this could be the biggest gain?
Boom, headshot! ;) I might see if I can misuse and abuse this within vscode, just have a key combination to execute it for my current file! Many thanks!
Or you store them up and break everybody's code in one fell swoop and have a Python 2-&gt;3 transition on your hands. I much prefer not following semver for that reason. I tried semver and it was a pain. I much prefer a few minor changes preferably with deprecation warnings for a bit and then breaking things, similar to how numpy does it.
This is really cool, especially the requirements feature. Thanks for sharing!
i dunno about vsc, but if you use an IDE, you can usually just start typing what you need and it will/can import it automatically and explicitly
IIRC Dropbox is.
Well it sounded like the project already supported py3, so they were well prepared. Dropping py2 doesn't mean not being ready for py3.
Those are good points. I guess to me the `*args` version just seems more generic while the fast iterable version seems more specialized. To me it would make sense if the more generic version is built-in with a short name, while the specialized one should have a longer name or should have to be imported.
Thanks a lot, super useful article!
If you put these vars in a dictionary you can do a "".format(**somedict).
Holy shit this is great!
hi, as far as i remember you may use indexed placeholder Such as {0} {1} {1} {0}. Cant test it now since im on phone :/
Well, yes... Or Celery. But adds additional complexity to your infrastructure adding a message oriented middleware just to do multiprocessing. Not all use cases should involve such heavy artillery.
Just put the index of the argument into the {} : &gt;&gt;&gt; print("{0} {1} {0} {1}".format("hello", "test")) hello test hello test
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thanks, glad you liked it!
If you are not looking for an automated solution.... Why don't you start with `import foo`. Use `foo.bar` etc while writing code. At the end replace the import with `from foo import bar`. Now your linter should highlight all places where you need to remove foo and add to your imports.
Not an actual answer to your question, since you'll have to write “ram“ four times as well, but I really like f-strings. Your code would then be some_string = f“vm_uuid={vm_uuid} static-min={ram}MiB dynamic-min={ram}MiB dynamic-max={ram}MiB static-max={ram}MiB" which returns the same result and is the most readable solution in my opinion.
I can't really imagine a project that doesn't use the scipy stack.
Delete all imports. Re-import everything using pycharm (alt/option+enter while cursor on non-imported function/class)
Didn't know you could do this, thanks for the info!
Didn't know you could do this, thanks for the info!
ORLY? How about a project not related with science/data analysis?
1: /r/learnpython 2: read the sidebar 3: google everything
It can, but probably not directly. For background, I have a CS undergrad degree and an MBA. While I rarely promote that "I can use Python or whatever" to solve a problem, I can boost my &amp; my team's productivity with these tools. THAT gives me resume fodder for either promotion or a new job. Skills aren't valuable by themselves, it's how you USE them.
Your job prospects will be much better if you consider python to be a tool to solve a problem (financial or whatever) rather than the solution itself. See, your prospective employer isn't interested in whether you are a python genius or a java guru, what they want is solution to their problems. Are you able to do that? Coming to the topic, yes a mastery of python language can definitely increase your job prospects, but only if you are able to market yourself and demonstrate your *problem solving* skills using python.
Yes.
You'd be surprised. Then again I think people just kinda throw whatever they think is cool in to the distribution, our application comes with a ton of machine learning stuff that we don't use.
At work we use pickle to dump out massive quantities (several gigabytes) of data to disk. I saw that, freaked out, and started a project to replace it... but turns out pickle really is the fastest way to serialize fucktons of numeric data. I don't know why either. Might have had something to do with the fact that we were using lists of Python floats for god knows what reason instead of arrays or numpy arrays of doubles though...
I'm working to recreate the motorcycle game from Tron. I started Saturday, and I hope to have a finished product by this sunday! I'll post when done.
might look into some automation for new relic monitoring
"is" doesn't mean "this condition is true", but "a is the same object as b" I guess it just won't function like you want it to. If you use "in" you may find that you are comparing each element with "is" and/or with ==, so your lambda probably doesn't function like you want it to either!
I think you're looking for \`filter\` [https://www.geeksforgeeks.org/filter-in-python/](https://www.geeksforgeeks.org/filter-in-python/)
I already know what 'is' means. I just want 'is in' to function like "if any of the objects in this list are the same as this one, then do my stuff", which is exactly what that lambda checks for
The best way to get what you want is to use a set instead of a list. The `is` keyword checks if both objects have the same address in memory. Using `obj in set` isn't exactly checking for object address but it's close enough for what you want. a = {"a", "b", "c"} print("c" in a) # True
You probably already know this, but to rotate a set of points around an arbitrary point in space, you have to translate the arbitrary point to the origin. That same translation is applied to the data set, then you rotate the required angle on each translated point in the data set, then translate back to the original arbitrary point applied to each point in the data set. You apply the translation because the center of rotation is always the origin.
https://github.com/fingon/starless for those wanting the code repo.
I see what you mean. I'd just use the any() with the generator expression. It doesn't seem so bad! I don't think there's a better way, not without wrapping your container to change it's behaviour
'in' Is a great trick, and I always forget about sets; however, it doesn't quite scratch my itch. For example, if I do: &gt;&gt;&gt; x = {'abc'} &gt;&gt;&gt; y = 'abc' &gt;&gt;&gt; y in x True Which is expected. But if I instead write: &gt;&gt;&gt; x = {'abc'} &gt;&gt;&gt; z = 'a' &gt;&gt;&gt; z += 'bc' &gt;&gt;&gt; z in x True When if I were using my lambda, it would be: &gt;&gt;&gt; is_in = lambda i,lst: any(i is x for x lst) &gt;&gt;&gt; is_in(z,x) False Which is my desired behavior that I think an 'is in' statement would scratch
Maybe this is a case where you could create your own class. class is_equal(): def __eq__(self, other): return self is other
Well, damn! Thanks for your help though! I was hoping maybe there would be some obscure function that has this kind of behavior, as there's almost always one of those lol
Only possible for small changes though. Huge ones like the string/byte thing would either take forever or be as disruptive as the whole 2&gt;3 change
I'm working on a pet project I have been putting some hours into... Let me give you a bit of context: I give extra curricular coding lessons in Python to kids age 6 to 12. So I had to find a cool project that interest everyone (including parents and myself). Since our club name is Hyrule Astronomy Club, you can imagine that we are leaning towards video games and astronomy. We started with kRPC a RPC module for Kerbal Space Program, but the orbital mechanic proved to be too much of a challenge for the youngest. So I started to develop this very simple terminal based game library. Long story short: it went south and now eat up my free time. Some professors at the local schools wanted to have access to the library and lesson material so I set up a [website](https://astro.hyrul.es/hac-game-lib.html) (I am not sure if it is customary to put links in these thread, apologies if it isn't), a youtube channel and of course a Github repository ([https://github.com/arnauddupuis/hac-game-lib](https://github.com/arnauddupuis/hac-game-lib)). I actually wanted to advertise the library here (you never know: it might be useful to some people), as I found out that creating a bomb that explode on touch (or heart that restore your life) is a very easy way to introduce event based programming and callbacks (a lot easier than the regular academic way)! The documentation is not finished, so I'm keeping it somewhat confidential for the moment. Btw, PyGame is awesome but too hard to get in for absolute beginners and kids. I designed the hac-game-lib to be incrementally feature rich: at low coding skills you can do something, at better coding skills you can do something amazing. Now I need some sleep... ;-) &amp;#x200B; That's it for me. &amp;#x200B; Happy coding! &amp;#x200B; PS: I'll be glad to know if /r/python is the right place to announce the library when it's ready to be shared more widely.
I can think of obscure ways, they're just not better! :) Maybe there is something, but I've never seen it. I don't claim to be all-knowing though lol
https://github.com/stewartmcgown/uds
Thanks, hot_girls_online!
That's funny... to me is the opposite: fast enough and rock solid. I follow only one rule with pickle: serialize only base object types and datetime.\* objects.
Awesome! I hope you learn something, don't be afraid to break things
yes, somebody can.
Then maybe I can use a Rotate() with my points around the original image center, then translate to the new reference center? Is there a function I can use to rotate my list or do I have to implement it? But now I get it, if I have to
really cool stuff, well done
If your devops role involves a lot of shell scripting, you might consider starting to put some of that logic into python instead. python's subprocess module allows you a lot of flexibility in calling system resources. It might be a good way to get further into python scripting.
In my opinion the f-strings approach to seeing formatting is very useful. But I've had astonishment when got exception trying to format **None**. What's I mean: a = 123.4567 b = None print(f'Some label: {a:,.2f} by {b:,.2f}') # and it similar "{:,.2f}".format(None) Why it can't ignore the exception?
I don't want "iTunes for eBooks" but I do want "Plex for eBooks"!
To me this is an argument against the Python developers' increasingly profligate addition of syntax. There's almost never one obvious way to do it these days.
Depending on your ide, you can set up auto imports. Or, just import the whole package, namespaces are one honking great idea.
I’m not a MySQL user but the docs say the execute function returns an iterator, if you whack it in a for loop you should see son output
First, you're posting this to /r/Python rather than /r/learnpython Next, you're not reading the /r/learnpython sidebar Third, you're posting pics of code
I would love to get a link man
Every function call returns a bool that's either successful or not. It's like you're afraid of exceptions.
they actually were given out to some people at my feiends job and he knew i coded so he gave me them... sorry theres no link
Yeah, what's the problem? `mycursor.execute(...)` will return `None` in this case. Please [read the docs](https://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlcursor-execute.html).
ah, fair point. i suppose we all have to remember that the internet is pretty horrible sometimes.
I very much agree. A `from __future__ import py3hosting` or something, to restore python2.7 semantics for the things that were incompatibly changed. That plus `from __future__ import print_function`would have handled a lot of cases.
Looks like you need to call .fetchall() on the cursor instance and then iterate through the list it returns. Here's a little tutorial I found: https://www.datacamp.com/community/tutorials/mysql-python
IMO the difficulty of migrating to 3 was just way overblown. They didn't need to create anything like that. They should do what everyone else is doing and give a year to migrate (not 10).
Ahem.. and Girls 😞
How so? I mean you can bump your code in accordance with semver once a month, but if you need to rip the band aide off, do it. If there's nothing they can do to prepare, just do it. If there's something they can do, have a deprecation cycle.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
mypy requires 3.5+ checking 2.7 code requires you to specify python interpreter in arguments for the checked version so it knows how to find packages. Perhaps 3.4 could be tested in a similar way, I never did that though.
Huh. I've never used Plex for long... in your mind, how something like that could work?
Absolutely. Recruiters who don't know anything will ask if you know python and it helps to know it.
Thank you, that's very interesting. I do actually want to do the heavy lifting myself, but I'm sure this would be a good example for me to look at to learn more about how said lifting should be done.
You don't need pickle for that.
Thanks for sharing this. The Angular "recent releases" column refers to AngularJS and not the "new" Angular which it should probably be showing.
Awww damn, they look very nice!
Tell me pls, what no-science-related library has scipy in dependencies?
They stopped that in 2015, that's when python 3, that was the hump year for python 3. Could be a coincidence, but I don't believe in those. from 2015-2020 python 2.7 only gets security fixes.
Never let errors go by silently unless explicitly silenced.
That's an excellent point. Hmmmm... Let me think of a way to handle this one.
I programmed for 10 years in Python without touching or even consider using any of the data analysis stack libraries.
what about r/ansible??
what about r/ansible??
/r/learnpython
It was actually THE change that broke python 2 code (actually to be correct most python 2 code is broken, python 2 just didn't complain about it). Basically if you have python 2 code chances are that it will mess up unicode text. The other incompatible changes were because of it. They thought that since compatibility was broken anyway, why not just use that as an opportunity to cleanup the language.
Automate the boring stuff might be a good read for you. But as mentioned, if you are going to write a shell script for something, try doing it in python instead.
I doubt it, python 3 is past the hump and actually python 2 are minority, major packages already stopped supporting 2. There was also a fork initially called python 2.8, it was renamed since then and it didn't go anywhere.
There is no reasonable way to implicitly convert None to a string. Is it an empty string? Zero? 1900-01-01? Or the worst of all, the literal stringe None? Nobody knows. Thus you need to implement some exception handling. I guess there are some libraries to set a default value for formatting None as well.
I’m just giving you the background of the process that makes the math work out for an arbitrary point set.
I’m just giving you the background of the process that makes the math work out for an arbitrary point set.
Never. Hashes are only used for dict lookups and such, and checking for equality directly is almost always faster than computing the hash.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Okay, thank you
Sorry, according to the documentation at https://pillow.readthedocs.io/en/3.1.x/reference/Image.html#functions Rotate, rotates around the center of the image. Expand simply enlarges the image to fill up the original area of the image. I misunderstood the function.
What if these two objects already reside within a dict, and the hashes had already been computed? Premature comparison based on hashes could be performed in O(1) constant time
Hash equality doesn't mean full equality, and Python dicts don't cache full hash values IIRC.
Capital One was giving these out at pycon this year.
I agree that hash equality does not imply full equality. However, if hashes are different, the objects are sure not to be equal. Let's say that we have object A and object B and (maybe only n first least-signifficant digits of) their hashes. Checking hash(A) and hash(B) for equality is trivial. Then, we have two cases: 1) Hashes are identical - the \_\_eq\_\_ needs to be called 2) Hashes are different - we are done.
I get where you're coming from, but also, checking for equality is _faster than computing the hash_ in pretty much all cases.
yep! my friend who works there gave me one
This is a tough question to answer because DevOps means different things to different companies. DevOps at one place could just mean automating a Windows environment (so powershell knowledge would be ideal) or another company could be using AWS tools for their DevOps practice. I would suggest thinking about what technologies you want to interact with and what exactly you want to automate. Is there anything at your current job you can automate? If so, read up on the tools you use and start working on projects. &amp;#x200B; For example: I was assisting my networking team with some changes and I realized a lot of it was repetitive tasks. So I create a python script to automate the change and then started utilizing the vendors configuration management software. Very simple example to show how you can look for projects at work.
I just mean, I like the idea that I can host a server that stores all my ebooks and makes them available to all my devices on a as-wanted basis (plex), vs. manually storing and uploading to each device what I think I *might* want someday (iTunes)
That's ok,my idea now is to remove the image center offset from my list. Rotate them. Add the new center offset.
The way to solve it is really simple: 1) move the smallest disc to the next tower 2) move the only other possible disc 3) repeat
What have you tried?
What should `format(None, ',.2f')` return in your opinion? `'None'`? `''`? `'0.00'`? Something else? No matter what it would return, it would either not look like what the formatting options suggest, which is most likely a bug, or it would be the wrong value (`None != 0.0`), which is definitely a bug. The real solution is writing your code such that you never try to format `None` as a float, whether by replacing it by a relevant value, wrapping the formatting in an `if spam is not None` or simply making sure you are never given a `None` value in the first place, by making it a precondition of your function.
I think the process you describe is more or less how dict lookups work, where because we already have hashes we compare them first before doing equality checks. Try using your objects as dict keys. Raymond Hettinger's talk from pycon 2018 explains this, IIRC.
I've got `None`, for example, from database and I have to show formatted data in a grid. I must haven't None (doing nvl or etc) or doing my own formatting functions with default value to prevent exceptions. And we see we have excellent f-strings with one bad thing.
&gt; is *faster than computing the hash* But as OP ask, hashes can be If you _want_ to, in your `__eq__`, you can compare the has values and do an early "nop definitively not the same: But Python itself cannot now that comparing hashes can be faster; "in the face of ambiguity refuse the temptation to guess", so it does not try to hash. ``` def __eq__(self, other): if hash(self) != hash(other): return False print("Eq called") return self.num == other.num def __hash__(self): print("Hash called") if not self._hash: self._hash = hash(self.num) return self._hash ``` See it on the other direction it is easy to add hashes comparison to your own objects in `__eq__`, but if python were to do it by default it would be hard to disable.
How do you know someone is a girl on the internet? They will tell you hahahaha. Do you have enough attention yet? :)
What you could do is use `id`. This can be especially useful if the objects you're comparing are not hashable: &gt;&gt;&gt; first_list = [1] &gt;&gt;&gt; my_set = {id(first_list)} &gt;&gt;&gt; second_list = [1] &gt;&gt;&gt; id(second_list) in my_set False &gt;&gt;&gt; id(first_list) in my_set True **Important**: if you do this, make sure the objects you store the `id` of actually remain alive, otherwise Python may re-use the `id`: &gt;&gt;&gt; id([1]) # the list immediately gets destroyed after its id is taken 52474464 &gt;&gt;&gt; l = []; l.append(1); id(l) # new list, same id 52474464
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I think they mean they want to use `any(a, b, c)` instead of `any([a, b, c])`. It is also how their example implementation would work when converted to Python.
I'd like to `NoneType.__format__` will have behavior similar empty string: fmt = ',.2f' f"{b:{fmt if b else ''}}"
I actually did the exact same thing three years ago, with high speed data transfer in mind. I was coming at it from enhanced QR code and portable monitor to phone camera uni-directional data transfer. I implement it in Matlab, just a simple prototype to read some data in camera from monitor. The external lighting, resolution of monitor and camera and type of monitor which can distort the color output slightly, were all some of major factors of noise in reducing the overall speed and that was the reason i dumped the whole thing. Well i got demotivated after the realizing the speed will be around few hundred KB/s. I had MB/s and GB/s in mind. One lighting noise i slightly got over was keeping a black and white frame at the start of the transfer with BW qr to model the lighting or reflection in the monitor. I'm happy somebody have gone to full length with the concept, keep up the good work, that's usually how applications for new concepts get discovered even if you don't see it now.
Noooo, I need this
Actually I identify as a tree
It's the most important rule for any programmer! But, in my opinion, in this case it might be warning.
In my experience, it's the other way around. I don't remember the last time I had a fixed number of values I wanted to pass to `any` or `all`, while I frequently have an iterable of values (sometimes lists or other containers, but often generators*) that I need to pass to one of them. And in the rare cases you actually do have a fixed number of values, you can just do `any([a, b, c])`. *having checked a couple of projects I'm working on, I found 12 different calls to `any` and `all`. All of them had a generator expression as argument.
How do you know someone's an insufferable dork on the internet?
similar experience here, its orders of magnitudes faster than anything else. Pickle is the perfect solution to a number of real world problems, to dismiss it outright as op did is just foolish and clearly uninformed.
Tree fiddy?
Are these for sale someplace?
oh wow. toscawidgets was one of my favorite libs back in the day. Ii used it in pylons stuff as well as tg. it's interesting to get re-acquainted with the docs in light of how pervasive reactjs is. very similar ideas.
Not the worst skill to pick up so I'd say go for it. It can be a pain sometimes but it definitely won't decrease your opportunity in getting a job. Also it can help you solve some number crushing problems which could come in handy in finance. You just have to advertise it nicely in your application.
That’s my street price
Better to write it as u/glitzerbaerchi suggests instead of using indices, it's more clear what the template represents.
No, but i can get you one set.
Download VS Code or Pycharm. Use a lot of google. Enjoy weird errors at the cost of not having to deal with curly brackets all over the place &amp;#x200B; also /r/learnpython
Is it possible for me to get one too?
Sign me up too!
How is python installed? Try typing "conda". If it is present, create a conda environment. That's all local and doesn't need admin rights. Let's you install any python you need easily.
ok... naw i need a set of this :3
ugh just fuck off, please.
Pushing a bug release for my open source project. A user request some new feature, so I wrote a new function. It was almost ready to go when some other user found that the original was kinda slow. By kinda: \- 1k entries: 95x slower \- 10k entries: 980x slower \- 1M entries: 98,300x slower 1M is large, but not huge for what it's doing...the new/fast one took 0.78 seconds. The slow one took 21.2 hours. I kinda want to find out if it it's exponential or N! more than I want to push the fix. Looking at the function, I can't even tell why it's as bad as it is, which makes me want to understand it better, so I don't do that again...
Ansible is not what I am looking for. I know ansible is config management but I am looking for scripting that is not config management.
Thanks will give that a try and yeah lots of bash scripts for me so makes sense
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Me tooo plz!!
What’s the price??
On the Internet, no one knows that you are a cat.
I can pay as much as i can afford to this.
Angelina Jolie was the best hacker! ACID BURN FOR LIFE! You go girls!
The term you are looking for is [auto-completion](https://wingware.com/doc/edit/auto-completion).
Here’s the source: https://github.com/eebmagic/videoAscii This is the first project that I’ve had enough confidence about to post here. I’d love any suggestions/constructive criticisms, especially for getting smoother output.
Wicked work! 😮
I wrote a script called \[zimports\]([https://github.com/sqlalchemyorg/zimports](https://github.com/sqlalchemyorg/zimports)) which does this. I've been using it all over the place, works great
I was planning to make a project like this. :( oh well. Glad to see someone did it though.
That's really cool. Does it print out to console? I can't see very well on the video. I was thinking of making something that rasterizes like the comic book effect with the different sized dots but that'd need another surface to output the image.
&gt; especially for getting smoother output. Well, you are asking quite a lot of your terminal emulator here... I'm actually impressed by the performance you've been able to squeeze out thus far. One thing you might want to try is to use a GPU accelerated terminal emulator like [alacritty](https://github.com/jwilm/alacritty).
Yes, it just clears and prints for each frame. That’s fun, I did something similar to that called dithering by just taking a grayscale image and only using black and white pixels to recreate it. The problem is if you want to preserve detail then you have to double the resolution in each direction which makes the file size even bigger.
Yeah I tried to run it on my raspberry pi and it was kinda rough. I’m just using the default Mac terminal, but I’ll give it a look thanks! :)
Yes, I imagine converting a video that way would require prerecording and then feeding it into the program. Especially on my crappy computer. But I think the basic principle would be the same as for yours - the dots would have fixed horizontal and vertical locations, only their sizes would change with the dark and white areas. I wonder if it could be done in full-color, or at least 16-bit color version.
This is great :)
May I ask for a set too! Please!
May I ask for a set too! Please!
Almost any ide can split screen like that
What's the error that pops up when you attempt to run the first example? Unless there is no error and nothing happens.
I'm not sure if I'm misunderstanding (I may just be tired), but I get 3 x `thisString is smaller`, which is what you'd expect?
+1 send one my way too. Pretty please.
Don’t be upset that someone else did it first. 90%+ of ideas you’ll have, have already been done, just build them anyway.
I don't. For me, the feeling is not natural on Jetbrains product. This is subjective though. You might find it useful.
I always hoped learning coding would allow me to see the matrix. Nice work!
Yes. I'm going to run again to see if I can reproduce the error
How did you come up with this list? `order = [' ', '.', "'", ',', ':', ';', 'c', 'l', 'x', 'o', 'k', 'X', 'd', 'O', '0', 'K', 'N']`
I did a test image with the jp2a Linux app. Those are the characters it used to convert a jpeg and I made a second script using screenshots of those chars to get how many pixels each one uses and then sorted them based on that. I might could add more characters for more variety but that was enough for me, and I imagine there’s probably overlap between characters that would make using the whole Unicode list unnecessary.
So did I miss a part when I downloaded it? when I open the ide it is just one window.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Okay now make an ascii converter to webcam!
I need this !!!
I just noticed how blurry this video is. [https://imgur.com/jgnqHPB](https://imgur.com/jgnqHPB) Here's a clearer version.
Shame it's not matrix green! Great job.
I could totally see a company setting a huge screen up at a conference and have walkers by see their pixel bodies walk/dance around.
Good idea
Damn! That's something really useful!!
Can someone please explain what this is?
This is next level matrix for our society. Rock fucking on!
theoretically doable with GANs
I recently got a job where I'm going to have to start sending in expense reports. I also just realized that I can send emails with python and work with, edit, and create Microsoft Excel files with the module openpyxl...so I made an expense reporting program that emails the report once a week to my project manager...I did it for fun one night in my hotel room.
Wonder if i could somehow use the ASCII video as the actual webcam output, as in im on live call on skype and want them to see my ASCII feed not real feed, not sure if im being understood here
That's pretty amazing!
I think this guy feeds a video into a computer and then forces the poor computer to play back the same video but using text and punctuation. It's a power move.
There best option is current working directory but give the user a argument to override that
What are you telling me? That I can dodge bullet points?
I was thinking that’d make sense, but wouldn’t that mean that the next time the application was run, they’d have to run it from the same cows or else they’d have to load it again?
That’s cool! I’ll have to try that. I always need commas. :)
Home directory with a hidden "dot" folder will work fine. '~/' redirects to C:\Users\&lt;user&gt; on Windows versions of Python.
a software emulation of a monitor?
This is what i was looking for
Awesome video... Simple and perfect clarity
Thanks a lot !!! Appreciate it.
Amazing video done brother😀
Thanks a lot..
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Oh. But how though? If it can detect the human or any moving object, can't it use a mask to generate these pixels? What am I missing? What process takes most computation?
Source: sentdex's tweet.
Which is then for beginners?
Crazy how short that py script is!
Oh snap, this is lit. And you go to GTech? I know so many people from there.
Then do not use *is* in the lambda definition, use *==* comparison. The `'abc'` object resulting from `'a' + 'bc'` is different than the string literal `'abc'` you typed, but it seems you are just interested in its value, not its actual id.
Pretty cool! I made a python video too; what do you think? [https://www.youtube.com/watch?v=V-iA47gbtnM&amp;t](https://www.youtube.com/watch?v=V-iA47gbtnM&amp;t)
Yeah you could screen capture your terminal and virtualize it as a webcam
Wow, very nice! I just had to do some adjustment because apparently windows doesn't have a stty command or something like that, so I used 60 and 80 for height and width. Worked perfectly, super cool.
screen shot of a tweet uploaded to imgur and posted to reddit.... that's not how you internet
Though personally, I'd just use scientific notation here.
Wow, this is cool!👍🙏
sorry, would you tell me how to make the adjustment on line 49?
Very cool
TIL
The code literally takes an image and recreates it with a set of typed characters. Then it's done for each frame of a video. It's not detecting any human or moving object in any other way than a normal camera does. It's essentially like putting on a filter.
Sure, just remove the os stuff and it would be like 'height, width = 50, 80'. Then you can test some numbers to adjust the size of the projection.
Isn't that a youtube comment?
Thank you very much
op said it was a tweet
You shouldn't. Zen of Python and all that.
This is called a "halftone" btw: https://en.wikipedia.org/wiki/Halftone
**Halftone** Halftone is the reprographic technique that simulates continuous-tone imagery through the use of dots, varying either in size or in spacing, thus generating a gradient-like effect. "Halftone" can also be used to refer specifically to the image that is produced by this process.Where continuous-tone imagery contains an infinite range of colors or greys, the halftone process reduces visual reproductions to an image that is printed with only one color of ink, in dots of differing size (pulse-width modulation) or spacing (frequency modulation) or both. This reproduction relies on a basic optical illusion: when the halftone dots are small, the human eye interprets the patterned areas as if they were smooth tones. At a microscopic level, developed black-and-white photographic film also consists of only two colors, and not an infinite range of continuous tones. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
i disagree...but good luck rewriting bash scripts in python with subprocess modules https://docs.python.org/3/library/subprocess.html there is another module (fabric) http://www.fabfile.org/ which simplify things
[The image was a tweet](https://twitter.com/Sentdex/status/1134631406657839104), it's not a screenshot of a tweet.
&gt; Zen of Python That's exactly why I *would* do it.
This project is really cool. If I may, I would give two tips about the `flattenList` function: 1. To check the type of an object it is better to use the function `isinstance`. 2. You can get rid of the `while` loop by writing the function recursively.
This has been the standard in Perl and other languages for a while. It can be at any position but the first. So in Japanese 1_0000_0000 is a nice round "oku." And in hex, 0xDEAD_BEEF helps you divvy up the hi word from the low word.
You can do the same in Ruby as well.
This is really awesome. I've not used opencv but I've done a lot of work with ffmpeg. If you're interested in this kind of stuff you should check it out https://ffmpeg.org/ffmpeg-all.html#caca along with libav
1. /r/learnpython 2. Here's how it works: first, we have `x and (other_expr)`. The `and` operator evaluates its left operand first, so we check `bool(x)`. If `x` is falsey, i.e. 0, `and` returns the value of `x` immediately, so we get 0 and don't care about the second operand. If `x` is truthy, i.e. non-zero, we move on to the second operand: `(1, -1)[x &lt; 0]`. This constructs a tuple `(1, -1)`, and indexes it with `x &lt; 0`. `x &lt; 0` evaluates to a boolean `True` or `False`, which are equal to integers `1` or `0`. So, if `x &lt; 0` evaluates to `True`, we take `(1, -1)[1]`, i.e. `-1`, and if it evaluates to `False`, we take `(1, -1)[0]`, which is `1`. 3. Please don't _ever_ use this code anywhere but code golf (and even then, please golf mindfully).
I think you're referring to this: (1, -1)[x &lt; 0] This creates a tuple `(1, -1)` and accesses it at index `x &lt; 0`. Now, if x is less than 0 (i.e. negative) the expression gives *False*, or otherwise *True*. Now, False == 0 True == 1 Out[26]: True
Here is my python implementation of Asynchronous Advantage Actor-Critic (A3C) algorithm for Super Mario Bros. Source code: [https://github.com/vietnguyen91/Super-mario-bros-A3C-pytorch](https://github.com/vietnguyen91/Super-mario-bros-A3C-pytorch) Full demo: [https://youtu.be/YdKz1eBv1kc](https://youtu.be/YdKz1eBv1kc) &amp;#x200B; I am quite sure that all of us know about this legendary in game industry. So, how many people have ever played through all levels? How many people have ever rescued princess Peach successfully? Personally, I find it quite hard to complete all levels with only 3 lives (of course there is a trick to get much more lives, which will not be discussed here) Thanks to the exploration of AI in general and reinforcement learning in particular, there are numerous games from classic ones like Pac-man or Sonic the Hedgehog to more recent games like DOTA or StarCraft have been learnt and played by machines, and they even outperform human in some games. In this project, I implemented a very well-known algorithm, A3C, which was released by Google Deep Mind (the AI group at Google) several years ago. A demo is worth a thousand words. Let see how my machine plays the game itself. If you want the source code, or simply just want to know what is A3C, how and why it works, link to my github's repository is provided above.
Would it be worth learning python 3 later then if there little or no difference? I don’t want to get stuck on a problem it’s trying to each because of a difference between 2.7 and 3 that’s not transparent.
Would it be worth learning python 3 later then if there little or no difference? I don’t want to get stuck on a problem it’s trying to each because of a difference between 2.7 and 3 that’s not transparent.
Would it be worth learning python 3 later then if there little or no difference? I don’t want to get stuck on a problem it’s trying to each because of a difference between 2.7 and 3 that’s not transparent.
``(1, -1)`` is just a *tuple* with two elements. Those could be accessed by *index* like ``(-1, 1)[0]`` which will result in - 1 (the element at position zero). The latter expression within the brackets is really just an index access. Its inner expression evaluates to the boolean values True or False. Both have integer values, which you can find out about via the ``int`` built-in function. So if x is smaller than 0 the expression evaluates to True, which has the integer value of 1 which will give you the second element of the tuple, so -1. The first part is just to return 0 if x is 0. Imho the expression is terribly unreadable. It would be better to write it like this: sign = lambda x : x and 1 if x &gt; 0 else -1 Much clearer to read.
TIL
The comment was probably made on one of sentdex's video. Sentdex gave context to the comment by the code underneath it. He uploaded the collage to twitter. I downloaded the picture, and uploaded the file using "reddit is fun" app which uses imgur for hosting.
I used to do a lambda expression to input and output with thousand separator commas because, I would always get confused when reading the numbers out loud. Pandas has something to deal with thousands separators too.
FYI, [Black](https://github.com/python/black) does it for you.
Well, it works for me because I am from accounting and kinda have developed the mindset for it. I never really used "e" for declaring numbers. Thanks for telling us that, I will look into it.
Hi u/gsmafra, sorry I was a little busy this week. I tried to study the output of your code and the output is like this: I noticed that the right border, reaches the 1000th row. I believe your code can be simplified like this: border_right = workbook.add_format({'right': 2}) border_bottom = workbook.add_format({'bottom': 2}) worksheet.conditional_format('A1:A1000', {'type': 'no_errors', 'format': border_right}) worksheet.conditional_format('D1:D1000', {'type': 'no_errors', 'format': border_right}) worksheet.conditional_format('A2:D2', {'type': 'no_errors', 'format': border_bottom})
&gt; Do I really need to install service pack to install python? Yes, ensure your win 7 install is patched and up to date. https://stackoverflow.com/a/33973400
it also cant be at the last position, so `1_000_` wont work
NONONONONONO. That gives you the wrong answer! &gt;&gt;&gt; 1_000_000 1000000 &gt;&gt;&gt; 1E6 1000000.0 Note the trailing `.0`. That means the answer is floating point, and that will give you inexact arithmetic: &gt;&gt;&gt; (1E18 + 1 == 1E18) True &gt;&gt;&gt; (1_000_000_000_000_000_000 + 1 == 1_000_000_000_000_000_000) False
It won't work for everything of course! But it's super useful when you're working with stuff across different orders of magnitude. E.g. somewhere in my code, I have a list of weighting factors to try, and instead of writing [0.001, 0.0001, 0.00001] I can write [1e-3, 1e-4, 1e-5], which looks a lot cleaner to me, and is easier to interpret quickly.
YESYESYESYES. Yes, that's how floating point stuff works. You do need to have a disparity of ~15 orders of magnitude though. If you have that, sure, don't use scientific notation.
You could do algotrading bot with python using some simple economic scheme/strategy maybe
Whenever we found "e" we would just multiply/divide by 10 and keep count until we got a understanding of the number. We would do the same thing for percentages but with 100. That might sound stupid to you science/engineering guys but that was kinda go to thing to do. The first thing to do whenever "e" pops up in excel is immediately format it to decimal numbers. Except for of course in doing research I will just put the "e" numbers in. But my thesis professor once copy pasted in the "e" numbers to excel than convert it to decimal to get a better idea. But I am learning data ~~science~~ analytics I should better in to using this mindset. **Thank you for making clarifications.**
I think it's a python advanced topic. I'm going to study it well. Thank you.
My pleasure man !!
Honestly no, if it's an issue just learn the python 3 way of doing things, you'll probably never use python 2, it's dead now.
But that's _wrong_. `1E6` is _not_ the exact integer `1_000_000` - it is the approximate floating point number `1000000.0`, which refers to a range of numbers from (roughly) 1E6 - 1E-11 to 1E6 + 1E-11. Don't get me wrong - I love me some floating point, but only when I need it.
&gt;especially for getting smoother output. &amp;#x200B; * Move as much as you can out of the loop (e.g. the `stty size` call, or repeated `int()` calls for values that never change). * Use `x//16` instead of `int(x/(255/16))`. It was off-by-one anyway, which is why you needed 17 chars instead of 16 as one would expect. * Do not call `os.system("clear")`, just let the old content be pushed out of the window. Simply remove that line. * Printing everything as a single multi-line string was already a good idea. This prevents a lot of buffer-flushing overhead and prevents tearing. You may save a few more milliseconds per frame by working with byte-strings and writing directly to `sys.sysout.buffer.write()`. * You copy around lists a lot. You can save most of these by doing everything in one step, using list-comprehensions instead of for-loops and scrap the helper-function that just contain 3 lines of code. Do everything directly in the main loop. The code is short enough, so that's okay. Iterators, for-loops and function-calls are expensive, compared to inline list-comprehensions. * For `order`, use a single string with 17 chars instead of a list of one-char strings. Same effect, less overhead. You can write the entire print logic in a single line if you really want to. less readable, but a lot faster (not tested). print('\n'.join(''.join(" .',:;clxokXdO0KN"[c//16] for c in row) for row in reduced), end="")
Dope
C++ [has something like this too](https://en.cppreference.com/w/cpp/language/integer_literal) since C++14, but unfortunately it uses the single quote, like `1'000'000`, which still looks wrong to me after five years...
I know perfectly well how floating point works, and that means that `1_000_000` is _not_ the same result as `1E6`! In particular, if your integer computations routinely go through floating point and back to integer without your being aware of it, then one day you _will_ get an answer that is off by one. ---- Basically, you're claiming that `1E6` is a drop-in replacement for `1_000_000`. They are not the same, and I proved it.
Yes, again, you need an order of magnitude disparity of ~15 for that to become a problem. Of course it's 'wrong' in a mathematical sense, that's how floats work. You should obviously know what kind of numbers you're dealing with to decide on what to do.
Are you sure about this? I just tried `black` on a file with the line a = 100000000000000000000000000 and it didn't change that line (and did change other lines I added just to make sure I was doing something). More, there is no command line option in the help that does that...? A shame. I use `black` to reformat all my code automatically, and this would be I suppose handy, particularly for long-ish hex numbers
We are not a windows shop and we already automate everything we can just currently that falls on one person and I want to learn enough so that I can maintain the scripts and make new ones should they get hit by a bus or something. DevOps does mean different things to different companies yes but the premise of using Python to automate things remains the same. Using Python to automate different things is just that, I'm not looking for resources on how to become a DevOps engineer as I am already one but I just want to learn how to script with it..
I don't think it does - I just tried it on `a = 100000000000` and it didn't change it (and it did change some other lines in that file). A shame, I like `black` and that would be a useful feature.
You could take any frame from that video and print it out using a dot matrix printer.
Of course it is more beautiful. It's more precise, less prone to error, easier to maintain consistency and far simpler than the abstraction too. There is literally only 1e1 reasons to use your version, and that's to inform the unfortunate reader that the writer knows scientific notation and doesn't care whether the reader does as well.
I beg to differ - `1_000_000` and `1E6` are _not_ the same thing. `1_000_000` represents a single integer. `1E6` represents a range of floating point numbers around 1000000.0. They are most certainly not the same. This isn't just academic. I do a lot of numerical work, and if you make a habit of accidentally moving through floating point and then back into integer in a calculation, one day you _will_ get an answer that is off by one. [I'd downvote you but I couldn't do that to a fellow bikelover.)
&amp;#x200B; Surely, this form is much less readable than a plain if-else statement. Thanks for your advice and a thorough explanation.
Lol. It's more precise as long as you specifically need integers. In my code, that is very rare, almost everything is a float or becomes a float. 'More beautiful', no. 'Far simpler', maybe if you're not used to scientific notation. Also, I don't write my code for any 'reader'.
Thanks! This was also confusing to me because of the similar syntax in pandas library, where you can access indecies based on the evaluation of an expression inside the square brackets.
Thanks!
That’s awesome. Looks like that scene from chuck where Chuck is talking to Orion through a computer.
Don't even let content be pushed out. Use ANSI escape (https://en.m.wikipedia.org/wiki/ANSI_escape_code#CSI_sequences) to move the cursor and draw over it. In fact, you can use a trick and just skip forward to change the changed stuff. Also you can use this to do interlacing
Make the text green and you can live in the matrix
Good to see that you discourage the use of basicConfig. It should only be used in the main module (and can be ommited here by using getLogger as elsewhere), not in imported modules.
Well, this is not python specific question. You need to forward specific port (80 or 443 for SSL) to IP of your local PC (in router settings). If needed, you need to make firewall exceptions or antivirus exceptions. Then start just your web application and give public IP [https://www.whatsmyip.org/](https://www.whatsmyip.org/) to your colleagues. You need to have "Public IP", if not contact your ISP.
I see, thanks.
First of all: Amazing project idea. You can gain a little bit of performance by a) using numpy.vectorize and a dictionary lookup rather than list index access for your conversion b) using a library like curses or pygame for your terminal output. I forked your repo on github (christiankuhl/videoAscii) in case you're interested.
1. /r/learnpython 2. It's not an error, it's intended behavior - you can't assign to strings.
Nice project, cool idea, and smart implementation. I personally don't like the use of global variables, and I don't see why not to write a class. That would get rid of the global variables, and make it more generalizable for other languages
Can you please elaborate by "you can't assign to strings." part? I'm not a python programmer and in general, I'm still learning.
Strings are immutable. You can't change one character in a string the way you're trying to do.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
What this person said. You have to make a new string and piece it together.
Appreciate it. I was looking for a simple way to demonstrate the advantage of using logger over basicconfig. In my opinion, one should always prefer using a logger instead of basicconfig in all their modules.
Are you suggesting that using floating point literals is bad practice because it might confuse users or collaborators?
Can you elaborate on how you have hooked up the ai to the game?
Or you could make your string a list of str eg: `&gt;&gt;&gt; key = "hello"` `&gt;&gt;&gt; key_list = list(key)` `&gt;&gt;&gt; key_list[0] = "H"` `&gt;&gt;&gt; key_list` `['H','e','l','l','o']` And then to make this list a string, join it `&gt;&gt;&gt; key = "".join(key_list)` `&gt;&gt;&gt; key` `'Hello'`
My fault. It doesn't do it anymore: [https://github.com/python/black/issues/549](https://github.com/python/black/issues/549)
Made a pull request because I love this code 😍. https://github.com/eebmagic/videoAscii/pull/1 Done from phone so might have issues sorry. Write tests!!! :P
The Mathematica Frontend formats numbers (input and output) automatically in blocks of three with thin spaces (this behaviour can be tuned in multiple ways by the user). No need to do anything yourself. Very convenient
I love it. Have you considered the curses library to add color? [https://docs.python.org/3/howto/curses.html](https://docs.python.org/3/howto/curses.html)
We have about 200 websites spread across 30 environments. We need to figure which ones are still using tls 1.0 and disable it. Luckily, the load balancers have this data, and is easily obtainable through the rest api. Unfortunately, 10/30 load balancers don't have the api enabled.
Wow! Just wow!
All of those numbers are already floating point, though. If you're doing integer arithmetic, stick to integers and avoid the side effects that come from floating point rounding.
Me too
Er, I didn't say anything about libraries? It's an application that comes with an embedded python interpreter and it comes with scipy and tensorflow because someone asked that they be in there but no-one uses it.
Exactly :)
I was surprised too! I have a habit of making unnecessarily long code, but since opencv is handling video input, resolution change, and grayscaling it cuts a lot.
Not yet. I move in next week but I’m super hyped.
ffmpeg is great! Does it have a python library? That would be handy.
Many of the changes between python 2 and python 3 make it easier to learn; python3 is more consistent and easier to understand—and at this point there’s no benefit to learning the quirks of python 2 because they’ve been fixed. I’d definitely recommend switching to a python 3 course.
Ah thank you! I just changed my terminal font color to see what it would look like, but that sounds better.
People were calling my gif to ascii impressive but this, this is actually fucking impressive. Good shit eebmagic
I’ll have a hunt around. any recommendations on books?
This isn't necessarily true according to the latest episode of Talk Python.
So how hard would it to take what I’ve learnt from Python 2.7 and transfer it to 3? I’m looking at changing courses, but I’ve sunk alot of time into it, and don’t want to unless necessary.
I’m not sure about books; I just learned by making things and looking up how to do it when I got stuck (so basically searching stack overflow for each line when I was starting). In my opinion you learn a lot faster when you have a goal in mind if something to build.
So how hard would it to take what I’ve learnt from Python 2.7 and transfer it to 3? I’m looking at changing courses, but I’ve sunk alot of time into it, and don’t want to unless necessary.
Yeah I assumed that someone’s already done this and better than I have, but I just deliberately didn’t look for it.
Does my masculinity offend you?
Just because one company makes a car doesn't mean no other company can make one
Source code: [https://github.com/FreshHattrick/tkinterDice](https://github.com/FreshHattrick/tkinterDice)
Scientific notation is defined to be a float. You’re changing the type.
So you've given 1 reason, what about the other 9? :P My Python scripts mostly serve scientific purposes, so I use scientific notation most of the time. My parameters are floating point numbers anyway, even though they could be represented by integers as a result of rounding (e.g. a shear modulus of `2e10` or `20_000_000_000`). If my number is a strict integer but nonetheless large, I would write `int(1e6)`. But in this community I suspect this is considered heresy, and therefore I must burn...
And this is why I love this subreddit. Big thanks, I’ve learned something new! Lmao
Thank you!
It also forces you to not change the location of your imports. That’s kind of strict, when you use it to save the state of a GUI. It means you can’t refactor or are severely limited.
They will post in piano subreddits?
In *your* code. Are there certain situations where the difference doesn't matter? Sure. Is your code an example of that? It probably is. Great. Why should anybody care your specific code? We're talking about the general case here. "Though personally, I'd just use scientific notation here" And what is "here"? Here would be the context that it's used in which you don't know, for which the difference may matter.
I used to make it to world 8-4 (the last castle) all the time, and then have time run out while I was trying to find my way through the maze. Finally got all the way through after lots of trying. FYI, you can get 7-8 lives pretty readily without any cheats or "tricks", just by knowing the various places to jump and collecting coins. I'm definitely going to check out your code and try to let this run on my machine, and read up on A3C more.
&gt; We're talking about the general case here. I'm not. Obviously. There's really not much to be said beyond that.
You need to reduce the factorial number by 1 for each iteration of your loop.
no, your bullshit misogyny does though
It also can’t be the first because then it would just be a variable.
Well, professionally I've used (in this context "used" means "I've written code for") Python for * Web app backends * Automation/scripting, and sometimes replacing older featuritis-ridden shell scripts * Special mention to in-house reporting tools, data massaging and ETL kind of stuff. * Prototyping GUI apps (Qt, but tkinter early days) Oh, and the REPL and ipython is my go-to calculator whenever possible. This is not to mention all of the software I've installed and deployed that uses Python.
Here is a similar project (not mine), but written in C and Linux only: https://github.com/jaromil/HasciiCam
This is exactly what I do in bash lol. It works because you can have bare words and quoted strings right next to each other, and they just concatenation automatically. Fun fact, adjacent string literal concatenation works in python too: ```python &gt;&gt;&gt; ‘hello, ‘ ‘world.’ ‘hello, world.’ ```
Hey JamesRustleford, I hope you have a wonderful day.
It was just a joke m8
I see... Which libraries did you use to achieve the above?
Web apps: used to be webpy, when that went (and might still be) wayside with no python3 support was replaced to bottle and flask (which I still use when starting new projects, given the chance). And of course the biggie: Django. Things like tg2 I've had to patch and set-up/deploy, but not really use as such. Automation is mostly using the os module and when databases are involved just using a suitable DB connector, psycopg2 and brethren mostly, so I might not be the best guy to answer this question in general. For number crunching, of course numpy has been involved oftentimes. GUI stuff (if we discount web GUIs) then that's only been tkinter for a really quick'n'dirty GUIs (because it's in the standard library), but anything else: PyQT and it's replacement pyside (pyside2 should be the one to use if possible.
Oh yeah that would nice indeed. But as a Kindle user, Amazon kinda does that for me already, even for books downloaded from sources other than Amazon.
I'm waiting for "Python against humanity" set
Thank you. I just came back to ask this. There is *no* example of how to develop or structure "your model" to train on. It just says "call train, then call test". How do we build our model to work with this? How did you connect up your code to Super Mario Bros?
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I felt cool reading that but DID NOT understand a single word of it! Damn, there's a long way to go!
Don't panic! Start off easy and only use things you need to get where you're going, of course people who've used python for years, I started with Python 1.5.2 (IIRC), and that's not exactly... recent. But really, use the Python command line (and Jupyter or ipython preferably) and you can try things out easily and then convert them to your automation tools. Or whatever strikes your fancy! Good luck!
Thanks You must be experienced, of you have been using it since python 1 Its hitting me now that you must be old
Look at https://ngrok.com/
"Old" is relative, of course, but I've been a systems engineer for 20+ years. But we all have to start somewhere, right?
The number of years that you have in experience &gt; my age! Yes we all do have to start from somewhere. Btw, what was your origin in this field. What made you go that made you want to have a career in this field?
this is the idea I will be trying...
I was a computer nerd early on, and a local ISP needed a technical support guy who could do Linux I got in. Where I got basic Linux chops was at high school/college, they needed students to maintain the school network and they first looked for ones that excelled at computer classes. I never thought I'd ended up this way, since I was studying chemistry at uni. Keep your eyes and ears open I guess.
Oh the fickleness of reddit... I wonder how many of the people who upvoted you for your "and girls" comment then downvoted you for this "identify as a tree" comment without even realising they were made by the same person?
Well that's inspirational, I am pursuing civil engineering and want to have a career in computer science field.
There's links to free resources in the sidebar --&gt; Also posts about learning python go in /r/learnpython
So you're stealing other people's data and reselling it? Sounds like a great business model.
The data is available online. He is not stealing unless you think Google is stealing too.
If I try and run this in python2 I get: ```python video.py File "video.py", line 20 print('\n'.join((''.join(row) for row in input_ascii_array)), end='') ^ SyntaxError: invalid syntax ``` And if I use python3 I get: ```python3 video.py QObject::moveToThread: Current thread (0x21ab750) is not the object's thread (0x223a1c0). Cannot move to target thread (0x21ab750) Segmentation fault (core dumped) ``` Anyone know what issue(s) might be?
Well, you're in luck since a lot of fields need people with programming skills these days, and it doesn't hurt to have an active interest (which you do have) in doing just that, for automation firstly, but anything related really. I'm not one to give any sort of career/life advice since well I'd be shit at it, but keep up with your classes and think where you could utilise your ever-growing Python skills. Then if you find you're really good with maths and like the abstract side a bit more, then look into CS. It doesn't hurt to look into what CS is really about, so check out the free [Harvard's CS50](https://cs50.harvard.edu/college/2019/fall/) (and the [lectures on EdX](https://www.edx.org/course/cs50s-introduction-computer-science-harvardx-cs50x)( for instance.
Gotcha, thanks!
Stealing? They post it publically. If you wanted it, you could go to the site and get it yourself, free of charge. I run an algorithm with all of the historic and present data that spits out useful, actionable data. The site I scrape is too lazy to put the time in to do that, hence my offering. But thank you, I do think it's a great business model, simply interested in others that do it. I'm sure of one particular competitor in the space that prints money but I don't want to introduce myself to them quite yet.
Some people may complain, but I really like the comment formatting for scripts posted for others to learn from. Thank you!
I was always taught to comment your code so in case you get hit by a bus, someone else can pick it up and work on it lol.
Bad ass!
Like I said it's almost exactly the same, you won't notice the difference
Or realising that I was trying to be funny...
["Learning Python"](http://shop.oreilly.com/product/0636920028154.do) by Mark Lutz. https://www.booktopia.com.au/learning-python-mark-lutz/prod9781449355739.html P.S. please [don't give your money to Amazon](https://www.theguardian.com/technology/commentisfree/2015/aug/17/why-i-am-finally-going-to-boycott-amazon), they are [abusive](https://thenextweb.com/opinion/2018/04/16/its-time-to-boycott-amazon/), they [evade paying their fair share of tax](https://www.ethicalconsumer.org/ethicalcampaigns/boycott-amazon) and they aren't even the cheapest any more. If you love books and care about authors getting fairly compensated for their work, [don't buy from Amazon](https://socialjusticebooks.org/about/why-boycott-amazon/).
I'll be sure to get this direct from the author. I'm a sucker for learning from old school textbooks. Would you say this text is appropriate for a complete newbie who's also new to coding as a whole? I like to think I'm a quick study though, and I do come from a science/analytics background.
I've been experimenting with other ASCII gradients with a bit of eyeballing. ASCII_GRADIENT_8 = " .-+o$#8" ASCII_GRADIENT_32 = " `´¨·¸˜’:~‹°—÷¡|/+}?1u@VY©4ÐŽÂMÆ"
You can remove the end=“” for python2 to work. I just have that so it doesn’t print an extra line at the bottom. Not sure why it doesn’t work for python3 though.
I know there are libs for python but I've only used the ones for Ruby and JavaScript. I mostly worked with it in c++ though.
I dunno, but I just followed the instructions on that stack overflow question and that got it working in python3: http://i.imgur.com/VN3wUIj.png
Web scraping is legal within certain bounds, and price intelligence is actually a very lucrative business model
[removed]
See you guys tomorrow when someone does literally this exact same thing.
From looking at the code it looks like that was done with a package built elsewhere that hooks up with an NES emulator written in Python. That may provide some information you'd find interesting: https://github.com/Kautenja/gym-super-mario-bros
&gt;Glad to see someone did it though. Dude this project is posted every few days. Literally just scroll down a little bit and you'll find 5 more.
I'd still prefer int(1e6) or 10**6 to that underscore ugliness.
Uahuuuuuu I want!!!!
Thanks for the pic :) It's really weird to seeing other people running my code.
Wow! There's looks much more complicated and it looks like they did it without opencv too which has to be hard.
Wow that’s cool! I love optimization problems
It works in Python in most cases, but depending on formatting and new lines you may need to cover it in a parenthesis. Works in C/C++ too (but be careful with macros and this concatenation, it's a little tricky. Also in Python: print takes input as variadic arguments, with a keyword argument for the separator. Default is a space. &gt;&gt;&gt; print("hello", "world") hello world
First off, you are not shit at the advice part. In the contrary you are one of the best people I've met on Reddit. And thanks, atm I reading 'automate the boring stuff with python'. Its a good book and watching some videos on YouTube and doing a course of python. Fully using the 3 month summer break!
Nice concept. maybe less music next time !!
&gt; similar syntax in pandas library, where you can access indecies based on the evaluation of an expression inside the square brackets. Pandas is a *library*, it doesn't have its own syntax. Any syntax which is legal in pandas is legal in any Python program, because it is the *language* Python that sets the rules for syntax. So any Python code at all can access items in a list or dict by evaluating an expression inside the square brackets. It isn't just pandas.
It's good use of a break, but don't burn yourself out! But it is a good book, and here's my reasoning why: It's practical, meaning once a chapter is digested you can immediately make use of it. Theory can come later. If that's all you want, great, it got you where you wanted to be, but... it gives enough to carry on if you want further learning, and as a starting point it's fantastic just because of that. And when you've done with the book, you've already got Python set up and you're ready for further adventures.
I would give you gold but I am broke af... Thanks for that.
&amp;#x200B; thought you may find this interesting, i came up with my own solution to this
oh it didnt post the code? if(counter!=0): i=0 for row in db(db.playerShipData).select(): print("start assigning") myShips\[i\]=Ship(row.x, row.y,row.isAlive) print("finished assigning") counter=0 i=i+1
I beat the game before by using warps both in 1-2 and in 4-2 I believe to get to world 8 and then powering my way through world 8.
Regarding predicting the turnout of your bar, I would suggest you start by building a dataset of your turnover by day (the more days you have the better), then look into using Facebook's Prophet library, then start labelling on which days you have key days (game day, public holidays, etc.) Good luck! https://github.com/facebook/prophet
Immediately goes on the attack telling people to "fuck off" over what was *at worst* a microscopically small faux pas? Check. Virtue-signalling via demonstration of humourlessness and intolerance? Check. Failure to distinguish between a silly and childish joke and actual misogyny? Check. Please reply, I need one more for Bingo.
ow, my heart
You have to put the print statement on too of the script
YouTube reencodes videos
its an emoji btw
Have u ever tried to use Emoji package ? https://pypi.org/project/emoji/
PyCharm for big projects and VS CODE for quick scripting.
If you really want to take this project to the next level, you could convolve the image with oriented filters and pick characters that preserve edges better (e.g., choosing forward slash vs backslash), or even higher order spatial frequencies.
Poor game design. Can I also play it myself?
Hardly a pro, but I use it pretty exclusively for astronomy and teaching.
Also can't be the last position, so 1\_000\_ wont work
How do you use it, by how I mean where, what are its applications in your field?