Alright, awesome, thanks!
Hey, naufraghi, just a quick heads-up: **acheive** is actually spelled **achieve**. You can remember it by **i before e**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Even though they are ditching the PySide branding, they will keep the PySide2 namespace for Qt for Python? That seems a bit weird... &gt; from PySide2.QtWidgets import QApplication, QLabel 
You're a nice person
Yeah that sounds like it will do. Are there any instructions on getting that done? I'm using visual studio code, and I'm sure its screwing up things too. 
Everyone? I am sorry but you speak for everyone now? Offend a language? You can do that now? Seriously, you have issues if you think a language can be offended. As for you, well you can go screw yourself buddy, I don't really care who you are or what you know, you talk to me as if I were an idiot I'll talk back to you that way. 
Sorry, I only dabble in programming for fun. I don't really do it regularly, and it's been months since I've used Arcade (and longer since I've used Pygame). I remember my general impression when I was learning Arcade was that it had an easier-to-learn API and it was quicker to get things up and running. The Arcade website has a [more detailed list](http://arcade.academy/pygame_comparison.html) of comparisons to Pygame that might help.
I just want to correct you on PyInstaller. It's fully compatible with Python 3. I use it all the time to bundle python 3 cli's on both windows and Mac. Looks like it was last updated in February like https://www.pyinstaller.org
&gt; the good thing is that it's officially supported by qt instead of a third party developer Riverbank Computing, the one man company behind PyQt, has had a much better and more consistent track record supporting PyQt over the years than the Qt team and their language bindings. PySide was started and then later dumped. Jambi (Qt on Java) was started and then later "given to the community". Now they are back to try Python again. 
It's got a bit better since you looked at this, because PyInstaller is actively maintained, and is the main recommended freeze tool. But the situation for distributing applications is still not great: 'freezing' an application is always a somewhat error prone and fiddly process. Shamless plug: I wrote a tool called [Pynsist](http://pynsist.readthedocs.io/en/latest/) which aims to avoid some of the issues I've had with freeze tools. It has its own shortcomings, and it only targets Windows, but I think it's a more robust starting point for distributing applications than freezing.
Ya just a simple quickstart like is in the first page of the flask website
Lately in some videos I've seen people putting it where they use it. I had never seen it like this before. 
I'm a beginner working on a map/world generator. Basic functions done, adding more realistic water generation like ponds and streams.
Just trying to make friends and have fun.
Yes, if appending to sys.path was the right way to do this, then Python's import system would suck. Fortunately, you're doing this wrong. I've been writing python for 20 years and have had to fiddle with sys.path like 3 or 4 times. Read about the difference between packages and modules and how to do relative imports.
Sorry, that was a typo. That was supposed to say principles, as in algorithms and data structures, graph theory, etc.
First of all use Python 3.
One very important thing this fails to touch on: [the bottiquette!](/wiki/bottiquette)
&gt; Now you're stuck with two styles in one project. Wisdom says you adopt the style of the framework you're using. You're the zealot here. You're the one making lazy excuses not do the right thing. 
That is patently clear. I will read up on that then. 
I used C++ while building client-side software and C# for building a backend service. I greatly prefer C++ to C# because I really rather hate stuffing everything into a class. It fails to distinguish between objects and namespaces. C++, while containing a significant amount of complexity as a language, does support multiple paradigms very well and so provides a lot of flexibility in how programs are written. Python, which I use as a server-side language, is an ok language as well. Many companies use it as a server-side language including Reddit. I find it to be flexible similar to C++ but my primary complaint is that I wish it lived up to there being one and only one method of doing things more often. That and I hate how the otherwise good documentation is organized.
&gt; PyInstaller hasn’t seen a release in the last 2 years; it doesn’t support Python 3. You are quite wrong there! [PyInstaller](http://www.pyinstaller.org/) has supported Python3 for a year, and is in [continuous development](https://github.com/pyinstaller/pyinstaller) and is currently at version 3.1. Get the current dev version, pip install https://github.com/pyinstaller/pyinstaller/archive/develop.zip which has a bunch of PyQt related fixes not in the pip install version.
Mmm not sure about scraping (did not try) but on first sight i saw that site is just GUI for http://postliste3.bfk.no//api/postliste/ So basically calling that url you will always get all data.
You're the one who came in asking a question with a bad attitude to start with. Maybe you're not a native English speaker...that often leads to people not understanding that the way they said something implies an attitude they don't actually have. But, don't be surprised when you get attitude when you start off with attitude.
Always at the top, except when you have patterns like `if __name__ == "__main__":` where you would only import things if run as the main thread
No! In fact I was not that good of a CS student. I dropped my CS classes in favor of a minor in it because I couldn’t care leads about operating systems and memory classes. It was not for me. Later I was given a chance to do this on the job and that made all the difference. I could learn at my pace (not the professors), no real deadlines, 40 hours to concentrate, google, stackoverflow, and that’s what I needed. I’ve always been good at math so the analytical thinking part I got from my other classes. The other really important thing is that on the job, you’re trying to solve actual problems not just toy “to do list” tasks. School is good for foundational learning and being exposed to a variety of topics, but it may not provide you the environment that you best learn in. I would go as far as to say I’d be surprised if it did work for you! It’s only one way of presenting information. It’s not flawed, just not universal. It’s hard to just come up with money making ideas or those that would be valuable to a company if you’re a student. So start learning about general topics like web, databases, and programming and see where it goes? Don’t be hard on yourself and if you get stuck, take a break and come back it it later. The thing that I feel like distinguished me from my coworkers is that I don’t give up and I am not afraid to try something new. Sorry for the speech...
Awesome! I want to create a bot that auto subscribes to every nsfw page on reddit
Can I ask how did you find out?
Regex is exactly what you need, look into the re standard library module. You can then do something like `re.findall('[a-z]{3}\d{4}’)` which will return a list with all your matches.
Hey, you might want to check this : [https://store.steampowered.com/app/708190/Code\_World/](https://store.steampowered.com/app/708190/Code_World/) i didn't try it myself so i don't know if it is suitable for kids. I'm interested if you find any other game using python :\).
I read somewhere (but didn't look into it too much) that this was pretty good for teaching kids programming using games: https://love2d.org/
This is very important ^
It was hinted at before but NamedTuples, being tuples, are ordered thus I like to use them when list unpacking would come in handy, e.g. a function that returns two or three related pieces of data but want the code to be more self-documenting than just a tuple or yielding records parsed from a file. Before discovering the attrs class a little over a year ago I used namedtuples in cases where attrs or dataclasses would have more sense because ordering didn’t matter and I didn’t need immutability. 
Fine I'm sorry you're right. However I just spent like 3 hours yesterday trying to get that to work. Google only gave me dumb answers about it and I didn't understand what it was that the documentation was saying. Regardless, I don't care about downvoting and to be quite frank getting offended because I called a language stupid or one of its features stupid is just foolish. 
Why not use Docker?
So i used to be in the same boat as you, I always wondered why people would do venvs. Until I started doing more "project" based programming. If you are writing your own stuff on your own box, and not exporting it or running it on cloud servers, there isn't much to be desired with a venv. The day you start working with django, or working on a vps; you will fall in love. If you are doing any sort of project with more than one developer, it is much easier to segment your personal python library (site-packages, etc.) from the project's library. It pretty much ensures everyone has a baseline package, and all the libraries that are needed, will be there. (if set up correctly). Hope that helps. 
look at how to use timers. you could start a timer at the time you start waiting for user input and once timer elapses, you can reset the input, throw an exception or anything else.
My experience is the same. When Nuitka worked, it was a really nice and fast compiled executable. I was not successful in compiling once I included GUI and DB access frameworks where PyInstaller worked.
Only time I’ve ever see circular imports are in bad flask tutorials that don’t use app factories.
r/learnpython
As a developer that uses PyQt5 for small business programs and fast-to-deploy projects, I am really looking forward for Qt for Python.
This is actually surprisingly tricky, and there are a lot of moving parts. The essence of the solution is that you want to do *non-blocking* reads until you either have enough data, or too much time has passed. Here's a working example: def get_n_chars(n, timeout): fd = sys.stdin.fileno() old_settings = termios.tcgetattr(fd) old_flags = fcntl.fcntl(fd, fcntl.F_GETFL) tty.setraw(fd) fcntl.fcntl(fd, fcntl.F_SETFL, old_flags | os.O_NONBLOCK) data = "" t = time.time() try: while (time.time() - t &lt; timeout and len(data) &lt; n): if fd in select.select([fd], [], [], 0)[0]: data += sys.stdin.read(1) finally: termios.tcsetattr(fd, termios.TCSADRAIN, old_settings) fcntl.fcntl(fd, fcntl.F_SETFL, old_flags) return data The key parts are the `fcntl` lines which turn on/off non-blocking reads for stdin, and then the `select` line which checks if there's any data to read. Actually this also works if instead of `select` you do something like: try: data += sys.stdin.read(1) except IOError: pass Someone with a little more knowledge of linux system calls and internals would have to chime in on whether there's a reason to prefer one over the other.
A circular import problem is a symptom of a design problem, it shouldn't be band-aided by importing in a function.
Um, I just meant it for the pun. This is all ridiculous pseudocode, so I don't impute intention on any of it, but whatever I guess. 
Thanks, I had a look at your library and it seems like a promising solution for multi\-threading in python. I'll be keeping an eye on it. I have a personally library for threading in python but it is very rough, no where near the potential of your library, but it does provide good thread control, hell I even managed to hack together an interrupt function for it. The interrupt function snippet can be found here: [https://github.com/HOWZ1T/python\_snippets/blob/master/thread\_interrupt.py](https://github.com/HOWZ1T/python_snippets/blob/master/thread_interrupt.py)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [HOWZ1T/python_snippets/.../**thread_interrupt.py** (master → 254ef1d)](https://github.com/HOWZ1T/python_snippets/blob/254ef1ddf2e2d9577d3301e30a7fe116ce2149e9/thread_interrupt.py) ---- 
Only thing to consider with Qt is licensing. It's a lot more restrictive.
I knowingly was quoting an old blog post. Even have a reference
Importing in a function isn't any slower unless the function is called a lot of times. Putting them in functions is a good way to avoid requiring excessive dependencies. In general though, at the top and sometimes inside `if __name__ == '__main__'`
How would I modify this function so that it did not return data until the pin had been entered? rather than returning an empty value after it times out?
because I'm ignorant and now I am using pytest and it has made my life so much easier.
https://dask.pydata.org
Right now Im making it easy for our data science guy to run queries against data in BigQuery, all from the command line. I just finished up two projects where I automated API pulls, transformed the data, and then push it into a database. They sound like easy projects, but when one of the APIs I pull metrics from is a complete nightmare, it means you have to code for every damn issue the API has. 
It is suitable for kids. There are a few differences between its syntax and current Python 3.6.x’s, but it’s mostly the same.
This looks like the controller part of it, is there some code that runs on the child as well? Anyways, this is the first time I've ever heard of an interrupt, and it already looks like a bad idea. ZProc doesn't use any synchronization promitives you might be accustomed to, there are no locks, mutexes, semaphores etc in the implementation. It works purely on messaging over a zmq socket. Here is what it does provide for synchronization purposes. I have a feeling You'll really like this. http://zproc.readthedocs.io/en/latest/source/zproc.html#zproc.zproc.ZeroState
i switched to python 3 at home, not yet at work. all i have to do is add parenthesis to my print statements and literally all my other functions work exactly the same. i think in some scientific cases other developers will have the same experience because the tasks we want to accomplish are so simple and don't require monolithic classes. however, i don't work with gui's so i can't comment on that case
Does this work with 2FA enabled to log in or would this need to be disabled? 
Oh yeah, dask.. forgot that's a thing.. I made ZProc to be suitable for all kinds of things, not just data science.
Try 'winpty' before sqlite3. Let me know if that makes a difference.
[Here's some help from SO.](https://stackoverflow.com/a/37754510)
I’ll keep that in mind too! I’m not making anything crazy, just learning how all the stuff works
Focus on concepts and principles, not a particular language. Since python is multi paradigm, I would suggest you pick a statically typed language. If you are interested in game development, why not try c++ or c# ?
Thanks about your answer! But don’t you think I should learn C and then move on to C++ and C#?
Call the conference and see if they'll bend the rules for you. Otherwise remember the golden rule of programming: it's ok to fail as long as you learn something from the experience.
I would go the complete opposite lol C# will be the closest to Python, followed by C++ and then C is a different beast altogether
Any bundle that has the 6 month license of PyCharm Pro. An additional 6 months of payments (like $50) will get you a perpetual license for about 50% of getting it without the bundle. So that is either the $15 or $20 bundle, and you decide if the extra $5 is worth the additional content, which it is if you have none of that stuff already. It’s a decent bundle, but for me it was the deep discount on PyCharm that was the deciding factor. 
good bot
They are looking for volunteers, so I'd offer your services, though you will still need to pay. I'd email pycon-reg@python.org and ~~beg~~ ask really nicely, worth a try. I've found them to be really nice people. If that doesn't work... enjoy a week in Cleveland?
Generally, yes, but there are exceptions.
Usually, there is no concept of "door sales" for the conferences. There is big preparation job to get all things done. Space allocation, chairs, meals, badges to print, etc. So this is physically not possible to make a good event without knowing how much exactly people will come. So, it is better for you to try to reach organizers as soon as possible. Maybe they will find a way to help you.
GPL tries to be "infectious". If you have package of GPL code, and you integrate it with any other code, then the license says that the whole thing, now being dependant on GPL code to run, needs to have the freedoms of the GPL license as well. LGPL is a little less viral; it says if you keep the LGPL code you get packaged and separated nicely (like as a library) and just "use" it like a library (only 'linked' for compiled languages) then you only need to have that separated library of code with the GPL freedoms, and not the rest. 
2 things: You may be thinking of /r/learnpython or you may have switched to the new reddit (Beta?) layout which apparently nukes the sidebar in some subreddits.
Switching back to the classic version solved the issue.
It's alright, there are always quirks of languages that can be tricky to get your head around. Glad it's working now though. To reply to your last remark, I don't think people are getting offended; they're using the down-vote as a mechanism to say "not a great comment". If I said "I think Python's approach to X is poor, here is why", there's a lot more critical argument to go on, and people could then respond. If instead I wrote "Python is bad / does X badly" without evidence, other readers can't really address my qualms, so all that is left is to down-vote. That said, people do use down votes to express personal opinion to, so it's not a clear divide.
Stuff that I'm automating: Monitoring. You can write all kinds of scripts that check things and send out notices, if they fail. Just one example, I automated a system that checks for a backup, then takes a virtual machine and restores the backup there. So in in unlikely case, the main database of the company fails, there's a working server in a virtual machine that is available as a replacement - and the quality of the backup is checked. If any part fails, and error is raised to the global monitoring. Processing: One example: Non IT people out in the field send in data in excel files by email. The python program tried to understand the excel files and extract the data - and it if fails, it asks for human help by forwarding the attachment to someone else. Messenging: I'm slowly building my own personal assistent, that can reach my via a messenger service. This python program checks my various email accounts and stuff like my landline phone logs and decides, if any of those is important enough to send a message to my phone. TL;DR: Python is great to interact with all kinds of data sources, so whenever a business workflow comes along that is somewhat digital (where humans do stuff on computers) chances are, you can automate it in Python. 
Any old key-value store should do the job, might be worth storing the data in parallel as a flat file for offline processing and backup purposes (i.e. you can replay the data in the flat file to rebuild the key value store).
I think there is a bigger problem than Conda not working. Looking at you, 'ol Windows.
don't hate me :) I'm a unix user mostly
Oh I won't :p (or will I?) I used to use Windows a lot, until I went to uni and learned about good operating systems. Thoug Windows is still good for gaming.
Tell the mods to add it in the redesign.
Thank you for this. 
No such thing
Lookup bitwise operators for the &amp; and &gt;&gt; parts.
If you're just starting, nothing in the bundle is really worth it. It's better suited for intermediate developers with some experience.
This is really advanced stuff so here we go: def partitions(set_): if not set_: if set_ does not evaluate to true, eg it has no value (None, empty string etc). yield[] intermediately give an empty array back, this is a generator thing. Basically the function pauses execution here until `next` is applied to it again. (see https://jeffknupp.com/blog/2013/04/07/improve-your-python-yield-and-generators-explained/) return Once the `next` is applied the function is now truly done. for i in range(2**len(set_)//2): loop until 2^(length of set) with integer division by 2 (https://stackoverflow.com/questions/1535596/what-is-the-reason-for-having-in-python?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa). Powers have precedence over division usually. parts = [set(), set()] for item in set_: parts[i&amp;1].add(item) If i is even take the first one in parts, otherwise the second one. i &gt;&gt;= 1 bitshift i to the right I think, this similar to `/2`. https://stackoverflow.com/questions/141525/what-are-bitwise-shift-bit-shift-operators-and-how-do-they-work?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa for b in partitions(parts[1]): apply partitions to the second list in parts recursively (eg redo this function just with the second list). and then for each resulting item do the following (eg it evaluates all yield statements because for calls next under the hood). yield [parts[0]]+b return the first list + whatever was in the result of the current iteration from the recursive call def get_partitions(set_): for partition in partitions(set_): yield [list(elt) for elt in partition] this just makes a list of everything in the partition Well I learned some things from doing this at least. Didn't know about integer division for example. Hope it helps. 
Just call the function repeatedly in a `while` loop.
The only inline import I ever use is `import pdb`.
Fine with me. Those that need their hands held all the time won’t make it far in the industry 
I got one! From a sysadmin role, when I started at $job, they told me that the team got these 9 emails every day, each of them containing two attachments. Each of these attachments needed to be saved to 2-3 different locations on the network, each one slightly different. These attachments were reports of the results of the previous day's backups. So we definitely need these to be saved for auditing purposes. After figuring out where the attachments were generated (the backup servers themselves) I wrote a Python script that reached across the network to grab them from where they were generated and put them where they needed to be stored on other network drives. It's now been running for almost a year. I check the logs every now and then to see if something broke, but it's still going strong. Oh yeah, I put in tons of logging statements so it'd be easy to figure out if something went wrong. IMO I _should_ have those be emailed to the team, but am too lazy ATM to set that up.
I'm sure there are many image manipulation libraries for python but it might be worth it to look at opencv. There's a great python implementation and it has many tools for automating image recognition and analysis. 
That ZeroState system is my favourite thing, who knows but that might be the become the new approach as to the old start, stop, and interrupt. I understand your concern of interrupts and rightfully so, however interrupts aren't a bad thing if used properly. For example most OSes make use of interrupts whenever a peripheral is plugged in to load up drivers etc.
like a female with good looks who cooks and cleans
Really, really sad try. 
That pretty cool dude. Does the username aspect allow you to come back to the webstie and login with that username? Or do I have to constantly keep the web app running?
Neat. Do you store user names in a database, or was the user name "test" just left in on the server side as a taken name?
Nvm it saves the user on that device!
C/Java programmer is uncomfortable with dynamic typing. Decides to change language rather than mind. Film at 11.
I already know the basics and logic, sort off. I know/knew TCL many moons ago and worked with Egg Drop bots, and have dabbled in a few other languages. Just looking for some structured learning, rather than just fiddling, which is what I normally do.
Ok, thank you dude.
What's on the backend? Flask? 
Thank you. I did not find this answer. It works pefectly.
If I add type annotations to my code will it break when exciting in python &lt; 3.5 ?
I didn't change the language, Guido van Rossum did.
I was recently able to finally build an application only in 3.6. Type annotations everywhere, liberal use of f-strings, a sprinkling of async/await functions where appropriate. It was fantastic. The ergonomics of Python are _greatly_ improved by these features, and type annotation was one of those that was definitely a big help here. I use Sublime Text with the Anaconda plugin (unrelated to conda), and it is able to pick up those type annotations easily. It makes the autocomplete experience so much better.
I believe it will.
They should just get rid of python 2 ffs, I'm tired of not being able to use new functionality to keep my code compatible
Nop. Usernames are stored in cookies. Cookies expires after a peior d of 2 weeks. So you can login with the same username on the same device easily :)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [OmkarPathak/Django-to-do/.../**settings.py#L23** (master → f2d507b)](https://github.com/OmkarPathak/Django-to-do/blob/f2d507bd90aa52e96585f7e45e16bdf04f67a86f/todo/todo/settings.py#L23) ---- 
FYI this code is from 6.00.2x MIT -- https://www.edx.org/course/introduction-computational-thinking-data-mitx-6-00-2x-6
Great article, thanks !
Who are "they"?
Hear, hear. But then you'll get people (i.e. those on RedHate) who can't upgrade (because building your own python is impossible) complaining because their vendor refuses to upgrade. ... not that you should be using the vendor Python, anyway, as that's for other vendor packages and not for development. But I digress. It's the same situation when Apple removes something from their devices and replaces it with something more modern. Everyone complains for a few years and then we can't remember what it was like the old way (floppies, CDs/DVDs are the big ones these days; soon the headphone jack and USB-A will be on the same list).
I recently used pyinstaller to make an executable for a small utility for friends and mincrsoft and several other antivirus brands (according to virus total) mark it as a Trojan. That's a pretty big issue for the most recommended tool. 
&gt; Luckily, since Python 3.5, type-annotations have been officially added to Python It's funny how these newbies completely miss the fact that mypy - Python's external type checker - targeted Python2 initially and still works with Python2 by using type annotations in comments. It's the same sort of nonsense as Unicode support that some people are convinced appeared with Python3...
Glad you like it!
Haha...yeah...
Yes and No. Type annotations are supported since Python 3. *However*, the `typing` module only exists since 3.5. But there is [a backport](https://pypi.org/project/typing/) that supports anything from 3.3 above
I mentioned (a bit) about it, but yes you are correct, very important!
pretty good idea, ha ha. and then cross posts the content?
to be honest I'm not quite sure. Maybe you would like to test it out and report your findings?
In my case, co-workers and bosses
Yes, they include the code in a zip file students can download for the space cow problem set. They say that they originally took it from codereview. Apologies, should have properly cited in the first place. Also, I have indeed transported them space cows back to where they belong.
Thank you!
&gt; You can’t break the code by adding them. def foo(a: bar): ... pass ... Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; NameError: name 'bar' is not defined Happens quite frequently that you have code that works in mypy, but fails executing in Python or the other way around. &gt; They have no effect performance-wise. Type annotation will require importing modules that you wouldn't need to import without it. However there is now a workaround (quote the name and import in a dead `if`): if False: from bar_module import bar def foo(a: 'bar'): pass &gt; You may add them only where you see fit This doesn't really work so well. mypy will default unknown types to `Any` (i.e. the type that isn't checked), those `Any` can very easily end up spreading all over your code making type checking largely useless. Even if you try to type annotate everything, you'll still constantly end with `Any`, as you'll be using libraries that don't have full type annotation themselves. Running into issues that you'd think type checking should have caught, but didn't, happens quite often. All that said, type annotation is great, but it's not quite the magic bullet that will catch all your typing errors, at least not yet. Things might improve when more libraries use type annotation.
Thank you, WizzieP, for voting on GitHubPermalinkBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Thanks a lot for the detailed answer! Clears up a lot of points I was confused about. I am still not entirely clear on some parts, so I'll use your answer and try to further my understanding on my own (as far as that's possible). I hope you don't mind me coming back with a few follow-up questions! One that springs to mind immediately is: Why use those bit-wise operations in the first place and exactly happens when i &gt;&gt;= 1 is called? I plugged in a few print statements in the function call but I'm still not quite sure what happens and what the point of it is. Cheers man/woman, much appreciated that you took the time to pass on your knowledge. :)
&gt; Happens quite frequently that you have code that works in mypy, but fails executing in Python or the other way around. This can also be worked around by quoting the type though, or am I misunderstanding your scenario?
Try r/learnpython to get help getting started. Also, please ask clearly articulated questions. I have no idea what you're actually asking here.
&gt; i &gt;&gt;= 1 &gt; bitshift i to the right I think Just to add to this, I assume the addition of the equals sign also denotes assignment here? ie if `i += 1` is equivalent to `i = i + 1`, then `i &gt;&gt;= 1` is equivalent to `i = i &gt;&gt; 1`
Rapid prototype or simple project _portability_: `Tkinter` probably comes with Python, which is very important for no-package-manager-Windows (what year is it?), or macOS which doesn't have one by default and is kinda finicky. If you're a Linux distribution that doesn't make Python depend on the Tk package or bindings, it probably doesn't matter given how easy it is to `sudo pacman -S tk` or `sudo apt install python-tk`.
I think they use `&gt;&gt;= 1` instead of `//2`, because even though they do the same thing, bitshift matches the semantics better. `i &amp; 1` evaluates to the value of the rightmost bit (0 or 1), so we put the value in the right bucket for that bit, and then shift that bit off the integer, then process the new rightmost bit in the same way.
In my humble opinion writing docstring style type annotations is even better than using the syntax, because now you've stated the type in a singular location which serves two purposes. Your types are expressed cleanly in your documentation, and Pycharm can perform [introspection](https://www.jetbrains.com/help/pycharm/using-docstrings-to-specify-types.html). I cannot emphasize how powerful this feature is. Combine this with Google style docstrings to beautify your source code and documentation, as well as gain all the introspective features described in this article... all in one place! I do not know if docstring introspection is available in other IDEs like Visual Studio, so I'll ask the audience, does any other IDE support docstring introspection? 
The benefit of the new syntax in regards to your points is that it is now the official standard of specifying types. 
Bad bot
Thank you, colloidalthoughts, for voting on CommonMisspellingBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
At the end of the human world, you will be baked. And then there will be cake. *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
I addressed the 1. Can you please have a look!
I suggest the aws t2.micro instance (we call em work-potatoes), small and free to run a single one for a full month. Linuxbased so you get the cron goodness. Can run python2 or 3 depending on what you need. Takes like 3 minutes to spin up and you only pay for outbound traffic (and even that is basically free unless you plan to shift gigabytes around) If you want to go serverless I run a bunch of my apis etc over aws api gateway and lambda, which is also free up to I believe 1kk calls a month. (I use a mix of chalice and serverless to spin those up depending on what exactly I need) But potatoes are also totally capable of running a flask plugged into django next to lightweight calc and query jobs. I have not dabbled with microsoft/ibm versions of these kinda things, but when I tried to set it up on google I got very frustrated very quickly... might just be me being used to aws, but since I use it for work I also use it for all my private stuff, whether it's small cron triggered jobs, continuous scraping or whatever else I might need. I think my most expensive month was like 10$ because I forgot to shut down two potatoes I was using for testing. What I like most about aws is probably their boto library, simple because you can do everything inside aws with one very, very well documented lib. And neither the t2s nor lambda limit you in any way library wise.
It works fine with quoting. I was just responding to the "You can’t break the code by adding them.". While the type annotations aren't checked at runtime, they are executed by Python, so you can do: def bar(): while True: print('1') def foo(a: bar()): pass And you'll get an endless loop. This is going to be fixed in Python4 or via: from __future__ import annotations 
Good points. Thank you for your comments
I'm in the very fortunate position that I get to decide what version of Python our code runs on at work, which means we're on 3.6. It also gives me a certain amount of anxiety, because I'm so ready for PEPs 563 and 557, as well as `datetime.fromisoformat`, but I can't use them yet.
How much money does pycharm spend on medium articles? I feel like some large fraction of the articles posted here make sure to repetitively praise it.
with above info It's really difficult to suggest anything. Maybe more details might help to understand.
I wish they'd pay me. It's probably like that because they have a good product they give for free.
I’m waiting for pylint support
Turns out if you make the best available IDE, with excellent tool integration, people use it, and it's relevant when they're talking about integrating tools.
Oh wow, that sounds nice. Could u elaborate on that? Are there biomes and how exactly do you generate them? Is the map procedural? I've started working on a small game as a hobby project and world generation is the one thing I can't find how to start on. I did try simplex noise and then designate each block a texture/biome according to the value returned from it's coordinates but the noise is far too noisy, there's no regions beloging to each other, more like random patterns of textures.
&gt; This doesn't really work so well Using it in random places doesn't. Using it in your underlying libraries but not bothering with it in your top-level code does. That's basically how we use it at my company - everything you're going to need to import elsewhere gets type annotations, but places like `__main__` REALLY don't need them.
The only compiler that works for compiling cpython exists solely in Guido's brain. Come on, everyone knows that!
Another advantage: You can use [`sphinx-autodoc-typehints`](https://github.com/agronholm/sphinx-autodoc-typehints) together with
As someone who programmed in Python almost exclusively before type hinting came around, I'm a big fan of it. I think it makes pretty close to the optimal trade-off, keeping dynamic typing but allowing for something fairly close to static typing where it makes sense.
I suspect it's just viruses using pyinstaller to package their malware and the companies got lazy and used pyinstaller as the signature. The one thing I thought was rediculous though when I was looking for more information to see if I bundled it wrong I found a bug report filed with pyinstaller and they basically said "not our problem, you contact the antivirus vendors and have them fix it." Which seemed kind of dickish to me considering we could submit our sample projects to be white listed but pyinstaller working with the vendor seems like it would have a more significant impact with their inside knowledge. 
I don't mind annotations, but I fear people will overuse them and that will restrict duck-typing. In the first example: def hello(name: str) -&gt; None: print(f'hello {name}') `name`does *not* have to be a string for this function to work. Why restrict it? I know it's a dummy example, but I feel this is what will happen in real code.
&gt; This doesn't really work so well. mypy will default unknown types to Any (i.e. the type that isn't checked) You can disable this behavior: use the `--disallow-any-unimported` flag. There are several other flags you can use to disallow the use of 'Any' in various places: [more info here](http://mypy.readthedocs.io/en/stable/command_line.html#disallow-any-flags). The only downside ends up being that disallowing nearly all uses of 'Any' often ends up being too restrictive: using untyped libraries can lead to tons of warnings, validating user input requires you to work with data of potentially unknown type... What you can then usually do is shove all of the code that needs to work with dynamic values into a small handful of modules, make sure to add loads of runtime checks in those modules, and relax the 'Any' prohibitions for just those modules by setting up [per-module configuration flags](http://mypy.readthedocs.io/en/stable/config_file.html#per-module-flags) within your mypy.ini file.
I'm not saying annotations are bad. But a good half the article talked about how type annotations allowed auto completion in an IDE. Seems like the IDE just isn't set up correctly or something because I'm getting completion suggestions without any annotations.
I like that idea, thank you. I'm using SQL Alchemy and your idea sort of follows the same style.
LMAO this is golden hahaha
Function annotations were a part of Python since Python 3.0 -- so, over a decade ago. They were initially added as a sort of experimental "hmm, maybe our users can do something useful with this": basically, adding syntax but no semantics. [PEP 3107](https://www.python.org/dev/peps/pep-3107/) has more details. But after about 8 years, function annotations weren't really seeing a lot of use apart from type checking, so the devs decided to standardize that and outlined the expected semantics within [PEP 484](https://www.python.org/dev/peps/pep-0484/). (And then to make type checking more fluid, later added [variable annotations](https://www.python.org/dev/peps/pep-0526/) in time for Python 3.6.) And of course, it'd suck if you couldn't typecheck Python 2 code, so the PEP recommends that all type checkers also support a [comment-based syntax](https://www.python.org/dev/peps/pep-0484/#suggested-syntax-for-python-2-7-and-straddling-code) for adding types. Mypy [supports this syntax](http://mypy.readthedocs.io/en/stable/python2.html), for example. The typing module itself is also available as a backport for Python 2.7+. So tl;dr: 1. You can add type-check all Python code from 2.7+ if you add type annotations using the comment-based syntax and install the 'typing' backport as necessary. 2. You can safely use the function annotation syntax if you only need to support Python 3.0+. 3. You can safely use the variable annotation syntax if yu only need to support Python 3.6+. 4. "type annotation" != "function annotation".
Is MyPy getting active development these days? For a long time it looked like an abandoned research project. 
I really want to like them, if only for better autocomplete, but they get real verbose real quick. Even with type aliases. They're also real limited in application, we can do `issubclass(thing, List[int])` -- high you shouldn't be doing anyways, but makes sense in certain contexts (e. g. dependency injection) -- presumably because that's complicates subclasscheck and isinstancecheck. You can't also retrieve parameterized types through get\_type\_hints, you have to do an additional song and dance routine. This has consequences for code generation tools. 
Stackoverflow 
Honest question: can't you integrate that with one of the python Language Server Protocol implementations? I know the LSP allows for refactoring (or code actions). Is the Language Server Protocol not enough? By using LSP you you automatically get supported by other editors.
Nice. You should post it in r/learnpython too
Just to give a different perspective on this, I've tried using type annotations and mypy in a project and I ended up really hating it. It felt like the worst of both worlds: the tedium of having to annotate types, without the solid guarantees of a static type system. The fact that annotations are not checked at runtime is an anti-feature. If I annotate a function's parameter as `str`, what I want is a guarantee that when we enter the body of that function, the parameter will be a string. If a tool like mypy can figure that out statically, great! But if it can't, I would like to have a runtime check (except that's potentially costly). That wouldn't be so bad if I could trust mypy's static checks, but I don't. By default, it doesn't check unannotated functions, you need to use a flag for that (why?) It doesn't seem to implement a sound type system either, given that it won't complain when you feed a variable with type Any into a function that expects a concrete type. Unfortunately, Any is the return type of every unannotated function, so a lot of them are going to creep everywhere, unless you use `--strict`, I suppose, but then you have to annotate basically everything. It probably depends on what you are doing, but in my case I felt writing type annotations wasted more time than it saved. 
I don’t use annotations, would this just be a warning? If so, I guess it’s then on the part of the programmer to choose if they ignore it or whatever.
afterall its a great work !
I don’t think this could have been made any better.😀 
At some point people will want to enforce annotations at runtime, at least for testing. Also the point about duck-typing is, there is no way to know in advance what type could be used, so `Union`doesn't really solve anything. You could use `any`, of course, but then you don't really need annotations :)
Do you really want to start having your (correct) code outputting spurious warnings?
Python For Everybody Learn Python The Hard Way Python Programming: An Introduction to Computer Science
It is definitely in active development, with quite a lot of activitiy in the [official repository](https://github.com/python/mypy/commits/master) and [gitter room](https://gitter.im/python/typing). My impression is that it is in heavy use at dropbox, and a lot of the core maintainers are employed at Dropbox as well, including Guido.
This is why I made this post, I love this answer. Because i'm the only person in my office working on this kind of stuff I don't get to hear other perspectives very often. I used the "find_by_id" example just for simplicity, i'm not scraping exclusively by ID, but that is a good portion of it. Thank you for your answer. After reading a few of these comments, I almost feel stupid for considering writing a "catch-all" method. I'm pretty sure that's Zen of Python touches on that a little bit.
Is there any way to specify something like an abstract base class? in this example probably "anything that either is a string, or can be made into a string with `str()`" (which would be basically anything, but still). 
I agree that this feels like an omission in the current ecosystem. Personally, I'm awaiting some improvements to the runtime type inspection capabilites of static typing. ``TypedDict`` instances should be introspectable, but they are not, as at runtime they are regular instances of ``dict`` without any meta-data. I wonder why the mypy team does not invest more in the runtime aspects of typing, such as ``typing_inspect``. If [this issue](https://github.com/ilevkivskyi/typing_inspect/issues/19) gets resolved, you could build something in conjunction with the ``schema`` package in order to generate and evaluate schemas. @ilevkivskyi has it on the roadmap though. This is one of many interesting applications, if we had more capabilities. The most useful runtime related tool is ``monkeytype``.
[Here is an example](http://astrality.readthedocs.io/en/latest/api.html#astrality.actions.RunAction) of such type annotations being used in API documentation, for anyone wondering how the result looks like.
Yeah, screw all those servers running Centos 6, amirite!
Compiling your own python in these cases wouldn't fix anything, because it would still be incompatible with the other vendor libraries. 
I wouldn't worry about it. I often come back to code I wrote for some task and immediately observe that it could be vastly cleaner / simpler by restructuring it. I find in general the [rule of three](https://en.wikipedia.org/wiki/Rule_of_three_(computer_programming)) (rule of thumb, mind you) is quite useful.
It doesn't, only when you run a linter over it.
Haven't seen any code that does that, except in the uncommon case when you *really really* shouldn't pass anything else than the annotated type. 
I hear ya, and appreciate the advice/feedback. I like the "Rule of 3", I had never heard of it before.
In some cases the types of things can be inferred unambiguously. But there are cases when only explicit type hints will give you annotations. 
Hmm, looking at the commits, there was a big gap around 2014. Nothing for about a year. Must have been looking around then. Good to see it going again. It hardly hung together back then. 
I had to use this online (free) textbook for my class: https://automatetheboringstuff.com 
Please share the code you tried, I would love to help
I'm actually not super happy with the look, it's a bit busy with those borders. It might be good to add some CSS to hide borders and background while adding underlines.
That makes sense! I have recently started using the `-``-warn-unused-igno``res` option in order to get feedback on when new versions of `mypy` allows me to remove `# type: ignore` comments which are made redundant by improvements to `mypy`. It happens with every new release, a good indication of its constant improvement :\)
OK - I've been staring at this for about two hours and I think I finally, more or less, understand what's going on here. This is a very deviously-written function! Apologies if I say things you already know, I'm just starting from the beginning so I can get my thoughts in order. First, the `get_partitions()` function is just a wrapper that converts the output of `partitions()` from sets into lists - the main logic is in the `partitions()` function. We can see this by cutting out get_partitions() entirely, eg: a = set([0, 1, 2]) for i in partitions(a): print(i) When we run the above, a list of sets is placed on each line (You can tell they're sets because they use curly-brackets '{' instead of square-brackets '['). If we replace the call to `partitions()` with a call to `get_partitions()` instead, we get a list of lists instead. So there's no important difference. So onto the `partitions()` function. This is a recursive function (it calls itself). If you know how recursive functions work, you'll know you need a base case and an ordinary case - for our function, the base case is covered by the three lines at the top: if not set_: yield[] return `partitions()` takes a python set, and our base case happens when that set is empty. (In python, empty things evaluate to false, meaning `if not set_` is the same as saying 'if our set is empty'). So here we're saying, 'If this function is passed an empty set, yield an empty list and then stop'. The fact that this function is a generator - it has 'yield' instead of 'return' - makes this all a bit harder to reason about, because the totality of what the function is giving back is hard to see all at once. In this instance, I'm not actually sure what the 'return' keyword is doing here - I think it might be redundant because my code seems to run fine if I comment it out. But anyway. We've covered our base case - the function hits bottom when it gets an empty set. Now let's look at the body, where the real brainache comes in. for i in range(2**len(set_)//2): parts = [set(), set()] for item in set_: parts[i&amp;1].add(item) i &gt;&gt;= 1 for b in partitions(parts[1]): yield [parts[0]]+b In words, here's what this is doing: **Given a set S, partitions() works out every possible way to split it up into two sets T and U (where T is non-empty), and then for each of those ways, yields the sets T unioned with partitions(U).** That's a difficult thing to parse mentally, so let me try and break it down a bit. for i in range(2**len(set_)//2): For a set of size n, [(2^n) is the number of subsets with zero or more elements](https://math.stackexchange.com/questions/546414/what-is-the-proof-that-the-total-number-of-subsets-of-a-set-is-2n). For our purposes, we only need to care about half these subsets, because every subset has a complement (opposite), so if we're splitting `set_` into two we only need to do it (2^n)/2 times. parts = [set(), set()] `parts[0]` and `parts[1]` are going to be the two sets that we split `set_` into. `parts[0]` will always end up being non-empty - `parts[1]` may or may not be empty. for item in set_: parts[i&amp;1].add(item) i &gt;&gt;= 1 This is the hardest bit of this code to understand. Here's a version rewritten in pseudocode that might be easier: j = i for every item in set_: if j is even: add item to parts[0] if j is odd: add item to parts[1] j = j // 2 (Notice I've rewritten that weird `&gt;&gt;=` thing as an integer division, `//`, since they're equivalent, as /u/DontBeSpooked-Frank said.) This is an algorithm for distributing the items in `set_` between `parts[0]` and `parts[1]` in a way that is unique for a given value of `i`. To see how it works, consider an example where our `set_` has four elements. First, `i` is zero. This means that `j` is also zero, and stays zero for every item in the set (because 0 // 2 = 0). So all items go into `parts[0]`. Then, `i` is one. This means `j` starts off as one for the first item and then goes down to zero for the other three items (because 1 // 2 = 0). Then `i` is two. This means `j` starts off as two (even) for the first item in `set_`, then goes to one (odd) for the second item in `set_` (2 // 2 = 1) and then goes to zero (even again) for the last two items. i | 1 2 3 4 --|------------------- 0 | 0 0 0 0 1 | 1 0 0 0 2 | 0 1 0 0 In the above table, 1-4 are labels for the items in `set_`, and the 0s and 1s represent whether each item goes to `part[0]` or `part[1]`. Filling this out for all values of i from 0 to 7 (since 0-7 is `range(8)`, 8 being (2^n)/2 for n = 4) we get: i | 1 2 3 4 --|------------------- 0 | 0 0 0 0 1 | 1 0 0 0 2 | 0 1 0 0 3 | 1 1 0 0 4 | 0 0 1 0 5 | 1 0 1 0 6 | 0 1 1 0 7 | 1 1 1 0 You might notice that these are just backwards binary numbers. I'm sure someone clever came up with this algorithm - it's quite neat, and even after staring at it all this time I'm not sure exactly _why_ it works. But the point is, it does work, and that's what this code relies on. To review: these three lines distribute all the items in `set_` between `parts[0]` and `parts[1]`, ensuring the way the items are distributed is unique for every value of i. Finally, let's look at the recursive call: for b in partitions(parts[1]): yield [parts[0]]+b Remember that `parts[1]` now contains some subset of the items in `set_` (although it never contains `set_` itself, because `parts[0]` always has at least one element in it - see the table above). `partitions(parts[1])` is of course just the same process applied one level down to this smaller subset of `set_`. It will always yield at least one thing. If `parts[1]` is empty, then it will yield an empty list (because, remember, that's our base case). If it's non-empty, it will yield several lists. Hopefully you can now see how the recursion works - we find every way we can to split the set into two smaller subsets. Then for each of those ways, take one of the subsets and find every way we can to split _that_ into two subsets, and then every way to split one of _those_ into two subsets, and so on until we reach the empty set. Once we've done that, we've got a complete list of all the ways you can split `set_` into subsets. We now construct a new list for everything that `partitions(parts[1])` yields. `[parts[0]] + b` is a union of `[parts[0]]` (a list containing one subset of `set_`) with whatever `partitions(parts[1])` has yielded (a list of zero or more subsets of `set_`). This union is the thing we want our function to yield - one possible list of subsets of `set_`. ----- I really hope my terrible explanation makes at least a bit of sense. This is the kind of thing that can be very hard to get across in words! Feel free to ask me to re-explain or clarify anything I've said. :)
you could do that yes. Since Python allows multiple inheritance you could mix in arbitrary subclasses to your polymorphic scheme to specify a specific behavior's interface. i.e. `class Duck(Animal, StringABC):`. class StringABC(object): def __str__(self): raise NotImplementedError('did not quack like a duck')
&gt; "That's GDPR, but we don't have to worry about that until next month." :)
Why does it loop back to the start? If I'm understanding it right you want to force a valid input and then proceed? Something like this? while Thing == True: Get_input() If valid_input: Thing = False Else: Print('need valid input') 
[removed]
&gt; and exactly happens when i &gt;&gt;= 1 is called? This line is equivalent to `i = i // 2`. In other words, it's setting i equal to whatever i currently is, divided by two (with any remainder ignored). For example, if i = 7, then after calling `i &gt;&gt;= 1`, i is now 3 (because 7/2 = 3.5 which gets floored to 3).
I'm actively looking into that. I would *love* to not have to write/maintain this tool. So far, though, I haven't found an end-to-end solution for emacs and python that works. As you say, it should in principle be doable (as I understand LSP), but there seems to be a theory-practice gap right now.
You could have a Boolean value set to false upon startup like bool validInput == false and have that set as the break case for a while loop. So that when you first start the program, it will enter the while loop, ask for valid input, if valid input is given, store the answer and set validInput to true which will cause the program to exit the loop, and if validInput is not given, it will simply just loop again. 
Just to add to my initial response: it's entirely possible I'm just missing something obvious. But I can't even get rename to work with [python-language-server](https://github.com/palantir/python-language-server) and [lsp-mode](https://github.com/emacs-lsp/lsp-mode) at the moment. Until those foundations feel more solid I can't justify putting energy into trying to move functionality over. With that said: I'd be more than happy to give support to someone else willing to try it!
The interpreter ignores the annotations; I'm not sure how it matters what's there. Indication is one thing, and a lot of people today seem to want Python to work like other languages. The type annotation feature will be killer once something like Cython can use it and transpile python directly into C for a boost in performance. Beyond that, if we're really using type annotations for documentation, docstrings already provide what we need and can plug into pycharm, anaconda and mypy.
Thanks! That's a much better way to do it! 
Cinema 4D and Blender have good Python support, maybe worth a shot
Wait, no "IDE/Editor" question?
Interesting and dangerious if not properly used. I don't like exec See [https://github.com/lihaoyi/macropy](https://github.com/lihaoyi/macropy)
Put everything you have inside a class, functions included. Change the variables to class properties, and put the main function you have into the __init__ method, or however you choose to run it
You can use a protocol for this. Python has a few built-in ones, like Iterable. But you can now create your own, say StringLike or something like that. See: http://mypy.readthedocs.io/en/latest/class_basics.html#protocols-and-structural-subtyping
It's pretty active nowadays.
Right. And, SciPy and NumPy are dropping 2.7 support at the end of the year. Anyone telling a beginner to download 2.7 is condemning them to obsolescence in just 8 months. IOW, Python 2 vs 3 really matters for scientific computation, because you will never get a bugfix again, or new feature, in 8 short months. 
Very good catches, how did you come about finding these? Are these common security flaws that you are aware of? 
&gt; My intuition is that I would just create one class for Employee and write methods for changing the traits--but I'm not sure if that is the right approach. Your intuition seems fine to me. If you're writing classes that don't really need to have their data modified in certain ways, then they shouldn't be a class, keyword "certain ways". If every employee just has, say, a `name`, a `payrate`and an `id number`, I would argue that you're better off making a dictionary instead of some sort of Class structure. Like this: employees = { "jeff": { "id": 423, "pay": 50000, }, "sally": { "id": 35, "pay": 50000, }, } If you *don't* need to do any fancy data manipulation and you're just setting attributes, I think a dictionary is the way to go. But if you are, then perhaps a list (or dictionary) of Employee() objects would make more sense. 
Glad to see others thinking of completion. I've been helping to guide the development of python bindings for products my company makes. Our target audience is engineers and scientists, not programmers, so we need to do everything we can to make our products approachable. I feel like good annotations are a critical part of this. My secondary motivation is for our customers employing programmers for bigger, longer lasting projects that might want mypy. For anyone wanting to check it out, here is the [project](https://github.com/ni/nixnet-python). I will say I've also been bitten by the fact that you need to explicitly pass in `--disallow-untyped-defs` to fail on untyped functions. That default works well for projects migrating to annotations but is terrible for projects using them from the beginning. Of course I've not looked into how much pain it inflicts due to my dependencies.
Oh man, I didn't know about that new datetime method. That's excellent.
Very common flaws. You get a knack of finding them after running into them a few times, and usually finding one means you should look for another. If you participate in "[Capture the flag (CTF)](https://ctftime.org/ctf-wtf/)" competitions, flaws like these are usually planted in apps and you get points for discovering and exploiting them. Also great for learning obscure things related to security.
I created an SSE stream with Django 2 and django-sse-wrapper. Just use a gevent based wsgi server and a redis backend for the SSE lib.
I have one key for [PyUP](https://pyup.io/) to give someone. 06fe18ec-361b88b7-f45102c8-e55336ed Have fun with it, who ever claims it first. :)
What does it print if you put print(sys.path) print(__file__) after doing `sys.path.append`?
I'm currently trying to prove that Hitler's wiki article can or cannot be reached in less than or in 5 clicks from any wiki article. Clicks include only clicks on links to other articles embedded in the article itself. You're welcome to contribute. Currently the main struggle is to register the bot in wikimedia so that it can make large queries. https://github.com/SuperCoder32/wiki_hitler
Wow, that deps resolver is so much faster! Awesome!
I decided to have a little fun with this. In case anyone is interested: import fcntl import os import select import sys import termios import time import tty class NonBlockingCBreakStdin(object): def __enter__(self): self.old_settings = termios.tcgetattr(sys.stdin) self.old_flags = fcntl.fcntl(sys.stdin.fileno(), fcntl.F_GETFL) fcntl.fcntl(sys.stdin.fileno(), fcntl.F_SETFL, self.old_flags | os.O_NONBLOCK) tty.setcbreak(sys.stdin.fileno()) return sys.stdin def __exit__(self, type, value, traceback): termios.tcsetattr(sys.stdin, termios.TCSADRAIN, self.old_settings) fcntl.fcntl(sys.stdin.fileno(), fcntl.F_SETFL, self.old_flags) def getch(timeout=None): start_time = time.time() with NonBlockingCBreakStdin() as f: while timeout is None or time.time() - start_time &lt; timeout: if f.fileno() in select.select([f.fileno()], [], [], 0)[0]: return f.read(1) def get_pin(length, timeout): while True: print("Please Enter your PIN") start_time = time.time() pin = "" while time.time() - start_time &lt; timeout: c = getch(0) if c is not None: pin += c if len(pin) == length: return pin The context manager makes seems like a better approach than the try/finally blocks, and really the core functionality is the one-character (optionally blocking) `getch` method. With that it's easy enough to implement `get_pin` or other similar methods.
I'm playing with various ways of making animated plots - I don't mean eye candy, but animations that actually illustrate something. Only really simple stuff so far. Some of my efforts are [here.](https://gitlab.com/rj.budzynski/Billiard)
Nice job. But need to refactor some pieces. For example, many if statements in info_properties can be more elegance. It’s just a first thing that catches the eye 
Is there any reason one can't write poetry add tornado&gt;=4 in the commandline? it seems like it only parses exact versions.
That would be an awful usage though. In this specific scenario, using Protocol would be best as it preserves the duck typing. `class Duck:`. &gt; &gt; class Quacker(Protocol): &gt; def quack(self): &gt; ... Here a Duck is a Quacker as long as it has a quack method. Inheritance is optional. 
If I'm not mistaken you can use "any" with other types to describe more advanced data structures. Obviously type annotations don't serve many purposes in Python besides documentation; however, documenting types is one of the most important things for code readability. 
It might be good to make StringABC inherit from ABC in the abc module. 
&gt; I wonder why the mypy team does not invest more in the runtime aspects of typing Because mypy is a static type checker. Runtime type checking has too much overhead to be worth it.
Very neat. This is my TIL, for today :)
&gt;Be aware, however, that it will also install poetry's dependencies which might cause conflicts. This makes me a bit uncomfortable. Even if it doesn't conflict, will using it with older versions than it is expecting cause it to break in weird ways? I wouldn't be averse to paring down the dependencies in this package and maybe bundling them with the package. Otherwise it looks nice, and it's nice to see some competition keeping pipenv on its toes.
You can actually specify a constraint like so: poetry add 'tornado:&gt;=4'
ive seen usage of abc module before, but never looked into it. What does it provide? 
I had to look up the difference between the two. Not something that comes up every day. Unless of course you're a Celtic monk that deals in combinatorics--but not many of us are Irish Setters.
We're so locked down at work USB drives are disabled, unauthorized EXE's are blocked, etc... FORTUNATELY, I was able to get the IDLE through the app store at work without any fuss so as a beginner that should hold me over for a while.
hmm i was unaware of PEP554. Good post, this is definitely a more pythonic and dynamic solution. 
The original official report has this question jb.gg/pydevsurvey2017
This is great man. I’m a virtualenvwrapper user myself, but this may just get me to switch, since it ties everything together so well. Well done, I’ll give it a go!
That's why the recommended way of installing `poetry` is by using the custom installer since it vendorizes the dependencies.
LPTHW is explicitly discouraged by the sidebar.
Any reason to not go asynchronous and do it with aiohttp + websocket ?
I've got two honest questions: 1. Why do we need this? 2. Isn't this more or less a disservice to the python ecosystem and community?
Abstract base classes.
Your post is empty, Please edit your post to explain what help you need about variables.
&gt; 1\. Why do we need this? Because a large number of Python2 codebases are never going to be ported to Python3. &gt; 2\. Isn't this more or less a disservice to the python ecosystem and community? I see it as a valuable service to those people who can't afford the resources to engage in avoidable work due to upstream's blatant disregard of backwards compatibility - work that will provide no actual benefits in production.
Great bundle, but I am subscribing PyCharm already and don't really see the use case for PyUP, so if anyone wants the: - PyCharm 6 months code - PyUP 12 months code please let me know via PM. :)
I'm trying to implement a replacement for an excel spreadsheet that's so bad I'm just re-building from the ground up; but I've hit a snag in development that I can't figure out how to Google my way around (for the first time in a long time). Any help would be greatly appreciated. Here is a transcription of my comment in r/learnpython's weekly ask anything thread today: I have kind of an odd and circuitous problem, and I'm not 100% sure either how to solve it, or what the right question to ask is on how to solve it. I am writting a program to replace an excel spreadsheet at work (it's worth it to take the time, I promise. Just assume I've vetted my options and this feels the best choice). That being said, I'm creating a class. I've never really done OOP before, and I'm doing all of this from scratch. I've spent my time about 5:1 today between Google and actually writing code. In essence, I am not 100% sure how to go about defining my abstractions, or how (and if) I should write a factory method for creating objects of my class. Here's the deal. I have a valve. This valve is my company's product, so that's the class I'm creating. A valve has various properties like a size (NPS 4,6,2, 1.5, etc.), it has a bodytype, (Gate, globe, swing check, etc.), a pressure class (150, 300, 600,etc.) and so on and so forth. Various properties that all describe the object "valve". When we sell valves, those valves are sold with an item number, and that item number has a prescribed series of characters that uniquely identify various properties of the valve. The first 4 characters tell me what kind of valve it is (gate, globe, check) and the pressure class (150,300,etc.). The 5th character tells me if it's a Flanged end valve, or a buttweld end. etc.,etc.,etc. What I can't figure out, and I'm not sure what design resources or tutorials would best help me learn this for the future, is how I can implement it such that I have the capactity to say: &gt;&gt;globe = valve(4,"globe",pressureclass=300) to create a Class 300 NPS 4 globe valve, but also say: &gt;&gt;itemnumber = valve.fromitemnumber(XXXXXX) where XXXXXX is the item number as published in our catalogues, and the method fromitemnumber() is able to deconstruct the prescribed sequence and generate an object of class valve that is instantiated with all of the properties as set forth by that item number. If this doesn't make sense, if there's a better sub to put this in, or if I need to clarify anything, please please please let me know, because I would REALLY like to move past this and continue creating what I want to create (i.e. everything past this point).
I tried using docker as a solution. It adds more complexity on managing multiple environments. A great solution overall. Its part of the Open Source Development Platform. In the yaml file you selecet vagrant, docker, cloud, etc...
It looks like 2 days ago they replaced `massTransferAssets(self, transfers, asset, attachment='', timestamp=0):` with ` for some reason in [this](https://github.com/PyWaves/PyWaves/commit/89d0d20bfd700836478a6bc3ff0239e855d4d973#diff-90e23cac0b86acd9b9587ab60d7bfa1fR505) commit. You might want to log an issue on github about it.
Happy to hear - please report back any issues or ideas
It has been suggested before but did not go through (eg https://github.com/pypa/pipenv/issues/535 and others) I figured I would create the tool the way I envisioned, and if it ends up being a good proof of concept, we can always port the functionality to the main project. There are however serious limitations(eg it does not support project vevns located on project folders), so maybe it should always be a companion tool, like virtualenvwrapper is to virtualenv.
i suppose you mean you teach your graduate students python ... Is the point to trick them into thinking it will call int\(3\)\(\) instead of the wrapped function that tries do it? What do you think you have given students by providing them stupid gotcha questions like this? 
aW50IGlzIG5vdCBjYWxsYWJsZQ== The answer base64 encoded as not to give it away
Okay. If you want help, it might help to link to the project's homepage, repo, etc. You just mentioned a YAML file, and that doesn't really mean much to me.
I really hope that this was at least asked as some sort of 'fun' extra credit question rather than an actual exam question.
&gt; I assume that there is a lot of logic within mypy that could at some point be made available through public methods There are plans to make a public API, but mypy needs to be more stable before that can happen (otherwise it would be too painful to maintain or use the API).
You use a lot of if statements where you could have used elif or used a dictionary such as idnums = { 1:“self._win.add(Rectangle(self._win, 10, 15, (590, 135)).set_fill_color('Purple').set_depth(4)”), #define the rest } And then used exec(idnums[idnum]) instead of all the if statements
The name for the technique, if you want to learn more, is "dependency injection".
You're incorrect. It's PGZ1bmN0aW9uIG91dGVyLjxsb2NhbHM+LmlubmVyIGF0IChhZGRyZXNzKT4=
There's a commented hack inside that makes it work on readthedocs
It was worth **0.008%** of their final grade, and students could receive half credit for simply writing that it was an error. Its an exercise in critical thinking. Many students wrote that it generated an error, but when asked which line generated the error, realized the correct solution. To be honest, it wasn't meant to be a tricky question. 
Ahh okay. I contacted their developers and error is really on their side. They are working on that and for now I can use their older library. Thank you very much! :)
Except...your code doesn't generate an error, it just prints the inner function.
You're totally right! I see where I went wrong. Lol
 Traceback (most recent call last): File "game.py", line 12, in &lt;module&gt; from cs110graphics import * ImportError: No module named cs110graphics
There's no rage on my end \- just incredulity that this is a meaningful question. Your answers to this are pretty lacking from my point of view. Whatever &amp;#37; of their grade this represents, it doesn't change the fact that you aren't measuring anything meaningful here. Let's juxtapose "graduate level python" with "getting students to think about code". I agree with you \- but this isn't how you describe the class. I agree with you so much actually, that I think it forms an argument for C to be the beginner language of choice for CS students or engineers who deal with hardware \- but I digress. I'm going to try and take your side for a moment b/c I think there are some parts of the code that may reflect your attempt to give students hints. * Actually decorating the four\(\) function might have been your attempt to alert them to the "returns a function" kind of behavior that would lead them to the right answer. * The #\(3\) might be be you giving them the answer to three\(\) and signifying exactly the type that three\(\) is going to return. It might be the question number too, I'm not sure. Let's assume it's a hint. Next I'll assume this is something you very particularly went over with them in class. Even if you just said the standard "decorators are functions that take functions and return functions" \(inaccurate but good enough\), then MAYBE giving them the decorator hint and the answer to three\(\) is enough to warrant the question. Maybe.
Professors usually don't like it when people post code to their assignments.
I have mixed feelings about this. I love the functionality. I hate the internal design. I'm a strong member of the "performance is a must" party, no matter what language I write in. If this is done via classes, then it helps in my point but hurts performance, because milliseconds matter in some of the code bases I maintain. If it's done internally as a structurally different concept, then it's performant enough, but has a nasty implication for the future of python-- up to now python does not care about types. Nor abstraction, interface, and access level categories. But I feel like this will lead Python into a strong, statically typed language like Java.
The #(3) is actually the number of the question, this was part of a set of 5. If you're still curious: print(three.__name__) # print(four.__name__) # print( outer(three()) ) # print( four() ) # print( outer(three)() ) # 
yes, you are correct.
Are you seriously asking for donations via venmo for a school assignment? (Which also won't run for anyone who also doesn't have cs110graphics)
If pywebview is out.... What's in? scnr
Because people wish for things that are plug-and-play. Here's the experience I have had guiding people through this: 1. Download Python source 2. ./configure &amp;&amp; make &amp;&amp; make install 3. It wipes out /usr/bin/python, and yum breaks. 4. Re-do whatever broke from #3 (which is a massive pain in the ass, use strace to sort out what .so is still in use) 5. Correct the ./configure options so it installs to /usr/local. 6. Find out your python install is broken, because you don't have: libssl-devel, readline-devel, sql-devel, or a few others. 7. Install all the reqs, re-compile. 8. Find out you have no pip. 9. Download get-pip, run it. 10. Re-do #9, but with /usr/local/bin/python instead 11. Now you *might* have a working python installation. I've probably forgotten a step or two. Some of the above can be avoided by being careful, but not everyone knows those error points. 
Someone needs to break there code into a few files. That is hard to read.
&gt; A small price to pay to free your project from Github ;) Wait, when did we start hating github? 
I think anything beyond making them emit a warning during testing would be unpythonic \(if this is a word\).
!RemindMe 1 Week
I will be messaging you on [**2018-05-14 23:14:20 UTC**](http://www.wolframalpha.com/input/?i=2018-05-14 23:14:20 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8hfx9w/what_workflows_are_people_automating/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8hfx9w/what_workflows_are_people_automating/]%0A%0ARemindMe! 1 Week) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Does anyone know if pywebview needs NET installed to run programs on windows?
Ah, for some reason I thought they improved performance. Bummer.
I did a minesweeper clone back in school that did this. Copy/pasting from that: def main(): game = MineSweeper() game.createBoard(10,10,20) while not game.finished: game.displayBoard() try: var = raw_input("Enter move. S == select square, F == plant flag:\n") if(var.lower() == "s"): xy = raw_input("Enter x y coordinates:\n") coords = xy.split(" ") game.selectSquare(int(coords[0]),int(coords[1])) elif(var.lower() == "f"): xy = raw_input("Enter x y coordinates:\n") coords = xy.split(" ") game.plantFlag(int(coords[0]),int(coords[1])) except: print("unrecognized input, try again") 
&gt; If this is done via classes, then it helps in my point but hurts performance, because milliseconds matter in some of the code bases I maintain. If it's done internally as a structurally different concept, then it's performant enough Protocols are internally implemented using a careful combination of classes and metaclasses iirc, but it's still possible to use them with nearly zero overhead. Specifically, most of the overhead related to protocols comes from actually defining one: defining one requires you to import the `Protocol` class from the `typing` module and subclass it. After that point, you also incur some mild overhead in any modules that actually want to use this protocol: you need to import it. However, you can sidestep all of these costs by: 1. Defining your protocols exclusively within *.pyi stub files. *.pyi files are files that are ignored at runtime, but are parsed by PEP 484 compliant type checkers such as mypy. 2. Stick any imports to these modules within a "if typing.TYPE_CHECKING:" block. The `typing.TYPE_CHECKING` constant is always False at runtime, but is special-cased to be true at type-check time. 3. Use either the comment-based syntax or strings to refer to the imported protocol types. Or, if you're using Python 3.7+, use the `from __future__ import annotations` to make all function and variable annotations automatically be strings instead of evaluated expressions. Step 1 lets you avoid the costs of actually defining protocols; step 2 prevents your code from crashing when it tries to import a module that's non-existent at runtime (and also gives you a mechanism to avoid the costs of importing expensive modules); step 3 lets you avoid the costs of having to evaluate type hints when you actually use them within annotations. &gt; up to now python does not care about types. Nor abstraction, interface, and access level categories. But I feel like this will lead Python into a strong, statically typed language like Java. Eh, idk if it's true that Python hasn't cared about interfaces and abstraction up until now. [Abstract base classes](https://www.python.org/dev/peps/pep-3119/) have been a thing since Python 2.6, for example: they're a mechanism that lets you have something similar to Java interfaces, except enforced at runtime. We can then view PEP 544 as a natural extension of this idea, except that we can now check everything at type-check time instead of runtime. But more broadly, I don't think Python is trying to head into the direction of Java where everything is statically typed. Rather, Python is heading towards a direction where you can *pick and choose* between dynamic typing vs static typing and blend both styles in a sensible way. Basically, I think dynamic types are better at some things and static types are better at others -- why should we have to choose between the two? Let's have our cake and eat it too.
Awesome\
I made this once except it tweeted a picture of the perpetrator on a special account that I had on post notifications 
That's when you should have put it on github with a lot of fanfare and hype: "Making the first truly pythonic GUI library" and started paying indians on fiverr 5$ to start the implementation of various sub\-architecture. At that point you should have made a post to /r/Python, hyped it heavily, shown all the amazing progress and asked for "lots of help". A couple of years later you would be the shit in the python community and be able to travel around the world taking huge sums for talks and even attended TED and gotten a model gf and a lambo.
Having spent 12 years contributing to major open source projects, I'm now wondering where my lambo is...
Honestly, if you want to have type annotations use a typed language. Duck typing is great up to a point, when it starts being more harm then good, it's probably a sign you should switch to a different language (since the complexity/size if your usecases will likely mean python will start doing more harm than good)
Exec is not a good idea in practice, use partial (from functools)
Mostly not using python is your best strategy for native mobile apps.
Wow, I had no idea they had a free edition... I guess I'll have to check it out, thanks!
Hell of a right up Hey isn’t that list(elt) coercing every elt in partition to a list anyways, and at least defeating the purpose of the inner generator (saving memory) versus just writing it as a function? Although I’m sure there might be additional functionality desired from the generator, have not fully read through the wall above yet.
Is it that different from how pip can be installed via get-pip.py?
Yeah, it should really be about restricting it to an API, not a type. It should be API implementation annotations. # enforce that class of name must implement __str__ def hello(name: impl('__str__')) -&gt; None: ... class Node: __funcs__ = ('output_location', 'get_neighbors', ...) class Path: __funcs__ = ('output_path', ...) # enforce that origin/dest implements Node.__funcs__ # which is possible just by being a subclass or instance of it, # and enforce the result must implement output_path and # more def shortest_path(origin: Node, dest: Node) -&gt; Path: This allows you to check that duck typing will work and that passed in objects implement the interface you expect. That seems to be the core thing you want to enforce in the first place. I guess you could make a library that does all this, a metaclass called MetaImplementation or something that checks __funcs__ and stuff. Might be a fun side project.
What is BitDefender? If you use a virtualenv, just rebuild it. 
Why? I'm usually fine with that if the curly script originates from the same source as the package I want to install, but might be overlooking something.
[BitDefender](https://www.bitdefender.com/) is an antivirus on Windows.
Too much work
LOL... Did you not see I'm using Kivy; I'm not building a native mobile app
Can I ask you about Sublime? I've heard it's effective but I'm scared of new things and I'm only just getting comfy in PyCharm. What do you find useful about Sublime? Is it worth the work to switch?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [r0x0r/pywebview/.../**README.md#dependencies** (master → d823562)](https://github.com/r0x0r/pywebview/blob/d8235627c80fb5798fc7266425bb97afb9bb1fe3/README.md#dependencies) ---- 
Among other reasons, security: https://sysdig.com/blog/friends-dont-let-friends-curl-bash/ I don't object to this style of installation where it's really necessary. In this case I think it is totally unnecessary. pip ought to be enough.
Damn the codes aren’t that long. Not into raspberry pi yet looks cool and will be looking forward to creating these in the future. Python syntax is so much simpler than others. Love it
&gt;Can I ask you about Sublime? I've heard it's effective but I'm scared of new things and I'm only just getting comfy in PyCharm. What do you find useful about Sublime? Is it worth the work to switch? It really depends on your preferred style of development. I tend to have to jump between projects a lot, I have a lot of windows and tabs open, and I use scratch files a lot for doing various text manipulations. Sublime is great at this, as are vim and emacs. Pycharm is not so great at this style, but it might still be for you if your work flow instead consists of working on fewer projects, and particularly if you are wanting more advanced features like the graphical debugger, notebook integration, and other fancy features. Sublime does not have a debugger like pycharm does. It doesn't come "batteries included" but instead requires you to install a lot of community developed plugins to get additional features. Some people like this, some people don't. Sublimes advantage comes from a few key features. It is written in c++ with performance in mind, it is very extensible (with plugins written in Python), and it has amazing text editing features that are language independent. This allows you to work with many languages simultaneously, but at the cost of having more specially designed solutions for specific problems. Pycharm is great because it's designed to be a full fledged IDE with support for most common languages like HTML and JS as well, and integrates with Python tools more easily, or just ships with them. It is a much larger application than sublime, and it eats up a lot of resources. But that comes with better auto complete, a debugger, and more advanced project management. Honestly, if I had to start over that I would probably be using VS Code. It is inspired by sublime and atom, supported by Microsoft, but is OSS. It has a lot of features, is rapidly improving, and has fantastic python support, but it is a bit more resource hungry and slower than sublime. But I have a lot of time invested in sublime, and it's just a lot of work to switch. Sublime still does what I need it to do, so I'm not switching yet. 
what windows are you using that does not have .NET 4.0+ installed?
here is relevent issue on github: https://github.com/r0x0r/pywebview/issues/134
Why are you trying to make it oop? I'd make it fp so that I could take advantage of multitasking.
I'm actually setting something up like this now. PM me in a day or so for an update if interested.
since the beginning but there were no good choices. i have a very difficult time understanding why you'd prefer github over gitlab. I would of course take github over th\\e shitstain tools that atlassian puts out.
sorry, but I want to do some projects for someone need it or for myself in anything like data science, AI, or even simple like bot for twitter to follow. but I will check the link. thank you.
Arg! Kivvy me timbers!
"winpty" did not work. SQlite came with Python, however, it's just the library only \("import sqlite3 as sql" works\). In order to get the sqlite CLI tools, you have to download it [here](https://www.sqlite.org/download.html) and add path accordingly.
Yes it does. This is not an issue though as .NET comes preinstalled with Windows since XP. There is also a Win32 version of pywebview, but it is deprecated and lacks most of recent features. 
Sell 
Turns out we aren't allowed to do that
Thank you for your thoughts!
This has to be the best thing I've seen in a while 😂😂😂😂🤣🤣🤣🤣
Thanks! 
I don't like Gitlab because of: * privacy issues with no no reply email capabilities * generally less third party tool integration * I don't like the bloated UI
Do we know how heavy session creation is?
I have never really felt a lack of integration and i run my own gitlab instance ... But bloated ai and privacy issues? We don't see eye to eye on that for sure.
How did BitDefender remove the file? Did it just delete it or did it put it into quarantine. As a side note my general rule is anti virus isn't useful unless you are specifically known to download and execute random shit.
I fully agree with you. Python 3 has some downsides in comparison to Py2, like startup time, and enterprise solutions with in-company dependencies not being ported. However new dependencies that need to be cross compatible exist.
Trying to finish up part 1 of Python Crash Course. Currently on chapter 8/10. 
Gitlab goes down a lot. I've never seen github go down. There is a reason most people use it.
That's amazing. I loved the guy falling backwards in his chair for no reason.
I'm just trying to learn. I'm teaching myself python but also reading a book called Object Thinking and am trying to test out the methodologies of it just to learn the basics.
This is supposed to be taken care of in 3.7 (PEP 544): https://www.python.org/dev/peps/pep-0544/
Ha that dictionary is pretty much exactly what I need! I was more using OOP just to teach myself the basics of creating classes and methods, and then calling them and figuring out things like inheritance. 
this is such a pointless article. numpy takes advantage of multi\-core cpu's. does tensorflow do the same? idk. but i'm betting that it doesn't really care since HPC is a thing. 
download VScode and smash your head against the keyboard until error messages disappear. that's how i did it. 
The column in your resulting table doesn't have a name - it's no longer `snumber`, but the result of some processing done on it. Try `select translate(...) as snumber_clean`, and then `row['snumber_clean']`.
Yeah, you definitely don't understand what you measure. Just some highlights: you are using NTFS, which was written several decades before there were SSDs, so, even in principle, it cannot use what SSDs have to offer, and yet you are using it with SSDs, and you claim to measure the speed of reading from SSD! But you also chose to read it on MS Windows, where you have no control and no idea about how its filesystem was configured, beyond maybe compressing the file contents. You don't understand, that, ultimately, your file reading performance is independent of your code being written in C++, it depends on how your OS kernel decided to expose files to user code (but why did you chose to read from files is beyond me). Your OS kernel decides the size of the buffer, whether to cache the fie contents or not, how much priority your task should get (your kernel needs to also keep track of interrupts coming from other devices etc.) Finally, kernel implementation of file-based I/O plays, probably, the most important role: how many times the data is copied. This is why on Linux there are many different ways to get data from storage device from user-space: you can have user-space drivers, you can have ioctls specific for some hardware, you have asyncio (not the Python garbage, the kernel module), and probably more. All of these will perform differently on different workloads. Most importantly though: you measure whatever you measure on some household electronics, with a single storage device, on an OS that's not intended for serious workloads, with hell knows what drivers, kernel settings... You don't even have an idea of how it will actually work on real hardware, with real OS, drivers that are optimized / configured for the kind of hardware that you have. Your test is literally like walking up to the ocean, dipping a glass into the water and by looking at the glass, deciding that there aren't any whales in the ocean.
I didn't mention private gitlab instances, I meant the public site. Gitlab doesn't properly support keeping the user private due to no ability to have a no reply address set as the main.
I contributed to mypy for a while, and I agree with you completely. The `typing` module got committed (and thus impossible to ever change) when it was still in a horribly-broken state, beacuse of 2 things: * the sole developer didn't have any time to work on it (but wanted it committed anyway), and * he showed glaring unfamiliarity with several aspects of type theory 
All programs are *conceptually* statically typed. Sometimes the runtime doesn't want to enforce them, and that's fine. Sometimes writing the correct type is too complicated for the programmer to write, and that's fine. But there is *always* a type lurking beneath the surface.
https://www.reddit.com/r/python/comments/8hmjq9/_/dylyb75
Oh alright. You should watch this video. Despite it's title, it does suggest writing classes. Just make sure they're good classes. https://youtu.be/o9pEzgHorH0
You should install dlib and use their face detection model for another layer of complexity! 
 print('fuck off I do not wanna play anymore') import sys sys.exit 100/10
i was hoping that providing type information would pave the way for dramatic performance improvements but i read somewhere that it's not that simple and isn't likely to ever happen.
the amount of data needs to be large enough that the problem benefits from being parallelized prefereably on gpus before tensorflow shines.
Why are you being downvoted. That's a good idea. I just re-housed my security camera into a case with a motion sensor so I don't have to use the program "motion" anymore. It had so many false positives. And I was thinking of using s3 as storage backend but tweeting a picture was a really good idea.
&gt; I would not recommend sympy. It is not that efficient. What would you reccomend? I need to make basic tensorial calculations. It looks like sympy is a very promising way...
Okay, mr.
/r/learnpython will probably be more of a help here.
Maybe you need the __init__.py file in each directory you want to import modules from? https://stackoverflow.com/questions/448271/what-is-init-py-for
Here was my first patch to LibreOffice: https://cgit.freedesktop.org/libreoffice/core/commit/?id=7347482cc360ad3dc9ed77047441c2e30476fed3 It was a bunch of little fixes. I knew nothing about the codebase when I started.
I'd say dig in a tiny bit first to see what you want to do with python sololearn has a good online intro course that'll definitely give you a nice taste of what's out there but yeah one should pick some sort of application before you buy a book imo the book you'd want for cybersecurity would be very different than the one for data analysis
Yeah, I'd like to know this too.
Not really, as starting up a light-weight server like Flask does not take much time. The actual benefits are in reducing a dependency, less boilerplate and improved security (traffic between frontend and backend cannot be sniffed).
Thanks, this is what exactly I did after posting. I just figured out in psql that it changes the column name when I ran Translate\(\). 
You come for advice and then mock people, lmao. 
Would also benefit from symbolising some of the types e.g. `Union[A, B]` -&gt; `A | B`, `Optional[A]` -&gt; `A?`, `Tuple[A, B]` -&gt; `(A, B)`.
What is this, a crossover episode? 
I'm not familiar enough w/ the traditional mathematical notation being used here to make sense of the formulas on display. Figuring out what "triangle t" means for instance, beyond my scope of experience. If you can elucidate more of what thats all about, I might be able to wrap my head around a python implementation of it. I'm already an hour late tho.... guess you're fucked. This isn't exactly an easy one, but it doesn't look that complicated either. If you don't mind me asking, why are you late on this? I don't see many get far in programming unless they have that passion burning hot in their gut to tackle things like this head on with no resistance. 
I'm just kidding, see you later. Ey Ericka! 
Would bottle be better choice than flask ? If I recall correctly Bottle is single file and even more lightweight. Or does flask provide useful features for this use case ?
I thought about it, but there’s a downside: The verbose style is python syntax. * It can be copied and pasted into code directly * There’s only one syntax to learn for newbies instead of two I’m not sure what’s the better tradeoff
Numpy arrays, and also lists are simpler data structures to handle with than sympy symbols. If you can do it in Tensorflow it would be even better, but learning tf to perform a cross product is a bit overshoot I think. 
Python is already a fairly high level language, and in addition it has an expansive standard library as well as a huge number of great third party libraries for almost anything you might want to do with it.
If you build a desktop app or small server gizmo that needs to do some storage I'd definitely consider SQLite instead of plain filesystem.
It's x% off per day and I have no clue how to do? It's just a requirement to do this one course related to programming although we never really use it for any of our other courses, I'm doing an engineering undergraduate and the program does it so that no matter what type of engineering your doing the units/ subjects for the first part of the degree are the same for everyone and specialise later on. So I have pretty much done a mix of electrical engineering, civil, and chemical units. I have no real interest in computer science or programming for that matter as a career. It just a requirement of the course. I am in the process of attempting it, and will respond as I get stuck so it would be really helpful if you worked me through it. The course just teachs us the basics of the language and we just have to figure it out through what we learnt in other courses and research into different functions and I don't exactly know if I need to write a specific function for certain parts or if there is an builtin function of it in Python. But yeah tough shit for me I guess I shouldn't have left it this late. There is a second assessment released and I'll be working through that so help with that other one would be appreciated. Of course I will be more organised with it and when I do post I'll clarify with greater detail.
Ah cool. I just thought about executable size when freezed, but I don't that they differ much. By the way, great project ! :\)
Documentation looks awesome by the way!
I once did something similar, using an old android device and a 'motion sensor' camera app. You can do really cool stuff with IFTTT. I don't remember the specifics, but IIRC I had the app save snapshots to a directory in dropbox. Then set up IFTTT recipes to DM me new photos from a private dummy twitter account, and also send via email. Then, in gmail, set up filters to star those messages and mark as important. You can do really cool stuff sometimes without writing any code.
Any chance for a quick ELI5 instructions on how to know where to plug in your PIR sensor. I have a Pi and I have a PIR sensor that's been sitting idly for me to do something with it. Cool stuff!
I sometimes wish slicing syntax would work on any iterable (including generators) by transparantly invoking `itertools.islice`. Also consider `reverse()` instead of a negative slicing step like `data[::-1]`.
Can't read what you've just posted. Try copying and pasting the text instead of an image. The formulas could remain as an image. Anyway, this should be in /r/learnpython, and you probably won't get much help there, either, if all you post is the assignment requirements. We expect you to try just a little bit. From reading your original post you should be able to write a skeleton function, at least.
Awesome!
I used to store data as JSON for my older projects. Storing as JSON meant you could easily read the data (human readable) and manipulate data without needing to execute anything special. SQL definitely made things more sorted but it definitely has it trade offs. I would still go with SQL though unless they were config files.
&gt; It's more increased expectations than increased need. What's the difference, I grew up learning in the same era, I have neither the expectation or need for someone to hold my hand, I want to figure things out, so I do.
Which hardware ( sensor, camera etc) is needed to run this software and which PI version?
Which hardware ( sensor, camera etc) is needed to run this software and which PI version?
Raspbery-Pi 3, PIR Sensor and Picamera with jumper cables. Then using Python 3.4.
Try updating. I have a Dell XPS as well. I just updated pipenv from 11.0.2 to 11.10.3. Your test went from: ❯❯❯ time pipenv run echo Test Test Test Test pipenv run echo Test Test 0.81s user 0.08s system 99% cpu 0.899 total to ❯❯❯ time pipenv run echo Test Test Test Test pipenv run echo Test Test 0.25s user 0.04s system 100% cpu 0.282 total Pretty impressive.
That's pretty good! If you wanted to improve it, you could try making it so you only have one print command each for win/loss/draw. You'd probably want to use string formatting for that, like thing = 'rock' print('I picked {} so you win'.format(thing)) Also, by convention, imports should go at the top.
Building Battle Ship without Googling
Automate the boring stuff with python
You have two consecutive if statements instead of if and elif. Not sure if this is causing the issue but it looks like something that wasn’t intended in your logic.
You may want to check these lines: if hardufylltar == "Yes" or "yes": hardufylltar = 1 if hardufylltar == "Yes" or "yes": hardufylltar = 0 
Yeah, the package is down now, people are so evil!!!
I was super fortunate, I decided to check the declaration of the class before I run my code and couldn't believe my eyes
`hardufylltar == "Yes" or "yes"` is not equal to `hardufylltar == "Yes" or hardufylltar == "yes"` , the later one is correct, the previous one is always `True`. The Correct way to do this is: if hardufylltar == "Yes" or hardufylltar == "yes": hardufylltar = 1 elif: hardufylltar = 0 
This is pretty nice, but I do notice that some of the comments in the code don't match up with what actually happens. The buzzer would be on for 2.5 seconds + the time it takes to do all of those other things, for example. GPIO.output(24, True) time.sleep(0.5) #Buzzer turns on for 0.5 sec # &lt;----------- print("Motion Detected at {}".format(st)) ##Adds timestamp to image camera.capture('image_Time_{}.jpg'.format(st)) image = ('image_Time_{}.jpg'.format(st)) Send_Email(image) time.sleep(2) # &lt;----------- GPIO.output(24, False) # &lt;----------- Also, I think you should find a [PEP-8 conformant linter][1] and see what it has to say. There are a number of violations. Last but not least, if you want to use gmail, there's a [wonderful little wrapper library][2] that you can use. [1]: http://pep8online.com [2]: https://github.com/paulchakravarti/gmail-sender
if you want to check a variable against multiple values, you should approach it like hardufylltar in ('Yes', 'yes') for this case, even better would be lower(hardufylltar) == 'yes' or finally, if you need to write both the cases, hardufylltar == 'Yes' or hardufylltar == 'yes' (notice the full expression again, that is because everything after and/or is an expression, and just a string 'Yes' will always be True
&gt; I've already contacted the developer to take it out. [Relevant](https://www.youtube.com/watch?v=FopyRHHlt3M) Seriously though, I admire your optimism.
They seem to indicate that they didn't mean it to be uploaded. The [readme](https://github.com/urigoren/ssh_decorator) says: ``` Important note ! It has been brought to our attention, that previous versions of this module had been hijacked and uploaded to PyPi unlawfully. Make sure you look at the code of this package (or any other package that asks for your credentials) prior to using it. ``` But the cached google copy of the pypi page shows the uploader as `ugoren` who appears to be the same person as the owner of the github repo I linked to.
We always say “it’s open, it must be ok otherwise someone would notice”. The truth is though that it’s thanks to people like you who take the effort to go through cose and report bad stuff that we can work safely Thanks man! 
good catch
Why is your link to ibb.co a redirect from Linkedin?
With no hint of obfuscation and in a language as readable as python. That takes some chutzpah.
They didn't say it wasn't them to be fair
It just deleted it and couldn't be restored. I had to exlude the file name from quarantine, so that it wouldn't delete it again. I was able to reinstall pip after uninstalling everything python and pip, and deleting all related folders (cache and so on). Do you think anti virus are useful when downloading torrents? That's pretty much all I need to worry about.
Don't really like this mix of Python/HTML/JS for some reason. I prefer Remi's approach.
https://github.com/urigoren/ssh_decorator &gt; Important note ! &gt; &gt; It has been brought to our attention, that previous versions of this module had been hijacked and uploaded to PyPi unlawfully. Make sure you look at the code of this package (or any other package that asks for your credentials) prior to using it.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [zeroone2numeral2/Raspberry-Pi-Camera-Motion-Detection./.../**PIR_Motion_Camera_Email.py** (master → ef2cf52)](https://github.com/zeroone2numeral2/Raspberry-Pi-Camera-Motion-Detection./blob/ef2cf521a194795947faf3feb3db87e32d5a995d/PIR_Motion_Camera_Email.py) ---- 
This gave me an idea. If I stick "ssh-decorate.cf" in my hosts file, but point it to my own server, then I can see if anything already running on my machines has been affected. I think I'll set something like that up right now.
I tried this once and broke it with Ajax. Swiftly went back to that damn Flask app I'm building.
Depends on what kind of App you are building. But in most cases, you can best stay away from Python for Mobile App Creation.
React-Native, Ionic and flutter are all good choises. I suggest only using kivy for something super minimal, but not for commercial purposes.
Keys get stolen all the time. Nevwr attribute to malice that which can be explained by optimism.
Consider one of the purpose-made packages for this?
So what do you use? Just ootb virtualenvs w/ bin/activate?
Rather than obfuscation this is like hiding a tree in a forest. It just kinda looks it belongs there. "Oh this? Just some logging, totally normal."
I too made a discord bot as my first python project! Can't say that the discord library was very intuitive tho..
Thankyou for the advice, I am in the process of making a so-so function that probably won't work and I'll post it as soon as I get it done.
Thank you. I thought it was unnecessarily long but didn't know how to shorten it
Ahh, the Joy Ann Reid defense. Bold strategy. Let’s see how it plays out for them. 
Maybe try www.codingame.com Surprisingly, it's not about fish.
Ah, I see, he was just providing a key backup service. How nice!
Yep, thank you OP !
I've done something similar, all of my widgets are subclasses of the PyQt widgets with added properties like .enabled, .visible, .text, etc. I didn't do everything, but as I need things I just go back and add them.
Most IDEs have this function, I think. In python-mode you just press &lt;C-c&gt;g to go to definition.
I was not trying to compete with you. It's a damn good piece of software and yeah I'm aware that file reading is independent of the language. File parsing though, especially a fortran formatted file is a mess, which is where the challenge comes in. That and having to reverse enginder the data, not to mention interleve the displacement data with the stress data that occur at different times in order to get the data in a useful form. That's how it's faster than a C++ code that's doing the same thing. You're just bitter that Pyhton is good enough.
I mean, updating a pypi repo just takes a password, if his was leaked somehow, then there's no reason someone malicious couldn't have done it. Especially considering him developing security tools makes him a target.
Considering pypi actively worked with a 'researcher' that installed a bunch of fake modules using common misspellings that dialed home I wouldn't expect them to be terribly proactive here.
Complete noob question: I installed Python 3.6 a couple days ago. I have a pip folder in "Site Packages" but don't see ssh\-decorator. Am I safe?
Sure, maybe it's just a language snafu. But it comes across as either not taking blame or obfuscating something. Or lying.
SSE is technically a little bit simpler then websockets because the server doesn't have to deal with incoming messages.
It would have been something you installed manually, so you're probably good.
No, ssh\-decorator is a third party package. It doesn't come pre\-installed with any distribution of Python. You're alright.
It works so that's pretty good for someone new to programming. This code `q = random.randint(1,3)` already creates an `int` so you don't need to call `int(q)` everywhere. 
If you want to learn, this is a great article on classes: [Improve Your Python: Python Classes and Object Oriented Programming](https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/) The official Python documentation is good too. I also find it immensely education to go back to old scripts and refactor them to use classes (even though that may not improve performance). 
unless... as dependency?
&gt;No, His question was "Am I safe?" I think you meant "Yes". 
Ah. I thought random.randint(1,3) creates an int but assigning it to q makes it str
A pseudo bittorrent clone for a university p2p course.
Good point
Even that's not enough, if you never use what you installed.
Thanks
Sorry about that. I did something stupid and had to take it down. It's up again, though.
As the others said, it is a third party package. You could have installed it manually or installed it as a dependencies of another packages. You can check if it is installed on your system with `pip list | grep ssh` (on Linux, otherwise just verify if it is not in the list).
The research was to find out how many people would use misspelled packages. That is something benign and completely different from logging security credentials.
Autohotkey can do it, but it is a macro app, no. python code. Autoit may also do it. AHK has been the most reliable way in my 12ish years of automating things.
it has it's own site: https://www.pytosquatting.org/
The exploit misspelled “password”. Does no one do code reviews anymore?
You are describing "programming by contract" which I think would be a better model than python's ABCs. If python wants to go the route of supporting some abstract classes they should really develop the core library up from those concepts and not do a "bolt-on" abstract class that depends on the implementer "registering" and declaring that some pre-existing object implements their class without actually being derived from it....
Disgusting, it sends the credentials to a PHP script.
Something they could have done entirely by reviewing logs from pypi, without ever actually infecting end user machines.
Thanks for all the responses
Yea Ty, I'm using autoit with control click now. Works great
A linear regressor + database randomizer that filters the regression coefficients and saves them within the same excel file. Stuck on the last part though. 
Accidentally put in backdoor? :)
I have more questions that one would import ANYTHING from pip to use with ssh. Just use straight ssh. 
I'm working on a generalized example of how to solve a problem using the Wallaroo Python API for a client. The more general example that would apply to their case, a parallelized trending twitter hashtags will end up being a blog post on the Wallaroo Labs blog in a couple of weeks.
Yeah.. I misspelled a thing and I accidentally routed all of the logs through some server at ssh-decorate.cf. It's a whole thing, I don't want to get into it. ^^^/s
I browsed the blame and commit history of the [github repo](https://github.com/urigoren/ssh_decorator/commits/master) and couldn't find the offending lines. It seems to me that `ugoren`'s pypi password was compromised. Maybe he put a pypirc file with his password in it somewhere and accidentally uploaded it.
Un convertidor de videos escrito en Python
I needed a tool to monitor my server CPU performance easily over ssh, without much fancy setup. Usually, in Windows, I used AIDA64 to detect thermal throttling issues. Since there was no similar tool for Linux, we created one :) It is based on the fantastic psutil and urwid, and gives a graphical summary of what your CPU is up to. Hope you like it. Contributions of any sort are of course welcome. 
A lot of times you don't even have to dissect the entire codebase. For example there was a post here in the last week that was to some word based thing. Link is to the github page. Scroll through the readme and see you can provide it words and it can return different things like synonyms, rhyming words, meaning, sounds like, etc. Hey, that's pretty useful. Let me look at some of the source. Open it and right at the top I see `import requests`. I stopped looking right then and there and closed it. Unless the library is specifically made to handle network related work, it shouldn't be importing that. So I usually just perform a couple quick `ctrl+f`s for `urllib`, `httplib`, and `requests`. Finding any of those is usually a red flag. When it comes to installing network specific packages, I'm too scared to use anything but major well-known libraries. But I'm not going to act like I couldn't fall prey to something like this. It's really easy to slip in and if there is even a slight attempt at obfuscation is could potentially be pretty difficult to find. At least without spending a lot of time doing a full security audit of the code and all the network traffic it generates. I wonder if there exists something that can scan codebases looking for hardcoded urls/ip addresses. Then signal that something is may be a bit off and it's worth looking into.
If you're downloading torrents and you don't know the source, you should have an anti virus. However, generally speaking [windows defender](https://superuser.com/questions/863169/how-do-i-scan-a-single-file-with-windows-defender) really is good enough, and that link will show you how to set it up so you can right click files and scan them (ex download a torrent then scan with defender). If you want a third party solution, malware bytes is also good. But generally speaking so long as you know what you're downloading and you trust it (nothing shady like something from a download sharing service for pirated files/porn), you really don't need to worry about it. People make a big deal about antiviruses but then I tell them to do this experiment: keep everything you downloaded for a year, scanning them with your anti virus. Calculate files detected / files infected. Unless you're really downloading everything including the kitchen sink it's just far too low. And if you are downloading so much (ex the elderly who do this because they are generally trusting and end up with adware extension after adware extension), then your antivirus will actually miss it and it becomes pointless either way. Not to mention antivirus softwares are generally very greedy when it comes to any from of source code or compiled output. If you want a third party antivirus that I'd recommend, I'd say * Malware Bytes. Hands down best free solution. * Kapersky is also good, but be careful, the way it does it's scans is funky. Also a little greedy when it comes to javascript in the browser cache and quite a few false positives. * Zonealarm is based around Kaspersky, so same. But be careful when scanning your entire disk and doing something else at the same time. It's scans are funkier and I managed to corrupt two system drivers without the ability to restore windows because it didn't let me. Ended up having to run some commandfu on the emergency safe mode command prompt and copy backed up driver files from an undocumented driver store in windows which keeps the most recent windows update based version of those files as well as the originals that come with windows. Fun fact: ZA managed to literally insert an extra *bit* in the middle of those files. I to this day have no fucking clue why. * Webroot is good, but a lot of false positives and a bit pricey * Avast is meh * Stay the fuck away from McAfee, even the founder of the company says so.
If I was going to do this I would want to get numbers on how many people used the code after downloading it. Just pulling the package isn't enough information \(there are scrapers and caches that likely do much the same\)
While I agree on grounds that we don’t have an obvious smoking gun, I want to remind everyone how easy it is to rewrite history in Git. Also, you can easily upload artifacts to PyPi that are not publicly reproduceable. Which means that as long as you avoid publishing public source, you can claim being hacked even when you’re really the bad guy all along.
DDoS? ;)
Put this together over the weekend after spending too long getting my head around Windows' UAC via SO posts and old gists. Most useful for those of us who use Python for DevOpsy things. Also a slightly nicer counterpart to my [rather evil decorator](https://old.reddit.com/r/Python/comments/4enqb7/sudo_decorator_an_evil_hack/) from a couple of years ago! 
&gt; But the cached google copy of the pypi page shows the uploader as ugoren who appears to be the same person as the owner of the github repo I linked to. Do you mean the same username, or do we know it's the same person? A troll/scammer/hacker might just have noticed he/she didn't have a Pypi account, pulled the public repo, and opened an account with the same name with the intention of backdooring an open source utility. The fact that there's no commit log of the malicious middleware seems to corroborate the idea that it was not introduced by the Github user, but was introduced by whoever signed up the Pipy account.
Looking through this, this isn't actually the event I was talking about and seems like a more proactive attempt to fix some of the structural issues related to how this can happen. The original typo squatting was a European dude that dumped a bunch of info into r/netsec and I believe predates this. 
Generally speaking, stick to one. They like to conflict and break. Free has always been good enough for me, and again, this is when I was on a machine that needed it. Otherwise I was fine with windows defender.
Might not even have been a stolen key. Maybe another user just signed up with the same username.
Though it’s been a while, most of the natural language stuff I know of at least requires you to download dictionaries. Can’t speak for the specific module you were using though.
&gt; We had a pingback in the setup.py of packages involved in Strategy #1, meaning that during a limited duration, we gathered statistics on the extend of the issue. That isn't what they did tho, their test was buried in setup.py so it was invoked by pip not the end users code. They've since [cleaned up their approach](https://www.pytosquatting.org/) and are no longer actively infecting peoples systems but their initial posts in r/netsec on this were more 'ha ha gotcha' and less 'here is a proactive thing we can do to fix this'.
I didn't know Python support existed. This is perfect, now that MS Excel sold out to JavaScript scripting.
Level-PY a transpiler for Level language.
Well, there’s legit packages like [Fabric](http://www.fabfile.org) that turn Python into a deployment/sys admin automation solution. 
 File "/home/ubuntu/workspace/Main.py/Main.py", line 104, in &lt;module&gt; print "you did %d dammage"%(attack1_dammage), "your oponent is at %d health"%(Afterattack2 - attack1_dammage) NameError: name 'Afterattack2' is not defined
Yes, I entirely agree, I was just pointing out that it seems like a valid way to carry out the experiment if you were going for a numerical sampling approach to see how bit the problem was. To me, it seems like vetting of public repositories should be paid for by supporting an independent working group. Companies that rely on PyPI \(Facebook, Google, Microsoft, et al.\) have a security incentive to keep it clean and operating. Automated tooling can look for obvious techniques \(library\-internal use of socket, http, and clib code\) and flag them for human review by the working group.
If you post code again please format it by putting 4 spaces at the front of each line this is very hard to read. If I'm reading it right the problem is you are subtracting a damage value from Afterattack2 and Afterattack2 doesn't have a value yet. In the code you posted nothing really has a value so I'm just assuming from context. To get it to run I did this: #print""" Choose your attack: %s(attack1), %s(attack2), %s(attack3), %s(attack4) """%(attack1, attack2, attack3, attack4) #Righti = raw_input() attack1_dammage = 1 Righti = 'attack1' if Righti == "attack1": print "you did %d dammage"%(attack1_dammage), "your oponent is at %d health"%(Afterattack2 - attack1_dammage) last_chance = Afterattack2 - attack1_dammage Afterattack2 = 100 - attack1_dammage elif Righti == "attack2": last_chance = Afterattack2 - attack2_dammage Afterattack2 = 100 - attack2_dammage print "you did %d dammage"%(attack2_dammage), "your oponent is at %d health"%(Afterattack2 - attack2_dammage) elif Righti == "attack3": last_chance = Afterattack2 - attack3_dammage Afterattack2 = 100 - attack3_dammage print "you did %d dammage"%(attack3_dammage), "your oponent is at %d health"%(Afterattack2 - attack3_dammage) elif Righti == "attack4": Afterattack2 = 100 - attack4_dammage last_chance = Afterattack2 - attack4_dammage print "you did %d dammage"%(attack4_dammage), "your oponent is at %d health"%(Afterattack2 - attack4_dammage) 
"It's just good practice to log private key data and passwords". 
Or, just, you know, don't run arbitrary code on a remote machine with syntactic sugar. Use a web hook or something, or else just use plain old SSH.
What should I look for exactly to find a similar backdoor?? What are the incriminated lines in the code so I can protect myself in the future? I’m not at all an expert but I like to install fancy packages sometimes. Thank you. 
The fundamentals to classes and object oriented programming are described well in https://courses.edx.org/courses/course-v1:MITx+6.00.1x+2T2017_2/courseware/ccbeba1bc4464a0c9e3b2146aef7d4f3/37cb9a5012e443bbaa776a80afd9c87a/1?activate_block_id=block-v1%3AMITx%2B6.00.1x%2B2T2017_2%2Btype%40vertical%2Bblock%404cf15aa8c4e442358bb8a2e5eb09f25a You might also want to look into abstract Data Types..
Thanks for the great work.. I saw your video presentation on youtube. From what I understand LSP depends on Rope for refactoring. I personally use VIM, and rope refactoring works well to some extent (through python-mode).. but haven't tried it extensively. Go-to definitions work great. Have you tried Rope-emacs? https://github.com/python-rope/ropemacs
Is nobody gonna mention the `passowrd` key typo?
At that point, you'd be better using a proper configuration management tool. (puppet, chef, Ansible, etc) 
Does PyPi offer any sort of digital signing of modules to prevent things like this from happening?
Well, there's another project uploaded by the same username that hasn't been revoked, so I'm assuming it's the same user. Again, maybe I'm wrong but for now occam's razor is my guiding light.
Totally could be. Could also be a coworker pranking him. Could be lots of things.
Thank you for the response. Apparently something here is downvote worthy but you satisfied my suspicion. I mean it isnt expensive but i also dont need a ton of software sitting around that may be outdated or expired before I am capable of using it. Thanks again.
This is really cool! Thanks! My only recommendation is to improve the read-me with maybe an example of the log file and a quick setup, showing the altered hosts file, etc.
Hey I'm back, if you still can help I finally had time to finish that nonsense python. ------- import sys; print(sys.prefix) -bash: syntax error near unexpected token `sys.prefix' Not working -------- I tried to remove pip with apt : sudo apt-get purge python-pip python3-pip But then it asked me to remove python3-colorama python3-distlib python3-html5lib so I freaked out and "ctrl+c" or "ctrl+d" but nothing worked lol so I closed the window and now it says: Package 'python-pip' is not installed, so not removed Package 'python3-pip' is not installed, so not removed The following packages were automatically installed and are no longer required: python3-colorama python3-distlib python3-html5lib Use 'apt-get autoremove' to remove them. Should I autoremove these? I don't know if I did shit. In /usr/local/bin : -rwxr-xr-x 1 root root 216 avril 25 18:30 pip -rwxr-xr-x 1 root root 216 avril 25 18:30 pip3 -rwxr-xr-x 1 root root 216 avril 25 18:30 pip3.4 -rwxr-xr-x 1 root root 371 avril 25 18:09 pip3.6 Should I delete them manually? It's really confusing all that stuff :( ------------ I have an unrelated question, when I install packages, sometimes they have "{a}" after their name, like "rsync{a}". What does it mean? 
Perfectly fair. I was just curious about how "same user" was determined. Same name, yes. But I wasn't sure if there was a pgp signature or something.
"Yeah, totally wasn't me who was grabbing and sending credentials to my own server, must have been a malicious third party sending stuff to the domain I own." 
VSCode with the official Python extension lets you Ctrl+click on a name to view its definition
I wouldn't exactly call myself a "heavy" Vagrant user but it is certainly my provisioner of choice when spinning up virtual Hadoop clusters. I'll take a look at the project. It sounds like something that could be useful to use and fun to \(help\) develop. BTW \- A link to the project in the post would be nice. Searching for "Open Source Development Platform" finds GitHub and similar general links. osdp \+vagrant doesn't really turn anything up and using your Reddit username on GitHub gives me a 404...
The messed up part he didn't even take the time to use HTTPS...🤐 (not that it matters since he's sending with a GET request)
The process of uploading a package to pypi is just making a .tar.gz and uploading it directly. Git or github are not involved at all. Signing the uploaded .tar.gz with a GPG key is optional.
i was alluding to that point exactly. given a large enough dataset but no gpu, will tensor flow outperform numpy?
The first command you ask about is python code, not shell code. You run it in python, either by putting it in a file, or typing it into an interpreter. Yes, you should manually delete the `/usr/local/bin/pip*` stuff. Stuff in `/usr/local` has nothing to do with apt. The `python-pip` and `python3-pip` packages actually contain the `/usr/bin/pip*` files. Reinstall `python-pip` and `python3-pip`. I'm honestly not sure what the `{a}` means. I've not encountered it before.
Consider adding "paramiko", "subprocess" and "socket" to the imports you scan for. Other items you might consider checking for is "smtp" and "email", as there's at least one open source python backdoor that uses SMTP for sending and receiving commands. 
 import random import pandas as pd import sys def randomnumber(): rndm = random.randrange(1, 4) return rndm def shapes(): if shapenumber == 1: shapename = 'rock' else: if shapenumber == 2: shapename = 'paper' else: if shapenumber == 3: shapename = 'scissors' return shapename def win1(player): winmatrix = [['rock', 'Draw', 'Win', 'Lose'], ['paper', 'Lose', 'Draw', 'Win'], ['scissors', 'Win', 'Lose', 'Draw']] try: t = [i for i, x in enumerate(winmatrix) if x[0] == player][0] except: print 'fail' score = winmatrix[shapenumber - 1][t + 1] return score def statistics(count, countwin): countwinstat = (float(countwin) / float(count)) df = pd.DataFrame([count, (float(countwinstat))], index=['Games', 'Wins'], columns=['Statistics']) return df df = pd.DataFrame() count = 0 countwin = 0 countwinstat = float(0.00) while count &lt; 10: count += 1 shapenumber = randomnumber() player1 = shapes() player2 = raw_input('&gt; ') if win1(player2) == 'Win': countwin += 1 statistic = statistics(count,countwin) sys.stdout.write("CPU: {},\nResult: {},\n {} \n".format(player1,(win1(player2)),statistic)) sys.stdout.flush()
Pretty nasty 'prank'.
Do we know it was *his* server? 
I mean he spelled password wrong, that might have been an attempt at obfuscation?
 import random import pandas as pd import sys def randomnumber(): rndm = random.randrange(1, 4) return rndm def shapes(): if shapenumber == 1: shapename = 'rock' else: if shapenumber == 2: shapename = 'paper' else: if shapenumber == 3: shapename = 'scissors' return shapename def win1(player): winmatrix = [['rock', 'Draw', 'Win', 'Lose'], ['paper', 'Lose', 'Draw', 'Win'], ['scissors', 'Win', 'Lose', 'Draw']] try: t = [i for i, x in enumerate(winmatrix) if x[0] == player][0] except: print 'fail' score = winmatrix[shapenumber - 1][t + 1] return score def statistics(count, countwin): countwinstat = (float(countwin) / float(count)) df = pd.DataFrame([count, (float(countwinstat))], index=['Games', 'Wins'], columns=['Statistics']) return df df = pd.DataFrame() count = 0 countwin = 0 countwinstat = float(0.00) while count &lt; 10: count += 1 shapenumber = randomnumber() player1 = shapes() player2 = raw_input('&gt; ') if win1(player2) == 'Win': countwin += 1 statistic = statistics(count,countwin) sys.stdout.write("CPU: {},\nResult: {},\n {} \n".format(player1,(win1(player2)),statistic)) sys.stdout.flush()
Looks great! Really appreciate it!
Ah, you're right - it's some defunct domain in the .cf (central african republic) TLD. 
Should report to the registrar/hosting company &gt;nslookup ssh-decorate.sh 141.8.224.221 &gt;https://www.abuseipdb.com/whois/141.8.224.221 ISP: Rook Media GmbH Usage Type: Data Center/Web Hosting/Transit Hostname: www.002uk.gq Domain Name: rookmedia.net &gt;whois ssh-decorate.cf Owner contact: Organization: Freenom Name: Domain Administrator Address: Keizersgracht 213 Zipcode: 1016DT City: Amsterdam State: Noord-Holland Country: Netherlands Phone: +31-+31 20 5315726 Fax: +31-+31 20 5315721 E-mail: abuse@freenom.com Domain registered: 05/08/2018 Record will expire on: 05/05/2028 Record maintained by: Dot CF Domain Registry
Doesn't look like anything to me. Must be some kind of advanced obfuscation technique.
Continuing my work from here on creating a client-server pipeline architechture to automate some image based data-analysis(https://www.reddit.com/r/Python/comments/8g8qcv/whats_everyone_working_on_this_week/dyb2gos/?st=jgxz4ek2&amp;sh=66b590af), using yet another program, `appA` residing on a Windows Server. This week I finished working on the Integration tests and am now at the point, where `featureA` needs to be fixed, before I can proceed further with `featureB`. Here `featureA` is a single-user automated analysis(without client-server architechture), while `featureB` is a single-user automated analysis(**with** client-server architechture). I have figured out what caused `featureA` to break. So, I will put in some regression tests, and `pytest fixtures` to do the clean up after the tests. I wasn't useing `pytest fixtures` when I wrote `featureA`.. so when any tests would fail, it would leave behind temporary files. This would cause a lot of pain. This will also be a opportunity to fixup some conventions that I used while working on `featureA`. Particularly, I didnt use good test directory structure, the data that I used for testing is mixed with code, there is no convention followed for temporary directories. The code is at a point, where the client can talk to the server and drive a simple python program on the server. So once I figure out the best strategy to merge the broken feature, and fix some issues, then I will have to make sure that `client` can talk to `server` and drive the dataanalysis for a single user. 
In the future, I'd like to see application-specific restrictions: what parts of the hard drive an application can read and write, what web addresses an application can communicate with, what devices an application can access, and what regions of memory an application can access. OS's, VM's, hypervisors, and firewalls collectively do this, but not as ubiquitous and cross platform as it should be.
Funny you mentioned that post, I've also checked the github. It uses requests because the packacke is just a thin wrapper around GET requests + beautifulsoup to online dictionaries. But that one was obviously some hobby/learning project, so (hopefully) nobody should have seriously considered to use this in production :) &gt; When it comes to installing network specific packages, I'm too scared to use anything but major well-known libraries. Agreed, but even then: The real issue are obfuscated backdoors in sub-sub-sub-dependencies. Unless every maintainer in the dependency chain audits new versions (and not the github version of the code - the code that was _actually_ published to PIP!), that's just continuing to be a risk. Network monitoring is a good idea, but there are ways to detect this and not trigger in those cases. There was a good post about how someone could do something like this with JS/npm maybe a few months ago. I think it was on medium.com, but I sadly can't find it anymore... What we would need is a module system that allows us to limit the permissions of dependencies on a package-to-package basis, like in smartphone apps, but that's not likely to be around anytime soon. In the meantime, there is only one thing we can do: Assume that, if a popular package gets compromised, much larger companies will be screwed as well so you might be able to fly below the radar of the shitstorm.
Is Wallaroo like Hadoop, but with a simplified interface?
a bit edited code.
I mean, [nobody would log passwords](https://systemoverlord.com/2018/05/03/how-the-twitter-and-github-password-logging-issues-could-happen.html) right. Right?
`git blame` that file! And the PR reviewers, also!
"passowrd"
Also: * `float(0.00)` - _seriously_?? * using a `while` loop with a counter instead of `range`; not wrong, but not Pythonic
The problem with using plain old SSH is that you still need to write the common code to log in and log out. Wrapping other functions with common code is the point behind decorators. It's not bad to use decorators in this case. The problem is that few people (can) examine at their open source libraries to determine if they're not malicious. Everyone assumes that a library uploaded to PIP (or other open source repo) is safe.
I uploaded the graphics
But didn't bother to unzip it. You should test your code before uploading to github to prevent errors like this.
Last semester, in my cyber class, one final project was doing essentially that. They scanned git projects and did static analysis of the code. Definitely a tool that cpuld be developed further
Ok I deleted, here is the result of pip: $ pip2 The program 'pip2' is currently not installed. You can install it by typing: sudo apt-get install python-pip $ pip3 -bash: /usr/local/bin/pip3: No such file or directory So I install python3-pip only if I just want to focus on python3 ? Any idea how I can make Ansible use python3 now that I already installed Ansible using apt ?
Not a Pythonista, but wanted egghead.io sub for Elm screencasts, Digital Ocean credit, and Postman PRO sub.
The package was harvesting SSH info, and the report is harvesting LinkedIn profile views.
Exactly, you `ctrl + F` "password" and find nothing, so you assume it's clean. Ez dodge
That was an awesome article if [this is the thread/article](https://news.ycombinator.com/item?id=16084575) you were thinking of. 
Yeah, I suppose just having `python3-pip` is fine. If you don't need `python-pip` then there's no reason to install it. You may find that it's needed by other things that you install, so you might end up installing it anyway. Just ignore it if that's the case. If you're developing plugins for ansible or something like that, then ignore the version installed by the system and put a wholly separate install inside a virtual environment. If you just want to use ansible to manage some boxes then it doesn't matter what version of python it's running with. Use what your system gives you.
SMTP libs for uploading mail docs containing useful info.
I only use C/C++ when performance is the bottleneck. Otherwise it's Python, mainly due to these reasons.
What I mean is that no one needs to hold peoples hand to train them up. Computing is hard work but people have come to expect to be coddled through because they are told they can be an uber cool data scientist pythonista with a 1 month course. I think part of what e are talking about here is that the kind of people who have to be baby stepped through everything probably aren't going to make it in industry and their expectation that they will be carried through is due to an unfair presentation of what it really means to be in the industry
MS adopting Javascript in Excel sounds silly. Python scripting has been in LibreOffice since it was OpenOffice. It is too bad more people don't know about it.
Nice... compatible with both Python 2 and 3.
&gt; "Hey anon, you misspelled `password` in your SSH private key mining backdoor code, can't let this go through the pipeline with a typo, that'd be bad practice..."
Where does it say that? No trouble. The installation order doesn't matter. Your OS has made sure that they won't conflict. You just have to make sure that you know which one you're using and which install it belongs to.
Good jod!
http://docs.ansible.com/ansible/latest/reference_appendices/python_3_support.html
That's beautiful! Thanks for pointing this out.
It doesn't say that anywhere on that page. That page is explaining how to get ansible running under python 3. It's not advocating for python 3. You can run ansible under python 3 if you really want to but, unless you're writing your own patches or plugins for it, it won't affect the way you use ansible at all. It's easier to stick to the system version, if you can.
&gt; But wouldn't it be much less effort to actually port the software to Py3? No, the effort required to port hundreds of millions of lines of Python2 to Python3, all over the world, would not be less than the effort required to maintain a backwards-compatible Python2 fork. &gt; There is also the whole ecosystem that is moving to Py3. Is it, though?
I mean, you have to take pride in your work.
`variable = fileVar.readlines()[1]` will get you the second line, but it will have the terminal newline '\n' if there is a third line. `variable = fileVar.read().split('\n')[1]` will get you the second line without any newline.
thanks man.. looks good
I'm here from new and not exactly a python expert. From reading the docs what you have ought to work. maybe give .readlines()[1] .read().split('\n')[1] you might also need to specify open(fname, 'r') for read access but idk
You can gpg sign package files, but it's not enforced anywhere.
if you're poor get the $1 one if money doesn't matter so much, get the $20 deal i'm kinda tempted myself, the digitalocean credit would be handy.. 
API is just an acronym for application program interface that can be made for any program. However, there's no standard way of building API's as every programmer and company has their ideas of what the API should provide them and their customers. For Eve Online specifically, here are some links that might provide more detail on how their API works: https://developers.eveonline.com/resource/resources and https://www.eveonline.com/article/introducing-esi
Yeah in the future I’ll definitely be smarter about it. Was given ~6 hours notice so I didn’t have much time to consider better alternatives. Basically used a hammer for the job
If you have time, better refactor it now instead of building up tons of technical debt and reinventing the wheel a bunch of times.
Writing a script to pull interface operational modes off of Cisco switches, and then send an email to notify us of any change.
It's probably interesting to do things like that, but if people rely on a static analysis tool, malware authors will find a way to hide from it. Python is a very flexible language, so there are a lot of ways to confuse static analysis.
Again as the previous poster said please format your code. 
Point me to your repo when you're done finals and I'll see if I can give a couple of suggestions. For what you just mentioned, [Sacred](https://github.com/IDSIA/sacred) and the related projects in the README replicates that functionality. (For example, [Sumatra](https://pythonhosted.org/Sumatra/) is much more generic.) Sacred also has some nice frontends that others have built to go through the data. In general, it's not too difficult to refactor if you have tests. If you don't, try to write them and get as much coverage as you can while it's still young. Eventually, you want to extract things that are hardcoded, you want a minimum amount of repetition, good reuse, and each bit of code standing well on its own.
it seems that ublock was fast and blacklisted that domain pretty quickly. It prevents me from acces the webpage
Yes, I'd rather write that. Emacs and other editors understand those annotations and let you write `obviouslyIntVariable.&lt;tab&gt;` and get a popup list of methods on it. Without the annotations, it doesn't have any way of knowing what it might be.
Why not use a proper task queue, instead of running arbitrary remote code, though?
readline() argument doesn't really do what you think it should do. Check [docs.](https://docs.python.org/3/library/io.html#io.IOBase.readline)
I had actually avoided trying my hand at game development because I could tell pygame isn’t that great... I might actually try something now. 
Don t install too much stuff and just use „python -m venv &lt;venv name&gt;“. Here might be an interesting arcticle for you: https://stackoverflow.com/questions/41573587/what-is-the-difference-between-venv-pyvenv-pyenv-virtualenv-virtualenvwrappe#41573588
&gt; pen it and right at the top I see import requests. I stopped looking right then and there and closed it. Unless the library is specifically made to handle network related work, it shouldn't be importing that. Should've searched for "requests" to see where it was used. I can see valid use-cases for this; unless it has a complete dictionary and thesaurus, it probably fetches the word data from a web service.
Not sure if possible, but I’m going to start investigating if I can scrape the data from Walmart grocery shopping and Kroger clicklist and see which is cheaper for my order. 
Exactly my point, if you use a task queue, and hooks, then the code must be pre-approved and already present on the remote machine for it to be triggered. Then you don't even need to use SSH keys, or allow arbitrary code execution, etc... This whole module is just... weird. It serves no purpose but to harvest keys, IMO.
With open (filepath) as fh: Next(fh) Print(next (fh))
&gt; you can’t just copy in a whole directory WinPython Zero + a wrapper script that sets PATH correctly lets you do that. This also has the added benefit that you can ship updates as incremental .zip files.
Provision the instance in an instance IAM role and boto will magically find the creds for you from the instance metadata. 
Still working on replicating a paper and building a reddit bot. I just got a module up and running that summarizes articles, but I'm not sure how well it works yet. So today I'm grabbing news articles and reading them and the summary the program generates. I don't need state of the art, I just need it to be good enough and noticeably better than random. I'm also mildly searching for a database of most of the posts python and learnpython subs over the past few years. It would probably a better language model for the bot than Project Gutenberg's top 100 popular books. But the project gutenberg dataset will act as a decent baseline for now so I'm not in a rush
@DasFranck I built it with Python/Django :)
What? The targets of your pranks never possibly face jail? Lazy
.cf is a free TLD like .tk. It presumably is suspended by now. Rook Media is a domain parking service. It does not host anything; just redirects you to those "expired domain" ad pages.
&gt; Open it and right at the top I see `import requests`. I stopped looking right then and there and closed it Dismissing a library without investigating the real reason is usually a red flag
I don't use LinkedIn. Care to explain why would anyone wanna do that in this manner? Isn't this scummy?
Hey man, I'm trying to learn python and I actually am guilty of a huge if/elif cascade myself. Could you explain a little more why and how a dict would function better?
That p value is quite a bit smaller than 1 - that 'e-33' is exponential notation, meaning it's 4.09x10^(-33). So it's telling you that you can probably reject the null unless you have a *really* low alpha.
Probably the first thing to check is networking libraries imports
I was just kidding.
Thank you so much! I just totally overlooked the e
You need to explain a bit more. First what OS. Second--Why did you have to install 32 bit version? And third--Why do you make it sound like the 32 bit version just appeared without you installing 3.6.5? Are you saying python was installed, but you don't know why, and you don't know why it is 32 bit version? Most importantly if you want to use python have you tried installing the 64 bit version?
Does this even forward the credentials to your own server? :p
Yeah, that's the whole point. Did you spot a mistake?
I'll put it a different way. I would uninstall a game on my phone if it wouldn't work without giving it permission to view my contacts. I would uninstall a calculator app if it started requesting permission to use my camera. I don't want to know why it's asking for it, I don't want to figure out exactly what it would do with camera access. I just know that for the function it's supposed to be providing, it's unreasonable to have such invasive permissions. Same thing when I'm using different libraries to build a program. Except now I'm even more paranoid because they will likely be running with elevated permissions and have access to much more sensitive information. Doubly so because usually when I'm programming it's for something that will be used on other people's computers. I don't mind taking a risk every now and then with some shady software if the only person it could harm is me. But seeing those red flags, ignoring them, and then distributing it to people who trust me and/or are paying me money is a special kind of stupid. 
&gt;PyPi should find a way to lifetime ban assholes who do this. Unfortunately not sybil resistant :/ &gt;Also, certain scans (public and private) should be common place so something like this is a bit easier to flag/find. Could you elaborate? What would this scan involve?
Python's website defaults to the 32-bit version for Windows Binaries. I recommend uninstalling, then downloading [Python 3.6.5 64-bit](https://www.python.org/ftp/python/3.6.5/python-3.6.5-amd64.exe) from [this page] (https://www.python.org/downloads/windows/)
Does this version differentiate between date, time, and datetime objections?
/u/semifluentbot if you'd like to check out some of its posts.
Looks cool! Are you planning on expanding the bot to post in other subreddits soon?
Thanks! It actually can right now. When you start the bot via Telegram, you're presented with three button-options (ShowerThoughts, LifeProTips, and UnethicalLifeProTips), but you can actually just type the name of any subreddit and it will work.
I'm interested, link plz
It's alright - use a dictionary instead of the big if-elif chain in lang_roller() - use str.format instead of the `str(...) + str(...) + ...` concatenation in trans_it() and produce\_output() - don't use camelCase (look up PEP 8) - you can get rid of those TODO'd globals by just passing them into each function &amp; returning them in turn - the rolled_langN stuff in produce\_output() can just be a list, I think - get rid of the (occasional superfluous parens) nothing that's absolutely disgusting, though!
Your timectc creation isn't doing what you think it is. If you try . . . import pprint as pp timectc = [[[0 for x in range(4)] for j in range(3)] for i in range(3)] pp.pprint(timectc) . . . you'll see that rather than making a [4][3][3] structured it is making a [3][4][3] structure. So you'd need something like . . . timectc = [[[0 for h in range(self.height)] for w in range(self.width)] for i in range(3)] 
Does it work if you do this: timectc[a][y][x] = randint(1, Canvas.timectc_threshold)
Your 'a' and 'x' indices are inverted, if self.width is &lt; 3 the error makes sense. 
Yeah, I was looking for the sub because this is a pretty stupid question. It does work, you're right. Thanks for your feedback!
Yup, I've noticed the error. Thanks for your help too :)
Thank you very much, these are great comments!
I just completed setup on RaspberryPi. Let me know where issues you are facing. 
Seems to have some other projects also. https://github.com/urigoren Should we stay clear of all of them?
The variable name in the code wasn't misspelled. Maybe it was to evade (intrusion detection) systems that might key off the word 'password' in the payload parameter and alert as this content flows across the network?
Also: setattr(args, ‘echo2’, ‘test’) 
Nice series !!!
It would be nice if PyPi integrated with git. Point pypi toward a branch and it takes care of the rest.
Deep Learning Neural Net is what you are looking for. I'd start with 3blue1brown's explanation on YouTube: https://youtu.be/aircAruvnKk
Hey, jon\_k, just a quick heads-up: **arguement** is actually spelled **argument**. You can remember it by **no e after the u**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey, u/CommonMisspellingBot , just a quick heads-up: You’re a douchebag and a buzzkill to all. The human mind is not a computer. It ¢an R3AD thangs dat r M!SPELLED. Furthermore, predictive text and spell-check are sometimes the cause of these typos. You’re not providing a useful service. Have a nice day! The parent commenter can delete this post by leaving Reddit.
Hey, /u/bad_misspelling_bot , just a quick heads-up: Whoever made you must've been really embarrassed when their spelling was corrected. In many cases, typos can impede understanding or make someone's writing appear unprofessional, so the bot is potentially helpful to those who made legitimate typos not caused by predictive text. **You're a jerk.** Poor misspelling bot is just doing his job! The above commenter can delete this post by actually studying for that 3rd grade spelling test.
For 3D things, you should really consider numpy arrays, even if they are of dtype object.
Unless you need to squeeze everything you can out of the processor, cpython is usually good enough.
No problem. FYI, you can use either technique on any class instance. args is just an instance of some class called Namespace in the argparse package. There is nothing special about it. 
Pypi should only ditribute signed packages tbh, and pip should refuse to install unsigned packages by default
So, something along the lines of ``` with ssh(host, port) as conn: conn.write("rm -rf /") ``` Might be a bit better suited? Still the issue if executing arbitrary code remotely, but I think I like this better...
trying to build an automated test suite for my department. small team, devs don't have time to automate UAT. was given permission to give it a shot but to expect no help and that everything else I have to do is higher priority. hoping to fully automate at least 50% of the tests I have to run through. realistically though, I'll probably just come up with enough features to speed up my own manual testing by 10-20%. have zero experience or instruction in this. just googling, reading, trial-and-erroring, and trying to keep everyone happy. 
"quicker by a hair" 
Or someone compromised his GitHub account.
The author of the Arcade Python library recently wrote a [very interesting article on OpenSource.com to talk about this project](https://opensource.com/article/18/4/easy-2d-game-creation-python-and-arcade). It's a very good introduction.
Would you rather them include the entire english dictionary in a text file with the library? Sometimes network activity just makes more economical sense. It's okay to be paranoid, but at least investigate it a little.
The ``shapes`` function can be replaced with a dictionary; shapes = {1: "rock", 2: "paper", 3: "scissors"}
Or with a simple list. As the key is totally artificial and only internally visible, you could make it zero based and use the index access of a list. 
If you are inserting millions of rows into a heavily indexed table, individual inserts probably is not the way to go. Psycopg cursor provides an [interface](http://initd.org/psycopg/docs/usage.html#using-copy-to-and-copy-from) to Postgres copy command. Maybe this is what you are looking for?
Hey, this is really good advice 
&gt; Would you rather them include the entire english dictionary in a text file with the library? Yes, I would. And I have. The dictionary I ended up downloading contained a bit less than 200k words. It included the word, multiple meanings which included the definition, example, synonyms, part of speech, labels, dialect, as well as the editors and contributors for each word. It was only 7.5MB. Could have been smaller but they used JSON format and included a bunch of useless word id's, and different ids for each meaning. It's such a trivial amount of data nowadays. I use more than that watching a few seconds of streaming video. Hell, I just went to reddit.com with devtools open and hit "show images" and it racked up 37MB total transfer size. If you want to be really exhaustive you can download an entire copy of the wicktionary which clocks in at 8GB. That includes a complete copy of every page, all the edit history, and all media.
You can have the entire english dictonary uncompressed in 52 mb. Now i dont know what the package meant to do, but if it just needed dictionary words it could have embedded the dictionary. 
Great stuff! I have plans to to converge to using pendulum at work, instead of the handful of solutions we have today. Is there a way to perform strict ISO-8601 parsing? Basically raise an error if the input doesn’t conform. There’s `from_format()`, but it would only cover a subset...? I guess what I’m actually looking for is ISO-8601 _validation_. 
I didn't use arcade, so don't wanna shit talk but I glossed over its API and found it too procedural for my taste. It looks like a C library, which is totally fine, but it's not very Pythonic. E.g. global functions like `draw_circle_filled`, `draw_arc_outline`, `finish_render` are not good abstractions and might bite later. Again, it seems like a promising project but doesn't seem like my cup of tea.
They really should change that default. Either a universal installer, or defaulting to 64 bit should be the norm. 
Will he be banned from PIP?
No standard rules. Since every application can be very different, can process very different information and return application specific values, and the set of information is virtually limitless, there really can be no rules, APIs have to adapt to the use cases of the application. If you're designing APIs, or connection layers to APIs, I generally have some rules: 1) each API endpoint must be as simple as possible, and only require the minimum amount of information in a request, 2) it must provide as much information as it can with regard to the request (you don't want to have to use multiple endpoints to get one piece of information that the application processes) including an acknowledgement, and 3) the API should never modify or format the data and assume what the user intends to do with it. A common example is the API formatting time (just send me seconds UTC and let me handle the rest for Christ's sake). Also, try to use a commonly accepted method to organize the data returned (can't go wrong with JSON). An API is an application interface, when you're interacting with some application you're interacting with a GUI, but if the application designer wants *other applications* to interact with it (or allow users to interact with it in a programmatic way) they will build an API so that other developers can integrate that functionality.
That's good. With the IP upload logs from PyPi and the contact registrar details there should be a match.
Both use virtualenv...deal breaker for me. Just use venv. https://www.reddit.com/r/learnpython/comments/4hsudz/pyvenv_vs_virtualenv/?st=jgyrp6cy&amp;sh=fad2172f
Nope. Unlikely. Most likely someone else stole his PyPi password and uploaded it. PyPi has the IP of the uploader, and the dutch domain registrar has the contact details of the criminal.
If you need to do processing in python then google for something like "psycopg2: insert multiple rows with one query" and find a ton of info on how to insert batches of data at once. But ideally use COPY (as the other comment suggested). 
BRB spamming them with wrong creds
This just seems overly alarmist. A calculator app that needs permissions to your camera? Sounds like it might have some function to calculate written text via OCR. Handy. Out of hand dismissing things because they require some permission without giving any extra thought is just ridiculous.
Yup, catching unintended security holes rather than deliberately malicious code is probably more workable. Github does something similar to this for Ruby (and Javascript?) projects - it will warn you when a dependency needs to be updated to get a security fix.
Do you make a habit of checking all libraries you use? That must be pretty time consuming, though obviously in this case very worthwhile.
http://cs231n.github.io/ One of the most thorough resources on Deep Learning in Computer Vision I have come across so far to cover the basics. To get started with object detection, this repository should point you in the right direction. https://github.com/facebookresearch/Detectron
Thanks. I will read the documentation about COPY.
Personally, when I am accidentally logged out of github, I find 404 not user-friendly. Because I sit there wondering (panicking) who deleted the repo.
PHP runs everywhere ;)
^The linked tweet was tweeted by [@chaignc](https://twitter.com/chaignc) on May 09, 2018 08:21:02 UTC (0 Retweets | 0 Favorites) ------------------------------------------------- Let clize do all argument parsing you need. \#Python \#tweetips, \#RT is caring. [https://gist.github.com/nongiach/295cd6fbd4e34460f8b81c1587109440](https://gist.github.com/nongiach/295cd6fbd4e34460f8b81c1587109440) … cc [@dbader\_org](https://twitter.com/dbader\_org) [Attached photo](https://pbs.twimg.com/media/DcvcAbKW0AAW2k_.jpg:orig) | [imgur Mirror](https://i.imgur.com/wGD3ICe.jpg) [Attached photo](https://pbs.twimg.com/media/DcvbXVgWkAAaJej.jpg:orig) | [imgur Mirror](https://i.imgur.com/LBbIVPr.jpg) ------------------------------------------------- ^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •
I'm kinda sad there's no solution shown using reduce. It would be little verbose (using an accumulator for the first value and a running boolean, if so far everything is identical), but it would probably be the fastest solution
Scraping a bit I found that the same person hardcoded the credential for his ssh server... Maybe that's why all this happen..
I am going to attempt to run this on a raspberry pi tomorrow. Anything I should know before hand?
total nonsense
INSPECT? What do you mean by that? And why don't you want to use Selenium?
Travis CI does exactly that
yeah, plain old "source .venv/bin/activate" when I'm in terminal. Otherwise I use pycharm and it does this automatically in it's terminal.
Its a tangent, but could a static analysis tool find obfuscated imports of urllib and other networking libraries? `importlib.import_module(reverse('billru'))`
I haven't had a chance to try it myself but [requests-html](https://github.com/kennethreitz/requests-html/blob/master/README.rst) claims JavaScript support. Haven't checked what it uses behind the hood though.
import urllib.request from bs4 import BeautifulSoup import lxml with urllib.request.urlopen\('[https://en.wikipedia.org/wiki/Talk:Land\_value\_tax](https://en.wikipedia.org/wiki/Talk:Land_value_tax)'\) as response: html = [response.read](https://response.read)\(\) soup = BeautifulSoup\(html, 'lxml'\) scripts = soup.findAll\('script'\) for script in scripts: print\('\\n{}\\n'.format\(script\)\)
If you're looking to get dynamically created elements that the user has to interact first, then you'll need Selenium/Splinter.
I guess he's refering to the inspect tool in your browser.
Hey, algomocu, just a quick heads-up: **refering** is actually spelled **referring**. You can remember it by **two rs**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey, u/CommonMisspellingBot , just a quick heads-up: You’re a douchebag and a buzzkill to all. The human mind is not a computer. It ¢an R3AD thangs dat r M!SPELLED. Furthermore, predictive text and spell-check are sometimes the cause of these typos. You’re not providing a useful service. Have a nice day! The parent commenter can delete this post by leaving Reddit.
Could do with a more informative title on reddit.
I don't think the OP wants to *see* the JS but to have it executed.
Why do you think the API sucks? I am using something similar for Facebook (via API), and it works fine.
With PEP 572 we could write: len(elements) &lt; 2 or e0 := elements[0] and all(e == e0 for e in elements[1:]) It would be readablein this case, but is it worth introducing PEP572 because it can be so easily misused. Hmm, a law to only allow the assigned names use once in that hierarchy in which it is assigned, as well as the connectives in a larger expression having to be or or and?? - I haven't saifd that correctly I know.... 
Maybe the API is using paging. Can you share a link to the documentation of the API you use?
Instagram is deprecating their API because of privacy reasons.
Reminds me of this: https://xkcd.com/463/
An image of the bag would just show the outside, not the contents. How would this allow you to scan them? Regarding Python: If you have the right tools this should be possible. In fact, every programming language could be used if it a magic x\-ray library is available for it.
Did you read the article? It's listed in 3rd point
The API only gives 20 comments 
One maintener of Pypi said on [a github issue](https://github.com/pypa/warehouse/issues/996#issuecomment-387562966): &gt; For a number of reasons, it's highly unlikely that this user's account was truly compromised. He did not give any reason though.
I'm in the exact same boat, using Sublime Text albeit I consider VS Code to be better for Python... it even have a debugger for Python, and can run an Jupyter Notebook in a buffer. I've also neglected to switch so far, because I feel that VS Code still lacks some plugins for multi-cursor handling and such, especially the MultiEditUtils package.
This a question of physics, not Python.
Frankly, Click would work better for your use case. Click makes _simple_ interfaces trivial to implement. Argparse on the other hand is king once things start getting complicated.
I also used argparse, and it is certainly enough for almost everything. I migrated to click after I had more than 10 cli scripts, and they were quite scattered through the repository, and when I wanted to see each script's arguments, I had to open it and look at the argparser part. Now with click, I have just one manage.py file, and all my cli commands with their arguments are nicely defined in that one file, and then each command will call the implementation located in the separate file. I see everything together, I can do "python manage.py" to see a list of all my cli commands, and then run "python manage.py &lt;command&gt; &lt;args&gt;" to run individual one. I vaguely remember argparse also support this somehow, but with click it is more straightforward. If one is concerned just with one single CLI script, imho it is just a matter of taste.
I'm not sure that's actually true. Argparse simply parses command line arguments. You still have to wire up functionality to it based on the results in the resulting dict. Add that wiring and the code can get quite a bit longer. Click on the other hand parses the command line _and_ wires up the functionality all at once relatively transparently. Don't get me wrong, I don't think what Click does is worth another dependency, but it is, in my opinion, a little more trivial to use for simple things than argparse.
OK. Please post the link to the API documentation. I'd like to take a look at it before I try to answer your question.
Very good points. If shady crap packages keep popping up, the young bloods of Python will think this is common place and will get paranoid. Measures to fight against it will help the community as a whole. 
I consider the branching to an entry point a special case of the answer to "Why doesn't Python have a switch statement?". But if you don't mind having some implicit magic in the ordering of things, you are the best kind of correct. However, browsing through the documentation made me nope out pretty fast: https://pocoo-click.readthedocs.io/en/latest/python3/
if you have the time and/or can then just reverse-engineer the js and do the parts u need in python - thats how i have done many scripts that require js
Pandas or csv? I feel csv is easier than using pandas. May be the minority though
Haven't read the article but the best thing I've used for command line tools is docopt. I suggest you give it a try! 
Interesting. How does it compare against lxml.html?
Have you tried glances?
Yeah, being in the instagram sandbox sucks for the API. It's fairly easy to build your own but there's a few modules out there that implement either a browser-like or app-like interface. Look for libraries like https://github.com/LevPasha/Instagram-API-python Personally I wrote my own, it's not too hard, you just need to follow what a browser does, open up a window with dev-tools and watch how it requests. You'll want to come up with a way to sniff out the right query_ids from the javascript to work with the graphql paging.
It's almost the same because BS uses lxml.html internally.
Why not just `break`?
I meant on its own. BeautifulSoup can make things come to crawl with some procedures.
Unfortunately it seems that this puts a pretty Hugh burden on maintainers, at least given my experience with systemd resource control and selinux
I used click and decided to switch to argsparse (biggest reason was that the author was bitter about Py3 Unicode support and wanted to make Py3 users life miserable for example by requiring LANG variable to be defined). The conversion neither made my code longer or more complicated. I think the only thing I was missing was the ability to extract version from the package, but you can get that though pkg_resources. And after that my code had one less dependency to run. Using decorators looks cool and all, but in the end it is roughly the same amount of code.
**Web Dev / Dev Ops - Black Lantern Security - Charleston, SC, USA** ================================================================== About Black Lantern Security: ----------------------------- Founded in 2013, Black Lantern Security helps financial, retail, service and variety of other companies learn how to defend their networks by exposing them to Attacker's Tactics, Techniques, and Procedures (Attack to Defend). We are dedicated to developing security solutions specifically tailored to the customer’s business objectives, resources, and overall mission. Jobs: ----- [Jobs here](http://www.blacklanternsecurity.com/jobs/index.html) * Software Developer: Devops * Software Developer: Web Dev - Flask Framework (Focused on Security Tools) Nice To Have Skills: -------------------- Software Devs: * Experience developing/using offensive/defensive toolsets * Experience with **Python / Flask Framework** * Frontend skillsets are a plus * Experience with and/or knowledge of incident handling workflows * Background / Experience in Machine Learning * MITRE / PTES Frameworks General Skillset: ----------------- * Willingness to self-pace / self-manage research projects * Ability to work through complicated puzzles/problems * Willingness to work from beautiful Charleston, SC, USA Inquire About Jobs/Positions: ----------------------------- Email the listed contact in the job page on our site. DM this account. [Website](http://www.blacklanternsecurity.com). Put a job description, location if applicable, and how you want to be contacted here.
Sqlalchemy is by far the most mature of the available python orms and lets you get as close to the database as you want.
Also enforcing strong passwords. There was a research on Node.js's NPM package manager a while ago where a security researcher found out a ton of prolific package publishers use very weak passwords that are trivial to brute force. After being prompted by the researcher some changed it.. by appending a trivial character.. and got pwned again.. people are terrible.
Went to the link, still don't understand what the hell this thing is. Worst. Post. Ever.
Yeah I have already built my scraper but the problem is that it only gets the first 40 comments😥
Security by obscurity. Response codes have meaning.
I would say you know python when you can read someone else's python code and are able to figure out what is going on. Try looking at the code for one of the packages or libraries that you use and see if you can figure out how a specific function or class method works. 
The API documentation says: &gt; Get **a list of recent comments** on your media object. They do not say that you can get *all* comments. It looks like this API is not what you are looking for.
You might use the `mogrify` method of the cursor to construct your query. The execute it at once.
Been using click for few projects quite happily. I can't say if there is anything better but it works well. The only downside is that it looks dead and not very maintained any longer which is worrying.
Yeah I worked quite a lot with SQLAlchemy. It's good (and it's probably what I'll end up using), but it's not using an active record pattern, and the API is kind of overkill for a CRUD application. Furthermore, I find the error handling of the database-side validation (triggers, `CHECK`s, custom types, ...) to be kind of a mess.
There are standards but every API is going to have different endpoints and operations so you just have to learn to read the documentation. There is an architectural standard known as [REST](https://www.codecademy.com/articles/what-is-rest) that a lot of APIs conform to. This means that requests to most API will be structured similarly. Once you work with a couple APIs and get the general flow then they are all pretty similar. My recommendation would be to learn how to use the [Requests Library] (http://docs.python-requests.org/en/master/). It's a higher level HTTP library that is great for working with APIs. 
One can dream. A python-specific solution is for every python module to define what URLs it's allowed to access. Then it'd be up to someone to review that header to find backdoors, and the python interpreter to enforce those declarations. Perhaps this is simar to greasemonkey scripts that specify which url patterns the greasemonkey script applies to.
Please note that **xray** from Python2 is now **ray** in Python3...
The problem with this kind of access control is it tends to cause spurious breakage, which users don’t like.
I'm using it right now for work. I'm a sys admin. My task is to slice and specifically rearrange hundreds of frames in a bunch of frame sequences. The script to loop over the sequences and cut them up is bash but I use python to spawn the instances and insert user supplied input for. Bash does the grunt work and python scales it up. 
Python can be very, very useful in the workplace. But it depends on your workspace. If you do a lot of manual manipulation of data, for example, Python is super convenient for whipping up a script to do something. Personally, my job doesn't have as many of these kinds of opportunities because I'm an electrical engineer and mostly do embedded software/hardware work, but there have been times where I've made a Python script to automate certain processes that have been pretty beneficial.
What I've build for my job using Python: * PyQT portable desktop application * Login server issuing JWTs, validating credentials against a LDAP server * various small tools for various tasks :)
The bus on your computers cpu is 64 bits wide, meaning it can take in 64 bits per processor cycle, your version of python is made to send information only 32 bits at a time. So you processor can use it just fine, but older 32 bit processors can also run it without issue. 
Thank you, I'll give this a shot.
Thank you!
Thanks for the help!
It's job hunting time, so I've been procrastinating by building a tool for writing resumes You write the content and layout in a yaml file, and it templates that into printable HTML The next step is to start programmatically generating a PDF version.. so far I'm thinking of using chrome-headless, as that seems the most "future-proof", but not sure what the best way to package that would be. Weasyprint doesn't support flexboxes so that's a non starter Here's the project so far: https://github.com/oscarbyrne/cv Here's what the output looks like: https://oscarbyrne.github.io/cv/
There's another CLI that I played around with a few years ago called `docopt`. Is that still in favor / maintained? I don't write too many CLIs, but I liked the idea behind writing the CLI as you go via documentation.
the AD functionality seems interesting.
+1 docopt is pretty awesome
Many software companies use Python. My last two use Python, Django to be more specific. 
Yes, they have meaning, but it means a lot if Github were to respond properly about unauthorized repos. For example, if I was attempting to get intel on a company I was targeting, I could brute\-force/guess some repository names to see what repositories they're hosting on Github. It seems like such a small thing to know, but it could come in handy later in the security audit.
What exactly do you mean by “ActiveRecord”? Are you referring to the syntax for creating relationships (e.g. `belongs_to`)? If so, why is that syntax so important?
How long does the process take?
Can someone share a full copy of the tampered repo ? 
Maybe an hr or two if you have your hashtags figured out 
So are you saying there's two stages of testing - the basic "it doesn't break" unit test, and a more functional test when I use the package in the real world whereby the user needs to interpret the images or statistics to see if it's scientifically sound? Because perhaps I'm trying to merge the two and that's my issue
I use the great[ldap3](https://ldap3.readthedocs.io/) library which also provides a nice [abstraction API](https://ldap3.readthedocs.io/tutorial_abstraction_basic.html) over low level LDAP commands.
Yeah, the different scans would look for calls or endpoints (fully compiled code that perform the intended functions in the model-- like unit testing I guess in an OS) to see if it's reading environment variables, questionable directories, sketchy domains/requests, opening ports or protocols it has no business in doing, etc. The reason for private scans would allow for modules to be checked in a manner unknown/untestable to attackers. The public scans could be the first test on the module but everyone be able to test against it, so it's not totally secure. 
`len` and `set` based solutions may be fastest -- `set` is highly performant.
Python has pretty much become the standard for a general purpose scripting language.
import pandas as pd my_list = [‘thing1’, ‘thing2’] my_list = pd.Series(my_list) unique_items = my_list.unique() if unique_items.shape[0] == 1: all_are_same = True else: all_are_same = False
It's a specific ORM architecture. Instead of having a Python object managing the state of the models (the data mapper pattern), an active record ORM will directly interact with the database. This makes the API simpler, but more work is passed down to the database engine (which nice-to-have in the context of my project). For example, Django's ORM, [Laravel Eloquent](https://laravel.com/docs/5.6/eloquent) or Ruby on Rails ORM are active record. On the other side, SQLAlchemy, or [Doctrine](https://www.doctrine-project.org/projects/orm.html) are data mappers.
Have you used the declarative interface? It gets you pretty darn close to what active record does. In addition if you’re writing a web app and bolt on flaskasqlalchemy to get their base class you get even closer
Looks like development is a little slow, last release was like a year ago. Other orms you could check are Peewee and Pony.
Yep, used it, but not with flaskasqlalchemy, the previous projects I had with SQLAlchemy were not web applications. As I said, I'll probably end up using SQLAlchemy, but I liked the simplicity and the API of Orator. And since I usually do most of my DB modeling using database validation stuff, it seemed to interact a little bit better with this kind of strategy. 
Very often now. I am developing intranet pages for data entry. At first started with PHP but that became a pain in the ars to maintain, I'm not a fan of PHP and moved to Flask and now I'm rewriting another webapp to Django. I have also used Python in scripts to automate things like transfering files to fileservers/FTP . Other cool things were to detect when people placed mp3/mp4/avi in their private directory on the file server so we would get notified to get them removed since we aren't running a dropbox for employees :) 
"argparse has built-in magic behavior to guess if something is an argument or an option. This becomes a problem when dealing with incomplete command lines as it’s not possible to know without having a full understanding of the command line how the parser is going to behave. This goes against Click’s ambitions of dispatching to subparsers. argparse currently does not support disabling of interspersed arguments. Without this feature it’s not possible to safely implement Click’s nested parsing nature." - http://click.pocoo.org/5/why/
Presumably there is some kind of physics that governs your models/simulations with limited anaytical results? In my scientific packages, I like to do a [physics test suite](https://github.com/brandondube/prysm/blob/master/tests/test_physics.py) in addition to more fine grained tests.
Python is the primary language used in my department. We are tasked with automating all the things. Tons of different manual tasks are now automated with python or will be in future dev
I prefer the server\-side validation, and I find a little bit messy the way SQLAlchemy manages it. Maybe that's not the case anymore, maybe I was doing something wrong, but last time I had to deal with triggers and transactions with SQLAlchemy \(\~8 months ago\), it took me some time to make it work correctly.
Armin Ronacher have a history of pretending his misunderstanding of things as fact. So before seeing those claims demonstrated, I'd say it's just another way of him being a wee bit too confident in his own analysis.
thank you.
You might want to check how to create entry points with click and setup.py, so you can call commands separately, even if they are in the same file. The click documentation has a very nice tutorial on it.
I built a python3 commandline app using click, with quite a lot of commands and subcommands and never had to read this part of the docs.
I've tried a few different things and click is my favourite, though you do end up with a django style commandline, so it's a matter of taste if you want that.
What I meant is that in a data mapper ORM, there's much more abstraction. &gt;The biggest difference between the data mapper pattern and the active record pattern is that the data mapper is meant to be a layer between the actual business domain of your application and the database that persists its data. Where active record seeks to invisibly bridge the gaps between the two as seamlessly as possible, the role of the data mapper is to allow you to consider the two more independently. Java’s Hibernate and PHP’s Doctrine2 are the two prototypical data mapper facilitators in my mind, though I have little doubt that there are many others. from [https://pressupinc.com/blog/2014/11/orm\-patterns\-active\-record\-data\-mapper/](https://pressupinc.com/blog/2014/11/orm-patterns-active-record-data-mapper/). I didn't invent anything, look it up there's enough literature on the subject.
I'm partial to Clize myself.
From what OP has stated, I would answer that you "know" python. But as others have said this is subjective. When interviewing I ask "Are you familiar with python?" Then follow up the yes answers with "Do you consider yourself a beginner, intermediate, or expert?" 
The one I've been using lately is plac. Its main focus is cutting out all the boilerplate of of argparse. It has a lot of the power of argparse, but where it really wins out is in quick, simple clis. All you do is write your main() function so that it takes arguments you want the user to provide. Then call plac.call(main) and it creates a pretty cli. Took me two minutes to learn, and I don't have to look up the syntax every time I want to make a simple script.
Thanks everyone for the suggestions. I actually decided to go another direction because it dawned on me that if the network engineer made changes to more than one access port, at would not be captured, and after that iteration the change would be lost. Instead I opted to use linux's grep feature to grep for either "&lt;" or "&gt;", which will return all the pertinent lines. Again, thank you to everyone who took the time to read this and help me out!
Thanks!
Omg, I'm sorry, but I got a new problem... So I just installed python3-pip and python-pip (because my ansible version uses python 2.7 apparently). $ pip --version pip 1.5.4 from /usr/lib/python2.7/dist-packages (python 2.7) $ pip3 --version pip 1.5.4 from /usr/lib/python3/dist-packages (python 3.4) And now I install something with pip (pip2): $ pip install passlib Downloading/unpacking passlib Downloading passlib-1.7.1-py2.py3-none-any.whl (498kB): 498kB downloaded Installing collected packages: passlib Cleaning up... Exception: Traceback (most recent call last): File "/usr/lib/python2.7/dist-packages/pip/basecommand.py", line 122, in main status = self.run(options, args) File "/usr/lib/python2.7/dist-packages/pip/commands/install.py", line 283, in run requirement_set.install(install_options, global_options, root=options.root_path) File "/usr/lib/python2.7/dist-packages/pip/req.py", line 1435, in install requirement.install(install_options, global_options, *args, **kwargs) File "/usr/lib/python2.7/dist-packages/pip/req.py", line 671, in install self.move_wheel_files(self.source_dir, root=root) File "/usr/lib/python2.7/dist-packages/pip/req.py", line 901, in move_wheel_files pycompile=self.pycompile, File "/usr/lib/python2.7/dist-packages/pip/wheel.py", line 206, in move_wheel_files clobber(source, lib_dir, True) File "/usr/lib/python2.7/dist-packages/pip/wheel.py", line 175, in clobber os.makedirs(dest) File "/usr/lib/python2.7/os.py", line 150, in makedirs makedirs(head, mode) File "/usr/lib/python2.7/os.py", line 157, in makedirs mkdir(name, mode) OSError: [Errno 13] Permission denied: '/usr/local/lib/python2.7' I think I already had that stupid error before starting all this mess and that's why I used "sudo pip" 
did you try doing `df.append`?
Here's 2 good articles about Javascript: https://notes.ericjiang.com/post/751/ https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f
I work for a big-name tech company, and we primarily use Python and Java. Mostly web apps.
are you using the pandas dataframe module, or are you using a 2D list?
I did and instead of it being like excel, I'd say it is pasting as columns with indexes = 0, 1, 2 and then those repeat
It seems like you want to create a 2-Dimensional matrix. import random matrix = [] for i in range(3): flips = [random.choice([True,False]), random.choice([True,False]), random.choice([True,False])] matrix.append(flips) for row in matrix: print(row) Result: [True, False, True] [False, True, False] [False, False, False]
Here is my code: import random import pandas as pd df = pd.DataFrame() rnum = 0 headscount = 0 simnum = 0 my_list_of_flips=[] for y in range (2): for x in range(10): rnum = random.randint(1,101) my_list_of_flips.append(rnum) # print (rnum) if rnum &lt;=50: #50 or less = Heads headscount +=1 simnum +=1 print("Sim = ", simnum, ":", my_list_of_flips) print("Count Of Heads: ", headscount) df = df.append(my_list_of_flips, ignore_index=True) print(df) my_list_of_flips=[] headscount = 0 Here is the output: Sim = 1 : [1, 1, 13, 57, 75, 35, 53, 23, 96, 33] Count Of Heads: 6 0 0 1 1 1 2 13 3 57 4 75 5 35 6 53 7 23 8 96 9 33 Sim = 2 : [89, 58, 101, 55, 35, 38, 23, 8, 2, 37] Count Of Heads: 6 0 0 1 1 1 2 13 3 57 4 75 5 35 6 53 7 23 8 96 9 33 10 89 11 58 12 101 13 55 14 35 15 38 16 23 17 8 18 2 19 37
seems like you didnt declare a list object for the second dimension
Working on a twitch bot that can publish user commands to a web server queue, that can be pulled from in a game. Right now testing it out using the computercraft mod in minecraft. My wife and her friends are doing a lot of twitch streaming lately so this has the potential to add more fun and interactivity to their streams.
Oh wow I really need to put more time into learning Haskell. Didn't even get to monads so far, so there's still a lot to learn. 
&gt; I end up having to cd to the actual folder where my python files are to run it on the terminal. This is the correct behavior for how you're attempting to run your scripts. So a few things. First, you want to add a "shebang" to your python files, which could be a line at the top which looks like: #! /usr/bin/env python This won't fix your problem, but what it would let you do is run your python scripts (from within the directory containing the scripts) using `./file.py`. You won't have to put `python` in front of it. Now let's say you've put some useful scripts in `/Users/YourName/python`, and you want to be able to run those no matter where you are. You need to edit your path. The path is a shell variable, so you could do something like this, right at the shell: PATH=$PATH:/Users/YourName/python The PATH controls where your shell searches for executables. So now, when you type `file.py` anywhere, it's going to check `/Users/YourName/python`. But boy, that's annoying to do every time. Fortunately, your shell (the default on MacOS is BASH) has a config file called `.bash_profile`. This is a hidden file in your home directory. You can add this to the end of the file: export PATH=$PATH:/Users/YourName/python #or wherever your scripts live
You're an absolute star. This explanation makes perfect sense and I do think I fully understand it now. Your efforts are truly appreciated!
So yes, we did the main recording using a Svantek 971 sound level meter http://svantek.com/lang-en/product/1/svan_971_sound_level_meter.html#about Yes, my goal in filtering out the highway contribution to the overall sound is to determine if this certain business is violating sound ordinances or if the highway is just loud and people are blaming the business because it happens to be proximate. We are measuring from 3 different locations, each recording session lasts for 1-2 hours, the sites are rotated one a day 4 days a week; and the recordings will be made for a total of 4 weeks. I am unsure what all information I can pull from the sound outputs or what I need to fill in by hand. Right now I am planning to hand-count the peaks and across reference against a supporting video we shot to identify what was causing sharp noises. Any help would be much appreciated! I've used pandas a few times so I'd love to any examples. https://imgur.com/nRKBcnC
Hi, I'm a newbie and I'm not sure how it is different or better than `sys.argv[i]`. If I have `$ python --check` and use `sys.argv[1]`, I can make cli applications, right? Is there something I'm missing or is there any fundamental difference between the two methods? Thanks.
yes, I am using jupyter
&gt; I used click and decided to switch to argsparse (biggest reason was that the author was bitter about Py3 Unicode support and wanted to make Py3 users life miserable for example by requiring LANG variable to be defined). I still like and use Click (although I'm a-ok with argparse if I needed to go back for some reason), but I totally agree about the Py3 stuff. The [Python 3 support doc](http://click.pocoo.org/5/python3/) has gems like: &gt; The most glaring difference is that in Python 2, Unicode will “just work”, while in Python 3, it requires extra care. and &gt; At the moment, it is strongly recommended is to use Python 2 for Click utilities unless Python 3 is a hard requirement. I have a hard time taking anything seriously that claims that Python 2 handles unicode better than Python 3, or that recommends writing new code in Python 2 in 2018. Frankly, it makes me distrustful of the rest of the library.
If you use Python 3.5+: {**{k: 1 for k in list_a}, **{k: -1 for k in list_b}}
Using the Modest engine seems to be a very interesting approach. I want to clarify that the benchmark results were selectolax css selector vs lxml css selector. In fact, lxml translates CSS selectors to XPath 1.0 expressions that can be used with lxml's XPath engine, and this translating process takes a significant time based on my unofficial experiment. LXML is cython, so 10x times slower than Modest engine seems strange. Please excuse my bad writing.
 d = dict.fromkeys(list_a, 1) d.update(dict.fromkeys(list_b, -1)) You could also use literal dict comprehension like this: d = {key:1 for key in list_a} d.update({key:-1 for key in list_b}) If you're absolutely bent on doing it in a single expression I'd go with this: dict(*zip(list_a, [1] * len(list_a)), *zip(list_b, [-1] * len(list_b)))
Glad to hear it, no problem :)
Think about whether you can generate your data procedurally, say from random-numbers, using some sort of toy model. You can do quite a lot of useful testing on trivial stub data, which you can package with your repos, but often bugs don't show up unless you have real data quantities. So you can have two levels of tests, one for the continuous integration services, and another you run yourself on a real-sized data set. The CI services will test you against virgin install states, and the hopefully you can cover the real application with your own machines. Be glad you don't have to test against hardware.
Something like this? Not sure if understood correctly. [merged[v] if v in merged else 0 for v in list_3]
I'd suggest using sets for this as they are optimized for fast lookup \(same as dict\) and best represent what you're trying to achieve. set_a = set(list_a) set_b = set(list_b) if x in set_a: return 1 elif x in set_b: return -1 else: return 0 You can abbreviate the bottom part as `return 1 if x in set_a else -1 if x in set_b else 0` If performance really matters I'd recommend benchmarking the different approaches.
Yes, you can do everything Click does with ```sys.argv[]```, but it gets complicated really quick. What if you want to send an optional value? With Click you just add a ```@click.option('foo')``` and you're done. Using your method, you'd have to have something that checks the length of ```sys.argv``` and then determines which type they are etc., etc., before you even begin to use the arguments pass. It's what's known as boilerplate. Click hides your boilerplate so you can crack on with writing the app.
That's a very good point \- and I agree with you. However, don't you think using Click increases the number of dependencies. If I'm making a simple app, I would prefer to not have any dependencies at all so that it runs seamlessly over all computers.
This is largely an operating system thing, not a python thing. If you're on linux, look at cron. If you're on windows, look at task scheduler.
Yep, that's not even a debateable point: 1 dependency vs 0 for the built-in sys.argv option. Neither option is right or wrong. Choose what's best for you!
There is also [APScheduler](https://apscheduler.readthedocs.io/en/latest/)
That just reminds us to do at least some due diligence on dependencies and do some checking for things like this! It's not a catch\-all solution, but at least this one could be avoided.
That page comes down to: 'If you chose to utilize Unicode, you better know what you're doing. Until modern operating systems get their shit together, we will stick with the easier solution.' I've written Py3 Click and it's not a big problem - but *sometimes* you have to help people debug those problems...
Indeed, you should just do the benchmark with raw lxml.html (beautifulsoup really adds a significant slowdown).
Basically, Armin Ronacher behaved like a douche ten years ago, and made the most convoluted "showcase" of the defects of unicode handling in Python3. Thus, whenever I see him utter the words unicode and Python3 in the same sentence, I need to see several independent proofs to the contrary before I begin considering the remote possibility that he isn't lying through his teeth. He might have reformed, and he might even be right from time to time, but all that is lost in the deep hole he digged for himself. Apart from that subjective opinion, I would like to hear which operating systems you see problems on. I live in the nice and clean walled garden of Linuxes, and I see absolutely no problems whatsoever.
I'm writing a blog post about lazily generating sequences in Python.
Are you really expecting a piece of software to allow you to break the laws of physics?
Too bad you don't like it. It sounds like it needs more contributors: It seems to be moving along okay: https://www.openhub.net/p/plone/commits/summary But maybe they aren't working on the most important problems.
But you have to still write your ‘manage.py’ file to wrap things. How is that any different/better than argparse? I don’t really care either way; I just can’t see any reason to change. Argparse itself was initially an external module, up through v2.6. This seems like a solution in search of a problem.
How is that the case? I thought py3 was supposed to solve all Unicode issues of py2?! 
Yes, until you run into a use case where all those abstractions are actually a liability when you want to do something the library does not support. For example, due to the abstraction, there is no way to "force" colors if your not running in a terminal (e.g. Jenkins console).
You could implement something like this in python, but it might not be the best use of your employer's resources. RabbitMQ would be a better solution all around. If you're going to implement it yourself, I recommend using ZeroMQ instead of raw sockets. There's even an example of how to create something like this: https://learning-0mq-with-pyzmq.readthedocs.io/en/latest/pyzmq/patterns/pubsub.html Don't expect amazing performance from a home-rolled pub/sub system.
ZeroMQ (or NanoMQ) are good choices, with lots of libraries built around them.
&gt; the author was bitter about Py3 Unicode support and wanted to make Py3 users life miserable I don't know the full story here (did you open an issue against it or something?) but I have a lot of respect for anyone who can write such a range of widely used packages as Click, Flask, Jinja, Werkzeug and Lektor and is a core developer on others like Pygments and sphinx.
There's some people here posting fun comprehensions and functional solutions. They're neat and cool and all and while the code-golfer inside me loves those kinds of solutions, the engineer in me says NO! Code's meant to be read more often than it's written. Just use a boring old loop so you understand what the code's doing in a year's time: d = {} for k in list_a: d[k] = 1 for k in list_b: d[k] = -1 
It's not a game just a random generator but [here you go]! Sorry, there are no tests or comments yet. :)
1. Write systemd unit file to launch your program 2. add cron job to start program at 10 am 3. add cron job to stop program at 1030 am Assuming the app will keep running when left alone. 
You can either set an environment variable in your CI tool that your CLI app would look for and turn it on automatically or you add a flag option to your application for something like `--force-color` to turn it on. It certainly would be nice if they documented that on the [page with the details about color](http://click.pocoo.org/6/utils/#ansi-colors), but I have to agree, the option to turn it on is so easy in the user code, I cannot see why they should implement it. It looks like there is already a [tower-cli issue](https://github.com/ansible/tower-cli/issues/515) to do what you want. Perhaps you should link back to the click issue I posted above about how to force color and recommend they add an flag option to turn it on. 
 I do not believe so. Is there a link you can share that I can read up on?
Well done library, what about speed? Is it fast enough in flattening the structures? 
if __name__ == "__main__": main(10, 10) Can you explain how this piece works?
'Course you're right. Thanks for the enlightenment. 
Click's author has published a long rant on why he doesn't like his misunderstanding of py3's unicode handling. Which was always weird for me, because he's clearly a smart and talented programmer, and this feels like a glaring blind spot in someone I would not have expected it from.
 @click.argument('foo', nargs=-1)
Well for sure you could. Would it be the best solution? Not sure. 
You need HTML , CSS &amp; JS. But why not. 
Thought you were a bot for a second with your post formatting. Was about to be very impressed! 
I find them useful when I'm dealing with a complex object inside a function and I want my IDE to autocomplete.
Definitely fast enough! Ran something similar inside of PayPal with our very-high-traffic internal APIs.
Frame tags are all I need!
Flattening json on the fly? 
 all_the_same([2, 2, 2]) -&gt; all_the_same([eq(2, 2), 2]) -&gt; all_the_same([True, 2]) -&gt; eq(True, 2) -&gt; False
I really like the documentation, it has a nice character to it. I'm left a little confused how on to integrate this on top of a project that already uses `schema` or `marshmallow` with a ORM. Would I use `glom` after making a query on my ORM?
Should be fine but you'll eventually need HTML CSS JavaScript
This is definitely good advice. I write similar software for large physics data sets where we care about summary statistics, and the way we test is by feeding in fake catalogs with very easy to understand statistical properties in them. Generate data following normal distributions, or multivariate Gaussians, and verify that you can get out what you put in. If you are additionally worried about confirmation bias, I recommend learning how to do your analysis blinded.
This looks really clever, I can immediately think of several uses for that! Thanks! 
Hell yeah, this guy gets it. Can it create the structure from the spec and inputs too? like galaxy.system.planets + [earth,jupiter,uranus] -&gt; {"galaxy":{"system":{"planets":["earth","jupiter","uranus"]}}} 
Check out https://crossbar.io/ if it suits your requirements
I wrote a quick &amp; dirty module to help test private pypi indexes and local virtualenv's for "untrusted" modules. Plenty of ways this could be better, but serves the purpose for now. https://github.com/shawkinsl/bad_package
This, simple and every Linux system admin ever will understand how it works.
Ironically... yes, it uses requests :P
&gt; Of course, sometimes it may be useful or necessary to import * from modules and/or packages. However, it’s best to make sure you really have to before doing it. In my experience, this construct is usually used as a result of laziness more than anything else. You *never* have to. There is one place though where you should always `import *`: in `__init__.py` files. Importing by name would mean that changes to modules would require changing the init files too, which is a lot of unnecessary churn. It's better for changes within a module to only require changing the `__all__`.
&gt; Tagging all the parts of speech and developing a big enough corpus to be useful could be a nightmare though. It's basically an unsolved problem for English. It certainly isn't included with most OS's generic dictionary files for spellcheck. Rhyming and syllable count are affected by dialect. Part of speech tagging and meaning is massively dependent on context. "The shade of red on that car is a pretty red." -- pretty is an adjective and red is a noun. "That car isn't completely red, but that car is pretty red" -- pretty is an adverb and red is an adjective. "That pretty red car drove past" Good f'ing luck making a sentence diagram out of context, even for a human.
Might be useful for validating API schemas.
I made a twitter bot that generates podcast feeds from YouTube playlist. 
It might be a little more 'framework\-y' but I have been using \[Invoke\]\([http://docs.pyinvoke.org/en/latest/invoke.html](http://docs.pyinvoke.org/en/latest/invoke.html)\) \(from same guys who made Fabric\), and liking it a lot. It's got a simpler syntax than both argparse and click, and allows for you to chain commands together like inv build --osx test --in-cli
But contexts are linked to the running process, not intermediate files. selinux has no idea that a file is being opened on behalf of another file requesting it. Now, augmenting the python vm's import machinery to inspect SELinux attributes is another idea.
This is true. Python would have to do some selinux stuff. You could set the context when you launch your project as well, but that’s not library specific.
Yes. I suggest you do it. It's pretty good practice to make something that already exists so you have something to compare your work to.
That simplifies things less than you might think. The termios stuff is all just for changing the stdin behavior to accept input without line breaks and to not echo the input. Assuming that's the desired behavior you'll still need all of that. Threading actually ads a lot of complexity - I don't know of a simple reliable way to have a thread die on a timeout - that's definitely not what `Thread.join` does. So even if you were using threading, you'd want the threads to be using non-blocking reads and checking some sort of of lock or timer - at which point the threads aren't really doing anything for you.
That's right. Here's a more concrete example Imagine 3 files # file a print("Hello, I am file A") --- #file b if __name__ == "__main__": print("Hello, I am file B") --- #file c import a import b What happens when you run file c? Well, the words "Hello, I am file A" would print in your console because you imported a. All of the code in file a would get run, so the print statement would fire. Whereas file b knows it's not being run as a main program - it knows it is being imported, and it knows it only prints if it's called as main. 
Why not keep the same fromkeys approach, but use the 3rd list as the base dictionary. d = dict.fromkeys(list3, 0) d.update(dict.fromkeys(list1, 1)) d.update(dict.fromkeys(list2, -1)) This way list3 Keys all have a value of 0, but if any keys in list3 are overwritten by keys from lists 1 and 2.
I commend you for using datetime. BTW, you should look at the other class in that module; see the part about `datetime.timedelta(hours=1)` and date arithmetic here: https://pymotw.com/2/datetime/#timedeltas 
Great you caught the Einstein! You did great.. and somehow, seeing how plain and obvious it is in the open in... OPENsource, which.. hahahaha :-) Can't belief there's dotards out there who actually try to get away with this.. at the very least pick a bitcode dll and upx the shit out of it... this is so... hahahahahhaa :-)) 
This question should really be posted in /r/learnpython. Also, you didn't have an actual question. You just posted code that looks fine-ish other than you didn't indent your code 4 spaces.
Maybe your comment would sound less negative if you gave them more constructive feedback. Can you think of some examples of things this library can't do and you wish it did?
We all know Python is awesome. Raymond Hettinger presents Python's awesomeness in a way you can communicate that awesomeness concretely and effectively to everyone you know.
Just want to add to this that you can nest serializers, and I've been doing that a lot lately Example: ``` class CallSerializer(ModelSerializer): class Meta: model = Call fields = '__all__' class CallRecordSerializer(ModelSerializer): call = CallSerializer() class Meta: model = CallRecord fields = '__all__' ```
Compare/contrast with pstar: https://github.com/iansf/pstar
sorry about that, fixed it up. I'll try that, thanks
If you're getting a KeyError on a json request, then it means that key isn't in the json data, in this case 'location'. I think your problem is the url format. Since you're wanting to use coordinates for your data you need to use the geolookup format, I found this info on this page, https://www.wunderground.com/weather/api/d/docs?d=data/geolookup. Here's what it looks like http://api.wunderground.com/api/44e2c8e4bf430cf2/geolookup/q/43.0,-71.5.json. The url you provided gave me errors, this one didn't. Posting from mobile so formatting may be off.
This library reminds me https://stedolan.github.io/jq/
At least hack securely
Doubt it's an accident.
It's likely intentional
Well you changed the url from one using a coordinate to one using the state and city format. Now I can see your issue is that the "location" key isn't in the json data. What exactly are you trying to get from your request?
Yes I apologize, I posted the wrong line in here initially. The coordinates was just an attempt at trying something different; I switched it back to how I originally wrote the code, which is the state/city format. As for the request, primarily the temperature, 'feels like', and then precipitation (but I haven't added that quite yet).
I guess I'm alone in rolling my eyes at this.
I'd say it's still rather suspicious if it requires that permission to run at all, rather than just asking permission when you try to use that particular feature. If the readme/release notes say "this app may require camera permissions for certain functions", that itself is nothing to worry about, but if it won't let you add two and two without that permission, that would seem to suggest either something suspicious is going on or the app wasn't coded well.
I use it for pretty much everything at my current gig. We do all manner of machine learning.
I don't agree much with that article, but based on that definition of active record, SQLAlchemy's ORM is an active record ORM. There's no layer of indirection between the structure of a mapped object and the structure of the table it maps towards that is much different than that of any other ORM. What it can do that is maybe a little more esoteric is that you can map objects to a SELECT statement also, where it will figure out what the dependent tables are and persist into them, however this is not a very common pattern. There's also joined table inheritance which automates linking a hierarchy of classes to a join of tables. But this is still 1-1 as far as table-&gt;class. Like the article says, " if you’re touching five BlogPost objects, and you save them into your database, there’s a high probability that they’ll end up as five rows in your blog_posts database table.", that is exactly how SQLAlchemy and really any ORM I've ever seen work. In practice, particularly in Python where all the ORMs instrument classes to be transparently linked to the database in any case, there's not much difference between "active record" and "data mapper" - originally, it referred to the concept of an ORM like Hibernate, where the mapped class itself had no dependency whatsoever on the ORM, and the mapping of the class to a relatoinal database was defined in an XML file. But no ORM does is that way nowadays, not even Hibernate which uses annotations in the class source file to define the relatoinal mapping. SQLAlchemy started out trying to be a "data mapper" by having you build a mapper() that would link the table to the class, but this still wasn't data mapper, since SQLAlchemy would go and add a bunch of attributes to the class in any case, so that your code that made use of the class was still hardcoded to the structure of the relational database. In reality, having two terms "active record" and "data mapper" is now kind of useless and articles like these lack the insight into the subject area to realize the distinction is mostly pointless. SQLAlchemy's major feature over other ORMs on the persistence side is that it makes use of the unit of work pattern, which means it discourages the notion of saying "myobject.save()" (even though you can flush individual objects explicitly). This would be the major way in which SQLAlchemy acts like more of a "mapper" - but in fact, the way the UOW works, your "record" in SQLAlchemy is even more "active" than it is in a Django-style ORM. You don't even have to call object.save(). You just work with the objects and changes flush out automatically, and assuming decent isolation level, you will always see the current database data on your records. The SQLAlchemy mapped object is most certainly intended to be a proxy to a row in a database, it's as "active" of a "record" as you can get. 
It uses pyppeteer, which uses Google Chrome. So not really any different to Selenium.
Flying out tomorrow! Can’t wait! 
Picking up python, but I am a powershell and c# guy. Rewriting a powershell script to python that calls an api to generate a json file, uploads it to Azure storage then emails it out.. Sounds simple, but it's my first python script haha. 
Looks that way.
that means a new email address and credit card, and i'm not sure about the credit card.. i used a different one just in case.. it worked
OK, how could I best explain this library to people who are smart, but busy?
Yeah I made something similar, although it doesn't have the "run a function to aggregate the responses" part. 
Haha, thanks! Operator overloading at that level isn't supported yet, but it's definitely possible to do some stuff like this. Check the docs in a few weeks, if it ends up being a good idea for glom, it might be public by then. :)
That is the best explanation I've ever seen for `if __name__ ...`. I'll be stealing it at some point in the future. Sorry.
glom replaces pretty much all the serializer classes that DRF encourages writing. DRF still handles format negotiation and pagination. glom's not a whole framework, though I wouldn't rule out writing one around it.. :)
You could give them an analogy: http://glom.readthedocs.io/en/latest/by_analogy.html Or you could send them straight to the juiciest part: http://glom.readthedocs.io/en/latest/api.html#object-oriented-access-and-method-calls-with-t
It is posting your credentials to the [ssh\-decorate.sh](https://ssh-decorate.sh). Check for the second image to see the posted credentials.
Unfortunately the documented purpose of the library in question was to make ssh connections, and I doubt even haskell's type system is clever enough to distinguish evil ssh connections from good ssh connections :-).
It wouldn't help – either this was the legitimate owner of the package, or it was someone who had access to their credentials, and either way they could have created a legitimate-looking signature. Signing just protects against someone in the middle messing with the package; it doesn't help if the original upload is bad.
If you already know python 3, the main differences between 2 &amp; 3, and how to google, you should be fine.
It and the system import definitely shouldnt be there. Waiting time reimporting them every time the loop runs. Also changing the import so it is `from random import randint` so you don't have import the entire library when only using a single part
Or with f strings `thing = 'rock' print(f'I picked {thing} you win`)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Cannot find this in a youtube search? 
[https://www.reddit.com/r/Odooapps](https://www.reddit.com/r/Odooapps)
[https://www.reddit.com/r/Odooapps](https://www.reddit.com/r/Odooapps)
[https://www.reddit.com/r/Odooapps](https://www.reddit.com/r/Odooapps)
I think the flask examples have a minitwitter example with source oN github.
Is this begineer friendly?
it uses many 3rd party libs if those are stuck on py2 then ...
how does glom replace object serialization or validation?
I did have a look at crossbar, thought the documentation was a bit disappointing for a newcomer. Doesn't seem to be uptodate (e.g. example/github)
would this still work with [False, False, False]? doesn't the `e0 := elements[0]` expression evaluate to False in this scenario?
are you using the latest version of pipenv? I've solved problems with it just by updating :)
The `many=` feels kind of clumsy. Have you considered ditching the base classes, and just providing a single free function? @dataclass(frozen=True) class JsonDict: x: Dict[str, int] @dataclass(frozen=True) class JsonClass: a: int b: List[JsonDict] c: Dict[str, int] from dataclasses_ujson import load as json_load # instead of JsonClass.loads(json_string, many=True) json_load[List[JsonClass]](my_json) 
Oh also i think the command you want is `pipenv --python ~/python/compiled/2.7.15/bin/python2.7` not `pipenv install ...`
Me too. Searching for “PyCon 2018” just gives “Pycon 2017”. It’ll hopefully show up soon. 
Care to elaborate? I'm not quite sure if there's a location or requirement of any form
It's complicated to filter packages just by statically analyzing Python. There are c extensions and Cython, for instance. C can also be highly obfuscated, even by inlining assembly. Therefore, even if there was some "permission" check as some people suggested, that would be limited to the python interpreter, and I think there's no way to monitor that from a C perspective, as the python VM can't control that. Only audit based control would be possible, which is almost impossible. 
[removed]
Are the slides available?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [HOWZ1T/learning-design-patterns/.../**injector.py** (master → 513ae46)](https://github.com/HOWZ1T/learning-design-patterns/blob/513ae467ed68ddbd62b0b0233bdf5fc9800b322c/DI_IoC/injector.py) ---- 
It it possible to work on sequences? E.g. if target is ``[MyObj, MyObj, ...]``, where you want to list all ``MyObj.attr``?
[https://www.youtube.com/channel/UCsX05\-2sVSH7Nx3zuk3NYuQ](https://www.youtube.com/channel/UCsX05-2sVSH7Nx3zuk3NYuQ)
Trying to get into python myself. Are these usually worth watching for a beginner? 
Are the materials somewhere? I would like to follow the scraping video
Link would be greatly appreciated 
Looks like the flask repo owners have removed it from their examples for some reason. Found this fork though: https://github.com/Curzy/minitwit
Main reason is JS uses weak typing whereas Python uses strong typing. By using JS you can get a lot of funky unexpected results, and avoids raising errors.
If previous years are any indication, as it begins to populate you'll probably see a mix of material for newer python developers, and material for experienced developers. It's going to vary depending on the topic.
You know there's a JSON extension in sqlite3? [Charles Leifer](http://charlesleifer.com/blog/using-the-sqlite-json1-and-fts5-extensions-with-python/) wrote a blog post on how to use it.
Rewriting an old pathfinding module (that I originally made when I didn't know what I was doing) for a game idea I have.
I guess I agree in a way? It depends. When any kind of software is brought in for review, "age" may possibly play a big role in its position. Technically, software is not defined as a product, albeit legally and evidently, is treated as such. It may seem like we're comparing two products, but I think with certain software of which are "maintained and updated" appear to be more of a service than a product. Well, actually they appear to be both. I think I'm confusing myself here now and now I'm under the impression there is no definitive answer as to which is it. Product? Or Software? In any case, I guess that might explain the high volume of users visiting a "Reviews" or "Top 10" software comparison site. ANYYYYWHO, "age" is something I would consider when dealing with a software purchasing decision. This "age" I'm referring to doesn't boil down to just picking the "newest" one for [x] reason, or the "oldest" because they may be more experiences. It depends on the time frames as well and WHO is this new software affiliated with. I still haven't tried any of these programs. I've used PhPStorm before and literally returned the next day back to my regular tool. And I can't even pinpoint why. But I will give both of these programs a shot. And since I'm only in training, I think I might even try "Spyder" for it's ease of use. In this case, I didn't consider age since they're both free and both made my extremely reputable companies. Jetbrains is literally cherished all over the reviews I'm seeing. I'm a windows fan, but it's a love and hate relationship. And I work on Windows literally my whole day. So It's tough to learn other systems which I'm hearing about so often for development. I'm pretty souped to get started with Python though. Read through 4-5 hours straight on all their documentation. I'm sure I forgot all the syntax and rules, but I get the general idea of how it's operating. It's pretty amazing how Python works. I do heavy excel work, which involves deep analysis, but after reading what this program can do. Idk. This might be a life-changing event for me lmao honestly. 
10 mins and I haven't decided yet. 
I think you should focus on the bottom of the screen which says you could change the UI anytime by going to preferences! :P
/r/ProgrammerTIL
Absolutely, but his reasons for not doing it are not the same as mine. For me it's all about reading the code. If you've imported everything from some modules then as the reader, I have no clues in the file I'm reading telling me where a symbol comes from. from Weeble import * from Wobble import * def some_function(): fall_down() # Where is this defined?
It's not crashing but quits because there aren't any more commands in your script to execute. You need for a thing called *event loop* that keeps your program running so the window stays. Try this: from turtle import * win = Turtle() done() 
See you there! We arrived yesterday morning.
You might want to look at [Python Internationalisation](https://docs.python.org/3.6/library/i18n.html)
Oh wow, thanks for this.
r/learnpython can help you more.
The reason I go with dark themes is when using an external monitor light themes seem to light up the room. Adjusting brightness or contrast then makes it hard to read. 
I kept doing searches sorted by upload date yesterday until the channel appeared. That might get you to the channel through search.
It depends. Most of the beginner tutorials usually say something in the title to say it's a beginner talk. That being said, the tutorials are usually designed to walk you through the subject at hand.
Hi thanks I agree ... Our firewall gives an SSL error message though when I use it. I can bypass it by adding --trusted-host pypi.org, but won't I subject myself to MITM attacks?
I use dark themes because they keep my eye-strain at bay, while bright themes tire my eyesight considerably faster. And I also like them better (but that's just a plus, the main reason is eye strain).
Thank you! I'll check it out. 
Migrating a telegram bot from my mates server to digital ocean. First time I've used the cloud for anything so going to try and knock up a web app and learn about containers as well 
What is this? The code is painful to look at. Tabs?! Pokemon exception handling, incoherent... WHAT IS THIS?!
Hi, OP here. I felt that the git diff experience on the web was quite a bummer, and reviewing a pull request meant checking out someone else's code. To fix that, I built Rubberduck. Please check it out. What do you guys think? Is it something you could imagine using?
This sounds like Apache airflow, which uses flask as a front end.
Very cool. Nice work!
I think I might be a little confused. Is 'device' and 'status' returned in a json response? Or is the url some monster url with the info for 500 devices?
Yes sorry they are in the response, I am learning this as a go so I apologize for the confusion. I put in my company name and how many devices I want to look at (up to 500) and how many I want to skip. So in my response body I have 500 devices with a status for each. I am not sure how to access them. Also I am using python 2.7 as an fyi. 
How about this example from http://glom.readthedocs.io/en/latest/snippets.html: glom((1, 2, 3), ( { "type": type, "result": [lambda v: v + 1] # arbitrary operation }, T['type'](T['result']))) T's let you call methods / functions in your target, and they let you pass other sub-specs as arguments / keys. You could also do the above with lambda t: t['type'](t['result']), but because nothing inside the lambda is a spec, you don't get a nice repr, debugging support, or clean error messages.
Thanks man, works :) 
Thanks
As opposed to CPP con where if you aren't fairly well versed in C\+\+ there is no way to follow.
My recommendation is to find the speakers GitHub page, that's where a lot of people put their follow along material.
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Use the requests library. You can get the response content using something like `response = requests.get(your_url_here).json()`. You'll have to install the requests library. Do this by typing `pip install requests` in your terminal. Lmk if you have any other questions.
Open your mind dear, why this thing is not fit in your mind.
This is odoo, an open source framework. By using this you can develop ERP Systems.
Each book is worth $20+ Each course is worth $40+ Each license is worth $50+ I felt great about paying $20
I went through about half that Python Epiphanies tutorial, but I didn’t get a lot out of it. Am I in the minority?
I see your point and there is definitely some validity to it. However you have to be very careful with that argument because you can basically use it against *any* language/library feature. To exaggerate it a little: "Don't use X because I don't use it a lot which means it is difficult to understand." When you're writing code you should always try to make it readable for other people but there is nothing wrong with assuming that those other people are actually familiar with most (if not all) of the language. Otherwise you're just artificially restricting the expressiveness of your code.
install_bs4.bat - if you do not have the BeautifulSoup4 package that the framework requires to check for a version, it installs the Package. Similar situation with install_requests.bat. Tests: before release, they are removed from the code(if this is not correct, I will not delete them). Tabs: do you want spaces to be used? To avoid formatting errors when copying code? What means "Pokemon exception handling"?
Seems like a job for a simple function executed by a function as a service, like lambda.
What's the"web" part?
&gt; "That pretty red car drove past" Good f'ing luck making a sentence diagram out of context, even for a human. I don't know whether the same rules apply to English, but in Dutch, this would mean that the car is pretty red. If it's pretty *and* red, you'd write a comma: "That pretty, red car drove past". Then again, that's the theory. I'm afraid that in practice most people don't actually write the comma and you're completely right that it's hopeless.
This is essentailly what Ive been trying with different errors. Is it possible I need an API key? This website is password protected and once I enter the specifications I need it generates the correct URL for me, but anytime I try to access that data I get 401 errors and/or it says 'status' or 'device' doesnt exist in url. 
You also will get some benefit of videos from previous events: http://pyvideo.org/events.html If you go back too far, just be aware that things were done in legacy Python, instead of Python 3. 
`install_bs4.bat` -- dont do this, use a requirements.txt and put all your dependencies in there. Or... use a setup.py and specify them there (for what youre trying to do -- this is better.) tests -- DO NOT DELETE THIS, EVER! tabs: in python we use 4 spaces, no tabs (see PEP8) Pokemon exception handling" -- means you do `except:` and not `except (VerySpecificException1, VerySpecificException2):`. The first one is a code smell. 
Sweet! Thanks!
Building a simple API for my Fortnite leaderboard. I needed an API because I wanted a way for a Discord bot to pull stats from my leaderboard, and do things like announce new wins / announce who takes over the #1 spot for Lifetime Kills, etc. It's been a lot of fun.
Calling join with a timeout on a thread will at least give you back control after that timeout. You'd still need to kill the thread yourself, which might be bad depending on which resources that thread acquired.
Yup.
Can't hear a thing in like the three videos I clicked on the channel. Is it supposed to be only visual or something??
hey guys!I know nothing about PyCon but I have a question In the company I work at, a few coworkers went to PyCon and I was wondering how much the tickets were? I am asking because I would like to go to a conference myself \(totally unrelated to PyCon\) and I am not sure if my manager will allow it because of its cost. So the main thing is I'd like to see what my coworkers paid \(don't really want to ask them...\) to see if my conference is reasonably priced compared to PyCon and if my chances of getting approved are high or not Thanks and sorry for the super random post!
Does it have an API? If it does, what does the documentation say? You might need to pass your API key in the headers.
Haven’t you heard of meld?
Yea, It turns out I did need to include an authorization. I am now receiving all the data and just need to filter it. Thanks for your help, I appreciate it!
One of these time I will find time and money to actually go there. But it's not going to be this time.
Wow, even more incomprehensible than the blogpost.
I have not sent UsefulDB on PyPI, because the work framework with SQL is not yet finished. When the framework works with SQL, BATCH files will be deleted and replaced with requirements.txt. So far it is not necessary to perceive this project as a serious software.
I think it was the way you presented it, next time, dont claim anything about your software until its done. Instead word the thing around the "critique my work so far..."
&gt; I think it was the way you presented it, next time, dont claim anything about your software until its done. Instead word the thing around the "critique my work so far..." I'm not want release this now, but my friend decided to "joke"
Makes sense. Thanks for the helpful reply; much appreciated!
1\) How long will each task take to run? 2\) How much computing resources will each task consume? 3\) Do you have a steady amount of traffic? 4\) Is there a chance for sudden traffic spikes? If the tasks are relatively short, don't consume too much resources, but you could have 10 of them at one moment and 10 million of them the next moment, then a server\-less solution like Lambda would suit your case best. If you the tasks take a long time to run but your traffic is steady and you can fit everything onto one machine, then Django could be a good solution. If your tasks take along time to run, require a lot of resources, and can spike at anytime then Django won't be a good solution
This is a great answer. Thank you very much. 
Ahh, just that I'm using Django and it's accessed online.
I'm using netmiko, but it work via ssh.
https://github.com/NicolasHug/Surprise
It definitely doesn't have to be in Python but I've figured it might be the best approach for this sort of problem. Do you think Ansible would be able to accomplish those things?
Yeah we don't setup SSH on any of the devices and the point kinda is that uses the telnet link to access the devices and have some basic config done. I'm not sure if netmiko works over telnet
had no idea you could have empty comments on reddit :)
It depends on your situation. For example, the corporate rate is significatly higher than the regular price. There is a student/startup discount as well. Here's the breakdown [according the the 2017 site](https://us.pycon.org/2017/registration/): * Corporate: $600 * Regular: $350 * Student/Startup: $150 The tutorials (non-sponsor) also cost an additional $150 per tutorial. 
Out of curiosity, is there a special use case for requiring telnet, or is it preference? 
My recommendations based on my attendance: * [Scott Sanderson - *Foundations of Numerical Computing in Python*](https://www.youtube.com/watch?v=aGGbnMyeZs0&amp;t=8404s): Scott goes over the basics of `numpy` and it's many uses in Numerical Computing. If you're new to `numpy` or even an intermediate user you'll find this very useful. *I'll update this as I go through the conference with my recommendations*
Gotcha
?
You can check out the fastai library by Jeremy Howard.
thanks!
Netmiko have support for telnet, for cisco use device type cisco_ios_telnet.
Wtf, why have an app if you aren't going to answer calls? 19? Bruh...
Few suggestions.Change the bg to dark (serial killers use white). Get a better IDE like pycharm, vim, emacs or something...Explain what your trying to solve and where you are stuck at. Dont use bad grammar like me.
There are too many issues here to count. Use a dict and a while look to get inputs. Also go speak with your teacher. 
if A = response[i][0]: A = input(response[i][1]) I'm not sure about what you are trying to do but as I understands, this should work
Wow guys, that's obscenely useful for a project I'm working on. I've gone back and forth trying to use namedtuples/dataclasses/etc for dot access but apart from that, they really aren't appropriate data structures. Great job!
The problem is before \(because he does not run into this one yet\). The "i" var he is using is incremented by user input so for each user input it will try the next "question, response" couple. He should try to ask for an input inside a while\(true\) loop for exemple and then for each input check every possible question from his array
In my opinion If you want to be better software engineer then it’s very hard to be self taught. Having a mentor or external guidance is strongly advised. There are so many things to grasp that I think the best thing to learn is either to get a degree or go through some GOOD online courses. I know many of you might disagree with me, but I’ve seen so many programmers with 5+ years of experience, without degree and they could get stuck on networking for days because they did not know the difference between UDP and TCP. I have not yet seen any person with computer science background who got stuck in similar kind of situation. 
Thanks a lot!
Exactly what I was looking for. Thanks!
I have a stupid question. What does &lt;C-c&gt;g mean?
Not related to Python? It's a Python IDE!
This is exactly my problem and this is definitely the answer I was looking for. 
It should probably be noted in the documentation that the program makes calls to external websites to gather the information.
Very nice! I also would like to know about Firefox add-on, and if you have plans to open source the project itself?
Honestly, it will seem like a lot of money, but cleancoders.com videos are worth the money. The main [Clean Code course](https://cleancoders.com/videos/clean-code/fundamentals) is what ALL programmers need to learn. The down side is you need to translate from Java to Python in implementation. It would not be bad to learn Java and go through this and then implement in Python to see how they are different. If you spent the $1000 for 50 videos at $20/piece, and worked through examples to really learn it. Then made a few programs to show you understand how to make a maintainable system. I would rather hire you than the many CS grads that have done nothing over 1000 lines and just make a ball of crap instead of a good system. Almost all programmers that I have run into after 30 years in this industry, had serious deficiencies in architecture understanding and just working discipline. This is the best set of videos I've seen to teach this. Most working programmers do not need to know low level algorithms much more than what to use. Especially in Python. Much has been coded by people better at it than I could hope to be. However, understanding what they are is good. You could do much worse than working your way through the standard library and looking at examples in there. [Module of the Week](https://pymotw.com/3/) is great for this. Learn pytest. Learn how to do good TDD. It requires discipline, but will yield faster results.
Key combination. Ctrl-C, then 'g'.
lightfm
Have a look at apistar
Please DM me your email and I will add you as a collaborator.
Right now the functionality is osdp --init, osdp --new, osdp --start profilename, osdp --destroy profilename, osdp --stop profilename. It pulls down profiles from github and spins up vagrant boxes in an organized fashion.
"How to with code"?
I personally use exscript, which is designed to be vendor agnostic. It can do SSH and Telnet. For configurations, you can use ciscoconfparse to parse existing configurations and audit them so they match up with what you want them to be.
What about setting up a basic python web server and sending copy http://&lt;bleh&gt; runnin-config commands?
I am learning about models and database in Django.
Thanks for this. Maybe my employer could pay for these. 
How to Slash double-u Code?
Yeah, thanks for the suggestion. Will do that.
&gt;I don't know Java, but it seems that Java's toString\(\) method is the same as Python's \_\_str\_\_ magic method. Yep! That's what it is :\)
Shame many video have technical issue, no sounds, shaking, etc.
Lools great, i will try it for sure
Two years ago I would have never said this: While a degree isn't necessary. It is incredibly enlightening. All the things I "learned" while being self taught, have a new found understanding with a foundation of education.
Where are the instructions on how to use it?
I see exactly the opposite. All the self-taught devs I know tackle whatever you throw at them because they know how to find out what they don't know off the top of their head, but I know devs with master's degrees who won't touch sockets with a 10 foot pole because sockets are scary and the devs don't understand them. It's interesting to get a glimpse of the other perspective.
The loop you wrote will count to 8 and in each iteration it will check if your input is equal to the ith element in responses. i.e the first input you give will be checked against "bluetooth", the second given will be checked against "windows" and so on, until you reach 8 and it terminates. First, the for loop you wrote is probably not the best way to take inputs. I don't know the specs for your assignment, but you probably want to continuously take inputs indefinitely or until some terminating condition is reached. Consider what a better way to do this would be. More importantly, the way you are getting the responses for a given input is bad. It looks like the point of the assignment is to introduce you to dictionaries. Look into what a python dictionary is and how to use them, that is the best way to go about this and I'm sure that is what your teacher/professor will be looking for when grading. 
I went to some diffs on Github but it didn't seem to offer any extra functionality, apart from the navigation bar at the left.
I dont really understand how this is really any different then bitbuckets diff also your docs need some work
You are right, it looks better that way. I will fix it in next commit. ) Thank You!
I'm a self-taught software engineer. Been working professionally for a few years. I actually spent some time learning algorithms through MIT's Open Courseware, super useful resource. I stuck with that for the first 9 months before I started interviewing. During my interviews, I wasn't asked a single question on algorithms. During the interview for the job I ended up getting, they actually all but scoffed at the amount of time I spent getting a handle on them. You will be expected to understand the ins and outs of your chosen language, to be able to write programs in that language on paper in order to solve interview problems, and to understand common design patterns. I recommend spending your time on that design patterns part. That'll help your code and your chance of getting a pure dev job way more than memorizing algorithms. In my experience, anyway.
Are we doing a meetup like last year?
I tired to port it using 'chrome store foxified' but doesn't seem to work at all. :(
Some of the devices are a bit weird that they have a hard time getting an IP address via DHCP, so you have to do something like looking at 'show cdp neighbors' to get the IP address of the backbone switch, then find which are the available IP addresses in that subnet and then assign that to the interface. There other scenarios where just copy pasting the running-config wouldn't work.
I kind of feel this is a thing I'd love on my ides. Props to OP for building this, I find prs kind of awful to review for the many reasons listed above. My old workplace used phabricator and I was able to get diffs with a single (and simple) command into my checkout and then review the diff locally with my ide. 
Looking at ciscoconfparse and it seems very close to what I would be wanting to do. Even moreso with exscript, I'll be trying this out. 
Looks pretty cool. All the repos I work on are private gh repos, excited to check it out in June. Just a recommendation, you may want to offer a free 7 trial for private repos. It's pretty steep to buy this product for my team without a trial period where I can demonstrate value. RemindMe! 1 June 2018 check out rubberduck code reviews 
I will be messaging you on [**2018-06-01 00:53:28 UTC**](http://www.wolframalpha.com/input/?i=2018-06-01 00:53:28 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8if11m/rubberduck_finish_your_code_reviews_faster/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8if11m/rubberduck_finish_your_code_reviews_faster/]%0A%0ARemindMe! 1 June 2018 check out rubberduck code reviews ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
2ank3t1-1, thank you for your recommendation. What is the advantage of using Surprise(which seems focuses on recommender systems and similar to what i need) VS TensorFlow(more general framework) ? Is that Surprise have better algorithms? Will learn(train) faster? Needs less server resources? Sorry if it's a newbie question - i just want to understand why more specific ML library is better than more general one.
ezietsman, thank you for your recommendation. What is the advantage of using lightfm(hybrid recommendation algorithm) VS TensorFlow(more general framework) ? Is that lightfm has better algorithms? Will learn(train) faster? Needs less server resources? Sorry if it's a newbie question - i just want to understand why more specific ML library/algorithm is better than more general one.
from the linked info page: target = {'system': {'planets': [{'name': 'earth'}, {'name': 'jupiter'}]}} glom(target, ('system.planets', ['name'])) # ['earth', 'jupiter']
What's with the weird keyboard symbol. Never seen one like that on a development machine.
How to `word character` code
`toolz` + `operator` (in the stdlib)
Have you considered using RPython tooling to make it JIT'd?
Thankyou. Didn't mean to post it in the wrong place
very true!
Can't wait to play :3
Hey, understand your concern. Which is why I recommend using the menu bar app for private code - which will not communicate to any external services. You can probably setup a firewall for the tool. Will add that to docs!
oh, that's not expected, sorry about that. :( The tool only works on python, JS, java and go repositories right now - perhaps that was the issue? There could be a bug too. If these are public repos, could you share links that you were trying? It'll have me a lot to debug.
thanks! Agree on the need for a trial, and will have a 7 day trial to start with.