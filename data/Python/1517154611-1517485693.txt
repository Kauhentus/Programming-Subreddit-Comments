Strange, no mention of ``async`` and ``await`` to now be reserved keywords? (which means that if you have code that use them as a function or variable name, that will now be a syntax error...)
I think it's something like `if id instanceof value wget https://www.wwwdotcom.com select priceinusd from cryptocurrencies for i in range(0, 100) malloc(sizeof(id.value)) &amp;&amp; for auto&amp; i : crypto.getItems() return &lt;dev&gt;&lt;p&gt;&lt;h1&gt;&lt;ul&gt;&lt;li&gt;price&lt;/li&gt;&lt;/ul&gt;&lt;/h1&gt;&lt;/p&gt;&lt;/dev&gt; 
Better solution is to automate Chrome with Nodejs. https://github.com/GoogleChrome/puppeteer
I’m gonna be a dick here: UnrealEngine Every time I see someone try and reinvent the incredibly complex wheel that is a game engine I try and recommend a full on solution. I’ve been there, Games themselves are complicated and cross a bunch of disciplines where I’m sure you’ll learn a ton. Graphics, audio, gameplay, writing, etc are all wonderful arts and crazy time consuming. Focus on that fun stuff, not hacking around on python library that does a third of what you need. If you’re looking to hack around in python, cool. But use the best tool for the job, and that isn’t python in this case. 
Your functions need to return those values that you are deteriminging inside of them. So your last line in each function should be something like return pcplatrom Then in the Computer function you need to receive those values into a variable, so your Computer function should look more like thing = PcPlatform() Only after that can you put thing into a string. I’m on mobile and just woke up so sorry if answer isn’t explanatory enough. 
hmm i might give it a look, is it just a dl online for the unreal engine? 
== is for comparison operations. If (x==5) Only a single = is used for assignment. 
Go character by character of both strings and convert into ASCII if both character are of same number move on. Else you can tell which goes first
Inside each of your if/elif blocks you're testing for equality with == rather than assigning the right hand value to the variable with =. The variables never get anything stored in them apart from their initial empty string values which is why nothing prints out
Learn what you need when you need it. Also, stop worrying too much about code quality you'll learn and improve as you go.
I'd start looking at Django. Does itself is super lightweight, but Django has more plugins to make it easy to do what you're looking to do.
I’m not sure what you mean by ‘lightweight’. Are you expecting to serve a very high number of requests? The site you describe is actually fairly feature rich. You could do this in Flask but you would need to include packages for things like login and recapta. The main advantage you would gain is a good understanding of how the http request and response handling works. This sounds like a perfect fit for Django. You’ll get the private/admin site working very easily and a ton of flexibility. As for dynamic page transitions, you’ll need some JavaScript . But there are Django packages that can generate the JS for you.
It's incredible, makes AAA games, free to use until you sell it, has a huge community with tons of videos and tutorials: https://www.unrealengine.com/en-US/what-is-unreal-engine-4 
Welcome to programming.
You didn't read that whole wall of words, did you? Just skimmed the first few words and jumped to conclusions about the rest. I don't really blame you, because this is the internet, and the internet just is what it is. But that long post talks about a LOT more than just code quality. The most important stuff it talks about is near the bottom. No, you won't find it by jumping to the bottom and skimming the last paragraph. Oh, never mind, I'm sorry I bothered you.
Here's another example with lxml instead: import requests from lxml import html headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'} response = requests.get('https://www.google.com/search?q=btc+to+usd', headers=headers) btc_in_usd = html.fromstring(response.text).get_element_by_id('pair_targ_input').get('value') print(btc_in_usd)
Know if any good python-based site engines?
[Wagtail](https://wagtail.io/) is a Django-based CMS that you can generally use without programming, if that's what you're looking for.
I remember making the game of life, minesweeper and a word processor in H.S. Those are really good at teaching array management. Other ideas could be a searchable database or image creation/editing. You could even do a turtle draw program and simultaneously teach basic rotation math.
Grab an off the shelf RaspberryPi and sensor and use something like Django to show a web page with a sensor reading on it, and maybe some history (graph) of recent readings. Light and temperature readings are probably the easiest, but there are a lot of easy options. 
Yes, you can make as many manual searches as you want. But when using the API there is a limit. Like with most things.
Flask is fine. It can be lightweight, a hello world app is only a few lines.
I wrote the program to solve this problem. see attached picture. basically i went and plotted the funciton you gave in your pic and noticed that there is a unique v12, where the function crosses the axis then i found a range of solutions: for any value v1 &lt; v12 there exits a value v2 &gt; v12 such that int(f) v1-&gt; v2 =0 The two curves are shown but i plotted f as np.log(1+f**2) because it blows up at the origin and i wanted to see the whole function on a single scale. The minimum of this function corresponds to where the function is equal to 0 since log is a monotonic increasing function, and 1+f**2 is always positive. imgur pic is here https://imgur.com/a/Ub4Gt code to reproduce results is here: i can send a file to you via email if you want but i dont want to link my github account to this reddit username def f(v): return 18.6*v-0.449 - 1.79/v**2 import numpy as np import matplotlib.pyplot as plt def main(): vr = np.arange(0.01, 20, .001) P = f(vr) plt.figure() plt.subplot(211) plt.plot(vr, np.log(1+P**2) ) plt.title('log ( 1 + f(v)**2 )') #print P**2, np.min(P**2) min_ind = np.where( P**2 == np.min(P**2) )[0][0] print 'minima/x axis intersection is at array index', min_ind, 'with f(v)=', vr[min_ind] plt.axvline(x=vr[min_ind]) # use this value to evaluate the integral, in general a curve of solutions # exist vl = np.arange(0.01, 0.46, .001) vrsol = np.zeros_like(vl) for i in range(len(vl)): leftind = np.where( vl[i] == vr )[0][0] leftint = np.abs( np.sum(P[i:min_ind]) ) # solvrindex = 0 for j in range(len(vr[min_ind:])): rightint = np.sum(P[min_ind:j]) if rightint &gt; leftint: break vrsol[i] = vr[min_ind+j] #print vl, vrsol plt.subplot(212) plt.plot(vl, vrsol) plt.xlabel('v1') plt.ylabel('v2 s.t. integral(f, v1 -&gt; v2) = 0') 
Is New York &gt; Boston because it has more string characters?
&gt; As for dynamic page transitions, you’ll need some JavaScript . But there are Django packages that can generate the JS for you. I would like to know more about this bit. I might want to have a decoration &lt;div&gt; which I would like it to stay the same on every page. I could just stupidly add the same html tag on every page but then the user will have to load it every time which..not ideal if someone use data on mobile/ have slow internet. Do you mind to mind to share the JS for stationary element since I am not familiar with it..
Selenium, BeautifulSoup, and requests are the big three that will help you do 90% of web scraping/automation 
Yup,my bad 
Why is everyone's knee-jerk reaction to Python projects to spend auxiliary effort to set up a Django instance to host them? 
If you don't like that feeling I would really consider a career reorientation because it will never go away. And from my experience, it is only way worse with other languages, especially JavaScript where the ecosystem is evolving way faster without much regard for backward compatibility and is way more scattered. I've been coding Python for about 15 years and I'm pretty sure I don't know half of the standard lib. Why would I? If I need something I skim the documentation learn it and use it. What makes a truly great developer is not what he knows. It's what he's able to assimilate and how quickly. Programming languages are tools, some are better than others depending on the use case, but overall they're pretty similar. It's more or less the same patterns and data structures, simply expressed differently. At my previous workplace, I was thrown into à 1.7Gb Perl codebase to fix bugs in infrastructure services for a large hosting company. Never coded a line of Perl in my life, I felt like everything I learned so far was completely useless. It can really be daunting if you think you must learn and understand every intrinsic implementation details, but the truth is that you only need to learn those which matter. And that's how in about a month I was able to be productive in Perl and within 3 months I was among the top committers even though I hated every line of it. Finally: there is no perfect code, there is only code that work and code that don't work.
Flask is about light as you want. Bottle may be faster. I prefer werkzeug since it's the basis of flask, and it's just enough that I can get things done without it getting in my way.
You can use pypdfocr to produce a text file: pdf2txt.py -o test.txt -t text test_ocr.pdf Then you can use selenium or BeautifulSoup to extract what you want.
Your an amazing person!
A knife, a fork, a vodka and a Cork That's the way we spell New York
i updated the post, please see revision
no you wont
A door chime that uses a ultrasonic sensor to measure distance to a door, and plays a "door opening" theme when someone enters the room. A be-all-end-all dice roller for all kinds of uses. A simple entry/retrieval program for storing and retrieving database entries in sqlite3. A sorting algorithm comparison program (put in 4-5 algorithms and determine the mean time it takes for N number of runs for the problem to be solved for each algorithm) An object-oriented program that elegantly creates objects (Instantiates some classes you made) and uses methods in them to change instance variables and objects. You could simulate someone (walking) down the street, (eating) &lt;food&gt; from a &lt;bag&gt;, running out of food, going to the &lt;store&gt;, picking up &lt;more food&gt;, and {repeating that} until you run out of &lt;money&gt;. 
I did, but form what i can tell it's designed for something completely different, and some things are not working as i want them. For example the default background color is white, and if i switch the background color to blue, the lines of text will still appear with a white background)
Yes you will, eventually. Unless you spend half your time trying to avoid it by randomising your user agent strings and source IPs and blah blah blah.
As a decent follow-on to LPtHW, you might check out [Python 201](https://leanpub.com/python201). That said, the advice offered by /u/AaronOpfer and /u/jahrik are also spot on, especially the advice of (paraphrased) "build something". 
so is only the MLP supported in sklearn?
Hello all, I'm looking for someone for a short project. What I need is a script that can do two things. 1) go through a backlog of articles published on a website, save the articles as pdfs, and name them according to some basic rules. 2) automatically do the same for any new articles published on this site. I have been told that Python would be a good language to use for this sort of thing, but if it could be done better with some other language you have experience with, I am open to ideas. Given that I don't have much personal experience with coding, I don't really have a time frame for this sort of project. I imagine it wouldn't be more than a month with writing and testing. Shoot me a PM if you're interested and we can talk through more details. 
Glad I could help. Have fun!
Constructive Criticism: In this video and another you've posted your usage of the word "variable" should be "Data Structure". The term "variable" is usually reserved for an instance of a Class or Type, ie _myDict_. (A common interview question is "What is the difference between a Class and an Object?")
I love python, nearly all of my projects are python at it's core. I do hate the lack of strong type casting though. At least once a week a legacy project from an engineer long since gone exploded in a fiery mess. Half the time it's because someone new injected a module that didn't honor the original variable type. This would never have been an issue if it was compiled, but of course since I'm the guy on call it's my fault not the guy who wrote the code
```python if '86' or '32' in platform.machine(): ``` will always evaluate as True because of the precedence. ```python if '86' or (anything else): ``` Use ```python if platform.machine() in ('32', '86'): ``` instead
No people can know everything, especially in the modern world. It's not a problem of Python itself. Think about any science, and how we approach them. First you need to learn basic facts, concepts, and axioms, learn basic rules, practice applying what you learn to solve problems, design experiments, or find proofs/solution to interesting problems. In the Python world, if you already know basic computer knowledge, start with Python tutorial, you can already do things like simple math problems, design data structure and algorithms. If you want to do web development, pick django toturial. The standard library, 3rd party libraries, exiting applications are not there for you to learn. They are there to make a developer's life easier. If you want to learn everything before doing anything serious, you may end up in FUD and doing nothing at all. You may find yourself frustrated when you wrote something that has a much better existing implementation. In this case, first, consider that you will get a better understanding of the problem by implementing it youself. Second, if you don't know the concepts in the domain thus failed to search for exiting solution, you may have discovered a domain yourself. Knowing a field well requires learning and experience, that's why most people only get one PhD if any at all. To summarize, find something or some problem that interests you, and try to solve them. Whether you know every feature of the language or used the best library is not that important. Computer science is not something that you can grab and say you have learned it. We all learn the basics and diverse from there. There are experts in every fields, such as system programming, data science, web development, machine learning, VR, etc. They all know/design/use different tools to their advantage. Don't feel frustrated that you don't know everything, in the end, nobody does.
I'm at phone now and can't to search for it, but the web scraping with Python book from packt had an example about this. To find the Ajax petition you only need to open the navigator console and click in the network. Then do the search normally. You will see all the petitions. A little copy and paste in a new tab and you will get the petition you want. You can't last more than a few minutes. I'm assuming that there aren't any referer, cookie or similar protection, but I don't have time to try it.
Functionally this is somewhat similar to the behavior of following, but with much less obtuse syntax. And probably more portable. Maybe safer too. env -i -S "$(cat .env.template | grep -v '^#') $(env | grep ^SECRET_ENV_ | sed 's/^SECRET_ENV_//')" | sort &gt; .env
Use selenium. That’s how me and a friend scraped 2 years of headline info and you could theoretically click into each link and get all that data too and then just back out and onto the next. 
On https://developers.google.com/identity/protocols/OAuth2 see section _4. Refresh the access token, if necessary._ After going through the initial OAuth flow you'll want to setup a cron to refresh the token every _N_ days. (Depending on how long the expiration is.)
Bingo, and not only does this work for Google, but it also works for all of the search engines that are powered *by* google, such as ask.com.
We use it actually on a small subset of projects. The thing is most of the projects I support are legacy and folks keep adding new modules. We're talking hundreds of pipelines. I can't enforce any one specific approach. Op was asking about downsides of python, I'd out type casting at the top of that list.
Unity too. I can’t really speak to how easy Unreal is (I have always just done Unity), but they’re comparable platforms — Unreal produces better graphics generally, but Unity has more of a support community. 
Cool, what's it do? I don't see an _eval_ or anything too malicious at a glance but am still hesitant to run it.
Take your pick from [Web Frameworks for Python](https://wiki.python.org/moin/WebFrameworks).
&gt; https://developers.google.com/identity/protocols/OAuth2 Do I have to go through the whole launch web browser --&gt; have user clicked on allow and login to the google account sequence? Because if this is an unattended cron job, then I won't be able to do that! Also if I am generating refresh tokens, doesn't that make me hit their 50 refresh token limit? And finally, does google automatically refresh your tokens when I run my program with an existing credential token, or do you have to set up a cron job to do it manually? 
How did the design review go?
See Arcade.academy for the arcade library. 
Yeah by default you don't get any kind of type checking, but the great [mypy](http://mypy-lang.org/) project can help with that. It allows you to statically type check your source code by using type annotations.
Why bother when the [typing module](https://docs.python.org/3/library/typing.html), combined with [mypy](http://mypy-lang.org/), can give you the best of both worlds?
&gt; Do I have to go through the whole launch web browser --&gt; have user clicked on allow and login to the google account sequence? Because if this is an unattended cron job, then I won't be able to do that! You'll have to do that part initially, then you should be given a refresh token that you'll then use to automatically refresh the access token. &gt; Also if I am generating refresh tokens, doesn't that make me hit their 50 refresh token limit? I haven't used their API, just basing things off of previous experience with OAuth. Checking up on it https://stackoverflow.com/questions/26135980/google-api-refresh-token-limit it looks like that's correct, but if setup correctly you should be covered for 25 years. (50 max requests and an expiration of 6 months for each access token.) &gt; And finally, does google automatically refresh your tokens when I run my program with an existing credential token, or do you have to set up a cron job to do it manually? You'll need to setup a cron to refresh and save the newly generated access token.
You should probably pay more attention in the class...
No, the code is using global variables so no return is needed. Both /u/RetardedChimpanzee and /u/magnida have pointed out the actual problem that `==` is used instead of `=` for assignment.
It does no evil. Are you really saying you cannot work out what it does from the simple, nay, supremely pythonic, code?
Absolutely proprietary
Good library selection and superb documentations out of the box. Clean upward path for development. In addition, I use Django on larger projects and I won't recommend something to someone it I'm not able to help them - especially beginners. Django isn't a dead weight loss from a learning perspective since you can take what you know and grow what you can do. This is my answer, but please feel free to disagree. There is substantial value in having multiple points of view.
Thinking it’s because N is «bigger» than B
You can do this with django's HTML template language. The official (tutorials)[https://docs.djangoproject.com/en/2.0/intro/] should get you going.
Compared to things like Django, flask is very light weight.
I've read it twice and what I said applies to all of it. 
I'm just starting to learn python (and I have zero programming experience). So I spend half the day building a BMI calculator.. Which I'm insanely proud of. :D
How do I generate a new refresh token? Does the API do it automatically as long as I use the existing token once it is on expiration date? Or do I have to code something manually to generate a refresh token (and how would i do that...)? How do I know exactly which date the refresh token will expire, and have the cron job run on that date? Sorry for the barrage of questions but I really appreciate the help :)
You use Miniconda, instead of Anaco da to install only packages you actually want installed.
Yeah, as mentioned this isn't python-specific, it's just the way programming is. You shouldn't need, want, or expect to know all of the standard library in python or any other language with a standard library. That's like saying you have to have a deep understanding of chemistry to be a good cook. No, you just need to know what you need to know. It's easier than it has ever been to be a programmer because of Google. Usually a few minutes with a search engine will narrow down which libraries you need to investigate using. If you're finding this is not the case, then the skills you need to work on are your research skills, not your programming skills. You'll often find that something from the standard library is actually better replaced with something from somewhere else since the quality of standard library modules varies greatly or at least have been superceded by other work (see urllib3 vs python-requests). FWIW, I don't think you need to be chatting with anyone to find best-in-class material to learn from the great majority of the time. Google is more than sufficient for that purpose.
There are a lot of beginners here I just want to let them know that it might be worth coming back to python once they have more experience and rediscover the language.
Someone can reply to you without having to address every single one of your questions or points.
Why do you think you need something lightweight and what do you think you mean by that word?
And another important factor when someone is beginning programming is having something visual to show pretty fast. Lower level languages can often be frustrating for newcomers because the jump from starting out to a program that can make something visual is huge. But with Python and kivy he can have something visual within a day by following tutorials. That payoff can do wonders for motivation through the learning process. One thing to watch out for that I see in most new students is that they typically hit a wall at some point where their skill is higher then their experience with the environment. If that happens make sure to let them know that it's okay and just part of the learning process.
Putting aside the fact that requirements.txt and setup.py are for different purposes... Every single language has extremely stupid stuff in it mostly due to historical happenstance.
Wow, you sound so much like Marvin the Paranoid Android! Try learning the basics, as taught in the python tutorial; read the introductory text to the standard libraries so you know what is possible, then get stuck in by reading and writing code. You don't need to know it all, or to pester colleagues; you're to be productive with what you know. Remember, there is perfect code to be written, and by yourself - if code solves it's problem and is maintainable then it doesn't matter that someone else could have made it faster or smaller or more buzzword friendly - your users are productive in a sustainable manner! 
How do I get past the fact that, no matter what problem I might want to write code to solve, thousands of other people have already written such code and released it into the public domain, and it' just too obscure for me to find? Knowing that makes it hard to motivate myself to write any code.
Why would anybody in their right senses want to leave utopia in the first place?
Yea it was., unintentionally. JavaScript would be an example of an untyped language. 
Flask like you already mentioned!
[GTMSessionFetcher](https://github.com/google/gtm-session-fetcher) works with [GTM-OAuth2](https://github.com/google/gtm-oauth2) to take care of this all for you: when you make a request with a GTMSessionFetcher that has an authorizer, if the request failed because the access token has expired, the fetcher uses the refresh token to get a new access token, then re-sends the original request, all without you having to even notice.
virgo novato
You could get a chuwi Hi 13 windows 10 tablet and install Anaconda. 
Rosettacode.org for worked examples in Python. 
You can also get a non-Ajax response by using a very old user-agent
&gt;This makes using BeautifulSoup on it impossible. [This example](http://edmundmartin.com/scraping-google-with-python/) uses Beautiful Soup and pulls Google search results no problem.
Why not headless Chrome with Selenium + Python?
Unfortunately that's the fun of GUI programming. I think you need to set the label's bg color also. Python supports a lot of GUI frameworks, so you might be able to find one you like more.
What sorts of approaches are you going with for this? Any tips for a beginner like myself? 
But my understanding is that when you try to get a new access token, it requires a GUI and user input (i.e. login and press allow) in order to generate a new access token. Also not sure how I would use GTMSessionFetcher as a module in python...seems like the coding language is different. Sorry I'm a complete noob at this.
Did you run it?
I enjoy Python Bytes, also with Michael Kennedy. Episodes are short so it's perfect for my short commute.
what is this tool?
I generally do not make it a point to run random code I find online that looks like it's been run through an obfuscater. And I don't feel like even reading through this mess to see what you are intending to have it print at the end. I'm guessing some sort of ASCII art with how you are messing around with `chr()` calls. That also doesn't change the fact that this code is _not_ pythonic in any sense of the term. What does running it even have to do with style and readability?
Getting the refresh token requires user input. Using the refresh token to get a new access token does not. But, Google provides an account UI to let the user invalidate the refresh token held by a specific app, so the user can revoke the app's access without actually doing anything to the app. Yes, my apologies, those links are for the source code for the Objective-C fetcher and authorizer libraries. You can, in theory, use them from Python using its [Foreign Function Interface](http://docs.python-guide.org/en/latest/scenarios/clibs/) since Objective C compiles to C. [Documentation](https://gist.github.com/theskumar/6807044) on compiling for Linux, but I haven't done it myself. But those two GTMxxx libraries in turn rely on Apple's NSURLSession URL loading API, so you'll have to hunt for analogous Linux solutions. 
Okay, but right on that page the top answer states at the very top &gt; JavaScript **is** untyped And goes on to define "untyped" as meaning "no static types". So `untyped` is *not* completely meaningless?
I'm also a beginner, so I welcome any tips you might have too. I'm just making sure I have a solid collection of audio files per genre, I'm extracting as many features as I can (while keeping a sane amount of dimensions), and then I'm trying all sorts of neural nets. So far a 1D convolutional net gave me the best results, but I'm still miles away from where I want to be.
Nice!
Invitation to read the edit on the original post, that hopefully puts some things into context.
Amateur programmer outsmarts billion-dollar industry-leading search giant with this one weird trick!!!
It just prints stuff (I *think*). But run it in an online repl if you're worried! https://repl.it/repls/UnusedMedicalOregonsilverspotbutterfly
The code is using global variables incorrectly. They are not declared as global inside the functions, so in all the functions new local variables are being created and thrown away. Since this needs to be fixed either way, it seems like a good idea to suggest the best practice for fixing it. OP: as an aside, there is no good reason for splitting the code into functions like this in the first place. It just makes it unnecessarily complicated.
Transcrypt is a great project and the synchronized components (Transcrypt - Frontend / CPython - Backend) (yes I have read about it, and not today) is a superb example of what things one can achieve. As I said before, I am sure it has many and good uses and hope for its success together with some other python-in-the-browser implementations.
An alarm clock I think has elements of challenge but not too hard. This would make a good high school project 
I make like 1000 requests a day to Google from the same IP and the same user agent and I've never been banned.
Does the refresh token not expire? Only the access token expires after 6 months? I'm confused a little bit. Basically as long as I get the first token manually (with user input)...is there a way to infinitely renew subsequent tokens without user interaction since this is a cron job?
Love it
The access token expires every hour. I'm honestly not sure how often the refresh token expires. In my Mac calendar app, the refresh token I got June 2014 is still in use.
it doesn't give me any errors...the terminal just lets me keep typing something new but not in python
I suspect you might not have Python 3.6, where f-strings were introduced?
It would be nice if their meta-redirects didn't break my back button.
Backtrader looks like what I've been looking for. Thank you kind stranger!
Yeah I have python 3.6 I’m doing the “learn python the hard way book” Everything’s been executing fine up until now... smh
Can you printscreen / post the error you are getting when running it?
No errors it just lets me keep typing as if I was in the same folder.....like asking for a command again.
Check out /r/learnpython Also be sure to read their sidebar; lots of good information.
Proxies are very handy to get around the limits, and the API uses a stale index IIRC.
Show screenshots of various plots in a README.md
[/r/learnpython](https://www.reddit.com/r/learnpython) and mind your indentation...
Sorry it took a while to get back to you, the error is as follows: Failed Import: 'speech_recognition' module doesn't exist in any of the import directories: . , C:\Users\Programming\AppData\Romaing\npm\node_module\rapydscript\src\lib speech_recognition is the Python library I'm using to interact with Google Cloud speech recognition API. 
Technical content is great. However, are kids with youtube accounts &amp; a phone ahead of their time, or are professional engineers behind it? What the hell is this video quality? 
thank you guys. I was stressed af
Love this so much! 
No probs
i tried using pandoc to convert the markdown to rst but the figures are not showing up on pypi. the github page renders the figures fine though. 
I think your problem is just the way you are printing the data. If np.genfromtxt() is not returning an error then your data should be fine and a numpy array. Try doing type(your_data) to check if you have a numpy array and data.shape to see how many lines/columns you have. Also, if you're starting with this kind of stuff, make sure you check Pandas, it will make your life a lot easier when you need to manipulate data. 
By that definition Python is untyped which flies straight in the face of the fact that Python is strongly and dynamically typed. Why do I bother?
I've never used Udemy, though I do know some books you can grab that may help you learn Python. "Learning Python" by Mark Lutz is a magnificent book for anyone who wants to learn Python, new to programming or already experienced. There's a bunch of free programming books [here.](http://books.goalkicker.com/) Python is in there somewhere. Hope this was helpful.
That's some next-level 720p right there.
Agreed. I want a blog post/text .
I think it is indeed the way I am printing the data. However, when I do type(data) it returns that it's an numpy.ndarray. Is there a difference between numpy.ndarray and numpy.array?
Here you are: https://hackernoon.com/a-brief-tour-of-python-3-7-data-classes-22ee5e046517
And how would I go about adding it to the system variable path? IntelliJ is working great, the jdk installed itself no problem.
Oh! There we go. I was on mobile so I couldn't see all of the readme. Should add a few more plots in there to compliment the color schemes. Might have to use this for some presentations =P
https://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows-7 The top comment on here should do the trick
here are the slides https://www.dropbox.com/s/cxxz4d2hwj4hm4d/HettingerHolidaySF2017.pdf
No it is not a different purpose. 
Why would you install something extra a task that should be that simple?
&gt; So please, next time document before and try to understand the bigger picture and why it has come to this before bashing. I've done my research before and came to the conclusion it is just stupid to deal with. I've not asked about how to do this. I know how to do this. I'm not dumb. I used the search™and managing deps programatically includes a lot of stupid side effects https://stackoverflow.com/a/16624700 I don't want to write the same stupid boilerplate code all the time. All of you wanna tell me setup.py and requirements.txt is a complete different story. But it is not. The one is meant for applications on pip, while the other could be used for dev dependencies, both share the same application which require the same dependencies.
Thanks everyone for replying and thank you for the code fixes but in the end I still had the same issue. The only way I was able to rectify this was by putting everything into the same function, not it works but it looks like crap. def Computer(): if platform.platform()[0:7] == 'Windows': pcplatform = "Windows" elif platform.platform()[0:5] == 'Linux': pcplatform = "Linux" elif platform.plarform() == 'darwin' or 'osx': pcplatform = "Mac" if pcplatform == 'Windows': pcversion = platform.version()[0:2] elif pcplatform == 'Linux': pcversion = platform.linux_distribution() elif pcplatform == 'Mac': pcversion = 'Mac' + platform.mac_ver() if '86' or '32' in platform.machine(): pcarchitecture = "32-bit" elif '64' in platform.machine(): pcarchitecture = "64-bit" print "The Computer is %s %s %s" % (pcplatform, pcversion, pcarchitecture) 
Ever heard of `npm install --save` or `npm install --save-dev`? Why do python people have to make a science out of it? Do I need to have a PhD to do python dev? All of you cry about PHP all the time, but the kindergarten I've to deal with in python isn't any better.
This looks very cool, I'll definitely try it out! Will it work just as well for class methods? 
Don't practice, just do. Pick or create a project and run with it. 
I don't understand this. What are you "saving" the RAM and CPU power for? Why would your dev computer be under such a load that it can't even handle a relatively light weight IDE? I've got PyCharm open on another monitor right now and my CPU is at 16%?
I really really love this 💞
numpy.array is a function that returns ndarrays
Great starter project ideas - keep at it!
See https://www.reddit.com/r/Python/comments/7tnfwh/
&gt;and actually improving the language itself What would this look like to you? New syntax?
When you're searching manually, in your browser, you're generating ad views/clicks ( in theory ) so they can justify providing the service for free. Nobody sees any ads when using the API.
I really like Raymond's talks, but when he starts in on namedTuples it's just boring. It seems dataclass is no different. I could barely stay awake.
If you're thinking about Arduino-style, Micropython is the answer. As it is, Straight python will work as the Beaglebone has a full ARM processor and runs linux.
https://medium.com/netflix-techblog/pass-the-remote-user-input-on-tv-devices-923f6920c9a8 has a good overview of some of the navigation challanages with LRUD (or UDLR) navigation. 
Check out /r/learnpython Also, check out the sidebar for info on correctly formatting your post (indenting each line by 4 spaces, etc.); it's for the benefit of the people trying to help you out.
&gt; You shouldn't need, want, or expect to know all of the standard library in python or any other language with a standard library. The standard library, much like a dictionary of definitions, can be read sequentially, cover to cover. It's great fun. 
This was the first raymond's talk that I didn't enjoy. And he spammed the "there must be a better way" *way* too much.
If that's what it takes, then yes. But not just that but fixing the slots issue too for good.
Then delete the `requirements.txt` file, and `pip install -e .` in a venv for development. No more duplication. 
I had no idea about `class Color(NamedTuple)` Why does everyone talk about `collections.namedtuple` and not `typing.NamedTuple`?
It's so elegant though. You type less, you get a type declaration (declare "object" if you don't know ahead of time), and you get all the useful functionality. Let's face it, too, that 99% of the time you do know the type of the object ahead of time and the end result will be better code completion everywhere. It's a win-win-win-win on all sides.
I think this whole thing started because named tuples were very slow. Dataclass is basically named tuples 2.0
I agree. I think he probably wasn't very prepared for this talk. He said it was last minute and at one point he started going on about Guido being high and just approving PEPs. I can't imagine Guido appreciates that image.
typing.NamedTuple is new, it came out with 3.5, while collections.namedtuple is much older. Also it requires you to use typing, which a lot of people don't want
Many websites transmit data even when their tabs aren't focused on. You will also have a problem of determining when a website was closed. A better approach would be to ask the webbrowser which tabs are opened/in focus. Probably something like this [add-on](https://chrome.google.com/webstore/detail/timestats/ejifodhjoeeenihgfpjijjmpomaphmah) (just googled for "website time tracker", no affiliation). The problem is, web browser extensions are not written in Python usually…
Yeah, seemed really bad. I hope this was a one-time thing.
Still, at the end of the day, it either works or it does not. That 1.7Gb of Perl code was the biggest spaghetti mess I have ever seen in my life and I did not see a single unit test anywhere. And to be honest, most scripts involved many services of all kinds and even talked directly to really expensive and sometimes rare network equipment. It would have been nearly impossible to achieve complete code coverage, especially with Perl. The repository was 10 years old, contained 10 years of legacy code updated by interns over a damn decade. I'd wager that at least ~1000 contributors have thrown their grain of salt in that chipotle. Yet a billion-dollar company was (and is still) running on it. 
&gt; whether or not there were tools out there that could assist in finding such areas Yes, I mentioned one and linked to it. &gt; It is unclear to me how numpy can help me in this situation . You had said nothing about your problem before. I honestly just recommend C. You have the function already. I'd just build it on 3 platforms.
&gt; Its intrinsically part of how Python works. Class variables take precedence over slots and since there is no instance dict, the values are read only Fair enough, but you 100% ignored the custom syntax part so I wouldn't be enforced to use typing. &gt; Furthermore, and I'd say more importantly, the CPython core devs don't owe *anything* to you. Python is open source. If you'd like to see something fixed and that isn't happening it is on you to either pay someone to fix it, or do it yourself. It always bothers me when people feel entitled to CPython core developers fixing an issue they have with Python. Ah yes, the good old "are you whining about a stupid design choice? Do it better yourself then" because I'm not allowed to have negative opinions about things that are done by someone else. I build my own car too btw because I was annoyed by the steering wheel on the Toyota I wanted.
I'm working on a pet project that sync my Github gists to Evernote account which enable me to search everything I wrote in one place! Give it a try and tell me what do you think about it so I can try to improve it! :3 https://github.com/leemengtaiwan/gist-evernote
The margin of victory logic is fatally flawed, IMO. Teams are usually unwilling to try to run up the score on their opponents, for a variety of reasons: 1. It's bad sportsmanship. You might think this doesn't matter in professional sports, but the '07 Patriots got flak for blowing out teams, especially in the first half of the season (helped them set some records though). 2. Counter-intuitively, it can *lower* their chances of winning. If I have a solid lead, the best way to win is to run out the clock by putting together long drives. The best way to do that is by running the ball. That gives my defense more time to rest and chews up time on the clock. Passing is the best way to score points (it's a lot easier to move the ball 15+ yards on a passing play), but when you have a big lead, running is the smarter play, even though it leads to fewer touchdowns. 3. It puts their players at risk. If you have a huge lead, taking out your star players might be the best move. Doesn't help run up the score, but it ensures they play the next game. Look at the Steelers-Browns game from the end of the season. Obviously the Steelers are much better, but they played their second stringers, so the score was closer than the quality of the teams implies. Look at the Steelers-Jaguars playoff game for a great example. Anyone who watched the game would say that the Jaguars were in control all game. The final score was 42-45, but that was because the Steelers scored 2 touchdowns at the end of the game. The Jags were OK letting that happen, because the clock basically prevented the Steelers from winning, even in that worse case scenario where they score 2 touchdowns. For an improved metric, you could look at something correlated with winning but distinct from score, such as time of possession. You could also look at lead changes or drives in which the winning team ended with the lead (both of which I think would give better indications of strength of victory than scoring differential). The big issue with the NFL is that the last 10 or 15 minutes of game time can often be inconsequential ("garbage time", as some call it), so that should be weighted less heavily. Algorithmically determining garbage time is tough, however. There are also entire games that are garbage time at the end of the season, due to teams being eliminated from the playoffs or their seeding not being affected by the result (or in the case of the Rams, the coach deciding a potentially higher seed isn't worth the effort or risk to the players). One thing that might be used would be a leverage calculation: based on the quality of the teams up to that point in the season, what is the difference in probability of making the playoffs if they win vs lose
I think that the bother of having to type `: Any` for 1% of the fields is dwarfed by the awesomeness of not having to type ` = attr.ib(type=str)` for the other 99%. Your IDE will appreciate it as well.
&gt; because I'm not allowed to have negative opinions about things that are done by someone else. Oh you are entirely allowed to critique design decisions. What you aren't allowed to do is complain about core devs not "fixing" them to your liking. &gt;I build my own car too btw because I was annoyed by the steering wheel on the Toyota I wanted. This is a false equivalence because you pay Toyota to build it for you ;) Also, I didn't ignore the custom syntax, but you didn't make any proposals. So I had no basis to form an opinion. So sure, perhaps with custom syntax you could completely side-step the generation of a descriptor and it could automagically be used to create slots, but one of the best parts of Python is that the syntax is relatively minimal. There aren't a ton of keywords, you don't have to learn a lot. The addition of async/await was a big change.
Yes, I agree. However, doing so isn't the same as "knowing" the standard library!
Sure you can....but you used the words **simple addition** and **properly fixed** So you should be able to make a simple pull request that will properly fix it. 
You're going to have a really, really hard time convincing the Python people to add a new special `$` symbol that's only useful for enums and for `Any` variables in class declarations. It wouldn't "fix" the __slots__ situation either.
Most, if not all, web browsers have a sqlite database that stores a bunch of data. You should be able to pull information from that database to check if people are looking at those websites. Chrome uses a history file which is a sqlite db. 
Seems like a legit question to me, why all the minuses?
Umh, yeah? That doesn't mean it couldn't be *even* better, does it? Where did I say it's worse than attrs...?
I said nothing about my problem because I already knew the answer and asked the only question that was actually relevant to my situation to satisfy my curiosity. In any case, thank you for your interest.
Seriously, **what the fuck**? Are you high? Those are two very different wordings from two very different contexts. A single symbol is a simple addition. The proper fix had nothing to do with it. You said "be able" and "pull", so you should be able to pull the moon from the sky with your bare hands.
that makes two of us. 
Ohh right, that's how it works. You see something on the news that you've never heard of before, but instead of expressing your thoughts there and then, you go back in time, do extensive research on the topic, find out where it will be discussed, and express your thoughts there. Yeah, this is reddit mate.
It's not mandatory, it's type hinting.
I agree with you.
OK, well at least now you know where you can express your opinions and they will actually be useful.
Sounds like you should just delete your requirements.txt file, if it bothers you that much. That's what gets you comparable use to npm. But similarly to package.json, it doesn't list any recursive dependencies like you'd typically get with a requirements.txt. When my npm project suddenly stops building because, it makes having a full list of the state of your last known-working dependencies/versions seem more useful.
In blaming "devs", you may be misunderstanding something about the Python language design process. The discussions for new features are open and public. The users (including core devs) are the ones who decide which ideas to work on. If the feature is lacking, either no one brought up certain improvements, or they were decided against.
Welcome to life. Can you think of any possible skill where you’re not crushed by the anxiety of influence? Everything has been done for thousands of years resulting in libraries upon libraries of books. If you wanted to be able to master something top to bottom, you should have been born in 2000BCE. 
Check out /r/learnpython 
Reddit is not your homework army. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [fr31/spotifylyrics/.../**example-theme.ini** (master → 44437d4)](https://github.com/fr31/spotifylyrics/blob/44437d4dc1f276e2bc8f9c8eb85307a2f80aa1da/example-theme.ini) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dte5igp.)
Oh yes it is! And I will be persistent in my quest for Python! I will ignore the haters and the naysayers. I will travel steadfast in my journey. Someone out there will help me. 
You want a tutorial, here is one. Step 1: create IRC bot that shows the title of links people post in chat, by using a headless browser, navigating to the site, and return value of &lt;title&gt;. Make sure to execute JS and have no content blockers. Step 2: offer a .g command to search google via the bot, using the same cookie store. Step 3: Profit. At this point your bot will have a realistic human browsing pattern — because it is created by humans — and a realistic human search pattern. It doesn't behave like a normal sighted user (e.g., no mouse movement), but it behaves exactly like a normal blind user. I've done this in the past, and it works perfectly.
Oh great! thanks, but I have no idea how or where I change those lines, could you help me out?
How many comments did you make during the discussions on python-ideas?
I bet the CrystalPepsi theme would look great with darker backgrounds. 
&gt; For example (after 10 seconds of thinking and planning), they could introduce a new symbol, a language feature that handles the data containment issue he talks about That shows that you clearly know nothing at all about the work involved doing such a change. Hardly surprising that your comments throughout this thread have been so moronic.
I think he or she is a complete arsehole.
This is beautiful and amazing. Good work OP!! I really wish more engineers cared about aesthetics. 
You said they should fix `__slots__` to work with class variables, because you clearly don't like how things work currently. And you are right, you can complain about whatever the hell you want, but that doesn't mean you should. &gt;We have free healthcare here in Finland. Guess what? People complain of the long queue times. Hate to break it to you bud, but nothing in life is free. That healthcare is paid through taxes :) I'm not saying you are not able to complain about the CPython core developers not fulfilling your every wish, I'm saying unless you contribute (with time or money) to CPython, then you have no stake in it. As the saying goes, beggars cannot be choosers. I invite you to read this blog post by Brett Cannon on the abuse of the maintainer https://snarky.ca/why-i-took-october-off-from-oss-volunteering/
if you knew in advance that the screenshot was horrible - why did you not create a better one?
He just sent me a picture off his phone and I'm just trying to help him out
I gotcha, first time around and I'm just trying to help a friend out. 
Typical, time to moan like hell but no time to write code, and no time to take part in the discussions on python-ideas and then later python-dev. You're worse than clueless.
Regardless of whether your ideas have merit, nobody is going to give you the time of day with that attitude.
Please give up, when you've dug yourself into a big hole it's clearly best just to put the shovel down before you make things worse.
Hmm, off the top of my head, there are [rosettacode.org](https://rosettacode.org/wiki/Category:Programming_Tasks) and [projecteuler.net](https://projecteuler.net/) to name a few - while the latter is more focused on math. But for a starter like you to practice programming, I would suggest to check out [HackerRank](https://www.hackerrank.com/domains/python/py-introduction) - The challenges are really good explained, and you can try and submit your code right in the browser.
I'm aware of Python pattern matching code but don't see it discussed that often so somehow I doubt that python is "painfully lacking these features".
Can't believe the reception you're getting for having an opinion about this feature. r/python, I am disappointed.
&gt; now it works No it doesn't, you have the same typo as before, "plarform" instead of "platform". To clean your code up I'd keep your original functions but have them return values and make `pcplatform`, `pcversion` and `pcarchitecture` local to `Computer`, dispensing with the globals.
&gt; if foo==1 or foo==2 Often written as `if foo in (1, 2):`.
That's not even 10 lines of code
There is a big difference between these two things. You paid money for your car, you likely didn’t pay the open source contributors. 
I’m spending hours on college computer science homework that I’m sure you could all solve in seconds!!
This is really cool, look forward to checking it out further!
Thanks! I believe it will work with static methods, e.g: class A: @staticmethod @node def f(x): print(x) But the node decorator doesn't currently play nice with class and instance methods. My design goal here was to encourage functional programming, where the functions you're composing are free from side effects (that lets you do cool things like parallelization). I actually didn't even think of using these with class methods! I bet that wouldn't be too hard to add. 
I would *love* this, especially sum types. Currently, writing code that handles a value that could be one of many things feels awful. But I think it would need new syntax, and that's a hard sell for Python.
Better yet don't bother with the stupid things. There is a thread on the main Python mailing list right now asking why people use them.
You should take at this roguelike game toolkit: https://bitbucket.org/libtcod/libtcod/ https://python-tdl.readthedocs.io/en/latest/index.html 
I checked it out and guess what? Not a single palm, ancient statue or a Japanese letter in view. It's not vaporwave *aesthetics*, it's vaporwave *palettes*. Cool palettes, though.
Absolutely. I'm in no way saying that bickering to devs providing free software is the way to go. I just come across a lot of situations where general users suggest some ideas they have and someone (usually not even the developer of the project) tells them to do it themselves. 
I agree that sum (and recently I actually wanted disjoint) types would be nice at the mypy level, although I'm unsure if mypy could really handle that easily. If you define a `SumOver(*types)`, can mypy statically assert that each possible type was handled? Like maybe I guess but also that, without syntax, is super ugly to manage.
Have you tried [Coconut](http://coconut-lang.org/)? &gt; Coconut is a functional programming language that compiles to Python. Since all valid Python is valid Coconut, using Coconut will only extend and enhance what you're already capable of in Python.
I would browse through pythonprogramming.net if you’re trying to pivot into python. He uploads all his tutorials for free to YouTube (although donations are available) and covers almost anything you’d want from fundamentals to machine learning.
I saw it on reddit a year ago. It's an interesting project, but certainly can't use it at work or anything like that...
Sigh.... - Explicit is better than implicit. - There should be one-- and preferably only one --obvious way to do it.
I've said it before, Guido let go of the wheel around 2012 and shit has just been accepted willy nilly ever since.
This is awesome. Extremely pleasing to the eye!
I use my system most of the times.
Have a look at Adafruits BB_GPIO Library. https://learn.adafruit.com/setting-up-io-python-library-on-beaglebone-black/adc It provides support for ADC.
numpy.ndarray is the class, numpy.array is a function that turns some compatible data (list, tuple, etc) into an array. I think your program would work better if you read the CSV yourself. Something like: with open('afile.csv', 'r') as fid: lines = fid.readlines() names, values = np.empty(len(lines), dtype='U'), np.empty(len(lines), dtype=np.float64) for idx, line in enumerate(lines): name, value = line.split(',') names[idx] = name values[idx] = value A summary of this program: 1. Open the file and read its lines 2. Create name and value arrays of appropriate length and type 3. Read names and values from the CSV file and fill in each array Numpy is much happier when an array has a cohesive type. If you want a more tabular data experience, use Pandas. It will also have more robust .csv reading capabilities and other features. Note that this does not give you a list of items with a name, value (e.g. `('Rainy', 10)` but rather stores each block of information contiguously, which is generally much faster. If you wanted to access them in pairs like that, you would do for name, value in zip(names, values): ... but if you operate this way the only thing numpy will give you over e.g. NamedTuples is reduced memory usage.
Awesome, thanks for the detailed reply! 
Another drug user. What is this, am I on candid camera?
Raymond Hettinger's speech about dataclasses. You know, the one posted here on reddit. On this thread. By OP. The original post itself.
Sure, if you have an array of size (m,n,3) then this operation is equivalent to contracting the last axis with the vector [0.299, 0.587, 0.114].
It's one of those things that should have been in from day 1
My biggest comment is I don't speak French. Also, I recommend against `os.system`. `subprocesses.call` is far superior.
Cite: myself
I'm guessing what you mean is something like np.multiply(img[,,:], [0.299, 0.587, 0.114]) ?
You probably want to use a library specifically for scraping. google: https://www.google.com/search?q=python+web+scraping 
http://www.attrs.org/en/stable/why.html
Those are two odd things to compare. Indeed you could use a named tuple to store lists and data series in it, but you'd lack all the methods, pandas/numpy interaction and optimization the library has. I can't think of a case where it would make a lot of sense. Named tuples are useful in other situations as small data structures. It's like defining a class without methods where you'd just store the arguments of `__init__` inside attributes and that's all. But much shorter! However I don't use them very often because PyCharm doesn't recognize them properly (at least last time I tested it didn't). It seems 2018.1 will finally bring us exactly that, so my habits might change. Also, I'm super hyped for Python 3.7 data classes, which could replace named tuples for that usage. 
Thanks. Thought of that. Was hoping for maybe some more directed advice or suggestions here. 
Push date_list into main(), and loop over it after you call auth(), inside of the other for loop.
I'd rather compare pandas series with a regular python list instead of a tuple. Tuple's usually have a know, somewhat limited length while series could be long sequences.
No, you're simply thick.
then put "-e ." on the first line of the requirements.txt to install the dependencies from setup.py. And voila, you have the core dependencies in setup.py and the development ones in requirements.txt.
&gt; Raymond Hettinger's speech about dataclasses. How does that equate to "multiple citations"? Besides it's been approved so a lot of Python programmers, whether or not core developers, must have said something in favour of them on python-ideas or python-dev.
That's one citation that I distrust explicitly, where are the rest of them?
Oh, just saw your update. Instead of using a for loop, try manually cranking the iterator. a = [1,2,3,4] b = iter(a) next(b) # returns 1 next(b) # returns 2 next(b) # returns 3 next(b) # returns 4 next(b) # raises StopIteration 
Store auth_data in a dictionary, keyed by user_id (or username, whichever makes more sense). If the user isn't in the dictionary, do the login. Otherwise, use the existing auth data.
 img = .... # whatever to load the image result = img @ [0.299, 0.587, 0.114]
Thanks a lot for this article, I learned a lot of new things :) Especially, I didn't know about automatic foreign-key index: it's "weird" to have this behaviour opt-in by default.
I’ll give it a try. Thanks.
it worked, you legend! Thanks again!
Well that's an interesting question... I use to assign a task, and execute it in different ways... and reads blogs on latest technologies where python used and its applications.
Didn't catch that because I dont use a mac, thanks.
Thanks, you're absolutely right, it does always evaluate to true. 
I just spend around 8 hours trying to learn python
&gt; Also, I'm super hyped for Python 3.7 data classes, which could replace named tuples for that usage. The obligatory reference to [attrs](http://www.attrs.org/en/stable/), but there's also [autoclass](https://smarie.github.io/python-autoclass/) and [python-fields](https://python-fields.readthedocs.io/en/latest/), possibly others that I haven't heard of. Talk about more than one way of skinning the cat :-)
hmm I get "too many indices for array". I printed out img straight after and got (512, 512) instead of (512,512,3) which is interesting. Thanks for the tip!
Looks like `img` is already grayscale then, in that case. No problem~
I'm not learning python anymore as in, actively trying to learn the language itself or programming in general, but: * Whenever I come across some problem, the first thing I do is check whether std (standard library) has a function or a module that solves it. * If there isn't, I try to think how I would solve it myself. * Depending on whether I can or cannot, I might check out what 3rd party libraries are here that can solve the problem. Most things I read related to programming is algorithms that are simply explained or simply ideas on how things can be done, basically, not "how can it be done in python", but "how can it be solved". The time I spend on that depends on the topic. For example, I found this very simple idea about generating "space invader" like sprites: [Space Invader Generator](https://the8bitpimp.wordpress.com/2013/05/07/space-invader-generator/) The simple explanation, as the algorithm is actually very simple, was enough to make a simple prototype in python that spits out a single random image in a few minutes, for me at least, without reading the code, although you can check it for yourself, it's in C++ though.
In much the same way that Haskell is lacking the feature of being a completely dynamically-typed language, yes, you could argue Python is lacking these things.
Well, that works (and I hadn't heard of those so thanks for the tip). But they do not address the issue I have with named tuples; from what I can tell both PyCharm and Pylint completely freak out when I use `autoargs` despite all my tests still passing. That, like "Python magic" in general, makes it impractical for large projects IMHO.
Ok. So start by opening up your text editor
I tired to write it myself :( no luck
Lol, fuck google. 100 searches every 24hours - 4.16requests/hour. They build their whole business around public data but go to extreme lengths when it comes to anyone else using their public data. __Scrape the shit out of them I say__ - proxies are a dime a dozen.
You see this in many volunteer organizations. They don't need ideas, they need help. If I'm volunteering, I'm either already working on *my own* good ideas or working on things that I don't really want to do that have to be done by someone. So, yes, I find it a perfectly valid response. 
Good try Michael Kennedy. I’ll never tell buhahanahha!
Qt is always good, no matter what the language 
I second this. Feature wise, PyQt5 is currently above every other framework (but closely followed by PyGTK). Anyway this topic has already been discuted many times before here. So here are some past link: https://www.google.ca/search?q=python+gui+framework+site%3A+https%3A%2F%2Fwww.reddit.com%2Fr%2Fpython&amp;ie=utf-8&amp;oe=utf-8&amp;client=firefox-b&amp;gfe_rd=cr&amp;dcr=0&amp;ei=VRlvWujuEoXOXuCEsJAL
It doesn't put any extra junk between you and your code. If you want to express an algorithm in the style that Python encourages (as opposed to a pure functional style), I don't know of any other mainstream language that can do it in fewer keystrokes and in a way that so closely resembles pseudocode. Of course, there are tradeoffs here. That extra junk includes things like compile-time type safety checks which is helpful for building robust code. But to a beginner it probably seems like unnecessary, strange, annoying magic that you need to do just to get your program to run.
The video was taken at Yelp. There were issues with the equipment I guess. I was there in the audience.
For larger scraping projects, consider checking Scrapy out (https://scrapy.org/). A company I used to work for used this to scrape jobs off online job boards and various ATSes. IMO its the best framework in town for scraping anything more than a single web page.
Good choice could be wxPython Phoenix. You can also use WxFormBuilder GUI Builder for creating python code or for another process use case XRC Files. https://wxpython.org/Phoenix/docs/html/ https://github.com/wxFormBuilder/wxFormBuilder 
Fantastic lecturer.... Easy to follow and a great presentation. Sudo Kudos
[GITHUB](https://github.com/search?q=jira+python&amp;type=) 
He is a python user through. He just isn't a core developer, or general the kind of user who would submit patches to the language/interpreter. So it may be open in the sense that anyone can join the mailing list, but it isn't clear why they would do so. They don't have the time, interest or skill to critique proposals, and there is little reason to expect that their opinions would really be welcome, especially when half the other comments are "submit a patch."
I came up with a goal in mind (web scrap waze), and started slowly building what I knew to get there. When I came up to a road block, I learned how to get around it which helped me learn the basics as well. I learn the best by doing. 
Make sure you are saving the value right after it reads it. Sometimes it can write over it's self so you don't get anything unless you save it. 
If you need something lightweight, than PyImGUI is a good bet. Elsewhere Wx has been mentioned, which is cross platform and will look somewhat native. Kivy is a good choice for touch devices.
aww sorry. I've put the url behind some text. Is that better?
Here the users don't think the developers ideas are all that good... that's the distinction. I'm starting to feel that python peaked around 3.3 and that a lot of what has been added since isn't worth all that much. That we would be better off having devs slow down and do less work. That's a difficult conversation to have because you are basically telling someone excited enough to volunteer their time and energy to buzz of, but it should be had. 
This is super cool, but man the first time someone has a meeting to talk about its implementation into code and says sneakysnek is going to have an interesting day.
I will be taking a look at this. Seems pretty interesting.
Thanks everyone!
Another one right here
This is one of the those questions where you will get several different "X is obviously the best" because the best GUI framework is always the one you yourself use the most. My 5 cent would be that I've used tkinter, a little bit of wxPython, kivy and PyQT4/PyQT5 and of those I prefer PyQT5. Though currently I'm building apps mostly in html and using cefpython to spawn up a minimal local browser instance and for me right now in my current project that's definitely much better than QT, though there was a lot of pain initially getting cefpython set up just right and getting packaging working.
HTML is a framework now? You learn something everyday... /s
This is amazing! You achieved so much in such a short amount of time. Congrats!
Thanks! I really appreciate it :)
Everyone, it's dictionaries. Except as a class. Yaaaaaay. 
Disagree. I think Python tries to be a "multi-paradigm" language much more than Haskell tries to be a multi paradigm language. Requesting functional features or advanced types in Python makes much more sense than requesting imperative features or dynamic typing in Haskell.
not good enough. NEXT! 
Consider each downvote a citation.
https://xkcd.com/1172/
For a modern QML + python app, take a look at Ultimaker's [Cura](https://github.com/Ultimaker/Cura)
Thank you! 
Which one? pyqt or pyside? Is this bad https://docs.python.org/3/library/tk.html ?
Don't bother. Most traffic should be TLS-protected. Even the IP is not enough. Reverse DNS is not reliable, and websites can be virtual-hosted, IP-load-balanced, anycasted or CDNed.
Came here to see if people knew about attrs before this talk. I'm glad to see that others do!
Just don't always expect Qt to look nice on certain Linux distributions, especially those with the Adwaita theme. It's not exactly the same as the proper Gtk3/Adwaita look from `gi.repository.Gtk`.
Neither, some people prefer text and others prefer video. Different learning styles. Personally I prefer having both.
At about the 43 minute mark of the video for those who want to jump to it.
Try https://github.com/codelv/enaml-native
23:48 gold
Oh hey, you're the retired judge from /r/magicTCG! I love it when I find people in random other subreddits. Never knew you were also in here.
I use pyqt just because it worked for my workflow. I had designers using QtCreator to make the UI and then I just imported and added the code on top. As for tk, it's very Python specific. I prefer to do things with multiple languages in mind. 
Tkinter has the advantage of being part of the standard library. It is very simple, so if you need more advanced GUI features, it wouldn't be the right choice. But if simple is all you need, it is OK.
&gt; This is a false equivalence because you pay Toyota to build it for you ;) You can critique products you don't buy. In fact it is commonplace: "I thought about buying the X but it was too Y, and I liked Z better." So interpret /u/mafibar's comments in that light and he is basically saying: "I'm looking to switch away from python." Now maybe the devs don't care. Maybe they don't mind if fewer people use python in the future. Maybe Guido wants a smaller more fervent python community, but its hard to believe that. Why publish a language if you don't want wide acceptance of it?
The canonical answer to this is the library called BeautifulSoup.
The name seems pretty apt. Why might I want this except to do something illicit?
People critique products they don't purchase all the time. They do so as part of the comparison process. We looked at both Toyota and Honda, but found the interior of the Honda to seem cheaply made, and got the Toyota instead. I didn't pay any money to Honda motor company, but I still get to make that comment. When we do this with respect to stuff we don't pay for we are expressing a desire and preference for the alternative. So while I generally like Python, I have serious concerns about some of the more recent decisions. I see other languages not making those kinds of mistakes and I think about switching away from python on future projects. Now maybe Guido doesn't care if python becomes less popular over time, but I generally think that he likes when python is popular. That he wants it to become more popular over time, not less. So he should be concerned about these kinds of opinions.
To me, the most interesting about this is the use of [appjar](http://appjar.info/), which I had never heard about before but seems like a great solution for GUIs.
Even with amount of memes obstructing this, it is still probably easier to understand than when I try to explain something like if statement to a complete noob...
I'd say probably grab the direct link and past that instead. Most subreddits don't like urls that redirect anywhere. 
&gt;I had designers using QtCreator to make the UI and then I just imported and added the code on top. ahh that looks cool, I never used QtCreator and I believe people here will code the UI using python
I would gladly hear your definition of a framework. Is it because it is a language that it cannot be a framework ? For me, a framework is a set of tools to accomplish something. If what you want is a user interface (usually what you want is to interact with the user and show data), HTML/CSS/JS provide these tools for me (forms, graphs, table, etc.). In all seriousness, there are great chances that learning HTML/CSS/JS will be useful. It is ways faster (IMO) to learn these than wxPython or Qt, and faster to build a simple interface. 
What does x.shape return? it should be (50, 2) if you have 50 rows. If it is (50, 1), which is what your display implies, you are not reading the CSV correctly for some reason. Mostly likely because the separator in the file is not a comma, but a space. You can just test this. What happens if you type x[3][0] and x[3][1]? Do you get an error, or 'Sunny' and '20'? If the former, you aren't reading it correctly, if the latter, everything is fine. 
Nope. But I like the new colormaps just as well, like "magma" 
In my opinion, there are none at present.
You are right, for Python this is the safest choice. 
You should also add that you need to be an expert in Licensing to use Qt for anything non-trivial. 
&gt; As for framework, I'd say that using pure HTML/CSS/JS is building from 0. Framework would be something like React.js or whatever people use nowadays... OK but look the other answer about Qt, everybody is adding is favorite package/library/super-framework/meta-framework above it. It's the same in my opinion. 
People shouldn't rewrite core library functions. NumPy is perfectly able to read a csv, and will not have bugs. Your code has a bug - it does not correctly handle white space in the file. "1, 2" would be rendered by "1" and " 2" by your code. NumPy will eliminate the leading space, and also correctly convert the columns into integers instead of strings. Furthermore, your solution creates two separate arrays, which is not what he asked for.
Emailed. It's not used during debugging sessions - during debugging you can see your variables anways. It's more of scratchpad - think Linqpad, JSBin, or Repl.it, if you're familiar with any of those.
/r/learnpython
In my opinion [WeasyPrint](http://weasyprint.org/) is far superior to ReportLab. Also, ReportLab inserts its branding in all of your documents unless you pay for their premium service. At least that was the case the last time I had to deal with that library.
Right, /r/learnpython is what you're looking for. Read this subreddits sidebar.
I believe your opinion would have been more useful in the past, as well. 
Why would I care about downvotes on a place like reddit, it's not as if it's full of professional programmers like myself? Most of the time you need cotton wool in your ears to drown out the clanking of the spurs.
Well it's just the complication is for commercial programs that's it. For open source and non-commercial you are fine
Show your attempted solutions and explain the problems you are having, and then we can help.
Yes, and I think I didn't formulate my thought well. I didn't mean Python was not adapted (I'm using it for a medium-sized project myself), but that any Python technique that can make it hard to spot mistakes can backfire pretty easily.
nice pallettes but I don't see how this is 'vaporwave', and isnt vaporwave aesthetic just 90s aesthetic? maybe for it to be vaporwave you need to steal it from someone and then make some edits and create an anonymous github, right?
Writing comments on reddit takes very few minutes of my evening, and I can do it on mobile while watching Game of Thrones. Writing patches takes way longer even if we completely ignore me having to get familiar with the codebase etc. first. Not to mention following multiple mailing lists and participating in the discussions. So yes, you are right here: &gt; time to moan like hell but no time to write code, and no time to take part in the discussions on python-ideas and then later python-dev I do have 10 minutes of extra time, but I don't have many hours.
Tkinter! With TKK! *Said noone ever*
I knew r/python can be harsh, but DAMN! It’s an entertaining read, though. I especially like the guy who goes on about the toyota equivalence, going from “but python is free” to “nothing is free” and then back to “python is free” in the very next sentence. Good on you for actually attempting to discuss putting gon in r/Python , u/mafibar!
How about a "Wine/Not-wine" app, in case some shady establishment is trying to pass grape juice and vodka off as merlot?
Thanks! What is `validators` in your code snippet? If it's a module I don't think you'll be able to iterate over it with `map` like you're doing. I don't have any major features planned at this point, I think what the project needs most right now is documentation and some real world testing. If you want to try it out and see if you can break it, that'd be great! 
Hey! I know that dataset! We used it in my neural networks course at university to classify the grape iirc...
As I was watching, I was picturing the guy who gave the 'Stop Writing Classes' talk banging his head against a wall.
So stop bloody moaning, or are you expecting other volunteers to give up their lives entirely just so they can provide something for you for nothing?
Dash is really new but looks very promising https://plot.ly/products/dash/
Taking data from excel and txt files and uploading into Tableau
Oh nice, I'd not seen this one before. 
Check out /r/learnpython
I have never seen their branding in anything I did with their software over the past ten years. You just need to use the open source version.
stdlib contains an entire csv module, is it wrong for numpy (**not** a core library) to reimplement that? Or Pandas? " 2" is not a valid float64, it should be properly converted. &gt; Furthermore, your solution creates two separate arrays, which is not what he asked for. Arrays are accessed rowwise. If you mix dtypes along a row, numpy has to do type conversion on the underlying C buffer with each access (since a row is much shorter than a page of memory) and may perform even more slowly than just having a list of ints (or floats) and a list of strings. Furthermore, even for the int (or float) portion it cannot take advantage of SIMD, so the other performance benefit is also lost. Two numpy vectors, each of cohesive type, is *far* more performant, as I said in my comment, unless you need to access "elements" (rows of the CSV,) in which case something like namedtuples are the real answer.
This is amazing - if I had never programmed and wanted to start, this would get me started for sure. One note though, when you say you're using python you may want to add something about the version you're using and maybe direct them to an install instruction video or something
Yeah just a random fast example of the first use case I thought.. just pseudocode ;) I'll certainly try your module in my next projects, I'll let you know if something breaks!
This was about picture quality. If you did notice that, I agree - multiple types of instruction are necessary. If you did not notice that, I'm not saying this to troll or be rude or anything so there no malice intended, but you may wish to check your device's display is correctly configured, or visit an optometrist.
Thanks! It really feels great to hear that. And you're right about that, I'll probably put that information in the description.
Still requires a PRO Zerynth vm right? 
!redditsilver
[**Here's your Reddit Silver, ElBidoule!**](http://i.imgur.com/x0jw93q.png "Reddit Silver") /u/ElBidoule has received silver 1 time. (given by /u/it_burns_when_i_quiz) __[info](http://reddit.com/r/RedditSilverRobot)__
I'm definitely interested in this. Can I ask, will there be any sections about exporting data from PDF files to other formats like .xls or similar formats?
You should probably exclude all English stop words. 
A program to find the quickest train route in London between two stations. No live updates though :).
Maybe something for a cross platform autohotkeys or game dev of some sort?
I do plan to have a section of some sort that will cover PDFMiner (https://github.com/euske/pdfminer), although I probably won't go into that in-depth. I know you can use that package for exporting the text and what-not to some degree. However I think that makes for a good idea for a stretch goal. I hope that answers your question. 
It's work-able, but it's far from the best. It's pretty limiting on what you can do. It's not super intuitive or easy. 
But if it gets the job done, it gets the job done. I have a production ERP in Tkinter that is compiled to a single .exe and distributed to Windows clients with no Python installed locally. Works well and does the job. Much lighter weight than even the Qt libraries. Tkinter does have some warts. However, compiling other GUI libraries didn't work as well.
&gt; https://plot.ly/products/dash/ did you see the price tag on this sucka --- hells no
In the time you took moaning and groaning about how awful core devs are in this thread, you could have sent a message to python-dev and gotten the ball rolling on your simple and proper fix. 
 regex = re.compile(r'(?P&lt;name&gt;[A-z0-9 ']+?)(?: CR )?(?P&lt;cr&gt;(?&lt;= CR )[0-9]+)?$') That seems to work for me. The problem is that lookarounds don't actually advance the Regex engine's place in the string that it's scanning. You probably want to explicitly capture 'CR' if it exists. Proof: https://regex101.com/r/Ebx8KA/1
Yes, it does. Thanks!
javascript
That was the version I used. I certainly didn't pay for it :-P
Did you use a library to create the chart? Looking for some good / easy to use charting libraries.
That is bizarre. I have always used `pip install reportlab` which pulls down the open source version from PyPI. I think the only way for you to see their branding is if you get a trial of ReportLab PLUS. 
This looks interesting. 
I've been following the python mailing lists, especially python-dev, for a year or so now. My impression is that the core devs mostly only accept code into the stdlib that people are actively using and think would be a useful addition. Basically, it looks like the workflow is supposed to be: 1) Create a python module. 2) People use the module often. 3) Someone proposes that it be added to the stdlib. 4) A lot of discussion, and potentially an addition to the language. No where in there is "Figure out how people might use this feature for something they haven't been using it for yet." Instead, the core devs leave that up to the module/community. I believe their philosophy is that if people aren't using it, it shouldn't be considered to be added to the stdlib.
&gt; stdlib contains an entire csv module, is it wrong for numpy (not a core library) to reimplement that? Or Pandas? They significantly expand what the csv module does. Your code significantly reduces it. To wit, you don't handle headers, footers, comments, missing data. Interesting we both have a 'bug'. I didn't notice that your code is correctly converting the " 2" to a float 64. My bad. You didn't take into account that he is reading a file with more than 2 columns, so your code will raise an exception. You don't take into account the file might contain " Sunny, 20" and then "Sunny, 30"on a different line. Presumably Sunny is being used as a discrete data sample for sklearn, and the two will convert to different values. All of these features are already built into genfromtxt, though of course you have to parameterize the call correctly. Everybody I know uses these functions to read data prior to calling into sklearn. Your comments about performance may or may not be relevant to the OP; he may need an n-dimensional array to pass into sklearn, or perhaps your organization. But that almost never will matter in practice - you can always extract a 1d ndarray if you need it. I'm sure you can construct a counter example, but in general reading data is a tiny amount of total run time compared to running a learning algorithm. OTOH, if he is going to be doing data science (implied since he is trying to learn sklearn) he really needs to understand the interface to the csv reading functions. I think it is a bad idea to suggest writing ad hoc parsing routines when the built in routines (yes, built into numpy and pandas, let's not continue the semantics argument) when those routines are debugged, flexible, and very fast compared to hand written parsing code. 
This even has a nice outrun look in some places
not OP, but I've used plotly before and liked it.
Hi, at the moment FOTA is still a PRO feature but you can try Zerynth Studio PRO for free for a month. Anyway, the [others AWS libraries](https://docs.zerynth.com/latest/o_aws.html) can be used for free. For example, this [video tutorial](https://www.youtube.com/watch?v=IZzZF3DGWkY) shows how to connect an ESP32 DevKitC to AWS IoT platform and start publishing at a default period, waiting for period updates requested as changes to things' shadow. 
looks like a excel chart to me, or at least a library that imitates excel's chart design.
Just curious, why do you want to use VS?
Setup hotkeys for your application.
Why are you trying to run it from PHP? Why not use a Python web framework?
I like my URLs to guide me through servers in Mother Russia so she makes sure I get to my destination safely. 
What about a?
Something like Flask + gunicorn + Nginx will likely be as efficient, if not _more_ efficient, than Apache + PHP.
here is some example code I just wrote in pseudocode form) data = np.genfromtxt(...) ay = data['ay'] # extract a float 1d array from it by = np.array([float(i) for i in range(len(ay))]) timeit np.sum(ay) timeit np.sum(by) The former is an order of magnitude slower (as you would have predicted). If you change the assignment to ay = a['y'].copy() then both run in roughly the same time. FWIW, np.array_equal(ay, by) returns true for my data; I'm trying to compare apples to apples here. Of course that copy takes time, but it is a tiny cost, and I would suggest (without profiling) that genfromtxt + the copy is faster than hand written parsing code. 
8 sw movies + rogue One (Just noting for the fainted hearts)
Do you mean like globs and regular expressions? Because that's not what pattern matching means in this context. Picture tuple-unpacking, but applied to arbitrary classes. Something like (invented syntax): user = User(username='jcdyer3', email='jcdyer3@example.com', permissions=['admin']) User(username, permissions) = user assert username == 'jcdyer3' &amp;&amp; permissions[0] == 'admin'
Some people like it. Therefore nobody dislikes it.
Another correct answer. 
Just that simple little edge case where you want to charge some money for something you make... no big deal. /s
Rogue one
pyplot is good for mathy stuff
Man I dislike Tkinter so much...
Well if you have money and want the best tool do you expect it to be free?
&gt; This library was built with the goal of powering the Gameplay Recording feature in the Serpent.AI Framework where keyboard &amp; mouse inputs are collected alongside frame sequences to build machine learning datasets. 2nd paragraph in the README ^ 
&gt; another good thing for developers to have in their toolkit is the ability to express what they need in the correct terms for a search engine That's very valid, so thank you. I need to read up on how search engine algorithms work so I know how to shape the results I get.
Don't forget to add the other framework Ultimaker created in order to create Cura ... [Uranium.](https://github.com/Ultimaker/Uranium) 
The algorithm guides look amazing. Great stuff!
Haha it is a pretty shitty name. In all honesty, I got a lot of "OMG Keylogger" while I was working on it and I just played on that with the name (great humor, I know). If it dissuades people from using it or considering it ¯\\_(ツ)_/¯ I had a use case for it, what was out there was kind of a mess and I learned a ton from making this work so I thought I'd share.
Yeah, that's what I meant. Dataclasses - while nice - are an ugly hack to get simple structs into the language. 
This, really. The last time I felt like making an attractive, modern GUI for a python app the only solution I found was Electron and other similar frameworks. Hardly an elegant or efficient solution to what should be a trivial matter. 
If this is on a *nix system, you'll want to check/set the umask, and permissions of the directory that these images are being saved to.
I use PyQt5. You can download a wheel that always comes with the latest Qt5. You can use CSS to theme it well, and it supports HiDPI scaling. The trade off is the whole package is 100 MB, but it is still not a big problem in contrast with Electron-based apps.
I love the CSS styling of Qt. I wrote some CSS and got [this](https://imgur.com/fjKKzXK).
Global hotkeys for custom actions 
I used [the NLTK list](https://pythonspot.com/nltk-stop-words/) as a base and then tweak to fit the usecase.
Rogue One didn't have an opening crawl.
Hey! Circling to this a bit late, but I have a problem in which I want to load a profile HMM created by HMMER, sample a random path, and then do some operations on the path, all in Python, and pomegranate seems to be a perfect fit. Does pomegranate support loading HMMER3-format profile HMMs? Or is there a clean way to convert from HMMER3-format to the serialized HMM format pomegranate can read?
You don't really need any licensing expert for that, you *just* need $1-3k USD / developer.
Or you don't need extra features like a tray icon.
the problem with that though is that it's usually slower than a native gui, see pgadmin 4 compared to 3
I think OP is referring to Rogue One, but I'm like 99% sure there was no crawl in that movie. Might explain why there are no words that appear in 9 movies. I did a quick Google search and saw that there was a crawl that was cut from the theatrical release. Also it looks like there are a bunch of fan-made crawls around the web.
No, I mean python libraries that are online and do pattern matching, e.g. [pypatt](http://www.grantjenks.com/docs/pypatt-python-pattern-matching/) or [macropy](https://github.com/lihaoyi/macropy).
Thanks!
You could use the tool on the page I linked to create variants that are perceptually uniform!
Thank you for the criticism! I will try to make sure that my concepts are sound before producing my videos!
It only costs for enterprise afaik. Open-source and personal use is free from what I can see.
https://i.imgur.com/T4TEOWj.png https://www.wordclouds.com/
So, did you have the script read the crawl visually or did you have it read a text file? If you had the script read the file visually I would very much like to chat with you about that.
It was eight text files then merged into list and then does a word count and adds the number value of each word into a dictionary. Then outputted to a CSV file.
PyQt4 is deprecated and many packages are starting to drop support for it. PySide is PyQt4, but worse and also deprecated in favor of PySide2. Tk is just ugly. I'd go with PyQt5 if you're open source, PySide2 if you're unwilling to pay the ~$250/year/app cost for PyQt5 and wxPython if you just don't want to deal with any license issues at the cost of having a not-developer friendly GUI language.
Same
&gt; Tkinter has the advantage of being part of the standard library. That is not included by default on Linux. Most people do have it though.
&gt; But if it gets the job done, it gets the job done. But so does PyQt at much less developer pain, while looking much better. You could say the same thing about wxPython as you can say about PyQt, even though it's worse than PyQt. &gt; I have a production ERP in Tkinter that is compiled to a single .exe and distributed to Windows clients with no Python installed locally. That's not at all unique to Tkinter. That's what you should be doing with any program.
Howdy. Unfortunately pomegranate does not currently support reading in HMMER3-format files, or have a utility to convert to pomegranate's serialization format. It doesn't seem like it'd be too difficult to do if you'd like to take a stab at implementing it, though.
There aren't any. Consider creating a web app and running it locally.
Just untrack your pictures from git and use a different approach to deploy them?
YOu can do it with something like this: from collections import Counter special_signs = [",", ".", ":", ";", "'", '"'] for item in special_signs: whole_text = whole_text.replace(item, "") final_dict = Counter(whole_text.lower().split(" ")) whole_text is the text from all the crawls combined in one big string.
Sure. I suppose you could equally say 3.4 as there were no significant features added there. But 3.3 has `yield from` which is useful but without async which I've found to be really messy and hard to work with. Do you think it should be earlier or later or what?
It's MIT licensed, which means as long as you can figure out how to build it, you're fine. 
That... works. Defining a visitor-style interface for each sub-type also kind of works. But using it is not great, especially if the case-by-case code is morally only *part* of a function and not a whole function itself. You either have to remove the code to a helper function, which can be harder to read, or use a bunch of locally-defined functions, which is also pretty hard to read. These problems are exacerbated when the value you want to examine by case contains other, nested values you want to examine by case.
OK. Gets the job down with zero extra install than Python. I tried to compile PyQt. PyInstaller choked on it. I didn't have time to figure it out. I just made it work.
I honestly think the features added in Python 3.5 and 3.6 are pretty fantastic, and having attrs in the stdlib with 3.7 as well as the new breakpoint keyword and things like the async context manager decorator being added in contextlib are going to be really solid additions. I personally really like where the language is headed, honestly, even if it isn't perfect.
Excluding "the" and "has", but not "a"? 
Rogue One didn't have a title crawl.
Well I disagree. :-) That isn't to say I think async or typing is bad, but that the devs need to slow down and get it to work better before they make it a standard. My biggest complaint with async is that it doesn't make decisions. You can use whatever event loop you want... whatever executor you want. Core functions that read or write files are not asynchronous... so you have a framework, and then you have to fill in all the holes to actually make it work. I see little benefit in that over just writing multi-threaded code or coroutines. Similarly typing had been out for a while but I don't think mypy has full support for 3.5 yet. Given time to mature these would be good, but adding them to the language limits that.
Aren't you hamstrung with browser security though? If you want to access anything other than LocalStorage then you have a constant fight on your hands. Browsers are a constantly shifting target.
its mit licensed
I have not seen it yet, but that's some grade a heresy right there for a star wars prequel 
I code about 8 hours a day at work (almost no meetings)... Seems to be doing the trick :) Though, my Gitlab repo has suffered.
[What?!?](https://i.redd.it/zmhjyzs09evz.png) 
Great, I'd love to add it in.
You mean newbies have to install tkinter to get IDLE, yuck?
Why would you even want IDLE? You get Spyder (written in PyQt) with Anaconda. As a bonus, the library qtpy is compatible with PyQt4, PyQt5, PySide, and PySide2. You can thank Spyder for that.
You generally need to know to how interact with a database, so SQL and various NoSQL experience is good You generally need to know how to present data to a user, and that's often done via a browser, so knowing html, css, js, and various frameworks is useful You generally need some understanding of how the various components of an OS, a machine and a network work in order to use resources somewhat efficiently, debug problems that may lie outside your code, and to understand bottlenecks and how to scale your app etcetera. 
The answer depends on the end goal. E.g., if you want to be a full-stack web developer, you should learn HTML, javascript, CSS (or SASS/SCSS/LESS), some web development frameworks (e.g., flask/django), templating langauge, networking (OSI model, TCP, HTTP, etc.), etc. Or if you want to do scientific data analysis, you should learn libraries like pandas, scipy/numpy, matplotlib, tensorflow, keras, etc, and additionally learn subjects like algorithms, machine learning (various supervised/unsupervised techniques like regression, SVMs, kNN, PCA, ICA), linear algebra, convolutions, neural nets/deep learning, ReLUs, CNNs, DBNs, computer vision, etc., as well as follow up on recent papers. Or if you want to make fancy 3-d video games or an operating system or embedded programming, you have to learn a language that comes with less overhead by default that's traditionally something like C or C++ (though also possible to do in a language like D or rust).
Because the program I am signed in is teaching python 2! They said that the differnces Between 2 and 3 arnt huge!
I don't understand what to conclude.
I can has wordcloud! * https://instagram.com/putln2 * https://github.com/amueller/word_cloud
if you're making a desktop app, then pyqt
No offence to OP but this should go into r/dataisugly because that's an ugly graph with not much info.
Here's a sneak peek of /r/dataisugly using the [top posts](https://np.reddit.com/r/dataisugly/top/?sort=top&amp;t=year) of the year! \#1: [Accurate](https://i.redd.it/9fxvy22dypsy.jpg) | [48 comments](https://np.reddit.com/r/dataisugly/comments/66i283/accurate/) \#2: [I present to you the printed press in Britain](https://i.redd.it/w5kjne5dvk3z.jpg) | [16 comments](https://np.reddit.com/r/dataisugly/comments/6h6cr9/i_present_to_you_the_printed_press_in_britain/) \#3: [This is why surveys don't use write-ins (from r/nintendoswitch)](https://i.redd.it/5mtmp3je4oiz.png) | [55 comments](https://np.reddit.com/r/dataisugly/comments/6wqste/this_is_why_surveys_dont_use_writeins_from/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
[Godot 3.0](https://godotengine.org/) has just been released. Its scripting language is kind of similar to Python (there are some differences) and a Python plug-in is currently in the works. The engine is pretty lightweight and easy to use and has a completely new, modern 3D rendering engine now. It was already a great engine for 2D games.
Hi! Just wanted to say thank you. I've been working os something-like-a-game for the past couple months and learning opengl along the way with pyglet only. You code has been very helpful in understanding framebuffer objects and I'll certainly check out what other nice things you've done there :-)
He doesn't need to submit a patch to contribute. He can just join the discussion and offer a use case. Most of the people in the discussions are not core developers. The Python lists are not half full of people who would just dismiss any criticism with, "Submit a patch." Only about a third of the responses are like that. Your input will be appreciated. On the other hand, if you say that you just don't have time to participate, you can expect nothing less than your voice being ignored.
try using visual studio code
I had the same feeling. I knew that "Luke" wouldn't have been mentioned in more than 6 movies, since he wasn't even a character in any of the prequels.
I'd be more than happy to help if you pay me. Otherwise, it's worth my time to help you learn because then hopefully you'll pass your knowledge on. Doing your homework/job doesn't fulfill me.
FYI, you should use `platform.python_compiler`, which is MSVC2015 for Python 3.6.
Thanks for the Seaborn suggestion! I'll have to try it out
Thanks for sharing. I'm a Udemy instructor and hate these affiliate posts, makes the instructors seem shady when its really this weird network of affiliate spammers. Also I saw in a previous post in your history complaining about a copycat course of your material on Udemy, if you haven't done so already you should report him at https://copyright.udemy.com/hc/en-us I've actually already reported this guy in the past, but then he deleted his account and popped up with another one. But if you submit a copyright claim against him Udemy will start banning the IP addresses he uses, especially if he's been flagged before.
I've seen feather mentioned about the place, but only now had a reason to look into it. The first question I had was, what is different between it and Parquet? Wes McKinney very helpfully describes the distinction between feather and parquet in the link. Thought it might be helpful/interesting to some here.
You can also try something like ... pip uninstall $(pip list|egrep -v 'pip) Or for z in (pip list|egrep -v 'pip); do pip uninstall $z;done Then learn how to use `virtualenv` and avoid the drama
They say .. in a galaxy far far away... everytime. So its a 9.
They're not teaching a package, they're teaching Python, I've all ready explained why.
There's some confusion here between submitting patches and expressing concerns with design decisions. [PEP 557](https://www.python.org/dev/peps/pep-0557/) was a proposal by Eric Smith, and it was discussed on python-dev. Anyone could express concerns with the design when it was proposed to python-dev without being expected to implement those concerns. That was always going to be Eric Smith's job. Anyone can join the discussion; the quality of their discussion is what matters. That's why it's an open mailing list. Python could do it the Ruby way but very intentionally doesn't. 
Given that users of a language outnumber developers by a couple orders of magnitude or more, I don't think the python-dev approach would actually work. I suspect it's only working because users don't think they are supposed to participate, and don't generally have the time or motivation to do so (otherwise they probably would be developers) that it doesn't fall apart.
Hey just one more question if u don’t mind. I’m self taught and never have no one to talk to about code... so if u don’t mind,......in this case my variables are “a” &amp; “b” and my arguments are print and return??
You should try /r/learnpython Python doesn’t have a traditional compiler like C since it’s an interpreted language. Python is typically compiled to bytecode and then the interpreter executes the instructions. Cpython is the main implementation, but others exist like jython and ironpython. Stick with python.org version 3.6 unless you have an incredibly compelling reason not to.
Most people (myself included) don't have the time or motivation to contribute, that's the problem Python faces, not the hypothetical of the core team being overwhelmed with outside input. I do follow python-dev and there are a handful of the same core developers who drive most of the discussion, but when a random person contributes they aren't ignored. Often people stumble into python-dev with questions that aren't really meant for that list and they're still helpfully pointed in the right direction. Too many people contributing would be a nice problem to have to solve. Python pretty obviously encourages contributors: https://devguide.python.org/
I'm interested! However, I'm a beginner to Python so I don't know quite as much. I'm trying to learn in an actual project-type environment. Would you be interested in hiring me for this?
Yeah, open file run it through Counter and dump it into a plot. 4 lines of code, 2 are for import and one is a context manager. I don't see the point of posting this.
This is my second day on Reddit, what’s a sidebar?
Shell can do it pretty quick. You'll probably want a sed in here to replace punctuation though. tr ' ' '\n' | sort | uniq -c
link directly to code here: https://github.com/drewrice2/simple_blockchain/blob/master/code/basic_blockchain.py
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [drewrice2/simple_blockchain/.../**basic_blockchain.py** (master → 803f9a3)](https://github.com/drewrice2/simple_blockchain/blob/803f9a30e6cde72af55a8c795f2753ba97493348/code/basic_blockchain.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dtg5gne.)
&gt; the official interpreter is the only one afaik Not even close to true: https://www.python.org/download/alternatives/
oh cool. i'll definitely be checking out pypy for speed. thanks!
Click the link /u/mudclub provided and read the right side of the web page, assuming you're using the website on a desktop/laptop.
Still not working, even if I do cd to the directory. ``` C:\WINDOWS\system32&gt;pip uninstall $(pip list|egrep -v 'pip) 'egrep' is not recognized as an internal or external command, operable program or batch file. C:\WINDOWS\system32&gt;cd C:\Users\fakeb\AppData\Local\Programs\Python\Python36-32 C:\Users\fakeb\AppData\Local\Programs\Python\Python36-32&gt;pip uninstall $(pip list|egrep -v 'pip) 'egrep' is not recognized as an internal or external command, operable program or batch file. C:\Users\fakeb\AppData\Local\Programs\Python\Python36-32&gt; ```
If the OP doesn't have xargs, $() won't help, c'mon man
I've been fucking off after plateauing a couple months ago. In order to refresh myself this week I've made an area calculator, a rock paper scissors game, a buzzword finder that searches through top news sites and finds all stories with certain keywords, and right now im working on a simulation game through pygame. I am actually stuck on setting timers with python... essentially once the players hunger reaches a certain level i want his health to decrease like Minecraft. The main clock runs fine until the players hunger hits that level then the whole thing messes up. It's very confusing. What would be the best way to do this? 
Even basic UI/UX principles and understanding process workflows are a quite important. Your code may be perfect, but if the application is unusable it is useless. I've encountered quite a lot of developers who had very good programming basis and knew all the right tools and techs but were still struggling to create anything actually useful on their own from start to finish.
Why are they called stop words?
For the usual data structures and algorithms that are taught, I'd go with [Data Structures and Algorithms in Java](https://www.amazon.com/Data-Structures-Algorithms-Java-2nd/dp/0672324539/ref=sr_1_1?ie=UTF8&amp;qid=1517289007&amp;sr=8-1&amp;keywords=data+structures+and+algorithms+in+java). All of the examples are in Java, but you can always "translate" the examples into Python yourself. Also, the most important thing is that the principles taught here will apply in any language.
Can I rip you a new on about your title?
Woops. Didn't realize xargs existed outside of *nix
Thank you. I'll try it out.
only if you're a seven or above
So the term refers to words that provide no real value to understanding the contents of a document for an analysis like word frequency. /one examples being if, an, and, as, the, to. This is only my guess for the phrase, “stop words,” but I think it’s because you would have to “stop” your analysis to clean out the useless words when they come up. It’s handy to have a list of these words ready as an initial filter. There’s probably an actual reason for the term but that’s how I learned it.
Why not use virtualenv and ignore whatever you’ve installed? Alternatively, uninstall and reinstall Python. 
Because Star Wars is a hot reference man.
Try a different formatter. %H is for 24 hour clock format. %I is for 12-hour clock format. See the strftime() section of the datetime docs. https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior
Nobody cares though tbh
Which isn't in the crawl itself.
You spelled "stupid" wrong I think
You got downvoted, but I love it when this happens also.
That's great! Thank you for telling me! :-) 
Qt is LGPL, just like GTK. You can use it in commercial software so long as you dynamically link it, and don't distribute Qt with your software. If you're writing your software in Python, people 1. Need Python installed anyway to run it 2. Can trivially see your code, because the source code is what you distribute so there's no point worrying about Qt licensing, you can't make your software closed source anyway. 
Thanks! I am gonna research it now.
I might be interested, PM the details please
That exposition has loads of keywords that will come up a lot in the movies themselves 
ftfy: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
&gt; Can trivially see your code, because the source code is what you distribute &gt; you can't make your software closed source anyway That's not what closed source means. Closed source is where a third party is not *allowed* to use the source for their own purposes without permission. Something is open source when it has a license allowing reuse of source code, not when the source code is visible.
&gt; keep downvoting me all you want because I'm mean. Doesn't make my comment any less correct. Maybe it's incorrect to be mean?
That's about writing classes that are basically functions though. This is about classes as containers of data. 
is it cross platform
According to Google, one meaning is "not in accordance with fact; wrong". I guess you are thinking of that. But it also means "not in accordance with particular standards or rules" with synonyms like 'inappropriate', 'ill-judged' and 'unwarranted'.
Yep even available on phones 
Seriously dude? Not gonna give me any credit? https://www.reddit.com/r/dataisbeautiful/comments/7sh4mo/histogram_of_10_most_frequent_words_in_star_wars/?utm_source=reddit-android
The concept is the same, but this was made by own code in Python. The same way you copied the information from the opening crawls of the films which is the property of Lucasfilm. Which in turn now belongs to Disney.
I wouldn't bother with raw WSGI for this. Just take Flask if Django is too heavy.
Example code, any criticism is more than welcome. class StaticServer(object): allowed_methods = ["GET"] def __call__(self, environ, start_response, path=None): self.environ = environ self.start_response = start_response method = environ.get('REQUEST_METHOD') path = path or environ.get('PATH_INFO') params = self.get_params(environ.get('QUERY_STRING')) if method not in self.allowed_methods: return self.serve(code='405') if path in ["/"]: content, code, content_type = get_content(params.get('param')) return self.serve(content, code, content_type) else: return self.serve(code='404') def serve(self, content='', code='200', content_type='text/plain'): response = f'{code} {STATUS_CODES.get(code)}' if not content: content = response self.start_response(response, [('Content-Type', content_type)]) return iter([content.encode('utf-8')]) def get_params(self, query): params = {} for c in query.split('&amp;'): key, value = tuple(c.split('=', 1)) params[key] = value return params
In my last tutorial "Python Tutorial : Building - Guess My Fate Part 1", I wrote code that is inefficient. Who can point it out? I will be making a video explaining the inefficiency later on but who can find it?.
So what? Like, what are you worried about here? Performance? Flask would make your code way more maintainable and easier to extend should you ever need to.
I get your point really, and I know that it does not affects performance... It was more of an exercise to understand WSGI but now I'm wondering if I really need anything else more than what I wrote (see my comment). My question should be: are there cons to my approach (security for example) or I could be good with it? Thanks :)
If you don't consider future maintenance a "con" to your approach, then no, you should be good with it.
Thanks, I'll take it in consideration!
I found the new hope script online and replicated this idea for the whole movie. For "Characters with the most lines" 1 line = the entire line, so it could be a 5 minute monologue or it could be a single word. I'm too lazy to remove artifacts like "DARTH" and "VADER'S" having the same amount of lines but you get the general idea. [graph](https://i.imgur.com/yzWn5fC.jpg)
Awesome job man! You should post that up as your own separate reddit post for everyone to see.
You actually think you're in the right here? I don't care about Reddit points or any of that. I just think the internet would be a shitty place if everyone went around doing what you did. Why is it such a big deal to give credit? Python is open-source, that's irrelevant. The opening crawls aren't owned by me, that's irrelevant. Seriously, it's flattering that you were inspired by my post! But I cited my sources in my original post that you copied because that's the right thing to do. C'mon... Let's just be honest with ourselves here...
You might consider [falcon](https://falconframework.org/) if you wanted bare-bones.
Thank you very much!
I would say my productivity is better. I was referring to the difficulty or organizing and managing large codebases.
Nice, isn't it more REST api oriented though?
Wait how did you get the script?
There's contact information on pycon's website: https://us.pycon.org/2018/registration/ At the bottom: pycon-reg@python.org Would recommend going straight to the source first.
Any reason you don't want to just use Google Forms? 
They're on wookiepedia dot com.
Thanks guys, I must admit it got a little annoying and I got frustrated, but overall most people are really nice :)
Doesn't mean it wouldn't work for your application. Based on your requirements, you'd only need something like this: import falcon class Resource(object): def on_get(self, req, resp): resp.body = "whatever" api = application = falcon.API() route = Resource() api.add_route('/', route) Any non-defined methods return a 405 by default, and any non-mapped routes return a 404.
Oh, cool. I've been wanting to do two projects - one that reads the opening crawls from Stars Wars openings via video and another that harvests IP addresses on the screen from Mr. Robot. I haven't made progress on either, yet.
You have obviously never compiled Python to a single executable. It can be done and is done often.
Many of these aren't that good. Quite a few false positives for something advertising itself as giving you the top articles of the *year*.
I stated that I used numpy, nltk, and matplotlib, all of which are python libraries. You didn't even bother to change the color of the graph bars ffs. Your graph is essentially a lazy copy because you didn't bother to take common words out, which are useless data. Cited from PlagiarismToday: "Copyright is created in a work once it is fixed into a tangible medium of expression." According to Merriam-Webster, to plagiarize is to steal and pass off the ideas or words of another as one's own, and/or to use another's production without crediting the source. From Plagiarism.org: "Plagiarism is an act of fraud. It involves both stealing someone else's work and lying about it afterward." Simply incredible if you think this work is original.
&gt; `key, value = tuple(c.split('=', 1))` Calling `tuple()` isn't needed here, you can unpack from a list: `a, b = ["a", "b"]` But more importantly, you don't need to implement the parsing of URL parameters, there's a standard library module [urllib.parse](https://docs.python.org/3.5/library/urllib.parse.html) that will do it for you. (or `urlparse` in Python2) def get_params(self, query): params = urllib.parse.parse_qs(query) return params Just a difference, the values will be lists, but that covers the case of a parameter being defined multiple times: &gt;&gt;&gt; urllib.parse.parse_qs("foo=a&amp;bar=b&amp;bar=c") {'foo': ['a'], 'bar': ['b', 'c']}
Would the source data be screenshots where that data appears or screen or is it the entire movie file?
Pyside2 allows you to sell your program and supports everything(i think) in qt 5.11.
Dude....let it go already. You can't claim to own Star Wars and you don't own Python. You stated the libraries you used, guess what.......everyone else can use the same one. I never copied any code that made by you. You don't have a claim. You just want credit to boost your small ego.
Really missing the big picture here. So you're not going to contest that you plagiarized my work? Sounds good. Carry on ripping off what other people put on Reddit.
If you still have an issue, then bring it up with the admins. No lawyer will take your claim. 
Dude you ripped off Star Wars and you ripped off Python. It's open source for "everyone" to use.
Are you using a mobile app, or a browser?
The `get_params` stuff needs to be `urllib.parse.parse_qs` (or `parse_qsl`) Nit-picks: You don't need to extend object in python3 (i see your f-strings). Less lists and more tuples/sets? `if path in ["/"]:` is `if path == "/":` etc. 
Created an app to transcribe all of our call center audio prompts into a csv using speech recognizer library and Google Cloud Speech api.
Hey there, thanks for the feedback! I really appreciate it. Watching it again, I totally agree with you. There are more silly jokes than actual informative content. I don't think I'll make another one of these but your feedback can be applied to many other things in life, haha. Anyway, thank you very much, again, I seriously appreciate it. Have an excellent week! :)
Yeah I know, that would definitely works. If I'll ever need to put my project in production I'll probably choose falcon or some similar framework. Thank you!
Yes tuple is redundant, my bad. Thanks for reading through my code and for the urllib suggestion :)
Saying it's ok for scientific work is a bit of an understatement. It's built for that. 
So it's not just machine learning and blockchain articles?
use dicts to map input strings to functions and splat the args instead of using giant elif chains. ''.join(x[:3]) == 'abc' instead of of x[0] == 'a', x[1] == 'b', x[2] == 'c' (but ideally just split on whitespace and compare list elements instead). use with-as to deal with open file handles.
Sure, yes. What I'm saying is I recommend against using it for other purposes.
You too!
&gt; compiled If you're talking about things like PyInstaller or cx_freeze, these simply put your Python environment and code into a self-extracting archive. Anyone who wants to can trivially unpack this and look at your code. The same goes for Electron programs written in Javascript, by the way.
There isn't a whole lot of point making something closed source when the source is trivially visible. 
Learning Flask and periodically updating tools I wrote to help me do my job.
tl;dr: the interpreter might have some slower spots, but the more expensive thing is humans. Humans take time to understand stuff, and typing in Python is one of those ways to decrease the time to understanding for large organizations.
Mobile app
Something my first Head of Development said has stuck with me - tin (i.e. computer hardware) is cheap, dev time is expensive. Write the unit tests, bust the tech debt, almost always pick legibility over optimality. That said, he hated python (it was a java shop), although from his perspective it was for the same reasons - lack of type safety means some stuff is less clear and so on.
Converting a internal website at work from PHP to Flask. Data entry. Becoming a pain in the arso's to maintain. 
I should/will be doing that very thing as well. 
You're not making this easy to help you man. Provide as much information as you can in a reply. Which mobile app...? 
It's a good "how", but was hoping there would be a "why" (i.e. why use memcached over redis? From what I see, the latter has sprinted well beyond the former in the past year).
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
You haven't tried their virtual environments. They're so much better than just virtualenv. Anaconda is geared towards scientific applications, so use Miniconda. All of the nicities without the bloat.
OK, so why teach Tkinter? If you're going to teach a GUI programming package, you might as well teach one that companies/projects regularly use.
This is literally discussed every other day which is super ironic given that the choices available to program a GUI are extremely limited in both quantity and quality as they relate to Python. If you have been programming in python for a few years, you would already have discovered the bulk of GUI options. Furthermore, you will discover that they are all a kludge similar to packaging for different platforms. Here is a [search](https://www.reddit.com/r/Python/search?q=GUI&amp;restrict_sr=on&amp;sort=relevance&amp;t=all). 
Good question. It really depends on what are your needs related to caching. Redis offers way more data structures than memcached, so it can actually do way more than just caching. You can use it as a data store for all kind of workload. memcached has the advantage of being extremely simple, requires no configuration, tuning, or anything. But on the downside, it's really only meant to do simple byte caching and not advanced data structure manipulation. It's a matter of trade-off. :)
/r/learnpython
huh. Feels like overkill to me, it shows nicely what you have to do to get a lambda and some logging going the hard way. However nowadays nobody really calls lambdas directly and an API gateway or Firehose are pretty much always set up before them. Why didn't you simply use chalice to skip all the annoying setup with IAM and logging? Imho it doesn't get much simpler to launch a lambda from nothing and all it requires is like 10 lines code, then you have a template, an loadbalanced api and if you want even a database behind it where you can work from. I get that this is meant as a intro for total newbies, but honestly I always thought the "manual setup" part of AWS was the most annoying. Especially since you can automate all that stuff away with the cli-tool, boto and tools like chalice.
Inspired by https://github.com/providenz/freelance-django, a list of freelancers working in Python. Submit a PR to add yourself.
The Lambda isn't called directly, it's triggered by a specific CloudTrail event type. https://github.com/ServerlessOpsIO/serverless-aws-python3-intro/blob/master/serverless.yml#L28-L33 I didn't use chalice because I don't always write REST APIs behind APIG. Most of the nanoservices I write don't use APIG. Also I find Serverless Framework, in combination with its plugin ecosystem, gives me the best flexibility for building production systems. As for why I specify a complete IAM role, the reason is mentioned in the blog post and says that normally use the `provider.functions` section. In retrospect, I should have maybe used `provider.functions` and switched to the style I use in this blog post in a followup piece when I discuss nanoservices and monorepos.
Working on a music downloader, which can download audio or video based on your choice and can trim it as well. If anyone wants it, you can clone it. https://github.com/varunotelli/SongDownloader
Looks like the link is broken. 
1: /r/learnpython 2: read the sidebar 3: to answer your question: use it.
Personally I always start with something that I find useful - otherwise why bother in the first place. Anyway my first Python script (not counting "hello world") was a porn downloader.
If I've made anything in another language, I always write that in the language I'm trying to learn. If this is your first language, something like a todo app is good.
You can do that purely in Python. Knowledge about the Windows API, for Instance, is helpful though. 
1. Download your Google personal account usage history through the google webpage for that. 2. Parse the files in the history to extract data. 3. Use machine learning on the data to get something useful from it. Too tough for a beginner? Absolutely. But if you have that as an overall goal you'll learn a lot just from breaking the project down into smaller tasks and researching how to do those tasks. Or you can pick some other final goal that you think is really interesting but is too tough for you right now and do research on how to break that goal down into smaller tasks.
My brother wanted to make a text based adventure game, so I'm working ahead of him making some basic features for him such as a dialogue shell, inventory system, battle mechanics and a way to save and load the game. I'm actually having a lot of fun helping him with his project. It's been over 3 years now when I learned python in high school. I'm amazed by how well I've retained everything. 
pycharm community for non commercial work. it is called an IDE - integrated development environment. there is a bunch of free and FOSS ones out there. p.s. just use python3 :)
SHENANIGANS!!!! Nobody who would ever promote such a sensible attitude would ever be promoted to the head of development. The only way you get to be the head of a department is by cutting the tech budget to bare bones and introducing obstacles for your developers. I don't know why lies like this get upvotes on reddit.
He got hired a few weeks after I started and fired after about 6 months, and his next couple of roles have been stuff like "thought leader" and "head of organisational effectiveness". He was more about process than product.
There reason I ask is because I was looking into creating a GUI and it(the turorial) mentioned some lower level c/c++
This comment got me hooked on learning python :D
Python crash course book
Normally your script will have access to as much of your computer's resources as it can use. Why it's slow really depends on what you're doing.
It's not slow per se, I'm just looking at ways it can be faster. I've been focusing on the code itself but wondering if there's something I can do outside of the editor to increase performance.
That depends heavily on what sort of work you're doing. Have you profiled your code? Do you know what the slow parts are?
This is why I consider Typescript to be the most enjoyable web technology to work in. You can start off cheap and easy (no type annotations) and make it as dirty and barebones as regular Javascript, but when the project gets bigger, you have a very powerful type system to help you keep the complexity under control, complete with interfaces and all the OO. Combine this with an amazing IDE in Visual Studio Code, and my development experience is actually enjoyable rather than miserable like it normally is with Javascript or completely untyped (large) Python applications.
I would recommend an IDE called Geany. It’s great for beginners and reminded me of Codeblocks. I’m glad I found it - python command interface was wayyyyy too primitive.
I'm curious as to what type of tools you'd be talking about.
umm it is? Works for me, logged in or out...
Sounds good. As long as it is possible to do everything in python that's great. Thx for the help!
The main program that I've written for work ties together these features: * Calculating price, margin and depreciation. * Picking out serial numbers from text. * Picking out part numbers from text. * An interface to a Sqlite3 database to keep track of quotes, special bids, and deal registrations and when they expire. I have written separate applications that take CSV reports and make them into more attractive HTML reports. I started writing the software when I was starting with Python, so there's some really ugly old code in there that I need to update. I haven't yet learned a GUI library, and might just jump straight into web interfaces with Flask instead. Our workplace needs a platform for peer reviews of documents and quotes, that's a possible future project for me once I learn enough Flask. 
No, I'm not familiar with that term. How do you profile code?
Start [here](https://docs.python.org/3/library/profile.html) - this will tell you how much time your program spends in each function, and thus where the slowest parts are.
"I'm completely self taunt" - sounds like I don't have to make fun of you then. An important step to take will be setting up a github account and uploading some of your projects. Link your github to your Linkedin, and include it on your resume. For career advice in general, try looking for tech firms in the film world. You have subject matter expertise, connections, etc., which could be valuable for a startup operating in the space. 
Awesome, thanks
The Reddit app
The Official one
Here finishing the new rewrite of our mail services microframework https://github.com/daxslab/mailproc
I associate 'vaporwave' more strongly with particular colors than '90s', even though logically vaporwave does stem from the 90s.
There are a couple reasons including that a bit of software further down the line in the project doesn't like the way Google Forms/Google Drive handles image uploads. As well as needing some increased functionality in the form that Google Forms doesn't handle well.
Then you should probably have your own server collect data, even if it does forward to Google Sheets later. Otherwise you'd have to expose your spreadsheet to the app's users.
Link to app: http://moodswift.com This app suggests music for you based on your mood. The music choices are database entries, not ML. It is reusable so that a developer can create their own database entries and create a similar app to moodswift for other artist(s). 
Try Typeform, it's kind of Google forms with multiple layouts. 
You can do this with gns3. It's not really an ssh client, but a network diagram / simulator tool, that lets you ssh to devices. (they can be real devices)
I gave up on Bokeh a long time ago and have been very happy with plotly and dash. At the time Bokeh was just too hard to use and the documentation wasn't very good. Plotly has always been incredibly intuitive. 
Thanks man. Sadly the course I enrolled in is teaching in (and requires students to use) Python 2,7
Thanks man, appreciate it. &gt;python command interface was wayyyyy too primitive. Yeap.
Python is not a scripting language.
it is counting from 0 to the total number of items in the list. For each iteration, it takes the number it is on and looks in the list for the item in that position. It then checks to see if that number is equal to 10. It stops if the number equals 10. Check out /r/learnpython
You can specify the pattern used for newlines in the `open` function. open(file, newline='\n\r') https://docs.python.org/3/library/functions.html#open
Recompiling is very different. At the least you lose comments and often variable names. 
You can specify the pattern used for newlines in the `open` function. [`open(file, newline='\n\r')`](https://docs.python.org/3/library/functions.html#open) `csv` is also capable of reading multiple [dialects](https://docs.python.org/3/library/csv.html#csv.Dialect) so try those. [Sniffer](https://docs.python.org/3/library/csv.html#csv.Sniffer) might help too.
I've been using Dash for a few months and find it great to quickly get something up and running. Incredibly easy to get live updates and great visualisation. Bokeh was just frustrating when I tried it.
PHP is a backend language that generates html pages. Javascript is a frontend language (can also be used as backend with node) that runs in your browser. So the question is really do you want to convert something on the frontend or the backend. If backend you can just use python as is with something like flask or django. If it is frontend then python wasn't made to run in the browser. However there are things like https://www.transcrypt.org/ https://brython.info/static_doc/en/intro.html?lang=en 
Exactly, dig into the docs 
Some of the dodgiest systems run the financial industry. They are also very slow moving and only upgrade when required, in my experience at least.
Apart from the fact that the distinction between scripting language and programming language has become utterly meaningless, that is a useless answer to OPs question.
Oh neat. Thanks for that. But I gotta say, with [documentation like this](http://www.grantjenks.com/docs/pypatt-python-pattern-matching/), they're not going to get much adoption. Key quote: &gt; You can access documentation in the interpreter with Python’s built-in help function: &gt; &gt; &gt;&gt;&gt; from pypatt import match, bind, bound, like &gt; &gt;&gt;&gt; help(match) &gt; &gt; Tutorial &gt; &gt; Todo &gt; &gt; Examples. 
You really don't need a degree in CS or anything like that to work your way up in the tech industry. Recruiters and employers are much more interested in previous work experience and open source contributions. The hard part then is how to get your foot in the door. Do you have any connections or know anyone in tech? If so, you'll want to get in touch with them and ask if they know anyone around who's willing to hire someone new. Keep in mind that most people will not be offended or anything by you asking this - don't be shy. In fact, some might jump at the opportunity to land you an interview because many tech jobs offer referral bonuses. So yeah: set up a LinkedIn for yourself, set up a GitHub account, start uploading and making contributions so recruiters have something to look at, and then start messaging acquaintances to scout for opportunities. Your resume should just be simple and to-the-point; nothing fancy. Anyway, It's also important to know that's usually much easier to work your way up in the tech industry if you live in certain cities. There's more networking opportunities, and there's just a ton of nice tech jobs in these places that will require you to relocate (especially considering that you want to start as an intern or Jr. Dev). Be prepared for that. Once you do get a few options, keep in mind that opportunities to improve your position and "move up" will be a lot more frequent if you decide to work for smaller start-up sized tech businesses than if you decide to work at big corporations (excluding tech giants like Google, Amazon, etc). You might get a slightly smaller base salary at the smaller places, but you'll gain experience and better positions faster.
Wow, never met such a nice and welcoming community. Thank you guys!!!
I have changed the formatting parameters before, which are passed to the dialects object created for the reader. Unfortunately the module is hard-coded to detect `\r` or `\n` as escape characters ([source](https://github.com/python/cpython/blob/master/Modules/_csv.c#L646)). I may try forking this if all else fails.
Is it printing lots of text to the terminal? The terminal emulator could possibility be a bottle-neck. However, you should use a profiler like others said.
That was the simple fix I was looking for! Thank you so much! 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**_csv.c#L646** (master → 1e17d4a)](https://github.com/python/cpython/blob/1e17d4aaff5c7ca972bab437949d2bb51c5b30f7/Modules/_csv.c#L646) ---- 
I would recommend https://www.transcrypt.org/ There is even a demo on how to use and extend the already pretty useful react js framework: https://github.com/doconix/pyreact 
That makes sense. Thanks for your post. :)
&gt; source Are you using ML?
If stuff like this interests you, I definitely recommend checking out [The Hundred-Year Language](http://www.paulgraham.com/hundred.html) by Paul Graham from 2003. It takes a really deep look at this and was way ahead of its time.
This, together with the concept of hard links and the link()/unlink() system calls, is standard knowledge for any programmer with a basic grasp of how filesystems and their boundaries work on unix-like systems. Can't help but feel that making such an extensive blog post about something that's really mostly a "common gotcha" for beginning programmers is just looking for something to write about as self-promotion...
looks like python. Is all that normal in today's world. Just assume that everyone is a python fan? 
No problem! Yeah, Redis has really come a long way.
In a software shop, having those type suggestions and such can be massively time saving, so I'd say it's pretty justified not to want to use Python for large scale projects, maybe not so far as "hating" it though. 
macOS isn't a Linux distribution.
Yes, I have. And that is exactly why I recommend against using them unless you're doing statistics or science work.
I agree - my current shop's main output is a webapp with 65kloc of vanilla JavaScript, and it's... a challenge.
Not sure what you mean by you don't have to laugh at me, care to explain? I have Linkedin already, of course full of film stuff, I don't have github though, will sign up.
&gt; It does limit how high you can climb though, and programming jobs have a pretty wide spread in terms of compensation as well as the harshness of conditions. I would absolutely agree that a degree isn't a requirement for getting started, but it's needed for moving up. The lack of a CS degree does not limit on how high you can climb, and is not needed for moving up. Not at all. Maybe it might limit you if you're working in very CS-heavy areas like Data Engineering or AI, but for average developers working at tech companies degrees become almost entirely irrelevant once you get experience.
When you say 'image creation' do you mean a Docker container image or a picture?
Thanks for your opinion. I feel the same, I went to school to get into the film industry only to find out they value your talent much more then your degree. Wish I knew that before school but at least I know it now. I will try and meet people in the tech industry, see how much networking I can do. I live in Calgary Canada now and there is a lot of Oil and Gas companies here that I see advertising for Python jobs so I am aiming for that. I already have a LinkedIn but not a Github, will get that setup soon. What would you say knowledge wise is acceptable for Jr. Dev? Or is that really too broad a question and too situational?
There are projects like [Jiphy](https://github.com/timothycrosley/jiphy) you could look at, but if you want to become a "good" web developer, or at least a full-stack one, you should really just learn JS and a few frameworks that use it. I'm not sure there are any real-world applications or even jobs that would want to hire someone who only knows python and how to make python work with another language this way. tldr; this probably isn't something you should spend your time on.
I agree with what you are saying too. Infact I would love to go to school to further my education if the company was going to be paying my way through it. I just want to get my foot in the door and work for a bit first, partly I think to make sure this is indeed what I want to do as a career.
I know I needed unicode aware csv module and ucsv was the one at the time, but maybe https://pypi.python.org/pypi/csv23/0.1.1 would work you? 
Skype me cid-(-1469596499634124025)@outlook.com
Do you have a Skype 
Bottle may work well for this. Bottle is like Flask but a single file. I do not know how it compares feature to feature, but it certainly seems more lightweight.
What started this discussion (I don't know who said it) was Tkinter is better because it works with pyInstaller. I say fix the problem (which is easy to do) rather than rewriting your GUI unless your GUI is super simple and can be rewritten in an hour or so. Then someone (the same?, you?) said well Tkinter is easy to understand and as it comes with stock Python (it doesn't on Linux, but fine most classes teach to Windows). I say that's not a good reason to teach a package that's not popular. Someone else said, well it's hard to install. So use a pip/Anaconda, but some people just hate Anaconda I guess. Basically, I say just use a real GUI be it PyQt5 or PySide2 or heaven forbid WxPython. Don't use Tkinter...
ooooh man... hahaha *sigh* I feel dumb
Thanks for that, gives me a slight direction to head towards. I do know a few of things you mentioned but most I've only heard of. I'll put my nose to the grind on this, thanks again!!
Python has single dispatch and type hints now, but they're very optional and need an IDE that will pick up on them, as well as working on Python 3.
There must be a package for this but I don't know it. What I do know is that it's just a zip file. Change .docx to .zip and take a look. If that works for you then you can use Python's built-in (I think) zipfile.
I personally have been using bokeh and have liked it so far. I recall toying with plotly for some small thing that didn't work at the time due to a known bug but haven't had the time to revisit it.
Other Barry would like a word with you.
`rename` isn't implemented across devices because POSIX requires that rename is atomic. That is to say, the file name is changed instantly, and no time exists where both names are visible, and no time exists where the target name contains partial content. Within a filesystem this is simply a matter of tweaking the metadata for the target name to point to the same underlying [inode](http://www.linfo.org/inode.html), but between filesystems you can't do that because they are totally distinct buckets of content. A full copy from one place to the other is required. You can partially emulate an atomic rename by copying to a temporary name on the target filesystem then doing a local rename to its final location. It's not perfect though: it takes much longer, the temporary files are visible during the copy, and there is a gap where either both old and new names exist or neither old and new names exist (depending on the order in which you delete the old one after the copy). Since it cannot meet the guarantees that POSIX requires, the kernel does not do this for you.
You didn't understand. I know js and some frameworks and I'm not about js to python, I'm about something that can mix functional from different frameworks in one
When learning any new language I always start with a calculator app. It's great to add functionality as you learn more things! 
Thank you!
Thank you!
You could use the search bar. Anyway, the most advanced of all is Qt followed by PyGtk. Nowadays you can use html,css,js to make a UI with cefpython.
I don't think I ever claimed. SRSLY. I build kernels, I know of Mach/Darwin/XNU, etc.
I don't know what python version you are using, but try to open the file in binary mode: open ('filename', 'rb'). Some years ago I had the same problem as you and if memory doesn't fail me, opening the file in binary mode fixed it.
I did some research and found some promising info in regards to the document.xml file after you zip it. You can use regex to find specific patterns and also the python-docx module works with this. It can be found on github. No link unfortunately. On my phone.
gxti here has the best answer, but I'll answer practically: The destination has to be on the same filesystem, or you can't just move it. You have to copy it and delete one, which is what shutil does.
Maybe they would consider Python 3 now.
Yes, VBA isn't a bad idea. It's built into office but then your code would be built into the doc...maybe. Definitely worth looking into.
haha. my director of engineering did exactly that. D:
Then what the hell is your comment about?
Pandas? 
I'll look into it further. I think it would be a good idea.
Same. I've check in on Bokeh 2 or 3 times in the last few years, and can never get anywhere with it. I've successfully integrated Plotly into multiple projects.
Out of curiosity, do you know if VS Code is one of those IDEs?
If you're look barest of bare bones, implement something directly on top of werkzeug. It's actually quite a bit of fun once you figure out how the pieces snap together, you're also not as likely to really screw something up and improperly implement WSGI. I've also heard good things about WebOb but I've never messed with it myself. Now, if you want to implement a WSGI server yourself, I'd encourage that as well (I've made several runs at it, but I typically don't carry it beyond a Saturday afternoon) however I'd also encourage not running anything but toys on top of it and certainly not deploying it anywhere close to anything resembling a production environment. Mostly because WSGI is one of those "still waters run deep" protocols that has a lot of nuances that don't make sense but need to be observed otherwise you might have a technically functioning WSGI-like server but not one that actually implements the spec.
Not a clue, I use pycharm
I don’t get what you mean. Are you suggesting. Microservices architecture?
Made my own news summary dashboard for fun. Still lots to do though. http://justfireaway.pythonanywhere.com/
python-docx looks pretty thorough. Probably a better bet. Especially for a python god 😁
This is more appropriate for r/learnpython. The use of a variable named list is bad. This replaces the keyword list. I know the book has camel case, but proper Python style is underscore between words for methods. def print_table(table): sizes = [max([len(word) for word in row]) for row in table] transposed = list(map(list, zip(*table))) for row in transposed: cur_line = [word.rjust(sizes[i]) for i, word in enumerate(row)] print(' '.join(cur_line)) table_data = [['apples', 'oranges', 'cherries', 'banana'], ['Alice', 'Bob', 'Carol', 'David'], ['dogs', 'cats', 'moose', 'goose']] print_table(table_data) 
 def print_table(*, table): row_lengths = [max(len(col) for col in row) for row in table] for row in zip(*table): print(' '.join( f'{col:&gt;{val}}' for col, val in zip(row, row_lengths) )) if __name__ == '__main__': table_data = [['apples', 'oranges', 'cherries', 'banana'], ['Alice', 'Bob', 'Carol', 'David'], ['dogs', 'cats', 'moose', 'goose']] print_table(table=table_data) 
Working on an apartment finding bot for my gf. I finished writing python script to scrape data from a website and store in MongoDB. Now I need to make a telegram bot that can fetch data from the database and communicate with my gf!
Usually, big businesses look for people with degrees. But, smaller businesses are, from what I know, most of the time ready to pick someone who can show some skills, even without degrees. Best tip I could give you, try to teach some things you'd learn in college like design patterns, good coding practices, unit testing, maybe even continuous integration. My point is : Coding is easier, anyone can do it. Coding *well* is harder, and that is, IMO, what you need to get to. I don't want to say you don't code well, idk after all, but it's the "one" thing you won't learn by yourself if you don't search for it properly
Thanks
No problem! 
This is an issue with your system configuration. It could be the locale, or the particular font you're using for your terminal emulator.
I'm using Consolas as the font for the terminal. And in Notepad++, this font works fine for Japanese characters. 
Honestly, "translation" tools are usually bad. It would probably be better for you and your project to learn the language and do it yourself :)
I think you missed my point because I didn't state it clearly. Giving an opinion to an open source contributor is fine (although most are overwhelmed and it's probably making it harder on them), but to then complain about the contributor for asking for help is the problem. 
Regular old CPython installs into your user directory now.
How about just rolling your own? From your description this sounds line a couple of hours of work and you will be the master of your universe. Searching &amp; installing &amp; understanding &amp; verifying a dependency will likely take more than that. It'll definitely take you longer if you have to check several candidates. And, if you do run into problems later, your costs will grow very fast..
Two possible approaches: 1) Python + DBI (my preferred option). Untested example. (https://gist.github.com/anonymous/756b905111f5457a868a653594ef3a6a) 2) Use T-SQL (booo :-)) (https://docs.microsoft.com/en-us/sql/t-sql/statements/bulk-insert-transact-sql) 
Dash is amazing to use. Not quite as fully featured as Shiny yet, but it is catching up fast. Once we get file uploads and downloads in, I'll prpbably switch over to it.
Consider pywin32 and pythoncom. All the VBA "power" with Python goodness :-)
This and smack your IT department for me, that's ridiculous. 
Have you thought about staying within your original area of film/fx/post but in the areas of pipeline/tools? You may find your previous experience combined with code will get you quite far. I'm in Vancouver and my story is similar to yours (FX work to pipelines) -- it worked out well. If you trying to 'escape' the craziness of the hours -- I can understand, but your industry expertise may actually be added value to an employer as a tools/pipeline person. And Python is used all over in this industry. If you are lucky enough to be at a studio that values unit tests, code reviews, and new challenges -- hopefully you can catch up in other areas that you feel are more difficult. 
I'm a novice with python, but have managed to get a few things together for a grafana dashboard. Currently have Pi-Hole, some libvirt details, and mqtt info being logged to influxdb, then displayed on grafana.
I have been using python for random projects for a while now but have never played with any of those, but I guess that's the beauty of it, there's always something new to learn! I have heard of Pi-Hole, but nothing else, sounds interesting though, I'll have to check them out!
good idea
For the most part, syntax is the same - just use print("") instead of print "" and range() instead of xrange()
What do you mean by offline? Bokeh can run either with Bokeh server (which allows you to fetch new data or update it in Python) or without (but you won't be able to modify data unless you go into JavaScript)
[Upload has been released](https://github.com/plotly/dash-core-components/pull/73). Not sure about download but I think you could code one component for that
Wow, good work with your project. That's honestly nice to be honest, eventually i'll be at that level. But at the moment, i'm currently learning about dictionaries from the book 'Automate the boring stuff'.
Thanks! I am glad you think so haha.
You might want to look into Django - it's a web framework that's _really_ opinionated about project structure and contains tools to automate a lot of it, similarly to how Android does it.
I’ve recently made a piece of code that simulates “instant run-off” voting. So it ingests voters choices ordered from most liked to least liked, then it provides you with what thing won the vote. I host monthly movie nights with my friends and this has been a fun way for me to decide which movie wins each month :)
For scraping, I typically use beautiful soup, urllib, and requests. I would be curious what the book gets into though.
Awesome! I always wanted a solution for movie night with a bunch of friends haha. There are always too many opinions and yet not enough opinions at the same time. Is your code on github?
yeah, in the later chapters it mentions Beautiful Soup for web-scraping! I've still got a few chapters ahead. But what it does cover is: Pattern Matching Reading and Writing Files Organizing Files (Web Scraping) Working with Excel Spreadsheet (which i don't use) Hopefully when I reach and understand all that i'll be able to do the projects. IF you don't mind me asking, where have you been learning so far? like books, or tutorials ect.
I just google stuff for the most part hah. I have been learning programming on my own for about 15 years or so, so I am used to it at this point. I took a few courses in highschool and in college (after already knowing a decent amount from being self taught), but for the most part I have been just starting a project for something small using a new language or framework that I think is cool and go from there. Originally I would look at websites source in the browser, that's what got me interested in programming. I also work as a software engineer now, I went to school for Industrial Engineering (manufacturing) though, so definitely keep on learning!
I look forward to it, good luck.
There are some pretty quick 1 liners which will do what you want most of the time but I've found that a function it is better abstracted into a function to make sure all data is included in the column (whether there are gaps in it or not), that the different row capacity of different excel versions is taken into account and multi-line headers can be dealt with without hard coding. For example: def get_column_range_excluding_header(xl_worksheet, col, data_start_row): ''' xl_worksheet = an xlwings worksheet object e.g. xw.Book().sheets[0] col = string representing the column e.g. "A" data_start_row = an integer representing the first row number which is not 'header' e.g. 3 ''' full_col_range_str = "{col}:{col}".format(col,col) # Get the highest row index number in the xl_worksheet last_row_in_ws = xl_worksheet.range(full_col_range_str).last_cell.row # Get the row number which contains the last piece of data in the column last_row_in_ws_with_data = xl_worksheet.range( "{}{}".format(col,last_row_in_ws)).end('up').row # Create the range between data_start_row and the last_row_with_data column_range_excluding_header = xl_worksheet.range( "{}{}:{}{}".format(col,data_start_row, col,last_row_in_ws_with_data) ) # Job done return column_range_excluding_header 
this is cool
I have been working a similar project I'm doing a statistical analysis of Legend of Zelda speedruns. It involves downloading twitch broadcasts then using a scraper to calculate the time spent in each room during each run. I'm interested in knowing which rooms have the most potential for speed savings.
Great explanation, thank you! Never looked in werkzeug, I will for sure. As for the WSGI I think you're right, I realized that by the time I will cover every problem I will have a web framework as big as the others and not as well testes and implemented, better keep it a weekend/toy project. Thanks for the encouragement and all the tips!
Thanks!
Redis is my default choice between the two because it is very handy to have available in small/medium projects because it is so versatile and used by many different solutions. As cache, as custom data store, as a pubsub hub, as broker for tasks queues and all kinds of things like that.
Try random.sample
Very interesting! From the full video, how do you know where on the timeline each room is starting? Does twitch offer stuff for speedruns, or do you have to figure it our yourself?
This doesn't help you yet, but I'm writing a lightweight microframework where your usecase would look like: from rooibos import get @get def handler(ctx): return get_content(ctx.args.get('param'))
It sounds like you want to sample from a population, so use random.sample. p = [1, 2, 3, 4, 5, 6] # your population n = 3 # number of samples you want to take s = random.sample(p, n)
/r/learnpython Can't you remove the picked item from the list?
If language efficiency really really bothers you, try to fix english. invent a natural language and use it in house. someone like google has enough people that they can spread it to their start-ups when they leave, and it can grow from there.
Depends on what you are going to use it with. If your luck happens to betray you, and you need a binary Egg packaged for versions prior to 3.5, you might as well wait until maintainers rebuild that package with newer compiler. Beware that this is only the surface of the problem, because if you need a package that needs to compile on your computer, then you can be again, up for a surprise: 3.4 and 3.5 are compiled with different compilers, so if you happen to have one but not the other... tough luck!
Thanks mate for your reply. I will definetly check out Django. Can you recommend any good example of a django application on github? Like a state of the art example to have a good look how thinks work out on larger scale then a hello world tutorial?
[Wagtail](https://github.com/wagtail/wagtail) is probably the _biggest_ Django app, and the code is overall in a fairly good shape. That said, the recent Django 2.0 release shook things up a bit, and they are staying compatible with the previous releases, so a project started on 2.0 from scratch may be a bit cleaner.
This new dot-release is a distinction without difference. I, too, am unhappy that the time that could've been spent on more important things is wasted on features that don't really add anything new / don't improve anything. Python sucks in the department of its C API. It sucks at how it perceives objects. It sucks at utilization of parallelism of processor resources. Instead of working on solving these long-standing difficult issues, Python now comes up with useless syntactic "improvements" which mostly make it not backwards-compatible.
Who is complaining about the contributor?
/u/KimPeek was saying to change the newline option in the open() command to an empty string so that the file reading interface is not trying to parse the line endings prior to the csv module. Prior to Python 3 you could get past this by opening the file in binary mode but this is now the correct way. This is indeed what the csv module docs recommend specifically for csv files with multiline fields. For more info see the footnote there. https://docs.python.org/3/library/csv.html#csv.reader All that said, I second the vote for Pandas. 
I disagree. The guy is learning python and trying to focus on that. He asked for something easy and webdev has a lot of associated cruft regardless even if it's a minimalistic API like flask. He also mentioned high school level several times. Read it again. 
First, r/learnpython :) I feel it really should be a warning before posting here... Second, consider using: import filename filename.function() Instead of 'from' 'from' is good if you just need one or two functions from a module that won't pollute your namespace. And unless your main file is getting to unwieldy, there is not much reason to break everything out unless they will be used by different scripts and you want a bunch of common functions to share between.
Im working on networking automation through netmiko
IKR, they shoudl have that preinstalled if they dont allow them to install anything.
What is the method of the voters input?
PyQt with QML can do that fairly easily.
Interesting, I worked on a project that allows users to download subtitles from multiple providers, such as subscene, allsubdb (more to come), for media automatically which saves time especially when downloading subtitles for tv-series. It's a command-line application. It's hosted on github: https://github.com/RafayGhafoor/Subscene-Subtitle-Grabber Any suggestions are welcome. p.s. the development is paused as I have exams. 
Here's an [explanation](https://stackoverflow.com/questions/22741319/what-does-random-sample-method-in-python-do) of the random.sample() method.
Interesting, I worked on a project that allows users to download subtitles from multiple providers, such as subscene, allsubdb (more to come), for media automatically which saves time especially when downloading subtitles for tv-series. It's a command-line application. It's hosted on github: https://github.com/RafayGhafoor/Subscene-Subtitle-Grabber Any suggestions are welcome. p.s. the development is paused as I have exams. 
Well, I'm not familiar with .NET webforms, so I even can't imagine what it looks like and this is the reason why I've created this post
got it, thanks! I submitted my post over there. The main file does tend to become unwieldy, but another reason I prefer breaking the code into two files is to have a nice flow of thought on the main script and the dirty "under the bonnet" elsewhere.
content aggregation
Hey guys, I hope you like this. I love pythons 'turtle' library, as I feel it's a great way to learn program flow. I was inspired by the syntax and decided to recreate it, but this time apply the final output to a robot arm. Here's the code, if you're interested in using this software for your own arms: https://github.com/apockill/uArmTurtle [Link to the robot laser cutting](https://youtu.be/vhx0mEiuxdc?t=425)
Do I have to build it from the source? https://www.riverbankcomputing.com/software/pyqt/download I can't find the .exe anymore.
There are binary wheels [on PyPI](https://pypi.python.org/pypi/PyQt5).
Very nice man, very nice !!!!
Just checked this out, looks cool.
Oh, thank you very much! :)
Been working on a couple projects: -A program that compares insurance documents to information manually updated into a system for QC purposes -A program that automatically runs and sends reports out for my team to work on every day. -A program that automatically injects VBA code into all excel files in a directory, runs the VBA code, saves it, and then combined them all using Pandas.
You seemed to imply that I thought macOS was a Linux distribution. I know. It's a proprietary userland on top of the XNU kernel, which is a BSD4.3 and Mach Hybrid. Not the same kernel either. I know. Unless you meant something else by that comment, in which case you'll have to be more precise. You claim most people don't care about the Gtk/Qt UI consistency. Fine. Neither of us have numbers to back it up, so let's ignore that for now. Fine. But that's the current user base. What about incoming users to Linux? There probably are Windows and macOS users that will probably be anywhere between marginally and significantly put off by that. Don't you think that it's something that should be taken into consideration when writing a GUI? 
Nice and simple codes! Still wondering what's the use of the following: &gt; f'{col:&gt;{val}}' &gt; fmt(*row) &gt; f'{{:&gt;{max(len(col) for col in row)}}}' &gt; __name__ == '__main__'
Very nicely done. Thank you!
f strings are new in Python 3.6. I haven't been able to switch to them yet, as I still have a 3.4+ code base for many things.
is it available in book form?? i will be able to buy then and want it in book form
Have you downloaded the geckodriver webdriver? If so where did you put the files? It sounds like it could be in a file location that you don't have write access to. If you are using a virtual environment then put the geckodriver in there.
I did not like how commercial Plotly is. Maybe there is a way to hack it, but it seemed there was always a link to their commercial offers on the plot. A bunch of people seem to be hating on it, but I use Bokeh at the moment.
Interesting to know that you are a software developer even though you went to school for Manufacturing. Kudos!
That name...yeah I’m not adding a dependency that will get me written up by HR. 
This is useful, i'll have to try it out soon
This. Also, for other usages I also use sets to easily get intersections between lists and force deduplication.
spam
Regrettably I've come across umpteen similar situations in my many moons of using Python. However in defence of the community it must be said that the documentation budget isn't quite as high as (say) Oracle's or Microsoft's, yet they still manage to write some complete crap :-)
So I got bored this week and made a profram that tracks upcoming releases for curent-gen consoles and PC. It has a twtter at https://twitter.com/umbragametrack where it post the updates and has links to the Google calendars where it adds the events. If you tweet at the bot like @UmbraGameTrack GameName It should reply to you with the release date and a link to a calendar event. Was wondering if reddit thought this was useful or had any suggestions. 
In 2016...no. In 2018...yes.
So basically, you are scraping other people's content (however uninteresting their creative process might be), and uploading it to your Youtube channel which you (I'im guessing) want to monetize at some point? Nah, thats cool. &gt;.&lt;
I'm not great with Linux, on Windows I have a virtual environment in my user folder and then I have the geckodriver in the "scripts" folder of the python install there. Where is the log file writing to? It sounds like you may not have write access to it. Where is your python install?
Only a Python core developer who works (I think, too lazy to look) for Red Hat. His name appears quite frequently in the [PEP index](https://www.python.org/dev/peps/), with my favourites being 404, the Python 2.8 Un-release Schedule, and 401, the BDFL Retirement.
spam account to hide spam, this account always posts links to a tweet and then the tweet links to the website
how does dash differ from plotly? with dash can I get unbranded plots?
&gt; If language efficiency really really bothers you, try to fix english. There is nothing wrong with my native language that needs fixing. It's not my problem if silly foreigners have problems with it. Fancy not knowing that "quay" and "key" are pronounced in exactly the same way yet have completely different meanings, or that "ghoti" is the correct spelling of "fish". Of course I'm still not sure whether (weather?) it's weakly or strongly typed, or statically or dynamically typed, but what the heck :-)
The driver is trying to write to the log file: geckodriver.log But your user don't have permissions to write. It depends on your system config but in my machine, the log is created in the folder where the .py is located.
Most of this is over two years old though.
What I wanted to say, in fact, is that things like this were tried before, using back end code to write front end. It's pretty much always a disaster. You really should try to learn html/CSS/js :)
Good job man 
okay thank you :)
The log file is writing to my /home dir. And my python install is in /usr/bin. Ive tried moving the exec file to python scripts folder , deleting and redownloading .Still won't work , wish this thing could just talk . haha 
I can't help directly but how about this [Displaying Japanese in English Command prompt](https://social.technet.microsoft.com/Forums/en-US/728d6169-07fa-4e93-8a41-f9fa6dd8d9d9/displaying-japanese-in-english-command-prompt?forum=w7itprogeneral)?
Do projects and contribute to open source projects.
How though?
/r/surgetraderbot
The newest and most impressive is [AnPyLar](https://www.anpylar.com/)... built on top of Brython. 
Been using it for years, works great.
Find an open source project on github that you like, and look through the issues. If you think you can solve any of them, clone the repo, fix it, test it, and submit a pull request. Otherwise start your own prject doing something that you need/want, or you can attempt to recreate other common projects like chat apps or todo lists.
Needed a custom tool for alerting on RabbitMQ and queue processing speed because the tools we had didn't give us what we wanted. Ended up building a monitoring / alerting frame work that can have modules added to it.
Lets see your code...
Does your program also go through to find a still image of some boobs that you can use for your thumbnail like every other garbage twitch compilation? Or do you still have to do that part yourself?
Write code. You're going to have to figure out what code to write on your own, but as others have pointed out, contributing to open source is a popular option.
It's kind of funny that OP went through all the trouble of writing preprocessing scripts and looking for an alternative CSV library when the answer was to actually read the docs of the standard library module all along.
*content appropriation
Beside the APIs can you please share what python libraries you used for this project? thanks
Dash is a wrapper on plotly that provides a server and interactions between plots. To hide the plotly brand, you can use this custom CSS: `.modebar-btn--logo { display: none }`
In the context of this discussion the contributor (Eric Smith) is not making that request. The request is coming from the maintainer (Guido) or some other generic python developer. We aren't particularly impressed by dataclasses (vs other available implementations like attrs) and would rather see the product delayed than something sub-optimal be pushed out. Nobody is saying that Eric is bad or wrong for wanting help (if he had asked for it), but that we just don't think what he has done is ready or good enough.
I am currently working on a desktop built using Tkinter Framework 
Formatted for Reddit: def function2(x): if x &lt; 100: print("x is less than 100") return x ** 10 else: print("x is greater than or equal to 100") return x * 2 You need to indent the `return` statement and `else` clause. def function2(x): if x &lt; 100: print("x is less than 100") return x ** 10 else: print("x is greater than or equal to 100") return x * 2 
Your code formatted for Reddit: def function2(x): if x &lt; 100: print("x is less than 100") return x ** 10 else: print("x is greater than or equal to 100") return x * 2 You need to indent the `return` statement and `else` clause. def function2(x): if x &lt; 100: print("x is less than 100") return x ** 10 else: print("x is greater than or equal to 100") return x * 2
@KimPeek answered it. &gt;If you are about to ask a question, please consider r/learnpython or the learn python discord. 
While I agree that the premise is pretty tenuous, I think the actual implementation is pretty neat. So congrats! You made a cool thing, but don't be surprised if YouTube takes your channel offline :p Anywho, I just finished all the database stuff on my [Facebook/Reddit microintegration](https://github.com/wgeorgecook/reddit-facebook-integrator). It just takes my latest upvote and sends the content in a message to my buddy on Facebook. 
I think we agree more or less, and I may be carrying baggage from past experiences into this conversation. It bothers me when I see people giving their time for free to give other people thing for free, then every rando that hasn't given anything themselves expects more from the people truly giving without giving something themselves first. it takes no time or energy to through out an opinion, but it does take significant time and energy to give a thorough response. I think a lot of open source contributors are trying to create a filtering mechanism so that people have to invest some time and energy before the contributor spends time on it. Asking for a pull request is one way to do this. 
r/learnpython
I think I'd prefer to use altair or seaborn actually.
You say you have a question, where is it? 
Use the full path for the executable.
[removed]
Not a direct answer to your problem. But I often have luck with [apscheduler](https://apscheduler.readthedocs.io/en/latest/) for python-cron jobs. It is a python library so can pack with your python code without using linux cron. 
You can run a python script as a cron job. You just need to call python first so you should have it something like this: path/to/python path/to/script.py Second, (this is not the answer to your exact question, but this does fix your problem) one option is to just add this to your script: import os os.path.chdir('/home/pi/pythonprojects/pricechecker/') This will change your working directory allowing you to write to where you want to 
Its important to look at any exchange between users and devs from both perspectives. From the perspective of the dev they are absolutely within their rights to say "No I don't want to do that." They are volunteers. However from the perspective of the user, they aren't obligated either. So generally any kind of feature request should: 1. Be taken as a compliment. Someone sees your work as valuable and appreciates it enough to want to use it, and to go so far as to identify ways it could be even better. That should make the dev feel good, because why else did they publish the code except to be of use to others. 2. The response should be honest and if appropriate welcoming. It should generate an invitation to participate, but not a demand, if applicable. So you say either: a. I think that is a great idea, and would love to implement it someday, but I probably can't do that anytime soon, but I will add it to the milestones, and would love to accept a patch that implements the feature. b. I'm not sure how well that would work with my future development plans and goals, but would consider a patch. c. That would take the project in a different direction from my intent, so I can't recommend you continue to use my version if this is important to you. However since the code is open source you can fork it. The problem is "Submit a patch" isn't clear on that. Is it (a) or (b), or is it a passive-aggressive (c). In either case, do I really want to work with this guy? Do I want to use this software if I can't trust the developer. I understand everyone gets email overload, but in some cases silence, or a form letter response, might be the better course of action.
Funny you say that, I just moved from Vancouver and from a big studio that has a decent size pipeline team.. but yeah, I wanted to get away from the crazy hours as well there were other reasons for leaving too that made the move worth doing. I know it seems like I'm shooting myself in the foot, but in my situation with my values it's worth it. That being said I think you are right on the money, would have been the best move for me. Thanks for sharing your thoughts with me :-)
Hahaha that part is still manual if I wanted to do that, luckily youtube's algorithm to select a thumbnails often does that for me whether I like it or not.
[Hiring] Python Site Reliability Engineer / Devops at Divio If working with a sophisticated cloud environment spanning multiple service providers and using a range of technologies such as Python, Django, Docker and many others is what you’re aiming for​, then we’d be happy to welcome you to our team as ​full-time​ Python Site Reliability Engineer / DevOps for Divio's products​! https://djangojobs.net/jobs/741/python-site-reliability-engineer-devops-divio/ keywords: python,django,hiring,usa,newyork #devops
That's a good tip about the coding well part. Getting the job done through whatever means(copy/pasting code from around the interent) vs getting the job done well and future proof is another. My hope is that taking these online courses that I will pick up the right ways of going about things. I will keep your thoughts in mind. 
Youtube knows what the people want.
noob should learn to read the sidebar
I would recommend reading Clean Code, or something like that. It's a great book about coding practices
Here's a channel I also made with Python https://www.youtube.com/channel/UCjSxQ5ty-7okXnScIoCGTuQ/videos?view_as=subscriber I used Videogrep http://lav.io/2014/06/videogrep-automatic-supercuts-with-python/ to make the videos by looking for key words in the subtitle tracks of other videos.
I thought copying and pasting the imports would be easier, sorry if there are duplicates. import shutil import glob import base64 import json import os import datetime import requests as re import re as regex import logging import time import glob import os import json import subprocess import datetime import logging from datetime import timedelta import json import datetime import subprocess import glob import os import base64 import logging from datetime import timedelta from googleapiclient.discovery import build from google.oauth2 import service_account from googleapiclient.errors import HttpError from oauth2client.tools import argparser
Yea I am not exactly banking on this for retirement. It might be nice if I actually make some money on this but it was more just to see if I could do it.
He is saying pass the location to the csv as an argument to your python script. /home/pi/pythonprojects/pricechecker/main.py /path/to/csv Then in your script csv_path = sys.argv[1]
You pass the path as an argument, then use the argument as the param to open() (or whatever you're using). import sys with open(sys.argv[1]) as f: print f.read() Then you call this as "script.py /some/file/somewhere.txt" 
Well, I thought that if I can be sure that user is who he pretends to be, I can encrypt the database with some specific phrase for each user. Another option, maybe, each user saves it's own database in it's own home folder. Only accessible to himself. Python program is on a read-only share.
The second option is definitely better.
Try to get a as big as possible display, it should be at least 15 inch. It would be super hard so spend long hours with a very small display. 
noob shouldn't bother as they'll get sent to /r/learnpython where they could get poor or even plain downright wrong answers. There are other vastly superior resources.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
Please click on "formatting help" to find out how to make your code readable, thanks.
 This is mostly solved [here](https://stackoverflow.com/questions/4934806/how-can-i-find-scripts-directory-with-python) . Based on this, you can just take the directory of your script and change the working directory like I suggest above. Windows doesn't have cron, but you can check to see what OS the script is being run on. I would argue that keeping as much setting up inside the script (vs trying to set the path in cron) as possible to make it more portable if youre really worried about having to maybe change a line or two in the future.
Thanks, much appreciated!
Please use safety-glasses when working with lasers
If money is super tight and you have a display that accepts hdmi, a raspberry pi might solve your problem. It’s not portable but I hooked mine up to my tv and I use a Bluetooth keyboard so I can sit on the couch and code. Total cost was ~$50
But that shouldn't be a concern for a newcomer. So.. basically, any computer with an internet connection, keyboard, and mouse is enough :)
This. You don't want a path in your cron job.
Where I am currently staying at, I cant access youtube unfortunatley. Is there a way for me to see the code?
yes but he said learn python so I thought maybe not a programming newcomer haha? Actually few of my friends from C++/Java started learning machine learning python straight up with numpy, pandas, scikit learn so that's why it crossed my mind
It is the de-facto standard for most of Python programmers. 
yea I hope you make some money off this honestly. I think it has potential. Maybe try and make it look more friendly/marketable. good luck
If someone is getting 100 requests a day you’ve just imposed a large time commitment on the contributor but none on the part of the requester. That imbalance isn’t sustainable. 
Ah, though it's entirely acceptable to include PATH or other envars because cron doesn't include all of them. Many applications rely on envars for configuration.
A lot of my bash scripts start with this: cd "$(dirname "$0")" It changes directory to the directory of the script file.
For sure, here's the link: https://github.com/apockill/uArmTurtle It lacks a bit of documentation, but once you run main.py it's fairly straightforward.
Probably better to include those in a shell script whenever possible
Yep what the other guy said, just use `print('hi')` in 2.7 and your code will probably work on 3. And then never use 2.7 (legacy python) as soon as the course is over. Also pycharm rocks.
My favorite TV show of all times: Miami Vice ... so I love this!
I'm sorry, but this is really bad advice. Sure an RPi will *kinda* work, but not well, especially for research and editing.
Almost done. What do you need help with?
First, that's very cool! Second, a word about safety. Commercial laser cutters and engravers are designed such that the laser is always close to the material, and fixed pointing in the down position. What you have there is a laser powerful enough to blind someone, attached to an arm that can swing to point it in almost any direction. Very cool, but also potentially very dangerous. Just keep in mind that it could only take one minor programming mistake as you develop your code to have the arm swing around and blind you. At the very least, get some safety goggles that are rated for that wavelength (more than one pair if you're going to be showing it to anyone else). I've built my own 40W laser cutter/engraver, and I used to work for a company that made stupidly large &amp; powerful cutting lasers, and many of my co-workers had lost some or all vision in some part of an eye from just such one-time mistakes.
Not for me thank you. If I have to reach for the SHIFT key I'll do so to use an uppercase letter, not an extra underscore, as I only write code for my own consumption. However in a working environment with other people, whether paid or open source, I'd use whatever the standard was.
Thanks for the advice! Just for some background information, the laser is 500mw, and the robot arm can only point downwards. That's not to say it's not dangerous (clearly it can cut paper, and would blind me if properly focused on my eyes!), but that's my justification for using it indoors without seemingly many safety precautions. As far as safety goggles... Definitely worth buying. I had to avert when running it, which really isn't exactly a good idea. 
Great stuff. The "sports" and "environment" sections are throwing 500's though! 
Depending on how your python was built, you may need to set LD_LIBRARY_PATH to your $PYTHONHOME/lib Otherwise you may get errors like: error while loading shared libraries: libpython3.6m.so.1.0: cannot open shared object file
That is great. You will find as you work with open source and most companies in Python, the standard will be a very slightly looser version of PEP8.
Ok man, please notice the parts where I said, “IF” money is tight, and “MIGHT” solve your problem. Almost like I knew the exact things you’re saying, but wanted to let OP know there is an option at the extreme end of cheap. The Pi was literally made to teach programming. I’m not sure what you mean by “research and editing”, but if what OP needs is a shell and the ability to write and play with beginner-intermediate programs on the cheap, then a Pi is the perfect solution. 
Didn't realize the arm always pointed down. That's good to know.
OK thanks I'll post there as well. I'm getting invalid syntax error for profit in my print line
He needs something to look at documentation on, find libraries with, find examples, and other things. ie: Research It is not meant to be used to teach programming to someone without a computer. I have no idea where you got the idea. It is a supplementary tool that can be used to help teach basic hardware interfacing.
This is the right answer. Likely caused by running the code using a different user to the one that owns the log path directory.
/home dir is a directory which your user won't have write access to. That's why it refuses to log there.
You are missing a comma in your last print statement. Look at it again very closely. Go back and read the error message again once you find this problem. It is important to be able to understand what error messages tell you and this is a great opportunity to learn how to read them.
This thread was about IDLE? It's about the pros/cons of Tkinter.
I finally got it . Had to downgrade my selenium . *pip install selenium==2.53.6* Now it works. 
I know right. Then again, sooner or later there will be someone who does this either way, whether this guy releases his source or not.
Yeah dude you wrote a shitty scraper with the only difference being entire videos being stolen instead of text and images, so cool, I hope you'll gain money by stealing other people's work.
&gt; wrote a shitty scraper with the only difference being that entire streams get stolen instead of tex eeeeeeeew
Ok, I will walk through this slowly. Everything in your first two sentences can be done on a Pi. The suggested OS for beginners is basically Ubuntu for Pi and includes chromium. From there you can search the web for whatever you want, including third party IDEs that are more beginner friendly than VIM. No heavy Linux skills necessary. I have no idea where you’re getting the idea that it isn’t meant to be used to teach without a computer, the Pi IS a computer. You seem to have done exactly zero research on this. If you had, you would know that taking 2 seconds and typing “learning python with raspberry pi” into google returns [this](https://www.raspberrypi.org/blog/learning-python-with-raspberry-pi/) as the first result, a blog post from the foundation itself about their textbook that teaches you python. “Learning Python with Raspberry Pi doesn’t presuppose any computing knowledge, and takes you from a standing start through variables, loops and functions, 3D graphical programming, building games, networking, scripting, interfacing with hardware…” I’m not saying a raspberry pi is a replacement for a computer, I’m saying if you are looking for a CHEAP WAY TO LEARN PYTHON, it would be more cost effective to simply get a Pi and learn with that instead of buying a new laptop. 
oh interesting. thanks for the heads up. I'll try and fix it after work today. 
There are other safety hazards - even though the arm can only point down, all it takes is a very easy to imagine accidental dropping of something reflective onto the work surface as it is printing to cause some anguish. That said, I love this project and your video. Very very cool.
&gt; You seem to have done exactly zero research on this. Alright buddy. I have owned every version since the first one came out. It is not a computer. It is not meant to be a replacement for a computer. I have tried. GUIs are slow and unresponsive as hell. **Any** budget machine will be vastly better. Even a budget $100 Chromebook using C9 long before an RPi. 
Out of curiosity about bytecode I decided to mimic C#'s function, nameof(). Went overboard with it, but that's not part of the latest commits. Snippets of a review: &gt; I'm not sure why you'd want to do this, however your code is really hard to understand. &gt; This is defiantly breaking single responsibility. Yes. What it does: &gt;&gt;&gt; from bop import * &gt;&gt;&gt; hello_world = 0 &gt;&gt;&gt; name_of(hello_world) 'hello_world' Check it out: https://github.com/jpfferreira/name_of/blob/master/bop.py 
The fuck? Did you? I quoted several things. 
I think what you're looking for is the subprocess module. For your case, it sounds like the Popen constructor would be helpful.
Yeah. Nice edit
You want unit testing. You also want to refactor your program so that it operates on strings and doesn't care where those strings come from. It could be a command line, an automated test, an HTML form... It shouldn't matter from your program's (classes and functions) point of view.
Not currently but once I’ve cleaned it up il put it on there :)
The bulk of it was there when you replied. No major points were changed. 
Please try rereading as it was you who mentioned tkinter in response to me discussing IDLE. Got it yet?
I've been using this base shell script for 10+ years..... Then calling it from cron. You may need to modify env variables. But this is a server dealing with programs using Oracle DBs. Not all of the program need the Oracle part, but it the base structure for all of the programs. $ cat legacy_load.sh #! /bin/sh # ORACLE export ORACLE_BASE=/opt/oracle export ORACLE_SID=dbrp export ORACLE_HOME=$ORACLE_BASE/product/10.2.0/db_1 export LD_LIBRARY_PATH=$ORACLE_HOME/lib export PATH=$PATH:$ORACLE_HOME/bin export PATH=/usr/local/python27/bin:$PATH export PATH="/usr/local/bin:$PATH" SCRIPT_NAME=/mydata/prod/bin/load/LegacyLoad.py eval 'cd /mydata/prod/bin/load' eval 'python $SCRIPT_NAME' $ crontab -l */10 * * * * /mydata/prod/bin/load/legacy_load.sh 
The problem is the program is really old and
Any cell containing newlines should be surrounded by double quotes or any other convenient character that you'd like to pick, then the problem disappears. I say this as the stdlib csv module can cope with just about anything that is thrown at it via [Dialects and Formatting Parameters](https://docs.python.org/3/library/csv.html#csv-fmt-params).
plotly offline isn't 100% free. It does not allow saving plots as files (requires a user token).
The problem is the program itself is really old. Changing it is an option, but more of a last resort My objective is to give it a facelift, not re write it
Thanks, I'll give that a look
Is this a paid gig?
It would be a bit daft if under the surface Pandas used the csv module and let's face it, why would the pandas maintainers roll their own?
So, at least it has been collated in one spot. Better yet is that it's likely to be extremely accurate, coming from of the most active core developers, and not bunged together by some complete numpty, e.g. the type of idiot who keeps claiming that Python is pass-by-value or pass-by-reference despite the core developers stating that it's pass-by-object.
&gt; for the life of me I cannot figure out what the below code means That doesn't surprise me as it's a poorly written implementation of the [list index method](https://docs.python.org/3/library/stdtypes.html#index-19).
Literally 5 lines of code. Lol
Google is your friend https://stackoverflow.com/questions/9205081/python-is-there-a-way-to-store-a-function-in-a-list-or-dictionary-so-that-when I'd love to take credit, but, well, I cant. 
&gt; If I replace the value in the dictionary into using brackets e.g. 'disp': print_dispute() however it just calls that function when the program executes before any user input is even entered. You don't want to use the `func()` in the dispatch dict, since as you discovered, that's calling it immediately. Instead pass the actual function, and call it when you retrieve it. def func1(): return 'func1 called' def func2(): return 'func2 called' # ... dispatch = { 'a': func1, 'b': func2 } while True: user_cmd = input('&gt;') user_func = dispatch.get(user_cmd, lambda: 'invalid input') print 'func returned: ', user_func() Teh actual call happens on the last line there.
and here is a small example I've whizzed up def one(): print('one hahah') def two(): print('two hahah') def the_count(): print('I am the count who likes to count') dispatcher = { 'one': one, 'two': two, 'three': the_count } action = input('Option: - ') dispatcher[action]() 
That's what OP said they did. They just didn't do much of anything inside the script except to set PATH. OP: When you open a shell, it typically runs at least one nice login setup script such as .bashrc, .bash_profile, .profile, and so on. These all set up your environment with lots of variables and conditions suitable for your login. Your current directory is also set to your account's home folder. When cron runs a job in crontab, none of this occurs. Your script that you name in the crontab should perform any necessary `chdir`, and also set any and all environment variables your job will need.
this is a much neater way of doing it than my dirty hack job :)
looks to me like you are trying to mix strings and floats at the "profit percentage" profit all the others have , between them, except this bit add the , :) &gt;&gt;&gt; profit = 1.0000 &gt;&gt;&gt; type(profit) &lt;class 'float'&gt; &gt;&gt;&gt; sales = 1334.34 &gt;&gt;&gt; revenue = 12 &gt;&gt;&gt; print ("Sales" , sales , "Profit" , revenue , "Profit Percentage" profit) File "&lt;stdin&gt;", line 1 print ("Sales" , sales , "Profit" , revenue , "Profit Percentage" profit) ^ SyntaxError: invalid syntax &gt;&gt;&gt; print ("Sales" , sales , "Profit" , revenue , "Profit Percentage", profit) Sales 1334.34 Profit 12 Profit Percentage 1.0 
I'd suggest using [systemd](https://www.raspberrypi.org/documentation/linux/usage/systemd.md) instead of a cronjob. It first is a little bit more complex than one line in your crontab but has some real benefits. The first for you being that you can simply set _WorkingDirectory_ to the directory where the script should be executed. No need to mess with _PATH_ or modify your script just for the case. The second reason is that you can start the service right away to see how it will behave. This makes debugging a lot easier than waiting for a cronjob to be triggered. To work as a cron replacement you would make use of a [timer](https://wiki.archlinux.org/index.php/Systemd/Timers). Sticking with the example from Raspbian the file must be named `myscript.timer` and should be placed in `/lib/systemd/system`. Its contents would be this: [Unit] Description=Run the job in regular intervals [Timer] OnBootSec=1min OnUnitActiveSec=2h [Install] WantedBy=timers.target This will be run 2h after the first run and would be activated 1 minute after boot. Other variants of activation are possible - the [systemd.timer manpage](https://www.freedesktop.org/software/systemd/man/systemd.timer.html#Options) has more. To enable this timer then use `sudo systemctl enable myscript.timer` - this makes it start at boot. To start the work of the timer use `sudo systemctl start myscript.timer`. With `systemctl list-timers` you will see when the next execution will take place.
That’s really low, man. You’re not creating content, you’re appropriating it from underpaid creators. The streamers should be getting those views, not you.
Depends on your needs really. Altair and seaborn are cool libraries for advanced visualizations. Bokeh and Dash serve to build interactive web dashboards. You don't get inter-graph communication on Altair and seaborn
Ahhh nice thanks for that. I did have a good stack overflow look but didn't stumble upon this gem
Look up for Django. 
Very nice Project!!!!
The Legend of Zelda has a minimap, from that you can determine if the player is in overworld or in a dungeon and which screen they are in that dungeon. I had to put it all together myself. I'm trying to learn python so I decided to do a fun project as a learning experience. It turned out to be more ambitious than I had thought it would be but I've definitely learned a ton. Right now I'm in the process of cleaning the data up. It should be a super cool dataset when I've done. I've analysed over 5000 runs from one speedrunner. 
How about [Python Core Mentorship](https://mail.python.org/mm3/mailman3/lists/core-mentorship.python.org//)?
Google: Python Flask Rest Google: Django Rest
Trying out MicroPython. Couldn't find a good way to keep the code on the Pyboard in sync with a directory on the computer, but now I at least have a script that runs in the background to upload the files and reboot the board every time a file in the source directory changes (https://github.com/jonathangjertsen/pyboard_sync)
Ssss
Ssss
Ssss
Ssss
Ssss
This looks useful to make more maintainable error messages! Also, seems to work even when two names point to the same object, but not with elements of lists, dicts etc. 
damn and im just here learning the fundamentals! this is like magic to me your presentation and video quality is great man. props to you! fight on!
This works great on a greenfield application where sane and rational selectors would be used. This is much harder on legacy apps or where the person writing the selenium automation has zero feedback on the development of the target application. That being said. I am working on a schema for defining page objects being totally language agnostic.
It should be used with selenium. This library is only to simplify writing page objects. In my experience every project implements a base page object completely adhoc.
Yep. The only case where they're actually an issue is if interfacing with cmd and the various commandline system commands (Eg. via `os.system()` or similar). "/" was used to indicate switch for various DOS commands, and so for historical reasons only "\" is allowed for directory seperators. But that's generally best avoided anyway.
I just got a thinkpad x230 for 190, it has a I7, 8gb ram 180gb SSD, I plan to use this for python and R, I am also pretty new to programming and the 12.5 inch display might be a little small but so far I like it. 
i respect your position but I feel the free flow of infomration makes the internet what it isi and I Wouldn't change it 
&gt; A lot of the time it's old packages not saying that they don't support py3, of course. If it's an old package, then yeah... PyPi encourages people to say they "support Python 3" with the `'Programming Language :: Python :: 3'` tag, except it seems that just about every version of Python/numpy/scipy/VTK/etc. version that gets released requires some update to your code. You can say you support all versions to date or all used versions (nobody supports Python 3.0, 3.1, 3.2, or 3.3 anymore), but now you don't technically fully support Python 3 (and then you have the future version issue). Pip relies on that information when selecting your version, so now you're downloading an incompatible package. It's also annoying when your dependencies release an update a few weeks after a major release and you're bad about releasing minor versions. You can use the master if you want full Python 3.6 and numpy 1.14 support. Even more griping: Why do people insist on using a 5 year old version of a 6 year old package, when you're just starting out and then complain on stackoverflow about how it sucks, which of course generates incorrect answers? I don't even know where people find it because I don't host it anymore for a very good reason. Also, why do people download Windows software for Linux? It says windows and exe; it doesn't work for you...
Wow. Just brilliant! 
YOU ARE NOT IN ON THE JOKE
Sounds like a plan! 
It's clips, not the entire stream, and it's compiled into a recap for the game. It was a for fun project, maybe if you had some fun of your own then you would not feel the need to undermine other people on the internet.
I bought a refurbished HP EliteBook 8470p Laptop for under $200 as my Python development machine. I had some very specific requirements because I bought a Movidius Neural Compute Stick. I needed a 64 bit operating system, Ubuntu 16.04, and an USB 3.0 port. I don't know if you are interested in artificial intelligence, but it does tend to require more system resources so you need to take that into consideration.
Hell yeah! I got a job in bioinformatics with the same qualifications.
A lot of companies essentially profit off of collecting information from other people and aggregating it all together in one place. While it's not the most glorious and noble thing to do, I certainly don't think it is illegal to compile stuff that is publicly accessible, and condense it into a smaller more digestible format. If you have the ability to watch all streams at the same time every day, then please let me know because I have a laundry list of other things that I could use help with if you are willing.
pathlib is pretty good. `.read_text()` and `.read_bytes()` and their write equivalent are really useful. The only issue is that they did some [constructor atrocities](https://github.com/python/cpython/blob/3.6/Lib/pathlib.py#L976) and you can't easily inherit from Path and extend it. I can't believe that this code was merged with such a massive OOP hole.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**pathlib.py#L976** (3.6 → 581ce25)](https://github.com/python/cpython/blob/581ce25e1ffa374e62547ef266b6326bee0c54e5/Lib/pathlib.py#L976) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dtjvp4t.)
&gt; That’s really low, man. I am sorry you think that, but that's really not the way I see it. I attempted to make it more digestible. This is essentially tldr twitch for a certain game every day. Why is summarizing something appropriating content? Also, I am receiving nothing from this, the people creating the clips featured in the videos are gaining the most, it's free publicity for their stream. 
I think a programmer would probably have some idea of what machine specifications were needed.
I've used Pis and I don't think they're as bad as you say. It's not even that slow.
But don't they all start as data visualization libraries and eventually become dashboard frameworks?
Is this a serious question?
Im assuming your talking about making it wider. The trick is really that if your line is that long, you should put \ and go on. A = mysuperlongvariableorobjectname + mysuperlongothervariableorobjectname Should be expressed as A = mysuperlongvariableorobjectname\ + mysuperlongvariableorobjectname 
if you're talking about the length of a single line, use line breaks (both in jupyter and your general python code). believe pep 8 style guide says line length should be 72 characters max.
Just watched. Can confirm, am master now. 
Thank you so much for your detailed explanation. I’m reading it over several times to really absorb what you’re saying and I appreciate it a lot. I’m deciding to be a developer starting off with python, Django, and Sql. Once I’ve studied enough and have made some projects on GitHub I will work to get my foot in the door and experience. Then I will learn more language and transition into data science which is where I want to go. However, without years of experience and knowledge data science is a bit out of reach. However, I believe I do have the technical background to be a data scientist.
Clearly neither are you.
I've been making an NES emulator using Pypy for a bit over a month. [Here's a video of it doing it's thing](https://www.youtube.com/watch?v=JDdXGiIC0bo) (Video still processing on youtube :\\ ). I started by translating [JSNES](https://github.com/bfirsh/jsnes) to Python, and I've been working hard to tweak and find every speed improvement I can. I dug into the Pygame cffi/sdl code and found the base surface pixel array access and cut out a lot of the overhead. This became necessary as pypy/pygame has serious memory issues if you use surface transforms to scale an image. Almost killed the project there when memory usage ballooned to 3gigs and crashed, simply from scaling a single image up 2x or 3x; terrible garbage collection. Now sits around 120-150MB consistently. It even has sound using Pysoundcard to stream the audio buffer. There's no noise channel, as it has a huge performance hit for some reason. For the square/triangle/dmc values, I cache a bunch of calculation result values to a dictionary, using the "entry" values as the key and avoid extra computation. Sound is obviously the biggest set back in performance, especially on my ancient Athlon X II, usually sitting around 30fps; without sound though, I can often hit 60 fps with no frame-skipping. All U.I. features are custom, including game info look-up from a database, which I use to indicate supported games in the file dialog. I've been pouring over a bunch of other source codes in the process, in 5 other languages I've not used and learned a ton a long the way. I've fixed bugs from the original code base and added more mapper support too. If/when I've cleaned up the source and feel confident enough, I'll possibly release it.
You really shouldn't end up for very long lines and should ideally break your lines up. That said I have in the past put this in my Jupyter custom.css file for wider output: div.container { width: 90% } You try that out in the notebook with: %%HTML &lt;style&gt;div.container { width: 90% }&lt;/style&gt;
I made a cryptocurrency tracker for your trades: https://github.com/cytopia/coinwatch
If you’re in 3.4+ there’s also [`pathlib`](https://docs.python.org/3/library/pathlib.html) if you like a more OO way of playing with paths: from pathlib import Path script_dir = Path(__file__).parent # you can use paths relative to this: data_file = script_ dir / ‘nested/data/dir/thing.json’ 
O I WAS TRICKED
Yes. I have no idea what is expected out of a beginner/entry-level developer. Am I being too hopeful?
This is not the right place to post questions like this. try /r/learnpython instead. And provide the input you entered. 
You need to convert your input's to ints. height = int(input('stuff')) Copy and paste the code next time please and use /r/learnpython
Ok, thank you. I just saw the rules. I delete the post. My bad.
If you want to learn Python, show us what you've made so far for this problem. We would be more than happy to point you in the right direction or coach you towards a suitable answer. If you just want the answer to your homework questions, maybe don't include the problem description verbatim in your post.
1: /r/learnpython 2: read the sidebar 3: format your code properly 4: we won't do your homework for you
 def dollar_format(amount): rounded = int(amount) return '$'+str(rounded) dollar_format(123.45) also r/learnpython. :)
Dude, I'm struggling to get even considered for an internship. I only have 6 months experience. 
 def dollar_format(amount): return f'${int(amount)}' if __name__ == '__main__': assert dollar_format(123.456) == '$123' assert dollar_format(123456.789) == '$123456' 
Post to r/learnpython Use the idle instead. 
Planning to add range of comics to download as well as sysarg access to that, a separate GUI for it, etc etc. Just a beginner web scraping project since I've never done a webscraping project before
Dang, I learned something new today. Thanks!
79 characters. A welcome hold-over from the days of 80 character terminals. I wholeheartedly approve of a 79 char max line length as it allows me to have three or four code bases side-by-side in one editor, depending on screen and font size. Obviously there are some exceptions when it makes sense. ``` $ python -c "import this" | sed -n '9,11p' ```
sorry, new to this. 
Always read the sidebar in a subreddit before you post to it. It's the polite thing to do, and it's usually full of information you can use.
Is the server in Python? Is the client Python or web browser? What are your latency requirements? Do the clients have the ability to compare the stream to some other stream or external source? Do they need to be synchronized? 
Also, it will error for network paths such `\\server\c$\Program Files\`
I want it to be Python and hopefully works via Blender. I imagine it works maybe a bit like Telegram server. For now, I do not care about latency delay as long I can send values streaming without lost. I wonder if I just stream the data as a very small pixel image, at the other end maybe other people can see the code and then interprete it. Just an experiment. Because I am curious that we can stream video easily, but why streaming digit is so hard.
Does anyone have any suggestions for how to navigate this issue with regard to `import` when you have to jump up and down the directory structure within a project on Windows? I'm used to working on *nix (Mac in particular) but am currently stuck doing a project on Windows where it's not really a good option to do the Python portion on *nix. Basically I need .py files in one subdirectory to be able to jump up a level to the main project directory and then back down into a helper function directory to be able to properly execute their `import` statements correctly. I've been resorting to just dumping the files that would be in that first subdirectory into the main project directory but that's quickly becoming untenable.
/r/learnpython
It's been a while since I took a fair use training seminar, but if I recall correctly, this might not fall under fair use. Musicians who take just a sample to use in their song still pay royalties to whoever they sampled. Fair use primarily protects educational use, parody, news reporting, and research. If you somehow wrote a Python script to compile the clips and assemble them in a manner that's either a parody of the original clip, or you utilize video metadata and title overlays to indicate that the clip is a 'news recap of X game on Y date', you'd definitely be safer.
So you made 2,147,483,647 commit requests to github on the same project(file?)....am I understanding that right? Just had the hunch and decided it was worth the trouble to test it huh? I like that, have an upvote good sir!
Isn't it how youtube works these days? Now we need just a comment bot with random insults.
I think there, it's just that the starting double-slashes have a special meaning to indicate the namespace - you can still actually mix it with forward slashes like "\\server/path/to/stuff" (though not on windows ATM to check).
Sounds painful :( Yes pip -e doesn't need internet access. What it does is install the package locally from your source directory, and set up symlinks so that changes in your source directory are immediately available to your program. This means that all modules and packages use the correct references as if they are installed and you don't need to mess around with python's import path. It might take a bit to get used to but it works well and is the "official" workflow AFAICT.
&gt; Now we need just a comment bot with random insults. How did you find out about my new project!
Assuming you are using Python 3 and you have a project structure like this: - \ (i.e the root folder of your project) - \core\main_file.py - \core\helper.py - \support\utils.py Then inside of main_file.py, just write: from core import helper from support import utils helper.some_function() utils.some_other_function() Then the trick is to run Python 3 from the root folder like this with the PYTHONPATH environment variable set to include the project's root folder: set PYTHONPATH=%PYTHONPATH%;. python core\main_file.py And that should work and everything should be able to see everything else. I don't have Windows here to test it, but it should be something like that. Note: If you are using Python 2, you'll have to create empty __init__.py files in each subfolder to make them be treated as modules. But it works in Python 3 even if you don't do that.
He has reached 6,567,567 commits before Github dissabled his repo access not quite 2,147,483,647, but he found some bugs on the way ;)
Oh look, ancient excuse from leechers. &gt;It's not entire stream so what I am doing doesn't really hurt streamers hehe xd give me money for nothing.
Maybe that's by design? It allows them to refactor the internals without worrying about breakage.
Or just use `os.path.sep`, and then you don’t have to care about anything. If you are doing PyQt, there are tons of utilities there too. To be honest I’ve never been a fan of `pathlib`, I hate operator overloading and it looks to me like overengineering a very simple problem.
If you are scraping a website to crop pixel art, combining it into a collage, and giving it away to other people for free then I don't see harm in that. But yes, I am a leech, and also the bigger person, I am sorry for wanting to learn and sharing progress with the world.
There is many things you can make better in your code but dude... I have 2 months experience with python and get first python job ;)
I like your project! How much control do you have on your kinematics? I didn't see anything on ramping up the motor etc. Is it part of the API? Anyway, safety first! I see no safety goggles or smoke hoods. That's very dangerous, and you or a friend could lose an eye or even worse. Now, for your code: It technically works, but I would never use it on a real robot. It's not testable, there's no logging, and the state changes a lot, despite you copying. It's good as a first project, though. Have a hug! Some details are below. I just looked at it for a couple of minutes, so it's not comprehensive. Note that you're clobbering many of the names, such as map and copy, and shadowing others, such as copy. Someone reading your code would need to look back and see if the map you used was the original or one of the ones you overwrote. One common thing that's done is using a different name (such as mapping), or appending an underscore (`map_`). In the same vein, never `import *`. Try not to iterate through things with an index. For instance, `Map.__iter__` can be written as: yield from zip(self.pts, self.pts[1:], self.pen_down) You are also overwriting things (such as `map`, again). Your code would be very difficult to test and debug. Especially when working with robots, you'll want each method to have as few side effects as possible unless it's interacting with the external world. Also, I recommend you learn numpy functions and vectorization. You imported it, but didn't end up using it at all. Things become much easier. Adding two vectors is just `a + b`, scaling is `A * scaling_factor + translation_vector`. It's good that you're trying not to modify things, but it's better if your methods do what they say. For instance, `unit_vector` returns a completely new mapping instead of just the vector. Also, the full code for the unit vector in that case could be: def unit_vector(self): return self.pts / np.abs(self.pts).max() It'll be a bit more complicated if you want to return a copy. Also, this isn't actually returning a unit vector. An actual unit vector would be like this: @staticmethod def unit_vector(self, point): point / np.linalg.norm(point) Another important thing is to use `if __name__ == '__main__` (like in Mandelbrot), in case someone else (maybe you) want to import it somewhere else. You don't want your robot suddenly starting while you're testing your code, without having set up your requirements.
or A = ( mysuperlongvariableorobjectname + mysuperlongvariableorobjectname )
I "wanted" to make that amny commiut GitHub blocked my repository before that
Well then you're a prety shitty person if you don't see harm in stealing work, then selling it as if you made it. Worse if website has previews of real thing and scraper can find direct links to files which aren't jpeg'ified to reduce resolution, deterring pieces of shit like you from doing it manually, then you literally get a copy of artists work for free. This results in people not bothering to sell anything at all, what's the point if their hard work will be stolen? And if they release anything, it's in shittier quality since I also wouldn't bother if someone would just steal it either way.
You can put any kind of selector you want in a config file. The fact that it's not code shouldn't prevent you. I haven't been doing this on greenfield apps. I've only been doing it on legacy apps. I'm working on a YAML schema for this too.
I usually do a `bash -l /full/path/to/wrapper/file.sh` The `-l` ensures that the cron environment inherits the environment that I create with my `.bashrc`. Not the most full-proof method, but it works for me 90% of the time.
Could you please expand on how this usage of contractors makes it difficult to extend?
On a related note: Anyone knows how to get `glob` to returns paths in the same format on any OS? On Windows it uses `\\` so the code for splitting to get only the filename (not the entire path) is different on windows.
This is great news!
Great work! I find wxPython highly productive and enjoyable to work with and the wx C++ documentation has always been outstanding. Now the Python docs are also really good! https://docs.wxpython.org/ I know that Qt gets most of the publicity, but personally I prefer wx (having written huge applications in wx and only a small one in Qt, but still). Being able to .Bind() anything without sub-classing and the fact that the class __init__ normally takes sensible parameters so that normally no further method calls are needed to set up a widget makes it very fast and compact to generate dynamic UIs with readable code. The work Robin Dunn has done with wxPython is simply massive and he should be known as one of the great open source legends, especially in the Python community! Congratulations on a fantastic release! 
Did you ever find out what blocked you? Like was it some type of firewall that detected the overactivity, human intervention, or just some arbitrary number they decided?
I think this has mandatory static typing in DataClasses? Please tell me I'm wrong, or if I'm not, what the hell is happening?
nested loop should do the trick option_a = ["one", "two"] option_b = ["three","four",] option_c = ["five","six","seven"] for option_a in options_a: for option_b in options_b: for option_c in options_c: # YOUR QUERY (option_a option_b option_c) 
Instead of nesting loops try `itertools.product`: for option_a, option_b, options_c in itertools.product(options_a, options_b, options_c): ...
Thank you
You should have switched between adding and removing the dot, then it wouldn't become many bytes. It would have been much faster, and possibly less likely to reach that number. You could have submitted in chunks of 1 million perhaps :) Actually, the problem is that because it is all on 1 line, it is considered completely new data each time. With a newline it would have been much smaller increase also! Nice experiment :)
&gt; so the code for splitting to get only the filename (not the entire path) is different on windows. No it isn't -- use `os.path.split`, or `os.path.basename` to get just the file portion alone, or `os.path.dirname` to get just the directory path. 
batteries included? see https://docs.python.org/3/library/cmd.html
You can declare types as Any. Raymond said that he is working on making it optional https://youtu.be/lSnBvQjvqnA
Alternatively, there is [PyFilesystem](https://www.pyfilesystem.org/) which also abstracts away the platform issues regarding paths. Has the advantage that your code will work with any filesystem; archives, ftp, Amazon S3, Dropbox etc. 
TL;DR abuse API because bored.
There's no such thing as "Anaconda Prompt". Yes, python interpreter executes line by line, indenting code also works, also pressing enter twice after you finished writing a function or any other part of code that needs identation is not that hard (which would be like, the first thing you'd try).
"Function is a reusable piece of code, which can be ran once in a program..." Okkid.
Streaming video is far from easy: compression, buffering, audio/video synchronization, compensation of variable conditions on the internet and lots of other this. But other people have already done all the hard work for you because there is a lot of commercial value in doing it. If you "do not care about latency" then you can buffer the whole thing and just download it later. But you say you want it "live" so you obviously do care about latency in some way. You can write a simple tcp server that accepts incoming connections and send the numbers as text, separated with newlines. The clients can simply connect with telnet and see the numbers scrolling. Is that enough for you? How many clients are you expecting? You will need to send the data to all of them - each one has its own connection.
Try it: from pathlib import Path class MyPath(Path): pass p = MyPath() Results in `AttributeError: type object 'MyPath' has no attribute '_flavour'` Problem is this line: https://github.com/python/cpython/blob/3.6/Lib/pathlib.py#L977 When you subclass, `cls` is not `Path` but `MyPath`. So now you've gotta re-implement `__new__` in your subclass.