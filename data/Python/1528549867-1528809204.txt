Yeah, I suspected that MS might just be ignoring side-effects (though I'd have to ask around to confirm...) Wow. Thanks. I've been trying to figure out a good way to handle this. Yeah, I considered using `tee`. It has its own issues, but I think you may be onto something. 
If you don‚Äôt mind my asking, what has caused/is causing your friends to go blind?
Keeping the stack trace is one of the best feature of asyncio. I'm not sure how you would preserve it with this model.
&gt; GIL is a tumor I'd say it's more like a set of training wheels than a tumor. The training wheels (GIL) are easy enough to remove, but the problem ends up being how to keep the bike (cpython) from falling down when it's moving forward (more than 1 thread running). 
is there a reason you excluded the closing bracket instead of just `\{(.*)\}`?
It uses fork on linux with copy on write semantics
My first instinct would be regex. If you have the guarantee that {} only appears once, a solution uding split might work as well. If you want to try something other than regex, split the string twice or replace the delimiters with a non-conflicting string and split on that.
PyQT doesn't really have a WYSYWIG IDE, so it doesn't count. Neither does PySide. The Qt company is working on improving their Python support, at which point Qt Designer will be the closest thing we have to a full fledged Visual Python. But even then it won't be the same as what VB6 was. Would be cool if they ever made it that far.
Dependency management, versioning, virtual envs, OOP model, interfaces, static typing.
Not worth $90-$199 per year. JetBrains lost me as a customer when they went with a subscription model.
this is exactly what regex is for
regex is greedy. it will match until the last match. all you need is `(\{.*\})`
I tend to use single quotes most of the time, and double quotes when the string is English text, like a short sentence or something. Really doesn't matter, just be consistent with what you choose.
Hmm. My eye is not drawn to the cyan and yellow at all. I see the extremes of the jet color map primarily. I guess I'm some kind of visual rube.
I believe the latter, type hinting 
That will match everything in `{A} B {C}` rather than just A and C. Ideal solution is `{.*?}` (no need for the backslashes either) but this of course messes up with nested brackets.
Cool, thanks
One was glaucoma. The other is glaucoma in one eye (completely blind in that eye) and in vitro rheumatism affecting causing a congenital defect in the other.
It won't when you have more than one pair of brackets, as in "{A} B {C}" (it'll keep the B instead of discarding it) -- they also added some unnecessary square brackets. What you actually want is just `{.*?}`: - `{` ‚Äî match a literal opening brace, { - `.` ‚Äî match any character - `*` ‚Äî extend the previous match for as long as possible - `?` ‚Äî modify the * to be "lazy", or to repeat as few instead of as many times as possible (so it will stop at the first } it finds rather than the last one in the whole text) - `}` ‚Äî match a literal closing brace, } (I was trying to guide you to a solution with my initial top-level response, because you can see the answer is honestly trivial, but it seems that isn't what other commenters are about)
I was providing a regex that accomplishes the same as their function but you're most certainly right about the backslashes...though i never realized you didn't have to. i always assumed since it was part of the length syntax, it would have to be. thanks for that!
Simpler packaging and cross\-platform distribution.
This is already possible (Python 3.x). You need an else, though: `foo = 4 if bar in list else None`.
Out of curiousity, what you need that you cannot accomplish with numpy, numba.jit and numba.vectorize(target='parallel')? (If you're not doing GPGPU computing that is)
Hey, yngvizzle, just a quick heads-up: **curiousity** is actually spelled **curiosity**. You can remember it by **-os- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
I never used it (because I prefer designing the interfaces directly by code) but QtDesigner is usable with PyQt. I can't tell whether it is good as VB or not. http://pyqt.sourceforge.net/Docs/PyQt5/designer.html
Created a CLI to copy Mifare classic cards (NFC). It's useful so I can now forget which commands are needed. And it also helped me to create a CLI using ANSI codes, which I never used before. I would glady have critics on my code from you guys : [https://github.com/sorasful/RFID\-Mifare\-cloner](https://github.com/sorasful/RFID-Mifare-cloner)
I'm confused as to why the developer cares if you make bad decisions. I understand that `jet` is a bad color map but if I want to use it I should be able to, no?
I got frustrated with pycharm after a couple of negative interactions with their support and some lagging features, but I agree that the debugging in it is pretty good, as Python goes. I've just been using vscode for the last year or so.
How do you use them to solve this? Save the output to a folder that is linked to the current commit?
Because if there were &gt; 1 such bracketed sections it would greedily take everything from the start of the first to the end of the last.
I never had enough time to get any of that to work so it's definitely not in the same league of usability that VB6 had. VB6 was literally something you installed, opened, and used, full stop. That's what made it easy. I think Qt Designer will get there in the next year, but it was a lot more difficult to do back when I tried to do it. For the record, I use PyQt5 around 5-7 days per week and I'm pretty proficient with it. These days I'm just doing everything from a normal text editor with no WYSIWYG at all and it's pretty usable. Not VB6 usable but I've gotten into the groove of it and am producing better (more reusable) code than what I would if I did use it.
Then fork seaborne? The developer doesn‚Äôt have to appease everyone, it‚Äôs open source so they don‚Äôt have to do anything for you at all. They are probably just trying to avoid people who don‚Äôt know better from using it accidentally in a playful way, and making public their own opinions.
You can always fork the project and remove those two lines. Python is a fairly opinionated language, I don't see why library developers wouldn't be opinionated as well.
Well... Telnet isn't the most common protocol to say the least. I doubt that many devices would be responsive to something this easy. The smart home products I know that are open to be communicated with all uses REST API with some JSON or XML string to code the control message, which can be coded in python. I'm sure there are exceptions, especially custom-built hardware, but generally speaking it won't be as easy as that script may lead you to believe.
He means that people tend to "see" U shapes in the jet colormap, rather than the largely uniform banding that you see in the true grayscale version. This should be evident in the luminance only version, which while still black and white looks very different to the pure grayscale colormap next to it.
Why does society care if you go kill a bunch of people? You may say that's an exaggeration, and I agree (also some may not). But the point is, in this case and many others, other people may suffer from it. I certainly can see how using this color map can produce invalid research. If you can prevent that from happening, at relatively low cost, why not do it? 
On the other hand, python's "there's one way of doing things" ethic is basically just an exercise in making poor choices difficult, which is exactly what this does. You could define your own jet colormap if you wanted, but it's almost never the right choice to do so.
What if parjson has less than 10k entries? You will try to access an element that doesn't exist. Is it solved if you just do: while(x&lt;len(parjson))? 
Thank you!
Ah, I see. I was excited for "optional static typing" to hint to the compiler so that it could make optimizations. Instead, the title should have been "optional typing" (drop "static"). :(
Java forces you to be aware of checked exceptions but you don't have to do anything with them. Want to catch it and handle it? Cool. Want to re-throw it and roll the dice? That's cool too. Python doesn't have checked exceptions because everything is a runtime exception. In that respect, Python and Java behave the exact same way.
PyCharm Community edition not good enough? We use PyCharm Enterprise at my location. All the Python devs in my team love it. Especially the Git integration. &gt; There are other, cheaper choices. True. Though I don't think there are any that are better. (I'm open suggestions, though.)
I think a stack would always be present but I dont really know. Anyway the Go implementation is very cool and elegant
Consistency in general is good but I can't actually think of a single time that inconsistency in quote style actually caused a recognizable problem for me. This kind of thing feels like fodder for bikeshedding to me.
"There should be one-- and preferably only one --obvious way to do it." [PEP20] However, id argue this error violates "If the implementation is hard to explain, it's a bad idea" [PEP20]. If the error message was actually explanatory instead of taking a childish "No." approach this post wouldn't need to exist üßê
Can you elaborate a little more about what is wrong with the standard library logging module? Maybe I can build something bc I have a lot of free time these days. Thanks.
There are better ways of doing that then throwing a generic exception. MPL prints warnings when it thinks you're doing something stupid (making too many figures, etc) rather than throwing exceptions. By throwing a `ValueError`, you now need to catch it and make sure there's no other possible `ValueErrors` that could be thrown and cause actual issues in your attempt to suppress the over reaching opinion of some other developer.
Just an FYI, these are just annotations for humans who read the code. Python does not check the types even if you specify them using annotations. 
It's just a simple Google to find out more, though. 
You're not wrong. I just thinks it's bad style is all. 
Gitlab runs on azure. So where's the difference?
Anaconda is a nice product. It's like pipenv though, another layer just to hide what virtualenvs are. What would be the issue if Python took the node approach to modules?
I've solved this btw, just needed to use len function 
Thanks, took me hours just to make these few lines of code 
God, Clojure is the same way. It‚Äôs all well and good until you hit a dreaded ArrayList is not an IterSeq error and want to tear your hair out. 
Open a PR Or relax a bit. Generic errors are fine, the standard library has hundreds of thousands of lines and gets by.
This is a great case for regular expressions. I know they look scary and hard to learn, but they really aren't that bad when you learn to look at each of the individual characters and understand the basics of what they mean. There also are plenty of sites that are regular expression helpers to show you the matches with your given pattern and what it is matching on. (google "regex helper")
Smart! üòÄüòÄ
OK, good reply, but what if the point of the presentation is the maxima and minima? What I don't like here is I feel like the argument forced this luminance premise on me as a value. "it is better if this value is a gradient in your colormap". I haven't been convinced of that because ultimately the point of the colormap is to convey information. The post is telling me jet is deceiving me but couldn't one argue the others are deceiving me from jet's truth (ie there is no truth, one shouldn't try to argue that for visualization).
I'm not saying that it should be more obvious. I'm saying that an exception is not the best way to handle the situation. Want to print "Don't use jet, use literally anything else" and make it something you can disable, go for it! The issue is that you're using an exception for something that isn't an error (or `StopIteration`) and if you're in a situation where your color map can be selected dynamically or the exception is suppressed, you have no idea why the piece of software you're using doesn't work. Stopping code execution to express your opinions on a color map is stupid. The generic errors in the standard library exist because they're actually descriptive of an error. If it is thrown, it's because you messed up, not because you used `jet`.
You can still use it. Seaborn is just a wrapper around matplotlib. You can still access the underlying matplotlib objects and set their colormaps. Python will let you shoot yourself in the foot, but it doesn't have to make it easy for you.
ValueError is the correct one according to the Python docs: &gt; Raised when a built-in operation or function receives an argument that has the right type but an inappropriate value Seaborn doesn't support the `jet`colorscheme, so the function raises ValueError. You might say that Seaborn *should* support jet, but that's your opinion, and you can easily create a fork if you disagree with the API choices made. I think strictly refusing to support jet is a bit pedantic, but raising ValueError is the correct thing to do if you want to do that. 
Well, BI is a big field. If you could be more specific, we could guide you better. But here is some Python modules that you will most likely need to work with to develop a proper BI solution. Pandas, for importing data into python and data wrangling. Altair/Bokeh, these are 2 data visualization libraries that show promise in terms of live updates and deploying in web apps. Django/Flask, these are web frameworks, that you will need when you want to deplpy your apps. I would advise web apps for deployment of BI solutions, since they are device-agnostic and work anytime and anywhere. Also, fixing bugs doesn't mean pushing updates to all devices. Of the two frameworks, Django is the one that helps you deploy faster. Flask give you more control over intricate details. SQL-Alchemy, for interaction with SQL databases. You could also use database specific libraries. E.g. psycopg2 for PostgreSQL. Django has something similar inbuilt for working with SQL, its called Django-ORM. Of course, the front end will need to be HTML/Javascript. Depending on the complexity of the front end, you can also learn a JavaScript library called React. I heard it works well with Django. It can communicate using a library called Django-REST-Framework. Thats what I can think of right now. FYI, I'm taking a similar path. I'm at the last stage where I need to learn REACT to deploy my app.
From my own experience (I used ML/classification on big data in an academic environment and am now looking into data science, so not that far off) I would say that NumPy, SciPy and Pandas will most likely be among the core libraries.
Probably slightly less, but I would say not more than 15% in my case. This is also the only machine I've used linux with so my experience is limited. Without tlp the battery life is definitely much worse.
It should. There's no excuse for this.
...what? Python and Java do the exact same thing with runtime exceptions. That is, they do whatever you tell them to do. Python doesn't have a compiler, and therefore *can't* have checked exceptions. You literally don't know about exceptional situations until they happen. When you compile a Java program, the compiler sees e.g. "you're trying to open a file. Well, I don't know if that file exists, and if it doesn't exist, I'm going to explode. Please either do something so I don't explode, or re-throw it and hope that someone else deals with it so the program doesn't crash." *That's helpful!* Why on earth do you think so much work is being put into static typing for Python? *So that you can be alerted that you wrote incorrect or otherwise fragile code before a runtime exception occurs!* What the hell are you even talking about? This has nothing to do with a language's "adultness", and in many respects, is a deficiency of Python. When you write code professionally--you know, code that customers pay for--you kind of don't want your users to see your app die and barf out a big stacktrace.
Python uses exceptions much more frequently than other languages. It raises an exception when you reach the end of an iterable, and then it deals with the exception. This happens under the hood everyone you use a for statement!
Poetry might help you there. It has a true dependency resolver unlike any other alternatives. &gt; Can't view dependencies before installing the package. Poetry never installs packages to determine the dependencies. It tries to rely as much as possible on the PyPI JSON API and if it can't it inspect the source distributions, without installing them, and if it's still unable to get them it stops since it means the module has been badly packaged. &gt; Can't view dependencies on the PyPi website. See above. &gt; The output from pip freeze is a total mess. Key dependencies? Dependencies for dependencies? Who knows. You can use `poetry show --tree` with poetry, which gives you something like this: babel 2.6.0 Internationalization utilities ‚îî‚îÄ‚îÄ pytz &gt;=0a cleo 0.6.6 Cleo allows you to create beautiful and testable command-line interfaces. ‚îú‚îÄ‚îÄ pastel &gt;=0.1.0,&lt;0.2.0 ‚îî‚îÄ‚îÄ pylev &gt;=1.3,&lt;2.0.0 pytest 3.6.0 pytest: simple powerful testing with Python ‚îú‚îÄ‚îÄ atomicwrites &gt;=1.0 ‚îú‚îÄ‚îÄ attrs &gt;=17.4.0 ‚îú‚îÄ‚îÄ colorama * ‚îú‚îÄ‚îÄ funcsigs * ‚îÇ ‚îî‚îÄ‚îÄ ordereddict * ‚îú‚îÄ‚îÄ more-itertools &gt;=4.0.0 ‚îÇ ‚îî‚îÄ‚îÄ six &gt;=1.0.0,&lt;2.0.0 ‚îú‚îÄ‚îÄ pluggy &gt;=0.5,&lt;0.7 ‚îú‚îÄ‚îÄ py &gt;=1.5.0 ‚îú‚îÄ‚îÄ setuptools * ‚îî‚îÄ‚îÄ six &gt;=1.10.0 pytest-cov 2.5.1 Pytest plugin for measuring coverage. ‚îú‚îÄ‚îÄ coverage &gt;=3.7.1 ‚îî‚îÄ‚îÄ pytest &gt;=2.6.0 ‚îú‚îÄ‚îÄ atomicwrites &gt;=1.0 ‚îú‚îÄ‚îÄ attrs &gt;=17.4.0 ‚îú‚îÄ‚îÄ colorama * ‚îú‚îÄ‚îÄ funcsigs * ‚îÇ ‚îî‚îÄ‚îÄ ordereddict * ‚îú‚îÄ‚îÄ more-itertools &gt;=4.0.0 ‚îÇ ‚îî‚îÄ‚îÄ six &gt;=1.0.0,&lt;2.0.0 ‚îú‚îÄ‚îÄ pluggy &gt;=0.5,&lt;0.7 ‚îú‚îÄ‚îÄ py &gt;=1.5.0 ‚îú‚îÄ‚îÄ setuptools * ‚îî‚îÄ‚îÄ six &gt;=1.10.0 python-dateutil 2.7.3 Extensions to the standard Python datetime module ‚îî‚îÄ‚îÄ six &gt;=1.5 pytz 2018.4 World timezone definitions, modern and historical pytzdata 2018.5 Official timezone database for Python. tox 3.0.0 virtualenv-based automation of test activities ‚îú‚îÄ‚îÄ pluggy &gt;=0.3.0,&lt;1.0 ‚îú‚îÄ‚îÄ py &gt;=1.4.17 ‚îú‚îÄ‚îÄ six * ‚îî‚îÄ‚îÄ virtualenv &gt;=1.11.2 typing 3.6.4 Type Hints for Python &gt; Dealing with dependency conflicts is hard/impossible. Like I said poetry has a fast and accurate dependency resolver with conflict detection and management. &gt; (Ana)conda, pipenv, etc. don't really solve any of these problems. So you can try poetry if you want, it should sole most of these issues. Disclaimer: I am the author of poetry :-)
I'm aware, I even mentioned it in the comment above. My point was that this isn't one of those cases, it's just causing trouble where no trouble needs to be
I don't know what makes you say that but that's not actually not true see my response above.
`jet` suggests local maxima or minima to the human viewer which are not present in the actual data. The problem is not only that the middle area is lighter than the minimum and maximum in `jet` (there are use-cases for that), but that even in the middle area there are two highlights (yellow and cyan) separated bay a slightly darker green. The only valid reason for using `jet` would be if you actually want to highlight the exact value ranges that have a high luminescence in the `jet` gradient, which is extremely unlikely to match your actual data. It is much more likely that users select `jet` because it looks pretty and perhaps a bit like a heat-map, but it does a poor job at the type of visualization heat-maps are usually used for.
Bingo- we're doing tons of GPU computing, which is the problem. 
They idea is that those U shapes don't actually exist in the function and so their presence is an artifact. Look at the "grays" plot later on in the article and you see that it really should just be vertical bars
It's their library - why do they have to support a colormap they think is terrible and misleading?
Sure there is, the author of Seaborn strongly believes that one should never use jet, and that's it. Trying to design APIs which are hard or impossible to misuse is one of the jobs of a library designer.
https://developers.google.com/machine-learning/crash-course/ml-intro
Humans percieve luminance rather than grayscale value. There are a number of color models, CIELAB etc. that try to match human perception. The data has a particular gradient of values. If human perception distorts that gradient (because the luminance of the colormap, for example, is not uniform and we "see" banding or effects that aren't in that data) then that is a problem. We want humans to percieve the properties of the data, not properties introduced by the choice of coloring.
This is beautiful
It's actually slower - at startup, it needs to unpack the executable into a temporary location, and launch the real Python process. 
As you've given no indication whatsoever what the app even does, there are a *very* large number of potential answers. It *sounds* like you're trying to migrate entirely to a web app, with the user interacting through their browser, abandoning the desktop GUI. But maybe you're trying to migrate the backend only and retain the PyQt code as a client of a web-based API. Either way it sounds like you need to abstract the GUI from the backend, so a good starting exercise might just be getting to the point you can run the existing front end in one process and the logic in another on the same machine, before you start thinking too hard about what infrastructure to use on someone else's machine(s).
It's always been odd to me how entitled people get about other's software.
It has the most up to date and selection of packages and it gives me the freedom to choose what I want. I am able to avoid information collection which is inherent in Ubuntu.
I use gnome.
It's the developer's choice to design the API in however fashion it's considered useful. However, this error message seems a bit arrogantly-opinionated to me. I totally agree that jet should never be the default, but it would still be useful to have it as an option, because if users set it manually they are probably 99% sure what they are doing (e.g., could be useful to for comparison studies, to reproduce results from a paper, etc.) In any case, I think the error message could be a bit "friendlier," sth. like "Jet is not supported by seaborn because xxx. For more details see the comment at xxx."
The obvious way here is to not use jet palette. 
Which is? I don't use node.js. I think the issue is python has various packaging solutions that are trying to solve separate problems. It works just fine depending on your application. Does your code really care if you're 6 months out of date on package x? I bet your requirements aren't actually correct, but are rather one correct solution. This issue makes packages incompatible when they really aren't. If it's on the developer to solve, it won't get solved. Another major issue is pip doesn't come with a C compiler. Not really a big deal on Linux (once you know the right dependency and assuming the sysadmin will install it for you), but it a major problem on Windows. Anaconda skirts this problem by building wheels for you. Not everyone does. Someone else complained that pip doesn't tell you what you'll install. That seems fairly easy to solve. Anaconda manages. For the who has what dependencies problem, I solved that 12 years ago assuming your dependencies are defined in setup.py in a particular format. I just listed the most strict requirements for each package and traced the chain. Then I printed if there were conflicts and what packages were using what requirement. It was only like 100 lines. It solved the pip freeze problem poorly, but enough. I now use the just support version x as well approach rather than being strict. I think some of the pain is just lack of complaining about the problem in an actionable way. Others are harder.
It *should be* the grayscale version? Who determined that? The jet extrema are different values and perhaps that is the point someone means to visualize by using it that grayscale does not.
I definitely perceive more than just luminance
Try watching this video https://www.youtube.com/watch?v=xAoljeRJ3lU. I haven't watched it recently, but I think after watching this video, I accepted their reasoning, and immediately stopped using jet myself.
Really, if the Seaborn folks don't want to support `jet` all they have to do is make `jet` an invalid choice just like any random string would be. In the documentation don't list `jet` as an option. Or if they have a "We're 100% confident this option is better in 100% of cases" option then just remap `jet` to that and log that it's being changed.
No, it's not possible to solve the problem with sandboxing. Sometimes the whole point of a generator is to interact with the outside world. For example, consider a generator that communicates over the internet, or one that messes with the filesystem like my above example.
Since you told me to see this I'd like to actually go bullet by bullet again like I did with pipenv &gt; * Can't view dependencies before installing the package. Poetry doesn't install packages to view dependencies. That's great and all. But can I run a command ex `poetry show --tree --package=packagename` to literally show me what `packagename`s dependencies are before I install it? I don't believe I can &gt; * Can't view dependencies on the PyPi website. Unrelated to poetry &gt; * The output from `pip freeze` is a total mess. Key dependencies Dependencies for dependencies? Who knows. `poetry show --tree` is great-- no complaints there. &gt; * Because of the above, you really have to keep track of your dependencies manually (maybe actually good practise?) Err, solved because of the above &gt; * Packages further down in `requirements.txt` seems to override the dependencies from above. Need `protobuf==3.0.0` in your first entry but the latter needs `protobuf&gt;=3.5.0`? Latter wins out with no warning. &gt; * Dealing with dependency conflicts is hard/impossible. Grouping these two because they are similar-- how does poetry deal with the first? How accurate / conflict resolving is poetry at doing things vs pip, at a statistical level (if you know)? &gt; * If a dependency includes something else (e.g., `requests`), being able to do `import requests` no bother makes me feel uneasy. No way to tell where it's come from without double checking your `requirements.txt`. Poetry doesn't solve this. But again it's kinda out of scope and more so an issue with the python packaging and import machinery. &gt; * PyPi package names not matching the importable names. (i.e., `PyYaml` vs `import yaml`) Poetry doesn't solve this and again out of scope &gt; * No warning for missing system dependencies, or calling out that they're needed in general (e.g., `unixodbc` is a system lib needed for some database related packages.) Does poetry do this properly? Haven't seen if it does or doesnt. By this count poetry solves 2/3 out of the 9 problems listed. And again some are out of scope-- not being against *any* package management tool. Just pointing out that no tool solves all the client side problems, and many of the problems are at the ecosystem level and are unrelated to any given tool.
One meaningful use case I can think of is simply reproducing others' work. Maybe even as a comparison to explain to someone else why they shouldn't use jet. I agree the message should explain more, and probably link to something with more details.
Don't blindly catch exceptions? Stopping code execution immediately is almost always the right choice for errors.
Trio and a lot of other libraries are great. But they aren't in the stdlib. The asyncio authors are going to be implementing some trio concepts though, supposedly.
I usually triple quote SQL, and sometimes strings with single and double quotes. I wasn't attempting to be exhaustive. 
Solid argument, there.
All of this, plus maintenance costs. You'd also need quite a bunch of projectors to achieve the same resolution. Also, it's quite tricky to judge lighting levels from a picture or video. Those are 500 nits displays, that's roughly twice the brightness of a normal monitor, and we don't know how they're calibrated. They could all be at 11, and that's 700 nits in the best/worst case scenario.
Being in the stdlib is surely not a sure sign of good quality.
Lmao
Okay okay. How are you doing this with a script? 
This sounds fun
Cool, I still remember my first script
AFAIK they didn't, but even in VGA resolution on each monitor it's 12 000 pixels vertically. If you then remap the monitors you'd need to go over 4K to feed all monitor from one feed. You could do that, but you'd spend way too much just to essentially play a 10 second loop. But you'd still get about 1,5mm pixel pitch, which is way better than most LED walls.
Godot maybe.
But people can still use jet. Seaborn is just a set of convenience functions on top of matplotlib. If someone really, really wants to use jet they still have full access to the matplotlib stuff underlying seaborn. To me it makes perfect sense that a set of convenience functions doesn't make it convenient to do something that is generally harmful. 
You don't even need to do that, just set the colormap on the matplotlib objects directly.
This. I designed/developed the DAO library at my employment and I discovered the hard way just how difficult it is to make semi-idiot proof APIs. There are just some things that require a flat ‚ÄúNo‚Äù because 999/1000 the use case is wrong. The 1/1000 time where the use case is correct usually can be met with a monkey patch, implementing the missing part under a different name or just editing the package virtualenv in place.
&gt;If someone really, really wants to use jet they still have full access to the matplotlib stuff underlying seaborn. Sure, but still, the error message is not very helpful for users who don't know (yet) that jet is not a good choice in most cases and comes across as arrogant.
Submit a PR with a better error message? Seems reasonable. I agree with Seaborne‚Äôs decision to stop jet - too many people recycle code from academic advisors and that‚Äôs where jet (and a lack of understanding of why jet is absolute shit for nearly every circumstance) creeps in. 
What is a good colormap? I always use red to blue
No one said it's a sign of quality. But what is in the stdlib is generally speaking the kind of thing that's supposed to be something you can just jump into-- which you can't easily do with asyncio.
Open source is about giving control of the software to the user of the software, not its original creator. There is no "misuse" in this case. No one is trying to plot an inaccurate graph.
It's not their library - it's open source. It's OUR library. That was one of the beautiful things I found coming to Python after 20+ years using expensive, proprietary languages, compilers and IDEs as well as switching to Linux. **I** was in charge of my own PC and my own code, no one else. 
&gt;. You can still access the underlying matplotlib objects and set their &gt;colormaps. Then you're not using seaborn anymore, are you?
Pip actually does tell you what it installed, its just not in a very pretty form. pip installs wheels from the pypi repo by default now if they are available, i believe. Source or binary packages aren't the issue. The issue is the system anaconda, pipenv, pip, etc are actually managing. Side note: Why is it they have not fixed the pollution of the default sitepackages folder. Many users are going to ignore any kind of best practice (and in some cases packages dislike venvs ... there are a handful) and install it in the global site packages directory polluting their default install. Re Node: For none-global installs nodejs basically packs dependencies into a node_modules directory within your application. Node has always struck me as the wild wild west but that feature really seems like they might have gotten it right.
&gt; Poetry doesn't install packages to view dependencies. That's great and all. But can I run a command ex poetry show --tree --package=packagename to literally show me what packagenames dependencies are before I install it? I don't believe I can For this to work your packages must be locked (not installed), and then you can do: poetry show my-package --tree There is no installation in the process. &gt; Grouping these two because they are similar-- how does poetry deal with the first? How accurate / conflict resolving is poetry at doing things vs pip, at a statistical level (if you know)? Poetry will warn you about the conflict with a message like this: [SolverProblemError] Because my-dependency (0.1.0) depends on both protobuf (3.0.0) and protobuf (&gt;=3.5.0), my-dependency is forbidden. So, because my-package depends on my-dependency (0.1.0), version solving failed. If the sub dependencies of two dependencies cause a conflict you will get a message similar to this: Because bar (1.0.0) depends on shared (&gt;3.0.0) and foo (1.0.0) depends on shared (&lt;=2.0.0), bar (1.0.0) is incompatible with foo (1.0.0). So, because myapp depends on both foo (1.0.0) and bar (1.0.0), version solving failed. Note that before it fails it will try to find a valid set of dependencies by backtracking if necessary.
BINGO. Having come from decades in the world of (obsessively) statically typed languages - with proprietary languages and commercial IDEs and compilers to boot - Python was like being unchained and finding freedom. In fact, I'm reminded of a recent visit to an old forum and one developer was defending hiding methods and properties in his new open source library, finally declaring that "Just because the library is open source doesn't mean you can whatever you want with it". :-( My former compatriots still don't understand freedom. It's scary to see Python users defending that type of thinking. When I also switched to Linux because of a screwed up XP partition I tested out Linux and Windows 7 on a spare hard drive. Win7's install kept failing with no space available, even though the drive was empty. I finally figured out that, without permission or warning, it was trying to make a boot partition on my first drive, which had the maximum number of primary partitions already. Had it done so it would have messed up my system even more. The Linux install? It eventually told me it didn't think my system would boot with the partition layout I'd chosen, explaining why, and then *asked if I'd like to use it anyway*. That's when I *truly* understood open source and was a complete convert. It was the first time in my life installing an OS didn't fill me with fear about what the software might do of its own accord. Python seems to possess that same spirit of freedom; let's never lose it. 
They can't :) jupyter is only able to do this, because it has access to the evaluation results of your previous blocks of codes. 
Nobody's forcing them to, they just *should*.
Fork it or override it then. The author has no obligations to not raise this error. 
A decent build system. Python's support for C extensions is atrocious, many times I've considered using makefiles and writing my own build scripts instead of f***ing around with distutils or setuptools until they produce the package I need. It would also be nice if distutils or setuptools came with half-assed documentation instead of hiding everything behind ``**kwargs``.
Seaborn is a quite opinated library, there are lots of things out of the package because it was again the author idea of a good visualization.
Like an AoT PyPy?
Try Delphi some time (seriously, don't try Delphi): Var x : Array Of Integer; y: Array Of Integer; x and y are considered to be different types! (?!?) You need to define a new type... Type IntArray: Array Of Integer; Var x : IntArray; y: IntArray; Of course, you could define this type: Type smallInt : 0..10; And a function like this: function something(x : smallInt): Integer; And yet this wouldn't cause a compiler error: x := something(123456); Madness! 
.... Did you think before typing?
This isn't what open source means. I don't understand how you got this misconception. 
Just process files one at a time instead. There's no need to keep the files in memory for the whole run. Also, if you can, try to only keep as much of the file in memory as needed - if your function can operate on a single line, walk through the file line by line, etc.
This. You laptop is your instrument, your code and workflow your art. Nothing ever felt better in my hands than my MBPs, iTerm, screen and the power of controlling thousands and thousands of servers. The introduction of touchbar shattered that flow. The current non touchbar models are second class citizens. I ended up with an XPS Sputnik. I felt like I should support Dell's support of linux since I felt as if Apple had abandoned me.
Then you can remove the code preventing jet yourself. 
Feel free to delete the `elif` clause in `palettes.py`. You can even publish that on GitHub. But the developers of Seaborn are free to dislike that color scheme and disallow it. This BDFL model is also used in Python and Linux development.
Seaborn supports all matplotlib color maps, so they need to explicitly ban it in their code.
Oh wow that is cool, adding so poetry solves a little over half the problems (bar the ecosystem based ones)
It's kind of funny, I can click on the "I turned my adblocker off" button, and everything shows up.
Yes. "Should" and "have to" are different things, and they're enforced in different ways. You shouldn't mix them up. (But no one will arrest you if you do ;p)
Nice work! I wrote a library for doing parallel programming, that lets you create background tasks with automatic retry, but for Processes and doesn't rely on the OS https://github.com/pycampers/zproc/
This has been asked countless times and every time the answers are the exactly same. It's mobile, packaging, deployment and the GIL.
That is correct... I think you can use mypy to check the types though (I've not used this feature, I've just read about it).
What is BI? Business Intelligence?
Are these string templates? If they are, there might be a better solution than the regex that people are suggesting (it's standard library functions for string templating), but we need to see the template format.
&gt; you have no idea why the piece of software you're using doesn't work. That traceback is pretty clear actually. One look and you can tell exactly what went wrong, and passing the parameter dynamically doesn't make it less clear.
&gt; Pip actually does tell you what it installed, its just not in a very pretty form It does, but AFAIK not before downloading the packages. &gt; pip installs wheels from the pypi repo by default now if they are available, i believe. Source or binary packages aren't the issue. Right, but they don't always exist. They're getting better slowly. VTK finally wheels, so we don't need to rely on Chris Gohlke's unofficial wheels nearly as much. &gt; Why is it they have not fixed the pollution of the default sitepackages folder Yeah...Windows hasn't either. It's a hard problem that most people ignore. How do I install my program in such a way that I don't break the other programs or older installs of the same program? I dunno; not my problem? Everyone just puts their executable at the top of the path. Paraview and FiberSim (two programs I use) both install Python and just put it in the path ahead of my Python...uh how bout no? Abaqus also has Python and they reference it from their executable like you're supposed to. I think the logic of the mess of site-packages is that in theory if you overwrite package x 1.0 with 1.1, things should just work. One step would be to move the folder to backup_versions/x. So now we have a problem of what happens when x_1.0 doesn't exist, which should be to skip it (not sure what it does not). I just delete things by hand. &gt; For none-global installs nodejs basically packs dependencies into a node_modules directory within your application. Yeah...I've been wanting that for years with Python. WxPython used to have a feature where you could select the version (since you could install multiple versions simultaneously using black magic). They dropped it though. It could also work with PyQt4 vs. PyQt5 because the import names are different, but the global package is PyQt for some reason, so I can't install them both... It's technically solvable now, which would also strongly encourage better semantic versioning.
"Treat users like adults" is definitely not in the zen of python. The author of colormap obviously views the use of the "jet" colormap as an error, so raising an exception seems pretty pythonic to me.
Glad I could help. Programming is tough, especially at the beginning. 
Yes. What I like in your answer is you broke down the problem in both directions, so to speak. I can run out the loop over the list of directory files to include the save operation--eliminating the results storage problem. And, my `os.py` file could send single lines to `func.fix()` if those lines proove extraordinarily long. Just to be thorough, could you also comment on the storage of files in memory, if I also needed to combine files into one file? A general impression is sufficient. It's all trade-offs, right? And my goal is to make these functions extensible to other problems. Your feedback will help me keep in mind what's a good direction when I need to make choices.
If you need to combine them into one file, you can still write your file line by line.
Been using [logzero](https://logzero.readthedocs.io/en/latest/), might be of use to you.
Viridis if you use python. It's designed to correct the flaws in jet. However if you're just trying to get a simple idea across, a lot of seaborn colourmaps also work in greyscale. I think that's an important benefit for publishing. Maybe more important than perfect scale representation.
TIL:python edition
&gt; Open source is about giving control of the software to the user of the software The control in question is the right to fork. The author/maintainer is in no way required to accommodate your sensibilities, they just can't stop you from forking and competing with the original project.
If it has your name on it, you are the one that gets shit thrown at when someone inevitably does something stupid with it.
Did that, but the original message is the preferred one. Well, it's a matter of preference, and I would prefer a more informative one for the sake of educating users, but yeah just my opinion ¬Ø\\\_(„ÉÑ)\_/¬Ø
I just feel the problem is simple enough that Python can solve itself elegantly without any dependencies. This article has a solution: http://oz123.github.io/writings/yet-another-case-of-python-vs-regex/index.html Could be written without raising an exception if the data wasn't mandatory.
&gt;The control in question is the right to fork. The author/maintainer is in no &gt;way required to accommodate your sensibilities, they just can't stop you &gt;from forking and competing with the original project. The incident that motivated the creation of open source was Richard Stallman not being able to do what he wanted with a printer driver. Heck, he created sudo because he felt that every user on a system should be able to do anything they wanted too (!!!). Stallman would tell you that software that arbitrarily seeks to force someone else's vision on you is antithetical to the *spirit* of open source software. Think about open source software... much of it utilizes plugins and scripting and other features to make it easy for the end user to have things their way. A piece of open source software that did everything it could to obfuscate file formats, block or override users' decisions, or otherwise hamper their desires would be most unusual. Imagine a desktop Linux shipping with forced upgrades and reboots like Windows 10. It simply wouldn't happen. Yes, ultimately someone could fork code and change it, but it would be greeted with outrage and simply wouldn't happen in the first place. People working in the open source space value freedom. Generally, people working in Python value freedom more than the average programmer too (e.g. Java developers who lock down everything they can in their classes). 
Stallman != Open Source It's a common misconception. 
This isn't about the law. A company can use a piece of MIT-licensed software and never contribute back a line of code or donate a penny to developers too. That doesn't make it *morally* right. Open source is about freedom - cue [Richard Stallman's crazy free software song](https://youtu.be/9sJUDx7iEJw). Software that seeks to control end users is antithetical to the concept of open source. Look at WIndows 10 - forced updates. Forced reboots. Do you see any Linux distros that force updates or reboots or disallow using a particular desktop or application? Of course not, because Linux (and other open source software) is about *freedom*. Yes, it **could** happen and it could be forked, blah, blah, blah but it never would because it's thinking that's alien to the ways of open source. Open source software doesn't push obfuscated file formats, attempt to prohibit plugins or addons, intentionally seek to remove customization, etc. One reason people use open source software is because it's *open* - they can change it. In this case, the developer went **out of their way to make it harder for the end user to do what they wanted**. This isn't about asking an author to write code to add some feature. This is about the author writing code simply to make someone else's life miserable. That's not the open source way, nor is it the Python way. You're forgetting what the "B" stands for in BDFL. 
Sure, but there's things that need regex, and there's things you could just do yourself. An analogy would be that elevators are made for taking you to different floors, but you wouldn't use it to go up one flight of stairs if you didn't need to.
A shame improved readability took a back seat then. I‚Äôll defend an architectural decision to blacklist bad input but never pass on opportunity for nicer error messages.
I thought you said don‚Äôt ever triple quote. My bad, you said not to use triple *single* quote for multi line. 
There is no one "good" colormap, as it depends on your application. "Viridis" is a good default though, and the matplotlib guys who made/implemented it have a [good video explaining why](https://www.youtube.com/watch?v=xAoljeRJ3lU). However, "jet" is universally awful.
Not by default. I use vim daily, but trying to enable it just now (with `breakindent`) it didn't seem to work very well. Good indentation is difficult (http://journal.stuffwithstuff.com/2015/09/08/the-hardest-program-ive-ever-written/).
Oops, sorry I put this in the wrong subreddit. I'll put this in /r/learnpython!
Yes, but developers going out of their way to write code to stymie end users is wrong. Imagine a Linux distro that implemented forced updates and reboots a la Windows 10 and then said it was fine because you can remove the code yourself. The bigger point is that it goes against the idea of freedom inherent in Stallman's vision of open source. 
 s1 = "So the example I just showed is exactly the type\ of string I am dealing with, I basically want remove\ everything that is outside {data I want to keep} A\ regex solution would be ideal, but anything is welcome." def kept_string(s1=s1): g1 = s1.partition("{")[2] g2 = g1.partition("}")[0] return g2 # maybe? 
It certainly is what open source means - feel free to ask Richard Stallman about the "freedom" part of free software. I don't think he'd be supportive of a developer going out of their way to write code to stymie its users from being able to do what they wanted. Heck, not being able to do what he wanted with a printer driver was what led Stallman to open source in the first place. Heck, he created sudo because he didn't even believe in the concept of root access on a system and that every user should be allowed to do whatever they wanted! You don't believe open source has anything to do with freedom? You see no philosophical differences in the design of Linux and Windows 10? In Android vs. iOS?
For starters, you need to make sure that you close your webdriver object once you are done using it (at the end of your script). You can do this by using "browser.quit()" in your case. If this doesn't fix the problem then I would try making sure that the chromedriver executable also has it's path set in the system path, as I faced a similar problem when I used selenium and this helped.
No, this is Udemy; *most* courses are going under 10 bucks atm every moment and, if they're not, they will be a few moments from now. Also, the link you provided is a linksynergy referral link (spam) nightmare. To anyone curious to check things out but would rather not navigate the spam maelstrom, here's a direct link: https://www.udemy.com/the-complete-python-web-course-learn-by-building-8-apps
Sorry I wasn't trying to imply that one only sees luminance -- but what you percieve and a straight reading of RGB values are rather different. Luminance matters to human perception, and if you get the luminance non-uniform on a color scale that will have a significant impact on how people percieve it.
uhhh Stallman doesn't get to dictate what freedom means LMAO 
That is a very smart idea, i will definitely do that, thank you!!
it should, to an extent it really should 
Everyone has an obligation to not go out of their way to stymie end users of their software. The author spent time writing additional code just to make other people's lives harder. That go against the spirit of open source, which is freedom. It's as alien to open source as forced updates and reboots are to Linux. 
Well I didn't understand all that so I guess you guys and all these down votes win. The artery slide was especially unconvincing that jet is so awful but I don't think he made the presentation to convince one about jet. None of these other options seem clearly superior without the color blindness or bw printing factor.
You think talking about the spirit of freedom inherent in open source is one of the most nonsensical comments ever to appear on Reddit? What subreddits do you read? Stallman did create the concept of open source, and it was about the freedom of end users - that control rested with those USING the software, NOT WITH THOSE WRITING IT. Yet you're telling me that I don't know what open source means and don't understand it. I know enough about the history of open source to understand the role that freedom plays in its philosophy. I also know enough about software design to know that writing additional lines of code to put roadblocks in the way of end users is wasted time and counterproductive. 
&gt;Either way it sounds like you need to abstract the GUI from the backend, so a good starting exercise might just be getting to the point you can run the existing front end in one process and the logic in another on the same machine, My own hesitance to do just this was my biggest road block. I was determined to do it all or nothing and that made me give up quite a few times. Once I got on board the [KISS](https://en.wikipedia.org/wiki/KISS_principle) train and wrote the logic code (with terminal input where needed), made sure it worked as intended and THEN designed the front end separately, it was easy/easier to connect the proverbial dots and make the front end work together with the back end.
I was under the impression Py 3.7 has fixed at least some of that. 
Yeah, and while it is generally advised against, especially in production code, you *can* even do something like the following: foo = 4 if bar in list else 5 if bar in list2 else 6 if bar in list3 else 7 if bar in list4 else 'bar not found' Don't forget that you could even mix list comprehensions/generators/lambdas/etc. in there. Just don't forget the zen of Python: &gt;&gt;&gt; import this The Zen of Python, by Tim Peters Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those!
You don't really understand the concept of obligation when it comes to free software... As in there is none. There may be *consequences* for design decisions, but the *obligation* ends with the text of the licence.
You need to post hardware specs.
in the same vein if assign checks: if mo = re.search(...):
Encrypt the program?
Please consider that not everybody is familiar with every abbreviation.
I find developing GTK+ apps with PyGObject and Glade to be a great experience that everyone could start with, but I admit that it may be still be confusing for starters. A few resources that may help are: * The Python GTK+3 tutorial: https://python-gtk-3-tutorial.readthedocs.io/en/latest/ * The PyGObject manual: https://pygobject.readthedocs.io/en/latest/ * PyGObject API Reference: https://lazka.github.io/pgi-docs/#Gtk-3.0 Sadly I can't find any tutorial on Glade 3.22 (which has brought major changes to the UI), I may have to do a tutorial on it someday - but it's still relatively easy. Otherwise, if you find it too hard or want something as native-looking as possible outside of a GNOME desktop, wait a bit for what Qt will have to offer.
I welcome any kind of helper. But please, don't say "welcome to all levels". It's impossible to make a good training for all levels. Either you lose some, or you bore others. Either say that you are targetting dev begininer, dev but Python begining, or python dev wanted to get advanced. Even better if you can frame a topic like python for sysadmin/webdev/data analyst/students...
Hey, desmoulinmichel, just a quick heads-up: **begining** is actually spelled **beginning**. You can remember it by **double n before the -ing**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
If you update your `requirements.txt` file pycharm will pick that up and prompt to auto-install.
It took you 3 years to go from 0.4 to 0.5 :)
Perhaps, but usually not. That's why jet is a bad default.
Windows Server machine is 32 gig memory and a top-level processor. I have tried various server configurations on Amazon with various server os's. Windows server 2012, Windows Server 2016, etc. Various amounts of RAM and high processor speeds. I also checked with Amazon and they said my script was not maxing out Hardware
It does for open(), but I'm trying to find something like that for say, filedialog.askopenfilename()
http://effbot.org/tkinterbook/tkinter-file-dialogs.htm 
Now that unicode is out of the way please replace the datetime module with something sensible. 
Why the `[]`?
That's literally what mypy is for :P
You don't need to start a new line after function defs. `def f(): print('see'); print('?')` -- it's just that they can't be used as expressions. We have ternaries as well.
Have you tried to use a different GUI backend? I.e., ```python import matplotlib matplotlib.use('&lt;insert backend here&gt;') import matplotlib.pyplot as plt ``` where `&lt;insert backend here&gt;` should be replaced by one of the followign: TkAgg, WX, QTAgg, QT4Agg 
Taking away the rights of developers is antithetical to the concept of freedom. However, due to the generosity of Seaborn's developer and license you now have the FREEDOM to take the source code and make any modifications you want to it. Have fun and exert your freedoms. 
Yes, to protect the code. Unencrypt on launch. Something like that, im not really an expert when it comes to encryption.
Hm, check out Pypy for the "make python faster" part. Also, type annotations are *not* static type-checking -- you say you "think they should" make code run faster, but they seriously were designed *not* to do anything! They're simply visual aids for the human reader. Check out the Rational section of [their PEP](https://www.python.org/dev/peps/pep-0484/) for more info.
I mean you can totally go ahead and write `thing.__len__()` instead of `len(thing)` if it floats your boat
What do u think of maya-‚Äúthe datetimes for humans‚Äù?
Seaborn is just a set of a handful of convenience functions. Anything outside of the very narrow range of things it helps with, and most non-trivial styling, will require accessing the underlying matplotlib objects in some way. So the vast majority of things you want do in matplotlib cannot be done directly through seaborn.
In this case it isn't even that hard. Seaborn is just making it slightly easier to set matplotlib styles. It doesn't take away any existing matplotlib options, it just doesn't actively help you in this case.
&gt;but the obligation ends with the text of the licence. No, morality doesn't end with the text of a license. Just ask Linus Torvalds, who has gone on epic rants regarding the Linux kernel and "WE DO NOT BREAK USER SPACE". Software has all sorts of promises, explicit and implicit. I've never seen Linus argue on the kernel mailing list "We can do whatever we want because we have no legal obligation!" I really can't believe I need to convince people that surprising a user by preventing them from doing something they expected to be able to do is poor behavior and not something that should be done. The software author went out of their way to lay this trap. Apparently some people share the author's views so they're not going to consider the inappropriateness of trying to force one's opinions on end users. That's not what we do in the open source software field. Ask yourself why something is made open source in the first place. And if the design of the software itself runs counter to the reasons for choosing that license, it's a problem.
Pycharm will notify you that your module has not been imported by putting a wiggly line underneath it. If you move the cursor to it and hit Alt-Enter, you can choose to have it import it. This works well if the module name is the same as the package name, and less well if they differ.
&gt; Try Delphi some time (seriously, don't try Delphi): &gt; &gt; Var &gt; x : Array Of Integer; &gt; y: Array Of Integer; &gt; x and y are considered to be different types! (?!?) You need to define a new type... That's a feature. Ada is the same way. It prevents you from using data meant for one thing to be treated as something else. consider a function that takes 2 integer arrays, where one represents an array of speeds, while another represents an array of lengths. If you use typing correctly, you cannot pass the incorrect array as the wrong parameter or even mix values in the 2 arrays without explicit casting.
&gt; C++, JAVA and many others never had a problem making sure it was backwards compatible, C++ has had some breaking changes. The use of the 'auto' keyword and the addition of additional keywords can be problematic for old code.
You mean like Guido did with`reduce` in Python 3? Similarly, the numpy matrix class is being moved into a separate project in no small part to discourage people from using it. Open-source projects do this all the time, removing options or at least making them harder to access because they are considered to be harmful in most situations people would be inclined to use them. Usually some people will complain when this happens, but it happens all the time nonetheless.
You clearly haven't been paying attention to the uproar about systemd. In fact this is exactly what Linux distributions are all about. Deciding what drivers to build, what build options to set, what software to package, what compilers and versions to support, what libraries to provide and with what versions and options to support, etc. No Linux distribution supports everything its users ask it to support, except of course for distributions like Gentoo where users do everything themselves.
Gotcha, definitely sounds like the new ones could be frustrating for people that really like mac. What kind of dell do you have? 
Your comparison is a bit of a stretch. Imagine instead a Linux distro that installed the safe-rm wrapper by default (even for root) so that uninformed users couldn't accidentally `rm -rf /var/` or something else important. This is what the ban of jet essentially does. The seaborn developers decided that uninformed use of jet was something they didn't want to support.
The price is what really gets me but I can see the appeal to "just works" and same goes with their phones. I've never had a Mac or iPhone but it seems like a good option for a lot people that can afford em. 
That does jet look like?
Yeah, I like the Unix terminal and there's things about Linux I like but I don't think I could make a full switch to Linux. I've encountered too many issues with Linux (centOS, Ubuntu) to switch. 
Makes sense, I can see it as a great option depending on your needs and if your in software dev it's great option. How much of an issue is gaming on macs? Not enough developer support? 
A bit defensive bud? It's okay that people have different opinions than your own. I'm glad that you and the small group of people you interact with all love Mac, because your small sample size clearly means that I'm full of shit. Like I said, my experience with the people that I know using Mac regret the high price they paid for no apparent benefit over other options. However, that is just my experience with a small group of people using them. 
I think it would have been nice for it to just add 'Jet considered harmful'. No need to go into details why, and it still has that snide tone to it, and it'll encourage people who care enough to google it and educate themselves while everyone will just shrug and change color map. Ultimately I think it's better that they did things this way than to ignore jet - I'd never have learned about this otherwise.
Makes sense, I just found that the small number of people I know that have em regret not getting something else. But the "just works" is a big plus to most people. 
You're still missing the point. There is no obligation to do anything. There are de facto standards for what constitutes good stewardship of an open source project, there are consequences for not following them, there are any number of project specific examples of guidelines et cetera. They are not however "obligations" in any sense unless the developer of the software has undertaken any obligations on what they will provide to any potential users. There are countless projects in public repos with a free software licence file in them, and stating that the act of putting a license file in a public repos is enough to be considered some arbitrary obligation is nonsense and actually counter to the spirit of the licence by implying further limitations. You're talking about two very different concepts, and conflating the two is not useful, particularly concepts of "morality" when it comes to raising exceptions. Really? 
I think it's a good step forward that the python interpreter now looks upward in the directory tree from its own file to find its environment. This means that invoking the python contained in a virtualenv is as good as sourcing the activate script.
Lots of boiler plate for each file and configs
Gotta say I agree with you, although funny, I find this very obnoxious. I could easily see the people that wrote this preventing you from using English Units in favor of Metric. There are many cute ways to get their message across without forcing what they think is right down your throat.
Yes, I have. At first I thought the issues was with plt.show(), but instead things stop at first plt use. I did not try all options, just the popular ones read about (looks like there are over 20 backends). I'll go through the whole list. 
A GUI designer/code development environment that looks like Visual Basic, and WORKS. There are a lot of wanna-be things like that out there, but nothing that actually works as well as VB's.
Yeah, I think a lot of people have that experience with Linux. That's why Mac OS X is great. You get a lot of what is good about Linux, without all the crappy UI stuff.
Xps 13 
First Django web app. Needs to basically provide an interface for retrieving data from one SQL Server table and load new data to another. It should have some comboboxes for various options and some level of automation (like, I you select "red" from one combobox, then "star" would fill in for another combobox). I have no idea what to do about deployment, lol. Haven't gotten that far yet. Any tips on this are definitely appreciated! 
I'm kind of in the same boat. If you have any good resources that you can share (blogs, tutorials, maybe some boilerplate code), I'd be interested. One of my goals is to connect an MSSQL DB, too. 
yes
If your going for speed, you might want to think about C/C++. Python tends to be a bit slow and if microseconds count, any lag isn't ideal. Otherwise, if you start making money, please remember us little folk! 
Yeah here's a link that provides a big picture overview of Django's design pattern. https://djangobook.com/tutorials/django-overview/ Connecting to a database should not be too hard since MySQL has a client app for Windows. Where you might find problems is in Linux commands. I once tried to set up PostgreSQL purely on the Linux command line, and it was annoying trying to Google the right commands just to execute basic stuff. 
In my experience you just can‚Äôt be competitive (I like counter strike) on Mac because the games aren‚Äôt developed as actively and aren‚Äôt optimized like they are on windows. Dual-booting is easy enough though. That said, Apple is currently replacing my screen ($680) for free right now (got back from the store literally 20mins ago) on a four year old laptop, so I completely stand by my comment above! 
&gt; but instead things stop at first plt use. Hm, that sounds like the first plot shows fine, but then everything after that hangs. The only case where I've seen sth like that was when I forgot to close the first plot before plotting the second plot etc. I.e., usually the backend can only show one plot at the time.
Because they can't change the way the whole language handles unresolved names just to make dataclasses look a bit cleaner
It hangs on the plt.plot(\[1,2,3,4\]) line. Guess I'll stick with the Mac for now. 
That's really cool they did that for you! Is that like warranty or just something they do for their products? 
It‚Äôs several years out of warrantee, but the issue (screen deamination) is well-known for my model year of laptop and often when an issue is known like that they will fix it for free even after the warrantee. 
As the author of that post, I'd agree that jet is horrible for a continuous color scale. But it's actually a decent choice for a discrete color\-scale with fewer than a half dozen categories or so, and most jet\-hate you'll find out there (including my own) neglects to mention that.
You are an asshole no offence. This is why like a previous user said that some programmers are horrible to beginners. There was no need for that. 
Yeah, seems to be a common problem: https://www.pyimagesearch.com/2015/08/24/resolved-matplotlib-figures-not-showing-up-or-displaying/. Usually, I never use the GUI on my Linux machines because I usually end up wasting too much time for debugging and do plotting etc on macOS as well
Can you give an example of of such a website and such data? "Constantly" sounds like a denial of service attack. You'd do better with every 50 minutes plus or minus a small number of random minutes.
Scissors! ‚úå I win
Interestingly, you couldn't even create that incredibly illuminating and informative post if you were using seaborn, because it wouldn't allow you to make the jet plots.
Python cannot be converted to machine code because it's an interpreted language. When you package python to an exe you literally pack the python interpreter with it. If you were to make python convert to machine code it wouldn't really be python anymore.
That's mostly a non-issue in Python though. These are effectively identical: def inc(x): return x + 1 inc = lambda x: x + 1 The main differences? The def version can have more lines, is properly named, and can have annotations/documentation attached. In Python, if you have a lambda and want more than one line then just give it a name and put a small function definition prior. Fitting lots of stuff on one line isn't really the Python way.
[https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ](https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ) this guy helped me a lot. But i ended up buying a book ([https://www.amazon.ca/Machine\-Learning\-Dummies\-John\-Mueller/dp/1119245516](https://www.amazon.ca/Machine-Learning-Dummies-John-Mueller/dp/1119245516)) which helped me a lot more. After watching sentdex's series and reading the book I was able to create a chess NN, a TTT NN, a chat bot and a NN playing random arcade games. 
I haven't done anything with BeautifulSoup but I suspect the issue may be that you're just getting the raw html page without content loaded through JavaScript. Try using selenium instead.
r/learnpython
posted
There's a [r/Python Official Job Board](https://www.reddit.com/r/Python/comments/8bx6md/rpython_official_job_board/) post stickied to the very top of the front page of r/Python
&gt; Imagine a desktop Linux shipping with forced upgrades and reboots like Windows 10. It simply wouldn't happen. Yes, ultimately someone could fork code and change it, but it would be greeted with outrage and simply wouldn't happen in the first place. You're mixing up things. That thing you describe, if it ever happened, would at the distro level, and people *would* fork things up to fix this - or just use another distro (or derivative). There are plenty of things happening in the open-source world that is greeted with much outrage, but still happens (read, everything with Gnome 3 lol). People just fork or use other things, them move on. There plenty opinionated libraries and frameworks out there in pretty much all languages, I'm not sure what there is to get all up in arms about.
&gt; the def version can have more lines, ... have annotations attached If you don't think these are great things then you simply haven't written enough code setting callbacks to private library APIs. Having to write a def block prior and calling it the "python way" is circlejerking elitism. It is *janky* and at times *annoying/difficult to read*. There. I said it. Being able to write a function, regardless of the syntax, inline of another expression would be a life saver. Javascript lets you go one step further and actually name these functions (lambdas are by definition anonymous, but javascript functions themselves can be written inline and get hoisted to first class objects), but that's really less important.
I agree it is verbose, and it is one of the things from other languages that I miss in Python. I'm just saying that aside from appearance there would be no additional gain to having multiline lambdas, and few lambda syntax suggestions make any sense in the context of Python's syntax.
That's an excellent point, and I've modified the code. Thanks!
&gt; and few lambda syntax suggestions make any sense in the context of Python's syntax. You can't say that reasonably. It doesn't make sense. Not just for lambdas, for anything. Replace lambda with literally anything and that is a very harmful blanket statement. The current syntax doesn't nor should it ever put requirements on new syntax bar the fact that the new syntax addition should be as backwards compatible as possible. The gain, whether you believe it or not, would be in readability, which is extremely important, and in actual time. Sure temporarily creating and then calling a callback function is barely anything in terms of clock time however if this is a massive scale system / data pipeline, it adds up pretty quickly. Not to mention-- if you don't like it then feel free not to use any addition that is created. It's like people freaking out over assignment expressions-- don't use them? Then a few white knights went on and on about how it would be more difficult for beginners-- as if they can somehow know that for a fact, and can tell the future.
I'm referring to how Python handles blocks. Creating a new block partway through an expression is not something done for anything else in Python, although there have been some suggestions of ways to incorporate it cleanly. Also I acknowledged the readability issue, you didn't need to repeat it. And overall you don't need to be so aggressive.
Didn't mean to be aggressive, sorry, just repeated because I thought you misunderstood my point
Yes, you are visualizing the third variable as a function of the other two. If you see additional features that aren't in the function, then they are artifacts. 
Yeah I do understand that the extra boilerplate in this case does decrease the readability. I like Python, but I do recognise that it isn't perfect and could be improved.
You run your unit test suite! You do have one right?
I'd suggest using the requests module altogether instead of this... If you still need to know, use a debugger and walk through to see what's going on more easily
Yes, or something what PHP7 has: name = article.author.name ?? None 
 l = 'abc\ndef\nghi' print(l.split('\n'))
Pendulum?
Probably a good test is to take a project you did in python and implement it in c++. Take note of how many "okay well this works but.. thanks stackoverflow" sorta things you run into, write them down somewhere and start reading up. Even if it's something very simple it can give you an idea of whats involved with a c++ project. If you learn by doing then any time is a great time to start. Don't get discouraged though. Real programming languages don't always have a lot of the nice simple things python has. You'll take for granted things like `if "foo" in bar['data']` and end up having to write a lot of littler helper functions, or go about the logic differently.
string.split("\n")
I don't see where you're defining the url itself. 
Thanks mate! But why are you yelling?
Thanks!
People really don't like to admit python is slow.
`with open("sentences.txt") as readfile: lines = readfile.readlines() lines = [line.strip() for line in lines]`
Because that was the best name I could think of when I created my account and there is no change name option.
Haha I like it
Matplotlib has come a long way from \`jet\`, since version \`1.5\` and by default in version \`2.0\`. All thanks to [https://bids.github.io/colormap/](https://bids.github.io/colormap/)
Thank you!
The URL is an http GET request to the twitch api. I know for sure that it is correct
I couldn't remember if you could pass a { without escaping it so I just used the brackets because any characters you place in there are accepted as valid(i.e. [A-Z0-9a-z] or any subset of those). I just didn't want to look it up so I just put what he wanted in each of them haha.
How did you get the times of your bus?
That is nothing compared to what python did. 
I think "Python is slow" triggers people because it's often said in contexts where it really isn't (all that slow). Say, somebody wants to write bash scripts or a web app. For low-level computations, or high traffic workloads, pure Python is horrendously slow in comparison with C/C++. I often tried optimised Python pipelines vs a naive C++ version, and saw 10x speedups.
I think Tariq Rashid explains NN in a really good way! There are more talks on this site as well, check it out: http://pyvideo.org/pydata-london-2016/tariq-rashid-a-gentle-introduction-to-neural-networks-and-making-your-own-with-python.html
It did! If it ain't broken, don't fix it ;)
That does look nice, too!
Its done that for some time hasn't it?
The simple process you mention is almost certainly fine. 
You know, as I typed it out I thought maybe it really is just this simple. Sometimes I just need to talk it out :)
 req = Request(req_url).add_header('Client-ID', client_id) add_header returns None. You want to *call* add_header on req. req = Request(...) req.add_header() urllib.urlopen(req) 
Your solution seems fine to me. The simple solution is almost always the best. It may not be the fastest way of doing something, but if you're too concerned about performance, then you probably shouldn't be using Python anyway.
And you're a pathetic coward and a troll no offence.
\&gt;Python cannot be converted to machine code because it's an interpreted language. But it can be converted to C or C\+\+ which is what cython and nuitka does... this can be compiled with a standard compiler. I suppose the python interpreter frontloads or whatever it's called this machine code, but it is machine code no(?)
&gt; The incident that motivated the creation of open source was Richard Stallman not being able to do what he wanted with a printer driver. Not being able to *change* what they wanted. That I know, Stallman doesn't really care about the limitations of the original software-as-delivered as long as they can alter the software to suit their needs. &gt; Heck, he created sudo because he felt that every user on a system should be able to do anything they wanted too (!!!). Stallman wasn't involved in *sudo* and *sudo* doesn't allow what you're talking about. Their involvement in *su* was refusing to support the *wheel* group (the core mechanism through which *sudo* works). &gt; Stallman would tell you that software that arbitrarily seeks to force someone else's vision on you is antithetical to the spirit of open source software. They really would not give a single fuck, as long as they were able to modify the software to suit their own need. The *su* note above starts with Stallman literally patching a system's kernel to restore administrator access to all users at the MIT AI lab, their issue with Unix is that they "wouldn't know how to do that" hence their aversion to a wheel group in *su*.
Our city provides a convenient webpage which you can just send a request to and they send you json data about the busses
I'm currently learning Jose portillas course. It's very informative no complaints
Minor detail here but I think you mean *rows* of text. Just remember that columns hold up buildings, i.e., they are vertical. When I read your post I originally thought you wanted to make it go ['Civility Improve Way Reassonable', 'vicinity up building appearance', ...]
Run your script using [cProfile](https://docs.python.org/2/library/profile.html#module-cProfile) to see where exactly your bottleneck is. I'd also recommend not using python 2.7 if possible, and if RAM isn't an issue you could switch over to PyPy, which can be a drop in replacement of cPython.
Eat shit.
Get fired. Oh, too late. My bad.
Sweet! I'll check it out. I've connected with PYODBC. I think mssql+pyodbc/// could be a driver. Thanks! 
You sad pathetic little man.
thanks, that was it
You've used that one before. Grow up a little. Maybe then you'll be able to keep a job.
Check to see if this site provides the data you‚Äôre looking for as a web service. That would probably save you a lot of effort. 
port random projects to python3
Waht? no. this is just wrong you use the jetbrains toolbox app: https://www.jetbrains.com/toolbox/app/
You're trawling through all my old posts and you're telling me to grow up? Irony at its finest.
just refresh after you see that
You're doing great. Keep making good choices!
Someone please tell that to Node devs, thx
Github?
why? 
Is that still useful as everybody moved to systemd or datacenter-as-a-service platform ?
Two of my biggest gripes have been already mentioned: (asyncio and packaging) but I still have a vote, so here: - Remove a lot of bad stuff: 1. Remove f-strings. 2. Remove context-managers. 3. Remove dict-based objects. 4. all existing kinds of pretend-parallel programming (multiprocessing, threads, asyncio). Replace them with real parallelism abilities, whether based on process calculi or transactional model, or even just plain threads (but real), I don't care. Just do a pretend- version of. 5. Remove namespace packages, and all the mess related to creating modules from description. While we are here, remove all abilities to created modules dynamically.
Can people run an application from github ? I always saw it as a collaborative tool to work on coding but not actually run the code ? If it's possible to run an application from there I'll definitively have a look how it work !
You can't run it directly from github but you can download the documents and if it's python based then most computers will have python installed and it can be ran. 
I'd give it a try. :)
An exe running on an iPad? Now, what exactly do you wanna do? An exe is an Windows executable, therefore works in Windows. The .py file can run on any machine that has the python interpreter installed. Android devices use .apk files for native apps, and iOS devices run .ipa . You can also build a Progressive Web App that would work on all of the devices (web version). What kind of 'program' do you have? Is it a web app, does it have a GUI? Is it a command line program?
&gt; I have made a custom version of hangman on python using the tkinter GUI. 
It's one of my first times using python, so any kind of help would be really usefull. I apologize for any silly question.
Then you can only run it on machines, not on phones/tablets. 
Yeah I would like something like the Progressive Web App. This is a very small app and I would like some people from my family to access and use it easily. Since some will use a computer without any python interpreter or an Ipad, running it as a Progressive Web App it would be perfect. My program has a GUI made from Tkinter.
To build it as a PWA, you won't use tkinter, and you will have to remove the tkinter code. Take a look at Kivy platform for python, it may fit your need.
(pedant alert) readlines() doesn't scale too well, and is really unnecessary here: with open("sentences.txt") as readfile: lines = [line.strip() for line in readfile]
I think since 3.3 or 3.4. Virtualenvs are super mysterious except when you realize the activate script is just setting the PATH variable so that when you say `python` you run ~/experiments/envirn/venv/bin/python, or the equivalent pip.
Stuck using 2.7. Will give it a try tomorrow and report back. Thanks.
This is not the entire error message, it's just the last part of it, the part earlier in the error message should hint at what exactly failed. One guess: your certificate is somehow not readable. To tell you the truth, I don't really know how it works and why does it need a certificate. But the few times I had to work with Google's API, and, in particular with their Python code for their cloud services... well, put mildly, it's a very low quality code. The only thing it excels in is the unneeded complexity and inflexibility. So, good luck with that error, you will certainly need it! PS. When I ran into similar error, the web search suggested that Google's implementation of OAuth might be to blame. That library was updated several times since then, changed names and so on. I was then lucky to find that there was an alternative client implementation, that did not use Google's code, but you might not be as lucky. 
I added two new issues :)
You can use pyinstaller.
Hahahaha. Yes of course I have one. That's how the real world always works! *Shifty eyes*
Hey I'm not you! Thats already a great start.
Starting from the basic skeleton of: import sys try: # client code except requests.exceptions.ConnectionError as error: sys.exc_info() What `sys.exc_info` [gives you](https://docs.python.org/3/library/sys.html#sys.exc_info) is a tuple that will look like: 'Connection aborted'; the error instance; and a traceback if applicable, but for `requests.exceptions.ConnectionError`, since it [turns out to be a built\-in exception](http://docs.python-requests.org/en/master/_modules/requests/exceptions/#ConnectionError) that has some [special rules](https://docs.python.org/3/library/exceptions.html#OSError), there's no third element in this instance. From here, you should be able to compare on `type(sys.exc_info()[1])` to either `PermissionError` or `ConnectionError`: type(sys.exc_info()[1]) is PermissionError and handle based on that. It's a little under\-the\-hood, so preferably keep this isolated in a dark cellar that doesn't need to be entered often. :P Hope this helps! I can't test it fully on my local since I don't use Docker these days, but I managed to get up to the `type` call, so hopefully any finnickiness with the type comparison is fairly simple to figure out.
It's not harmful, either. Potentially helpful if you want to isolate out the container's system libraries.
 I'm guessing that part goes in a main function or at the end of the code, where the image is opened and passed to the deepdream() function. Have you used programming languages other than python? :)
Yes 3.X fixed many of the problems. In 2.x, the basic type `str()` defaults ASCII encoding. Tons of values implicit converts to `str` would fail.
I think that one of the easiest ways would be to use some kind of GUI automation library, which will simulate mouse moves and keyboard press. [PyAutoGUI](https://pyautogui.readthedocs.io/en/latest/) is one, but there's more to choose from. You can use it to find the position of the fields / buttons, so that it will work wherever the window will open.
I recently enrolled this course [Spark and Python for Big Data with PySpark](https://python-courses.net/2018/05/23/spark-and-python-for-big-data-with-pyspark/)
Thank you for the hint with sys.exc\_info(). When i print it out, it gives me a tuple with the class it comes form, the error type and a traceback object. Unfortunately the ConnectionError object in sys.exc\_info()\[1\] is not iterable. But many many thanks! :) 
usually, in programming you have two things: code, and data. Code operates on data. In non-OO programming, you keep them separated. In OO programming you put them together into an entity that you call object. objects are instances of classes. Classes describe the blueprint of your object, but they are abstract entities until you make them concrete with instantiation. Using OOP gives you a framework for modern software engineering techniques and reduction of complexity. There's plenty of tutorials online on how to use OOP, but my suggestion is try to find a simple problem and try implementing it in both procedural and OO style.
They could let you set a "jupyter breakpoint" and then give you inline access to the jupyter console and make it easy to click and copy code from the console to the text editor. This is basically how I write half of my code anyway, except I have to keep context switching between windows, which is annoying.
Finally re-started my options trading backtest framework after a long break. For anyone who trades options or interested in helping out, check out my repo: https://github.com/michaelchu/optopsy
Exactly this. Plus Seaborn allows you to put in your own custom palette and call it whatever you want. There is nothing to prevent anyone from putting jet right back in.
I just started learning python, I hope one day to be able to do this. It Seems great for me, thank you for sharing your work.
Why though?
For that specific case, most browsers can take a URL as a command line arguments and will automatically navigate to that page.
OOP is one of the early instances of "fashion programming". I.e. it is not a real concept from computer science, it has never being formally defined. The best definition you can find would be some kind of a pamphlet / manifesto or a marketing brochure that advertises this thing. Sometimes it compares it to something else, often also arbitrary undefined concept, sometimes to something that cannot possibly be related... But, a networking echo-chamber kind of effect made this concept popular, and ever since almost every language that also wanted to be popular advertised itself as object-oriented. Some would even go as far as to claim that they are the only true object-oriented languages, while others somehow missed the real and true meaning of object. And this is where it gets into "religious programming". Try telling a Rubby programmer that there might also be objects in C++, and get ready for an hour of heavily charged religious zealotry. Similar to how unsoundness of religious theories gives birth to various interpretations of the scripture, whenever it needs to adjust itself to the standards of modern life, OOP is also changing over time. Things that might have been generally accepted as must-have features of OOP 40 years ago are barely remembered today, but if you showed some of the modern languages, claiming to be object-oriented, to a programmer from the 70's, they might not recognize them as such. Seeing how there's no consensus about this subject, but still under the influence of the overwhelming majority of programmers who believe in OOP, some, typically more experienced programmers, would suggest that OOP has Buddha-like nature in that it cannot be reliably determined, so multifaceted, so inexplicable... This is what I'd call "occultism programming", or "mysticism programming". ---- But, under no circumstances you are not allowed to speak like that on a job interview. Even a suggestion of a possible nakedness of the king will give your job to the other guy. If you want to improve your coding, you need to have a job. Preferably, a programming job. And this is why you'd do better reading other answers in this thread. Choose an interpretation that makes you happy, or not as unhappy as other explanations.
I don‚Äôt intent to reuse the ‚ÄúHuman as class, Jason as instance‚Äù example. The reason recently I like to use it is because it‚Äôs really good for organizing my messy code, even it‚Äôs a 300 lines script, it would be much better to make everything in class. Take a more real example, while I‚Äôm scraping a website, ‚Äúclasses‚Äù make scraping a complete website so neat. I can‚Äôt imagine how messy it is if I‚Äôm just define tons of functions to do the same thing.
You might have better luck with MinGW on Linux. I was never able to compile Python modules with it, but it worked for Go programs.
I haven't installed pandas-datareader to test, but I'd assume it was the dividend paid by share at that given date. From the source code, it seems like they use the [GlobalQuote API](https://gist.github.com/hahnicity/45323026693cdde6a116) and use the `isD=true` parameter for dividends. Doing this manually (and removing some other parameters) for COKE Q1 2018 gives us the data [here](http://globalquote.morningstar.com/globalcomponent/RealtimeHistoricalStockData.ashx?ticker=COKE&amp;showVol=true&amp;dtype=his&amp;f=d&amp;range=2018-1-1|2018-3-31&amp;isD=true). It shows a dividend was announced 25.1 for 0.25 USD/share. Which is the same as the [dividend history](http://www.morningstar.com/stocks/xnas/coke/quote.html) at Morningstar.com shows. 
Ask your CEO about the anaconda guy?
Have you considered using jq instead of writing a whole Python script, if it's just JSON transformation?
I really liked how you commented your code. Great job!
Setting aside that I have no clue about the topic you mention, how would that have anything to do with the choice of technical solutions?
This guy went through the official django tutorial and put it on youtube. [https://youtu.be/I7WtoFivrS0](https://youtu.be/I7WtoFivrS0) It motivated me to push forward. Django assumes a lot and in my opinion the starting learning curve is high. Concerning ebooks, we are starting this at a bad time. All the ebooks I found were for the previous Django version. If you are interested in python ebooks generally, subscribe to the humble bundle newsletter.
can't tell if Poe...
&gt;All the ebooks I found were for the previous Django version True. I started the visual studio tutorial on it and I think it required version 1.9. If you make a dedicated project folder, you can setup a virtual environment and the install a specific version with version control. Via Pip, that command line code is something like: python -m pip install django==1.9 Worth a try if you're feeling adventurous! 
Requests exception base class subclasses IOError. In Python 3 that's just an alias to OSError, and you can use `error.errno` to differentiate root cause. Docs https://docs.python.org/3/library/exceptions.html and http://docs.python-requests.org/en/master/_modules/requests/exceptions/
Stream the bytes of the image, and then write those bytes to a file on your computer. Something like this: https://stackoverflow.com/questions/13137817/how-to-download-image-using-requests 
Urllib.request should do it. Use csv to import the urls and store the url from exel into a variable that you pass to urllib. Check out ‚Äúautomate the boring stuff‚Äù by no starch press. This book will tell you exactly how to do what you want. Can‚Äôt recommend it enough. It‚Äôs free online but I recommend you buy the book. It‚Äôs totally worth it. 
Okay, makes sense. But if i want to print(error.errno) it only gives me None...
Or if you can't/won't run the toolbox, you can do something like https://gist.github.com/alanjcastonguay/299400ba2cff4e7b3a460c06835036c3 to discover the URL yourself and fetch the installer binary with curl/wget/requests. 
Thank you! I thought maybe I was commenting too much but it's the only way future me will understand anything.
I have python on my android phone. Just gotta get an app.
Tkinter will not work even if you have python on your phone.
Probably not. I never use tkinter and don't write big apps for my phone.
You don't need to specify not brace if you make the pattern lazy. r'\{(.*?)\}'
This is only a part of it. I'm prototyping an API facade using AWS API Gateway + lambda. Writing lambda functions in python is much easier than Java (my other language) and I don't get node at all ;)
Describe how a toaster works
This should be posted in r/learnpython, not here. 
A great idea would be to see which color(s) appear most often within the photo and then give the text a border that contrasts well with it. Also, very well done! I love the Karl Marx one. üëå
There‚Äôs a Firefox extension called downthemall which sounds like it should be just the ticket for this. It can download all the images on a page or set of pages for you, has a lot of filtering options and stuff. It‚Äôs great. 
[removed]
if you are just simply change json data, the json module will be enough. if you want to manipulate strings in a great manner, regex will do. btw, you can use both. its programming.
Thanks for writing this up. Currently I just want to learn and apply Django as soon as possible. Django is the last peace of a puzzle of a 11 month Odyssey. I just want to get my codeing project finished and published so that I can fill in another final puzzle peace for an even larger project. It is amazing how much time and money you can save in a company setting with simple python projects. Having the knowledge is a step curve 
That's the biggest issue I have with it right now. Currently the script is calculating the complementary to the median color of each band (R,G,B). But sometimes it is still off, or at least it looks off. I might think of implementing it differently. Thanks!
cx\_freeze
Use a white font with thin black borders. Texts will be readable on any background.
The other user's suggestion is great, but you could also try calculating the median RGB for just the area of the picture in which your text will reside. 
Try without setting the window size as an argument, use selenium's mode of setting widow screen.
I already tryed all posible combination.When i run from script only the set of headless is ok.The problem is when i run it on my freezed script it will always show up.
Seems like a farce, you can build a REST API that has all the methods, then just build a Javascript client that consumes the REST API. But then at that point, you could have just built it in Javascript.
Doesn't matter if frozen or not, have you tried it simple, like just going to google.com and printing the title with headless? Just make a simple script that runs chromedriver headless and goes to google.com and prints the title.
Sure i did , Its weird how headless works on script but not in exe created of the same script
Like I said, write a simple script that goes to google.com and prints the title, and only use the headless argument.
 print (error.__dict__) to get a view of it's members
Dit it , still same problem
oh yeah. tricky to know what `main()` means without "this is the main call" to help you.
Strange. You're using cxfreeze to compile it tot exe right? Have you tried pyinstaller? Never had any problem with it..
If your daemon is started by systemd then you probably won't need this module -- systemd will take care of running the daemon in the background. However, that requires that you provide and install the necessary systemd configuration files for your unit. This means, for example, that you cannot simply distribute your daemon via `pip`.
yep, thats all it is. I've been able to do that since mid 2.7, course 3 was already out.
So I have been using request\-futures, which is a thin wrapper around requests so it uses concurrent.futures, for the time being for a client, how does this differ? Performance? Implementation? Does the API aim to be easier to use? More flexible? AFAIK, using aiohttp doesn't do anything special versus using concurrent.futures in the standard library. aiohttp \*is\* a good foundation to build on for a server, but for a client it doesn't seem to add anything. You can use the syntax \`await future\` just the same via the concurrent.futures lib.
Why should we isolate things in containers? O.o
I recently evaluated PyPy, and didn't have a test suite to help (... doing this is not recommended, and convinced me that we needed a test suite). PyPy will run pure python code nearly exactly the same as CPython with a few differences, that don't seem to be documented. For instance, file operations that take strings like open(), require actual strings to be given to them. Giving them something that stringifies like PosixPath objects will fail. The various changes to the STD\-lib are somewhat like that\-\-\-only accepting scalars where the std\-lib said it needed a scalar, and doing no type\-coersion. Anything that uses c\-extensions will fail. If it uses Cython, it \*may\* work. Here's a start on what you'll need to look out for in your own code: [http://cython.readthedocs.io/en/latest/src/userguide/pypy.html](http://cython.readthedocs.io/en/latest/src/userguide/pypy.html) If it uses ctypes, it will work. Major libraries that use c\-extensions have compatibility\-\-\-like psycopg2, numba, etc. Beyond that, everything just works.
Sorry bro i was confused by much hours of coding Xd, the browser was headless , i was talking about console showing up.I will look the selenium source code and i think i will fix this.Thx for your time.
I agree with you, no clue why everyone is downvoting this.
This. It's the first rule of meme/motivational pic creation. White letters, black outline. Nearly 100% reliable.
The ConnectionError object has no dict attribute.
Hi I just tried downthemall but I faced the following problems. First, it only downloads the thumbnails and not full sized images. And second I could only downloads images on that page and could not find any option that lets me download from a set of pages. If you are able to do both of those, could you let me know how to do it? 
I've also wanted to make something that could go both synchronous and asynchronous way. The most important, I think, is to have a Request class that can do thinks in both sync and async way after the instantiation of it. I like your take. 
I'm sure that at least theortically asyncio concurrency should be superior to having to create threads, but indeed in practice it will most likely not matter so much for client libs.
On pyinstaller you have to use the --no-console flag when compiling. 
delicate newbs.
Hi. Thank you for your reply. But can it download multiple full sized images from the thumbnails for multiple URLs/search terms? Downloading full sized images from thumbnails for one page is not a problem for me. I want to automate the downloading full sized images on a page for hundreds of URLs. I have edited the main post again to state this better. Sorry for not being clearer earlier. Please have a look at the original post and let me know if I can do it using the method you recommended. 
I think you'll find that Taylor Swift is a major proponent of Hitler.
I disagree. OP's comments are way over the top. If they **don't add information**, they're just more noise while reading the code.
aiohttp won't break a sweat even with 1000+ concurrent requests, and that too with just one thread. I think, you should try both methods and compare performance of both. With concurrent.futures, both memory and cpu usage is pretty high, once you increase number of workers more than 10 i.e. (10 concurrent requests at a time).
I think it's quite tricky to find a middle point between pretty and useful (is it pretty if it's not consistent?). But I'm still learning, so I'll take your input and try to apply it to my next script. Thanks!
Thanks, and yes that separate Request class, it allows to use almost any lib with it, including popular requests or even pycurl. I'm thinking adding pycurl support in future.
I find your logic to be sound.
**Use** a voice interface in three minutes with PORCUPINE *
# upvotes comment I agreed and upvoted this comment
It only takes a minute to set up and it makes your container feel more homey.
Why use instead of build? You are actually building a model for it, no?
At least someone does, tough crowd.
Because there's a difference between the PyPI packages and the packages from your distribution, and you may prefer to use exclusively PyPI packages.
possible to mass unsubscribe?
I agree that some of the comments are not required, but personally I'd rather have too much information than not enough. Commenting code is a skill in itself, and OP is just getting started in Python, so your constructive criticism is great. They could be used to adding extra information in his C language projects. 
This program doesn't use your account to retrieve your subscriptions, but a file that you download on YouTube. So it can't interact with your account. However, you can delete locally the channel you don't want analyze.
With your code, C = "end='inception_3a/1x1'" What you probably want is frame = deepdream(net, img, end = C) modify C as needed
Cool script! Thanks for sharing A couple of issues with quote, lenght = getQuote(str(quote_author), language) # Split the quote in two equal parts, by words quoteL.append(" ".join(quote.rsplit(" ")[:lenght/2])) quoteL.append(" ".join(quote.rsplit(" ")[lenght/2:])) - it crashes for me if 'lenght' is odd -- 'lenght/2' needed to be rounded to 'int' for me - you are calling rsplit twice and dividing lenght by 2 twice. Just use intermediate variables and don't duplicate calculations - nitpick: 'lenght' is a typo - you want 'length'. 
1. Get familiar with looping in python. 2. Use a library such as xlrd to read data from your excel file. 3. For each query: 1. Use a library like requests to get the image results. 2. Use a library like beautifulsoup to parse those results into a list of images in which you're interested. 3. For each image: 1. Use a library like requests to stream the bytes of the image and write those bytes to a file on your computer. You're going to have to write your own program; if you need more help than this, try /r/learnpython.
Tried, still not working. I noticed that this works: D = net frame = deepdream(D, img, end='inception_3a/1x1') But, of course, I'm not interested in the first argument but in the last. I don't know if this could help.
Too much is good.. until it gets out of date
Been a while since I used it - but I think it‚Äôs got a ‚Äúlinks‚Äù tab that should be able to get it. 
 C = 'inception_3a/1x1' frame = deepdream(net, img, end = C)
Curio is likely not standard library for the same reason requests or numpy are not standard libraries: not being in the standard libs allows the package authors more freedom to iterate faster. Standard library modules have a slow, limited release cadence.
import otherpeople effort = otherpeople.domyworkforme(procrastinated=True) Value Error: ‚Äúeffort is None‚Äù 
Check out r/learnpython
I'll just point out that if the language can be unambiguously parsed by the parser, the language can be unambiguously described to a blind person. 
This makes no sense though, every increase in indentation corresponds to a push. Every dedent corresponds to a pop (from the stack).
Solved with: A = 'inception_' B = '3a/1x1' C = A+B frame = deepdream(net, img, end = C) Thanks!
&gt;A gdb style debugger that can be ran over SSH would be great too. You mean pdb?
As a general rule, the code should explain *what* is done and *how*, while the comments should explain *why*. Of course, any rule has exceptions. For instance if some function has been rewritten to be more performant, then it may not be so clear anymore what it does. A what/how-comment may then be warranted (on top of the why-comment explaining the performance need). 
So what would you want instead of namespaced packages? What do you want instead of dict-based objects? Why the hate for context managers I find these to be one of Python's shining features)?
&gt; It's not something you see in the class signature and immediately know what's going on inside of the class, clearly no. Wait why not? I heavily use the abc module (and define my own abcs) and as a result find OOP in python much nicer than in Java.
The python package itself checks dependencies when its installed, and you can look at dependencies in code or on pypi. I don't think there's much value to having a 3rd party database. What would be very helpful, though, is turning pip._internal.req into its own package.
Are you sure PyPi shows you the dependencies without installation of the package? I‚Äôve never found anything that would show you the dependencies of all pip packages without installing the package itself first. Sorry I‚Äôm a little new to python and I‚Äôm trying to learn:)
There's also /r/learnpython if you haven't found it yet. There are a lot of reasons why you might want to know the dependencies, but why do *you* want to know the dependencies of a pip package?
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
I agree. But the standard library should offer a Curio-like way to do async. It far better than asyncio. The same for a Requests-like module. Who needs the basic fuctions gets them without external dependances.
You don't `need` to isolate things in a container. If you do find yourself using one though, then you don't need a virtualenv. The container is already doing what the virtualenv would do.
Hey, thanks for introducing me to /r/learnpython. This might sound really stupid but the reason I asked this question was that I‚Äôve heard a lot of python developers complain that they can‚Äôt look at the dependencies of a pip package without installing it. I was wondering if a database with all this information would solve that issue? Sorry if I sound like absolute nonsense.
pip show requests
Yes but you have to first install the package in order for that to work. You can‚Äôt know the dependencies without installing the whole package. Am I right?
And who is going to run your app at boot?
To me, it‚Äôs more logical to use something like poetry for your situation instead of creating environments inside docker, which is essentially an environment.
In that case, then, my suggestion would still be something other than a database... Perhaps what you should look into is contributing directly to `pip` to add a new command-line interface to query that package prior to installation. For example: `pip info &lt;package|path&gt;`
Alright thanks mate. Do you have any other ideas like projects that I could post on github that would make python programming easier? I‚Äôm trying to learn and contribute to the community at the same time.
Zubat? :))))
It is turing complete, it's only one level away from C and it's a full stack language.
Requirements and pop freeze solve this problem. Use the tools that they recommend vs making your own tools.
I think that there's two major warts with Python right now, but neither of them are really suitable to pound on for someone new: * packaging and distribution (pretty much every aspect) * performance (this varies widely, but equivalent C code averages about 7x faster than python) Also, for what it's worth, I think you should consider just focusing on getting to know python first and then fixing a pain point you have found along the way that no one has sufficiently solved yet. Contribute to that pain point alleviation.
I don't really understand your needs but you can try to use the libRosa library to import the wav file and process it. I hope it could help. 
This looks like homework. We don't do homework. Go to r/learnpython to gain a better understanding in specific areas in which you're having difficulty.
It's portable, it's relatively easy, and it does what I need it to do.
/r/TaydolfSwiftler
Here's a sneak peek of /r/TaydolfSwiftler using the [top posts](https://np.reddit.com/r/TaydolfSwiftler/top/?sort=top&amp;t=year) of the year! \#1: [Ooh not again](http://imgur.com/9WuHdLd) | [10 comments](https://np.reddit.com/r/TaydolfSwiftler/comments/6wd2n2/ooh_not_again/) \#2: [My people, for my cake day this is among my favorite posts of all time here.](https://i.imgur.com/j6mCgwB.jpg) | [7 comments](https://np.reddit.com/r/TaydolfSwiftler/comments/6wyl69/my_people_for_my_cake_day_this_is_among_my/) \#3: [Hitler on annexing the Sudetenland](https://i.redd.it/5xaovy8vrkbz.png) | [0 comments](https://np.reddit.com/r/TaydolfSwiftler/comments/6p9w99/hitler_on_annexing_the_sudetenland/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
another pythonic way is to name variables not in camelCase but_with_underscores
Hi, A great rule for comments is they should explain why not what is happening. Most of the time the code should explain itself so you won't need them. Cheers S
Is this paid for? 
I never asked nor expected anyone to do my homework. As this isn‚Äôt homework. This is my final project for Udacity where I code my own quiz in python. However, I moved my post to your area of recommendation. Thank you for the help.
Then you need to convey indentation level delta's, not indentation level absolutes. Keep in mind, the human mind only holds so much context, and the eye usually performs a huge amount of parallel processing and interpretive/associative work for us. Every bit of work we take away from the eye and give to the active cognitive load reducesbour cognitive capacity for other parts of the problem.
&gt; Then you need to convey indentation level delta's Sure but that's not too hard. A screen reader for code is already nonstandard, having it track indentation level is trivial.
good idea and good mashup of packages.. great job!
Click on the light bulb that shows up when you put your cursor on the swuiggly line indicating that the package hasn‚Äôt been installed. There you‚Äôll see an option to import the package. Just click on that and bam! It‚Äôs installed!
Oh, it's a final project! Well, in that case...
Seems fun, plotdevice uses with statements in a similar way. PyCairo is fine for based artwork - speed can be a bit of an issue, though there is an OpenGL backend you can compile and try. If you're short on ideas you could always try porting some examples from other creative coding tools.
What do you mean? No, udemy or the course instructor is not paying for this.
Do you mind sharing it?
The merits of dynamically vs statically types languages is one of the oldest debates in PL design. There are virtually infinite articles and blog posts arguing for either side. I use python because it's simple, terse, and fast enough for most projects. I can typically get a prototype working faster with python than with other languages. I feel productive using it, especially with things like list comprehensions, generators, ranges, etc. Python packs a punch while still being incredibly readable. I also enjoy writing cpp or rust, particularly if I'm collaborating with others. But I generally find python to be the path of least resistance for most projects.
I like the idea! But to trade options succesfully, don't you need to create an trigger in the stock price to use options to hedge or?
I do not seek answer I seek guidance. I thought this community would be more accepting or helpful. Instead of being welcomed with open arms I was met with defensiveness and hostility. For what reasons I do not know.
It's the only programming language i know :)
Yeah, this subreddit is getting spammed with shit posts from this website.
It looks like you haven't added the path to python to your environment variables. Add it and try again.
Head over to /r/learnpython, but also make sure you ask a specific question. Even if it wasn't against the rules, no one could help you because we have no idea what problem you're trying to solve or what issues you're running into. Are you even allowed to be polling an internet forum for assistance on your final project?
Hey, wow! I didn't expect so much feedback on my shitty script. I'm loving all your input and will use it for the future. As far as commenting goes, you're all abosolutely right, I have commented this code too much, and I am aware of it. In general I try to follow all the rules that you all have recommended (explain why not what, comment only what is not self explanatory) but I don't generally comment enough (and I'm critized for it) so I guess I tried to compensate this time and I overdid it. When I have some time, I'll try and fix all the bugs you've found and delete some of the obvious comments. Thank you all!
Perhaps you can also post it to r/python
 I did not experience the crash you're talking about but I'll look into it. You're right about those two lines, they'll get fixed. And yep... That's a massive typo.
&gt;8 That's just functional programming. While I was testing the program it kept crashing because I forgot to enter a language, but that was just a quick dirty fix, not the ideal. Thanks for the input!
Yes, we can use the entirety of the internet. This is for Udacity. I couldn‚Äôt ask specific questions because I posted the link and couldn‚Äôt add text. Life Lesson learned forever. I‚Äôll figure it out myself thanks everyone.
This probably comes from programming microcontrollers, where memory space and computing time are important so dependencies are frown upon. I should definetly change my mind about that. Thank you!
I hope the lesson you learned forever was to read the sidebar.
I thought the latest version on Windows does that by default... Also to add: include that entire folder (Python36-32/bin)
request-futures is the shit, just found it recently.
You might want to take a look at [poetry](https://github.com/sdispater/poetry). For instance, the `poetry debug:resolve my-package` shows the dependency of a given package. Note that it does this without installing anything. poetry debug:resolve requests Resolving dependencies... (1.0s) Resolution results: - certifi (2018.4.16) - chardet (3.0.4) - idna (2.6) - urllib3 (1.22) - requests (2.18.4) Disclaimer: I am the author of poetry
Yes, obi-wan.
Working on a simple notes application that supports markdown. I‚Äôm making it as simple as it can get and I‚Äôm using tkinter. 
&gt; What's the argument to not have static type checking There were many, especially at the time when Python was created. 1. Static types require a lot of upfront thinking about types and their relations. This often leads to APIs that are either inflexible or extremely complicated as well as force them to adhere to restrictions that are irrelevant to the problem you are trying to solve. See Java for reference (although it is complicated for many other reasons). Most of the time its nowhere near readability and simplicity of Python. 2. Static typing is far more verbose. Often this is just distracting noise. Look at some complicated domain-specific logic: if it takes 3 lines that describe the domain, it is easy to understand. The same thing inflated to a page of code to satisfy type checked may lead to more bugs, not less. 3. Most common problem with Python being dynamically typed: things fail at runtime due to some type error. Most common problem in many statically typed languages: things fail at runtime due to issues with handling nulls. All the costs of static typing were paid, yet the end result can be the same. 4. Repl. Also available when debugging. 5. Statically typed languages often make dealing with dynamic data terrible. Some of those may be less relevant today since programming languages made significant progress and added things like type inference, optionals, and better apis, but a lot of that progress was made because Python demonstrated how it can be done. &gt; Especially in the context of a large project Many large projects started from small ones, and would simply not exist - or were far worse - without some prototype written in Python. &gt; Do you see its dynamic type system as a benefit? Absolutely. At the prototyping stage. If you know what you want to build and how it should work, static typing can help a lot, if you don't, it is often needless limitation and distraction. Personally, I prefer statically typed languages, but only under certain conditions: 1. You have a good understanding of the domain and how the program should work - most likely because you did something similar before. 2. The language you are using to modern enough to provide Python level of expressiveness. 3. You have libraries that match Python equivalents in terms if usability, maturity, and expressiveness. Static typing alone without those features will be a limitation more than help.
It isn't, though. A container may have certain third party Python libraries preinstalled, and you may prefer to _avoid_ from using these libraries by creating a virtualenv within the container. Absolutely nothing is lost by doing it this way.
I think a flask server with a REST API is all you need for a basic game server, no need for tornado or twisted, flask is (in my opinion) the easiest to learn. Also, since you are creating a web server, I would recommend websockets instead of http requests, websockets will do the job better and probably easier, since they provide two-way, real time communication channels An example of that is the socketio library (available for JS and as an extension to flask) https://socket.io/ - official socketIO website https://github.com/miguelgrinberg/Flask-SocketIO - the socketIO flask extension, check out the "example" folder in the repo for a demo
This is pretty cool! Thank you! I might just be looking for something similar, but I need to study more to get to the point where I know if it can help :)
Excellent! &gt; I did not experience the crash you're talking about but I'll look into it. I got a length of '11' multiple times in a row, so it was trying to use an index of '5.5'.
There are containers that come with system interpreters that do not have third party libraries installed. Even Debian containers do not have any third party libraries installed.
await future is threaded vs OS level socket polling and interrupt signals for true async. The advantage is significantly increased speed and significantly reduced resource utilization, especially at scale.
You might want to check out [MicroPython](https://micropython.org) . I haven't used the MicroPython pyboard, but I listened to a [podcast](https://talkpython.fm/episodes/show/17/python-on-bare-metal-with-micropython) about it that was quite interesting. 
Sorry took so long. So lots of ways to actually handle it, however what I am looking for specifically would be ability to sync an ftp directory to a local directory. Checking either timestamp, or checksum. Options should include frequency, and whether to delete the file after transfer, or backing up the file after transfer. Also could add whether to transfer to remote, or local, or both. Ability to preview changes, and how to compare. 
Gotcha. 
Cool program. I have a couple suggestions. In keepRandomFile(current, new): You could probably re-write the last 2 loops as list comprehensions. There's also a function os.path.splitext which returns the extension. Also, do you expect to have file extensions that could be upper case? In getQuote(author, language = False):, what happens if the " is in the middle of the string? Another possible solution would be to replace " with nothing (ie, ''). Is there a reason that you get the cwd at the top and then reference it as a global throughout the code?
Basically you want to create a polling loop that will check the data every so often and then sleep. The sleep is importaint as you don't want to use up all your CPU power nor do you want to spam the crap out of the website you want info from. Make the interval configurable so you can increase or decrease if needed. 1 Minute intervals might be fine if you need to check it often. If not you might have intervals of several hours. If needed you could also go lower into milliseconds, but then you risk making too many calls. There are 2 ways to do the polling. The first way is to use a REST api call if the website supports one. You simply make the call every loop and update your data. This is the prefered way. If they have no REST api or call to get the data, the 2nd way is to just screen scrape. Make a call to get all the HTML from that URL and then parse through it and cut out the data you want from the page. This is a bit harder and more clumsy but works just fine. Hope that helps
\&gt; can I just use a requests\-based client with a Twisted server? Using async or Twisted does'nt change the http usage so any client can use any server as you would want.
&gt; Why would you want to defer errors that could be statically caught to runtime? I'm fine with either static or dynamically typed languages. Even in statically typed languages, we still have available an Object base class or void*. Not everything was truly static typed. Python's checking is good enough due to MyPy and PyCharms built in type checker. I use it since it has caught subtle bugs. I'm using Python for a couple projects since it's a great scripting language. It's much simpler to do them in Python rather than C, C++, etc.. It also allows me to easily use modules written in C and C++ as well. As Python progresses, it becomes a much more powerful and full featured language. I prefer 3.6+ and I don't care about backwards compatibility since the code isn't for general distribution. This makes it easy to use the newer features without caring about other people outside the project.
Yep! This can be implemented as a filter that triggers when the underlying passes a specific price point. The framework is designed to be extensible so this is definitely doable.
\- codedump \- no comparison to fuzzywuzzy, de\-facto standard for this
What have you tried so far?
To parse the source code I use bs4?
If you have some platform you would like i add, suggest. *(I already added Daylimotion.)* If you want to code yourself, I made a wiki where I explain how you can integrate a platform.
Hey, this is a great reply. Thanks for taking the time to write it. I think your points about upfront thinking/good understanding are definitely true and are points I had never previously considered. I think with languages like Haskell it's absolutely true that you can write beautifully expressive, simple code: *if* you have the right abstraction. As you said: stumbling upon that in a domain where you don't fully understand the problem/requirements is certainly no easy task.
Were you trying to run the program in Python 3? The division operator changed in Python 3. In Python 2 the division operator always returned an int when dividing ints, while in Python 3 they changed that to have an explicit operator (//), while single division (/) would return a float. Replace any single divisions of two integers (a/b) with two division signs (a//b) for the same functionality. It would also help if /u/Sruc could list the version of Python they used. I was unable to find which version from a quick search of the repo. 
I chose Python because I was a beginner and it was way better than C or Java studied at university. Now after some non-trivial projects, I am tired of runtime errors, not being able to deviler self-contained executables, and some other things. I don't have meaningful experience with compiled languages. I'm lurking into Nim, and have good fun with Lisp so far (which is both dynamically typed but with more type inference, hence catching more type errors) (and it has an excellent repl, which helps).
Readme shows git clone GitHub link....
Short answer: Python's garbage collector doesn't always do a good job of collecting garbage. Long answer: [This article](https://rushter.com/blog/python-garbage-collector/) might give you some tips and tricks on how to make it more efficient. In the past, I've had some thread references that Python refused to free() up, and instead of refactoring everything, I just spawned some of the processes into multiproc pools, which free everything after they're finished.
Too many workers could be your issue. Is there a time constraint to complete all of the requests? Any time I have run into memory issues like this it‚Äôs because of the amount of workers. 
taken*
Thank you. I imported my projects a week ago and I forgot to replace the link.
You can or just iterate through the html you get back line by line and pull out what you want. [https://www.crummy.com/software/BeautifulSoup/bs4/doc/](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)
&gt; Were you trying to run the program in Python 3? Yup! &gt; Replace any single divisions of two integers (a/b) with two division signs (a//b) for the same functionality. Good to know - thanks
You want r/learnpython On your way there, think about how many words are produced when the following string is split on a 'space' character: `hello worldhow are you?`
I'll give you a hint since this is an exam question: `filter` takes two parameters - the first is a function to evaluate if the element of the list should be filtered, and the second is the list itself. Then it returns an iterator which you can cast to a list by doing `list(filter(filter_function, list))`. Hope that gets you on the right track.
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
This post is better suited for r/learnpython and r/learnprogramming
Awesome thank you! Im just going over past exams so its fine :) 
oh yeah just noticed that! thanks. I will go there in the future. 
Can you share the code?
Thank you :) If you tell me about your use case I'll be happy to help out.
This may be a good case for using celery. You can set limits to the number of tasks handled by a single worker process. After the limit is reached, the process is terminated and another is created. This sort of bypasses Python's poor garbage collection.
NICE ONE
Thank you
If you want something reminiscent of jet, try `Spectral_r`. It is part of the [cbrewer2](http://colorbrewer2.org/). In fact, any of those are good and they are all in matplotlib by default
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
No, they don't. Many people want to see dependencies of a package they install before installing it, for a wide variety of security and licensing reasons.
Doesn't this usually show in the import list? You open the file and you look at the import top-of-the-line Imports list
Thank you! PM'ed :)
One of the many ways to start a flame war. * Static vs. Dynamic typing * Vim vs. Emacs * Sublime vs. Atom vs. VS Code * Tabs vs. spaces
The colons after logic statements seem un\-pythonic. Everything is already indented to make the logic block apparent. There is no need for that stupid colon. Remove the colon!
try r/learnpython. Your question clearly shows that you have not even tried to look up how to do this at all, a simple google search will give you more than enough information and tutorials on how to do this, good luck!
No, because you still have to install beforehand nor is this actually the case in 99% of packages.
https://stackoverflow.com/questions/37445540/memory-usage-with-concurrent-futures-threadpoolexecutor-in-python3
The text contrast of putting text over an image (with mixed levels) is not so great... Try adding a black border, that is thicker below the image. This will let you apply text with better contrast and mimic the look of the [inspirational posters like this](https://encrypted-tbn1.gstatic.com/shopping?q=tbn:ANd9GcSmM8dCEV-GnpbXuxUzAwbz8_0iRr9AxLvxYi76eqzIhCWC5m1wF38o4CJckJn2e9vHkrv2J1qc&amp;usqp=CAE)
Try using scrapy (https://scrapy.org/) it has all sorts of clever async callback stuff that should sort all that for you.
Ok... so it's the futures objects that are tying up your memory and the only way around it is to chunk you job, and then you'll need to delete the collection containing the futures in order for python to release the memory. Also the type of collection matters. In the following example, a set consumes 5x more memory. from concurrent.futures import ThreadPoolExecutor, as_completed import sys import time def test(i): # time.sleep(random.randint(1,5)//1000) return i tpe = ThreadPoolExecutor(max_workers=1000) futures = {tpe.submit(test, i) for i in range(100_000)} start_size = sys.getsizeof(futures) for future in as_completed(futures): print(future.result()) tpe.shutdown() for future in futures: del future print('deleted') time.sleep(10) print('size of futures:', start_size) print('end size', sys.getsizeof(futures)) del futures #this is where memory gets freed while True: time.sleep(1)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) and found these results which might be useful: 1. [Blog Engine with text/html syntax and file-based input](https://stackoverflow.com/questions/7991735/blog-engine-with-text-html-syntax-and-file-based-input) 2. [Reference - What does this regex mean?](https://stackoverflow.com/questions/22937618/reference-what-does-this-regex-mean/22944075#22944075) 3. [Running One Instance of Google App Engine with frontend in nodejs and backend server in python](https://stackoverflow.com/questions/50280880/running-one-instance-of-google-app-engine-with-frontend-in-nodejs-and-backend-se) Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
Pip freeze and requirements files do this
You can look in the source code for the deps. It's a major hassle though.
&gt; what's the use-case here? Why is it important to understand the dependencies? I'm some secure environments it's required.
What if you want specific package revisions stored indefinitely? the VENV can do that and it doesn't depend on a specific revision always being available from pip (or other tool)?. I'm thinking of a long term storage where the packages are in a VENV and that is checked into SCM. The docker container could be less restrictive such that updates to the base image are allowed. An examples would be the execution environment is Ubuntu 16.10 with whatever version of Python 3.5 is installed and updated by apt-get. However, the packages will remain the same until you explicitly update it and update your documentation.
Using just pip you have to pip downloadb&amp; install first before you can read requirements. He wants to see the requirements before he runs pip install.
A simple way to get requirements is to simply use the pip download command. E.g. . . . mkdir bokeh cd bokeh pip download bokeh Your bokeh directory will now contain everything that would be installed if you installed bokeh. Will include version numbers and everything. Yes, it is a bit round about but it is pretty thorough. Realistically you should at a minimum be using the `--user` flag as a minimum when installing stuff anyway, and probably preferably using virtual environments for most stuff that isn't a user or system tool type thing. For developers in particular--not using virtual environments is almost a sure way to end up with a system that is one big heaping mess. Not sure if it exists yet but it could be interesting to do a tool that uses `pip list`, 'pip list --user`, and `pip list --not-required` with some `pip show PACKAGE` parsing to show what all exists on a system and what is requiring what.
Oh, this is starting to sound like an XKCD cartoon. How would you even build something like that, surely this has been thought of no?
&gt; In some secure environments it's required. You'd still need to scrutinize the code for all dependencies, which is probably easiest on a sandboxed local system where you can run security-based validating tools against the code before adding it to a secure location.
You need to use below python packages: Request package to get your data from web Then beautiful soup to parse it Then Openpyxl to work with excel spreadsheet
I had thought poetry might actually provide this already. Great to see the innovation there.
Using known data (a manually built database), or PyPI's api. But the problem with the latter is for some stupid reason the PyPA doesn't treat requirements as metadata, even though they should.
I wonder if gwedo would agree to you, this might be a first but I have an itch that says smarter people than both of us already have this problems solved... Or you are solving a problem that nobody has.
Is this just a python binding to a dll/.so?
1) Security wasn't so important all those years ago when the cheese shop was designed. 2) do you really think it is not useful to know what's inside something before you commit to downloading it and doing science in it to see what is inside?
Check out r/learnpython
oh thanks
It's not that's it's not that important but I can read code so I know what most standard packages are. You would need to have some next level shit storm analytics on performance issues and possible bug dependencies and lots of other premtive strike info... that could be helpful... some sort of ds3 and conda for imports! That could be interesting I can read code so i just open the package and I can see what the dependencies are. F you can build that James Bond pre import code it might be helpful but I'm not seeing stack overflow complaining about this vs Msft taking over GitHub. That worries me.
It's nice to know what you can't use without having to check it first.
Me? I'm not solving anything. This problem has many solutions. However without a proper database or API all solutions are slower than needed (ex Poetry does this properly as long as a pyproject toml and toml lock are appropriately provided, though this requires either manual writing or an install by the initial developer) Also Guido van Rossum is not a member of the PyPA last I checked-- don't take BDFL *literally*. Even the smartest of people can do idiotic things-- one of which was the PyPA not treating install requirements as metadata that gets processed when uploaded to PyPI.
I can no longer tell if you're a troll or not.
No trolling just an aspie who lives each day as if it is happy taco Tuesday.
Porcupine has multiple bindings. Python is one of them. It also has bindings for Java and Swift. Would be nice if someone steps up and do a JS binding as well. You can checkout the project here: https://github.com/Picovoice/Porcupine
This is the third time [1][2] now you've posted this topic to r/Python. Each time it's from a seemingly different source, but they all redirect to the same article. Why not instead post a direct link to *your* content? Or just stop spamming (your post history is just littered with it) [1] [8i49j2/python_36_adds_new_secrets_module_for_robust](https://www.reddit.com/r/Python/comments/8i49j2/python_36_adds_new_secrets_module_for_robust/) [2] [71hhpv/python_36_adds_new_secrets_module_for_robust](https://www.reddit.com/r/Python/comments/71hhpv/python_36_adds_new_secrets_module_for_robust/)
Any package in any programming language could contain code that surreptitiously downloads and installs things without using the language's own dependency specification system. Which I guess means you're not allowed to use any programming languages :)
To throw another wrench into this idea, python's packaging is programmatic. You don't always know what package will be installed until you actually run the installation.
It is just one configuration file, not very complicated, and then it works. Moreover, systemd will restart your daemon automatically if it would crash for some reason. But you are right that root access is required.
That's true of any language.
This is excellent, I have a huge number of playlists and when videos get removed it's virtually impossible to find out what they were. So much good music lost.
It's mostly about accountability. There is very little certaincy in security. :-)
You can trade as a high or low frequency trader with algorithm bots/expert advisers. The high frequency folks prefer to be close to the trading floor, and shave millisecond off in other ways. But as a low frequency trader there is no need for any of that. It's all in the logic of your trading bot and how you analyzed the market, modeled it, trained it, and financial strategy. 
Have you tried running the same scraper serially? You might be surprised to find growth at the same ratio of memory/jobs. Are the scraping results taking more memory than you thought? Are there remaining references to objects required during the scrape that are not part of the results? Try calling gc.get_objects() and counting objects by their class. The nunber of instances of some classes may surprise you. 
&gt; what would you want instead of namespaced packages? Nothing. They are a completely extraneous feature. All instances if its use can be easily replaced by regular packages, and everything would work just fine. &gt; What do you want instead of dict-based objects? Nothing. The alternative already exists in Python, but for some reason the core devs keep two versions of objects, and the worst one is the default (the other one is based on slots). But, frankly, the whole implementation of objects is bad. I wouldn't mind rewriting it completely from the ground up. &gt; Why the hate for context managers Python declares itself an object-oriented language, and, on top of it it also has closures to keep track of the program state. Of the three ways, context managers are the worst (it is easy to lose state by mistake, like when you use a variable assigned to inside `with` block). Any interface that provides context managers could have been rewritten to use objects, and that would only make it safer and more transparent. The added benefit: smaller language, less junk in standard library, less indentation.
Ok I'm confused then, what's the difference between normal and namespaced packages then? Ok so you don't want python? If you find context managers to be a bad way of managing state, I'm awfully confused. For things like managing resources, they're better than anything else I've encountered, except maybe RIAA. They also *are* objects. And they allow cleaner and safer resource management. That's why they were initially created, so you couldn't forget to close files or databse connections.
Fighting with gradient boosted trees and how to manipulate my data in order to fit into that model system and get something meaningful out of it. Hopefully I'll be able to pair these results with one of the nlp models out there. 
I guess the problem is that you create too many `Future` objects in that dict comprehension in the 2nd line of your example. As those futures are resolved each object will store its result so as time goes it will consume more and more memory. You should limit the number of submitted tasks and also get rid of any object as you received it's result. If I were you I'd choose the classic producer-consumer pattern instead because you'd end up with something similar if you'd stick to `Futures` but implement some limiting algorithm.
I didn't choose Python. The company I work for chose it for me. Basically, technological choices in real world aren't done by you (the programmer). I say here "my company", but really, I mean that they were forced into using Python in some sense, but, probably less so than I was: their reasons were that Python is gaining traction, and so they will be able to find more and higher quality programmers, support, documentation, libraries etc. All of the above trumps the concerns about when to typecheck your program. Generally speaking, relative popularity of the language probably accounts for 80-90% of explanation of why any particular language is chosen to do any particular job. If languages were chosen on their own merits, this world would be a much, much different place. Now, to clear some confusion. If you ever took even an intro to theoretical CS, you would've known that there is no such thing as "dynamically typed languages", "statically typed languages" etc. All of this is some kind of marketing device which at some points in our very recent and very well forgotten history were used to sell one technology over another. The real question is what kind of type system the language has (whether there is a program to check it is just a question of time and writing such a program). Now, type systems are only useful (for typecheckers) if they are less expressive than the language itself. This is so because if they were more or equally expressive, it would make no sense to use them to aid in typchecking, (you wouldn't be able to prove any useful properties about them). So, practical type systems are necessarily more restrictive than what you can think of as a valid program. Some times you can work around those restrictions, but other times its... it'll make your eyes bleed. Here's some code I wrote in Go a while ago to help implement another so-called "dynamic" language: Prolog. I think this gives a good example of where more restrictive type system sucks: https://github.com/wvxvw/golog/blob/olegs/expose-native-objects/native/encoder.go#L97 (in a language like Python none of this would've been necessary). So, to slightly rephrase your question: why did Python designers chose not to implement a type-checker? -- Well, I'm not responsible for their actions, but on the face of it, it would seem like it wouldn't be a very useful addition to the language. The language was intended to be simple, and types are anything but simple. It was also intended for things like teaching kids to write for loops, and this particular feature made it appealing to low-tech people like system administrators, testers, accountants, scientists etc, whose main goal isn't to exercise in solving the riddles of C++ templates, but to accomplish some practical tasks, where programming plays a second fiddle. 
It would be a doubly-edged sword. On one hand, it would solve an existing problem, and even probably speed package downloads and installs. Which is a good thing. On the other hand, it would delay the real solution to dependency management hell which Python is today. So, I'm not sure I'd welcome such a project, but I can absolutely understand the motivation.
&gt;If you ever took even an intro to theoretical CS I'm a CS grad student, but thanks. Also, literally finished writing a *static* type checker for a langauge twp days ago. 
Thanks for the tip and the podcast! 
Today I learned about type hinting in Python. Check out mypy. It was developed at Dropbox, and Instagram also uses it. Facebook developed their own version. There's some good pycon videos about its usage, and also about how to gradually adopt it. It gives you the benefit of compile time checking without impacting performance - I think you might like it.
How about optional type checking? Then you can use typechecking in functions you want to catch bugs early in and for functions you feel safe about you can ignore it. Best of both worlds(?)
On Ubuntu you can install pycharm using `umake` from the repos. See its man page for details.
Perfect chance to use asyncio/aiohttp
Which is which case? 
Yes, this is possible with python. You don't even need excel. But you will need to know how the information is stored on the websites that you want to look up. Things you should look into: - web scraping (beautiful soup, scrapy) - excel manipulation with python 
Omg this is so cool I can build my own personal voice assistant from this Thanks for sharing this
What do uou mean by specific package revision? Are you talking about versions? As a rule of thumb, you shouldn‚Äôt store VENV in GIT, regardless of Docker usage. Secondly, Docker containers are meant to be constantly destroyed and recreated and you shouldn‚Äôt rely on their lifetimes. If you want venv to be persisted, then you might need to use volumes and that is still weird. Typically, when you pip freeze, PIP outputs versions of packages. This way containers will only use the provided versions (assuming this is what you mean by revisions).
I've never tried it, but I know of a project where I could really use it. Thanks!
http://lmgtfy.com/?q=python+nlp
Yeah, publishing is a pain in the ass. Most journals require your graphs to be readable in grayscale. As if finding good colormaps wasn‚Äôt already painfully enough... Will definitely check out viridis though...
I want to use as many workers as possible as it uses a rotating proxy which makes the scraping very slow.
/r/learnpython
Im using requests, but it's not the the request which is the problem. It's what happens after it has completed the scraping of a url.
Well for one you probably shouldn't be reading both files twice just to do the diff in two directions. Just build a set of the lines from each, close the files, then do your diffing.
Except if you install something in the container installing python libs at the system level, like gunicorn. Then you have the same problem as before. The point is, virtualenv are not a much of a hassle, they provide an extra guaranty that work cross plateform and in most case. Just use them.
Yes, and this makes sense if you look at the code. Do you fully understand what you got here? You build a `future_to_url ` dictionary that holds *all* the futures and then you call `shotdown()` on it that has an implicit wait (blocking), which you don't need inside the context manager. And why you loop over the dictionary and only print an empty string? Why do you even need futures if you don't use the result? tl;dr: you buffer all the results instead of streaming. I'd refactor it to not use the dictionary. Maybe change the function to return the url and result so you can do a simple submit/as_completed in a loop without the dictionary. Maybe refactor to use a Queue and manually manage some threads that don't return anything.
This is the only clear answer in the thread, for a rather obvious problem. Futures and the executors available from the standard library are good for easily distributing a modest amount of work, but as soon as the total number of tasks you want to execute balloons you have serious memory issues and none of the all-in-one tools available in the standard libraries will be suitable -- even the ones that sound like they will eventually just create a shitload of Future objects and call it a day. Producer/consumer patterns are the answer. The simplest version of this is generally a Queue with some reasonable size limit, some number of consumer threads that take tasks from the queue until they receive a shutdown signal (exiting your worker thread function when you receive an object to process from the queue that's actually None generally does the trick), starting those threads, then dumping all the tasks you want to complete into the queue from the main thread (or another thread, doesn't matter) followed by the shutdown signal once for each worker thread you started. Then all you need to do is call join() on each worker thread (or the queue, if you're using task_finished) and you're pretty much done.
Are you sure you are at the experience level where you would accurately cover a specific problem?
Maybe I could make JARVIS
Fun! When are you sharing it?
there is any way to get data from different URL's at once? i was thinking like that: for url in urls: response = requests.get(url) soup = BeautifulSoup(response.content, "html.parser") but im breaking my script,does any of you know how to do that ?
Embrace the collage experience :)
Study it: https://scrapy.org/
testing['instances'] not (testing)['instances'] 
Next time please post problem like this to r/learnpython In the line in which you initialize your values you are using , instead of ;
I think you should handle the content of the request: `testing=pingrequest.content` and you can't access a json stream as a dictionnary: `print (testing.json())` Also you have to access the 'instances' value before formatting it `print ( ('Heartbeat {}'.format(testing['instances']))` Think also to the new f string with pyhton 3.6 `print ( (f'Heartbeat {testing['instances']}')` Finally: Prefer to post these question in /r/learnpython
Alright, next time I will. Thanks for your reply!
bl=0,gr=0,re=0
&gt; But the point is, that I do not want to specify the regexp explicitly. But I will apply it only to urls, so there can be a restriction that the matching parts will always be delimited by backslashes Why exactly wouldn't you do it with regular expressions? This seems like a perfect use case for it.
Unless i'm mistaken, this is not a tool to "retrieve your youtube subscriptions or analyze them", but a complete subscription manager as an alternative of using the official Youtube one with an account. Am i mistaken? Or does this actually interact with your Youtube subscriptions in any way?
Awesome thank you I'm going to do some google research now!
Thanks this is exactly the head start I needed. I'm not familiar with any of these but am willing to learn.
Because the processed URLs will not be only from edition.cnn.com, but from many other websites.
tried to understand how to upload and sample the signal, but can't find an easy to understand article.
Very nice! So if I understand correctly Porcupine provides de capability to listen for a "Ok Google" type command. Does it also do the following step of listening for different commands like "turn off lights" or you would have to use a different library for that? 
Still, it's the perfect use case for regular expressions, the actual domain doesn't matter if you're just checking structure of urls.
True async is going to be more performant. I think that's what you're asking?
Are you willing to share that? It looks really awesome.
Thanks, it works!
Seconding import re
1. Yes you right the main goal of this project is to propose an alternative to the sub feed of youtube without need an account and it propose too some options to analyze your sub or a channels / playlists. 2. It doesn't interact with your account or your sub. This program simply take your subscriptions with a file you give it, it retrieve the informations of the latest videos and it write the informations in a file. You think I wrongly turned my presentation ?
hello and thanks a lot for your response. I might sound dumb but I don't know how to open the wav file using that library, could you please provide me with a clear example
Sample as it break it down into its samples for analysis, or sample as in playback at different pitches?
I was a little bit misleading in the initial post, which I have now corrected. I want to create a command line utility that can be run with additional parameters. As far as I understand it, pyinstaller doesn't work?
What is the difference between cx\_freeze and the [Freeze.py](https://Freeze.py) utility? I want to be able to run the program as a command line utility with parameters, will cx\_freeze let me do this?
it does work ad cli and it supports cython.
Mostly the submission and also the description on the repository, they give exactly the impression i described instead of what it really is
Yes, you can.
&gt; Sample as it break it down into its samples for analysis 
You will find all the information to start using the lib at this link : https://librosa.github.io/librosa/tutorial.html What you need is the libRosa.load function. 
You can use Scipy: &gt; Per the sources, scipy.io.wavfile.read(somefile) returns a tuple of two items: the first is the sampling rate in samples per second, the second is a numpy array with all the data read from the file. Looks pretty easy to use! from scipy.io import wavfile fs, data = wavfile.read('./output/audio.wav')
Its pretty trivial, actually. First, parse all urls using the urllib.parse module: from urllib import parse p1 = parse.urlparse(u1) p2 = parse.urlparse(u2) p3 = parse.urlparse(u3) Now, match their `scheme` and `netloc` parts to see if they belong to the same host: if p1.scheme == p2.scheme and p1.netloc == p2.scheme: pass Then, all you have to do is match the `path` parts depending on your pattern: if p1.path[:5].startswith(p2.path[:5]): pass Simple enough?
ok Thank you. I will try to improve the description
As long as you know python, you can figure that stuff out. What i recommend is just have play with idle shell and understand what code does.
I try to open it with that, but it gives an error that the file don't exist 
Does os.path.exists(wav_path) return true or false?
When comparing two URLs, split by / and note down the larger length. Then compare segments for equality (up to the smaller length) and add one to it. Divide this by the larger length (cast to float if using Python 2). As a result, you get 1 if only one segment differs. Depending on your tolerance needs, compare the final result against 1, 0.9, or adjust the value you add to the numerator as needed. Note that the https also gets split off and compared, as well as an empty string for the gap in //.
Theoretical CS and CS are not the same. Where did I say that languages are defined by semantics? I honestly think that this statement makes no sense / I cannot understand the intended meaning, so I cannot even really disagree with it, I simply don't know what it is about.
it gives nothing, I must be doing it wrong.
I try to save the file in .\miniconda3\lib\site-packages\scipy\io\, is that what I should do?
Just save the wav file to any arbitrary location on your PC and use the absolute path (i.e., including the "C:\" or "/home/User/" on Unix/OSX systems).
I feel the same about what you said. "introduction to theoretical CS" is generally a course on the nature of computing, i.e. Turing machines and complexity theory, i.e. unrelated to type systems.
I'm thinking about outsourcing this. It seems like for someone with coding experience this wouldn't be too much work. This is just a utility I'd like to have for my business, I don't have the time to learn a language. If you or anyone else is interested in some work, let me know your terms :)
Yes virtually everyone in this sub could do this. I don't say this meanly, but merely factually. As u/flipperdeflip already suggested, a basic python tutorial would be useful in your situation I believe. Also in general if you are looking for help, add as much as you can, including specific errors, etc. "Breaking my script" would not help one understand whats going wrong. Enjoy your beautiful soup, it really is a nice library. 
If what you‚Äôre talking about is web scraping, I‚Äôd look into BeautifulSoup
excellent course
You could look into flask [socket\-io](http://flask-socketio.readthedocs.io/en/latest/), however, this does presuppose you know python and the Flask library. It would be more helpful to better understand your use cases specifically. 
&gt; Ok I'm confused then, what's the difference between normal and namespaced packages then? Not "namespaced". Namespace packages. Namespace packages are a mechanism for multiple sub-packages of a single package to be distributed and installed separately. For example, say, you have `pytest` package, but you want to distribute package `pytest.html` optionally, conditioned on `pytest`, but other than that absolutely separately. One way to do this is to create a package called, say, `pytest-html` and in its `setup.py` check for `pytest` package being installed. Another way is to use namespace mechanism, when you essentially do the same thing, but call it differently. The difference will be in that how `setuptools` will process your package when installing it. And it will royally screw itself over when it does this, causing a lot of pain, while leaving you with nobody to blame, because both the namepsace package maintainer and the sub-package maintainer will be in denial, and `setuptools` simply doesn't care anymore--they have so many bugs. &gt; Ok so you don't want python? I would be fine with a very restricted and sanitized version of, but I would choose any Lisp or Prolog over Python any day. But there are also worse choices, like JavaScript, so on the larger scale it's more towards the middle. &gt; except maybe RIAA I think you meant RAII. Both are... well, ways to do this, but I don't have a yardstick to compare them. What I'm saying is that Python already has 3 different ways to do the same thing. I don't see why keep all of them instead of, say, improving one to work properly, and dropping the other two. &gt; And they allow cleaner and safer I'm sure you calculated cleanliness and safety, but you never shared your findings and techniques, and this is why I'm going to completely ignore this part of your argument as... well, it's not a real argument. &gt; That's why they were initially created That's a lie / confusion / wishful thinking. Python core developers, unlike yourself, never measured safety and cleanliness, they just heard about `with-` kind of macros from CL and decided to roll out their half-arsed version of them. Similar ideas were also (unsuccessfully) imported from CL into Basic, JavaScript and a bunch of other languages because people sometimes just feel creative and don't know where to apply their energy. The result is what it is.
I'd be very careful controlling critical infrastructure with NLP. Very, very, **very** careful.
But the structure is different for different websites, and if I would have like 1000 websites, that would mean to write 1000 regexps.
Sorry, I didn't explain myself fully. There will be many different patterns, since I will checks urls from many different websites.
And what then? Because the urls will be from many different websites, I can't write regexp for each one. It will be a part of a web crawler.
Hi! This type of algorithms are often made with low-level languages as C for performance, however sockets IO and file IO are so much easier in Python (in my opinion). So I wanted to see if it was possible to do something optimized despite the complexity of the algorithm. The goal was also to explain the whole algorithm in a "friendly" way. I'm really looking for feedback and additional tips on how I could improve my Python code, feel free to give me advises ! Thank you.
Flask is flexible and generally has a small learning curve. There are many tutorials on YouTube and github pages of example apps. 
C:\Users\a.wav that's the path, still can't access it.
 Conform to the standard style for the project you're working on Does your keyboard require shift for ' or " ? Do you have to type JSON a lot ? Did you come from a previous prog lang that needs double quotes? For guid(o)ance see PEP 20: """There should be one-- and preferably only one --obvious way to do it.""" These days I use black-pycharm and it just auto-formats my own code.
You need to state some constraints. All URL's will match the pattern ".*". So what are the minimum functional requirements? 
&gt; If you are about to ask a question, please consider r/learnpython or the learn python discord.
Well you pointed out there is a pattern. So pattern matching is the method. And regular expressions do that. Nobody said it was easy. Another example are email addresses. They can be very different as well, but there are regular expressions that identify them. And even an email address is quite simple to recognise die a human, the regular expression is not trivial. Makes you appreciate your brain!
How does this differ from currently available images? What tooling do you plan to use? What cloud provider are you planning on using? Are you doing this as a project for school? Or are you making this because your company needs it?
You may have to turn off user account control or run the python terminal as administrator.
this is a little bit of a fuzzy matching problem. you are looking that two urls have the same tokenized structure, that is, how many segments between slashes and the general nature of the elements between those slashes. so you first have to break up the URLs after the domain name on the slash. that's easy. Then, for each token, you have to classify them in the way you want to be able to compare. A good system here would be their numerical position in the list of tokens as well as a little bit of heuristics to identify their general role: `"`[`https://edition.cnn.com/2018/06/10/politics/trump-macron-european-union-china-trade/index.html`](https://edition.cnn.com/2018/06/10/politics/trump-macron-european-union-china-trade/index.html)`":` `(1, 'year')` `(2, 'month')` `(3, 'day')` `(4, 'text')` `(5, 'text')` `(6, 'webpage.html')` `"`[`https://edition.cnn.com/2018/06/11/football/world-cup-argentina-england-1986-diego-maradona/index.html`](https://edition.cnn.com/2018/06/11/football/world-cup-argentina-england-1986-diego-maradona/index.html)`":` `(1, 'year')` `(2, 'month')` `(3, 'day')` `(4, 'text')` `(5, 'text')` `(6, 'webpage.html')` `"`[`https://edition.cnn.com/specials/politics/congress-capitol-hill`](https://edition.cnn.com/specials/politics/congress-capitol-hill)`":` `(1, 'text')` `(2, 'text')` `(3, 'text')` to get at "year" I might say "int(token) \&gt; 1900 and int(token) \&lt; (currentyear \+ 5)", e.g. look for integers between 1900 and five years from now. Then the month I might say "if the previous token is "year" and 1 \&lt; int(token) \&lt;= 12", etc. then you have the lists of tokens, that's basically the "hash" of your URL. you can compare those directly to see that two URLs have the same structure.
So if I generate multiple `*.ppn` files and say throw it in a loop within my code, could I get it to detect multiple words? Also could I get it to detect a specific sequence of words within a single file? Like if I name the `*.ppn` file "Start Application" would it listen for that sequence of words specifically, or would I have to write some python code to check for the association? Also what is the size of the `*.ppn` file? Super cool library by the way. Definitely going to be playing around with it!
BeautifulSoup, Flask (or similar) and r/learnpython.
There are no libraries that I know of. The first steps are without a doubt parsing the URL with urlparse and splitting the path into components. What you do next depends on your needs. Would it be enough for you to tag the path components as ‚Äúnumber‚Äù, ‚Äúword‚Äù, and ‚Äúslug‚Äù? (/number/number/number/word/slug) This would be relatively easy. It gets more complex if you need more specific tags as you described (/year/month/day/category/slug). Maybe you can generate a mask first (/9999/99/99/xxxxx/xxx-xxxxx-xxx) and then identify patterns to derive useful tags (/date-components/word/slug). You can also start storing all the distinct ‚Äúwords‚Äù that you find and manually labeling them (‚Äúpolitics‚Äù -&gt; category). Don‚Äôt forget to include the fragment and the query params. Good luck!
Instead of writing one case for each site, write a set of catch-all expressions. Don‚Äôt specify things like the site domain, you can easily pull that from the expression. Just leave it down to a few handfuls of configurations that you need, and parse the data you get back carefully.
You are very welcome :)
Of course you can :) Give it a try and visit the GitHub page here: https://github.com/Picovoice/Porcupine If you face any issues or have questions feel free to open an issue on GitHub page
You could: * Split the url on /, as others have suggested * Convert each url part to its "shape": Uppercase letters \-\&gt; X, lowercase letters \-\&gt; x, digits \-\&gt; d, punctuation stays the same. This is a typical way to make a string more generic but still retain information about its pattern. The conversion is easy to do with `re.sub`. You could also use the Python package [spaCy](https://spacy.io/api/), but it seems like overkill for this. * Compare the shape of corresponding url parts using [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance) (number of character insertions, deletions, or substitutions required to turn one string into the other). You'd need to decide on a Levenshtein distance threshold for deciding whether parts are similar enough. There are several Python libraries that have Levenshtein distance (also called edit distance) functions, but you can also find examples of standalone code for it using Google. 
Good question. You can do both with Porcupine. It allows you to track multiple keywords at the same time. So you can track "OK Google" and other commands you have concurrently. Then, we it detects "OK Google" you can check what it detects right after which becomes your command. One thing to keep in mind is that the commands cannot be too long (think two words). But also we are making another library that allows you to do speech recognition and that can be used to do very long commands as well even proper conversational speech understanding. Happy to answer more questions about that :)
Sure you can and as a bonus it does not use extra CPU/memory for detecting multiple compared to single. It would look for things in the right order. You don't need to worry about that. The .ppn files are tiny. They are about 100 bytes each (depends on the word you are choosing). happy that you liked Porcupine :) Would love to hear more about things you are going to build with it. Cheers!
Hi, sounds similar to existing infrastructure as code tools, e. g. Terraform, ansible, puppet, vagrant, packer, all public cloud vendors, and so on.
&gt; I do not want to specify the regex So you want someone to do all the work for you, it sounds like. Guess who's going to be writing regular expressions this week?
[SequenceMatcher](https://docs.python.org/3.6/library/difflib.html) from difflib. [JellyFish](https://github.com/jamesturk/jellyfish) -- various string comparison algorithms [FuzzyWuzzy](https://github.com/seatgeek/fuzzywuzzy) -- Levenstein distance Since large portions of the url, like "trump-macron-european-union-china-trade" and "world-cup-argentina-england-1986-diego-maradona" may be different you'll probably need to expect a low threshold for a match. And you'll probably get a lot of false positives. You'll also need to decide whether hostname is part of the match.
[removed]
Yes, I meant versions. Since Docker containers are rebuilt regularly, is there a situation where an older package may not be available? If I'm calling out Pillow 4.1.1, will it always be available for PIP to install? That's my concern.
But can you write it, if the url is not known at the beginning? The url can be obtained dynamically by web crawling.
Pattern matching and a pipe operator would make the language significantly more expressive. 
Wow...that's really doing a disservice for users!
hey it finally worked! thanks a lot for your input. 
You're talking about matching text patterns. That's /exactly/ what regex is for. URLS have some format, and it may not be a singular regex that compares the entire URL.
I don't think that you're going to get a dynamically-typed language community to want static typing with type inference. Most of the of people that have used statically typed languages have used industry OOP languages that tend to have a poor implementation of static typing. 
&gt; That's /exactly/ what regex is for. Yes, if you know the text pattern beforehand. But for an unknown website, how do you know the pattern?
[removed]
Additionally don't just split the url by character. You can use urllib in the python standard library to get elements from the url
Got me... :) &lt;3
How does the computer? It can only do what you tell it. What is "a pattern"? Does the computer look for sets of 4 repeating bits? Well that doesn't make sense for text, but you said "pattern" and that's a pattern, so if the computer matched on that and nothing else, it still matched on a pattern and did what you asked. Does first-middle-last count? What if the delimiters are dots? What if they are multi-character URL escape sequenes? Do you want to split on those? Do only some of them matter? "Pattern" is ambiguous. You have to tell the computer what you're looking for. That's exactly what regex does.
The possibility of this happening is rare. gunicorn (which doesn't have any other dependencies) and other dependencies of your application are much less likely to clash, and if they do, that's a much tougher problem to handle (unless of course they are dependencies of separate processes, which can be moved to a virtualenv or container). What the article is saying is that you shouldn't introduce something for an issue you don't have, just on the pretense that you might have it in the future.
Sorry about for the delay was brought low by a mega-cold, enjoy! &gt;&gt; https://www.manning.com/books/exploring-data-with-python
Sorry about the delay was brought low by a mega-cold, enjoy! &gt;&gt; https://www.manning.com/books/exploring-data-with-python
Sorry for the delay was brought low by a mega-cold, enjoy! &gt;&gt; https://www.manning.com/books/exploring-data-with-python
Sorry for the delay was brought low by a mega-cold, enjoy! &gt;&gt; https://www.manning.com/books/exploring-data-with-python
Sorry about the delay was brought low by a mega-cold, enjoy! &gt;&gt; https://www.manning.com/books/exploring-data-with-python
The link is below, and if you go on the website and click the 'free content' tab there's even more great stuff on there :) https://www.manning.com/books/exploring-data-with-python
The link is below, and if you go on the website and click the 'free content' tab there's even more great stuff on there :) https://www.manning.com/books/exploring-data-with-python
Luckily, we have pep 343 to know that your last statement is entirely nonsense. And that I'm right. The stated reason for 343 is to supercede PEP 310, which was titled "reliable aquisition and release pairs". You're welcome to read PEP 310, 340, 343, and the mailing list threads cited in those. They wanted a safer way to manage resource aquisition. In fact, these peps never mention with-kind, which I also can't find any documentation of online, and never encountered in my (limited) use of common lisp. What macro form are you even talking about? As for why it's safer, quite simply a with block means you cannot forget to close a connection. This was a common enough error in other languages (and a common enough error in python when people don't use with) that the other form is error prone, and a with statement isn't. Therefore, it reduces errors.
Hey, zardeh, just a quick heads-up: **supercede** is actually spelled **supersede**. You can remember it by **ends with -sede**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
It is like this: let's pick up some random website, like https://www.yahoo.com. (but this is not known at the beginning). And I take a sport article, for example: https://sports.yahoo.com/dwyane-wade-lebron-think-point-115724346.html. I will determine somehow that this is an article (and not a category for example). So if I have the url I mentioned now, and then I get another url, for example: https://sports.yahoo.com/david-west-public-no-clue-120005884.html - I want my script to determine, that this url has the same pattern as that first url. But I don't know the pattern, since I don't know I will get urls from yahoo.com. But you can see by looking at it that the urls "are the same format". But there probably will be some fuzzy logic to determine this.
Thank you, yes I was looking for something like this. Just hoped there is already some library doing it. :-)
I'm working on a python program that predicts my friends response how he died in fortnite. It's kind of funny. 
You can just disregard the hostname then. Your statement makes it sound like you think you need to write one big regex which 1) is the opposite of what I explicitly stated earlier. 2) a single regex could use wildcards for the domain name, negating your concern about not knowing the hostname. 
Go to any deceased person's Wikipedia page, search for the word " is " and you'll find a bunch of reasons why this is a naive approach.
Yeah, lol and it won't change verbs to past tense... Exercises don't have to make perfect sense...
23 upvotes and no comments for paid online classes? Mhmhmh I love the smell of bots in the morning
What experience do you have with Python or with manipulating wav files? What kind of manipulating do you want to do? Does this have to be done in Python?
What do you mean by bumming out? The exact same code works out fine to me, with the function returning the correct, altered text. 
More low effort spam. Your account's lousy with it.
The code works, yes. I just depressed myself thinking about it. Not sure why I felt like sharing this.
first fix your code indentation, or perhaps link to a pastebin or gist somewhere where the code is
I will copy-paste another comment I made in this subreddit: &gt; Poetry never installs packages to determine the dependencies. It tries to rely as much as possible on the PyPI JSON API and if it can't it inspect the source distributions, without installing them, and if it's still unable to get them it stops since it means the module has been badly packaged. So, yeah, sometimes poetry needs to download the packages but never installs them and never executes `setup.py` since, to me, it's a security risk. Another reason for it is to enforce packaging and publishing Python packages properly.
Apologies, again I have no fucking clue wth is going through my head. This should have been obvious.
I completely understand your reasoning and approach. What about the situation where the dependencies are built at `setup.py` run-time based on environment?
The nazis just took the original concept and used it for themselves. Do the research and you'll realise. [https://en.wikipedia.org/wiki/Swastika](https://en.wikipedia.org/wiki/Swastika)
[removed]
I‚Äôm working on making a macro system for Python. I wanted to see if I could do it, and I got the basics working, but I really don‚Äôt think people *should* use it. The macros are invoked as type annotations, they‚Äôre picked up by a decorator, and the macros operate on the AST of the item they‚Äôre applied to. I plan to write a blog post once I implement a few more interesting applications of it.
When I enter ‚Äútools/optimizer/mac/x86_64/pv_porcupine_optimizer -r resources/ -p mac -o . -w ‚ÄúVancouver‚Äù in my terminal (MacOS 10.11.6) I get ‚Äúillegal instruction: 4‚Äù what does this mean?
&gt;this &gt;[th is] &gt;1. &gt;*(used to indicate a person, thing, idea, state, event, time, remark, etc., as present, near, just mentioned or pointed out, supposed to be understood, or by way of emphasis):* e.g **This is my coat.**
Here is the updated post. It describes my situation slightly better. [https://www.reddit.com/r/learnpython/comments/8qaioj/help\_aes\_encryption\_and\_image\_steganography/](https://www.reddit.com/r/learnpython/comments/8qaioj/help_aes_encryption_and_image_steganography/)
Ummm ... Is your CPU 64bit? Could you do me a big favor and open a GitHub issue? :) I much rather to deal with code-related issues there as it can help other devs as well. Thanks.
If it‚Äôs not necessary, then not. I don‚Äôt have a GitHub account. My mac is from 2007, so I don‚Äôt think that it is 64bit.
&gt;print (f'Heartbeat {testing\['instances'\]}') You should mix quotes, otherwise your example doesn't work: print (f"Heartbeat {testing\['instances'\]}") print (f'Heartbeat {testing\["instances"\]}')
Probably not me personally, no, but Typescript I feel like is a good example of a language that has taken off with static typing within a larger dynamic language community. Sure, it's just annotations, but the typing is extremely useful. And yeah, I would have thought the same 5-10 years ago, never would have dreamed I wanted static typing as a Python developer. But a robust typing system on top of a modern, flexible, dynamic language is pretty amazing.
OK. Could you try it with i386?
You can't use the `curses` module on Windows.
Where would I insert that in the command?
It's two snakes.
why I can't use it?
Because it does not support Windows.
This should no longer be a thing. [PEP 508](https://www.python.org/dev/peps/pep-0508/) is here to address this. You can define dependencies for specific environments without having to do it programmatically.
If I can't use it why there is a folder named 'Curses' on my Python\Python36-32\Lib
Back link bot.
Because that's how the build system works. 
like this: tools/optimizer/mac/i386/pv\_porcupine\_optimizer \-r resources/ \-p mac \-o . \-w "Vancouver"
is there an alternative curses module for windows?
It still gives me ‚Äúillegal instruction: 4‚Äù
[pdcurses](https://github.com/jmcb/python-pdcurses) is sort of that, but honestly, you're probably better off using a GUI framework.
soon I will, but for now I want to start from the basic. Thank you for answering my questions! :)
I only have some basic knowledge of python, basic knowledge about numpy, scipy and matplotlib, no knowledge with wav files. I have to find the impulse response of a room, I have a sine sweep sound file as the input signal, and a recorded signal as the output, and I want to extract the RI of the room. Yes it has to be done with python
If you want basic, curses is anything but that. It's an ancient library with a lot of issues.
Nice project!, btw my frontend knowledge is almost null, could you (or anyone) give me a simple learning path to start learn AnPyLar?, I mean should I learn some Angular first ?
Well a $1000 i7\1800x rig vs $35 Pi will be unlikely to yield a delta greater than 1% for most use cases. What does your code do? How long does it take to run ignoring the networking component. Are you doing a bit of simple arithmetic or a massive AI-like computation? Remember after a certain point there are no real gains to be made by spending more. So what does your code do? Also, you still haven't defined exactly what you mean by real-time to me? Seconds? Milliseconds? Sub-milliseconds? I really want to help but you have to answer my questions instead of just focusing on the least important bits. Remember, at a certain point just variance in network latency will overshadow code execution speed. Starting with a Pi is very unlikely to be a waste of money, and you could always find another use for it. 
The simplest way to solve the problem is to use https://phantomjscloud.com which allows you to create PDFs (or other image formats) of webpages via an HTTP API. 500 pages per day for free! For clarity, I have nothing to do with the company, but I do use their service as part of a production system and it has been consistently excellent. 
Python's just so easy to use! We do most of the heavy lifting in Tensorflow, the problem is keeping our GPUs at 100% utilization. We need to do the data processing in parallel to keep feeding the GPUs as they eat through the queues we've set up, and that's hard to do in Python. We're ending up writing a bunch of custom Tensorflow ops in C++ so we can do everything in-graph instead. 
[removed]
The most reliable way is to use Chrome‚Äôs print to pdf functionality. Take a look here [https://github.com/GoogleChrome/puppeteer](https://github.com/GoogleChrome/puppeteer)
 for root, folder, files in os.walk("/"): for local_file in files: print(local_file) # dog.txt print(os.path.join(root, local_file)) # /users/you/dog.txt Does no-one read the fucking sidebar and use /r/learnpython for this like it says? No-wonder you're having trouble with Python, you have to read the docs for the [os module](https://docs.python.org/3/library/os.html#os.walk).
 Thanks for this! I'm having some success but can't access the full range of voices I have installed. I've run the script in the pyttsx3 docs to loop through and play all voices and added a line to print voice names but in only plays three: [https://imgur.com/MYWimuH](https://imgur.com/MYWimuH) I have six installed: [https://imgur.com/eVRV73w](https://imgur.com/eVRV73w) What's interesting is that of the three it plays, one is a EN\-GB voice. So it's not missing the UK language package I installed. Any ideas on how I might be able to access the others? Many thanks!
Cheers!
Hmmm ... Can you tell me exactly what is the CPU/OS you are using? Maybe that would shed some light. 
I disagree. I think Automate the Boring stuff is a great book. But if you're looking to be a professional software engineer you're going to be missing some important things using that book as your go-to. I suppose it's a matter of taste though, this whole thing. Book preferences are just as subjective as any other mass media like movies and music. Might be best for OP to check them both out and see which one they enjoy more.
sorry, l like I said im new :(
Its version 2 fighting version 3 to the death
ReportLab is very quick compared to any of the other python libraries I've used. Anything that does an Html/CSS to PDF conversion is usually pretty slow.
Huh?
#THE CODE WORKS, YES. I JUST DEPRESSED MYSELF THINKING ABOUT IT. #NOT SURE WHY I FELT LIKE SHARING THIS.
I don‚Äôt think there‚Äôs a good way to create that database tho. I mean I think you‚Äôd have to brute force your way through all pip packages by installing them and running the setup.py file and then checking for dependency requirements for each package to store in the database. But even after that, you wouldn‚Äôt have all the dependencies that each package needs since the setup.py file runs differently under different circumstances. For example it‚Äôll say ‚Äúif run on a Mac, install this. Otherwise install something else. Etc‚Äù So since there‚Äôs no general case, even if you brute force, you still wouldn‚Äôt have everything in the database.
Yes i am. I have enough experience to get started on a project and learn a few things if I don‚Äôt know them immediately along the way. I just don‚Äôt know what to make. I am pretty convinced I could cover a specific problem as long as an ‚Äúexpertise‚Äù in python or programming isn‚Äôt needed. 
I‚Äôm just new to how dependency management works in python. I already knew about pip and what it does. I just didn‚Äôt know what it does in the background and I‚Äôve been trying to grasp it and become knowledgable in it for the past week. For most other parts in python, I‚Äôve figured it out to be competent.
Bot! You good. 
Nobody is going to mention how mindbogglingly stupid that requirement is? I assume it's not OP's fault, but seriously, who came up with that and what kidn of pharmaceuticals were they on?
You can use pip-tools (pip-compile) to see the deps without installing.
You gave some background and a solution, but failed to state a problem. Also, the solution was all particular software names with no strategy laid out. I guess the problem is that you need to copy the messages and you can't because the unchangeable services are reading them. Can the config also not be changed? Maybe just make the queue a topic? Otherwise, it sounds like your plan is to make a man-in-the-middle. Original producer writes to QueueA, you read from QueueA and process, then put a copy in QueueB. Unchangeable Service reads from QueueB. Be aware that that puts a dependency on your middle piece. Assuming the reliability and throughput are there, that would also work. But really, there should be no such thing as "unchangeable" software. If we are afraid of our software, we've already lost.
Doesn‚Äôt RE already do pattern matching and pytoolz already does pipe operations? 
Very cool! I have a quick question. Does this library require network access to function? I've been digging around your documentation and can't determine if the speech detection happeneds on the device or if it is relying on a cloud service for the heavy lifting . 
You can run an .exe with cli arguments
I am running a Mac (24 inch mid 2007) with MacOS 10.11.6 on a 2.4 GHz Intel Core 2 duo
Ok let it be, my parent comment was downvoted, which means my English is not good enough to explain what I want to do. FYI, this comments provides the solution: https://www.reddit.com/r/Python/comments/8q8hha/is_there_a_python_library_which_tells_if_two/e0hdqbq/
It entirely runs on the device and there is NO need for cloud connection. Sorry documentation wasn't clear. I make a note of improving it. Cheers.
Seems interesting. What are the use cases you see for this? 
First off, I want to thank you for taking the time to answer me. I completely agree with you if some changes can be made would make everything easier. The thing that I cannot change is not my software, I simply have to integrate with it. And yes, main problem is that I receive messages in different format than is required by protocol used by Celery which is used to schedule and execute tasks. If it will be absolutely required that could be changed. To maybe state problem more clearly, I have existing RabbitMQ queue that give me messages in specific format. Each message have to trigger execution of some tasks in couple of Django apps.
Got it. I think this is the reason: [https://stackoverflow.com/questions/14268887/what\-is\-the\-illegal\-instruction\-4\-error\-and\-why\-does\-mmacosx\-version\-min\-10](https://stackoverflow.com/questions/14268887/what-is-the-illegal-instruction-4-error-and-why-does-mmacosx-version-min-10) Your OS is simply too old for the program to run on properly. Let me think about how to solve this. The downside of making it backward compatible is that it is going to run much slower even on newer versions of mac. can you upgrade your OS?
Im sorry but im really confused on how to do this? If I wanted to search for the file dog.txt where would I specify this?
One use case is adding it to your release workflow to bump the version number of your package. There are a couple of opinionated tools that do this already (using semver or something else) which break if you want to use development releases etc. I wanted this basic building block for PEP 440 version numbers to exist, so that higher-level tools/CLIs can use it.
Username checks out
No, I can‚Äôt. What I can do however, is try to run it on my pc. It will probably work on there.
Look into [`matplotlib`](https://matplotlib.org/). --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Yeah, that's the link I posted with my question... 
Version 3 is not turing complete so version 2 clearely wins. 
Surerly you mean the other way around? :)
`os.walk` will pass over all the files in the given folder, and its subfolders. It's just a case of testing if the result == what you wanted. Have you tried the code provided? You'll need to `import os`. Often the best way to learn is just to try things. There's a good book in the sidebar (the automate one) that covers tasks like this this for beginners. /r/askpython will give you a longer/more explanatory and less shirty answer ;-)
 \&gt; Do the research and you'll realise. \&gt; https://en.wikipedia.org/wiki/Swastika This has to be the definition of irony. 
We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). Try a few and see what resonates. For a brand new programmer I'd recommend codecademy. Also, if you don't have one already make sure you look for a side project that interests you and start on it as soon as you can. Programming is a lot more fun if you have a goal. Come visit us in /r/learnpython if you get stuck. 
I'm not an expert on the python debugger, but I've always found that when stepping through without breakpoints it will stop at the first error. python -m pdb your_script.py If you keep spamming `n`, it will get to a point where it reads: Uncaught exception. Entering post mortem debugging Then you should be able to access the function's environment.
Thank you for your feedback! I‚Äôll be sure to route future questions to the subreddit you mentioned.
I think that could be the best bet. Or you can use a virtualbox on your laptop. But that is too much overhead.
&gt;The Attribute name is "Created" and the value is a string type. The values you're trying to compare to \`\`Created\`\` are datetimes. Comparing strings to datetimes doesn't work. ``` In [1]: from datetime import datetime In [2]: string_datetime = str(datetime.now()) In [3]: now = datetime.now() In [4]: now &gt; string_datetime --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input-4-40865f3468aa&gt; in &lt;module&gt;() ----&gt; 1 now &gt; string_datetime TypeError: '&gt;' not supported between instances of 'datetime.datetime' and 'str' ``` Dynamo has no concept of a date like MySQL or Postgres. The values stored in the `Created` field of your table have no more meaning than "My Birthday". When you solve your TypeError problem, you'll find that Dynamo only has the ability to compare strings alphabetically. Are you still designing your data model? If so, I would suggest storing datetimes in Dynamo as integers (Epoch seconds). This way, you can use the built-in comparisons. Better yet, if you plan on querying this data by time regularly, I'd use Postgres.
This would be a daily pull. I'm no in charge but this is important, i'm sure it will get re-architected. Sucks that Dynamo cant understand date. Thanks again for the info!!
It's already been added to the readme. Thanks for the suggestion.
There's an App called Sololearn, It helped me with the fundamentals of python!
`import pdb; pdb.set_trace()`
Just use matplotlib and don't look back
I learn Python for create program(s) üòÇüòÇüòÇ I'm in the modularities : `def HelloWorld():` `print("Hello World") # It's not very interested xD` `a = input("What will you do this week ?")` `print(a)` `HelloWorld()` Edit : It's very a simple basic program
Thank you so much! I‚Äôll check it out!
What a well thought out, clear, concise video. I happen to work at a software company where we've been asked by a customer to add JWT support to our RESTful API and nobody here was really familiar with JWT. JWT using PKI seems to be what the customer really wants. I sent the dev team the link to this video for when they get time to consider the request.
I cannot express how unethical and stupid this idea is. Drop the class, or take the bad grade. Then get your shit together and reassess why you think dishonesty is acceptable.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
Replace 'was' with 'shall become' then make up something respectfully ... fun?
Me shamelessly glorifying "fluent python" again
Thanks !
Check out r/learnpython
What OS are you using? 
Windows 10
I have never worked wav files before either, and I have no idea what an impulse response is. Can you break down your problem more clearly? By manipulate a wav file do you mean modify the data or just read and measure certain parts of it?
1. Download and install python 2. Download the linked file 3. From a command prompt/terminal (type cmd into your search bar on windows, bash in spotlight on Mac) execute the below: python tutorial_themoviedb.py
 0. Click the "download zip" button on that link you posted. Unzip the file somewhere. 0. If you are sure that you don't have python installed already, go to python.org and download and install python. 0. That program requires the `requests` library which is not included in python by default. To install it open the command line (Start key &gt; search for "cmd") and use this command: py -m pip install requests 0. The python installer also installed a program called "IDLE" to edit and run python programs. Open IDLE (Start key &gt; search for "IDLE"). 0. In IDLE, go to File &gt; Open and open the file that you unzipped in step 1. A new window pops up with the code in it. 0. In the new window, click Run &gt; Run module (or push F5) to run the program. --- Come visit us in /r/learnpython if you get stuck. 
Bad bot
Thank you, TimeTravel\_98, for voting on pythonHelperBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Hey thank you so much. That was so much in detail. I will try it out. O o get stuck, will follow on /r/learnpyton
Thank you. I will follow and let you know
Quick question: I was playing with Poetry for the first time a couple days ago, and it seemed to have trouble getting out through our corporate web proxy. Does it have any kind of proxy support?
Datetime is its own in type in python. While dynamo gives you a string. You will have to find a way to convert that string into a date time value before comparing. Try this https://stackoverflow.com/questions/466345/converting-string-into-datetime
Thanks a bunch!
When I say pattern matching I don't mean regular expressions but more in the functional programming sense of case pattern matching where you take in a value and match to cases based on type, structure, and condition/s. This allows you to destructure the container type while matching its structure to the case and checking constraints all at the same time. For pipe I'm not particularly fond of creating an iterable so i can sequentially apply functions to my values.
I agree!
Try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
You never want to run a .exe file from a stranger, you don't know what's in it.
The best stuff is in the sidebar.
if they only differ in one file why is each database's CLI a completely different package on github? why don't they use a common library? or release something that one tool that will work with many databases?
Don't use powershell to do what you can do in Python itself.
You sound like you know multiple programming languages when you say "when learning a new language". But then you say "I just started learning about Regular Expressions". Does Not Computer
The readme is pretty sparse. What I want is a pythonic way to basically do semantic-release (the node js package). Is that a long term goal or does that already work.
We definitely need to see the code in order to diagnose an error. That said, the error you quote seems like you are attempting to divide two things where only one of them is a number. The other seems to be a tuple.
I am working on an automation that simultaneously submits attachments and URLs from reported phishing emails from users to an internal sandbox and VirusTotal, searches for threat indicators in our environment, and checks whether a website would be blocked on our proxy. Currently trying to figure out how to queue items in a list based on severity (already determined via our phishing report platform) and submit them at timed intervals rather than all at once as virustotal only allows 4 submissions per minute via their free API.
I don't get it. Is this any different than the batch rename function of Windows Explorer? 
Poetry uses requests under the hood so you might want to use the `HTTP_PROXY/HTTPS_PROXY` environment variables. See https://github.com/request/request#controlling-proxy-behaviour-using-environment-variables
I'm currently working on creating a program where I can input song information from various sources into a database of my favorite songs. It'll be manual input at first, then in Javascript, then I'll try and figure out a way to where when I put in just the song name it'll be able to pull information from the web to autofill the rest of the information.
He forgot to tell you to install requests. See the other guide.
https://i.imgur.com/zBxPgQY.jpg
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
okay well im not that new -_- i know enough to include the libs smh the disrespect. 
I did try that, and it didn't seem to be working right. Then again, our corporate proxy is the bane of my existence, and I routinely fight with NPM and Yarn over whether they're actually going to cooperate with it.
On youtube you should follow *sentdex* channel.
If I had the forethought, I totally would have abstracted away as much as possible before I created mycli. I thought there would be a lot more changes. But I should add a disclaimer that changing a single file will get you a functional client but it won't be polished. For instance, postgres has the metacommand (like `\d`, `\c` etc) whereas mysql has `use` and `describe` commands that do the equivalent functionality. So that portion will require some additional work to get it working right. But that is not a substantial change. The completion engine will also require a bit of tweak to be context sensitive around these special case commands like `use` and `describe` but that is also manageable. Regarding your second suggestion about a single tool to talk to multiple databases. I wanted to build a tool that will act as a drop in replacement for your default client. Even between the two major databases Postgres and MySql there was a ton of difference in how they implemented meta commands. Such as `\d` vs `DESCRIBE table` etc. A single tool had to pick what to implement or choose to support both which was a lot more work and code complexity. I didn't see the value in having a tool that can satisfy 80% of the needs of a power user. Also it is quite rare to see a single person using multiple databases. So I didn't know if there was a need for it. 
It sounds like you already know a bit of Python, so I would recommend that you just start using 3.6. Python will complaint about major errors then you can look it up. The standard python docs are still the best guides in my opinion: Tutorial \- [https://docs.python.org/3/tutorial/index.html](https://docs.python.org/3/tutorial/index.html) Reference \- [https://docs.python.org/3/library/index.html](https://docs.python.org/3/library/index.html) More \- [https://docs.python.org/3/](https://docs.python.org/3/)
Your IDE has a setting somewhere where it looks for the python executable. You need to change that setting to point to the python3 executable. If you tell us what IDE you are using we may be able to help you find the setting. --- If you have more questions like this it's better to post them on /r/learnpython. 
Code?
New to reading?
Well spoken and informative. 
Yeah I thought about that, but I already knew how to do it in Powershell and I thought it would be cool to apply it to python. Do you have any suggestions for how I would do it all in python?
I'm using PyCharm
Say you have 2 files named newtext_a and newtext_b. You could set the prefix to newtext and change it to whatever you wanted while still preserving the latter part of the file name 
Oh damn. Thanks 
The intent seems to be to align with [PEP 440](https://www.python.org/dev/peps/pep-0440/#semantic-versioning), which is compatible with semantic versioning, but parver itself doesn't appear to have a way of, for example, incrementing just the patch number in e.g 1.0.1.
I like https://wkhtmltopdf.org/ you can run it as a command line utility.
Go to settings-project interpreter and look which python you are running, and if matplotlib is in your installed libraries
I will pm you.
/r/learnpython
I don't understand what "server" you are talking to. It's a bot. Isn't it just hardware?
It looks like I need to install python.app and replace the use of 'python' with 'pythonw'. Do you know how I would do this?
You should practice "exponential backoff" (Run a search on that term; too much for me to wade through at the moment). Basically you continually increase -- using some multiplier if you will -- the amount of time between calls until your responses no longer return with that status code. Also, no need to 'yell' in your title (all caps), we can hear you just fine. Finally, check out r/learnpython -- can learn a lot there.
so, same as rename s/newtext/"Whatever you want"/g * ?
Check out the os module. It's a built-in module that will allow you to change directory and rename files.
It's assigning _t_ to a tuple containing a single item _listener_
It‚Äôs a rupee with one value. It‚Äôs legal Python. 
Thanks guys for your help, will post other questions to /r/learnpython.
Source? 
\+1 just jump in.. oh and make sure you use \`print("\&lt;string\&gt;")\` I miss \`print \&lt;string\&gt;\`
Not just those, but specifically I just spent a few days wrapping my head around file reading/writing and JSON so that I could create a load/save function, too! You do great work, and it's been unbelievably useful in learning further! They're certainly the most informative/helpful video tutorials I've come across as of yet. And, this evening (thanks to taking a day off from work due to a serious flu that's completely stolen my voice) I've finally (mostly) completed this little project! I'd wanted to add a save/load function for ages, but I knew that it was rather out of my depth at the time. But, finally, it's taken care of! The program's long, and there's quite a bit that is *old* code, that I would've known better than to write now, but c'est la vie. (Here it is. I present to you: InnFighting!)[https://paste.ee/p/uryrR] It's neat, but a little broken - not to mention I'd left a few... developer abilities in place that were made to power-run the game when I needed to. Templar's certainly in need of a nerf, but then this game wasn't about balance, just learning.
So, whats on line 10? 
I'm practising my skills in a competition of kaggle 
If you are simply looking for a scatterplot utility accessible via terminal, you can readily write a python script that takes as an sys.argv style argument a path to your data.
Since Python uses parentheses to do several things in its syntax, the comma -- not the parentheses -- is the thing that makes a tuple. As a result, the syntax for a single-element tuple is the single element, followed by a comma.
Check out r/learnpython
I think the best you can do on python is use the .plot methods built into pandas. For example, if you have a panads dataframe named df with two numeric variables, A and B, you can just enter df[["A", "B"]].plot() to get a one line scatterplot. If one of those was a categorical variable, then you could group by the other and do a bar plot with df.groupby("A")["B"].sum().plot()
Will do. I've messed with the os module before, but I've never found anything that does what I really want it to in anything but PowerShell (as awful as it is) :/
Wow I‚Äôm speechless. I was just commenting on a post about people feeling like an imposter. Never thought I would come across an actual imposter in the wild. 
Thanks, these look to be the best source so far
Sick post as always
Btw [this is pip's code for version parsing](https://github.com/pypa/packaging/blob/master/packaging/version.py) which is located in the packaging library
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [pypa/packaging/.../**version.py** (master ‚Üí f92f8f3)](https://github.com/pypa/packaging/blob/f92f8f387bd62fc4070f49d0acb81e226e4845d3/packaging/version.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e0it39v.)
Well written blog post. I've recently been tasked to build an enterprise service bus using different technology but the same idea. I'll have to do some more research into Kafka. Thanks for the post!
I have asked there before and it has taken days for responses...
on the new design the sidebar does not exist. at all. ' nearly all subs haven't updated their design.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
Check out [mimetypes](https://docs.python.org/2/library/mimetypes.html).type_map
Is this all built in python? I love this idea?
These sit atop a pypi search; give 'em a gander: - https://pypi.org/project/Markdown/ - https://pypi.org/project/markdown2/
This is awesome!! Teach me about bots please.
Thank you!
Kafka is great however my observation is that 80% of the companies using it have no fucking need for it. Jesus christ people. If you don't need it don't use it. It's the pub-sub equivalent of people with a large spreadsheet who think they have big data and need Hadoop.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/drama] [Nerd drama : Is python symbol a swatiska, one 1xer ask ?](https://www.reddit.com/r/Drama/comments/8qg2en/nerd_drama_is_python_symbol_a_swatiska_one_1xer/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
When would you use Kafka over other solutions?
When I have seriously exhausted all other simpler options. As a rough rule whenever you reach for a complex powerful tool like Kafka you should do it with a sense of shame and defeat, not pride. It's not cool that you are using it. It's a compromise that you are making either because you weren't good enough to do it in simpler terms or maybe you are Cloudflare and dealing with things at a scale that really does demand it. I have seen companies using Kafka who could use a file and a cron job instead and they would have a much cheaper and more stable system. But some architect astronaut threw Kafka at the very first opportunity to get a nerd orgasm and resume points out of it. A disservice to their employer, their fellow employees past and present who have to deal with the unnecessary complexity. Life is hard enough as it is, don't make it any harder.
Having never heard of Kafka until now, I read your comment thinking ‚Äúthis guy‚Äôs overreacting a bit...‚Äù. So I read the article, and realized you‚Äôre on point! Can definitely see people using it for the sake of being able to say ‚Äúyea, I rolled out Kafka for project who-gives-a-rats-ass‚Äù. I got lost halfway through the article. Spot on with your input, and appreciated!
What would you use instead?
&gt;no apparent benefit over other options. this right here is how I know you are full of shit
oh glob, if I could use anything other than kafka I would love to. the previous devs set it up and built a pipeline around it. (and then promptly forgot about it so it went out of date) now I'd have to rewrite like 4 modules if I wanted to switch, which is a hard sell.
Nice example, but we often need to parametrize the decorator code. Please add how to use more generic decorator
Thanks for your kind feedback. Can you please help me to write a good post?
Write your own. It's senseless to use some static site generator that is perhaps 10k, perhaps 20k, maybe even 60k lines of code when you can achiece same by writing a couple hundred lines yourself.
Having no experience with Kafka my first impression was that it would be difficult to maintain. 
first you can consider if you need anything like it at all? you can start with basic stuff like a file and cron job, relational database and cron job. if you do need stuff like it there are simpler alternatives like beanstalkd and redis.
Hugo: 96k lines of code Jekyll: 31k lines of code Pelican: 22k lines of code Hakyll: 6k lines of code This all for something that you could do in couple hundred lines of code yourself.
Write your own.
Wouldn't call 2.5k lines for a static site generator "elegant, minimalist and simple" though it is far better than the &gt;20k lines that most others have.
It's literally a python dummy.
As a person working in a field that makes plots all the time, I very highly recommend that you *never* plot "from a terminal," which I take it to mean interactively and in a terminal. One day you're going to want to recreate a plot, or find out that you need to change something or fix something. Or you're going to need to add more data, or take out data. Or someone will complain that this color is too hard to read, or that that line should be a dashed line, or that that the marker order should be "star square upper triangle" instead of "square start upper triangle." When this happens you're going to wish you had a file called "yyyy-mm-dd-x-vs-y-for-john-smith-project.py" that you can just edit and re-run. *Trust me on this* If it's interactive-like plotting you're after, go for a Jupyter notebook. I literally have like hundreds of notebook files, each plotting exactly 1 plot, some of which are even copies/updated revisions of each other. Because throwing a few hundred kb of data on a git server takes no effort or time to manage, but trying to remember how you created that one plot takes time away from you doing other things.
You could even expand on this so that it takes a file name to be read as a data frame in Pandas, then another one or two arguments for the columns to plot and maybe even one for the plot type. Send me a message if you need some pointers, happy to help.
You are right? Oh, so this is what this is all about? You with a very limited historical knowledge and very unconvincing arguments are trying to prove to me, that you are right? It doesn't matter what actually happened, or what other people may think. This discussion is about your self-esteem :D &gt; never encountered in my (limited) use of common lisp Must have been limited to never using it at all. Just to give you few examples: 1. http://clhs.lisp.se/Body/m_w_out_.htm from a standard library, string-related functions and macros. Not knowing this would be equivalent to not knowing how to concatenate strings in Python or something like that. Any non-trivial program in CL would use this. 2. http://clhs.lisp.se/Body/m_w_open.htm this is the standard way to open a file. Essentially the same as Python's `with open(...) as x`. There are a lot more: `with-slots`, `with-accessors`, `with-simple-restart` and so on. There are tons of these in third-party libraries: in Flexi-streams: `with-input-from-sequence`, `with-output-to-sequence`, Alexandria: `with-gensyms`, `with-unique-names` etc. This post would be way too long to list all instances of this concept being used in CL. &gt; As for why it's safer, quite simply a with block means you cannot forget to close a connection. You are terribly naive and misguided. You cannot forget to close a connection, but now you can also access connection after it is closed. Now you need to think about what happens when context-managers are nested, how they interact with other code objects (eg. what happens if you return one from a function?) What made you think that the trade-off was worth it? For you, it sort of works, because you are solving very trivial problems, essentially copying and pasting what was declared "best practices", so you simply don't nest context-managers, don't interact with them as objects etc. But, a library maintainer may need to cover these cases, and as a library maintainer, I don't want this poorly conceived nonsense.
most welcome. Let me know how it goes. You may also write for my blog about your implementation(Offcourse full credit to you)
I work for a company where we dump loads of scraped data in SQL DB for later usage after transformation. After studying about Kafka I think it'd be best bet replacing MySQL, considering the I/O issue we often deal with MySQL.
&gt; overreacting Not sure why did you feel that. The purpose of article was to tell about Kafka and it's implementation in Python rather than saying _Kafka is answer of every problem in the world_.
&gt;It doesn't matter what actually happened, or what other people may think. To you perhaps not, but to me it does, which is why I cited the actual history and documentation of the decision, something you haven't really commented on. I really couldn't care what you think about me. Do you have more (wrong) things to say about the history of python, or are you just going to try and toss more insults (or whatever those are) my way? &gt; For you, it sort of works, because you are solving very trivial problems, essentially copying and pasting what was declared "best practices", so you simply don't nest context-managers, don't interact with them as objects etc. But, a library maintainer may need to cover these cases, and as a library maintainer, I don't want this poorly conceived nonsense. I've never found working with nested context managers at all troublesome, except for the indentation issue (which has a fix in the standard library, or in python3's syntax), and they exit when you return them from a function.
That was in response to GFandango‚Äôs post.
You have no idea. I dealt with kafka for a project where we really were challenged to move a monumental amount of data off of test equipment and get it into hbase via spark. The good news is we had cloudera which supported most of what we wanted out of the box. But we had complications like being able to monitor if the spark job was keeping up with the torrent of data we were pushing at it. Then you get to fight the bottlenecks. I had to track down a C implementation of the kafka client since the systems feeding it were C/C++. Turns out there is a very well maintained one by then ay. Today that end of the system pretty much works. Sometimes the spark job can't keep up with the rate the data arrives at, but that part of the system wasn't my baby as much as the infrastructure that feeds the pipeline.
If Reddit thought me anything, it's how to tell when something is a scam.
Good point. Though not an insurmountable obstacle, given enough resources. On the other hand, this would be a serious undertaking, perhaps comparable to just writing an alternative to `setuptools` and `PyPI` server. With an eye to the future, I think the later may be a better way to address the problem.
I wouldn‚Äôt say this is a scam 
I don't know about your specific case but be careful not to kill a mosquito with a tank. There are almost certainly other easier and cheaper options you can do first.
Can I have the code?
Yes, kafka is designed to move a monumental amount f data quickly. It requires a great deal of configuration and monitoring. There are all manner of simpler solutions of you don't want the headache. ActiveMQ is one I used for simple message queueing back in the day. Can install with an unzip and your off to the races. One I thought about trying is kestrel. Has a reputation for moving large amounts of data without buying a lot of headache. There are many others out there I have not had the pleasure of looking into. Would love to play with data ingest again though.
This sounds like a great project!
Pharma has strict legal requirements about what they can write inn EU. Every page has to be approved by a medicaly trained person.
That is a nice write-up! Seems to have enough detail to get someone started. It is amazing what you can accomplish with kafka.
Agreed.
If you need a little control on the output (custom formatting or else) I'd suggest mistune: [https://github.com/lepture/mistune](https://github.com/lepture/mistune)
Fluent Python.
http://markdown.pioul.fr/ Also there are command line programs you can pipe markdown into and they spit out html. 
[The documentation](http://parver.readthedocs.io/en/latest/usage.html) has more examples. 
You can bump what‚Äôs usually called the patch number using `v.bump_release(index=2)`.
Isn't it the same case as Apache Spark?
It's an interesting opportunity in life
In Python... I do know Java, .NET, even COBOL learned those in school and those had regular expressions, sure (not COBOL, I don't remember). Never really made my own exercises in it, and that to me is something I have been missing. I like programming, I just fail to come up with my own ideas to program. And when I do come up with an idea, it's something as silly as this one.
Sick means good in American slang. He's saying you made a great post/
You cannot run python 2 inside a python 3 virtual machine, therefore python 3 is not turing complete
Yeah I'd say it will be a fun book to work through =) I haven't read it, but I looked at the table of contents. It's definitely a step in the right direction. Books are always going to be subjective.. As in everyone will give you an opinion. However, if you walk away from the book having learned something new, then it will be a good book. Don't get distracted by looking for "the best" book or course.. Just get started =) I'm sure you will enjoy the learning experience. I love books published by no starch press. And many people will say automate the boring stuff with python is the best book they have on the topic. But I believe the book you chose is more fun. My favorite books on python are head first python, and head first learn to code. Have fun =) 
LOL. Thanks. I googled and found it too. Being a non-American I learn something new. We also use such _opposite meaning_ slangs in local language.
Well you never know where something might take you what if you were talking to Elon Musk right now I guarantee you‚Äôd be pissing your pants and begging if I was him 
Better late than never... I just meant "distasteful" in the sense that by sorting then using `groupby`, you are iterating over the data **twice**. Classifying the data with a dict iterates over the data only once.
please don't t = listener, the comma is invisible for most of people, and it looks like a typo. omitting the `tuple` is implicit enough.
Type annotations are a godsend in larger codebases. Use them! Also f-strings
Nice Post! We used kafka + Google proto buffs and grpc calls, made for a nice way to keep data types in spec between services, plus giving an easy to use api front end wrapping most of the same internal functions. I really recommend using some schema definition or protobuf with kafka, saves a lot of headaches with changing data formats as you add features. 
If the way you structure your business logic doesn't align with Django, you should choose a different framework. Its hard to say more without knowing the details.
Spark is a total streaming solution while Kafka is streaming+message broker.
I wrote this python script whole experiment with different APIs. This project is using Clarifai‚Äôs machine learning model to determine whether if it‚Äôs A pizza or not a pizza The project was inspired by Silicon Valley Tv Show Here‚Äôs the GitHub link: https://github.com/mraza007/Pizza-or-Not-a-Pizza
We started using parver a few weeks ago and are really quite happy with it. Thanks for making this! :)
would be nice if you write a blog post for us to learn? :)
I'd love to! Might take me a bit of time as I'm traveling at the moment but yes 
Lol I loved the hot dog app on Silicon Valley.
The only difference I can imagine is whether .py files are registered to be open with python interpreter. In practice, the installer will put something else in system like registry, to allow uninstall later.
no worries. PM me your blog link?
Don't currently have a coding blog, I binned the host a while ago. I'll set something up and send something your way. Might also make me opensource the libs that I've written for doing this as I've been meaning to for ages! 
Lol I see it‚Äôs the same thing but uses twilio But you can also use the same script to tell what toppings are on the pizza
Most welcome! I was about to say the same. You can also contact pop Data related blog https://towardsdatascience.com/ - yo can mail them and they will publish if like. My earlier blog post about ElasticSearch was published by them.
Yeah that was my first python book! I read it before I started working with Django for the backend of my websites. I actually liked it more than the Automate the Boring stuff. Now i‚Äôm currently working through Mark Lutz Learning Python. And plan on buying his Programming Python book next. 
It also looks like the yin yang sign. Curious you went straight for the swastika, OK. 
Stack Overflow or the Python Discord are also good sources.
&gt; The issue with that is the label changes between miners(bitmain why you have to make developers jobs so hard!) sometimes the fans will show info on fan6 and fan7 or fan1 fan4 etc etc. But does it only show it on one? &gt; I was thinking the best way to do it would be run a for loop with a regex check to see if the label matches the pattern of fan and then a number(fan4 for example) and if the regex check is true, add the value to another list to be averaged out. If it only shows up on one, then the following regex is fine: fan\d+ You can confirm this [here](https://regex101.com/) and learn how to do your search in Python [here](https://docs.python.org/3/library/re.html). &gt; Now I have the averaging all done and working, but what I need help with is the actual regex check as I have only used regex in a minimal amount. If you havent been able to extract the value, how could you get the average of them? &gt; What would be the best way to do this? and for the regex check, if anyone could pop the correct pattern in the comments it would be greatly appreciated. You are asking for someone to do very basic things that a little simple research would reveal to you. 
/r/SiliconValleyHBO will like this.
Exactly what I first thought of too lol
Why is the tuple needed? Why don't just pass the variable itself?
Just posted there thanks
As Italian I will say that some of the Pizzas around aren't Pizza at all, you should train you AI considering the Italian taste :) . The project it's cool, give use some hints how you made it.
From glancing over the installer source it appears some crucial information like the default PYTHONPATH goes into the registry, so it might not work. 
I think this can be helpful for the community. How to get acceleration data from an acceleration sensor (BOSCH BNO055) using Python on a microcontroller (powered by Zerynth www.zerynth.com) Video Tutorial: https://www.youtube.com/watch?v=7YxRvtdmG0w BNO055 Module: https://docs.zerynth.com/latest/official/lib.bosch.bno055/docs/official_lib.bosch.bno055_bno055.html Example's code: https://docs.zerynth.com/latest/official/lib.bosch.bno055/examples/examples.html#get-acceleration
And that person is so massively qualified that they can no longer operate a browser?
I wish I could do that Currently I am using Clarifai‚Äôs machine Learning model. For that I might have to create my own
Thanks mate. Best answer ^^^
Thanks! Completely missed the badge from a mobile view.
Is list unary tree?
The learnpythonthehardway author said it not turing complete because noones made a python 2 interpreter written in python3.
Its a little more complicated than than. There needs to be immuable representation of the validated page so auditors can confirm that the live page is compliant. That imutable representation happens to be a PDF for now.
Thank you, I'll look into this.
If your current solution uses or can use a relational database then marrying up your business logic to django won't be too hard. If you data doesn't suit relational databases, then django probably isn't the tool you want in the first place.
**[Pandoc](https://pandoc.org/)** does the job. If you're looking for a python library, you can check **[PyPandoc](https://pypi.org/project/pyandoc/)**.
HTML + CSS already is an immutable representation. Just mirror it. Again, I realize this is probably not your, or any other single person's fault, but that fact that this is somehow necessary is really dumb.
If you're trying to ship a Python app to an end user, use `pyinstaller` or something similar. If you're trying to deploy Python across an enterprise, Microsoft make a tool for that.
I sometimes do hobby scripts in Python, and it was time for a new one. I started using Netflix a while ago, but I was disappointed it could not use my quite extensive IMDb rating history to do suggestions. Netflix does not have an API, but luckily these days there's Selenium to automate browser clicking and typing, love it! What I like about this script is how it can continue when it's interrupted, I try to write the most recent status to some `results.json` file. ---- Summary of its workings: It logs into your IMDb account, downloads your ratings as csv. It logs into your Netflix account, selects your profile, then goes over all csv lines and tries to search for the movie. If rating was &gt;= 7, it tries to upvote the movie on Netflix, otherwise downvote. ----- I might have done some things stupid, let me know, always good to learn! Also, this might be interesting for people not familiar with the typing module in Python :)
I use PyInstaller and am quite fond of it. The reason that I got thinking about this was because of a codebase that builds Python 2 and Python 3 components. I don't want to include absolute paths so the current solution is to have Python 2 on the path and Python 3 is aliased to an environment variable called Python3Path. It works fine but feels a bit messy and requires devs to do a bit of setup. I was thinking if I bundled the needed Python runtimes and use relative paths then it would be possible to build the whole thing out of the box
&gt; The reason that I got thinking about this was because of a codebase that builds Python 2 and Python 3 components I am sorry that you have to deal with this. It's a nightmare.
The annoying part is that the bit that requires Python 2 build capabilities comes from an NPM package of all things &gt;.&lt;
This is a great book for exactly the scenario the OP describes‚Äîsomeone who was immersed in Python 2 a long time ago and wants to get up to speed with modern best practices while also reinforcing fundamentals about how the language works at an advanced level. I can't recommend it enough for this use case.
There are some guys in Web2py Brazilian user group who did get run web2py using python3. What's your difficulty?
I was in the same situation recently. You dont need a book. You will learn as you go. It's not that hard. 
I think a cropping job like this should be illegal.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_emmamuhleman1] [Things to remember...](https://www.reddit.com/r/u_EmmaMuhleman1/comments/8qi8vh/things_to_remember/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Something you could do *poorly* in &lt;1K lines of code, yes. When you see a huge LoC drop like that with Haskell over the others it implies that the problem has a ludicrous number of edge cases, most of which you might admittedly never encounter in a personal hack, but will definitely run into in a general solution.
First of all, sorry for resurrecting this. My question is, why using the firefox driver instead of something like phantomJS?
I agree, but I like a reference to initially get me going. 
Please provide your votes on the pycon link itself. More upvotes will increase my chance for selection. I will be very grateful. Thank you :) 
This is blogspam, it isn't useful and is wrong in several places. In particular: &gt; Kivy is actually a structure built on pygame. All widgets (graphical components) are drawn with Pygame. This is extremely wrong. Kivy draws using OpenGL, using its own widget toolkit. It can use pygame as a window backend to create the GL context and manage interaction with the OS, but this has not been the default for several years and is now mostly deprecated. SDL2 is the current default. If you want to install Kivy, please follow the installation instructions [in the documentation](https://kivy.org/#download), not the incorrect ones in this blog post.
PizzaPiper
If you're using Python's standard [Markdown](https://python-markdown.github.io/) I'd also recommend taking a look at [PyMdown Extensions](https://facelessuser.github.io/pymdown-extensions/). I use them together to render content including tables, code, maths, images, links, abbreviations, etc ... etc ...
What did you use for input/output? I can't spot a main loop...
That looks like a very good idea. Try making it to separate a slice of pizza from a whole pizza. 
My apologies for not putting it in the read me... First run /server/civio_server.py. Then run /user/game.py Its actually been a while since I last worked on this project so it may be a bit fiddly to get working. Make sure you check out the config.yml so that it all works.
https://conda.io/miniconda.html
Lookup locals() and globals() ... name your functions using a distinct pattern and then use regex or a simple ‚Äòcontains‚Äô check. Build your list pretty easily.
Seqta is the system which my school uses to run things like timetabling, student\-parent\-teacher messaging, grading, etc. The script essentially automates the JSON web API, which can then be controlled with a Facebook messenger bot.
As italian, BRAVO
Jinyang approved 
Cool! I was thinking about writing something like this to memorize poker starting hands. Do you plan on updating the README?
With what exactly?
How do you customize and load questions and answers? Are you passing in some file and the cards are built off of that?
Hey Gerry, Thanks. I really like that you Tube Webpage. My wife doesn't allow me to spend too much time on it though, hehe. - Ken
It's a pizza, not pizza. It's technology.
Yeah sorry I forgot to add that into the readme, I just did then. Basically each line is a question, then a colin, then an answer. e.g.: &gt; What is the capital of Australia?:Canberra It uses fuzzy searching, so even if you don't get the answer 100% correct it still counts.