I left this earlier, as it might have been about Python. But since you've spread this to other languages: try to write a strong A/B chess engine without threads.
The large majority of people use CPython because it is the best it can be in both feature completeness and speed. PyPy increases speed at some points, but is less complete. A Rust interpreter would be interesting. But I doubt there will end up being any increase in speed. Because regardless you'll have to either put in a GIL or other complex system. So it wouldn't be any better than CPython. And even if they do solve the GIL issue, it will be years and years in the future. CPython isn't going away any time soon. By the time where it is being cloned into different languages and lopping off the balls and chains, it will break free of its own. 
I don't buy into this. In my work, threads are exactly the thing that would have helped me in resource sharing. Only reason I managed to stick to python was because in \*nix, forking is cheap. Threads help immensely when you have so many read only data. 
As much as I respect Armin, this is nothing more than philosophical back and forth over nonsensical fears equivalent to "X old language is dying". First people said it was PHP. Then some people said it was C and C++. There are people saying that JS is dying. Python, and CPython off of C, will not die. Same as any other interpreter/language. ^^^(though I do want PHP to die from a having to pick up the slack perspective).
AutoModerator can be set up to act automatically on partial-word, whole-word or regex matches.
Like watching it.. 
http://GitHub.com/jonnoftw/img_term
1 based indexing is a huge NO. 
Oh yeah...that too. PyQt just works multiplatform. Tkinter and Wxpython claim to, but don't.
Even if they changed nothing except the language the Rust version would be superior in both speed and safety. It's just the nature of Rust (vs C).
(I'm by no mean an expert in Python implementation, I just did some researches about a while ago. Also it's quite late, I might make typos) From what I gather, there has been plenty of Python implementations already like IronPython or Jython with only two staying active and with a level of seriousness "I would use it in production": Cpython and Pypy. Cpython is the most used while being also one of the most complicated to contribute to (just look at the formation core developers have to go through). On the other hand, Pypy emerged as a serious alternative a few years ago and show performances way above Cpython. I have no clue about how easy is it to contribute to. Now, why isn't everyone using Pypy? I guess it has to do with momentum. It got compatibility for the scipy stack recently, people don't hear about it much, and making people change their version is hard (I mean I guess lots of people don't care what's under the hood of `python` as long as their programs run). Now for RustPython to one day take the place of Cpython it would have to walk the same path as Pypy: first, show that how it's better, then show that it's production ready and can work with the Python ecosystem. I'm sure rustaceans will manage to create a working python, but it's not just writing a program, it's writing the engine for a whole ecosystem. In the end, hope that people see that they don't necessarily need to throw bigger machines at their program, just care better about what's inside.
This is a topic I love to discuss but I've got Stockholm syndrome in python. My approach is to treat timezones other than UTC as display logic. All times get parsed to UTC, and all times get rendered to local at the last possible moment. Do you have good examples of better UTC management than what python offers?
RecursionError: maximum recursion depth exceeded
I can't help too much between the async options, but I can help with the sync vs async workers. The gunicorn docs tell you that in a sync worker configuration, you basically spawn a pile of processes, each of which can only service a single call at a time. Usual rules of thumb tell you to spawn N * number of cores of workers, where N is some small number. For example, you might spawn 8 workers on a 2 core VM. The concern with sync workers is that if many of the possible calls your workers may handle call out to external resources, or unreliable calls, then its possible that all of your workers will pile up waiting on that external call. For example, if you have 8 workers, and 9 users try to trigger the same code path that reaches out to OAuth at the same time, then the 9th user would be stalled out for the duration of the call. It's up to your application and use case to determine how reasonable these constraints are. Basically any of the async workers will let you handle orders magnitude more requests at once. 
Huh?
This. For easy systemd units check out [https://github.com/jordansissel/pleaserun](pleaserun). Or run it in docker with --restart=always, which is what I do.
You're joking right? Either that or one of the Rust fanboy evangelists. Rust can't be *faster* than C. It all compiles down to the same assembly and is then dependent on the compiler. The fact that this has to be explained is insane. It's the same thing that causes this [post](https://dennisforbes.ca/index.php/2017/03/03/rust-faster-than-c-not-so-fast/) to have to be made. Sure there are some things where a microbenchmark will show that Rust is faster than C, or visa versa, but when it gets down to it and the compilers all are at their most optimal implementation they end up spitting the same exact assembly. As for *safety*, you can argue that if you consider memory bugs (segfaults, use after free, double free, dangling pointers, null dereferences, buffer overflows, and the like) and concurrent modification to be unsafe. But really, * A segfault is just a flavor of the others. So that's ruled out. * Use after free is a flavor of dangling pointers. * Dangling pointers can be solved by local scopes. * Null dereferences can be solved with a simple macro! Say instead of dereferencing via \*, just `#define $(p) (p &amp;&amp; *p)` and use $() to dereference instead. * In modern C you reallt have to be *trying* to overflow a buffer to do so. Most if not all buffer-overflow causing functions have been given safe alternatives and warnings * In almost every language other than rust concurrent modification is an issue, and the solution is use a lock where needed. Rust on the otherhand, forces a lock everywhere. This can easily be argued as a con as it limits available code possibilities and also makes things slower. Rust is a very nice language from a design and feature aspect, and it is noble to have speed and safety at it's forefront. But in the same argument, why not D? Same thing, different language. So in the end, no. Rust is not superior to C. The opposite is also true. C is not superior to Rust. But fanboy evangelism like this is bad for all.
the_game() calls itself. If you keep playing you'll eventually get a recursion error
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Mods exist for spam and ill-tempered users (you're kinda skating close to the line! ;), not to restrict what people can talk about here. Just keep downvoting if you have to, but I find it interesting that this kind of traffic has picked up recently -- it's like 2004 all over again, or something Is there some pattern to these posts? My first guess would be uni students, because who builds actual GUIs any more ;( (RIP, I loved GUI work, so much more consistent than web!) PS: I'm thinking of building a new desktop app in Python. Could someone point me towards some recommended resources?
I can tell you exactly how those graphics are made, since 3blue1brown has released the library he uses to make those videos. https://github.com/3b1b/manim
This is your best bet and easiest way to do it. If it's saved as a CSV you can just split on the comma instead. 
Better late than never. I'll be sure to check it out, thanks!
ah i see, dam i did not think of that. thanks.
Unless you are the admin of the cpanel server then I highly doubt it. Most of the time cpanel is used to let you manage your website and ftp files. I should say I don't use it that often so I could be wrong. 
I understand this isn't /r/learnpython but would the correct solution be to return a value from the function and start the game again by calling it from say a main function?
Lol I can't help but have flashbacks to his python3 rants when reading this.
I think we can certainly say he didn't make a *bad* decision. Python is bigger than Guido could have ever known and his design decisions got us to where we are today.
https://en.m.wikibooks.org/wiki/A-level_Computing/AQA/Computer_Components,_The_Stored_Program_Concept_and_the_Internet/Fundamentals_of_Computer_Systems/Types_of_program_translator
Basic helpers for parsing ISO-8601 strings would be a great start. Most languages do at least that, I think. If I construct a datetime, it should default to being UTC. I fundamentally disagree with the idea of a datetime being allowed to not have a timezone offset. Functionally, it is a source of tricky runtime errors. Semantically, it makes little sense to me to have a timestamp with an ambiguous timezone offset: if you aren't storing the timezone offset and it's not UTC, how would you ever know what time the timestamp represents?
Celery is the right tool for this.
Celery is the right tool for this.
Im on it. Studying this up. Thanks.
Mods enforce rules and who creates the rules is up to the community. This community can have rules such as no posting the same question that was asked yesterday, etc. or even no asking about GUIs for x months. And we as community members vote with our up/down votes but there can be another level of moderation And yes, ill tempered users too but, while I suspect you’re kidding, I think this post is far from it. I’ve identified what I see as a problem and I nicely (and with a clear “[meta]” designation) posted about it. If the mods remove it (and/or it gets downvoted to oblivion) that is their prerogative. But I sincerely do not think I’m being ill tempered about it. I care about the community so I am voicing my concern. I’ll tempered would be throwing expletives everywhere, spamming every GUI post (or every post) and being a general troll. But posting about a concern is not ill tempered. Also, I don’t think all “what’s the vest GUI” posts should be /r/LearnPython. I think there *is* value to the greater community; I just don’t think it needs to be discussed every day. 
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [Just spent 2 hours to automate joining csv files saving hundreds of hours a year](https://np.reddit.com/r/learnpython/comments/a085dx/just_spent_2_hours_to_automate_joining_csv_files/) \#2: [I've officially started to automate parts of my job today and it feels incredible](https://np.reddit.com/r/learnpython/comments/alt3ge/ive_officially_started_to_automate_parts_of_my/) \#3: [I wrote a book on Python Regular Expressions, it is FREE through this weekend](https://np.reddit.com/r/learnpython/comments/aevgbi/i_wrote_a_book_on_python_regular_expressions_it/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
Make sure the correct virtual environment is activated. I usually see this error if I forget to activate a projects virtual environment before running the app. 
Interested in the same thing. Looking for more of a one on one tutoring also in NYC. 
You are told why your post was removed, the mods aren't barbarians. Additionally, not reading the sidebar before posting to a subreddit is just bad form.
`#let n = user input` `r = range(1, n + 1)` `l = list(map(lambda x: (x * 2) -1, r))`
How about some mega-threads for things like recommended packages for certain purposes? I mean, if someone is asking for help with GUIs, they are already breaking the "how do I do this in Python" rule in the sidebar and can be reported easily.
I think you're going too deep into the computer science part before actually writing some basic python programs. If you're interested, go right ahead, but if you just want to code, it's not that necessary. Also, all caps are rude, try not to use them often. 
There's certainly a lot of use cases covered by what you propose, but not all. But I don't agree that everything should be written to be handy for web developers, because ultimately it would burn somebody with a false promise. There's nothing simple about time. Did you know that UTC is "just" an approximation of UT1? I didn't for most of my career. If you're storing times without sufficient metadata then either you don't really care or you have problems you haven't considered. One time I started a git repo where the underlying representation of time was a valid iso8601 string but I got bogged down in the timedelta details. To answer your question directly: &gt; Semantically, it makes little sense to me to have a timestamp with an ambiguous timezone offset: if you aren't storing the timezone offset and it's not UTC, how would you ever know what time the timestamp represents? The naive answer is because a timedelta can take you from an unambiguous timestamp in an Olson sourced time zone to an ambiguous one. In my experience working with non-zero offsets rather than location based time zones is rarer than either UTC or local conventions, but you may have a different experience.
Well understanding how code works really does help me learn more about how to code well. I guess Ill just start with an introduction to Computer Science. And really grasp everything it teaches. 
That all makes sense. The question is, which is the *reference* implementation? I don’t see PyPy taking that from CPython any time soon. Btw, I don’t use PyPy for one of my projects where it would help because it doesn’t implement the (optional by the docs) birthtime in os.stat. And for another because it uses more memory. 
Without knowing your particular app, my advice is unless you're framework is recommending a particular worker, sync will get the job done. &gt; is calling an external oauth service too long? Is inserting a single record into a DB too long? Doubtful. And if you're experiencing unreasonable latency here you're better served fixing that since async workers will just mask the problem at best. &gt; What are the trade offs between gevent and eventlet? Really, it's mostly interop with other libraries. I'm not a big fan of either of these approaches to async (monkeypatching the stdlib so it's async but looks sync) so I can speak in depth. &gt; How would I set up nginx in each? Nginx sits in front of gunicorn. This is important because gunicorn doesn't make efforts to buffer requests so it's extremely vulnerable to things like slow loris. Nginx, while not completely immune to it, is much better at mitigating the effects of it. The way you configure this is you run your gunicorn server to run on a host (or hosts) and you tell nginx to do a `proxy_pass` to that host (or hosts).
Thanks!
Thanks man!
Okay! I will use your advice! Thanks!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
It's a common mistake among people new to programming.
I feel like it depends on what sort of scale you're looking at, resources, and if you're comfortable writing async code. 
I've only really worked with django rest framework. I really like it, but some people I know don't like it because your business logic is highly coupled to the orm. This really only becomes a problem if you want to move parts of your app out and make it a microservice. 
With just a quick look at the code, I think instead of calling the_game again, you simply set attempts back to 3. The while loop will play again.
By which you mean by this is a normal and largely unavoidable part of learning process?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
I used neuroevolution (NE) to evolve a neural net to play and beat a few OpenAI games. [I wrote it up here](http://declanoller.com/2019/01/25/beating-openai-games-with-neuroevolution-agents-pretty-neat/) on my blog, lemme know if you have any questions!
Yes that would of been better actually. Good idea :)
&gt; The question is, which is the reference implementation? There shouldn't be a "reference implementation". The reference should be the reference. If there's an ambiguation then the reference language definition needs to be fixed.
Totally fair point. Is Python there? (Not arguing, just asking)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Yet I'm being downvoted ☹️
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
The fact that you've gone to such depths to defend C--a language that's 40 years old and has countless security, safety, and *usability* issues--has me wondering, "WTF"? Rust *is* faster than C. Not just in micro benchmarks but it's *faster to write* and requires considerably less effort to *keep safe*. Your Rust code base can grow and grow and grow and you *will not* run into any "gotchas" like what happened to OpenSSL or the Linux kernel or any number of C-based code bases. Problems that happen *constantly* because the nature of C means that even the best C programmers make mistakes. Mistakes that have *serious* security repercussions. Mistakes that *can't happen in Rust*. It's a *vastly* superior language and it's not the only one! There's other languages *just like Rust* that have the same focus on safety that now exist. We've learned a lot in *40 fucking years*. C hasn't changed! It still supports all the same old *bad practices* that it did that long time ago and here's the real problem with that: **People will still make those same mistakes** For all the "modern" C features that get added to the language or "discipline" developers claim to adhere to *people will still be making the same mistakes*. Mistakes *that don't need to exist anymore* thanks to languages like Rust. Rust is amazing but it's not really what I was getting at in my post... It's not that Rust is so great **it's that C is just that bad.**
Using conda doesn’t mean you can’t use pip, you can use whichever you like inside the virtual environment. I find conda environments easier to manage and conda also streamlines installation of packages like numpy, cython, lxml, qt - where otherwise you can run into compiler or other system dependency issues. But it’s no problem at all to do ‘pip install’ and get something from PyPI instead
&gt; The fact that you've gone to such depths to defend C--a language that's 40 years old Age is bad now? &gt; and has countless security, safety, and *usability* issues--has me wondering, "WTF"? Yet I've already explained how the security issues are null and void. &gt; Rust *is* faster than C. Not just in micro benchmarks but it's *faster to write* and requires considerably less effort to *keep safe*. So you officially don't know what faster means. &gt; Your Rust code base can grow and grow and grow and you *will not* run into any "gotchas" like what happened to OpenSSL or the Linux kernel or any number of C-based code bases. For Pete's sake, they didn't apply the bashed into your head safety rules. Would you argue that Rust is unsafe when people decide to wrap their entire program in `unsafe` blocks? &gt; Problems that happen *constantly* because the nature of C means that even the best C programmers make mistakes. Mistakes that have *serious* security repercussions. Mistakes that *can't happen in Rust*. That is beyond bullshit and we both know it. &gt; It's a *vastly* superior language and it's not the only one! There's other languages *just like Rust* that have the same focus on safety that now exist. We've learned a lot in *40 fucking years*. C hasn't changed! It still supports all the same old *bad practices* that it did that long time ago and here's the real problem with that: &gt; **People will still make those same mistakes** &gt; For all the "modern" C features that get added to the language or "discipline" developers claim to adhere to *people will still be making the same mistakes*. Mistakes *that don't need to exist anymore* thanks to languages like Rust. Guess what other langauge has that same support? Rust! You can do unsafe things in every single fucking language on the planet. Your argument has become "it is better simply because it's new". &gt; Rust is amazing but it's not really what I was getting at in my post... It's not that Rust is so great **it's that C is just that bad.** Yes, and I'm arguing you are so full of your own bullshit you're swimming in a pool of it. C isn't bad. It isn't better than Rust, but Rust isn't better than it either. Same thing with D. With C++. With Python. With Javascript. With PHP. With fucking FORTRAN and COBOL and Ocaml. The fanboyish evangelism is nonsense.
Should quit? No thanks bud 
What's not working?
https://docs.python.org/3/reference/index.html
Print shouldn’t have equals or lowercase its print(rate). Also when doing the “and” you have to do score again ex: score &gt; 2 and score &lt; 4
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
just hude posts on downvote. some of us don’t mind those posts, and i’d rather you edit your own feed than try to mess with mine. 
Because: You didn't format your code You didn't read the sidebar You didn't post this in /r/learnpython You didn't read THAT sidebar
Please put your code into code block and paste your error as well. 
I actually enjoy C, but agree that fanboys are blind to anything that goes against their current mantra. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Or just sticky a post that would contain answers to the most common questions on GUIs
Your entire argument appears to surround one use case. Python supports thousands of use cases. I'm honestly trying to figure out why you haven't written an open source library to solve this problem that you're dealing with that seems to be so prevalant for folks. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
very cool. I hop to be as good as you in python one day.
Yes, was most certainly joking about that :) To be honest after almost 2 decades, there isn't much here that I don't ultimately find a little tiring -- it is after all just about the most popular programming language on the planet by now, and the idea that some 'aged' folk like me would have common interests with the average Python programmer, who is somewhere south of single digit years experience -- in the end it's all pretty much just like that UI question that is bothering you :) But I stay subscribed anyway, community news filters through here, but perhaps most importantly, because old problems are always new again, and experienced folk always have a chance to share the same knowledge that's forgotten all over again with every passing batch of new developers -- like the pros and cons of various UI frameworks!
Please don’t let this guy be your image of Emacs users. We’re mostly a friendly bunch. You should use whatever works for you. Have a great day!
Yep... students. I'm working on a GUI assignment right now and fear of downvotes and general reddit wrath is why I just read and move on. \*heading over to [r/learnpython](https://www.reddit.com/r/learnpython)\*
I get the stdlib implementation is a pain, but there are so many great libraries out there (Arrow, Maya) that I don't even consider this a limitation anymore. 
Not outdated at all. Emacs is both awesome and current.
Absolutely. If anything, these are /r/learnpython posts and shouldn't be in this sub. I don't agree with "just hide those posts if you don't like them". You could say the same thing about spam.
This is a programming question, and would be better suited for /r/learnpython
This is a programming question, and would be better suited for /r/learnpython
That's something I wish python had. Do you have a reason other than preference?
This is a programming question, and would be better suited for /r/learnpython
This is a programming question, and would be better suited for /r/learnpython
This is a programming question, and would be better suited for /r/learnpython
This is a programming question, and would be better suited for /r/learnpython
This is a programming question, and would be better suited for /r/learnpython
This is a programming question, and would be better suited for /r/learnpython
You could make a RES filter for that. Doesn’t work on mobile though.
You might also be interested in my ezgmail module if you want to connect to gmail without having to enable Less Secure Apps for your account: https://pypi.org/project/EZGmail/
Thanks! I'll repost it there
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
 &gt;Rust can't be *faster* than C. That's not entirely true. Fortran for example is faster than C, because it can make assumptions that C can't make, which enable extra compiler optimizations. However, that is all theoretical. Rust is still a few percentage points behind C, and LLVM isn't really set up to be able to take advantage of such extra optimizations. A less theoretical basis for the claim would be that architectures that would be dangerous and unmaintainable in C are possible in Rust due to all the extra guarantees. Look at Servo, for example. 
If you start filtering for reposts, may as well just stop using reddit. No one uses the search function.
You've been told by the bot before that these kinds of posts are best suited for /r/learnpython 
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
&gt; That's not entirely true. Fortran for example is faster than C, because it can make assumptions that C can't make, which enable extra compiler optimizations. Claiming any compiled language is faster than another is nonsensical assuming it is compiled to the same assembly/IR. It may be easier for the compiler to make optimizations because of some assumptions that FORTRAN gives that C doesn't, but not *impossible*. &gt; A less theoretical basis for the claim would be that architectures that would be dangerous and unmaintainable in C are possible in Rust due to all the extra guarantees. Look at Servo, for example. It's not that it's literally impossible to write in any other language, or that the assembly is magically more efficient, but that they're able to push the boundaries further than would be acceptable in other languages. Can you elaborate on what you mean / give a micro example?
That's arguable, but a major issue is compatibility. Especially from the standpoints of academia.
Because adding yet another open source library to deal with the three or four things that I need three or four other open source libraries for is fruitless. This is a discussion about improving Python. My argument is around adding basic functionality that every other language supports and making a second datetime type that avoids overloading the datetime object to support two mutually exclusive timestamp types. (The latter to avoid exceptions that are tricky to debug but easy to avoid with typing) Nothing about my argument makes any use case less-supported. I've built dozens of applications in Python and these rough edges have _always_ bitten me. I honestly don't understand why more people don't demand issues like this get cleaned up. 
This can be trivially solved by making the first element of every indexable object None.
&gt;&gt; That's not entirely true. Fortran for example is faster than C, because it can make assumptions that C can't make, which enable extra compiler optimizations. &gt; &gt;Claiming any compiled language is faster than another is nonsensical assuming it is compiled to the same assembly/IR. It may be easier for the compiler to make optimizations because of some assumptions that FORTRAN gives that C doesn't, but not *impossible*. I mean, you could manually add ```restrict``` to every single C function you write, and then add it to the checklist of things you have to manually verify during code review. But that's both a pain in the ass and tempting fate. &gt;&gt; A less theoretical basis for the claim would be that architectures that would be dangerous and unmaintainable in C are possible in Rust due to all the extra guarantees. Look at Servo, for example. It's not that it's literally impossible to write in any other language, or that the assembly is magically more efficient, but that they're able to push the boundaries further than would be acceptable in other languages. &gt; &gt;Can you elaborate on what you mean / give a micro example? Pretty much every presentation about Servo discusses this in depth, so I won't try to do a better job than they can. I don't have enough deep knowledge to do so. But the TL;DR version is that they can ruthlessly parallelize things and refactor without worrying about accidentally introducing thread unsafely and data races all over the place.
The world doesn't run on UT1, though. I would bet 99.99% of Python programmers don't even know what UT1 actually is. Why would the Python core make the default bend over for such an insanely niche use case for such a foundational library? I don't understand your point about ISO8601 strings. How you parse them shouldn't have any affect on how they're used. The whole point is that the standard library handles computations around for you, so you don't need to think about it. And my suggestion is to make UTC, which most other languages already default to, the default. Plainly put, the current default requires the worst of all worlds (checks on every parse and use of timestamps). The point isn't working with nonzero timezones. The point is the hundreds of thousands of people who can't figure out why their dates don't work who find out the answer is "Just strip /Z$/ from the end of it" on StackOverflow. Or the folks that have the opposite problem and append a Z to the output of isoformat(). I honestly can't understand why Python is the only language I've used that makes this so complicated and full of gotchas. 
This is a discussion about improving Python. I already have to use libraries. 
Conda deduplicates them for you. As long as you conda install and not pip install, you will see a marginal disk space usage (kBs) for the same package in multiple venvs.
My favourite that I keep coming back to is this one: [https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-18-04](https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-18-04). Fairly straightforward for something I assumed was going to involve the dark arts. 
This always comes off super tribal and childish to me. Like indexing by 1 is an offer t you your identity as a programmer. If your not using pointers it really doesn’t matter,and indexing by one allows the syntax to match the mathematical literature, which is really useful for a language designed for scientific computation.
Compatibility is an issue of every software update, people need to put an effort, they cannot have both good features and their legacy systems maintained. Python 3.0 was released 11 years back, I think that is a very good timeframe to sort out all compatibility issues.
Eh what? 1. If you looking to do a mobile app, you better use programing languages such as Java or whatever is called for iOS. Python is not suitable or compatible in that sense here. 2. If you want more fully evolved answers, please explain more what you really mean and what you really want.
There are businesses that would rather stick with 2.7 then spend the money to upgrade. The break in compatibility was horrendous.
Yep, I had that same problem when I wrote a poker bot. But luckily (at least on my system) the \[mss module\](https://pypi.org/project/mss/) was magnitudes faster.
Nah, I have been in this field long enough to have seen it. I blocked them and moved on. I could care less if someone only uses Emacs or uses every Dev tool known to mankind... As long as the code is clean and works, I am happy :-)
Thanks! Glad to hear that conda duplicates all the packages.
&gt; I'm not a big fan of either of these approaches to async (monkeypatching the stdlib so it's async but looks sync) so I can speak in depth. Is this just a dirty solution from an engineering perspective, or is it technically an inferior solution as well in some quantifiable way?
Incredible!
Oh, so you made the post for people to pat you on the back and "don't quit"s. Got it.
Well, people who don't know history are doomed to repeat it. ActionScript pretty much died for very similar reason: artificial monopoly ended, and it became irrelevant. Python is not exactly like ActionScript, you could say that its near monopoly is not artificial. But, it's not a huge difference. Python is primarily sustained by its own popularity. Let language make one bad move, that damages that popularity, and we'll never hear about Python again.
What a nice response! Have one extra great day, courtesy of the house!
How much math would you say someone needs going in? I'm a developer with a decent chunk of experience (about 6-7 years), but I only ever took up to Calculus 1 in college.
Don't forget the almost daily massively upvoted post asking "what job at your workplace did you automate with python" in spite of having a stickied thread dedicated for that topic.
Which integers do you mean?
I read that only gunicorn in sync mode requires nginx to buffer in order to prevent ddos, but that async and gthreads do not require this. I'm unsure if that means that nginx simply isn't necessary when using async or gthreads, or that only the buffering portion of nginx isn't required. Additionally, apparently in sync mode, gunicorn does not support persistant connections. I'm not exactly sure if I need persistant connections, but I know that I make use of them to contact my oauth server which appears to be faster than not using it. Therefore I figure my clients would benefit from using it when reaching my server.
There's so much stupidity and bullshit in this post (and comments)... Last thing Python needs is a TypeScript-like type system. The little value Python provides to CS comes from its original type system, which is nothing like TypeScript and it's probably the only thing about Python that is actually good. I understand that it happened by mistake / very little thinking went into its design, but it was a lucky coincidence. Sometimes a novice programmer just gets lucky... and then the same novice programmer reads a pretentious book and figures "I was doing it wrong all this time!", backpedals on her original idea and does the bullshit she learns from the book :( But, this deserves an even greater bullshit award: &gt; We do expend a lot of effort on ensuring that writing competing interpreters remains viable And they ensure it how? By adding a retarded / useless element or two to the language's grammar in every dot release? By inflating standard library with pointless nonsense, or code with duplicated functionality, by never cleaning up the mess from previous versions of Python?.. How surprising is that nobody really keeps up with their bullshit? Definitely second place in terms of bullshit: &gt; A simpler language can target more platforms, wouldn’t need a GIL and is more likely to have a future. Pytnon doesn't *need* GIL either. Python implementation is simply bad. People who wrote it didn't think about parallelism. Python was intended as a toy language, a replacement for Basic, when it comes to teaching to program. And not a great one at that... So, a lot of corners were cut, and making the language into a real practical language was one of those corners. And the third place would be: &gt; All the evidence so far suggests several of the things he dismisses as irrelevant are actually key contributors to CPython's dominance as the preferred Python interpreter. No... CPython's dominance is the result of its own popularity feeding back into it. There's very little good about that project from programming perspective. It is quite a horror show, actually.
I've always told people that in sync mode, the process delegates requests to individual threads. However after re-reading the documentation, it appears that in sync mode threads are not used whatsoever. Is this your understanding?
Awww, did someone wake up on the wrong side of the bed this morning? Did your dumbass see anyone replying with “don’t quit you can do it!” posts. Hmm, I sure didn’t. I was looking for tips, which I got from actual people willing to help. You should probably read before you comment some dumb shit. Thanks for your contributions tho :)
I would be really happy if Python broke compatibility with native modules. This would have been just the blow to its popularity that would tip the scales so much, that its users would start to abandon Python in big bunches, creating an avalanche effect. And, hopefully Python would die soon after. Nobody needs alternative Python implementations. Python is a crappy uninteresting language, it has nothing to offer on its own. It's a kind of parasite, which owes its survival to its host. Python is a glue between useful components, and that is why it is used: because of the components it glues. If it will become useless as a glue, it will simply become useless.
(1) is unrealistic. (2) if you mean something like what Python does with `ctypes`, then it's crippling slow and too limited. So limited that any meaningful interaction with useful libraries will not be possible. (3) and then what? Expect other libraries to use your favorite portable format? Well, they won't do it. It's the libraries which are the main dish, not Python. If Python doesn't play by their rules, it doesn't play at all.
Mouse event one(2,0,0,0) Mouse event one(4,0,0,0) i guess these are initial value for mouse position. In a while loop, bbox probably is defining pixels area to look at? But whole for loop and that math inside I did not understand. Thanks
you should pack an electron app in a docker container running django. build your gui logic with QT and compile that to web assembly, but you'll have to leave some generic hooks open so you can use transcrypt to transpile your Vue app written in python to JS that interfaces with a QT compatibility layer. that's the most sensible way I can imagine
Oh, so it's "bizarre" behavior... hahaha. No dude, what *you* do is bizarre. What Python does in this case, is kind of exceptional: in most other cases Python, basically totally screwed up, but when it came to its objects, then it had something right. Completely unintentionally, completely serendipitously it landed on this concept, which is kind of good / interesting. But, yeah, it's a fashion nowadays, to try to convert every language out there into a lesser clone of ML, I understand.
UT1 is just an example of how basic assumptions, such as that UTC is an obvious choice for time, doesn't actually apply to everyone. My point about iso8601 strings was just an aside. E.g. For the use case you describe I wanted make a class to do: ``` &gt;&gt;&gt; print(timestring('2019-02-04T0000") + timedelta(hours=12)) '2019-02-04T1200Z' ``` Iso8601, or at least its wiki article, describes a ton of stuff around agreements and not that make default behaviour obvious, including how recurring and relative dates are supposed to work. These seem to not be implemented in most libraries so, again, just using the obvious standard isn't exactly a trivial choice because these parts of the standard are routinely neglected. In python the C time library bleeds through the API. So maybe python is the only language you've used with these issues but it's not the only language with these issues. As such seconds since epoch is the trail that wags the dog in time objects, rather than iso8601 strings. In other words the"default" is a numeric duration rather than a string timestamp, which may or may not be on a system with a modern understanding of UTC. If pythons stdlib were defined today it may be different, but with the internet there's a fair chance that if pythons stdlib were defined today it would include no datetime library.
It is rather bizarre, though. Duck typing may be convenient for developing small to medium sized projects, but it's horrible for large projects, and it requires a runtime which can't do any significant optimization, as there is no confident way to generalise objects.
Google Kivy. It's best option for writing native Android apks/apps. 
For the purpose of full disclosure: I'm working on a commercial product written in Rust, and here's the bullshit I can point in your argument: &gt; Rust is faster than C. Not just in micro benchmarks but it's faster to write and requires considerably less effort to keep safe. No, Rust isn't faster than C. rust comes with a lot of overhead. If you know your C, you can do better than with Rust. But, Rust is a close contender, so speed isn't really an issue here. Rust isn't faster to write. It's probably slower. Rust is a very complex language. It takes you a lot of time to figure out how to even achieve what you want to achieve with this language. C doesn't have this problem. On top of this, Rust has abysmal quality diagnostic tools: i.e. debugging and profiling Rust is a... well, doesn't really work. I mean, yeah, you kind of can run it in GDB, you kind of can use `perf` / `pprof`, but all they spew back at you is some generated code nonsense, which in many cases there is absolutely no way to tie back to your source code. This also renders the safety argument as really overblown: if you cannot establish basic facts about your program using a debugger, then what makes you think this program is going to be more secure? Yes, it does certain things automatically, like memory access control, which is great, but it neglects other things... ---- One thing that is really going for Rust is that it tries to do the right thing... As of right now, it's not succeeding much, but I have respect for them for trying.
The whole point of virtualenv is to have separate environments, so it will duplicate them. However, you should create a requirements.txt with the required packages so you can install them in a new environment by just doing `pip install -r requirements.txt`
&gt; Did your dumbass see anyone replying with “don’t quit you can do it!” posts Given how much profanity you are using in response, I'm pretty sure a lack of such posts made you upset. 
&gt; I wish someone would make a modern version of Python with gradual typing similar to how TypeScript works Cool, I could see that, but... &gt; and does away with a lot of useless things in python ... cabi compat, almost all of the stdlib Some of us find these stdlib (as a packaged, available thing in almost all distributions of python) _extremely_ useful, even if their designs are sometimes crusty, even if a guy doing web development doesn't. Languages should have large, featureful standard libraries. It's healthier for the language and the developer. The packaging situation in Javascript, Rust, and other "modern" languages is crazy. I find the requirement of pulling tons of unverified packages with huge trees of further unverified dependencies just to get normal stuff done to be nuts, and a security and stability nightmare. The standard library also ensures that the libraries we _do_ pull are smaller, easier to review, and don't have huge dependency trees because they can also do 99% of their work through the standard implementations. With Python, I have my cake and eat it too. I can rely on robust standard library implementations and get 99% of my work done, or I can pull from outside if I want some slickness or a side feature. But I don't want to have to pull from the outside for most of my work. It's crazy. If I do have one complaint about the direction of the language: It's _way_ too influenced by Javascript. We should have our cake, but baked in Pythonic ovens. Not "Lets port Javascript to Python".
Since you took calculus in college, I guess you have(or atleast had) a good foundation of linear algebra and statistics. My suggestion will be just to brush up your fundamentals and do some data analysis "mini-projects". More focus must be upon statistics. If you go into field of machine learning, you will have to focus a bit on linear algebra, calculus and discrete maths (sets, combinatorics, probability) as well. All the best!
Gee golly, you really got me with that one 
Gee golly, you really got me with that one 
Yeah I find it pretty handy actually. In matlab for instance I know that an array of length 6 has a last index 6. Reduces off by one errors.
Can I be the contrarian? I rather interact with the drivers directly (we do run a enterprise scale multi-services application), and since many different services (and programs) interact with the DB I really thing it keep developers very attentive to the implementation details on the data model. 
Yeah, my statistics is pretty good - I did a pretty major statistical project back in like 2015/2016 (I took statistics back in like 2007), and I seemed to remember most of the core concepts, so I should be ok with a bit of a refresh on that.
Will any users of this sub be there?
Finishing the code is a final step of making the app.
Good one.. 
Yep I don't use virtualenvs for scientific work. A base install of anaconda provides all the packages I need. Virtualenvs would just be inconvenient.
Yes I want a bot
[removed]
&gt;Python's growth continues to accelerate. True, because a lot more people have started to program and it has replaced C, C++ and Java in Universities. I am not denying that. But I have seen people migrating away from Ruby and Python for faster languages. "Elixir is one of those hipster functional languages" - could be but people are using it. This is what I thought when NodeJS started to grow. Now there is a huge ecosystem built around it. It doesn't matter if it is a hippy thing, if it works it works. All I am saying is, Python can be improved and cater to the more audiences if it does a bit more for performance. Think of writing a CLI app, the development is pure bliss but the startup times are intolerable.
PyPy is more than MJIT I believe, but you cannot tell people to use a different Interpreter altogether. For example in Ruby, people would just not use JRuby even though they claim it is compatible with Ruby MRI and twice its performance. People are afraid that it might break, even though the fear is irrational AFAIK. 
[removed]
*Hey just noticed..* it's your **2nd Cakeday** soham1996! ^(hug)
You can get that book in the latest Humble Bundle btw
I am from India do I get anything special if I take the course?
the accent maybe ;)
Python 4 confirmed
Good point. You only need virtualenvs if: * you need specific library versions, which is almost never the case. This is one of the reasons I love python over Java or javsscript * you need it to be portable. E.g. people can download your repo from github and use requirements.txt.
I read through your blog post. Really interesting. Thankyou for posting this. 
well, I use pyenv + pyenv-virtualenv and for better dependency management, I install [pip-tools](https://github.com/jazzband/pip-tools) in every new venv created.
Nice article. You wrote somewhere "we get two objects with the same id". I believe it should read: "we get two references to the same object".
/r/learnpython and read the sidebar.
I'd try and abstract your logic from your network layer. That way you can have everything in the same code base, and just let the user choose an HTTP implementation, or maybe even provide their own. 
You can use [extras](https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-extras-optional-features-with-their-own-dependencies) to make requests and aiohttp optional dependencies. If you made a `sync` extra that requires requests and an `async` one that requires aiohttp, users could install either (or both) with `pip install yourlib[sync]`, `pip install yourlib[async]`, or `pip install yourlib[sync,async]`.
You can download/compile a package in one venv and install it in others. We use the wheel bdist method, works alright: `pip wheel -w ~/wheels/ &lt;pkgname&gt; -r requirements.txt` Everything it builds will be written in a binary distribution wheel in that directory.. just `pip install ~/wheels/*` in whatever venv you create and everything should be copacetic without additional downloads or builds.
You can read about it in the book of armaments 2:9-21. ...First shall thou take out the holy pin, then shall thou count til 3.
Looks cool! Looking forward to watching these :)
Where you live man? We could be neighbours.
Couldn't you just make it check the tiles at the top of the window instead?
&gt;we get two references to the same object Thanks! I've just corrected it. 
&gt; What Python does in this case, is kind of exceptional: in most other cases Python, basically totally screwed up, but when it came to its objects, then it had something right I disagree with this greatly. Python's object model is incredible complex due to the internal slot system barely anyone understands. If the model worked like people think it does then it would be already way better. I covered quite a bit of the problems a while back here: http://lucumr.pocoo.org/2014/8/16/the-python-i-would-like-to-see/
Great stuff! Thanks.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Can you attach an screencap of the error you're receiving? Could be a few different things but I'd like to just explain the issue than explain all of what it could be. 
Preferably using cmd terminal. Not too familiar with spyder
Delhi
Nice!
[removed]
Read "Working with Legacy code" by Feathers. It's probably the most widely recommended book for this topic.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
/r/learnpython and read the sidebar
&gt; a huge amount of code that was hacked together by someone who has just started coding To be honest, in this situation I'd just start from scratch and use theirs as a reference implementation. If they are really smart in another field and have some magic functions in there, preserve just that part.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Abe dilli se hu bc.😄
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Good stuff!
[removed]
Thank you, i didnt knew about that
The problem with code as opposed to bricabrac is that potentially it all depends on each other. Throwing out your old shorts because they don't spark joy is easy, but you wouldn't try to throw away one jenga stick while hoping to maintain your tower. "Prepare to throw one away" is often a good idea, sadly badly written code is often badly documented one, so you can't even be quite sure what everything does. There might be some weird special case hidden in some unexpected place, there might be an unintended feature that's nevertheless used by someone. And if you just need to add one small feature to a huge codebase, rewriting everything just isn't possible. On the other hand, if the feature doesn't have to be well integrated, a "parallel" codebase is often a good idea. For web apps, that might mean one route being forwarded to a whole different application that doesn't share anything with the spaghetti mess. If that's not possible either, it's really important to feel more confident about the legacy code. Generally the first thing you want to make sure is that changes don't affect the outcome. And that means writing tests. Start with integration/e2e tests. If you don't have to modernize the whole stack, look at your "code path", ie all the modules and files that are related to your upcoming changes. Maybe sprinkle in some unit tests, if that's doable.
I would argue against it. If you are doing scientific work, reproducibility should be a concern, and thus you should keep track of the exact versions of the libraries you have used, so anybody can do exactly the same work. The overhead of a conda env is around what? 1 minute to set up? I think it does pay off to have a virtual environment for each project and that you can reproduce in any computer, independently.
RemindMe! 2 months
I will be messaging you on [**2019-04-04 10:53:11 UTC**](http://www.wolframalpha.com/input/?i=2019-04-04 10:53:11 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/amyds2/my_python_for_data_science_video_series/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/amyds2/my_python_for_data_science_video_series/]%0A%0ARemindMe! 2 months) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Can someone explain how the code above works? &gt;def stop(self): &gt; &gt;"""Stop power thread""" &gt; &gt;if self.power\_thread.alive: &gt; &gt;self.power\_thread.stop() &amp;#x200B; Why do you initiate the process that you define? How it works?
Why not just use `csv.DictReader` rather than manually converting each row to a `dict`?
It's not much! You can be good in python very easily! 
Thanks man!
Sheet, you printing on A2? ;-) Good doc tho!
Start with automatable tests. Lots of tests. Don't change a thing until the old code passes all the tests which match your current business rule needs.
Yeah I can see your point but I'll often have 2 or 3 scripts from different projects open in my IDE at once, so switching environments isn't an option. I also don't want to have to maintain/update so many environments.
😆
Kolkata
Good it is only the 'comprehensive' version ;) But indeed not bad at all
&gt;lets face it most of the unmanageable code we inherit from someone else. Just like vast minority of drivers believe they drive better than average. ;)
RemindMe 4 weeks
RemindMe! 4 weeks
Second
Mobile version needed
Here you are [BioPlate] (https://github.com/Hatoris/BioPlate). Iguess your question may be ask here r/learnpython 
You should share it here also r/learnpython many people we like it too 
Could you do it? I don't know how to share links on that subreddit. Thanks
pip??
Thank you!
Thanks for the tip!
* PEP 572 is now available. Please play round and report corner cases, bugs, discrepancies if any. One case fixed was just before alpha : https://bugs.python.org/issue35877 * The alpha release includes performance improvements at https://www.reddit.com/r/Python/comments/ajy9dw/several_stdlib_methods_with_only_positional/ along with many more improvements at https://github.com/python/cpython/pulls?q=is%3Apr+sort%3Aupdated-desc+label%3Atype-performance+is%3Aclosed . * Asyncio docs were rewritten from scratch. * Security fixes https://docs.python.org/3.8/whatsnew/changelog.html#security * namedtuple attribute access is 1.7x faster : https://github.com/python/cpython/pull/10495 Changelog : https://docs.python.org/3.8/whatsnew/changelog.html#python-3-8-0-alpha-1
I think it would be better if it used a different way to mark types insted of \`&lt;type&gt;\`
&gt;mathematical literature most of the literature in signal processing field use 0 based indexing. a filter response starts with time 0, which makes 0 based indexing very appealing for us. I also have to do coding in C, C++ and (sometimes) javascript. Having consistency really helps. &amp;#x200B;
Thanks a lot for suggestion I didn't see `DictReader` . It's the cleanest way i think
Mostly because of my signal processing background. For example, just look at the equations in this: [https://en.wikipedia.org/wiki/Discrete\_Fourier\_transform](https://en.wikipedia.org/wiki/Discrete_Fourier_transform)
&gt; I think we can certainly say he didn't make a bad decision. No we can't. It could have been a bad idea compensated for by other efforts (e.g. fostering scientific communities early on) or accidents of history.
I have only written a few things in Rust--nothing commerical (yet) but how can you say it's not faster to write? Maybe it's just me but whenever I have to write something in C *it's a nightmare* of Makefiles, header files, making sure I'm using the *correct* versions of libraries, and managing dependencies is a huge pain in the ass! Library X uses cmake so now I need that. Library Y needs something different... That was only tested on a newer (not LTS) version of Ubuntu. My boss suddenly changes his mind and says my thing needs to work on Windows too so now I'm in #ifdef hell *forever*. With Rust I don't have any of those problems. I also don't ever have to debug segfaults (well, if I'm just using pure rust stuff anyway--calling out to C libraries still gives them!), worry about dereferenced pointers, missing calls to free() (because every stupid library has their own special cleanup functions that are easy to forget!), and innumerable "gotchas" like some odd code someone wrote a while back that no one understands because it's "clever" but leaks memory for unknown reasons. I spend *far* more time dealing with all that shit than I ever spend *writing the actual code* in C. With Rust I often have to re-think how I'm writing something but when I'm done **I'm done**. That bit of code will *just work* and will not need refactoring later because it's "not thread safe" or similar.
I've been looking for something just like this. Great work! 
&gt; i think arch had malware in their repositories for a prolonged time (taking over inactive packages) The free-for-all AUR had a barely used package with some tracking malware. The official repositories, with signed packages, from the trusted users did not AFAIK. Else, _citation needed_.
Members of the council as per election : * Barry Warsaw * Brett Cannon * Carol Willing * Guido van Rossum * Nick Coghlan 
If that's they're threat model, it seems at first glance hopelessly naïve. Shouldn't they then have mandatory access controls (MAC), managed Internet access, and if really that paranoid, web access only via proxy?
I think you're in the wrong subreddit, my friend
Not a Windll ninja, but I would guess mouse button 1 press and release events. 
Tip: instead of `line.find(" ") &gt;= 0` use `" " in line` and instead of `"\""` use `'"'`. I would even go as far as to replace that line with `part = f'"{part}"'`.
To be clear, your suggestion is to remove datetime rather than improve it? And your right. ISO8601 durations and intervals are not well supported in most libraries. But it's the most common date and time format I've ever used (and Python can output it very easily with isoformat()). It just can't parse it easily, and when you do parse it you need to do a bunch of verbose checking to make sure it has (or doesn't have) a timezone offset. 
Insane. Now I need a giant paper to print this. 
RemindMe! 2 weeks
Many people stick to the same minor version of Python as long as possible for varying reasons (incompatible libraries, stability, etc). So Python 3.6 and 3.7 both still get security fixes, and all the new features are developed for 3.8.
 no_duplicates = list(dict.fromkeys(&lt;list&gt;)) That is an extremely roundabout and expensive set operation. Just wrap the list in `set` and cast it back to a list. No need to build a dictionary out of it to get uniqueness. no_duplicates = list(set(&lt;list&gt;))
What? You don't have a dot matrix printer with a continuous roll of paper? 
&gt; C it's a nightmare of Makefiles So... don't use Makefiles? There are like at least ten different build systems for C. And they are really very different, with all sorts of bells and whistles... Probably, if you like one of them, you wouldn't like the other, but, the diversity is astonishing. Managing dependencies in Rust is also painful. You run into all sorts of places where Cargo doesn't yet implement things you wanted, or the things simply don't work because they have bugs... Or, only available in nightly builds. And then you will write build.rs anyways, because the build system is too limited. And then you will also have to interface with code not written in Rust, where Cargo has nothing to offer... Linux / Windows compatibility problem is, again, not specific to the language. Our Rust code will not run on Windows for example, because it needs udev bindings and makes a lot of assumptions about the kernel, IP implementation etc. Only trivial programs really would work unaltered on both platforms. On the other hand, not so long ago I needed a cross-platform solution for a native extension for Python, and... I just used APR library. All I needed to do for cross-platformness was the addition of `extern C {}` in every file.
I'm not exactly sure, but I reckon part of the reason is breaking changes. There are breaking changes between 2.7 and 3.x, for example `print` as a statement vs. as a function. AFAIK `async` is a keyword since 3.7, so that's the breaking change between 3.6 and 3.7. You could technically stop developing both 2.7 and 3.6, but you would force a lot of people to use a no longer supported language or have them rewrite lots of code.
I didn't say they did it right. But, at least, they had a valuable insight. On the other hand, an attempt to redesign every language as a slightly (or greatly) worse copy of ML is just plain dumb.
Well, what you wrote is just another really uninventive and closedminded bullshit. If you don't know how Python types work, you are in no position to make assumption about how they would work at scale.
There is already a whole discussion about it on Hacker News :) https://news.ycombinator.com/item?id=19075325#19075776
Hahah, so, you want to step outside, this subredit is too small for both of us? Huh?
thanks a ton!
Start by improving the naming of functions and variables. Look for meaningful and repeated blocks to break out into functions. This will add to the clarity and begin to let feel you own the code. Some wisdom on rewriting here: http://clabs.org/blog/OnRewrites 
Yes, by asking your question in this subredit r/learnpython 
Try changing headers in urllib. But also, Selenium is not slow. It depends on a few things but driver choice is one of them as well as the browser you choose, and the code itself. I have a Selenium framework that can run 9 scripts in 15 seconds. Obviously depends on the size of the script, but just showing it depends on how you structure it, and working out which driver, browser and code optimization you choose.
Do you work with TabPy at all?
&gt; Well, what you wrote is just another really uninventive and closedminded bullshit. That's rather hostile. I'll continue under the assumption that you mistyped, and meant to engage in fruitful discussion, instead of looking like a smug asshole. &gt; If you don't know how Python types work, you are in no position to make assumption about how they would work at scale. I think I have a perfect understanding of how Python types work, on the binary level, compiler/interpreter level and at the project level. On the binary level, there is the problem that the class setup has many indirections, which result in very poor processor cache utilisation. There's also a lot of hashmaps involved, each requiring processor power to go through, and which make any memory prefetching impossible. On the interpreter level, the problem is that `the_object.the_member` can mean many different things. It could be that `the_member` is in the `__object__` dict, the class `__dict__`, or any of the superclass' `__dict__`. It could be provided by `__get_attribute__` or `__get_attr__`, which in turn can be found in the object `__dict__`, or in the (super)class `__dict__`. This path can be different for every object, so a loop going over a thousand objects, will need to do these lookups a thousand times. Worse: each of these can change, meaning that two successive member lookups on the same object, will need to repeat the lookup. On the project level, the problem is dat if a member is set outside the initialization (or even worse, through some magic in the dunder methods), it becomes really hard to trace why it has the value it has. As long as the project fits in one person's mind, this isn't much of a problem, but as soon as the project needs to be split up, you need coding conventions to prevent developers using duck-typing the way it was intended. Each of the above problems could be prevented if python had well-implemented immutable typing. With immutable typing, `the_object.the_member` would always result in a single lookup, which (if properly optimised) could even be a list lookup: the fastest and most cache-friendly lookup available. Python does provide `__slots__`, but due to some design decisions (allowing dunder magic), the interpreter really cannot take advantage of that. Also, the usage of `__slots__` is rather inconvenient, which results in few libraries taking advantage of it.
If I were to break it down into steps or phases, I would go with this: 1. Understand (the code) 2. Test (the code) 3. Refactor (the code) To change something for the better successfully, you first must understand the thing and understand how and why it fails to accomplish the task for which it is intended. Only then can you determine how it should be changed. Testing the system will help you to further cement that understanding, provide a safety net for the changes you intend to make, and provides great value to anyone that either takes over maintenance after you're gone or joins you in the future. I second the suggestion for Working with Legacy Code. It contains a lot of wisdom and specific examples that will prepare you for the trials ahead. 
The game begins with some tiles frozen at the bottom/middle of the screen
Then how do you instantiate your Turing machine?
Without looking it up, I'd guess that the numbers 2 and 4 in the mouse_events correspond to "left mouse down" and "left mouse up" 
I kind of remember casting from one of my classes... can you explain what's happening in your code? Casting sort of changes a variable's type, right? At least for the line of code it's in to complete an operation? 
Title: Python Interview Questions &amp;#x200B; content: asks django and numpy questions. 
Selinium is a pretty big hammer for most tasks. I haven't looked at the web site your trying to crawl, but I only use selinium tool if I need to run JavaScript on scraping a client. Most of the time I can get away with requests lib and beautifulsoup which is much smaller and faster.
They're what are still officially supported. Once 3.7 was released, there was still support for existing 3.6 users, and there will be for some time after the release of 3.7. Same with operating systems, typically when one version is released, the last version will still be supported for some time. It's not that 3.7 is backwards incompatible with 3.6 - code written for 3.6 should largely work just fine on 3.7. It's more that 3.6 is still considered stable and supported for those that still need it
Nope. Why did you ask?
iOS app?
What's so special about it
I mean, it's decent, I already had it bookmarked, but claiming it's the best ever...?
Trust me: I try to avoid Makefiles wherever possible! As for managing dependencies in Rust... Maybe my projects have been too small to encounter the issues you're experiencing. When I need a specific version of a crate I just put it in my Cargo.toml file and call it a day. It auto-fetches it and Cargo makes sure it gets compiled properly for me. I don't have to *think* about it which is what makes it faster (for me). Also, *I hate header files*! They are annoying as all heck. I can't *just write my code* and compile it, *nooooo*! I have to make sure that everything appears in the order in which I use it or I have to add stuff to the header file. "Should I put this in the header or just at the top of the file?" Is basically a question I'm constantly asking myself whenever I'm coding C and another one is, "*where* did this variable/function come from?" When looking at other people's code. In Rust you can kind of have that second problem too if people aren't specific in their `use` declarations but it's still better than C where you "just have to hunt" or use a bloated IDE that gobbles up seemingly limitless amounts of memory keeping track of every little thing so you can mouse over variables/functions to see where they come from (at least it's not as bad a Java though, haha!). I know I mentioned this before but it seems like it comes up *constantly* for me whenever I deal with C: I'm tasked with adding a feature or fixing a bug and *you just have to know* all the little details of *every bit* of that code *and all its dependencies* before you can change it. Lest you miss that `fooCleanup()` call that prevents the *foo* library from leaking memory. You also *just have to know*--upon a careful review--that any particular bit of code is thread safe. Even *then* it can be hard to be sure. Even if I ask the guy that wrote it (ten years ago) if it's thread safe he'll be like, "oh, well... *Probably*. That was ten years ago! Don't you know it takes like 20 years of coding C to write code that you know for certain is truly safe?!" Hah.
Any other reason than your preference? 
I feel like it's a dirty hack. And the idea that someone's going to come in behind my back and change all my sync code to run async is a little disturbing to me. Mostly because if I'm not writing code with that in mind then who knows if it's actually safe to run that way. Say what you will about asyncio, I vastly prefer writing explicitly async code.
It's turtles, all the way down.
Not sure I'd say "best ever," but I'll give it a "Damn Good" award. It's like "Python For Developers That Are Too Busy To Read A Book." Hmm.... /u/pizzaburek, you should self-publish this on Amazon :)
Great collection. Anyone think it'd be useful to have links to the docs on these topics for when a deeper dive is needed? Could be a fun PR. 
Thanks for the response, it clarifies a lot. While looking at projects like this my mind was going more into "let me run Django" on top of JVM which will lead to eventual disappointment. Seems that aim is to "script my JVM codebase", for which Python2 can be suitable.
Simple question: Can you give a simple answer?
Appreciate your response. Thanks alot.
My definition of expert is like that because there _is no "official" definition of "expert"_. Anyone who puts that on their CV is, to me, the same as the person who puts down starts/progress bars to represent aptitude in a certain set of areas. 
Have you looked into scrapy? That is the tool I use at work!
I have been dreaming of getting a small relatively inexpensive mesh telescoping kit together or even a white paper on a protocol for sharing images detected and viewing the same object from hundreds of slightly different vantage points. 
Its called PEP8.
list(dict.fromkeys(&lt;list&gt;)) preserves ordering, whilst list(set(&lt;list&gt;)) doesn't.
Thanks everyone! I would just like to share this thing with as many people as possible, so I went with clickbait title this time :) It's interesting that unlike last time, post got ignored on r/programming, but is trending on Hackernews (they changed the title after it came to the top).
Congratulations on being a master baiter! ;) &amp;#x200B;
It says in the title. It is the best.
Yes, everybody want to help, but if you ask there r/learnpython. Don't forget to share code when you will make your post. 
This a question for r/learnpython. Have you active your environment before pip install? 
Yeah. 
Yeah
That “accidentally” preserves ordering, and only if you are doing it in Python 3.6+. There are no promises of ordering in vanilla dictionary implementations which is why there is an explicit `OrderedDict` class. The recent change in dictionary implementation had a side effect of preserving order. You shouldn’t bank that on being the case where it actually matters. 
Im really really new to Python sorry but what actually is a cheatsheet? 🧐
thank you, It fixed the problem :) &amp;#x200B;
May r/scrapinghub will be worth a look. But I personally try to use requests + Beautiful Soup when I can. Often that implies many hours of analyzing the target and faking very specialized requests. If no other chance use Selenium + PhantomJS. It is slower but on heavy loaded java sites it was my best bet so far. 
So it's not quantifiable, just personal preference?
Cheatsheets are not language specific, they are very condensed information about the language. All kinds of fuctionalities, how they are used and what they do.
&gt; **Can we have a moratorium on all GUI posts?** &amp;#x200B; That's an awfully wide net to cast. I added "-gui" to my search in r/Python and poof, all GUI posts gone. Problem solved?
&gt; I mean, you could manually add ```restrict``` to every single C function you write, and then add it to the checklist of things you have to manually verify during code review. But that's both a pain in the ass and tempting fate. Or modify the parser to add that qualifier to all functions. As for Servo/Stylo I'll have to look into it because I'm not familiar with that.
Yes. I'm not a fan of their approaches to async so I've never explored them in depth. So I'm not the most qualified person for discussing the tradeoffs of gevent vs eventlet.
Maybe a better way to test him would be to give him a complex assignment that a expert should be able to complete quickly. Pay him a few bucks to do it. See how it looks. And a good interview question to ask might be... "you put on your resume that you are an 'expert' at python. That is obviously a bold statement. What makes you think you are an expert?" Feel free to poke him a bit if he gives you a short answer. I bet you would get a lot more out of that approach than asking all those other questions.
&gt; Initial support for PEP 572 - Assignment Expressions &gt; ## Initial support for PEP 572 - Assignment Expressions &gt; # Initial support for PEP 572 - Assignment Expressions reeeeEEEEEEEEEE /s
They just announced in the meeting this morning the results. The winner had about 400, but they said I hadn't participated. I guess they're having someone scan profiles manually and make a tally of activity each day and my profile wasn't set to share that activity. I'm blown away that this how they're handling this because that's an incredible waste of time, but also kind of pissed they didn't say make sure profiles are set show that type of thing. I would have thought they were pulling this data from a tool they bought or through the LinkedIn API. Script works fine so I'll turn on the setting and I'm going to run it like crazy this month. They can burn an entire months salary of a person counting likes on LinkedIn now.
I wrote an application to clone USB drives, it's not pristine with comments and tests but it works; I use it all the time. https://github.com/blakev/python-flashstation
Dang. That stinks... &gt; I'm blown away that this how they're handling this because that's an incredible waste of time Perhaps they wrote a python script to do this! Haha 
They asked if I wanted to write one to handle it after I asked why they were hand counting. I might do it for fun but I would sell it to them if anything. Make more than a gift card then.
err sorry, I don't understand?
No, that's not true! Dicts are not ordered according to the spec. It's just modern cpython that has them ordered.
https://youtu.be/Y6SSTRr2mFU 
Full time
I was expecting GvR, Brett and Barry. Also i was a expecting a woman core dev, Carol or Emily. Carol has more experience then emily, also she works with jupyter. But i wasnt expecting nick, i was expecting lukaz instead. Interesting results.
First off, most operating systems maintain multiple stable releases for at least a short while. Debian itself maintained Debian 8 for a year after Debian 9's release, as they have for quite a few releases ([https://wiki.debian.org/DebianReleases](https://wiki.debian.org/DebianReleases)). Ubuntu currently maintains 4 stable releases (18.10, 18.04 LTS, 16.04 LTS, and 14.04 LTS; [https://www.ubuntu.com/about/release-cycle](https://www.ubuntu.com/about/release-cycle)). The Linux kernel also maintains a LTS system; currently, there are 5 LTS releases, in addition to the mainline ([https://www.kernel.org/category/releases.html](https://www.kernel.org/category/releases.html)). Projects do this as a favor to their users. Very often, users cannot easily upgrade to the latest version of a product instantly. Some folks insist on doing QA with their software and a new release of the base before upgrading across the board. Python 3.7 should be a superset of 3.6, but often bugs creep in, and subtle changes to behavior can cause people's code to fail. So, while that's happening, the project supports the older release with important bug fixes. Actual serious development work doesn't happen on stable, so even projects with a single stable release actually support two "releases". The real action in Python is on what will become 3.8 someday, just as it is with Debian "buster" (eventual Debian 10) and Ubuntu "disco" (eventual 19.04).
You can absolutely have multiple "distribution" packages (there isn't really such thing in Python, but if you squint hard enough, you can imagine that there is) per single code base, and include different subset of common sources in different distribution packages. There are several ways to achieve this. 1. Override `setup.py sdist` (never touch any of `bdist_*` stuff!) in such a way, that it takes an extra argument that tells it what subset of sources to include, and handle that in the command code. 2. Create `setup-sync.py` and `setup-async.py`. There's really nothing special about the name "setup.py". If everything else in `setup.py` is trivial, then the amount of copying between sync/async copies will be minimal. Do not use "extras" - they don't work. One extremely bad thing about them is that their behavior is inconsistent between `setuptools` and `pip` (and who knows what others do?). If `setuptools` cannot find an "extra", it will fail the install (the right thing to do), but `pip` will just install whatever, usually resulting in unusable system.
First point: there are actually 5 versions of CPython which are "active" (i.e. not end-of-life). There are many more once you include the other implementations of the Python language specification. 2.7, 3.4, 3.5, 3.6 and 3.7 are all maintained. 2.7 will go EOL in 2020-01-01, although it's likely to be maintained to some extent by 3rd parties; 3.4 is expected to get its final maintenance release around 2019-03. Minor versions come out pretty regularly. Organisations which have large python deployments don't want to be completely trashing and rebuilding all of their environments every 6 months. I personally believe in targeting modern versions, but you run into problems: if you're writing an executable, it's helpful to target versions of python users are likely to have easy access to. It can take a while for new versions of python to work their way into package managers, so being compatible with one version back is often helpful, rather than expecting them to compile the latest python release from source. If you're writing a library, targeting a broad base of versions is valuable because your users may have other constraints (maybe they're using some other unmaintained library with no modern version, or they're restricted by what python version their school or company uses). For my own projects I target the latest version because, as you say, some of the new features are great. For shared projects I advocate for supporting the last couple of versions of py3. For libraries I start off testing against all of the maintained versions, and eliminate them if they're significantly getting in my way. I plan to drop 2.7 like it's hot next year though.
It's not bad as you think. It certainly better than craps like JS or Java. cpython is design mess. And the only thing its good at is being glue for C API's. But yeah. Its popularity will be decreased much by that. I hope data science migrate to a sane language like Julia. Not javascript.
Yeah. Just pitch it as “I can do it for $X and you’ll save $Y!” Obviously, make sure Y&gt;X haha.
The silly walks
You can have semi mutable objects, so position with description, as long as position is immutable then that works (the description is ignored for hash and eq).
&gt; But, isn't the "asynchronicity" of a web app a responsability of the server? Not if your app is natively async. You can work with a one-worker-per-request model with Gunicorn or mod_python or whatever, or you can work with an async model. The two behave fairly differently. &gt; As far as I understand, when you have a flask web app, each request the server will create a new process of the app, so where does the app being async come in play? Depends on the server, really. Some, like Gunicorn, will run a limited amount of workers and just block the request, some will spin up workers uncontrollably. &gt; Talking about end user design philosophy, you don't really want a request that takes longer than 2-3 seconds to respond, when that's the case you're better off sending the code to a queue/thread/subprocess. Being async isn't about how fast you can handle a single request, it's about how many requests you can be handling concurrently. Spinning up a process per request is expensive; spinning up a coroutine per request is extremely cheap. &gt; I went after async web apps thinking it was what I needed, but soon realized I could do the same with Flask + a queue, without all the hassle of finding cheaps web app hosts that work with async. "Web app hosts" are your problem here. Just deploy on your own infrastructure on EC2 or whatever, and your problems will be solved.
Well, "money" is the problem hehe. So, the servers used by these async frameworks are handling more than one request per process/worker?
Automating the creation of few weekly CSV files by writing a Python script to run the T-SQL queries and output the CSVs automatically. So far I've got the T-SQL running in Python nicely. Now to export this...
Scaleway or DigitalOcean have VMs for under $5/month. Heroku is literally free for the lowest end tier. And yes, with async you generally have a single process doing all the work, with a lot of coroutines inside.
They are in Python 3.7: https://docs.python.org/3/tutorial/datastructures.html?highlight=dictionary#dictionaries Performing list(d) on a dictionary returns a list of all the keys used in the dictionary, in insertion order ...
There is two things that can be described as async when talking about web app. A) the fact that the app loads the pages asyncronously, that is the app ( web page) only load the parts of the page that needs reloading rather than have the server reload the page every time. This has to be designed on both ends, the front end would have the ability to request only the information it needs (usually as JSON) where the front end then takes the JSON code and formats it to show it to the user. In this situation, your python backend would receive the request and prepares this relatively small JSON response rather than rendering an entire template. This is what is called AJAX. B) purely on the backend side, you can have your back end process the requests asynchronously. In the typical old school python case, that is done via processes, so each time a new request is received a new process is spawned by your reverse proxy like nginx to respond to it. Internally each process is synchronous in its own time line, it gets the request, get the needed data from database or whatever then prepares the response and send it. If you run your flask app directly, without any additional software. Your server will be totally synchronous completely finishing the request before it responds to another. When Node.js came it was designed to be asynchronous, meaning that when it received a request, it can receive another request before it finished responding to the first one, it does that by not waiting for the data to come from the database or hard drive, instead it will request that data and reopen its receiver part to get another request waiting until the data is available and when the data comes it will then finish responding to the first request Python now can do that but I am hazy on the details as I have personally switched to Go Lang. In Go, the same process can spawn its own “go routines” which are a light weight alternative to having an entire process being spawned to respond to each request 
The GIL usually gets a lot of hate, but the good thing about it is, that it makes Threads extremely cheap. I think you can get really far with uwsgi or gunicorn, letting them start a small amount of processes and a large amount of threads per process. The OS will then do what it does best: switching between Threads as they wait for IO.
Afaik you should get your cites yourself i got you at least 1 other example where it was 8 month in the official distro but apparently you just ignore what doesn't fit into your perfectly fine rainbow and ponies open source world. Else fuck you.
I'm starting reaserch on an auto caller... For good. Turns out there's a huge database that credit companies sell your data with. There's an automated phone number you can call and have your name removed from the "sell my information" database, based on SSN. Sooooo.... I'm gonna make an auto caller to brute Force everyone off the database.... No more sold information. Of course it will be obvious and I'll probably get blocked, but it's gonna be fun to learn how to do it.
For sure. Casting is a way of explicitly changing the type of a variable or value, etc. Coercion is an implicit change in the type of a value. This is casting because I’m wrapping a set object in a list - basically telling the python interpreter to turn this set into a list (there are some reasons you’d want a list over a set even though they are somewhat similar in what you can do with them - iterating through, etc). Coercion is when you don’t have to tell the language to do anything special. I think a simple example would be the interoperability of floats and ints in Python 3. Saying `x = 2.3 * 1` will coerce the 1 into a float so it can be multiplied to the 2.3 and stored as a float in x. Someone please correct me if that’s a bad example. 
In 3.7 the ordering of dicts is guaranteed.
Is there any chance of a version that works on a mobile? It would help people with single screens who use a mobile to look up documentation.
lmao good idea
Shure, OK... Let me just open my programing window and enter some code for you :) https://youtu.be/0Ec6Z31S1fA?t=89 I'm joking of course... I will do it, but not this week, maybe next :)
Read our sidebar, then visit r/learnpython and read their sidebar
Try r/learnpython, a sub specifically made for... learning Python.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Number 12: Your `isalnum()` and regex solutions aren’t equivalent. `isalnum()` recognizes all unicode letters, not only the basic A to Z alphabet. &gt;&gt;&gt; 'Nürnberg'.isalnum() True &gt;&gt;&gt; bool(re.match('[A-Za-z0-9]+$', 'Nürnberg')) False
Damn but it must be a hassle to use GO considering its popularity no? It must not have as much frameworks/libs as Python
some\_string = str(input("What is your name: ")) some\_int = int(input("What number: "))
TIL. It's still faster to do a `set`, cast to `list`, and then have to call `sorted` on the resulting list then it is to do a `dict.fromkeys` call on a list. In [24]: foo = list(range(1, 10000)) In [25]: foo *= 20 In [26]: len(foo) Out[26]: 199980 In [27]: %time %prun no_duplicates = list(dict.fromkeys(foo)) 4 function calls in 0.006 seconds Ordered by: internal time ncalls tottime percall cumtime percall filename:lineno(function) 1 0.005 0.005 0.005 0.005 {built-in method fromkeys} 1 0.000 0.000 0.006 0.006 &lt;string&gt;:1(&lt;module&gt;) 1 0.000 0.000 0.006 0.006 {built-in method builtins.exec} 1 0.000 0.000 0.000 0.000 {method 'disable' of '_lsprof.Profiler' objects} CPU times: user 6.38 ms, sys: 136 µs, total: 6.52 ms Wall time: 6.45 ms In [28]: %time %prun no_duplicates = sorted(list(set(foo))) 4 function calls in 0.003 seconds Ordered by: internal time ncalls tottime percall cumtime percall filename:lineno(function) 1 0.003 0.003 0.003 0.003 &lt;string&gt;:1(&lt;module&gt;) 1 0.000 0.000 0.000 0.000 {built-in method builtins.sorted} 1 0.000 0.000 0.003 0.003 {built-in method builtins.exec} 1 0.000 0.000 0.000 0.000 {method 'disable' of '_lsprof.Profiler' objects} CPU times: user 4.08 ms, sys: 58 µs, total: 4.14 ms Wall time: 4.13 ms
Go actually has a really good ecosystem for building backend services, because the entire purpose of Go is building backend services. You'll probably run into issues trying to use Go for other things, but it is designed to be good at a specific thing, and it's damn good at it. 
The ordering might not be a sorted ordering.
Thank you, and sorry for the others, i didnt know there is r/learnpython
So I've listened to that entire talk, but there are lots of misleading aspects. For the most part, the actual claim is that Rust provides some abstractions out of the box, and whatever other abstractions are needed, they vendor the crates. That's less of an argument that Rust was faster/faster to write in and more so that they got lucky that such abstractions were already written or built in to the compiler for them. And for the rest-- the major arguments is that the compiler produces some faster code in some cases. But you can't compare that to a C compilet without first having all those relevant abstractions. And even then, you're battling compilers, not languages. You can't confuse the two, because compilers constantly change and so do ISAs. If a new instruction is added that GCC exploits but the LLVM is slow to catch then one could argue C is faster for such an operation (if you lump languages and their compilers together). It just isn't a valid conclusion. A compiled language can only be truly faster if the language specifications of two different languages force operation at different instructions. For example, imagine a new arithmetic operation called "magic" which converts all 5s to 0 but everything else stays the same, and an instruction for this operation was provided at minimal cycles for all instruction sets. If the rust specification forced the use of the instruction but C forces the use of the slower set of bitwise and boolean operations, then Rust would be objectively faster than C at that operation. But otherwise, even if the C spec simply said "do it however" and compilers don't use that instruction albeit they should, then the languages are not different in speed. The RustC compiler could be faster than gcc. But not the languages themselves. Now, it is good that Rust comes with a lot of abstractions out of the box. I'm not saying anything against that and it's a good pro for the language. But to simply say because an abstraction comes out of the box the language is faster is extremely misleading. As for faster and easier to write, only if there isn't an equivalent library in other languages.
Dict ordering is insertion order, not sorted order; your code is not equivalent.
That really wasn't necessary. Written word doesn't have tone. I'm still not mad enough to give you an F.U. back, just disappointed. And I very well know know Arch's warts. I use Arch because it's _my most convenient_ lesser evil. I'd much rather different libc, some deps made optional, none of this, none of that, an init system that is better for embedded, etc. Same with all the Python ecosystem I have to use, etc. I don't need a lecture. I also did read that trojan's PKGBUILD, etc. And I still can't find anything like you mentioned. Only some AUR packages, which are explicitly *NOT TO BE TRUSTED*, just like any other random code you clone of GitHub or wherever. So yes, saying that somebody took over an official package is a bit obscure and probably requires citation. Transport before signing, compromise, upstream, or other isn't.
As long as I don't need Javascipt I use Pyquery. It is not popular here but if you already know Jquery it is really easy for webscraping. Requests and Beautiful Soup works too.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
You can call sorted on any sort of ordering you'd like by specifying a key, if that's what you mean. You can use `mylist.index` - `sorted(foo, key=original.index)` if you don't overwrite your initial list, and it'd be in the same order as your starting point. This is such a weird edge case I don't understand all the arguments against it, other than people trying to call out gotchas. If you have data that can even have duplicates you lose all meaning of the original data by stripping them out, or shouldn't be using a simple list to store them. You could get the same information by using `collections.Counter(foo)` and also have the side effect of having the actually metadata of how many times the dupes appear. My initial comment is just about turning a list into a unique list of its values.
Addressed here: https://www.reddit.com/r/Python/comments/an0kya/best_python_cheatsheet_ever/efqkpmu
The fear of God is the begining of knowledge... 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Letter by letter isn’t usually possible. Most apps process the entire string and won’t return if a single char is correct.
[removed]
Whenever programs or libraries try to bridge architectural divides you end up with a shitty unmaintainable mess. NoSQL vs SQL is an architectural divide as big as x86 vs ARM. If you don't pick only one it will create tremendous pain for the developers and users alike.
I'm not quite sure how you've managed to interpret the talk that way. The fancy abstractions are nice, but they're only possible to use in practice *because* the compiler guarantees it's safe to use them. The whole crux of the matter is that because the Rust compiler can statically verify code safety to a large extent, the programmers can write more aggressively parallel code, which would have been *possible* to write in C/C++, but *completely impractical* to write. Which means that in a practical sense, you can write faster code in Rust, not because the codegen is super amazing and magical (it isn't, just as you've said), but because the programmer can use parallelism in places that if they were to do so in any other language, the maintenance burden of the inevitable terrible bugs would render it totally not worth doing. 
they are still maintaining 2.7 is because there are still a lot of places(enterprise) using 2.7 especially CentOS use Python 2.7 in OS level, so you cannot upgrade the python version. &amp;#x200B;
Thank you (and all others) for the explanation. It makes more sense to me now.
"Weird edge cases" cause the the most problems in debugging becuase people assume the fault is elsewhere (this can't be wrong, it's just a simple X). Elimlinating weird edge cases is very useful. I personally don't think the edge case is all that weird.
&gt; Asyncio docs were rewritten from scratch. Wow, thanks. They were a mess before. I'll take a look. 
&gt; Initial support for PEP 572 - Assignment Expressions Did Guido misread that as "resignment expressions"?
&gt; Initial support for PEP 572 - Assignment Expressions Did Guido misread that as "resignment expressions"?
&gt;You can use mylist.index &amp;#x200B; You make good points, but I do want to point out that using index as a key will add a linear search for each list item, and will thus make the sorted() solution \*\*much\*\* slower: In [7]: %time no_duplicates = list(dict.fromkeys(foo)) CPU times: user 2.87 ms, sys: 30 µs, total: 2.9 ms Wall time: 2.9 ms In [8]: %time no_duplicates = sorted(list(set(foo)), key=foo.index) CPU times: user 482 ms, sys: 3.55 ms, total: 486 ms Wall time: 482 ms &amp;#x200B; I think the idea of removing duplicates while otherwise preserving order is not \*so\* exotic, and the fromkeys() trick is worth knowing about, though I'd personally used OrderedDict to be explicit about it.
Scientific libraries are also quite mature and both rarely break the API and have long release cycles. It is far more important to document the version of your code than it is the libraries you used, since your code is usually nascent and changing by the day if not by the hour.
100% agree. Don't want it to seem like I'm trying to push for never using `from_keys` - just that this doc simply said "no_duplicates" which can be achieved with a much simpler and clearer method (for lack of a better word). If I came across that in a code base, it is not at all clear that it's trying to achieve that specific outcome by rerouting the creation of essentially a set through a dictionary.
do your own homework, it's there to help you learn to solve problems
For sure, I'd say that's where taking the time for using a set and explicitly sorting is almost _better_ even though it is considerably slower (shown by the implementation of /u/primitive_screwhead as mine is just a literal sort instead of insertion order) if it's a wonky/custom ordering. Better to explicitly transform data than rely on a route through another wholly-unused data structure just to achieve it.
RemindMe! 3 months
I thought your initial objection was that dict conversion was slower, now you say the sorting sorting is better, even though its even slower? Anyway I've learned not to trust micro-benchmarks as the exact time takenb will depend on the data. The sort time depends on the initial ordering of the data (e.g. if only 1 element is out of place, vs the entire list being back to front) and how expensive the comparison operator the sort uses. I would always recommend coding for clarity, readibility, ans good algorithms, and worrying about optimisation of this nature only after development is complete, and performance is seen to be a problem, and profiling has shown where the bottlenecks are.
Mobile webpage. OP needs something like viewport set to 1.0
RemindMe! 6 days
Yeah I definitely goofed by trying to use that example but I’ll gladly eat my words. Back to basics I was just trying to point out that was an odd implementation as the prime example for uniqueness of a list. 
I mean there are tons of articles about Guido
GvR
You should add Mongo support to sqlalchemy and then everyone can be happy.
A cheat sheet is a very brief piece of info that will give you the answer to a common thing quickly. It's not meant for learning but to jog your memory on how to do something you've already learnt. Especially if you program in a number of languages and can't remember exact syntax used in the language you're using. Eg. Let's say you want to do some string manipulation but you've forgotten the exact syntax on how to split the string. Instead of trying to find it on Google/tutorial/guide/book, you can have a quick look at the cheatsheet and this one specifically states... &lt;list&gt; = &lt;str&gt;.split(sep=None, maxsplit=-1) This states that the string class has a method called split. The first argument in the split method is what characters it will split the string and the second argument is how many splits it will perform. The result will be in the form of a list. For me, i always have to do it when i want to find the length of an array because different languages implement it differently. Eg. *len(&lt;array&gt;), length(&lt;array&gt;), &lt;array&gt;.length(), etc*.
First, ask stuff like this in /r/learnpython Second, try calling it with a=0 and b=4, or anything but 10. You might find the results enlightening.
Can someone explain what `enumerate()` does exactly?
Is this set up as an extension host? https://blogs.msdn.microsoft.com/appinstaller/2017/05/01/introduction-to-app-extensions/ As in, can I create a UWP app and say that it is an extension on Python, and therefore have the windows store install both my app and python when my app is installed?
“a or b == 10” isn’t doing what you think it does. Expanded out (into English) that condition reads: “if (a), or if (b==10), or if (a+b == 10)” And “if a” will return true for any value that isn’t zero (try it out). Change the first term to if a==10 or if b==10 and itwill do what you want
On the face of it it loooks like it should work, I would throw some brackets on the conditions to make it more explicit . (A or B == 10) or ((A+B) == 10) What happens if you do 10,0 or a 5,5 ? Another troubleshooting step would be break the if statement up so do a if A or B == 10 see what that does and then try If (A+B) == 10
It returns iterator of index, value pairs: &gt;&gt;&gt; list(enumerate(['a', 'b', 'c'])) [(0, 'a'), (1, 'b'), (2, 'c')] So you can then use it like this: for i, letter in enumerate(['a', 'b', 'c']): ...
Not OP but thanks for pointing that out I was a little stumped on why it would not work. I suppose I wouldn't of written the condition statement in the way OP did in day to day coding but went along with their logic while reading the code.
/r/learnpython and read the sidebar.
Has anyone used Envoy instead of nginx? I would like to know your experiences
Minor stuff: &gt; flags=re.IGNORECASE Since we're talking regexes anyway, just add `(?i)` to the beginning of the regex.
That's so weird... It can actually be added anywhere in the regex.
&gt;anywhere in the regex Even worse: it can be toggled for subgroups. \[Source\]([https://github.com/python/cpython/blob/89427cd0feae25bbc8693abdccfa6a8c81a2689c/Lib/sre\_parse.py#L811](https://github.com/python/cpython/blob/89427cd0feae25bbc8693abdccfa6a8c81a2689c/Lib/sre_parse.py#L811)).
Take inspiration from https://github.com/njsmith/h11/blob/master/README.rst
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
&gt; The fancy abstractions are nice, but they're only possible to use in practice *because* the compiler guarantees it's safe to use them. That's not entirely true. When it's an abstraction of Rust, then sure, but the point is that in theory a C/C++ compiler can also make those same guarantees. Just because GCC doesn't doesn't mean JoeSchmoeMrRoboto doesn't. &gt; The whole crux of the matter is that because the Rust compiler can statically verify code safety to a large extent, the programmers can write more aggressively parallel code, which would have been *possible* to write in C/C++, but *completely impractical* to write. Firstly, it's not impractical to do so in C/C++. The proof is the Rust compiler itself. Because it was written in Ocaml originally, which was itself having a compiler written in C. Claiming that a chain of compilers causes a decrease in complexity of the same concept is nonsensical. Secondly, again, there is nothing that stops a C compiler from being smart enough to do these static verifications. &gt; Which means that in a practical sense, you can write faster code in Rust, not because the codegen is super amazing and magical (it isn't, just as you've said), but because the programmer can use parallelism in places that if they were to do so in any other language, the maintenance burden of the inevitable terrible bugs would render it totally not worth doing. Again, not if one creates the abstraction in C/C++ first, makes sure it works, then uses that abstraction for any such parallelism. &gt; Servo isn't the only example of this, either. The author of ripgrep has explained that never in a million years would he try to write it in C++ the same way he wrote it in Rust, because it would be a maintenance tarpit to do so. But this isn't a side effect of the language. It's a side effect of these abstractions being built in to Rust. Writing programs from scratch tend torwards less abstraction at the user-code level. But if the user decides to go against that pattern and follow abstraction, there is no issue in writing the same piece of software in C/C++. The only difference is that you're given the abstractions in Rust, by Rust. In C, you either have to write your own or download and trust someone else's. But as it is, you're trusting Rust's.
Indeed. First, this is HTML. The text can be marked up with it rather than with more text. Second, \`lst: list = \[1\]\` works. &amp;#x200B;
You can also use this option: \*args (or some array) def check\_for\_number(number, \*args): if sum(args) == number or number in args: return True else: return False And why do you need this function?
I thought this was a version of Pycon that met virtually... :)
 You can also use this option: \*args (or some array) def check\_for\_number(number, \*args): if sum(args) == number or number in args: return True else: return False And why do you need this function?
It is certainly not as easy at python, you both have to deal with more stuff like having to define custom types as well as the error checking and handling that is far more extensive. but it has other advantages 1) there is a strong standard library, which means most people don’t even need frameworks, the frameworks exist, but the culture in the Go community is that you try to build everything with the standard library alone so that you build the smallest most efficient programs. That scared me at first but now that I got the hang of it I like that attitude a lot 2) Go was designed from the get go to write software for large scalable apps that span multiple servers and such. So that is a big advantage. 3) the whole strong concurrency support means you can squeeze the most out of your server without having to change how to build your app. 4) it is a more complicated language, which means you have to learn more about computer science, data structure and such and all that is very much fun and useful. After learning Go, I went back and redid some of my front end javascript better just because I learned more. That being said, I am not advocating your drop python and switch to go, python is far easier and faster to develop programs in and handles a lot of things for you that you have to do manually in Go. But if you have the time and enjoy learning you may find your self enjoying it 
Yup, pretty much what I’m trying to tell my coworker. Any solid details on what I can tell him as a downside such as we would lose out on x, y and z features? Because I keep telling him we’re going to lose details but he keeps saying it’s insignificant and that an abstraction implementation will be easy to implement. I’m just trying to use SQLAlchemy because using Mongo or equivalent NoSQL DB is highly unlikely to be used and is going to add more complexity. But I’m having trouble telling him what the exact complexities or issues are going to occur, just that there will be some.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I'm seriously on the fence about this. On one hand I'm so sick of writing my stream loops like this: ```python while True: block = stream.read(4096) if not block: break print(block) # or whatever ``` And would *much* rather write this: ```python while (block := stream.read(4096)): print(block) ``` But at the same time, I'm worried this new syntax will be abused and make it harder for me to read/find instantiations when they're not all lined up like I'm used to seeing.
step debuggers exist for a reason!
Maybe I'm missing posts when I look through the posts. I don't see a daily post in r/Python where people are asking a general purpose question of "what's the best GUI?". It may *feel* like it's every day, but the data isn't supporting that statement.
Do you also find yourself doing these things over and over again? print('something=', something) print(type(something)) print(dir(something)) print(something.anything) print(something.anything[123]) Thanks to **PeepShow**, you can replace it with: peep(something) This will take you to an interactive session where you can quickly preview attributes above and take advantage of more complex features. More details can be found here: [https://github.com/gergelyk/peepshow](https://github.com/gergelyk/peepshow)
IMO, it's not a (pre)release if it doesn't have a "What's new in this version"!
Isn't all code old code?
Dan Bader
Slightly off topic, but why are lists so popular? Aren't tuples faster and use less memory? All the time I see lists being used when tuples would do a better job. Even [docs.python.org](https://docs.python.org/3/library/random.html#examples-and-recipes) tells you to use `random.choice([...])` instead of `random.choice((...))`. I get that the performance impact isn't noticable in most cases, but, in my opinion, going for performance should be the default unless there is a good reason not to.
/r/learnpython 
pip either needs to be run as root to install for every user on a system or using the flag `--user` to install for only one user. I don't know how it works on Windows, but you might have to run the Command window as an admin to get the permissions to install with pip.
&gt; Might want to do lst = list(idx + 1 for idx in range(10)), simply because that way it will not touch the value of idx outside the command. What do you mean? In [8]: i = 'foo' In [9]: x = [i+1 for i in range(10)] In [10]: i Out[10]: 'foo' In [11]: y = list(i + 1 for i in range(10)) In [12]: i Out[12]: 'foo' Also, calling `list` is slower because you can overload it and the interpreter has to look it up. In [17]: %timeit list() The slowest run took 11.35 times longer than the fastest. This could mean that an intermediate result is being cached. 10000000 loops, best of 5: 121 ns per loop In [18]: %timeit [] 10000000 loops, best of 5: 35.2 ns per loop 
Why?
Not really. You've also got to override __len__, reimplement iteration on the object to skip the first item, etc...
Flask. or Flask + Tornado Flask is well documented, and easy to learn. It's extremely lightweight too. Full disclosure: I've never used Django.
The **echo** utility takes a single _message_ parameter, so you can't expect it to take two different types. It does not work like **print**, which does take multiple arguments. Instead just pass in a formatted string. click.echo("{}{}".format("word", 1.3)) And it should print fine. 
First this question should be ask here r/learnpython. No you are not missing something, you can but you need to call your dict like this. print(eval(header["Accept"])) eval will return a f-string. But from my experience should instead do it with `.format`, because f-string will be a source of headeck if you don't define "format". 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Any chance you explain what problems you bumped into? nb\_conda\_kernel worked quite fine for me.
lists are mutable. In some cases that's needed. Some convenient list comprehensions also don't work on tuples.
I’d say if you have to ask, use Django. You’ll know when you need to use something else. 
Do you need any backend support? Or is it all interfacing with already-existing calendar tools/storage? If you need backend support, then Django's ORM would be pretty useful (although there are other ORM tools like pony that would let you something similar in Flask). If you're just providing access to another service, then Flask might be the better way to go as it's not quite as "bloated" for simpler tasks. 
For this type of thing you're better off sticking to normal strings and setting them up as a sort of template. For example: header_templates = { 'Accept': 'application/{format}' } headers = { 'format': 'xml' } # Calling by unpacking the headers dict print(header_templates['Accept'].format(**headers)) # Or calling by kwarg print(header_templates['Accept'].format(format='json')) Produces application/xml application/json
I'm sure there are already repos like this out there but I started this and will continue to work on it https://github.com/M4cs/Python-GUI-Resource-List. It's just going to be a massive resource list for different GUIs 
Are you using Windows Mac or Linux?
Mac
Which of the two instructions are you using? 
Yeah Nick's a bit disappointing to see imo.
And on which step does it give you the error? 
This whole discussion is enough proof that you shouldn't count on it. Weather or not it is right depends on things outside of a library programmers (easy) control.
No I don't want to remove datetime. It's just that datetime is pretty much done. I don't expect it to change significantly. There are other python time libraries for more specific use cases outside the stdlib. I think RFC3339 is preferred by many instead of ISO8601 anyway, because it doesn't have the extra stuff in it. If I were to propose a solution it would be adding another time library for string based timestamps. No need to parse a string if it's effectively a literal.
right on opening the terminal, I type git clone https://github.com/ra100/curaToSlic3rProfile and that gives me the message "-bash: pip: command not found" then I tried the alternative instruction and did "pip install git+https://github.com/ra100/curaToSlic3rProfile" resulting in the same message. Also, I already cloned the repository to my desktop (don't know if you need that information but again, I am completely ignorant.) &amp;#x200B;
It was kind hard to config with a jupyterhub systemwise combined with user anaconda level : it's doable but a bit tricky, so I explored a simpler approach. 
Btw I am not sure if you opened your project public. I can't see it without creating an account.
Pycharm format code. 
&gt;"-bash: pip: command not found" in the command line type pip --version hit enter if it gives you the same error run: sudo easy\_install pip &amp;#x200B; hit git --version if that gives an error install git &amp;#x200B; search for the errors on stack overflow or pm me.
I was being glib.
That's the thing, though: if the `description` attribute is ignored by `__eq__()`, then it's not part of the value. Which means that changing the description doesn't change the value, and hence that's still an immutable object.
Your post is not clear, and should also be post in r/learnpython. AssertEqual("First", "Second") evaluate if string literal first and second are equal, obsiouly there aren't. Everything goes well.
Yes! Function over form. If it doesn't have a test it's not a feature. Don't believe its lies - write adapters everywhere so you control the API that you know is important, to ensure its named after what it is doing rather than named aspirationally. Add `black` so that formatting is not part of your cognitive overhead. And static analysis, including security stuff like bandit and safety, to prioritise your time on rewriting the worst code rather than gardening on the stuff you happen to be looking at i.e. be judicious with the LOC changed - leave it alone unless it's directly related to the task at hand. Write high value tests. Consider BDD gherkin scripts to avoid testing implementation details. In my experience the mindset of BDD is more important than the practice, so maybe just meditate on this one.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
RemindMe! 1 month
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Definitely the best cheat sheet I've seen. Cheers!
For your pixel art in Paint, I guess you use a color key? Is there much of a performance difference between using alpha in PNG files? Thanks
Great example, thanks
Too good. Wish there was something this comprehensive for Pandas.
Thanks for sharing that!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
ouch! i though i was in /r/learnpython , sorry!
This is also how I feel so any advice would be appreciated by me too. My problem lies in the fact that my department (astrophysics) doesn’t teach python but I am just learning in the same way as you because I need it for my research and probably for grad school. I tried CodeAcademy but that helped less than if I just struggle though figuring it out myself or with the help of my advisor, which has gotten me further than CodeAcademy.
Yes. You just have to use a GUI and lay it out with what you are looking for. Backend would probably be a csv or excel sheet. 
&gt;My question is can Python be turned into a system inventory management? Short answer; yes.
Short and quick. This guy is going places! 
Sweet. Can't wait to start learning Python and hopefully help me in my career. I will look into it the GUI and learn more about it. Thanks 
Yes, but you should probably be building web UIs rather than traditional UIs.
You are speaking to a complete beginner here. Whats the benefits between the tradition UIs and the web UIs? 
Eyyy, the post got removed and was told to post it in//r/learnpython, so here it is if you what to keep an eye on it: https://www.reddit.com/r/learnpython/comments/an8pss/how_do_you_handle_the_lack_of_order_andor/ It would be nice if you copy/paste you reply there to encourage the discussion :)
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [Just spent 2 hours to automate joining csv files saving hundreds of hours a year](https://np.reddit.com/r/learnpython/comments/a085dx/just_spent_2_hours_to_automate_joining_csv_files/) \#2: [I've officially started to automate parts of my job today and it feels incredible](https://np.reddit.com/r/learnpython/comments/alt3ge/ive_officially_started_to_automate_parts_of_my/) \#3: [I wrote a book on Python Regular Expressions, it is FREE through this weekend](https://np.reddit.com/r/learnpython/comments/aevgbi/i_wrote_a_book_on_python_regular_expressions_it/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
Right now, the structure is [https://github.com/Laurentiu-Andronache/type-this-game](https://github.com/Laurentiu-Andronache/type-this-game). So there a type-this-game directory, which has a blank \_\_init\_\_ and the code in \_\_main\_\_ &amp;#x200B; Could I have done [setup.py](https://setup.py) somehow, so that I have this structure instead: |- setup.py |- type-this-game.py |- LICENSE |- [README.md](https://README.md) But still be able to create distributions, upload them, and run the script with `python -m type-this-script` after installation? &amp;#x200B; If not, how about the same structure as now, but without \_\_init\_\_.py; what would I have to modify in [setup.py](https://setup.py) so that everything is still possible, including `python -m type-this-script` is possible?
Long answer: yes but There could be an easier way to do that with something like Microsoft access or open office. To reach a level in python where you can do gui, database etc, this will require quite a bit of programming knowledge and you may not be willing invest that much into it. If you are already familiar with web development with JavaScript you may have an easier route there 
The most significant issue is distribution. If you make a change to a traditional app/UI, you have to redistribute the app to everyone who uses it or shit won't work. If you make a change to a web app, it just works.
personally I hate flask so I'd say use django unless you have a specific reason not to (and it doesn't sound like you have such a reason).
Yes, you can, but depending on how large the IM system is, and what your skills are, it can become really messy really quickly. Most efficient way to build the kind of relational DB you would need IMO is to use pymysql or sqlite 3, and build a native GUI. The front end is some run Python GUI out of an executable with admin permissions built into it, and the back end would be those .sql or .sqlite files. For a smaller system, you may honestly be better off using some master Access tables backed up by some CSVs... really depends on the situation you're in. IMO MS SQL Server and a combination of Access and Excel might be the easiest to set up for a smaller system.
Because people don't know better. Usually it doesn't matter but that's why.
You can use the --user flag but you will have to manage the module lookup path yourself; what I recommend is that you use a virtualenv that will take care of both tasks (and a few more). https://docs.python.org/3/library/venv.html
r/learnpython www.google.com Have fun! 
If you find this useful you're doing something wrong.
Ye but most websites give complicated answers 
Yes? Is this BuzzFeed? Also belongs in /r/learnpython.
Then why are you offering advice if you readily admit you don't know what you're talking about?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
You're doing it right. It's grey because pycharm is reminding you that you imported it but you didn't use it. Once you use it it will look normal. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
alright, thank you.
Most if not all instances of `&lt;collection&gt;` should read `&lt;iterable&gt;`.
I agree with other commenters that trying to support both sql AND nosql datastores is going to be really painful long term. That said, if I truly needed multi-backend support for something, I would probably create an abstract class representing a general data repository with CRUD methods, a generalizable connect/disconnect API, etc., that uses data classes (ie attrs) to represent the data instead of orm-style models. Then I'd write a concrete implementation that uses sqlalchemy, and potentially one using mongodb (or couch, whatever) once the business case actually arose. The repository abstraction is pretty good as it is but this will give you the proper separation of concerns necessary for multi-backend support.
If you have a smartphone try out SoloLearn. Then try making something simple with the standard library so you can look up references on the python docs website. One of my favorite first projects for a language is a reminder app that requires taking a command line argument and/or user input ans appending a reminder to a file, or reading reminders from that file. Tic Tac Toe is also a favorite first project in a new language. The very best first project for a brand new coder (imo) is a text adventure because it'll make you understand control flow. Good luck!
Using google properly means inputting the appropriate keywords into your query and that's a skill that needs to be honed. /r/learnpython is where you ask questions about problems you have when learning python. This is where you should start.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [Just spent 2 hours to automate joining csv files saving hundreds of hours a year](https://np.reddit.com/r/learnpython/comments/a085dx/just_spent_2_hours_to_automate_joining_csv_files/) \#2: [I've officially started to automate parts of my job today and it feels incredible](https://np.reddit.com/r/learnpython/comments/alt3ge/ive_officially_started_to_automate_parts_of_my/) \#3: [I wrote a book on Python Regular Expressions, it is FREE through this weekend](https://np.reddit.com/r/learnpython/comments/aevgbi/i_wrote_a_book_on_python_regular_expressions_it/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
here's another one I have saved: [https://learnxinyminutes.com/docs/python3/](https://learnxinyminutes.com/docs/python3/)
this task MIGHT be easier with VBA in excel
How much cost are you cutting by making your own that could cause you bugs in the future vs using someone elses or an open-source solution that already has a ton of features and bugs fixed?
If you are hoping to create your own ERP from scratch as a beginner, you are going to be disappointed. There's a reason why SAGE costs $45/u/mon. 
Released a project I've been working on for a while, a command line interface for Google'a APIs: [https://github.com/Cloudbakers/agm](https://github.com/Cloudbakers/agm)
Check out Flask. This video series may be a good place to start, clear explanations and should provide you with the basics you'll need to get something like this up and running. [https://www.youtube.com/playlist?list=PL-osiE80TeTs4UjLw5MM6OjgkjFeUxCYH](https://www.youtube.com/playlist?list=PL-osiE80TeTs4UjLw5MM6OjgkjFeUxCYH)
More details of the votes may be published soon; see [https://mail.python.org/pipermail/python-committers/2019-February/006524.html](https://mail.python.org/pipermail/python-committers/2019-February/006524.html)
Thank you. That is why 1 based indexing 'feels' correct, at least to me.
is this project open source?
Django is optimized for database-heavy CRUD apps, but that doesn't mean that's all you should use it for. It's very well documented and has everything you'll need included. Some will recommend using Flask, but IMO Django is way easier to get started with if you'll be using a database at all. Flask is great if you already know what you need, but if this is your first time writing a webapp, Django will hold your hand for much longer.
You *should* count on it in Python 3.7+, because it's guaranteed by the language spec from then on
Most of the time it needs to be mutable. And yeah, performance gain is not that great.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
There are a few Python-based systems which do what you want: * [ERP Next](https://erpnext.com/) * [Odoo](https://www.odoo.com/) (formerly OpenERP) * [Tryton](https://www.tryton.org/) (A fork of the old OpenERP codebase) Maybe take a look at those projects to see if that's what you're after.
I somehow managed to end up creating a clicker game in Tkinter. I'm still working on it, because hoo boy I wrote a lot of story for it and that is NOT gonna go to waste. It also uses excessive amounts of threading, lots of music and SFX, and features the World's Least Efficient Save Game System That Actually Works™. It's called AURORA-Clicker on GitHub if you want to go and laugh at my poor design choices.
Yeah there's some bot whose owner I pissed off. It downvotes twice for each upvote I make. I'll try another account.
I've been working on a Tkinter based clicker game called AURORA, inspired by SPACEPLAN and poor time management choices. It can be found on GitHub as AURORA-Clicker, and so far it features audio, some basic graphics, a semi-complete story, and other fun stuff. Check it out if you like laughing at poor design choices or feel like correcting my spelling mistakes.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Django, mostly because it's a skill worth acquiring. If you figure out django, flask will be a breeze...and that's not the case the other way around. 
what is the output of "which pip"
What makes you think that it's not imported when you run the code?
and if you can, use the curly brace notation for sets for literal items, looks so nice `{ 'and a one', 'and a two' }`
I guess i would say to you is how to understand the code. In my case some parts don't fit on my display all at once (huge SQL statements). SQL in general becomes very obtuse the large the statement. If your pulling data from 5+ tables you need to know what they do, which might be the product of several other tables for each. This is "big data" code so its mostly pulling in huge amounts of data shaping it and spitting out huge amounts of data. I haven't see any good testing practices for big data. You can subsample but how do you know you have a representative sample. This becomes even more complex if you have to setup 5 tables worth of interconnecting data which is error prone. I guess there is not other choice. Also if your working with Redshift you can never be 100% sure your local Posgres DB is going to behave the same way. As for the code, there is lots of copy/paste going on so that seems the most obvious place to start. Also I might follow this advice [https://twitter.com/SebAaltonen/status/1080107022169894915](https://twitter.com/SebAaltonen/status/1080107022169894915) and keep the code simple . I guess i'm hoping to discover a process of small steps which will lead to code that "Sparks Joy" &amp;#x200B;
Well those are two of my biggest pain points. GJ Anaconda!
Yeah, i often think the best code is simply the easiest to replaced. I might just end up doing this... once i understand what its doing...
Why?
As a minor note parens are not needed in this case for while loop.
Hate Flask? How come?
Wanted, 1000 cats to throw from building at various stories to check the survival rate :)
Ah, nevermind on that one, old python2 habits.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
If you like Python, I would recommend Django for your needs. If this is a personal application (not commercial i mean) using Django and sqlite database will save you implementation time. I work as a Spring Developer, but in my personal needs I still prefer Django. For you to not get lost in Django tutorial: for db objects look for models documentation, for your web services look for views, if you gonna use external front-end (mobile, angular, react) look for @csrf\_exempt annotation, I do not know about Twilio but if there is an API, I'm pretty sure they support Python. &amp;#x200B; Django is well documented and easy to implement. You may feel unfamiliar at first, but do not let it make you lose interest. Check for projects online, look for examples and try to have fun mate. &amp;#x200B;
Three things: 1. I very well may have been in a mood when I originally responded; 2. I contribute to some large (non-python) OSS packages so sometimes I get in a mood about that too (supporting the amount of requests versus what makes sense for the package as a whole, is a chore, and creates more arguments than I care for); 3. I apologise if I came off like a douche in the previous comment. . So let me clarify a bit. I still think that your couple of use cases are just that; a few use cases. However, I will concede that the rough edges of Python as a whole do become problematic when you've been developing in it for more than a few years. At my job I use Python, but if I'm as real home, I avoid it. Maybe it's because I've dealt with those rough edges for a decade (and want performance without having to think about the GIL). The language is beautiful. Truly. There isn't a language that looks better and is more easily typed. But those "rough edges" make me avoid it for personal work, in favor of C, C++, or Go. I would propose that you raise a PEP for it. I think if more folks have the issue then maybe they'll jump on board with it and make it a thing. I have not encountered your particular use case, so I can't speak to the popularity of it. If it's Python, I'm dealing with UTC or poorly formatted timestamps from Windoze (and every other language it's microseconds, because performance). I hope you have a great rest of your day!
Long story short... A friend of mine reached out to me for help with his daughter's algebra homework. It's been years since I've had to use algebra in any form, I shared some links to youtube videos on how to solve function tables. But it got me thinking: I'm certain this can be worked out in Python, but how? A little over 1 hour later (I'm still very much a beginner), I came up with this script.
Why do you want to use a while loop if you can do dict comprehensions? {elem1:elem2 for elem1, elem2 in zip(list1, list2)} If you'd really like to use a while loop: while list1 and list2: elem1, elem2 = list1.pop(), list2.pop() d[elem1] = elem2 This does empty your lists though. 
Not in front of a computer but I'm sure something along the lines of dict(zip(list1, list2)) should work iirc.
Is it for a exercise ? While is not very usefull in your case, because you know how many elements are in each list. While is commonly use when you don't know when you need to stop. For is better suited for this, and you also can use list comprehensions and zip function.
Even simpler than the comprehension: dict(zip(list1, list2)) The constructor already accepts a list of key-value pairs.
If you want a solution *fast*, you should definitely check Django. If you are looking for inspiration, this [beginners guide](https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/) is excellent. If you are looking for something more challenging, where your framework takes care of less assumptions and you need to set up many things by yourself, you can check Flask. [The Flask Mega Tutorial](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) is a reference point in this case. Regarding Twilio, you can check [this article](https://www.twilio.com/blog/2017/03/building-python-web-apps-with-flask.html) on the twilio blog, or this [Django-Twilio](https://django-twilio.readthedocs.io/en/latest/) package. I've used both frameworks. I can tell you that Flask has this satisfaction that makes you feel you are in absolute control of every step. However, you will end up installing the same packages, abstracting the same logic, etc every time you start working. In the Flask Mega Tutorial, a lot of time goes installing packages like SQLAlchemy, migrations, forms, etc. Django already comes with all that built-in, meaning that you will be up-to-speed much faster. I've used Flask for [controlling devices through the network](https://www.pythonforthelab.com/blog/how-to-control-a-device-through-the-network/), mainly because I was interested only in a small part of what frameworks offer (no database, no html, no templates, no forms, just POST/GET). But I'm also using Django for a much larger project with user authentication, signal monitoring, etc. called [experimentorIO](https://github.com/uetke/ExperimentorIO). And for the deployment of either Flask or Django, you have plenty of tutorials. [This one for Django](http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/) is a bit old, but very valid, and will guide you to a very good foundation for whatever you decide to do next. 
Yeah its for an exercise.
Alright, so u/Lewistrick gave you the right answer for the while use.
Wow, thanks! 
Depends on what scientific libraries you are talking about. If it is only the size of numpy/scipy then I do agree. Scientific libraries like astropy, trackpy, etc. are maintained with a much more limited amount of resources. Plus, even if the API doesn't break, part of good scientific practice is to know exactly what you were doing (and I mean *scientific* not in the way of *data science*). The API may be the same but imagine if numpy changes how it calculates the FFT from one version to the other, for example. A classical example is the difference between Python2 and Python3 regarding operations between integers, you may get `3/2=1` or `3/2=1.5`. Wouldn't you say that documenting which version of Python you were using is important? And that goes for all the other libraries. This is, I believe, important for honest scientific work, that needs to be validated also by others. The kind of work that gets published, built upon and pushes human knowledge further. If it is an internal application to know whether a customer is willing to cancel the subscription to a service, I honestly wouldn't care.
Don't you think is flask is more like a linux and django is a windows. I think if you manage to work with flask and built an app with it, making apps using django will look like a child game.
well of course u need to learn Python pretty good for that.
It depends on the job. From my perspective as a hiring manager, and assuming you’re a beginner, put things that you enjoyed building in your portfolio especially if they are somewhat relevant to the job (such as backend projects for a backend position). If you can talk about what you enjoyed and what you learned then it’s a good project because it’ll be easy for me to talk to you about it.
You're right, but I like it this way better: If you don't find this useful you're doing everything right :)
Sweet mother of Bayes! 
But has it figured out how to show gratuitous cleavage in the player cam to maximize views?
Protip: `for (a, i) in enumerate(x):`
&gt;I'm still very much a beginner Good job, but since you are a beginner I hope you don't mind some advice. In Python, it's often unnecessary to index manually into lists and sequences, like is common in other languages. Your 'for' loop is extracting each element of x (ie. the values of x), so you already have each individual value of x in the loop; you don't need to then extract those values again from x using indexing. &amp;#x200B; This is a \*very\* common mistake for Python beginners, so don't feel bad. Partly (imo) it's a variable naming thing; you should only ever use 'i' for indices, not for values. You actually kind of got it backwards, you are using 'i' to hold values, and 'a' to hold indices. This might've added some confusion. &amp;#x200B; I hope this is okay, but I'm going to show you how do to this without indexing, just using the values of 'x', which I'm going to put in the 'a' variable as I loop over them: for a in x: answer = 3*a - 2 print(a, "|", answer) &amp;#x200B; As you can see, not having to worry about indexing actually makes it much simpler. There are still times when indexing is needed, and in those times it's almost always best to use enumerate() to assign indices to the values in the iterable of the 'for' loop. &amp;#x200B; Just some friendly advice. Well done, and good luck with your Python learning journey.
Great Job!! Just one quick observation. Lose the `a` variable, it is unnecessary. Your `i` in the `for` loop is the same as x[a] you're trying to do. So `print(i, "|", answer)` will work just the same but more efficiently.
bad protip.
Replace the `var = 0` … `var += 1` anti-pattern.
Did you mean `for i, a in enumerate(x):`?
Look at the original.
Tanks, I really like it. Mine is more like a reference, but for reading it in one go I definitely prefer the link.
Was hoping for some specific answers 😅
I have a year and a half of experience doing web development on a freelance basis and some hobby projects with Python. Will keep that in mind, thanks!
You can check [this answer](https://www.reddit.com/r/Python/comments/an9c1p/should_i_use_django_for_my_project/efs5jwj). I agree with /u/ConfidentFlorida, if you need to ask, better go with Django. It is a bit tough to understand the differences and why you would go one way or the other if you are just getting started.
I'd also suggest adding pathlib Mucking about with paths as raw strings with `os` is great and all, but it's really nice to have a bit of an OS abstraction layer on top of paths that just makes them so much nicer to work with.
Just start applying for some jobs to get a taste about interview questions and also to detect gaps in your knowledge. It’s usually Ok to apply to the same position in a couple of months when you fill the gaps. Note however that some interviewers may ask questions that are not relevant to your experience. Sometimes it means that a person just doesn’t understand what kind of developer they want, or they did not read your CV carefully, so don’t take it personally 
Working on making my first neural net using tensor flow to play connect 4 with me (the connect 4 is written in java). 
Thank you Continuum. :) The powershell thing has been a headache for a while. you guys rock.
I salute you
Sometimes, it’s about having a good baseline of knowledge then growing that when you start a new role. 
/r/learnpython and read the sidebar.
I mean jeez guys if we are just trying to cut it down to as little as possible we should just do a write it all in a list comprehension
Been waiting for powershell support!
There is no language specification sadly, it is just guaranteed by cPython.
if you use `print("something", end="")` you can do it linearly like in the book
Just use toilet paper.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I will add it, it's just that it's one of that areas that feel more like Java than Python when you visit a doc page: https://docs.python.org/3/library/pathlib.html
Great job! I have some suggestions on how to improve the code, and I’m a little surprised by the answers here. First, it’s important to try to use good names for your variables. When I was reading, I was like, “is `i`an index? Oh wait, no it’s the actual value in the list.” I’d suggest something like: ```python def linear_func(inputs): return {input: 3*input - 2 for input in inputs} inputs = [2,4,-1, whatever whatever] print(linear_func(inputs)) ``` Notice I made a function that takes any list of inputs and returns a dictionary of `{input: output}` pairs. This is a little more flexible since you can reuse the function if a different problem had a different set of inputs for the same function `y = 3x - 2`. Whenever you are dealing with `key:value` pairs, it makes sense to use a dictionary. If we wanted, we could store the result of the function in a variable and use that dictionary variable as a look-up table so we don’t have to recompute. This is called hash mapping. Basically, we save time on computations by doing a computation once and storing the result in memory for future reference. Now, what if you wanted to do **all** linear functions of two variables? We could modify our function: ```python def linear_func(inputs, slope, intercept): return {input: slope*input + intercept for input in inputs} print(linear_func([blah, blah, blah], 3, -2)) ``` We were able to extend the previous code to cover a more general case. In this way, the code is called extensible.
You'd need to cache every value then print them in rows, line breaks et all
Good job for Excel to excel. (Or OpenOffice Calc).
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Do it yourself. How do you expect to learn otherwise?
YEAH CHEIF BUT IDK WHAT TO DO
Looks like a good fit. Django very likely has a Twilio app and something for validating phone numbers coming in from your ModelForm. Management commands would solve the sending script part.
Well done! Nobody has mentioned this so I'll point out that in Python3 you might use an *f-string*: print(f'{x[a]} | {answer}')
To be honest, I've never been particularly enamoured with the implementation of CPython. It does some things quite nicely, but others not so well. Notably the GIL. It is the reference implementation though, so it carries around many of the sins of the past. What I mean by that statement is just that I certainly wouldn't be reading the CPython code base to get a better understanding of python. If you would like to understand python better, read the language specification and go check out some large and well written open source projects like Django. If someone were interested in becoming productive with Android, I'd recommend Kotlin over Java, especially if the person is already proficient at Python. Of course, if one wants to be supremely employable, learning actual Java is definitely wise. Since its syntax borrows unashamedly from C and C++ in many respects, any work with those three languages is useful with the others (to an extent!). 
It depends on what you're wanting to do with your skills. Do you want to be a game programmer? In which case, absolutely go ahead and learn C++. Do you want to make big bucks in Enterprise? Consider Java. Do you want to get in to Fintech? C++ will help there, too. So will Java. Unsurprisingly, Python might also help you, especially the data science libraries like numpy and Pandas. I've no experience in Rust, so will not comment on its usefulness. It looks quite promising, and there are many pitfalls with C and C++ that most people would benefit from being protected from. If you already know some C, why not do a hobby project with a micro like an ESP32? They're supremely capable and you can make all sorts of great things with them. On the GPU topic: what are you trying to speed up? Most people get excited about optimisation before its necessary. Getting the right answer should always trump getting 'an' answer quickly ;-)
[sc2ai.net](https://sc2ai.net) if you want to get into the starcraft2 bot world. see [the sc2ai.net youtube channel](https://www.youtube.com/channel/UCbXFERumlL7bvXxkdRrdLXQ) or the [probots tournament](https://www.twitch.tv/eschamp/videos) for what the bots can do right now :) join the [sc2ai discord server](https://discordapp.com/invite/Emm5Ztz) to get in touch
In short, yes! Of course, that depends on your definition, but enough to be useful, sure. If you're in grad school, it is very likely your advisor will be happy for you to spend more time learning, since these skills are in demand. I used to work in a bioinformatics group, and we would happily recruit keen PhD students who hadn't done significant programming on the basis that it's not that hard to learn when you're doing it every day. I know this is r/python, and it is my preferred language, but it's worth checking to see if the groups you are applying to use python or R. As a beginner it's important to have people on hand to help you with problems, and while you could argue that data analysts "should" know both, very few will unless they have a CS background. Also, the libraries and teaching resources for biology are probably better in R, I think it's used for most of the online Bioinformatics courses.
This is actually quite good
store the items and prices and everything in tuples. so for every product, price and quantity they type in, you push it to the tuples or objects
What have you tried so far?
Nice job! Why don’t you try plotting it?!
&gt; I think I have a perfect understanding of how Python types work, Yeah, that's a typical problem with people who don't know sheit. They are very confident that they know it very well :)
now make algorithm to calc the secret equation in any similar problem
Well, any reasonable project will not want to work with public crates repository. But... private crates repository doesn't work. If you try to clone the crates.io repository and run it on your own -- there are tons of bugs in that code, but, bottom line, it doesn't work. You can, sort of, get around this problem by just making Cargo work with a Git repository instead, but... Cargo can pull from git, but not publish. To publish it needs a functioning crates.io server. It's all very under-cooked. Maybe a year or five years from now it will work, but right now it's even too early to judge whether it will work well or not, it's not even clear how will it work, when it will. Your problem with header: nobody said C is perfect. But, this is not a difficult problem to solve in daily programming routine. You mess up the order of includes: the compiler will tell you about it, and you'll go and reorder them. Probably more than once. It's tedious, but it's not difficult. This may even result in problems in a compiled and "mostly functioning" program. Rust is not tedious, it does try to remove repetitive work. But, instead, it's hard. Trivial tasks appear too difficult to do as part of your daily routine. Often times I find myself or others in a conundrum like: "how can I make it so that I can call this function here?" And often times, the answer requires a lot of workaround code, sticking clutches here and there, creating helper instances, clones, proxies... lots of duct tape. It's exactly the same problem with Haskell: instead of just writing code, you are, basically solving a crossword puzzle, with code being a side effect of you solving that puzzle. It's so hard to get the code to work, that the very thought about changing the structure of your program creates so much pain, that you will just never do that. Leaking memory? Well, at least in C you have Valgrind... In Rust, memory leaks are virtually impossible to debug, since profiler doesn't work on anything less trivial than hello-world. And the problem is just as real as it is with C. It's been more than two weeks since we are struggling with finding one memory leak in our program. We still have absolutely no clue... C is not a good language for dealing with memory, but 40 years of struggle with this decrepit language created tools that can help you with its problems. Rust has a potential to do better, but it doesn't solve all the problems, and where it doesn't solve them, there are no tools to rely on. Thread safety: we had more race condition related bugs than I can count. Rust doesn't prevent you from writing code that has race conditions.
Have you considered writing these in c and using python as a wrapper?
Yeah... something I can relate. Every time when I wax poetical about the woes of Python... our project has some back-office web-ey stuff written in JavaScript, Vue + Node.js. So, I open it, and go like: "Thanks God I don't have to work on *this!*"
Now try it using the enumerate() function 😉
I'm sorry but I don't get what you try to achieve with that. Why not use the built-in functions implemented within Python ? And asking input is nice at the begining when we play with python, but it's just a pain after that.
You made three things wrong: 1. You are using MS Windows. 2. You installed a 32-bit version of Python. 3. You installed it in a directory where your user doesn't have permissions to install things. If some of that wasn't done by you, but, say, by an "IT specialist" managing your computer, you need to educate them that they need to at the very least fix the (2) and (3). (1) is probably not under their control. So, you should use 64-bit version of Python interpreter, unless you are planning on traveling 20+ years back in time. And you should never install Python into places you don't control.
what do you mean? I installed it myself and I got the 64 bit, plus I mainly use Linux cuz I have it on a dual boot but it’s so hard downloading programs on there... I wanted to get pycharm but I couldn’t... and what do you mean I installed it in places I have control of? I have control of everything 
This is so cool. All I had then was a mighty hp48 which was a monster at the time :)
No Sir, I haven't. I find writing data structures code in C a pain in the ass. thats why i have decided to stick to python completely. i mean writing the DS codes from scratch in python and then use it. Secondly, i dont know how to use python as a wrapper. thanks for the suggestion though. I'll definitely look into it.
&gt; I got the 64 bit And you put it in the folder called "I am the folder for 32 bit programs"? Are you sure? &gt; I have control of everything The error message you posted tells a different story.
Sure [Flask](http://flask.pocoo.org/) is more suitable for this task. You need basic routing and clean way to write your request handlers, so Flask will do here. Though I can even suggest more lightweight framework: [bottle](https://bottlepy.org/docs/dev/) :) Check it out, maybe you will like it's simplicity more.
What do you mean folder for 32 bit programs? and yes I have control lol it’s my pc 
Built in functionality as in the Decorators in python ? Actually i am not quite used to the decorators and so i am keeping it simple.
Great explanation!
Why not just use each = "| " ? You don't need to use print at all.
The x86 in the folder name literally means processor architecture: https://en.wikipedia.org/wiki/X86 , while, technically, this architecture has 16, 32 and 64 bit variants, in practice, this name is used to mean 32 bit architecture (on Windows).
**X86** x86 is a family of instruction set architectures based on the Intel 8086 microprocessor and its 8088 variant. The 8086 was introduced in 1978 as a fully 16-bit extension of Intel's 8-bit 8080 microprocessor, with memory segmentation as a solution for addressing more memory than can be covered by a plain 16-bit address. The term "x86" came into being because the names of several successors to Intel's 8086 processor end in "86", including the 80186, 80286, 80386 and 80486 processors. Many additions and extensions have been added to the x86 instruction set over the years, almost consistently with full backward compatibility. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
so what do I delete python and install it just in Program Files?
Wonderful ideas. Uniquely Reddit. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Flask is a good start I would concentrate on learning more on it especially structuring larger applications with Flask, blueprints, extensions (single file Flask applications are just for example testing or a pet-project). At the end it starts to look a lot more like Django, so a migration will take a lot less time. Understanding of a real relational database like MySQL/PostgreSQL would be also great. SQLAlchemy with a relational database will help you a lot. Creating a project using all of this for your own use shows a lot.
How about the learning resources in the /r/learnpython sidebar?
I agree with this, just adding something for OP's knowledge. I'm using mobile, so I apologise in advance for any formatting issues. You can use enumerate() if you need a counter in a for loop, for example: ```for count, element in enumerate(myList, 1): print(f"{count}) {element}")``` The second argument in enumerate() is optional and simply tells it what number to start the counter from (in the example, the first output would start with the number 1 instead of the default 0).
DID YOU READ THINGS ABOUT HOW TO MAKE FUNCTIONS? DID YOU WATCH YOUTUBE TUTORIALS AND TRY COPYING WHAT THEY DID AND MESSING WITH CHANGING VALUES SO YOU COULD UNDERSTAND HOW THEY AFFECTED THE CODE? 
I am not talking about CPython. Learning Kotlin over Java is like learing TypeScript over JavaScript.
Excellent - thank you!
Mobile version on github :) https://github.com/gto76/python-cheatsheet/blob/master/README.md
LOUD NOISES
cheers, didn't know this.
 def pyramid(lines): for row in range(lines): middle_line(row, lines) print() def middle_line(block_num, line_size): # block size is two: "| " therefore no need to divide padding with 2 padding = (line_size - block_num) for cursor in range(line_size): # first print left paddings if cursor &lt; padding: print(" ", end="") else: # after putting the block, right side will be empty, so break for block in range(block_num): print("| ", end="") break This just prints the format you want, I'm pretty sure you can improve it, you can change the print statements with array append according to your needs. Also if you gonna manipulate the result it is a plus to hold these fields in an object. &amp;#x200B; What I would recommend you would be choosing more meaningful variable names. And a debugger always helps when you miss whats going on. &amp;#x200B; Also I agree on @saxondown, * shouldn't pyramide(5) print FIVE lines * stickDelete(3,2) 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I did something like this once then used. 2 dimensional list to plot the curve in ASCII. I actually was using it to plot a heart curve.
No I'm just asking why you implement everything in python like that while for example, the `sorted` python function do the job. If this for self-teaching purpose, it's ok, otherwise it's never gonna be usefull.
I’m upvoting because I’m stoked you figured it out even though you say it’s very simple. 
THE LAZY, IT BURNS!
&gt;good bot
Why would tuples be faster and/or use less memory? Both lists and tuples are essentially arrays. I prefer lists to tuples because they have nicer syntax. Tuples sometimes require double-parentheses, plus I often forget the trailing comma in `(1,)`.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
You have made this more complicated then it needs to be tbh..?
x = \[2, 10, 6, 4, -3, 10, 100\] &amp;#x200B; for num in x: answer = (3\*num) - 2 print(f'{num} | {answer}
Are you sure it's right? In your problem table, you have 8 columns. In your solution set, 7. It's seems you didn't solve for y=10
If you see this also in /r/linux, I was told this also should be posted here. 
creating anonymizing DB for dev team, from prod to dev deleting all user data
I don't know the exact intricacies but it has to do with lists being mutable. 
I believe this was posted to r/python yesterday and is still riding high on ‘hot’
Wew, good to hear about that. Its GUI based?
I
https://docs.python.org/3/whatsnew/3.7.html &gt;Python data model improvements: the insertion-order preservation nature of dict objects has been declared to be an official part of the Python language spec. 
Thanks man. I hope things are going well for you. Maybe I will write a PEP when I've got some free time. 
Why are you calling int(i)?
Before you do too much, have a look at these two repos: https://github.com/TheAlgorithms/Python https://github.com/faif/python-patterns
I'm new in both programming and Python. I just started a personal blog to keep track of what I do and learn. Right now I dont even understand well the basics, but i guess this is all about practise, try and fail, so it goes.
I mean... Solving that one requires a different formula/additional math. They didnt include the y=10 problem in their list, so they werent planning on solving it with this script.
1. It mostly covers the very basics, which you will memorize easily if you use the language for any amount of time. 2. Your env should offer utilities for hints, docs, auto-completion, etc. 3. It's faster to Google something than to look it up in this sheet (doesn't even have an index??). Especially when you've memorized most of it and it just becomes cluttered. 4. Many of these are not idiomatic. 5. For more complicated topics it doesn't give enough information to be useful if you need a cheat sheet in the first place. Be honest, do you think you can write a metaclass or using Threading after looing at this? You're gonna have to look elsewhere anyways. So you end up with a big unorganized list of things that's mostly things you already know and the rest just isn't very helpful. Get a real IDE or editor and have a terminal and browser at the ready. There you go, no more cheat sheet.
I do lots of 2D and 3D geometry stuff so this definitely has me excited. Do you feel like what you wrote is somewhat unique out in open source or would you say there are other libraries that also cover projective geometry? I'm still working on walking my head around what that term means. I've done some geometry stuff with vtk, cgal, OpenSCAD, and a few triangular mesh libraries.
Not yet, it is stilll not very functional. The plan is to make some kind of GUI at some point. Maybe a Dash web app.
[https://www.sonatype.com/](https://www.sonatype.com/) is another one. 
I gave it a try and you are exactly right. I think I originally tried to go: for i in x: answer = (3*int(i))-2 print(x[i], "|", answer) And it print out the value of the indices rather than iterate over the list, and that was my fix. Thank you.
Pretty much my thoughts. Although "technically" there already was a pythonic way to handle those almost C style APIs: Using the 2 argument version of `iter` (`iter(fn, sentinel_value)`). This repeatedly calls the function yielding each value until the sentinel value is met. This however requires currying (using `partial`) functions when using function that take arguments. for block in iter(partial(stream.read, 4096)), ''): print(block)
I originally was going to figure that out, but then I noticed that value for x = 4 IS 10, so I didn't have to figure out the other way. But, for completeness, it would be good to work that one out as well.
That's a great idea. Thanks!
Overthinking, tbh. For some reason I thought `i` would be a string for some unknown reason. It isn't necessary at all. &amp;#x200B; &amp;#x200B;
Oh yes! Timsort has same time complexity as mergesort. And your point is completely valid. I just wanted to have a collection of algorithms that I keep learning and implementing them in python. As you know in exams you just cannot use timsort for sorting. It would be better if you can sort using inorder traversal of bst.
/home/nsa/scrapy-time/bin/pip 
valid point on the leaking variable. But list comprehensions difficult to read? I guess if the expression parts are quite complex. But for me, readability is one of the main reasons I like list comprehensions. 
Thanks. Another user pointed out the same as well and I've made that correction.
I did not know that. Thank you.
Yeah, I realize that now, with some examples from other users. But that's how we learn, isn't it?
Happy to see everybody working together to help out OP improve their Python
And it was just a school homework of the topicstarter friend’s daughter 😁
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
That is unreadable. Format your code. Also, reinstall and /r/learnpython 
This was actually part of my solution. The join would have worked if they'd just been strings. 
Image: https://imgur.com/jFumLiM
Prepend each code line with exactly four spaces, or add \`\`\` by itself above and below the code, and have a blank line surrounding the whole thing. 
I don't like that flask depends on global state so much. Try writing a flask app with a DI container and you'll see what I mean when you throw it out in frustration.
Yeah, there’s probably a more pythonic way to do it but it works
Hey everyone! If anyone who is working on Open Source project, can you please recommend what are good beginner-friendly projects to contribute to? I am trying to build a portfolio to move to Python. Thank you!
Working on building a new website with a custom user model and django backend, probably hosted on GCloud
two liner : x = [2,10,6,4,-3,-10,100] y = [3*i-2 for i in x] 
Damn. [This might be useful to you for the short term](https://stackoverflow.com/questions/2915471/install-a-python-package-into-a-different-directory-using-pip). 
Using scripting languages to do math homework is such a blessing once you get really fluent with a language. It's just the beginning friend.
Hey thanks my Cisco professor told me to try out python as a first language 
Revisiting my picture ordering site. With the knowledge of SQL I've learned in the past month or 2, I should be able to expand the functionality and write better queries.
Ctrl+Z produces the EOF char on Windows
but here lies my inspiration [https://github.com/OpenGenus/cosmos](https://github.com/OpenGenus/cosmos)
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I'd recommend using something other than `i` since that usually refers to `i=0,1,23...`, e.g. `x_i`, but otherwise I like this. 
Behold, the magic of vectorized code! import numpy as np x = np.array([2,10,6,4,-3,-10,100]) y = 3*x-2
Im still working on the python starcraft 2 bot library [https://github.com/Dentosal/python-sc2](https://github.com/Dentosal/python-sc2)
Creating a utility to update aiohttp server log config at runtime from Consul.
The numpy FFT routines are at present ones which product correct output. The only way to debate if they are right or wrong is whether numpy chooses the normalized or unnormalized FFT (at present, unnormalized to match FFTW). Since there is an optional kwarg for this, I suppose they could change the default value in the future but it is very unlikely. I realize you just use the FFT as an example, but I want to point out that once a calculation is correct, there should only be changes for performance or refactoring, never to the meat of the solution. Numpy is sort of special in that it's all linear algebra / matrix ops, so correct is extremely clear whereas in e.g. scipy, there may be a change that impacts the 'correctness' of a result. The 3/2 example is in one case relying on a programming language quirk, so I would not put much thought into it. You probably would hit a py2/py3 syntax error if you tried the wrong one anyway. I do write [my own](https://github.com/brandondube/prysm) scientific module, which I make breaking changes to the API of all the time, but it is an 0.x release and the changes are documented when the version changes, too. I think this is fairly representative of most scientific users (a large part of this was written to do my thesis) but now taken to a bit more mature state. My module certainly isn't pinned to a version of numpy/scipy version -- I would expect these to be documented in some external written form for any sort of publication that results.
One might argue that "Learning Python the hard way" is missing. But it's controversial. 
I am a beginner at Python so I'm trying to learn through a project at work: 1. Connect to our transaction database through API 2. Process JSON data and extract what I need 3. Upload data to Google Sheets 4. Unknown step where either the data will be shared with different G Suite users or emailed to contacts I've managed to pull off steps 1-3, but I need more research on formatting the data. I plan on digging into JSON options more and learning how to work with dictionaries. I also need to figure out how to let users handle the process eventually. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Gonna be starting an emergency fund calculator at some point today that takes in all of your financial information and multiplies it by either 3 or 6 months, and also shows you 12 months' worth of how much you should have. 
Nice editing skills!! 
Thank you! Glad you enjoyed it! It took a long time to edit 😅
I think that if you continue making videos with such a nice editing quality and attention to detail, your channel will quickly grow, as long as you pander to the right audience. Keep up the good work. :)
I'd say it depends on how your brain is wired. Are you a logical person? You can explain variables and for loops to some people for years and they will never understand it fully. And you have some people that grasp the logic immediatly. Try and see for yourself.
I'm just starting out learning to code and I've been writing my first few simple programs- I'm particularly stoked about writing a magic 8 ball program (even though its super simple) and a more complicated program that takes random lists of subjects, verbs, adjectives and adverbs and writes five stanzas of bad poetry :D
Really appreciate the encouragement 🙂 it is definitely a grind to get an audience but I enjoy making the videos so I'm happy
I wish you the best of luck, and I hope you keep making videos. :) 
The issue for me was, when I tried to look at youtube videos, they didn't really explain the logic or the fundamentals. Rather, they jumped into a simple task and made it. I could just copycat what I sae in the video. I didn't really grasp anything as such. I want to understand, not just use. Does that make sense to you?
I would take a look here: [https://github.com/mahmoud/awesome-python-applications](https://github.com/mahmoud/awesome-python-applications) &amp;#x200B; Most of these are probably "large", but I'm sure you can find something that meets your definition of "small".
I hope this helps. http://www.paramiko.org
Windows is a scary weird place.
Isn't Learn Python the Hard Way a paid book now? This list includes only free ones.
I’m sure that there are other libraries that cover projective geometry, but the approach to use tensor diagrams to compute the meet and join operations is rather unique. I think that most geometry libraries are also more focused on computational geometry and not on projective geometry. If you’re interested in the mathematical theory, the [book](https://link.springer.com/book/10.1007/978-3-642-17286-1) and the [lectures](https://www-m10.ma.tum.de/bin/view/Lehre/SS18/PG1SS18/WebHome) that I was referring to are a good place to start. OpenGL and other graphics APIs also use homogeneous coordinates and projective transformations, so there are certainly a lot of libraries in that area that use projective geometry.
Totally agree. Truth be told, just adding a database to Flask isn't that complex (I use Flask and Pony ORM for my small apps and it's a RAD combo), but when you start thinking in terms of a whole app (database, users, auth, permissions, mail, etc) it does get overwhelming with so many choices and tons of plugins to choose. Which one is the right for this app? Which one will be maintained a year from now? Does Flask-User plays nice with Flask-admin?.... Django would be a saner route for the beginner, is more opinionated. 
Great job! I wonder, what would be the code for the initial calculation? I mean a code that takes two arrays and completes the null cells. (i.e. finds m and d, then fills each array)
It's pretty common for `i` to stand for any temp variable in a comprehension.
Practising for the Canadian Computing Competition
Fairly new to Python, and working on a crossover between chess and rock, paper, scissors. I've got the mechanics handled, i just need to find a way to make a basic AI
Postgres will manage random JSONB columns. it can search through them, also. I'd pose that as "you get to have your unstructured data while the rest of us live in structured data land"
 query = str(input('Query: ')) no need to stringify the results in `input` methinks. That query of `x + 10 = 20` is wild!!! 
In badly written code, yes. `x` or `v` is generally preferred in the absence of a more meaningful variable name. Here are a few list comprehension tutorials. Observe that none of them use i as you suggest (except when iterating through a range): * https://python-3-patterns-idioms-test.readthedocs.io/en/latest/Comprehensions.html * https://www.python-course.eu/python3_list_comprehension.php * https://www.digitalocean.com/community/tutorials/understanding-list-comprehensions-in-python-3 Literally the first three hits on google. Didn't exactly have to hunt for this.
So part of what you're asking for is a general idea of what programming is, rather than just how to program. You can certainly learn that sort of thing quickly if you turn out to be predisposed to it. When I was studying for my degree the class that covered programming fundamentals was a 400 level class, you were intended to have learned at least two different languages to help highlight the concepts. However you don't need an undergrad level understanding of the nuances. It sounds like you're looking for an understanding of what a variable is, how a programs order of execution flows from one statement to the next, and so on. How do I turn this list of recipe directions into dinner? The art of writing the recipe is programming and I think you can get it. Lots of words to say the same thing. It's doable, depending on how well you learn, how well you can handle abstract concepts, and how much you care to keep going if you come across something you don't understand immediately.
You're right! Sorry, I didn't check. 
Learning about if and else statements in class, also elif which is cool. I’m scared.
I know Flask very well, and I pointed out the positives of Flask. You've got a problem with that?
There's over 470 occurrences of it in Python's own source repository, including this funny one: ./Lib/test/test_http_cookies.py: for i in "thou cast _the- !holy! ^hand| +*grenade~".split(): `grep` for `'for i in [^rx]'` 
You should add information criteria metrics like Akaike or Bayesian.
Awesome. I probably would had never thought to do this. Inspiring, seriously
I always love seeing numpy answers because I have still yet to teach my mind to think in vectors
That's exactly what I'm looking for. Do you know of any resources like that online? All youtube vids I've seen apparently require some previous knowledge. Do you think that with such understanding of the basics, I'd be able to code some things like bots, scrapers and such? I'd assume that I'd be able to do these things with lookups of some definitions and language specific things.
Learn flask on app engine, next. Then learn Django if you have a project that would benefit. Remember that when all you have is a hammer, everything looks like a nail.
True it is. I just want to practice on something for the warehouse department. We have about 30+ Products, not exceeding 50 products. I want to make something similar like Sage 100 but more internal use for the company or that department. Since they dont use Sage 100. &amp;#x200B; Plus it will help me practice to coding and work on a platform and practice more learning this awesome coding like the rest of you all. 
Python vs R? Do you have any programming background?
Ok! I get that! Thanks for correcting me!
No, I’ve only been working with Google Analytics and have some html and php skills. 
/r/learnpython and read the sidebar.
Take a look at pandas. May be a good way to format your data
Right now I am mulling over this logic: value # value to be inserted. may be null if value: if key == 'specific string' and 'any' not in value: new_dict[key] = value if key != 'specific string': new_dict[key] = value I am inserting a value into a new dictionary, but for a specific key, I want to check if 'any' exists in the array, and if it does, I do not want it to be inserted into the new dictionary. Everything else, so as the value is not null, I am fine with the insertion. (Value may be any type, for the specific key that I am checking, it is always an array.) Is there a way to simplify the logic?
Interestingly, this could be done in one line: [print("{} | {}".format(i, 3*i-2)) for i in [2,10,6,4,-3,-10,100]]
That'll learn 'em
Thanks for the links!
No problem, I was curious about the book myself.
You're welcome.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Obey the Testing Goat
This is how python works, basically. You can try something like VScode however, just be sure to install the Python extension.
https://www.youtube.com/watch?v=l26oaHV7D40 With an understanding of the basics you can write the code for anything assume you can come up with a list of things whatever you're writing needs to do and in the order they need to be done. Writing a program is simply the process of writing statements in a given programming language as a form of directions the computer follows, like my recipe analogy earlier.
I was babysitting my nephew one day and he had math homework. He needed to find the mean, median, mode, and range of 8-12 numbers and there were 16 of these bloody problems I needed to check. After checking the first few problems which took about 2-4 minutes each with a high risk of error, I wrote a script that accepts a set of values and spits out all the answers in about 15 minutes. I remember trying to find faster strategies to reliably find these answers by hand because I didn't have access to calculators at the time. I forgot how much raw work you need to put into math work.
Have you seen [IDLE](https://www.youtube.com/watch?v=kXbpB5_ywDw)?
Working, as I have for months, on re-creating my employer's GIS database of road pavement segments for maintenance. I've been doing tests, creating lists of things that don't match my expectations, and then fixing them. Mostly manually but when I can see a simple fix across a lot of features, I'll script it. Now I'm writing a script to check my "reference points" (mostly intersections used to define the road segments) to see if I have them in the right order against the GIS line vs their "milepost" number. I am ready to be DONE with this project but it can't be rushed or I'll have to do it over.
Download [PyCharm Community Edition](https://www.jetbrains.com/pycharm/download/) which provides you with such an interface.
Thank you for the link. I'll check it out when I get home. You make it seem like experience is not required once you understand the basics. I assume what experience then brings to the table is being able to code much more efficiently and faster. Whereas a new coder would need to spend a lot of time researching things and seeing what works and what doesn't, an experienced coder might know from experience. Is that fair to say? 
Try graphing it using matplotlib !
What you're looking for is called an IDE. PyCharm and VSCode are the two most popular.
Behold the magic of, NUMPY
read the sidebar.
Experience is how you turn what you're told into usable knowledge. You know what the Leaning Tower of Pisa looks like if you've seen a picture but you do not know it until you experience it in person. That said, experience teaches what formal instruction does not. What you'll learn reading and watching will teach you how to write code, but it won't teach you how to chase down or better yet avoid edge case bugs for instance. And yes, an experienced coder will likely need less research time in the same way that an experienced swimmer can probably skip basic swim class for training ahead of a race.
I think there is no difference for Vue.js As for me, I don't like Flask because you have to realize a lot things from scratch which are already ready for using in Django. So I would prefer Django except maybe the case when I want to use non-sql database for backend. As I know Django is not flexible enough for that and it would be better to use Flask for that case.
Awesome ! I would now try making it: • Graph your function using matplotlib Or • Get the rule from a table of values 
/r/learnpython and read the sidebar. 
I was working on a pretty cool progress bar 😀 ``` from time import sleep import sys from random import randrange def progress(message): print(message) for i in range(1, 101): sys.stdout.write("\r{}%\t[{} {}]".format(i, "="*int(i/2), " "*int(50 - int(i/2)))) if i == 99: sleep_time = 1.2 else: sleep_time = (randrange(1, 150))/1000 sleep(sleep_time) print("\nComplete.") progress("Erasing all hard disks...") ```
Have you tried following the link and reading the thing?
Why does no one know how to take a screenshot?
You've some long way to go. Start by making tools for fun. Example: I wanted to get more fake views on youtube, so tried to make a bot. That means I had to use : multiprocessing, webkit, clearing data for each webkit browser process, having random useragent for every new webkit process etc.. So yeah, learn by making stuff. Or else you never figure out what a language can do practically. Thats why people who just read books aren't always the best folks when it comes to practical implementations. However, it doesn't means noone should read books about coding! Read books for getting used to terms/technical_words, but always make your own fun to make tool. My motivation to make anything is that it should f*ck the existing system.. because I'm hacker. Your motivation can be to help your family member do something easily by coding a robot or anything else. Wish you luck.
Thank you for your input. So would you say that after I "understand coding" so to speak, I'll be able to do most tasks such as web automation, botting and such, provided they're not too complicated? And you would say that a month is possible, even though it depends on the person?
Yeah, this is called "bias confirmation." If you go looking for a specific thing, it's easy to find it. I can google &lt;"for i" "python"&gt; and find loads of examples too. Doesn't make it a good practice. [PEP 8 &gt; Naming Conventions &gt; Overriding Principle](https://www.python.org/dev/peps/pep-0008/#id35): &gt; Names [...] should follow conventions that reflect usage rather than implementation. [PEP 202: List comprehensions &gt; Examples](https://www.python.org/dev/peps/pep-0202/) &gt; `&gt;&gt;&gt; print [i for i in range(10)]` &gt; `&gt;&gt;&gt; print [i for i in range(20) if i%2 == 0]` &gt; `&gt;&gt;&gt; nums = [1, 2, 3, 4]` &gt; `&gt;&gt;&gt; fruit = ["Apples", "Peaches", "Pears", "Bananas"]` &gt; `&gt;&gt;&gt; print [(i, f) for i in nums for f in fruit]` [Google python style guide &gt; 2.7 Comprehensions &amp; Generator Expressions:](http://google.github.io/styleguide/pyguide.html) &gt; result = [mapping_expr for value in iterable if filter_expr] result = [{'key': value} for value in iterable if a_long_filter_expression(value)] result = [complicated_transform(x) for x in iterable if predicate(x)] descriptive_name = [ transform({'key': key, 'value': value}, color='black') for key, value in generate_iterable(some_input) if complicated_condition_is_met(key, value) ] result = [] for x in range(10): for y in range(5): if x * y &gt; 10: result.append((x, y)) return {x: complicated_transform(x) for x in long_generator_function(parameter) if x is not None} squares_generator = (x**2 for x in range(10)) unique_names = {user.name for user in users if user is not None} eat(jelly_bean for jelly_bean in jelly_beans if jelly_bean.color == 'black')
b/c i've been using them so long I'm fairly comfortable with the workflow around venv. But the pep in question, if it drops will make it a lot easier on those coming from js etc... So yeah, I'm for it. 
Currently trying to learn Python. I'm very much a beginner (only a couple months working with the language). I am not a programmer by trade, but have an idea for a program that I would like to create. It's ambitious so introducing myself here seemed like the next best thing to do. It's essentially a decentralized decision support system (DDSS). If anyone knows of good resources or has any thoughts on the subject, feel free to reach out. I'm still hammering out the concept and how it will work, so any input would be appreciated! Thanks, and "Hello Python community"!
&gt; In badly written code, yes. x or v is generally preferred in the absence of a more meaningful variable name. "Meaningful" variable names are subjective and only useful for contextual reduction of cognitive load (e.g. I, and others reading my code in the future, are less likely to be scratching our heads about what the variable "last_name" means 27 lines after instantiation vs. idiotically calling the same thing "i"). The temporary variables in a list comprehension are terrible examples of a place where something like this is even remotely important, since they are transient and fundamentally limited in scope to that one, single, individual comprehension (i.e. if you cannot keep the scope of a single line of code loaded into your mental working memory at any given time, the exact choice of variable names is FAR from your biggest problem) &gt; e.g. `x_i` Nope... For absolute clarity please always use `this_is_the_current_value_of_the_thing_that_I_am_iterating_over`
You are doing God's work here, son
someone pointed out it's paid, I'm curious... convince me I should purchase the book :P What in it makes it worth reading? (considering it, very curious though)
As far as I know, there's no significant difference in performance between color keying and using the alpha channel. I wouldn't be surprised if color keying is actually quicker.
Nice.
Thankyou for share!
&gt; The temporary variables in a list comprehension are terrible examples of a place where something like this is even remotely important, since they are transient and fundamentally limited in scope to that one, single, individual comprehension Readable code is readable code. [token.lower() for token in text.split()] vs. [i.lower() for i in x.split()] You don't need to sacrifice a simple modicum of readability to save from writing a few extra characters. 
No, it's `e` for element.
Black magic!
My aim was to simplify the code, not to minimize it. Those aren't necessarily the same thing.
Sorry I was making a bad joke haha
That was a very fast response!
I’m bored at work lmao
\*high five\*
🙏
Why on EARTH would you use R for this? Python is exactly what you need. Check out Tensorflow.
Thanks for the share!
Tl;Dr node_modules for python. 
Thank you!! Do you know any other one that is free?
Yeah got it, thanks! This works for now but still very basic...
While I feel this is an improvement, it should be noted that there are venv use cases not covered, `console-scripts`. &gt; A new workflow you could use with the advent of __pypackages__ is to work around creating a list of dependencies and actually commit __pypackages__ itself to source control. Doing that would virtually guarantee you’re using the same versions because, well… you’re using the exact same source code. The problem with this (and one of my big annoyances with "freezing" in general) is it that it will be platform-specific. While there are lots of reasons to use poetry, a cross-platform lock file (which I think it has) is one of the biggest motivators for me to work on switching.
Thank you!! I’ll try to get one
Glad it's useful.
You're welcome!
Thanks, they're valuable learning resources.
Thanks!
Yeah, but you (sneakily) changed two things simultaneously here in order to try and make your point (i.e. `token` -&gt; `i` and `text` -&gt; `x`). I (and I believe most people) would argue that the former doesn't matter at all, but the latter actually is good practice. In other words : [token.lower() for token in text.split()] contains no more/less information and is not more/less contextually readable than : [i.lower() for i in text.split()] Since you are literally defining the temporary variable `i`/ `token` in that very same line, and that definition is entirely limited in scope to that single comprehension!
I've never really used numpy before. Mainly because i use Matlab for maths, I thought numpy might have an operator to state you want the equation to be applied to the entire array like you've shown in your example. 
I never said it was a good practice, I said it was a common one.
* [Program Arcade Games](http://ProgramArcadeGames.com] * [Learn Python with Arcade Academy](https://arcade-book.readthedocs.io/en/latest/)
Good stuff
Are locked requirements.txt files not cross platform? 
They are not. They are a snapshot of what you have installed that moment. I've had problems with creating requirements.txt files on Windows, my dependencies pulling in win32-specific packages, breaking the file on Linux. So far I've not run into Linux-specific packages like that, so we've started locking on Linux and letting our windows-specific dependencies be on-the-float.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
On their website 'See why Equifax choose sonatype' I think I'll pass on that one then. 
On their website 'See why Equifax choose sonatype' I think I'll pass on that one then. 
Awesome! Keep it up, that's good stuff and solving little things like this will make you unbelievable better! 
You could have one file per platform
Something i haven't seen others mention. You don't need to specify that the array element is an int since you've specified that it's an int in your array. If the numbers in the array were strings, then you would need to use int() to convert them to ints. The way you've written the print statement, you allow the print function to implicitly convert the variables to strings and then print them one after the other, as if it's a list (don't know the technical term her). Also at each separator, the print function will place an additional space. An alternative is... print( str(x[a]) + ' | ' + str(answer) ) Here it explicitly states that we want the print function to convert the variables to string using str(). There is only one space on each side of the vertical bar. And we want to concatenate all three together. Personally i find the way you've printed easier and quicker. But my method is slightly prettier since we have more control. And an even better version is to use... print("{0} | {1}".format(x[a] ,answer))
Yes, though gets annoying when trying to keep all platforms in sync.
I moved on. My first instinct on any project is to setup a docker and docker-compose. I know it's not feasible for the generic worker bee, but if I'm going to share any project with anyone it'll all get setup inside Docker. So even if someone wants to play local, they'll have all the dependencies clearly laid out in Docker. Thats the best part. /end aside
How about tHe FucKiNG DoCuMeNTatION. XD. 
Thanks, gaming is a popular application domain.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I think there is a misplaced bracket after the first closing curly brace on the second line
Can also use str.ljust() or str.rjust() to ensure the vertical dividers are correctly spaced
Arguably it is not misplaced. If `myList` contains, for instance, `['eggs', 'spam']`, then the code from /u/MrSavagePotato will print out: 1) eggs 2) spam
I know people feel differently about this than I do, but I would say Django. Django Rest Framework is fucking great. So many batteries included. It feels really declarative too, which I like. I feel like I'm just describing my model in plain English, and then BAM! it's automatically a service. YMMV... if it's a tiny, tiny project, Flask is almost always the answer, but I love Django and DRF.
Ah, of course! My apologies
I’m sure the intern that is in charge of most world leader’s twitter accounts finds this fascinating.
Easy mistake to make; don't worry about it. At first glance it *does* trip that “unmatched parenthesis” pattern. :)
[2019 Python Steering Council Election Results](https://www.reddit.com/r/Python/comments/an16pk/2019_python_steering_council_election_results/) [Steering Council Election Results](https://www.reddit.com/r/Python/comments/an377a/steering_council_election_results/)
With pip tools you could set versions in the single requirements.in, and generate a different &lt;platform&gt;-requirements.txt when you're on each platform. 
Why "print(i..." And not "print(x[i]..."?
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Because when you do a for loop, it will return the actual element and not the position it's in. So if x is [9, 10, 3] then for i in x: print(i) will print 9, 10 and 3. It will not print 0, 1, 2. Sorry for the horrendous formatting, using mobile. 
Yes, this is another work around. The downside is I am now explicitly listing the exact version of all of my dependencies manually rather than a tool doing it for me. The other downside is that this doesn't cover indirect dependencies.
Thanks for mentioning one of mine. Woot!
...registration is still open...? Just buy a ticket.
What "output screen" do you mean? Also, /r/learnpython.
You would need an integrated development environment (**IDE**). &amp;#x200B; Pycharm is populare, but there are a lot of different ones.
Well, I'm not too much further along than you but that it! The text returned is your output. 
Hahaha... clusterfuck becomes more entangled and more painful to debug. If I wasn't following Python for over a decade, I'd thought it was an April fool joke published too early. But, I'm convinced now that this bullshit idea is 100% real, and will be implemented as described. And we'll see a new wave of people wondering around their systems not understanding why their code behaves in a completely random and unpredictable way. Because, guess what: this feature *will absolutely be used together with "obsolete" virtual environments*. Why am I so confident? -- Because not a day goes by without some poor soul trying to use `pip` in Anaconda environment, a dozen of Django-primates wondering how's that the imports in their scripts don't work, a stupefied MS Windows user, who's idiot sysadmin installed 32-bit version of Python into a directory he has no access to, and then installed some more packages using `pip` into AppData, which lives on an SMB share, and polished it with `pipenv` which accidentally used cached packages from `pip` installed five years ago under superuser's account. Oh, wait, I believe that about 90% of people who've heard about Python's virtual environment don't know there are two completely different programs, which behave differently, but both contest the title "virtual environment": `venv` and `virtualenv`. And so, occasionally screw themselves by using one instead of another. And then there's also `pyenv`, which people systematically confuse with `pipenv` and it also has its own version of virtual environment, which acts similarly, but ultimately, differently from `venv` and `virtualenv`. And there are editors, who claim to understand this clusterfuck, but they usually are only aware of &lt; 50% of environment variables set by either of the virtual environment script, and don't really understand what those scripts are capable of. ---- Bottom line: I really enjoy watching idiots having to use their own tools.
So when you see this: &amp;#x200B; `Python version etc etc` `&gt;&gt;&gt;print("hello world")` `hello world` `&gt;&gt;&gt;` The print goes to stdout - standard output - which is basically your console screen. If you want more separation between code and output you may want to check out Jupyter Notebooks or some other IDE. Another alternative is to write your code in an editor and save it then at the command line run python hello\_world.py then get your output.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Please stop posting about this
Please don't post beginner tutorials
Is the code on github or opensource for others to play with?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Yup it's in the description
Plus you don't have to dick with it when you go back to the project later. You open the container, and voila. Amen, brother.
Working on a weakness: I'm trying to figure out how to write tree classes in python. I've never been able marry the concept of trees to the python implementation of how they, and have gotten away with using the dictionary structure instead. 
I'm really curious if that can be done as well, but I haven't tried yet.
Thanks for the tips. I'll have to keep that in mind. Also, for clarification, the whole `int(x)` was a mistake in understanding on my part. I somehow got the idea that all information in list was stored as strings. I've corrected the code in my current version.
Do you have any free book recommendations for Cisco? 
RPG project that’s fully moddable with just simple text files :) 
Probably skip it. It's not controversial because it's actually hard, people have issue with the author. There are plenty of free books with the same quality as the paid ones anyway
Then I really don't understand what you're arguing with me about. I was suggesting a best practice, I never denied that people write code using sub-par practices.
That’s pretty cool 
[Python Data Science Handbook by Jake VanderPlas](https://jakevdp.github.io/PythonDataScienceHandbook/)
How would that look, I'm trying this but it isn't working print(f"x: {x.ljust(5,'')}\ny: {y.ljust(5,''}")
FWIW, whether you're using Vue or something else has basically no bearing on which backend to use. Your frontend JS is going to (likely) consume a REST API.
Sorry, didn't even occur to me to check out the youtube video description. Has anyone gotten this to work on macosx?
It works perfectly fine on Mac. Just follow the readme on GitHub
For the data folks - [Bayesian Methods for Hackers](http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/) - [Neural Networks and Deep Learning](http://neuralnetworksanddeeplearning.com/) - [Natural Language Processing with Python](http://www.nltk.org/book/)
My server. I need help.
I get my fix here :) ... [free-programming-books on github](https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md#python) 
It's not worth reading.
For people interested in making desktop applications with Python, my book [Create Simple GUI Applications with Python &amp; Qt](https://leanpub.com/create-simple-gui-applications/read) is also available to read free online.
Check out /r/learnpython for these kinds of questions. Also, please read the sidebar of a subreddit before posting to avoid issues in the future.
Best to start your own. Beginners really aren't capable of producing software for production. It's highly likely you need more knowledge before you are useful to an existing project.
Al Sweigart has a couple other free books as well: * [Making Games with Python &amp; Pygame](http://inventwithpython.com/pygame) * [Cracking Codes with Python](http://inventwithpython.com/cracking/) 
No worries.
json options?
py4e.com
Actually this is not "goodbye" to virtual envs. It merely proposes standardising a name for the venv dir to `__pypackages__` in the application root dir which we can appreciate is probably a good convention. So after creating that explicitly (with `python3 -m venv __pypackages__`), then `pythonloc` is effectively just an alias for typing `__pypackages__/bin/python` and `piploc` is just an alias to `__pypackages__/bin/python` so it does not add much.
I wish i could upvote you more. This is exactly my point 2 years ago, and still is to this day. This new pep seems unnecessary. 
I was just teaching that to my students last week. You can do it!
I started teaching my 6th grade students in their science class about genetic drift using a simulation in a Jupyter Notebook and Google Colaboratory. They’re really getting into it! The notebook is up on Github as part of the overall project that also uses micro:bits. https://github.com/seantibor/uorganisms
!remindme 4 days
I will be messaging you on [**2019-02-09 23:57:18 UTC**](http://www.wolframalpha.com/input/?i=2019-02-09 23:57:18 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/anfdyh/free_python_books/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/anfdyh/free_python_books/]%0A%0ARemindMe! 4 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I did it! Also the print(‘...{}..{}’.someword(x[0],x[1])) is hard. 
Can you download this? 
What about not specifying the versions in the .in file, and just pip-compiling "simultaneously" (same day will usually be safe) on both platforms? 
`su freshuser` is my `venv`
I added some more information to my [previous reply](https://www.reddit.com/r/Python/comments/anbjyx/honestly_just_sharing_because_im_stoked_i_figured/eftoe36/) to add some more examples if you still need help with the for loops, feel free to ask any questions, If I know the answer I'll help, if not, I'll go to stack overflow. :)
I am not beginner to programming. I am only beginner to Python
Just finished an example using Python 3 and Flask on how to use OAuth 2.0 to authenticate on the Spotify API to consume data: [https://github.com/santosfilipe/spotify-api-oauth2](https://github.com/santosfilipe/spotify-api-oauth2) I'm not a Python programmer... just an infosec guy that wanted to learn OAuth 2.0 :) &amp;#x200B;
As someone who just spent a few hours yesterday learning the basics of virtual environments, I am confused about a few things: 1) How does this differentiate based on project? It looks like I just run some piploc commands with no reference to a directory. Do I first navigate to my project folder with `cd` and then use it? 2) It seems like there is still plenty of cognitive overhead in setting this up, generating requirements.txt files, etc. Virtual Environments honestly only have 3 steps, and then you just activate it whenever you start up terminal. Closing terminal deactivates it. &amp;#x200B; The real cognitive overhead for Virtual Environments is in how poorly written most of the docs on it are.
Still working on my first big python project. It's a discord bot for pokemon go that takes user reports and makes a pretty map of them. I think I finally got all the inner workings redone so that it can work on multiple servers at the same time without them interfering.
Then I'd just browse popular open source projects code bases until you find something fitting to you. It'd be pretty tough for someone to guess what you'd be good at.
I "standardized" my virtualenvs to `.ve` in the project root directory, and made a shell function to find the closest `.ve` and activate it. Very useful.
Yeah, that is why I asked if anyone know any good ones. Maybe some projects that ppl have worked themselves and need an extra hand. 
/r/woooosh 
I hate writing complex queries or allowing access to them from the front end. I would much rather see very basic endpoints like `/specific-data/`. Starting from something like the django rest api is very open-ended, but you end up writing those specific queries and business logic anyway.
Excessive wooshing is a known symptom of douchery. Please report to your nearest `$medbot` for analysis and treatment. ^^^Beep ^^^boop ^^^don't ^^^be ^^^a ^^^douche ^^^to ^^^this ^^^bot. ^^^Report ^^^issues ^^^via ^^^PM.
bad bot
Thank you, netgu, for voting on UrADoucheIfYouWoosh. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
What makes a project good or bad in this context?
Ease of jumping in and a variety of different tasks to practice a lot of different scenarios make a project good I think
Not a native speaker, I don't understand this.
I miss the days of basic, when all you had to say was "wait x"...
Well, tell the people what you are good at and what you want to work on if you want suggestions. Just saying "please recommend what are good beginner-friendly projects" doesn't give anyone any criteria to what that is to recommend. Instead they are just guessing what you mean by beginner-friendly.
It's your cheat sheet, add what you like! Lol, I know what you mean, but doing tools work and slinging a lot of paths around, this thing keeps me sane. Nothing like passing a string around that something happens to modify wrong and the house of cards collapses &gt;.&gt;
Where will it "take in" the financial data from?
that's very convincing :P
I’m not sure what the best way is to transform the data yet. I was successful using pandas to get it into a data frame, but I need to join on a lot of nested items. 
but what is a json option?
Inputs given by the user. Eg. What do you pay for rent if applicable? Mortgage if applicable? Phone bill? Vehicle insurance? It asks for all of the "common" monthly expenses and then just adds them all together. 
I had a Docker system break in prod this year. The image was specified as python:stable, so when it rebuilt after 3.7 came out, it broke because 3.7 made `async` a full keyword (which broke a lot of libraries). Of course, the original image would have been fine but I wasn’t using a container repository at the time. Anyway, Docker is great but this proposal is also better than status quo, which is quite bad. Virtual envs are a really ugly hack when you look under the covers. 
I guess people are downvoting you for tone, but your actual content is 100% correct. This will just be another bandaid on the leak and the ship will continue sinking. 
I mean I don’t know all of the different ways I can parse or convert the JSON data into a readable format for a report. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
 if value and not(key == 'specific string' and 'any' in value): new_dict[key] = value In terms of shortening it works. In terms of readability? meh.
Does any one have a link to Fluent Python?
I understood the OP to mean something along the lines of whether to have dictionaries of lists or lists of dictionaries, and things like that. Like there are options for the structure of your data.
Forget the certificates; they're all made up and don't matter. By far the most productive method of learning this stuff is by doing. Just make something. When you build it, there's a good chance it won't work. When it doesn't work, find out why by performing your own diagnostics, debugging, searching, etc. When all else fails, and you've exhausted what you believe to be all your resources, visit r/learnpython with a detailed question and your code.
&gt; there are venv use cases not covered, console-scripts Yeah agreed that `__pypackages__` does not work well for this case. For that you would use either a virtual environment, or [pipx](https://github.com/pipxproject/pipx) (note: pipx is also my project). &gt; The problem with this (and one of my big annoyances with "freezing" in general) is it that it will be platform-specific. PEP 582 namespaces the packages based on python major and minor version. It *could* be namespaced based on OS which would fix this problem, i.e. installations would go to `__pypackages__/windows/3.6/lib` instead of `__pypackages__/3.6/lib`.
!remindme 4 days
&gt; So if you have the following: &gt; &gt;x = \[10, 3, 95\] &gt; &gt;the output will be 10 3 95
And plz support multiple versions in one dir with nested __pypackages__
!remindme in 14 days
If the PEP is approved and Python+tooling gets built with `__pypackages__` in mind, there will be no reason to use Virtual Environments. Even the PEP itself says this. &gt; This will avoid the steps to create, activate or deactivate "virtual environments". Python will use the __pypackages__ from the base directory of the script when present. Installing a Virtual Environment just to install packages is overkill as it also creates a new Python exectuable and bin folder. Also the directory structure created by venv does not match the directory structure proposed in the PEP. `pip` can be used for this directly. Another quote from the PEP. &gt; After doing a fresh check out the source code, a tool like pip can be used to install the required dependencies directly into this directory. And indeed this is what `piploc` does.
Thanks! I messed it up when changing the formatting, sorry.
No worries. I was legitimately confused for a bit. :)
I really liked Think Python but must advise against it if you are not coming from a computer science background. While it does omit the technical stuff that as a person you might not care it doesn't focus on practical stuff like other books do. If you are a beginner that wants to learn you can use it, but I'd recommend "Automate the Boring Stuff with Python" a lot more.
I started as well! It's pretty challenging for me. But so far really rewarding. 
Working on my capstone project, a remote forensics platform.
I scripted an Hello World program ! Very proud. 
I think he'd find [Fabric](https://www.fabfile.org/) more convenient.
This would be very easy to do using the "[keyboard](https://pypi.org/project/keyboard/)" library from PyPi. Installing the library is as simple as "pip install keyboard". Not sure what you mean by a "closed system", but it will be very, very difficult without installing any extra libraries, and very easy with the Keyboard library.
I have a question, I can’t Conda install every package and sometimes need to use pip. How would I get around this otherwise and why is it bad to do it?
Sounds like you are 'outsourcing' a class project LMAO
The first question you should be asked is what your GitHub URL is :)
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Working on a pomodoro timer and time-tracking CLI called [pompom](https://github.com/connortoliver/pompom). It's pretty simple, but I'm having a lot of fun working with Click to make it. The timer itself is done. Now I'm working on plotting the statistics with matplotlib.
lol I see how it can look that way. I wish I was in a CS class but sadly I'm not. I just got interested in coding over the summer and found a pretty cool use for it in my literature class and thus here we are
How are more people using Javascript than HTML?
&gt; there will be no reason to use Virtual Environments. Even the PEP itself says this. There are lots of reasons to use virtual environments. Specifically for toolsets that use Python application entry pointss, rather than the python source application itself. Furthermore I can't think of a single person who truly enjoys the node_modules system. It's a space-heavy mess. At least with virtual environments you can use the same one for multiple projects. The concept is nice I suppose, but it's still very messy. Furthermore, your proof of concept is still messed up. I repeat, it's extremely bad practice to completely ignore a signal, even if your process is just delegating to a child. You should be replacing the Python process via `os.exec*`.
WOW Nice. I hate to admit but I'm a newbie and starting to learn Python. Thanks for sharing!!!
&gt; Flask is great if you already know what you need, but if this is your first time writing a webapp, Django will hold your hand for much longer. Hah, I usually give just the opposite advice. I recommend Flask for total beginners because it will force them to understand things that Django takes care of under-the-hood, and recommend Django for anyone with web framework experience because once you understand what you're doing, it can do anything Flask can, as well as Flask can, and almost always with less effort. I see where you're coming from though - if the goal is just to get a working site, Django may get you there faster.
The nltk module will probably help you here. It might be overkill, but here's someone who wrote up something about it: [https://code.tutsplus.com/tutorials/preparing-a-book-index-using-python--cms-27556](https://code.tutsplus.com/tutorials/preparing-a-book-index-using-python--cms-27556)
There are multiple ways to do this. Here is one: Import the book as one long string. Then find the index of each color name in the book You will have to go through the book and know at What index each chapter and page start and end. Then you can just compare the numbers This may be helpful https://www.programiz.com/python-programming/methods/string/index 
I can't tell if this is a joke or not, but * node interaction? * not-html-html like mako or jinja? * people might have just been able to pick the "top three", and while more people work with html, they picked JS instead.
Fair enough I guess.
Your text file, will have no page numbers, so every instance of a color word will be page one. Save your text file as a .py file. Give your whole book a variable name bookvar and enclose your text in triple quotes. Set a list to be equal to bookvar.split(' ') . Then make a set of the list, make a new list of the set, sort the new list, look for color names in the new list, make a list of those color names. Then iterate through your list of color names looking for every instance of that name in your first list... https://stackoverflow.com/questions/6294179/how-to-find-all-occurrences-of-an-element-in-a-list Stack overflow is your friend. Ask it for answers first. If you cannot follow along with my clues, Google the parts one at a time. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Thanks a lot, but sometimes I find the tutorial on the official website is good enough... Or did I miss something?
Nice read! Big jump in VS code users. I personally made the switch from PyCharm this year and has been great. PyCharm is nice, but just have come to prefer more of a lightweight editor.
This week I am finishing up and reformatting code I wrote to read in a few csv's, analyze them with Pandas, then support out an Excel file. This is my first complete python script that's not just random stuff I do in the console. 
Didn't know he'd written something. His short youtube vids are great.
Does anyone have experience with [Problem Solving with Algorithms and Data Structures using Python?](https://interactivepython.org/runestone/static/pythonds/index.html#problem-solving-with-algorithms-and-data-structures-using-python) I'm at those two topics but haven't decided on a first resource. 
And Guido was retiring. I was worried.
So why would i want use PyQT when the Pyside2 is available? I have used both briefly for a hello world thing but haven’t really gotten into the meat of either. 
In this comment I was addressing the workflow he described, but agreed (and I said this in another comment) about entry points being a use-case for venv. Thanks for the reminder about the os.exec. It's been updated. If you have any other suggestions GitHub issues are always there too.
Pick the one the suits you the best http://bigocheatsheet.com/
I'm a beginner as well, but let's try this together (since no one respended yet) by breaking it into steps: 1. Finding the coefficient and the constant (m and b) through a two variable solution. So for example we can use your lists: x = [2,10,6,4,-3,None,-10,100] y = [4,28,16,None,None,10,None,None] m = (y[1]-y[2]):(x[1]-x[2]) b = y[1]-m*x[1] Now we can use your loop to fill the blanks. I hope I get this right: if y[i] == None: y[i] = m*x[i]+b elif x[i] == None: x[i] = (y[i]-b):m Sorry if my algebra is too rusty. I made most of the process on paper, and I'm typing on my phone. Thanks for the inspiration!
I worked on this script for the super bowl [https://www.youtube.com/watch?v=6Y0cBnlee2Y](https://www.youtube.com/watch?v=6Y0cBnlee2Y)
I no longer recommend it because of some of the author's public comments re: the python 3 conversion.
That is a wonderful resource hey, thank you. I am curious... I need to optimize for both time and memory usage. It seems Big(O) optimizes for time and number of operations. How would i operate for memory usage? Do i have to split the file, use buffers etc? I have no experience with optimizing for memory. I would have thrown it into Spark and let it shard and do the rest but I cannot use Spark due to environmental constraints.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
https://en.wikipedia.org/wiki/External_sorting https://softwareengineering.stackexchange.com/questions/128161/sort-algorithms-that-work-on-large-amount-of-data
**External sorting** External sorting is a class of sorting algorithms that can handle massive amounts of data. External sorting is required when the data being sorted do not fit into the main memory of a computing device (usually RAM) and instead they must reside in the slower external memory, usually a hard disk drive. Thus, external sorting algorithms are external memory algorithms and thus applicable in the external memory model of computation. External sorting algorithms generally fall into two types, distribution sorting, which resembles quicksort, and external merge sort, which resembles merge sort. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
* interactivepython also has [How to Think Like a Computer Scientist: Interactive Edition](https://interactivepython.org/courselib/static/thinkcspy/index.html) * [A Whirlwind Tour of Python](https://github.com/jakevdp/WhirlwindTourOfPython) * [A Byte of Python](https://python.swaroopch.com/) * [Non-Programmer's Tutorial for Python 3](https://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python_3) * [Dive Into Python 3](https://www.cmi.ac.in/~madhavan/courses/prog2-2012/docs/diveintopython3/table-of-contents.html) 
!remindme 1 day
Currently working on my side project: an art sharing site. I'm building it with Django and am hoping to have it ready for initial users by the 15th. 
I did not know any of them although started to learning 2 months ago. Thank you! 
Thank you for the book :)
Python is a general purpose programming language with lots of libraries just to do the tasks you mentioned. So, Python it is!
[removed]
Congrats man 
Congrats. I also recently used python scripts to perform a very similar task at work which takes almost 15 minutes in Excel and is quite boring too. My manager wasn't too excited but one of my co-workers is now using my scripts to finish his work quicker and that gave me great satisfaction. Hope you have more success with Python at work!
There is LPython3THW way.
It is worth reading. Learn Python 3 The Hard Way. He gets you to actually do stuff, type in the code yourself and get results quickly. Those who think it's controversial, think so because he wrote the book in a commanding tone. Who cares? As long as you gain the needed knowledge.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
js doesnt require a browser
Test harness for what?
\&gt;VS code \&gt;lightweight &amp;#x200B; oh my
Is this a school project?? Agilent (now Keysight) gets $100k for theirs.
Basics of hashing strings and adding multiprocessing sound to a game. 
I think the underlying problem with virtual envs is that there is little agreement on what problem they ought to solve. Different people use them for different things, and that’s why there are so many competing ways to manage them. This pep solves one set of use cases but not all of them by any means. And it introduces some new problems to the mix. One thing I don’t accept as a guiding principle when it comes to language mechanics is “it should be easier for people who don’t understand the language to just sit down and code.” For one thing, if you’re on Mac or Linux, you can just sit down and code. It’s not much more difficult if you’re on windows. There is going to be a point in your career where you have to actually learn how your tools work. It’s not that hard. Python doesn’t need to make any decisions based on making things easier for new people who won’t take the time to learn what the PATH is. I think a better approach to this is going to need to start off with the point of view of establishing what people ought to be using them for as opposed to what people actually do use them for, gather some consensus around the set of problems to be solved, and then solve those as best as possible, while allowing or maybe even recommending solutions to the cases that are left out. This pep seems to me to be a rather glib kind of, “Hey! Here’s a better way to solve my particular set of problems! Let’s all do it this way from now on!”
This site has good free notes created by Peter Ranieri https://goalkicker.com/ Here is one on python https://goalkicker.com/PythonBook/
https://xkcd.com/1513/ Not sure if you wanted a review of the code but I can't help but look under the hood when someone links a project. First off I would suggest running flake8 on your code, pip install flake8. also there are some line that while they do save lines don't make the code more readable. ln, ts= make_line('_',30),datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d-%H-%M-%S') This should not be writen like this. # import datetime like this, now you don't need time from datetime import datetime ln = make_line('_', 30) ts = datetime.now().strftime('%Y-%m-%d-%H-%M-%S') I would probably go with something closer to this #!/usr/bin/env python """ Copyright &lt;2019&gt; &lt;Danny Antaki&gt; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. """ __version__ = "0.0.1" import argparse import datetime import json import os import sys import textwrap import tweepy def access_twitter(conf=None): """ requires a JSON file with your API keys logins into the API and returns the tweepy API object """ with open(conf, "r") as f: data = json.load(f) auth = tweepy.OAuthHandler(data["consumer_key"], data["consumer_secret"]) auth.set_access_token(data["access_token"], data["access_token_secret"]) api = tweepy.API(auth, wait_on_rate_limit_notify=True) return api def load_history(): with open("tweets/marcus_aurelius.log", "r") as f: return [l.rstrip() for l in f] def write_history(tweets): with open("tweets/marcus_aurelius.log", "a") as f: f.write("\n".join(tweets)) f.write("\n") def check_tweet(tweets, log): return any(t in log for t in tweets) def get_tweets(users, api, n_tweets): usr_twt = {} ln = "_" * 30 ts = datetime.now().strftime("%Y-%m-%d-%H-%M-%S") ofh = "tweets/maurelius.{0}.tweets.txt".format(ts) with open(ofh, "a") as out: sys.stdout.write("\n{}\nCollecting tweets...\n".format(ln)) for u in users: sys.stdout.write(" {0}\n".format(u)) tweets = api.user_timeline( screen_name=u, count=n_tweets, tweet_mode="extended") for tw in tweets: usr_twt.setdefault(tw.id, []).append(tw.full_text) for wrd in tw.full_text.split(" "): out.write("{0}\t@{1}\t{2}\n".format(tw.id, u, wrd)) sys.stdout.write("\n{0}\n".format(ln)) return ofh, usr_twt def load_tweets(fh): kw_dict, twt_dict, tid_dict = {}, {}, {} with open(fh) as f: for l in f: ind, kw, _id, tw = l.rstrip().split("\t") kw_dict[kw] = _id twt_dict.setdefault(ind, []).append(tw) tid_dict.setdefault(kw, []).append(ind) return kw_dict, twt_dict, tid_dict def pick_tweets(tid, twt_dict, tw_buff): ln = "_" * 45 sys.stdout.write( "\nNumber of Tweets: {}\nDisplaying first {} tweets...\n\n".format( len(tid), tw_buff)) chosen = "y" for i, e in enumerate(tid): if chosen in tid: break if i == 0: i += 1 if i % tw_buff == 0: chosen = input( "Please select tweet according to tweet number...\n") if chosen not in tid: ask = input(( "\n{0} Not a correct tweet number.\n " "Display more tweets? [y/n]\n").format(chosen)) if ask and ask != "y": sys.stdout.write("\nExiting!\n") sys.exit(0) tws = " * ".join(twt_dict[e]) sys.stdout.write("\n{0}\n{1}\n{2}\n{0}\n".format( ln, e, textwrap.fill(tws, 45))) if chosen not in tid: chosen = input("Please select tweet according to tweet number...\n") if chosen not in tid: sys.stdout.write( "{0} Not a correct tweet number.\nExiting!\n".format(chosen)) sys.exit(0) return chosen def show_keywords(kws): ln = "_" * 60 qn = "_" * 40 sys.stdout.write( "KEYWORDS\n{0}\n{1}\n{0}\n".format( ln, textwrap.fill(" * ".join(kws), 60))) chosen_kw = input("\n{0}\nPick a keyword... \n{0}\n".format(qn)) if chosen_kw not in kws: sys.stderr.write("ERROR: {0} is not a keyword!\nExiting!\n".format( chosen_kw)) sys.exit(1) return chosen_kw def tweet_it(tweets, _id): ln = "_" * 45 write_history(tweets) sys.stdout.write("\n{0}\nT W E E T I N G ...\n".format(ln)) last_status = None for tweet in tweets: sys.stdout.write("\n{0}\n{1}\n{0}\n".format( ln, textwrap.fill(tweet, 45))) if last_status is None: last_status = api.update_status( status=tweet, in_reply_to_status_id=_id) else: last_status = api.update_status( status=tweet, in_reply_to_status_id=last_status.id) sys.stdout.write("\n") 
What does: which pip give as the output? 
And "pip --version" is for py2 and "pip3 --version" for py3 I guess 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Sorry-- it's in house. My case had additional requirements for adding metadata from a second input file to the result. I used dxfgrabber (conda install -c conda-forge dxfgrabber) to turn the dxf into something useful to python then iterated over all the blocks to extract svg paths as strings. I then iterate over the dxf.entities to determine where the blocks are located (entity.insert[0] and entity.insert[1]). Finally I had an issue where only a part of the block would be rendered that it seems was caused by the SVG path not having all positive x,y coordinates, so I created svg elements from the path string and used svgpathtools to get a bounding box for the shape and translate it so the whole thing was in quadrant one. Sorry I'm not allowed to share source code with you.
Aaaand we all know what does that mean.
Make a variable called space and write " " and then put it in between first and last name
Or just write firstname," ", lastname
What a fucking mess of a code.
Scraping a stupid Fiserv bank website to download my business’ check images haha. 
[how to use f-string](https://cito.github.io/blog/f-strings/) 
I think you should post this question is better suited for r/learnpython. But to answer your question, I’m assuming you’d like a space between first and last name you need to concatenate a space between them. Also I would just use the format option, ex: ``` resp_string = “The person’s name is {} {}, and they are {} years old”.format(first_name,last_name,age) print(resp_string) ```
Thank you! It’s great to hear this. Im dedicating myself to it so I’m glad to hear that there is a purpose and tools to make it happen. Appreciate it!
Well, I don't like this idea, because having explicitly to activate a venv is explicit, while this proposal will do something behind dev backs that new people will not be aware of... The argument of learning curve is a pile of bs, if python is hard to learn then I am not sure what's easy anymore...
thank you! That helps me to keep going. I don’t want to program software but definitely perform tasks that it seems Python can help me with. Thanks!
You could use an f string for that ```print(f"The person's name is {first_name} {last_name}, and they are {age} years old")``` Don't remeber what version of python introduced those but I can live without them(maybe 3.7)
PtQt5 and PySide2 are basically interchangeable, the only difference being licensing. The book was started before PySide2 was available and it wasn't clear it ever would be. Now PySide is the Qt official version I'm working on a new version of the book, but stuff takes time. From a code perspective the only real difference is imports. Everything you learn is interchangeable.
try reinstalling the pip package ***not safe script below*** wget https://bootstrap.pypa.io/get-pip.py sudo python3 get-pip.py &amp;#x200B;
I haven’t really had the chance to use f string (they were introduced in 3.6). I’m used to 3.5 at work lol. I guess I’ll have to try them on my laptop at home.
In 2015 I wrote a Bash script to monitor channels on twitch.tv because I hate their website. Its served as a kind of private follow list for me since then and been iteratively improved. However, because I didnt understand the API, every five minutes it sends an API query for every channel I follow, as well as another query for every channel that is found to be live. Thats 75-90 requests per 5 minutes, and the refresh takes about 30 seconds. This week Ive been rebuilding it from scratch in Python. Now it sends 2-3 requests and refreshes in **under a second.** It cut down on request volume to my PiHole by a solid 60%. Im particularly proud of the interface modules Ive written to standardize its use of filepaths, debug messages, and the config file.
First time that I use Kivy. And also first time Raspberry Pi. And also first time with a touchscreen (except phones). We have a new coffee machine at our departure and we wanted a new modern way to count how much we drink (and then pay the amount later on). https://www.reddit.com/r/Python/comments/anc36g/simple_drink_kiosk_used_at_our_department_using/ For this project, I wanted a very simple debugging interface (and at the same time RPC interface), so I wanted to run a IPython kernel in the background where I can connect to remotely. IPython has this functionality already, however it is not straightforward to embed this into an existing app. To make live easier for others who stumble upon this problem, I packaged this up here: https://www.reddit.com/r/Python/comments/anc4a4/background_zmq_ipythonjupyter_kernel/ 
Thanks for all that stuff 
&gt; print(‘...{}..{}’.someword(x[0],x[1])) I hope this isnt too much of a leap forward, but...Leet trick that changed my life: Un/packing iterables. If you can guarantee that `x` has the same number of items as there are `{}`s in the string, you can do this: ``` print('...{}..{}'.format(*x)) ``` and the `(*x)` gets sort of "expanded" out, so its exactly the same as if you had put `(x[0], x[1], x[2]...)`. Serious lifesaver for working with big lists. This is why youll occasionally come across things like this, it combines everything it receives into a tuple: ``` def do_thing(*args): pass ``` --- ^((You can also double-star to unpack a dict into pairs, but thats a bit harder to "get".)^)
It's not free.
Different perspectives.
I read the article, then I read the pep 582. The blog entry author should have says that the pep is in draft status. Then he should mention that he did not respect the most important part. The __pypackage__ path is relative to the python script executed, not the working directory.
How is everyone giving wrong advice here? The print command already splits all arguments by spaces. Don't listen to anybody saying to add spaces, or change stuff. Rather explain the question a little more clear. Give us an example of firstname and lastname. Why is firstname being spit there? And what is your expected output.
Thank you! This is exactly what I was looking for
Use pytest
Thank you for sharing
I know a few people at work that use js as their desktop and server cli scripting language of choice. I have had to support it a few times myself. 
First, this should be in r/learnpython. Second, don't include a screenshot of your code, include your code as formatted text inside your post, or if it's very long include it as a link to a pastebin or github gist... by doing it with an image you force us to retype your code, which can just lead to added confusion. Third, you're not getting the output you're describing... assuming someone entered a single word for both first and last name, you'll get something like "The name of the person is ['Susan'] Smith and he is 12 years old"... the `.split()` at the end of the first name assignment ensures that the first name is always a list. You are not getting a single word. But since your code relies on user input we don't know _precisely_ what you're entering, which is why you should show us exactly what you're entering and exactly what you're getting as output, with a clear explanation of what you expected and why that expectation exists. Fourth, why assume that poor Susan is a "he"?
Hi, I'm the author of Automate the Boring Stuff with Python. All of my books are released under a Creative Commons license, so you can find them all on https://inventwithpython.com
Great, thanks!
Great suggestions, thanks.
The official tutorial at Python.org is great and that's indeed where I started. However, these books, especially the advanced or specialzed ones, provide additional learning opportunities and more in-depth coverage.
Hey guys, [FastAPI](https://github.com/tiangolo/fastapi) author here :) It's cool to see you discussing it, I just joined Reddit to chime in. ## About ASGI: ASGI means that it can handle requests asynchronously, including native support for WebSockets, etc. It's similar to what Nginx is to Apache. And that's the (up to recently) huge advantage of NodeJS and Go over other languages. That's why FastAPI is one of the fastest Python frameworks available (faster than some written in NodeJS and even Go). ## About types: Python types, like my\_var: int, give you better editor and tooling support. Autocompletion, type checks ("can't do str + int!"). In FastAPI, the same standard Python types are also used for: * data validation, with automatic errors for the client ("HTTP error 422, you sent me something that is not an `int`"). * data conversion (serialization), convert from JSON to Python data types, in and out, etc. * documentation, you get automatically OpenAPI and JSON Schema for all your endpoints. Including automatic UI. ## WSGI vs ASGI, async code, etc: You don't really have to care that much about how you write your code. You don't need to write `async def`. Actually, in most of the cases, as the DB doesn't use `async` (like in SQLAlchemy), you just write standard Python functions (just like in Flask, Django, etc). But the framework will run them in a separate thread handling the concurrency. So, you write your code in the same way but get 8X performance. ## Gevent: Gevent was a great "hack" to add some async support for previous versions of Python that didn't support async code natively. But with modern async Python code you can do the same things, in a more intuitive way, with better performance. ## About Flask: I created the most popular Docker image for Flask, and I used Flask for building APIs for a long time, with several plug-ins, techniques, etc. All that learning resulted in building FastAPI. ## About Django and Django-REST-Framework: Django-REST-Framework is probably the most popular way to build Python APIs. It was created by Tom Christie. The same Tom Christie created APIStar. He then had to abandon APIStar to create Starlette (which is a more simplistic micro-framework/toolkit for ASGI tools). FastAPI is based on Starlette, with a lot of inspiration from APIStar (Molten was also heavily inspired by APIStar), with some changes and "improvements", like using standard Python types. ## Still, want Flask? Now, if you are not convinced and still want to use Flask, the previous thing I created (that lead to FastAPI) was this Flask full-stack generator, using Marshmallow, Webargs, Flask-apispec, etc: [https://github.com/tiangolo/full-stack](https://github.com/tiangolo/full-stack) But in FastAPI you get the same, with better editor support, better performance and with about 50% or less of the code. ## Check it: If you read all this, you already spent more time than what's probably needed to see if you like [FastAPI](https://github.com/tiangolo/fastapi) or not. Go check the main page, install it and follow the micro tutorial. In 10 minutes or less, you'll know if you like it or not. Then you can discard it quickly and continue your search, or stick around ;) Sneak peek, this is how it looks: from fastapi import FastAPI app = FastAPI() @app.get("/") def read_root(): return {"Hello": "World"} @app.get("/items/{item_id}") def read_item(item_id: int, q: str = None): return {"item_id": item_id, "q": q} ## 
I've been checking prysm. Looks very nice! Too bad I didn't find it before, when I was dealing with the kind of problems prysm solves! Just a quick suggestion, you could add some images to the readme &amp; docs, so it makes it very clear what sort of output you produce (and much quicker to understand than reading a lot of words). Took me a while until I found the notebooks with the example output... Now, imagine I use your package to calculate something, publish a paper with the data, etc. Later, someone wants to replicate my results but they can't. First step, they could run my calculations again. How do they know which version of prysm did I use? They ask me... Now, how do I know which version of Prysm did I use? What if I started working on a different project and I updated Prysm for that project... Was that before or after I calculated the things for the paper. Were there any changes? I need to repeat everything with every single version of Prysm? What about Prysm dependencies? Do I need to check all possible combinations? I hope you see my point. You yourself give the chance to use different versions of Prysm (`[cpu+]`, `[cuda]`, etc.). How do I know which one I installed two years ago when working in a different lab? That is why I started the previous post with: &gt;Depends on what scientific libraries you are talking about. If it is only the size of numpy/scipy then I do agree. Scientific libraries like astropy, trackpy, etc. are maintained with a much more limited amount of resources. I used numpy/scipy as examples because I know they are libraries known to almost everybody. And, to be honest, I don't care about how little they change. I think it is the scientifically honest thing to do: give future scientists the possibility to replicate my software environment. Honestly, the time it takes to make a virtual environment is below 1 minute. Installing packages can take you what? 5 minutes? And that is for a project that most likely is going to take you months to complete. I don't see any drawbacks. 
The Python Docs.
Another great collection, thanks.
Thanks to you. By the way, I'm currently reading Python Interviews.
&gt; I'll often have 2 or 3 scripts from different projects open in my IDE at once I'm not sure what you are trying to do. But this seems very disorganized. If you are combining scripts from different projects, that is going to give you a headache. They are either different projects or they are the same. If you are actually running scripts for different projects, then your IDE should handle different environments. No problem with opening different PyCharm projects each with a different environment, the same with VSCode. You can start Jupyter notebooks from different environments *at the same time*. 
Why don't you call it `.venv`? It would be more readable. Explicit is better than implicit.
it is reasonably lightweight for the functionality it provides, compared to full fledge IDEs. I'm not sure if it eats less RAM but it is at least much snappier than my emacs + language srever combination. 
Yeah It's disorganised because I'm running code to help other people. I'd be working on my own thing, then someone (at work) would come up to me and say 'hey do you have those mutations analysed in the latest version of the genome?' and I'd open the script to process that data. I don't need to switch environments because the dependencies are the same. I just need the anaconda base packages like scipy, pandas etc. If I was using VS Code it would launch its own environment, sure. I love VS Code but it's not a scientific IDE. I haven't tried PyCharm since they added scientific support, but that looks like a good option.
Good at webdev, backend stuff mostly, looking to do some webdev in Python in the future
What is wrong with the official installer? Why people using it are "fools"? 
The problem is: various PEPs define all sorts of environment cues for where to put packages, package data, scripts that come with packages... and these cues may be interpreted differently by different package managers. One source of disagreement comes from the procedure of installing a package. For example, if your package came as a wheel, `pip` may just extract it into `site-packages`, while `setuptools` may extract it and build an egg from it, and then extract the egg into `site-packages`... There are a lot of unnecessary manipulations happen during installation, which are supposed to help with some corner cases, which are usually not your case. The most frustrating part is usually the scripts that come with the package and the package data: they often get lost or misplaced by various package management tools. In case of `pip` installing something into environment created by `conda`... well, it depends on what version of `conda` we are talking about. They are working on interop with `pip`, but it used to be not so great. In particular, what could've happen is that accidentally by pip-installing something in one environment, you'd also install it for other environments, or something like that. It would affect more packages that use `pkg_resources`, customize import loaders and stuff like that.
Think like a computer scientist
I usually call my virtual environments by also embedding the version of the interpreter in the name, so it becomes: `.venv3.5`, `.venv-O0-debug`, `.venv-mingw-win-x68-amd-compat` and so on.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
**Try this:** firstname = input("First name: ").split() lastname = input("Last name: ") bithyear = int(input("Birth year: ")) currentyear = int(input("Current year: ")) age = currentyear - birthyear print("The name of the person is {} {} and he is {} years old".format(birthyear, lastname, age)) &amp;#x200B;
Given that you are building a web API that your frontend will use, you might benefit from FastAPI: https://github.com/tiangolo/fastapi It takes between 5 to 10 minutes to discard it or like it. Disclosure: I'm the author.
Even though it sounds better than the current setup, Node and Yarn team are moving away from node_modules into a Pipenv like format (without the virtualenv). So there won’t be node_modules anymore.
`dict.values()` does not return an generator, it returns a dictionary view - more specifically, a ValuesView object. You can see [in this table on the Python docs](https://docs.python.org/3/library/collections.abc.html) that a Generator and a ValuesView are two differently implemented objects. You can even see that a ValuesView object doesn't even include a `__next__` implementation, which is a fundamental method for generators.
don't know why you're getting downvoted with everyone else here showing off their mad shortening skills. granted, shortening is not always python zen but it's a good exercise nonetheless.