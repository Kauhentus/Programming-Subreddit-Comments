oops, I meant "pop ups". Mine was running fine, then Blue Cross stuck in a JS pop up right after login asking to take a survey on how well they're doing. That's my current project. Trying to get adblock plus to load as an extension on Firefox or ChromeDriver - or getting selenium to dismiss it. I came across this in my search for an answer. Thanks for the great input.
Damn. I'm nowhere near SF. Also, I'm not really a Python *developer*, per se... I mostly use Python for system automation tasks, and other forms of convenience. Also, I'm **way** too old for most companies to even begin to consider hiring me.
All this proves is that Guido is a privileged individual. People manage what they manage through circumstance. People do not fail or succeed because they are better or worse than other people, whatever that might mean.
Ah yeah, of course. Thanks!
The point isn't to have 50% women in the industry *right now*; that's infeasible. The point is to subvert the social norms that keep more women from becoming computer engineers. One way to do that is by fostering an environment that's welcoming to people from all walks of life. Another way is what Guido and the Python core devs are trying to do: to tutor the under-represented, to provide them with the opportunities they were denied in life.
You are generalosong his statement across all women, while he was just speaking about instances where the woman is less qualified. Surely you don't think women are always more qualified than men?
&gt;By that time it's too late. also will be met with resentful male staff frequently thinking "did they get hired because they're smart, or just a woman" 
&gt;not sure why I'm getting downvoted. you're posting to a python subreddit. Reverse the languages and post it to /r/csharp and see how that goes. 
As an outsider looking in, python looks fantastic as a scripting language for small-ish (less than 10 files) projects where you need to do heavy scientific computing and piece together these smaller scripts/projects into bigger ones. until the Gilectomy is solved, while I'm sure people are doing it, it's not great for large, scalable web applications for handling large number of requests. Again, its just my thoughts looking at it as a primarily C# coder. I could be 100% wrong. However, being an Electrical Engineer (my undergrad) it seems like a MUCH better and portable language to work with than something like matlab or mathematica. 
That's not JSON
Where did he say 'give someone a position they're less suited for'?
&gt; small-ish (less than 10 files) projects We have &gt; 5000. Importantly - each file is relatively brief. Contrast this to monster modules written in C, C++, JS, PHP etc. &gt; Gilectomy Yep. It is still a single-core language by default. Multi-processing is possible though. Single-process performance is very strong, if care is taken. &gt; it's not great for large, scalable web applications for handling large number of requests. I wish people would get this into their heads - for web applications, REST APIs etc, this is not a problem because there's usually no shared state beyond the data store and the proxy will dish out requests anyway. Last year we wrote a highly scalable Python service for Cloudfoundry PaaS - look into Gunicorn or uWSGI if you don't believe me. If you want high-performance, multi-threaded code (e.g. for games) then you're going to be doing a *lot* of management. It's just not Python's domain. I do actually really like Scala too, if scalability is your goal then that may be even better.
i've heard this argument when python 2.0 was being released and 1.5 was the pure, simple, complete, never-gonna-need-more version. for some people, this might even be true. personally, i like the new syntax, as it reduces cognitive load of having to mentally translate boilerplate to something i can reason about.
What if you're not a woman, does that matter?
Thank you for explaining that I will try that tomorrow had to leave work. 
Did you read the part where I said close? Do you know the meaning of the word close? I feel like I already said I'm not talking about cases where one candidate is inferior to the other. I mean we can keep going in circles around this. I'm not saying you should give the lead developer position to a woman who can't get hello world to run. What is the alternative? Just always flipping a coin and hoping that the woman gwts heads at least 50% of the time? I suppose we could get into a nice debate about quotas and all the other great points on affirmative action. I'm honestly not interested in having that discussion. My point is that given two similar candidates, I think looking at other factors is useful. You don't, apparently, which is fine. In my experience there is more to being a good part of a team than what can be objectively measured.
Relevant username
I don't think I'm inappropriately generalizing at all. *Any* time there's discussion about ways to encourage women to get into tech, inevitably someone jumps straight to "oh, so you're lowering your standards and hiring less-qualified people", or otherwise urging extreme caution to avoid hiring someone unqualified. The only way that makes sense is if the person believes women are less-qualified by default. The fact that this was brought up after someone literally suggested just preferring a woman when the decision was otherwise a coin-flip just reinforces this, since in the hypothetical presented *it was already assumed there was no qualification difference on which to make a choice*.
Yeah, so why not use other factors for solving the tie? I mean, I think you could make a strong argument that, all things being absolutely equal, women will always be the better choice. There have been numerous cases of men acting inappropriately, engaging in harassment. I don't think a single prominent female coder has brutally murdered their significant other. Given the recent controversy at TOR, seems like hiring a woman instead of a man would be a no brainer.
Interesting wrapper you have, there. If, by any chance, you are new to Reddit, you need to reply directly to the comment that messaged you, not the whole thread, or else your comments won't nest.
No.
Cool. Maybe I'll make an Anki deck out of it.
Due to Reddit stopping spammers you basically need to use the API, I tried to just scrape the subscriber count of a subreddit periodically with requests and BS. After a few requests it stopped working, it turns out Reddit was returning something to say no bots or something, even changing the user agent Firefox/Chrome did not work. If you want to try out beautifulsoup try scraping Twitter, although it also has an API that you can easily use it does not block scraping so can be used as a test bench for BS.
PEP-8 and the general adherence to it, is the best thing about Python. Hands down. C is like the wild-west. I always think I know C pretty well till I encounter a new library that blows my mind with some new special snowflake style and abstractions. It's crazy.
If you're developing for Android / iOS, Check this out. It's not finished yet, but it seems like the best hope for BLE on Kivy: https://github.com/kivy/plyer/pull/185 I did get BLE working on Raspberry Pi, so if you're using that, let me know and I can point you in the right direction.
Mostly inertia, I think. I've never heard any concrete examples of how py2 is better than py3, only that there are (were?) some modules and legacy code that is not yet compliant with py3. 
[ˈxidoʊ] or [ˈɣidoʊ] for the IPA-literate. The first sound is either the Ch in "Chutzpah" or something like a French "r", depending on dialect. 
You know if we're going to argue semantics, similar also does not mean the same either. In my mind close actually denotes less distance than similar. When the day comes when white males are a vanishing minority of all developers I'll be absolutely in support of choosing a white male to even things out. Until then I'm willing to recognize that there are external factors like race and gender that are still worth considering along with objective criteria.
But why, what is your obsession with having an equal amount of women and men in every single field? Is it not enough for you that they have equal rights and opportunities to enter that field if they want? 
I've just heard too many stories about women facing obstacles and harassment in the tech industry. As I've said I'm a white male so I can't speak from personal experience. If your experience has been different I'd definitely be interested to hear it. But I'm not convinced it's actually equal yet. Plus I think diverse groups have value in themselves. I'm not expecting 50/50. I'm just advocating making it a little easier for women to advance in the field.
Shame most of them seem to be free for low usage, 5 days, 1 day, 24 hour retention etc deals. Under monitoring I expected to see things like riemann, nagios etc. 
No. It just manages running your app over AWS lambda, so instead of managing the servers your app runs on (say flask or whatever, behind nginx) you define a function that runs when something happens (a request, or an event, etc). You would still presumably have a local environment where you develop and test things.
Maybe transpile is the correct term? https://www.stevefenton.co.uk/2012/11/compiling-vs-transpiling/
TIL: There are a bunch of sexist d-bag Python redditors.
I think we all deal with a lot of "bullcrap" in the office environment. Now I have to attribute that to my cynical view on the selfishness and power-needs that the vast majority of people in the corporate environment seem to have. If I was a minority I could say it's because I was a minority and continue to pretend that human beings are nicer than they really are. I want to throw out another theory here as to what is going on to explain the diversity problem. There aren't a lot woman in tech because not many woman are interested in tech. We can blame culture or we can blame biology but there is something going on here. Men and woman are really different and these differences may be a major factor for lack of diversity in certain areas. In fact, a woman-feminist made this comment to me: "men are into things and their jobs while woman are into people and relationships". Obviously we can always find exceptions to any rule. But what percentage of the viewers of a show like the bachelor\bachelorette\downton-abbey do you think are men? What percentage of people watching a show on how to put together a car engine are woman? Hacking around with machines, whether it's building a computer server or writing software tends heavily towards what that feminist was saying. Men like their things. This can also be very solitary and isolating work at times. The whole autism\apserger spectrum thing also implies more affinity for things rather than getting people. Now look at professional career choices like HR (mostly woman), or teaching, nursing, and counseling. Guido is obviously welcoming female developers but he basically has to beg. It clear he wouldn't have rejected any that would have come forward before. 
Fun fact-- if you want the html quite a bit of it is available in the `json-html` extension, e.g., api.reddit.com/apipath.json-html . Doesn't contain the subscriber count though. Also you aren't supposed to spoof your useragents, and you probably got that message by exceeding the ratelimit (30 requests per second non oauth). E: also why did you scrape instead of requesting /r/subreddit/about.json ? Subscriber numbers are there.
One issue that I remember running across is that selenium has brand new sessions and no cookies. So I wouldn't experience the same pop ups as I did on my non-selenium browser (Chrome). Like I said play around with it and see what you can do.
thank you. :-)
There are a number of options, but Message Queues would be worth investigating.
&gt; Maybe transpile is the correct term? I imagine it is. But that does not mean that "compile" is not correct. As the article you linked says it its second paragraph: &gt; Firstly, transpiling is a specific kind of compiling.
Some places have hundreds of thousands of lines of Python 2 code. It's not easy or cheap to make sure all that works under Python 3, and at least initially Python 3 didn't offer enough of an upgrade to require the effort to ensure that code would run properly under Python 3. Furthermore, places making heavy use of Python might not be in a position to quickly upgrade every workstation to Python 3 anyway, especially for relatively little gain (at least at first).
Ah you know what, great idea! I was thinking about a VPC with EC2's able to communicate in a private subnet, but this is much better. Hugely scalable and simple. Thanks!
More like 8...
Yes - this is correct. I'm trying to get it popular enough to build a business on top of, but haven't determined how just yet. Nevertheless, whlabratz feedback is very helpful. This type of support could become more popular with Google HO, YouTube LiveStream, etc. I'm actually going to work an issue over Google HO with one of Flask-Ask's users, a man I met online named Dmitri, in the next few days. I've built other businesses over the years, and I've learned you have to be as inclusive and available as possible to your user base. When they want to talk, you have to be there. That expectation isn't there with Open Source, but, _why not?_ I _am_ actually easy to get a hold of, and I'm not terribly busy; I have too much free time at the moment in fact. Even though lots of people have starred my project, I doubt that many are using it yet. I'd bet 5% or less. I haven't had any bites (probably for the reason you mention - just seems strange to people), but if I can tune the message to get some - that would be great. I don't anticipate the demand to be overwhelming in any event. Of course, certain businesses do well with exclusivity or facade of it (LVMH, producthunt, FB at first, etc).
This is good feedback. I originally created the proposal for PyLadies Remote, then updated it for my local meetup group. It worked both times, so I figured I'd try to put it on blast. Basically, taking one from the playbooks of Amazon's Alexa evangelists who are very effective at spreading the word. They do it by meeting with people and demoing the tech. Maybe I should state explicitly why I am offering?
I love this video. Just the slides, not so sure.
You have actually no idea about AI/ML and how something like Siri works, do you?
That was tough to read. Whatever happened to prose? (edit: I see, that were just slides of a presentation) Meanwhile a lot of what he says is basically just what proponents of Haskell and many other functional languages have been arguing since the ancient days: Write as many small, pure functions as possible, treat IO-dependent code as filthy and keep it separate and as minimal as possible. It's not as much a question of "architecture" as it is one of programming paradigm. Some languages make it easy (or force you) to code in this style, others make it more difficult and non-obvious. Python is an imperative language with *some* functional programming capabilities (even though [Guido hates them](http://www.artima.com/weblogs/viewpost.jsp?thread=98196)). If you're wondering why I say "some" try composing two functions. In Python it is [much simpler to write a loop](https://stackoverflow.com/questions/181543/what-is-the-problem-with-reduce) than to use the functional approach, because functional programming in an imperative language typically involves a lot of line noise. If you try to follow the "pure" paradigm as suggested in OP's post, you either end up writing completely indecipherable one-liners or you have to define multiple generators in a row to do what could be a simple for loop. Either way the result becomes harder to read and to understand. Which is sad but a natural limitation of the language.
Intreseting list. I've never used arrow.get without a format string but I'll keep these in mind!
Interesting list. I've never used arrow.get without a format string but I'll keep these in mind!
I think you missed the joke, lookup the halting problem
Some things however are not vectorisable though, and in these cases numba can be excellent
And unfortunately some people *like* Python 2.7 being stagnant. Python has a deprecation policy like many other projects, which means that over the course of some point releases, a feature you might use could get completely removed (if you constantly update, you get deprecation warnings first, but if you skip a few versions, you might be blindsided). This will never happen with 2.7 as everyone has made clear that there'll be no 2.8. So businesses that never upgraded until absolutely necessary love Python 2.7 because it'll never break. --- Obviously with an adequate test suite, there infrequent breakages in the stdlib are easily caught, so that fear of updates is completely unwarranted.
I wish Guido didn't work at Dropbox, who still use 2.7. I'm relatively sure his workplace is the only reason why he's blessed a comment-based fallback syntax for type checks in legacy Python. Ands those type checks really could be the killer feature: the added safety more than counter-balances the risk of upgrading. (With the added bonus that upgrading is facilitated by type checks)
Thats a good one, thanks stranger ;)
Thanks. But in your github page examples, "DB.Cars" appears many times, such as this line: car = DB.insert(DB.cars, brand='Audi', year=2009, color='green') It seems that after the statement "DB.connect()", all the tables are available as fields of "DB". is this legal: &amp;nbsp;&amp;nbsp;&amp;nbsp; cars_tbl = DB.connect(['cars']) then use the variable "cars_tbl" instead of "DB.cars"? Thanks. 
But... why? Why would you want a new web framework for AWS Lambda when we have a tool that allows to run any existing WSGI app (including Django, Flask etc) on AWS Lambda? https://github.com/Miserlou/Zappa
Meh. I'm not saying the ideas presented here are bad, but people who try to follow these guidelines tend to come up with a cryptic unmaintainable behemoth where a simple script would work. So, use with caution. And only for large projects.
I was hoping someone made a badass version of the paperclip. Paperclip was a cool guy. 
I learnt something :)
I think I knew some of those words in there. What does this mean: "homomorphism to monad programming" ?
It might be mostly a starting point. AWS doesn't control Zappa. Reading the FAQ at the bottom, it looks like this one's going to be more focused on getting it set up quickly. Personally? I use Zappa and probably will continue to for now, but I'll keep a close eye on this project.
The very first example uses stat_smooth, which has non-existant/broken documentation: http://ggplot.yhathq.com/docs/stat_smooth.html Seems pretty sloppy.
Zappa looked real good!
&gt; There are less women in coal mining or garbage collection as well. If you want more girls to take comp sci, the place to fight for that is in schools and popular culture. You almost made me fake a few accounts to get more upvotes.
Yeah, i just forgot to include pip in the description. x86 was the default directory. I will try moving it to mimic v.2.7
What's the problem? 
Of course it's going to be simpler to write a for loop if you write reduce code like that. `total = reduce(lambda a, b: (0, a[1] + b[1]), items)[1]` is a soul-sapping monstrosity and corresponds to a for loop like this: a = (0, 0) for b in items: a = (0, a[1] + b[1]) total = a[1] Try understanding that at a glance. A better way to write it would be: total = reduce(lambda total, item: total + item[1], items, 0) Of course, any good functional programmer would use `sum` with a comprehension, both of which are functional tools. Idiomatic python is occasionally functional. No need to squeeze a `reduce` in where it doesn't belong. Besides, whether a function is pure has more to do with its interface than its contents. You can put a for loop inside a function and still have that function be perfectly pure. You've conflated python's sometimes-clunky functional syntax with the functional architecture. They are both from the functional programming community, but they are not the same thing. You can use all of python's nice, readable, imperative tools and still build an architecture that pushes IO down to the bottom of the code. And there's no reason you have to go all the way. Applying this architecture to only part of your program still has plenty of value. Use pure code where it's easy and impure code where it isn't. The python community already encourages this quite a bit, I've found.
That was really quite easy to read and as someone that has an on again off again relationship with python &amp; programming in general, just reading this article made me remember parts of programs where things got complex, rearranging in my head and think I could apply this right away and begin work again. That subtle cool electric hum in the gut. aka inspiration... 
Why use pure functions only for large projects? I read this and it was a nice reminder of where perhaps some code "that became haunted" and I stopped paying attention to, could now have some love and care. That's a 10-20 line script that makes some windows GUI stuff move around and then makes some requests. What should I be on the look out for creating a 'cryptic unmaintainable behemoth'? Does confidence in your generalization still remain? 
oh boy - welcome to the women's world!
toolz ([https://pypi.python.org/pypi/toolz](https://pypi.python.org/pypi/toolz)) is a nice library for doing functional programming in Python. I'm not disagreeing btw - Python is not as good at functional programming as a language designed for that.
This is either brilliant satire or spectacularly missing the point, but I just can't tell any more. The internets are so confusing.
RemindMe! 3 years Has /u/gandolfx's machine failed yet?
The measure is if it becomes easier to move around in ones head, suddenly: pain vanishes. Butterfly's enter. Not "applying idealism" - because that's just fitting pegs in square holes most of the time. Of course, this is just some idealism. ;-)
&gt; 1990 - A committee formed by Simon Peyton-Jones, Paul Hudak, Philip Wadler, Ashton Kutcher, and People for the Ethical Treatment of Animals creates Haskell, a pure, non-strict, functional language. Haskell gets some resistance due to the complexity of using monads to control side effects. Wadler tries to appease critics by explaining that "a monad is a monoid in the category of endofunctors, what's the problem?" [A Brief, Incomplete, and Mostly Wrong History of Programming Languages](http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html?m=1) 
Your arguments are not new arguments. If you're interested I highly recommend looking up blogs or discussions by women in the industry who talk about their experiences. I found it very interesting and eye opening.
Couple of links. Ugly cause I'm on a train. https://youtu.be/K5GguxPi3EA https://youtu.be/yTkzNHF6rMs https://youtu.be/WpkDN78P884
Pure functions are perfectly OK. I'm more concerned about stuff such as dependency injection and the whole "decouple everything" mentality. While the goal is laudable, it tends to make the code difficult to read.
Why is evil-corp-usa.com is a different font? Literally unwatchable.
&gt; I can't see how it will be cheaper or cleaner than flask+zappa or django+zappa. I don't think it will be cleaner. But *cheaper* is easy enough. They set the price for one &amp; for the other. They *then* make one cheaper. Amazon has done a great job at being the infrastructure for many other popular solutions (like PythonAnywhere or Heroku). So they are very capable of making one price cheaper than the next. Either by subsidizing one price, or inflating the next. &gt; But I can see a lot of downsides: I agree.
Yeah, but you can code Python on a linux OS, and not ASP on Micro$oft, so you won't be locked to corporate Windows. /s
You need to eject Media before disconnecting it, mate
:) I got too excited and my drive fell off the table
Yeah, they should have just changed the local hosts file and edited the remote machine's hostname. No need to photoshop OR setup a dedicated internal network using the wanted DNS names.
You misspelled my name D:
yes please explain this word I don't know by using yet more words i don't know 
What's sarcasm?
Please forgive my inferior thumbs.
That's what *she* said.
Because its not literally evil coro, that's what the main character sees because he associates e-Corp with evil-Corp in his head. Many of the cases where you see e-Corp / evil Corp it's a post-effect. Look at some of the signs, letterhead, ... the show often pays close attention to details like that.
http://slides.com/julientournay/a-monad-is-just-a-monoid-in-the-category-of-endofunctors-what-s-the-problem/fullscreen
Thanks for the reminder that season 2 is coming out!
Women used to be highly represented among programmers. Now they aren't. Did something in the essential nature of women change suddenly?
Thanks, I think you just really cleared some things up in my head. \^\^ There are people who will disagree with your definition of functional programming and insist that every pure function must itself be defined using only functional style expressions. Only then is it possible for the compiler to do magical things like Haskell's lazy evaluation or deriving the entire static signature by looking at the missing arguments in curried functions. It also makes it possible to *prove* correctness as opposed to "just" testing. Yet since Python's compiler does none of these things it's just as well to rely on those aspects of functional programming that do work and otherwise rely on paradigms that Python is good at. PS: Here's what I'm actually using (it should be a bit more efficient since the generator expression runs only once): def crop_block(lines, columns, string): """Remove excess lines and characters per line.""" lines = string.split("\n")[0:lines] lines = (line[0:columns] for line in lines) return "\n".join(lines)
Well done you
TIL that I will be 27 when Python 2.7 comes to its end.
I recommend against this.
Opening an SSH connection from superuser? Have fun getting hijacked when you trip their IDS.
IDS? Security? At a company this size? lol
What media player is that?
Seriously now if they are dumb enough to allow root ssh they probably don't have an IDS :P
w00t, thanks for that
Why? Linux is a fine OS, and awesome kernel. 
No. I think he wrote a visual basic script to bypass the firewall. 
Watch Season 1. It's great. Gets the whole hacking thing kind of right. That's hard to do on TV dramas. http://www.usanetwork.com/mrrobot/episodes 
You're creating a new data frame for each loop iteration. Store the values in temporary data types first (I usually use tuples), and then create your data frame after your for loop.
I use mako to generate config files and other structured text data all the time. Mako is simple powerful fast and pythonic and XML is nowhere sight.
And this is one of the coolest ways to get more data to play with: http://ssd.jpl.nasa.gov/?horizons It outputs stuff in an easy to parse format through the telnet interface. I've used it for a number of calculations and estimations at work, and its accurate enough to be used for most purposes :)
&gt; MQTT looks very useable for something like this as well, but Redis seems to have a bit more flexibility... Yeah, that's my general impression. MQTT's main advantage is its lightweight nature. Redis is lightweight enough on the client side, so it's not necessarily a big advantage. &gt; I guess my main concern is trying to package this with PyInstaller and Redis somehow for a customer wanting to run this on their computer. Yeah, that's going to be tough, especially if you want it to work on Windows. In this case, rolling your own solution with PyZMQ wouldn't be so bad: simply have a server listen for data and immediately push it to worker processes to do the computing (see the examples [here](http://zguide.zeromq.org/page:all#header-15)).
Part 2 is now available at http://www.machinalis.com/blog/a-day-with-mypy-part-2/
Since you're using Jupyter notebook, take a look at [ipyparallel](https://ipyparallel.readthedocs.io/en/latest/). I used it a while back and it's pretty trivial to use on one machine.
I doubt there would be any outcry about your last sentence. That happens everyday. It's part of why affirmative action programs have occured. Random also isn't a criteria, nor a very good way to split ties. In my experience ties are most commonly split based on personality and looks. Which candidate seems likely to be the best fit for the organisation. However most often, ties (exact equivalent suitability) rarely happen and other criteria have already been used to select the right candidate before then. As a heterosexual, married, white male no affirmative action process is ever going to threaten my privilege, because I'm in the most privileged group that exists and we gain privileges subconsciously. That's what makes me laugh about outcry from people who claim affirmative selection is discriminatory. The outcry is usually from my demographic. White males feeling threatened that they don't have an equal chance. For a fleeting second, they feel the way other groups feel everyday and don't realise the hypocrisy of their complaint. Yet, we never have to worry. Our position will never change and we will always have advantages other groups will never benefit from.
Pycharm is just an IDE and has nothing to do with installing opencv you install opencv to whatever python distribution you have whether that's your system python installation, Anaconda, enthought, or the python you built form source, etc ... then you tell pycharm which python distribution to associate with each of your pycharm projects and thats it. To install opencv: google it; there's plenty of guides out there. If you have Anaconda you can install using conda from the user branch 'menpo' This is better suited to /r/learnpython 
An imperative program is often built around the order of interactions with external systems. You get something like this: main: do_thing_1 do_thing_2 do_thing_1: x = something y = something_else z = calculation_using x y print z do_thing_2: a = something b = something_else c = other_calculation_using a b print c That is, all of the interesting calculations are in `do_thing_1` and `do_thing_2`, but those functions are *also* responsible for printing the results. Each of them therefore has an interaction with the outside world and so, by extension, does `main`. You therefore can't use those calculations in isolation if the same result is interesting for some other reason, nor can you isolate and test the calculations in the functions individually without either accepting the side effect of printing it or doing something to replace the real `print` operations with some alternative for test purposes. With a more declarative, functional style, you tend to build the program around the data, and try to keep the side effects as localised as possible. You turn the above into something more like this: main: do_thing_1 do_thing_2 do_thing_1: z = get_result_1 print z do_thing_2: c = get_result_2 print c get_result_1: x = something y = something_else return calculation_using x y get_result_2: a = something b = something_else return other_calculation_using a b and then like this: main: z = get_result_1 c = get_result_2 print_results z c get_result_1: x = something y = something_else return calculation_using x y get_result_2: a = something b = something_else return other_calculation_using a b print_results z c: print z print c Now the calculations live in their own self-contained, pure functions. You can freely reuse those, including for testing purposes, with no side effects. You can also, if you wish, do all of that work first and do things like checking for errors *before* you commit to doing anything with side effects like starting to print things. In this scenario, only `print_results` and by extension `main` actually have any side effects at all, so you can clearly see both the number crunching in isolation and which parts of the program do things that interact with the outside world. Both of those things can be useful in terms of testing, code reviews, separation of concerns and code reuse, and so on.
Ha! that worked! here is the solution: ids = [] partner_keys = [] created_dates = [] for ClickEvent in ResponseResults: ids.append(str(ClickEvent['ID'])) partner_keys.append(ClickEvent['PartnerKey']) created_dates.append(ClickEvent['CreatedDate']) df = pd.DataFrame({'ID': ids, 'PartnerKey': partner_keys, 'ClickEvent' : created_dates}) print df
When I saw your comment I was like, "I distinctly remember her running umount during the show..." 
fsck it; we'll do it live.
v1.8.2 brings initial proof-of-concept multi-threading support in the form of the _thread module, which closely matches the semantics of the corresponding CPython module. There is support for GIL and non-GIL builds; without the GIL enabled one must protect concurrent access to mutable Python state at the Python level using Lock objects. Threading with the GIL is enabled in the cc3200 port on the WiPy. Threading without the GIL is enabled on the unix port. The ESP8266 port has support for frozen bytecode (for scripts in the modules/ subdirectory), as well as optimisations for reduced memory usage and decreased memory fragmentation. The ESP8266 RTC also resumes correctly after a deepsleep. An initial "btree" module has been implemented for embedded database support (unix port only), and the documentation has been further improved, with pre-built PDF versions of the docs now available. More detailed changelog available at the link in the title. 
honestly, considering the fact that it's only the script they're running that looks shopped, i wouldn't put it past that show of it being an incredibly subtle hint at something 
Thanks for reminding me how stupid a name "Evil Corp" is.
only the gui is in visual basic.. the backend is in python.
I believe pycharm's debugger now has something hacked together to handle the matplotlib event loop explicitly. It was still quirky last time I looked at it.
I'm a pentester and we often tunnel traffic through AWS using SSH... that being said, I can never remember the name/ip. Part of the advantage is that the hostname/IP changes when you reboot the box. 
Oh no doubt. Same story over here. What *should* happen and what *really* happens "in the real world" are two different things. When you're running around like you're being shot at, it is easy to forgo some of the little nuances. 
Decoupling I/O from computation helps all code, even little scripts. Besides, little scripts often grow to be monsters, like that one I'm supposed to be rewriting now that's over 3000 lines of code and will be 250 when I'm done with it.
I completely disagree. I use `for ... else` a lot. When you get used to it, it really is every powerful. Even the syntax becomes obvious after a while if you read the logic in your head. **for** some in thing: if f(some) **break**, **else** print('f not found')
As long as you're making code shorter I'm with you. My experience with dependency injection and similar ideas was more tons of boiler code, tiny files with logic scattered everywhere, etc. To be fair it wasn't python.
Firewalls scan digitally, not visually. Good catch.
Oh didn't realize this wasn't python-only. That's interesting. But on the point of configuration files, command-line arguments are really basically equivalent. You can always create a "configuration file" by just putting the command itself into a text file (formatted nicely so it's readable). That way you can still easily write scripts as well. In any case, thanks for the reponse! I'm going to be packaging things again soon so I'll try this out.
I specially looked at the names when I watched the episode but damn I missed that they were python. I guess the .py extension is by far too common to my sight for that click automatically when I see a list of filenames.
This is great! Just tried it out, makes working in a notebook massively easier. Thanks! 
No reason for python 3? You put your head in the sand didn't ya.
Not quite sure what Twisted does for you, but it sounds similar to Django Channels, which is python 3. 
I get it, just throwing out options.
Here is an example: https://www.reddit.com/r/Python/comments/4sc4s1/advanced_python_interview_questions/d58i1y1
Serious question: is Red Hat providing paid support for Python 2.7 well beyond 2020 meaningful to your organization? I've often wondered how many large companies care about that. Some core devs have been saying that people looking for support for older software versions need to pay for that support from their vendors, instead of expecting volunteers to provide that, and I'm just wondering whether that is a realistic proposition.
This idea comes up often, but the main issue is that there are very few, if any, of the Python core dev team who will participate in that effort which leads to the question, "Who will maintain that fork?" An enormous amount of energy goes into Python and it's hard to see how that effort is going to be matched by a large number of people we don't yet know about. Bear in mind, many features of Python 3 have already been back-ported into pip-installable packages for Python 2.7 right now. So perhaps a better question might be, "Will new features in Python 3.x continue to be back-ported to Python 2.x after 2020". For this question, "yes" is a much more plausible answer than forking.
why do you have `None` as the first value of `rank_names` and `card_values`
the last season of person of interest is cringy as hell, the technical part is horribly done.
http://cs30.serverfarm.evil-corp-usa.com/
The episode is named [eps2.0_unm4sk-pt1.tc](http://mrrobot.wikia.com/wiki/Eps2.0_unm4sk-pt1.tc). The second episode in the series (after the two part episode 0) is called [eps2.1_k3rnel-pan1c.ksd](http://mrrobot.wikia.com/wiki/Eps2.1_k3rnel-pan1c.ksd) so by their naming, Episode 0 is not incorrect. 
More interesting is the difference between http://www.e-corp-usa.com and http://www.evil-corp-usa.com
That server (cs30) was compromised in season 1, it likely has different sshd config to the rest of the network 
The first Python file, "fuxsocy.py", is in a different font, and it's bothering me a lot. 
+/u/ImgurLinkingBot https://gyazo.com/58e13dcf56e21d8b84557bb278f33b1c
http://i.imgur.com/Jko7MLx.png
It props up all the things you didnt like, all the social anxiety and not fitting in, and look how I can handle morphine and still function well, not like those other addicts etc etc and then shatters all of those things to the ground. It really is awesome. They just have to build those things up before they can break all of them. 
Good deal! Thanks for posting the solution. Let the magic of pandas corrupt your soul forever. Edit: prefix your code lines with 4 spaces so the formatting looks better
Well, benefit is probably a better term. For example, say you kick off a port scan and they block your IP. You can restart the box and get a fresh IP. That's a nice feature, which makes running noisy scans like that easier. The other main one is being able to use `screen` to see what my colleagues are typing. Also, tunneling to an external server allows me to bypass any restrictions put in place on the network I am testing from (like some random government building), since traffic is encrypted going over port 443 to an Amazon server, so it wouldn't be blocked. Finally, we can have our implants/payloads/malware reach out to the AWS server the same way over HTTPS, and it is pretty hard to detect. 
Thanks for the info
Your code if foo.distance &gt; threshold: bar.speed = full_speed else: bar.speed = half_speed Given the conditions you mentioned, I probably would have done something like this if 0 and foo.distance &gt; threshold: bar.speed = full_speed else: bar.speed = half_speed 
for something that simple you could just do bar.speed = full_speed if foo.distance &gt; threshold else half_speed doesn't solve your empty if/else statements, but it's one line if indenting is too hard or whatever.
&gt; the colon serves absolutely no purpose. It does serve a purpose. It separates the condition from the body. It allows you to write things like if cond: foo = bar A newline is not required. If the colon was used some of the time and not used other times, then the syntax would not be regular, so it's required every time. &gt; Apparently the half speed line is to too much indented. WHAT? Why is it so surprising that when indentation is significant, that the indentation has to be correct? &gt; But every time I want to test that part, I have to edit 4 lines of code. That's ridiculous. You're doing it wrong. If you want to comment out one of the branches of the if-statement, the way to do that is like this: if foo.distance &gt; threshold: pass # bar.speed = full_speed else: bar.speed = half_speed It does not require commenting out anything else. 
If you have an empty if statement, you can use the "pass" statement. It is allowed: it is just that the syntax is not familiar to you. There are some that find a null statement like "pass" more meaningful than an empty line. But, I am puzzled about your mention of tests. It seems like most of your frustration is because you are editing your code in order to test it. That does not make much sense to me, so I am wondering if I don't understand what you are doing.
Your if statement with commented line if foo.distance &gt; threshold: pass #bar.speed = full_speed else: bar.speed = half_speed empty function def f(): pass with lambda (lambda:None) try to give a little more effort to really learn the tool you are working with.
Dude dropped it from a table height, I'd wager if it were anything but solid state that'd have a fair chance of causing some damage. Those heads sit impossibly close to the spinning rust. They're weirdly sharp too! Wouldn't take a stretch of the imagination to see it causing a nice gouge in a plate or two.
Good to see the progress. I don't have a use for MicroPython at the moment but do like to learn about such alternative implementations. 
I believe it's in a different font because it's an executable, though I'm not completely sure. 
Man I'm retarded. I completely disregarded the 'dropped' part...
Ah :D No problemo! I totally get where you're coming from then, and you're right if the HDD was in a state of writing it's likely there'd be some minor integrity issues (you'd lose the file it was writing almost surely). It'd still be usable though. I mean, think of power-cuts, they rarely cause major data integrity issues unless you happened to be doing some major RAID work or similar. A single disk tends to be quite fault-tolerant with today's filesystems.
Why do you say the technical parts are badly done?
A really good, *realistic* fictional television show about hacking? I'm not sure there has ever been one. Even Mr. Robot ended up only concerning itself with technology in a peripheral manner after the first episode. I honestly think the last television series I watched with realistic hacking was [Whiz Kids](http://www.imdb.com/title/tt0085110/?ref_=fn_al_tt_1) in 1983. :-(
I don't think so. You'd be better off putting all the code in (foo) with a timer or counter to tell you which part to execute. 
Awesome! Thank you for the explanation and understanding. You're a pretty cool guy/gal. Cheers m8
It could be that you are defi ing dGdt *after* you use it in RK4(). Try changing the order of the functions.
That was my thought too. Did it here, got the same error: import time def max(a,b): return a if a &gt; b else b # Exogenous flows would be communicated from LabVIEW, left 0 for now FG_VG = 0 # mg/dL / min FI_VI = 0 # uU/mL / min P1_BASEVALUE = -1.31e-2 P2_BASEVALUE = -1.35e-2 P3_BASEVALUE = 2.90e-6 # Multipliers, varied using spline interpolation in application. Left constant here. P1_MULT = 1 P2_MULT = 1 P3_MULT = 1 P1 = P1_MULT * P1_BASEVALUE P2 = P2_MULT * P2_BASEVALUE P3 = P3_MULT * P3_BASEVALUE VHM_GB = 100 # mg/dL VHM_IB = 10 # uU/mL VHM_ALPHA = 3.11 # 1/min VHM_H = 136 # mg/dL VHM_N = .13 # 1/min VHM_BETA = 1 # min VHM_GAMMA = 5.36e-3 # ( uU/mL dL/mg ) / min^2 def dGdt(G,X,I1,I2): return (P1-X)*G-P1*VHM_GB+FG_VG def dXdt(G,X,I1,I2): return P2*X+P3*(I1-VHM_IB) def dI1dt(G,X,I1,I2): return VHM_ALPHA*max(0,I2)-VHM_N*(I1-VHM_IB)+FI_VI def dI2dt(G,X,I1,I2): return VHM_BETA*VHM_GAMMA*(G-VHM_H)-VHM_N*I2 ''' Fourth order Runge-Kutta method in 4 dimensions. Loops are unrolled from the RKN method for faster execution ''' def RK4(_G, _X, _I1, _I2, dGdt, dXdt, dI1dt, dI2dt, hs): _G_1 = dGdt(_G, _X, _I1, _I2)*hs _X_1 = dXdt(_G, _X, _I1, _I2)*hs _I1_1 = dI1dt(_G, _X, _I1, _I2)*hs _I2_1 = dI2dt(_G, _X, _I1, _I2)*hs _G_k = _G + _G_1*0.5 _X_k = _X + _X_1*0.5 _I1_k = _I1 + _I1_1*0.5 _I2_k = _I2 + _I2_1*0.5 _G_2 = dGdt(_G_k, _X_k, _I1_k, _I2_k)*hs _X_2 = dXdt(_G_k, _X_k, _I1_k, _I2_k)*hs _I1_2 = dI1dt(_G_k, _X_k, _I1_k, _I2_k)*hs _I2_2 = dI2dt(_G_k, _X_k, _I1_k, _I2_k)*hs _G_k = _G + _G_2*0.5 _X_k = _X + _X_2*0.5 _I1_k = _I1 + _I1_2*0.5 _I2_k = _I2 + _I2_2*0.5 _G_3 = dGdt(_G_k, _X_k, _I1_k, _I2_k)*hs _X_3 = dXdt(_G_k, _X_k, _I1_k, _I2_k)*hs _I1_3 = dI1dt(_G_k, _X_k, _I1_k, _I2_k)*hs _I2_3 = dI2dt(_G_k, _X_k, _I1_k, _I2_k)*hs _G_k = _G + _G_3 _X_k = _X + _X_3 _I1_k = _I1 + _I1_3 _I2_k = _I2 + _I2_3 _G_4 = dGdt(_G_k, _X_k, _I1_k, _I2_k)*hs _X_4 = dXdt(_G_k, _X_k, _I1_k, _I2_k)*hs _I1_4 = dI1dt(_G_k, _X_k, _I1_k, _I2_k)*hs _I2_4 = dI2dt(_G_k, _X_k, _I1_k, _I2_k)*hs _G = _G + (_G_1 + 2.0*(_G_2 + _G_3) + _G_4)/6.0 _X = _X + (_X_1 + 2.0*(_X_2 + _X_3) + _X_4)/6.0 _I1 = _I1 + (_I1_1 + 2.0*(_I1_2 + _I1_3) + _I1_4)/6.0 _I2 = _I2 + (_I2_1 + 2.0*(_I2_2 + _I2_3) + _I2_4)/6.0 return _G, _X, _I1, _I2 def runVHM(): f = [dGdt, dXdt, dI1dt, dI2dt] # Function pointers x = [200, .01, 10, 0] # Initial conditions h = 1 # Time step of 1 minute __args = x+f+[h] N = 7200 # number of steps, translates to minutes of simulation with time step of 1. t0 = time.clock() for i in range(N): __args[:4] = RK4(*__args) ''' &lt;- Remove/add a hash before the block comment to toggle this block # Print solutions array as it comes, reduces performance by up to 100x print __args[:4] #''' t1 = time.clock() print 'Solution at end time:' gt,xt,i1t,i2t = __args[:4] print gt,xt,i1t,i2t extime = 'Execution time: ' + str(1000*(t1-t0)/N) + 'ms' runVHM()
Celery - production level quality, relatively easy to use (small learning curve, but once you understand it is super easy and lightweight)
Can you post the full error.
And the scenes without Elliot are necessary for the plot because Elliot himself is an unreliable witness.
Thanks! I learned something new :)
because they start throwing terms around that make no sense on the context and then magical things happen, and they start treating the "machine" as if it was some kind of alien running from the government, i stopped watching after the episode where the machine was "weak" because it was on a briefcase of ramdisks powered by batteries and the battery was running out, give me a fucking break, and of course the machine tried to escape from the briefcase by using the electrical grid... that was the last episode i watched.
Yep that's what it should do! The problem is that it seems to work fine from the cli or when put into an open interpreter, but when called dynamically from the python27.dll, it gives this error.
Well, the last (two-part) episode IS named Python.
This is a great idea
That is possible, but as far as I know it's only possible from within the program. The program could have a second function to replace the first one with, or it could load one from a file. However you come up with the new function it should just be a matter of saying `global foo; foo=bar`, like this: https://repl.it/Cb3j/0 for simple programs anyway.
You know... There's more to a movie than plot, right? The same plot can be re-used for a different thematic purpose. Or you could retell the same story with a different aesthetic. Or you could use the same plot on different characters. Yes, plot-wise, it is "Fight Club with computers." The "twist" (if you can call it that) is the same. There are even a lot of thematic similarities. Elliot and Fight Club's protag are dumb kids who think they're hot shit. In both, they take down "the man" because consumerism is bad u guise. However, there are thematic differences. Fight Club has an obvious "happily ever after" ending (smothered in irony, but still). Mr. Robot has an actual cast of characters, often with conflicting interests. Elliot will probably learn to empathize with them because ~character growth~, but it also means that the "you are not the center of the universe" point will be way, waay more of a thing in Mr. Robot than it ever could be in Fight Club. And the big one: Mr. Robot continues. Fight Club was content to tell a story with the end of the world as a backdrop. Mr. Robot treats it more like a thing that actually happens in the world. There's more verisimilitude, which is in no way something that Fight Club could ever go for. Moreover, the way the "real world" aspects interact with Elliot's juvenile delusions will lead for a much more interesting clash than Fight Club. Fight Club is simply a fairy tale, but Mr. Robot is different and that doesn't work. Maybe it'll fall apart. Maybe Ismail knows what the fuck he's doing. Maybe I'm reading the show all wrong so far. Regardless, it'll be fun to watch unfold.
It's not live video, so yea reading more into it, seems you only need to use websockets when dealing with live video. So how can I serve my files so they can be used in a `&lt;video&gt;` tag? The catch is that I want to make this easy to install and the video locations are dynamic. So that rules out using something proper like nginx. 
they use python so it's 0 indexed
blasphemy py3 is perfect you shall not speak ill of python
&gt; Generators are something that a good chunk of people don't understand I don't understand them. I can write them though. Just return the next value of an object with `yield`. &gt; An understanding of what the Python interpreter is and how different Python distributions vary would also be a good sign. For example, CPython, Jython, Cython, PyPy, etc. That seems very academic. CPython is what people use. Jython is a Java-based Python that only goes up to Python 2.7 and isn't popular at all. PyPy is faster, but has major library limitations and only works up to Python 2.7. Brython is a javascript based Python that's slightly faster than CPython. Cython is a complied interface to Python similar to SWIG, F2py, and the former `scipy.weave`. Knowing specific libraries separates you from someone who doesn't know Python. I know matlotlib, numpy, scipy, PyQt, and VTK very well. I couldn't care less about things like twisted or json, but other people definitely do. How do you code Python 2.7/3.5 compatible code? How do you structure a code that is 200k lines without it becoming a mess? Concurrency is definitely advanced, but depending on your field, it may never come up. I've seen threading needed once (not even real concurrency). A bit of googling by my coworker solved that problem. You have to ask what the industry wants.
it's not backwards compatible either so you really have to update everything to py3 **it's the future man™** 
No worries, the documentary was [Mr. Robot_dec0d3d.doc](http://mrrobot.wikia.com/wiki/Mr._Robot_dec0d3d.doc) instead of being given a series title. 
That's how I feel about it. The environment is way different than fight club. Fight club is a drone-nerd and his super macho counterpart ("I fuck how you want to fuck"). Mr Robot is a quiet delusional kid with extreme social anxiety and depression who battles with delusions of someone who is hostile and insane. He's tormented by it. It's not some cute superhero counterpart, it's a demon for him. He's depressed and anxious crazy and his counterpart is dangerous and violent crazy. To top it off, the cinematography is excellent, the plot is gripping, and what finally does it for me is the security stuff is actually very accurate for the most part. I loved how in the prison episode he mentioned they'd be able to do it if they had time to read white papers on the SCADA systems, or something of that nature. Last season you could see him pulling off shellshock on a server and mentioning "they haven't even patched since shellshock", and in this season they were using SET to create the infected auto-run flash drive. It's real shit. We're used to hacking in movies and shows being something like magic, and we're lucky if we even see a linux terminal or something like that. I remember people praised the matrix for showing them using nmap. Mr Robot went above and beyond and really did their research. I work at a security company and 3 guys in the research team are really excited for it, and definitely give it thumbs up for accuracy. 
&gt; If you provide equal opportunity then you get more men taking up programming and more women taking up nursing. Ah, so when given equal opportunity women just *naturally and of their own free will* gravitate toward professions which were historically enforced as "feminine"? Do you also think women are biologically programmed to "naturally" prefer high heels and the color pink?
Cool, I'm not really this low level but excited to see where it goes! Mind if I ask, why bitbucket?!
Well, benchmarking is a special kind of "science" - it's fun to watch figures of course, but doing it right and then *interpreting* it right is non-trivial task. PyBoard is a special in a sense that it's the most powerful of the officially supported boards (for example, if you'd see its and other boards benchmark score, you could think that the other boards suck, but actually it's PyBoard very powerful), with a lot of hardware features and capabilities. It also gives you the closest control of the hardware. 
No locks are needed. That is what the gil and ref counting and garbage collection are all about. The hard part is getting the thread to give up its reference to the old function. A function is an object, so it is no different than replacing a global dictionary with a new one. If a thread is in a scope where the dictionary is visible then it will keep a ref count on the old object, only releasing it when the object goes out of scope. So the function you want to replace needs to be at least two levels deep (ie not in the worker threads main loop), but if that is deep enough... that is hard to say and would depend on some implementation details potentially. 
For micros, yes always. You can let them know and fill out some forms beforehand to do it otherwise. So... Yeah? Lol. It's definitely on the up and up, but good advice for amateur folks. 
This looks really cool. &gt; very difficult to extend; if you ever have to, you will find yourself single-stepping through distutils and setuptools just to figure out what is going on. How right you are. I recently had to integrate downloading and building a 3rd party C library (which to add insult to injury uses autotools) that was needed for a CFFI extension into a setuptools based package. That was about as much fun as chewing glas.
Doing it this way will also be much easier to read. It will clearly show that the execution us now going down a different branch because stone condition was meet.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
How exactly are you calling it "dynamically from the python27.dll"?
Via "LabPython", a python interface for LabVIEW. 
In all honesty, pythons documentation is in a very poor condition. No structure, bad examples, hard to navigate. Have a look at the mdn javascript documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/string compare that with python: https://docs.python.org/3.5/library/string.html Its pretty much useless. 
The joker is not correctly handled by your code. When `Card.joker` is `True` you add the `string` `"Jo"` to the `Deck.cards`, but `Deck.cards` contains instances of `Card` for all the other cards.
Thanks, I really appreciate you taking the time. I liked what you added and I will definitely use what you have added.
Yeah I was going to remove that before I posted. I know it's not implemented correctly. Thanks for pointing it out :)
Note that the link you've given doesn't document the python `str` type but rather the `string` module. That documentation for `str` is at https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str. It's likely more appropriate to compare the javascript docs to the latter.
/r/learnpython
swagger.io (OpenAPI) support comming soon, which will enable automatic documentation and client code generation.
I guess you are correct. I assumed that the thread copied the global symbol table to the local frame for the scope. But evidently not. One would at least assume that the thread doesn't see an inconsistent function definition if it is in the midst of execution of the body... That can be confirmed: import threading import time def work(): print("work start ") time.sleep(10) print("work end") return def main(): global work t = threading.Thread(target=work) t.start() def work(): print("work start ") time.sleep(10) print("changed ending") return t.join() work() main() work() Prints: In [5]: work() work start work end In [6]: main() work start work end In [7]: work() work start changed ending So the only concern is if the caller would be impacted by the fact that two successive calls to a function are not consistent with each other, as can be seen by making main call `target=work2` where def work2(): work() work() which prints: In [10]: main() work start work end work start changed ending 
My biggest gripe is that no docs seem to just show a functions arguments, their types, and what the function does. There's always paragraphs that have no clear, standard way of explaining the usage of the function or class.
I'll take my favorite bit of documentation as an example: [enum](https://docs.python.org/3/library/enum.html) 1. Ironically there is too much of it, and much of it is too verbose. This is great in some instances, but lots of times it isn't needed. An enum is an enum, most programmers coming to that page are already familiar with the concept, they don't need a refresher on the nomenclature and rather trivial examples of which take up the first two full screens in my browser. The first useful bit is not until the 3rd or 4th screen worth of scrolling: "8.13.3: Programmatic access." 2. The documentation is too focused on interactive use and duck typing. If I can pull up an interactive session and play around with the objects then I don't need the documentation. I just poke them until they do the things I need them to do. I need the documentation for instances when its too hard to get everything setup for interactive use. But looking at enum you see that the majority of the documentation is just regurgitation of someones interactive session... like I couldn't have done that. 3. The important stuff is buried and in totally the wrong place. Certainly this [little gem](https://docs.python.org/3/library/enum.html#finer-points) at the bottom of the page isn't worth putting any higher up, or making any more prominent. 
There are surprisingly few people involved in Python core stuff. Pypi for example is pretty much just one dude and he's trying to rewrite the entire thing! If you think it sucks you can probably dive in and fix it. 
Pre-3.0 documentation style was a little bit more readable: https://docs.python.org/2.7/library/json.html
The interface doesn't have a stack trace available unfortunately.
That is a feature coming soon. You will be able to specify a response format, which will be validated during assignments. Also, same will work for the request input. Currently, the query arguments are automatically parsed to the types you specify using Python 3.5 function annotations.
Great article. Loved the table flip comment. I am tempted to say that it might have been better to keep the encoding stuff out of the IO thread from the start. You won't gain any benefit from doing it in that thread since it runs in Python and is limited by the GIL. Based on that it would make sense to have the thread do *only* IO. (I'm still thinking about the [Clean Architecture](https://www.reddit.com/r/Python/comments/4sewip/the_clean_architecture_in_python/) stuff someone else posted recently.)
pyo is very easy to start and did the job for me a few times. https://github.com/belangeo/pyo
A better how to use part of the readme would be good. Like... what if I use a lib that uses urlparse? Do I monkey patch that in? 
This is built on top of Python 3.5, and will work with any asyncio compatible libs.
Cool, but partially ruined, because there is a site-wide search, [which can bring up all the challenges](http://pythonhow.com/?s=) :P edit: Also, I think the challenge 9 should point out that you are supposed to translate the number to word again...
Your appeal to authority notwithstanding, there is a reason that asyncio was written instead of just incorporating twisted into the standard library. 
Spawning a thread as a side effect of importing a module seems like a poor idea anyway.
My bench mark for effective documentation is the IBM DOS 2.0 manual which is going back a ways. The one I dealt with in college was in an openable, half-sheet binder. The binder itself was boardstock covered with grey fabric and IBM DOS embossed in white ink. The binding was clearly made to allow easy addition of addendum. Each 8.5 x 5.5 page had 1 command on it. Top line had an instantly readable context example. The rest of the page defined exactly and only what that command did and referenced nothing else so there was no danger of circular bullshit. Most definitions took less than half the page. It was dry as fuck, but was very easy to understand what was going on. The problem with python docs is that it has a past in trying to get adoption and they've never transformed from friendly to usable.
answer to the first question is completely wrong... or maybe i'm missing the point?
Hi, I'm the author of the article. I was tempted to explain why we spawn a thread while doing an import in the article but it was already quite big. We're not literally doing a "thread.start()" in a module like that. We're launching a thread in a sitecustomize module, for connection to our API and getting / sending data while the main thread is our customer web application. The problem of doing that is we are in the middle of an import. Python basically do "import sitecustomize" before launching anything you ask him. We were converting the data to latin-1 encoded string because we didn't want later during the normal request / response flow because it would add more code to run. We ended up doing the conversion in a cached property, so when it's done it's in the MainThread outside an import and it's done only once.
&gt; bitbucket supports mercurial, which is easier to use than git Just curious, but what makes you think that? If we neglect the existence of TortoiseHg, I find that git is easier to use in a lot of situations, though of course YMMV.
You should learn from the old masters how to do a Python challenge: http://www.pythonchallenge.com/
And on challenge 6, the 270th word from the beginning is condimentum, not esed
It doesn't. Multithreading support is sponsored by PyCom, creators of LoPy board, based on ESP32, and that its primary target. Currently available proof of concept implementation is available for PyCom's previous board, WiPy, and Unix port, which is a universal development/testing target. Multithreading support won't stabilize until 1.9 (when it should be the main feature of that release). 
This seems more of a case of what you're used to. I've been using git for almost 10 years now, and it's very natural to me. Mercurial has always seemed much more obtuse (and much less flexible).
Yes, they will be made public soon. You'll find them here: http://www.youtube.com/playlist?list=PLYx7XA2nY5Gf37zYZMw6OqGFRPjB1jCy6
usually when I see " for x in range(len(some_iterable))" my mind first jumps to the builtin enumerate() function. So your first loop in getMajorScale() could be something like for index, note in enumerate(chromatic_scale): if note == key_note: note_index = index Then note_index is the same as the i from your original for loop Otherwise you could avoid the explicit loop alltogether and do something like: if key_note not in chromatic_scale: # handle this scenario however you want else: # now key_note is guaranteed to be in chromatic_scale note_index = chromatic_scale.index(key_note) The same would then apply to getMinorKey()
Thank you! I couldn't find mention of it and was getting worried. I love those talks!
It should work for any IDE. Basically, every program with a GUI interacts with a gui backend (Qt, Gtk, ...). That backend is what runs the event loop. The problem arises when two different gui backends are used (e.g. Qt for matplotlib and Gtk for the debugger). Because only one event loop can run at the same time, either the matplotlib windows are usable or the debugger windows. You can change the matplotlib gui backend via http://matplotlib.org/faq/usage_faq.html#what-is-a-backend
6 of 33... too addicting...
&gt; However, when I ran this in Python 3 everything worked as expected Unless you are using python 3
what do you think it lacks to look RESTful?
There are many ways, but basically you need an API, that API can be a socket, a RPC server, a REST API... etc.. I wrote an article (with code example) on how to do that using Nameko RPC http://brunorocha.org/python/microservices-with-python-rabbitmq-and-nameko.html
Can you post your code, so we can see how you modified your function?
Thanks for the detailed feedback! Let me go one-by-one: 1. This is something in my plans to be added to the project. First I think to introduce swagger.io (OpenAPI) support. The plan is to add a `Resource` concept, and use those to assign `@consumes` and `@produces` properties to the endpoints. This will support data validation and API specification generation. Later, this concept of `Resource`s can be extended to be represent separate endpoint with all it's CRUD operations mapped to HTTP methods. What do you think about the idea? 2. See 1 ^^^ 3. You may control the return codes just like you do with Tornado, with additional convenience, invalid requests will be automatically rejected with appropriate 4xx responses, as well as specific Exception types raised in a handler will be rendered for the user. 4. I agree to your point here, but I think in practice this is still used a lot. So why not to have automatic parsing and type conversion? 5. Do you mean list all the Resources? This can be added with what I described in 1 + 2. 6. This is also planned to be added with the swagger.io stuff. Just want to know your opinion, do you think different versions should live in one codebase and served as one or they should be different instances of the service? 7. There are some tweaks needed still to make it work with @web.authenticated and current_user, but regarding the application object reference, my idea is the following: if you define your handler with `@app.whatever` then you have a global reference to it. Do you think this is good/bad? Thanks in advance, hope to get some good outcome out of this!
Looks like the author has failed his requirements and didn't know it. He's still writing JS.
Pretty sure the class is a slimmed down version of the actual code.
&gt; The plan is to add a Resource concept, and use those to assign @consumes and @produces properties to the endpoints. This will support data validation and API specification generation. Later, this concept of Resources can be extended to be represent separate endpoint with all it's CRUD operations mapped to HTTP methods. What do you think about the idea? It's [basically what I implemented](https://github.com/simphony/simphony-remote/pull/90) in the past two days. &gt; You may control the return codes just like you do with Tornado, with additional convenience, invalid requests will be automatically rejected with appropriate 4xx responses, as well as specific Exception types raised in a handler will be rendered for the user. Good. &gt; I agree to your point here, but I think in practice this is still used a lot. So why not to have automatic parsing and type conversion? Because it introduces the risk of putting verbs in the arguments, and that would break REST _really_ _badly_. See, the point of rest is that it forces you to reinterpret your world as a set of generic verbs and specific nouns. Granting more flexibility introduces an additional degree of freedom to your api that rest is trying desperately to prevent. It also makes it harder to handle caching. &gt; This is also planned to be added with the swagger.io stuff. Just want to know your opinion, do you think different versions should live in one codebase and served as one or they should be different instances of the service? That's a matter of preference and design I think, however, having the freedom to specify different versions without having to mess with nginx in front to route to the appropriate target is beneficial. &gt;There are some tweaks needed still to make it work with @web.authenticated and current_user, but regarding the application object reference, my idea is the following: if you define your handler with @app.whatever then you have a global reference to it. Do you think this is good/bad? What I would do with your design is to either pass a context (optional, if you want, like in click: @click.pass_context) or just pass the context itself instead of the request, and the context contains the request, the application, and all the rest. 
Yes, I'll make a reply to your comment on an hour or two when I get home with the updated code. 
Why would efficiency be affected?
You could try to determine chord type from actual tones if you use numbers as pointed above, that would allow you to use all three minor scales as well as some exotic ones that generate interesting harmony. You just need to add aug and dim chords that occur in melodic minor, but it will make your app very universal. If you have any questions please ask, I love your idea.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
What actually changed, though? It's not like eg. https://docs.python.org/3/library/json.html is significantly different from your 2.x link. Is there a relevant PEP describing an intentional change?
even if that's the case using the threading module for basic stuff like this which has already been done in py2 with concurrent modules like twisted and tornado is reinventing the wheel, badly.
Management
Why would you not do a major version bump for a language change? 
If the API is consistent, you shouldn't need to do any kind of version bump at all. 
Yeah, as a longtime Python user I was fairly unimpressed with Go syntax and conventions. That being said I think they hit the nail on the head as far as good reasons you might want to consider Go instead of Python: * easy concurrency * runtime speed * startup speed * stand-alone binary 
new &amp; shiny hype train
Why not use the [string](https://docs.python.org/2/library/string.html) library for `words`? import string words = string.letters # abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
But then you have to use python2, and learn Twisted and Tornado. When you could just roll a small multithreaded solution for multiple webrequests in python3.
But why chose GO over more popular languages. 
I love Flask, I truly do. I have used it for countless projects over the years. Which is why it pains me to say, for REST servers 100% falcon. The performance is just in another league entirely.
Go is a system language. I think of it as compiled python as much of the syntax and semantics are very similar to python. "go" routines are very similar to Python's coroutines. Go's slices similar to Python's list slices, etc. Go is quite nice. I've been working in it the past couple of weeks, but I haven't found it to be better than Python. To me, Go is a cross between C and a compiled Python, but Python comes with batteries included and at least for internal use, not exported use, I find Python's exceptions quite useful over Go's panics. 
don't make me start notpron again...
Such as which language specifically? The advantages Go provides will be different depending on what you are comparing it to.
Here is my simple Go formula. Most of the people I know are programmers, most of them are very very good programmers and have mastered at least 5 languages in their career and have professionally used at least 10 (even if you aren't counting crap like HTML). Not one single person that I know uses Go, has used Go, or plans on using Go. I even know a guy who was recently maintaining legacy code using a scripting language invented by that company. Ditto with rust. Except in that case I do hear the occasional person blah blahing that rust can do this and rust can do that; except none of them are using it. PS. I know an Erlang guy. 
&gt; I find Python's exceptions quite useful over Go's panics. That's because Python's exceptions are commonly used as control flow statements, whereas Go panics are not. Go's idiom for error handling is basically this if err != nil { .... } and functions that can fail are expected to return `error`. I get the feeling that `panic()` is cumbersome to use on purpose, just so that people don't abuse it. As usual, whether that's good or a bad thing is debatable. 
I don't understand your formula. What are you actually trying to say? Obviously it's not a mainstream language at the moment (not saying that it will be in the future, who knows). It's widely used when people can leverage its advantages, which is usually in the background, without being flashy about it. Other than infrastructure at many major companies (Google, Twitter, Digital Ocean, GitHub, Dropbox .....), even projects I use on daily basis (without being a Go programmer) are written in Go: Kubernetes, Docker, GitLab stuff..
There's also [autoenv](https://github.com/kennethreitz/autoenv) for bash/zsh which is a bit more general purpose. I also pretty much cloned it for `xonsh` shell as [autoxsh](https://github.com/Granitas/xonsh-autoxsh).
add the harmonic minor, scale, the blues, phryigian dominant and its mode (gipsy scale) for more flavour. bonus points if you can implement melodic minor.
There's a number of very popular oss projects that are running at scale written in go, since you're passively implying that it's immature. Sure there are aspects that show its age, such as dependency management or a universally adopted package manager. I work with a lot of talented engineers. We've been using go for the majority of infrastructure services lately. It's been an absolute joy doing so. We haven't ran into any limitations of the language or had any problems because of it.
The issues they listed I think where a lack of understanding rather than shortcomings of the language. Honestly in my opinion Go is a much better option for distributing a program across multiple platforms but you have to understand the build system. You also need to understand the dependencies you pull in and rely on. For example: https://github.com/asciinema/asciinema/issues/134 That complains about undefined _C_int, which took me 10 seconds to look at that project and see that it's simply due to the package he is using "kr/pty" not defining ppc64 with cgo. Looking real quick it would have been 4 lines of code in two files. ztypes_ppc64.go and ztypes_ppc64le.go (for little endian, not as common but you want ppc64, there ya go). The size of int / uint would be 32. So a little bit of systems knowledge is good to have when using a systems language. You could build your users a single binary for many architectures from a single machine thanks to cross compiling. Python has tooling for versions, we have docker, virtualenv, other hip tools for rolling things up into ziplike self contained what-have-yous. But none of it is as clean or reliable as Go's cross platform support. The thing he felt was better. Just wanted to post this for anyone who may be mislead by this post. The author has good intention and I think it's great he tried Go, I hope he learned something along the way. Go.. Channels are a really nice draw to the language to get an initial interest.. then as you try to actually solve problems in it .. bleh. It has a bit of a turn away as you get use to it's rather rigid and repetitive idioms. It can be tiresome to write at times, specially when you are trying to just hack your way through something quickly.. the more you try to work against the languages design the more it beats you down. But it causes the good libraries to feel very much alike. Go has lots of fantastic properties that encourage great library design in my opinion and it's own standard library for the most part feels very cohesive and well designed. The Go team is comprised of some very intelligent engineers that I respect and their work speaks for itself. The upstart from Go library to Go library is never.. surprising, for the most part. Python, oh boy, there is a lot of ways to do things. I've been guilty more than once of using some of the more esoteric and very much extraneous features of that language to get some cute syntactical property I wanted because I fixated on how neat it was I could do it. Just to end scrapping it because I realized it was completely counter intuitive and "fun" to make was the only value it would ever add. But, that in itself makes python pretty cool. However it also means there can be a much larger learning curve from project to project. This is something that I really have started to notice after over 10 years of development in a professional environment.. I really don't want to waste time trying to understand what in the hell your code is trying to do. That said I love python and I use it all the time. I use Go when appropriate. I use Python when appropriate. You should too. Edit: didn't mean to have a snarky tone at all, when I said a little bit of systems knowledge I wasnt implying the author lacked any! I was really implying understanding the build system and how to leverage for your target architectures.
&gt; I know *real* programmers. They write in pascal and basic and perl. Have you ever programmed perl? No, because you aren't a real programmer like my friends are. And erlang. And Scala I think.
I agree on syntax, but I think I the biggest value add for Go is the rigid constraints on it's syntax and language features really cut down on collaboration. Writing a tiny Go library when you have some free cycles for someone who may be over encumbered or isn't a SME in the library's problem area is so easy. You don't need to talk about what your inputs are and they won't need to bug you if they have to tweak it a little to meet their needs. There is not "styles" really. Their is a single style which innately encourages more correct software in my opinion. Formatting? go fmt. No silly styling debate. Just my two cents. 
Looking at the stats, there is no doubt that people are using it. I just haven't met any yet. This is a bit more than anecdotal, I know a lot of programmers in a large variety of fields. My usual pattern of adopting a new language is that I am hearing about it and some killer features that make me want it. Then some respected friend will adopt it and start to evangelize, but I will ignore a sample of one. I almost always have one friend who foolishly adopts something for a short while. Then finally I give it a taste and never look back. None of the above has happened yet. It offers no features that I don't already enjoy well enough in the languages I regularly use, and I know not a soul who has expressed any interest let along are using it. With google doing their damnedest to foist this on everyone, I am going to declare this language a dead man walking. Maybe it is pretty good, but if it were so damned good it would flood the earth. 
I instantly dismiss your statement once you backed it up with a list of companies using it. That list of companies probably use every major language in the top 10 and you can probably find the vast majority of the top 50 languages being used somewhere in the company. It is pretty much a water is wet argument. I am not saying that Go is a bad language, but a solution in search of a problem. Google (a monster tech company) has been pushing it hard to very little penetration as compared to Python with no monster company pushing it and its massive penetration. 
cof python3 cof asyncio cof cof
&gt; Go is a much better option for distributing a program across multiple platforms Python is pre-installed or easily-installed everywhere, so package maintainers only have to make a single package for OP's project that installs on all platforms. Having a separate binary for every target arch means package maintainers have more work to do. It may be worth it to get the benefits from Go, but OP didn't need those benefits.
Because it's a CLI utility I expect?
That it works is dumb luck, GP's advice still applies for Python 3.
You're posting inane bullshit, and you sound like an asshole doing it. 
You lack severely in critical thinking skills, don't you?
Lol. 
Building/distributing a binary per arch is really not that much work.. it completely removes the complexity for the end user, just put the binary in path.
[I remember at the Go announcement they specifically called it a "systems language".](https://youtu.be/rKnDgT73v8s?t=1m9s)
&gt; If it just opens files then you can probably be okay I suppose? I am assuming that's hyperbole? The python stdlib includes a ton of systems level stuff besides "opening files," like forking processes, plumbing pipes, opening sockets, sending fnctl/ioctls, etc. It's not a system programming language, but not some toy language either. &gt; But it seems your point is to write software to alleviate the burden for package maintainers..? That was a big motivation of OP's switch back to python according to the blog. And yes, if one of your goals for a project is to have it distributed on many different distributions and platforms, which volunteers package for you, then you do care about minimizing the effort they have to put in. &gt; What on earth would is easier than a one binary package, lol. See this official golang package for ubuntu? http://packages.ubuntu.com/xenial/golang-1.6-go Notice how there are 6 packages, one for each supported arch? That's what package maintainers needed to do for each supported arch for OPs project using Go. Each arch package has a binary compiled targeting that arch. See this official python requests package for ubuntu? http://packages.ubuntu.com/xenial/python-requests Just one package for all arches. That's what OPs project gets from using python. &gt; No packake maintainer would rather configure a Python library with heavy system dependencies, possibly swig, requiring GCC, etc vs a single binary a Go project author can cross compile from his own environment. Dude...swig is like a transpiler / code generator / way to embed interpreters in C...I don't know of any popular python libraries that have a dependency on swig. Some python modules do require a C compiler and those packages are distributed with packages for each supported arch with libraries compiled for those targets. E.g., http://packages.ubuntu.com/xenial/python-pycryptopp The thing is, because of the ubiquity of python, those modules are already packaged and maintained by someone else. If you had to get someone to package your third-party python dependencies that had compiled libraries, you'd have the same dilemma as using golang. It's fine if we disagree, but the author of the blog stated why it was easier for him to use python and I don't think there's any way to make a case that Go is easier to package than python right now. That could always change in the future as Go becomes more ubiquitous, but it's not true right now.
Spoiler alert! # Find the words that end with commas or periods, and are 4 letters long # I'm using 5 instead of 4 because the punctuation is part of the word. commas = [w for w in junk if w[-1] == ',' and len(w) == 5] periods = [w for w in junk if w[-1] == '.' and len(w) == 5] a_ord = ord('a') # Find the ascii number for the first letter in the alphabet. total = len(commas) + len(periods) # The number we're turning into a string. remainder = total # The same number as above, only we'll mutate this variable. result = '' # The resulting string. while remainder &gt; 0: # Get the current last digit of the number, treat it as an offset to the alphabet (0 -&gt; a, 1 -&gt; b, etc). # Put the remaining number in remainder. remainder, offset = divmod(remainder, 10) # Calculate which letter we're looking at. letter = chr(a_ord + offset) # Append new letter to the front of the result string. result = letter + result # Tadaa! print("%r -&gt; %r" % (total, result)) Edit: Heh, I didn't notice the suggested way of encoding the numbers until now. Now I just feel silly.
&gt; But it seems your point is to write software to alleviate the burden for package maintainers..? If you work for a small enough company (and many of us do), you'll find that the people writing the software, are also the same people who deploy it. So yes, the point is to write software to alleviate the burden for package maintainers, because that's me also.
Couple corrections for you, first the golang you package you linked was pretty pointless.. it's for the go compiler and tooling. Of course they are much larger and complicated. It's a compiler tool chain. A better comparison is to compare it to http://packages.ubuntu.com/xenial/python which has complicated dependencies as well. Now, if your point is "all" arch package is less burdening on maintainers then distributing a set of architecture specific binaries that just simply isn't the case. As someone who's managed and built a lot of packages what takes time is dependency management. Upgrading versions to fix security flaws causing API incompatibilities, having to include patches, etc. Everything about dependencies and setting up the runtime is the pain points. Having separate packages for architecture costs nothing in terms of the maintainers time. It's just a for loop over a list of a archs in worst case scenario, it's likely made Even easier through build tools / automation. Even if some guy was downloading binaries off a webpage and moving them into a folder or something weird.. it's one hell of a trade off to completely discard all dependency needs.
Maybe this will help: "Charm: A Framework for Rapidly Prototyping Cryptosystems http://charm-crypto.com"
It feels like if you have a python code base and don't need extra speed or concurrency, you won't gain that much by switching.
Maybe the industry you're in just doesn't have a need for it, nor any of the other folks you know. There's nothing wrong with that. Goroutines and channels are pretty incredible. Since go 1.5 GC hasn't been a major issue. With 1.7 there's been massive increases in performance of it as well. A lot of people use the concurrency patterns and the previously mentioned primitives as killer features, as well as pointing out GC as being an issue (which it legitimately could be under certain circumstances). https://blog.twitch.tv/gos-march-to-low-latency-gc-a6fa96f06eb7#.74h6g3ybj some nice light reading on the subject if you're interested. It's a neat language that has its quirks. The documentation and community is great. One thing I've always disliked about Python is the documentation and certain areas of the community. If you ever find yourself with a side project it would be pretty easy to pickup if you have any experience with c.
I think it's interesting that none of your reasons to consider Go instead of Python relate to the Go *language* - they are all properties of the Go *runtime*. People are switching to Go, not for the language itself, but because using Go is one of very few ways to get everything in your list. Other than the incredibly complex C++, are there any other languages which can produce stand-alone binaries which are fast and concurrent?
"API docs" serve a *different purpose* than what "tutorials" do. If you conflate one with another in a single set of documents, as Python Docs do, you get messy/unnecessarily-detailed presentation for beginners, as well as poor facilities to help veterans who just want to search and scan quickly. API docs and tutorials should be written separately with fitting content/style/presentation. 
Apologies from Canada
So we should go by your anonymous and small sample size over well known tech names.
You can do both! No need to give up PokémonGO.
Go is as Web scale as node.js unlike Python which is not Web scale 
You can't slice any H264 (or other modern codec) video (unless you very very carefully slice at keyframes) unless you re-encode the video. Youtube-dl doesn't re-encode unless you tell it to and even then it doesn't do video editing like you're asking for. Modern compressed video codecs are necessarily highly self-referential for high compression. This makes almost every frame dependent on the data in previous frames so you need to re-encode the video to set the new first frame as the new self-referencing point. (To video codec people out there, yes I know I'm simplifying this.)
Will stein is not an idiot. If there were a good X library in pure python, he would be using it in sage. That's not to say you won't find some basic tools to do computation in one of these groups (or write one yourself), but it probably won't be able to do all the operations on the group as a whole or compute the invariants that mathematicians are looking for.
Was early, misread and thought he was talking about golang or something instead of about the program in the OP
Package management is not just limited to open source packages you share across distro's. Package management is also an issue when you have lots of boxes where you want to deploy your application to. Having a single binary to deploy makes stuff way easier than for example having to deal with virtualenvs. We're a small company, but we have hundreds of small boxes we need to deploy to. So yes, efficient and easy package management is important.
Strong chance they're just trolling.
Good point, but the error handling thingy (kinda) makes my eyes twitch a bit after a while.
I couldn't agree more. Sometimes there is too much of those interactive session stuff &gt;&gt;&gt; ...... &gt;&gt;&gt; ...... &gt;&gt;&gt; ...... &gt;&gt;&gt;..... &gt;&gt;&gt; ....... &gt;&gt;&gt; .... &gt;&gt;&gt;... &gt;&gt;&gt;! It makes the web pages crowded and noisy, it makes reading difficult.
Yep, looks like ipyparallel is great for one-off problems but numba and C extensions may be the best choice for the more permanent stuff.
absolutely, have fun, parallel programming is quite daunting at first!
Okay, I got it to work! Thanks a million for all your help, but it seemed that the issue was some sort of file configuration problem, because I just ended up copying the code and putting it into a new .py file and changing it's name. Not sure why it worked but it did. Yay troubleshooting
It's not their team specifically that are sexist. It's the entire industry. The truth is, medicine *used* to be a toxic environment for women too. It isn't anymore. That shift hasn't taken place in the tech industry yet, I think. Part of it is unfortunately a factor of the more casual nature of tech in general. In medicine there's a pretty clear boundary between work and not-work — very few doctors work from home or from a coffee shop! I think when these boundaries blur is where you have opportunities for what I guess I'd just call "uncomfortable interactions". That's one problem the tech industry is facing. The other is a bit of casual non-self-aware sexism on the part of many male members of the tech community. They refuse to acknowledge that there's a problem and often dismiss the claims of women that their *is* a problem. Which is super weird if you think about it, because how exactly would men be able to measure whether or not the tech world is a comfortable space for women? I think interest is absolutely a factor and I think the tech world will never be 50/50. **However** keep in mind that up until the 1940s-1950s, the world of computation was largely a female field. Many of the first operators and programmers were women. And this was when you didn't even have languages that were easy for humans to read — this was the punch card days. Even today women are routinely discouraged, in subtle and not so subtle ways, from pursuing careers in tech. Yes, even while there are all the initiatives to involve women in tech, culturally and socially there are still plenty of barriers in place. I think balance is important in every kind of group space. I think if you have two people who are equally proficient, it would be hard for either of them not to have, at some point in life, spent an inordinate amount of time behind a computer rather than engaging with the world. That said I know plenty of excellent programmers who also have social lives — some of which may even circle around interaction with other coders outside of work. You gave the example of medicine. That's actually another field that requires a huge amount of out-of-pay-hours learning. You have to read the latest journals on new research in your field and stay up-to-date with new techniques there also. Same in law. Same in many professions. In fact, I think in law it's actually mandated or else you can't keep your license. It's not particularly unique to the tech world, although the knowledge in the tech industry does often change more rapidly.
I also read _Secrets_. It was good too. 
And now I have to click through 25 pages of garbage
&gt; Python, oh boy, there is a lot of ways to do things. Yep, google just about how to do anything in python, and you end up at stack exchange with 5 responses, 4 of which have about the same amount of votes, and all are equally viable*. (*terms and conditions may apply, may not be applicable in your state, void where prohibited). 
inconsistency
A mix of two reasons: 1. Same reason `unittest` is in camel case. The functions predate the style guide being as widespread and enforced as it is now, and the names remain the same for backwards compatibility. 2. In some cases - the devs preferred a shorter name. `setdefault` is pretty readable and clear still, compared to stuff like `strncat` or `getusersfromdatabase` I don't think 2 is a valid reason to introduce inconsistency, but obviously not everyone agrees.
Even then you have to worry about versions 2.7 or 3
Python &gt; There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch.
You've got your answer so I thought I'd see if anyone feels the same as me - I know it's not exactly pythonic to have redundancy, but I'd quite like the real functions to have properly-formatted names and then just have the old-fashioned functions left in calling the new ones. Maybe a few versions down the line they can start throwing deprecation warnings (which could possibly be disabled by an interpreter argument). IDEs would encourage use of the proper names, the language would get better, nobody would suffer. 
You realize that if you make an application in Go you do not need the go compiler tool chain to distribute it right..? A s for bugs, have you written software for Windows, Linux and OSX in both python and Go for end users? I have. Python windows support is much more spotty, pretty much anything that uses C bindings is bound to not work in Windows. You as a developer need to add lots of complexity for your code in python to deal with the fact you could be on some users old ass distro that still has LTS but uses python 2.6 for the system. You have some distros on python 3, it takes some time and knowledge to get your code portable in python. Having the interpreter their is not much of a bonus, it's a drawback. Your writing code and testing code in one environment of N that your code will execute in. Bugs are so much more likely.
I don't know if one exists, but you could likely submit a PEP for this. Seems like it wouldn't be much work to submit code changes for (leaving out the deprecation warnings for later)
Yes. Or if you they are into it they could do it dynamically - ie highlight any variables that are first argument in method. So while the self per se is not part of the syntax first argument of function definitely is. 
As I understand it, *self* is simply used by convention, but any legal variable name would work in it's place. - So by that mentality, seeing as it is not a reserved word, it should not be highlighted.
"Do not do typos" is kind of a silly instruction in the second basic exercise. Try something like "Double-check your spelling to avoid typos."
HTML isn't a programming language. It serves a completely different purpose. While we're here, would you like to propose an alternative to HTML that isn't "crap"?
It never gets to that line because the first line in the try clause throws an exception. Since an exception occurred the rest of the try clause is skipped.
I think so. It's not actually a keyword, but by convention it's used similarly in Python code, so I think it deserves to stand out.
All you need is he exact file path to the python interpreter you want to use in PyCharm. So find the path to your python 3.5.2 executable Then create a new project in PyCharm and use the Project Settings from the Settings menu to select the interpreter. If PyCharm doesn't list your interpreter right away you can direct it to any given filepath thus just point PyCharm to the executable for python 3.5.2
They're probably coming from other languages where the naming convention uses underscores. I think the overall trend is towards camelCase though.
For a lot of style standards, there's not always a good reason except that picking one way is better than everyone doing their own thing. In this case, though, snake_case has better readability. There have been [studies done on this](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload=true&amp;tp=&amp;arnumber=5521745). Code is read more often than it's written, so making it more readable is often worth adding an extra keypress.
Oh great, yet another twitter bot. Let me know the name of it's account so I can proactively block it. Now, regarding your question: Basically begin with a random account, look at their followers / followings, follow those accounts and so on. Seems like a nice way to implement the main logic recursively.
asciinema requires Python 3 and so this problem goes away :)
When you get the "task not completed" error the tank needs to rest its position. It's confusing to leave the tank somewhere else, they might write their code as though it started there. Alternatively you can make the tile the tank starts on say start with an arrow pointing which way it faces.
Aha! I get your point. I used realtime API from Slack so probably would be something similar. Thank you! 
Because in the case of a command line app like this one API == UI == command line args/opts. And it didn't change for asciinema. Language it is written in is an implementation detail.
I learned that the hard way ;)
Long ago, I use to do this and many similar things. (I'm a little bit OC) In a library which would "normalize" all the "wrong" things. If fell down when I started sharing my code and working with others. When others had to use this very personal and janky library and be confused by my code (and I confused by everyone elses code that did not conform to my python world view). At that moment I understood why popular projects resist change. A change has to provide a high enough value to justify the chaos it produces.
Bloomberg Professional does. But their prices are rather high as well. Maybe their "data as a service" / "pay per field" offering could be a better fit for you.
Wow!
&gt; [self] is not a reserved word Neither is `id`, and yet Vim and Sublime highlight it by default. Personally, I'd find if much more useful if they highlighted `self` instead.
That is very accurate observation. 
I would definitely recommend using tornado or twisted in python 2 and even asyncio in python 3 if you have the opportunity. But unfortunately we need to plug into our customers applications and most of them are in python 2 and developing WSGI application, so we don't have the choice.
A try:except block stops execution of a block of code when an exception occurs. The first line raises an exception and the second line is never executed. 
uhh what? its true
&gt; And as much as I love GitHub, I am also a bit afraid that it becomes the sole monopoly at some point Yeah, good point... I just love the GitHub UI so much I guess :)
Why wouldn't it be able to compute the invariants or do all the operations on the group? After all, Python is also a general purpose language as C/C++, and can do anything. Please note that I'm not talking about performance here, but completeness. Performance wise discussing is totally different story, and yes C/C++ will perform (usually) better.
Why wouldn't it be able to compute the invariants or do all the operations on the group? After all, Python is also a general purpose language as C/C++, and can do anything. Please note that I'm not talking about performance here, but completeness. Performance wise discussing is totally different story, and yes C/C++ will perform (usually) better.
`id` is a builtin though, `self` isn't
But .deb can automatically pull in Python 3, so not a big deal.
Train it to perfectly upgrade V2 to V3 and you'll have something! /s
GrandParent, two comments above.
If the parser can do that, I'd think that non-self should probably be highlighted in blinking red or something different from the highlight for self. In any event, "highlight the language keywords" is almost never a useful goal. It can be in the narrow context of teaching a language's grammar or something, but not day to day programming. In general the goal of syntax highlighting in an editor is something like "help a reader understand code." Which has nothing to do with keywords except perhaps incidentally. Once you accept that as the goal, the premise of OP's question becomes absurd. Self not being a keyword is as important to the discussion as a wall not being painted for not being pancakes.
Emacs highlights it, and i like it that way. Yes, it is only convention, but going against this convention (i.e. using "self" for other purposes) would be really bad practice.
If this isn't true for you you're doing something severely wrong.
Sure, lots of languages do- that was my point. In my experience people generally stick to whatever style they learn first for as long as they can, and for many Python isn't their first language. Many universities still start with C++ or Java, and many online/self-guided lessons begin with PHP, JS or Ruby (on Rails). I think you're underselling the trend though. Lots (relatively) new (or newly popular) languages have gone with camelCase/mixedCase, including C#, F#, Scala, Go, and Swift. Groovy, Kotlin, Elm, Nim, D, and Processing go camelCase too, though they're perhaps niche enough to discount. JS is a bit older, but as you point out it's the (ever-growing) 800lb gorilla. Haskell is older too, but its popularity is a recent phenomenon, and it uses mixedCase. There are obviously counterexamples- Ruby, as you've said. Rust and Elixir also use primarily underscores. Clojure and Racket, being Lisps, use dashes (rebels!). But I can see from the pile of downvotes on my earlier comment that this is an unpopular opinion. Shrug.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/techyhelpinaction] [So uh... if the project didn't benefit from any of Go's strengths, and was hampered by some of its weaknesses, what made them choose Go in the first place?](https://np.reddit.com/r/TechyHelpInAction/comments/4sv21e/so_uh_if_the_project_didnt_benefit_from_any_of/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Personally, I want to use dash-case but I can't so...
The only way I can think of doing this is with exec. import imp mymodule = imp.new_module("mymodule") source_code = """ def foo(): return 10 """ exec( source_code, mymodule.__dict__ ) mymodule.foo() Be careful. Here be dragons. Etc etc. EDIT: I just want to point out that, if you're doing this for security reasons, then you're wasting your time. You're likely going to get someone's machine compromised in the process of doing this if the wrong people figure out what you're doing.
Could you do something where you call foobarlib.setversion(2) and it does internal mapping? Such that all code is always in the function, but prefixed with an underscore (So you're not meant to use it). The setversion does things like foobarlib.set_header = foobarlib._new_set_header And no set version will use the oldest version. 
For how long did you let the neural network train on the g2.xlarge instance?
Yeah, I would like to see this too. I find myself jumping back and fourth between camel case, underscore, and just joining two words together without capitalization because native python does it and so it kind of taught me bad habits. I would REALLY like to break these habits but it's hard when the programming language you are using has the same bad habits.
Sorry but I do not know how to do that. Is there a place I can read on how to do this or what that is?
The incredibly simple C
Yes, I've clearly never worked on software targeted to different platforms using different development environments, so I didn't realize Go is so much better. I haven't submitted patches for things as diverse as mono and firefox. I don't work on Openstack on a daily basis where it's 99.9% python and some projects are [flirting with Go](https://github.com/openstack/swift/tree/feature/hummingbird). Nope. I don't really understand like you do.
humons
That's a great suggestion! I just added a section in the readme, let me know what you think: https://github.com/commonsearch/urlparse4#how-to-use
Because _pythonic_.
It really does! Like Microsoft was somehow involved.
Ok. It is obvoius that you have very little experience with large long lasting code bases. You do realize that your proposed deprecation would need new code on every single computer on earth that uses python in one form or another? Like 99% of every single computer or smartphone. Meaning it would break absolutely everything in the world? For no other reason than to look pretty. Simple example is_instance() instead of isinstance() ... are you certain that no trivial amount of large old codebases out there not already has their own version of is_instance() making things break the moment you introduce it in the std lib?
Well, you're not *quite* wrong. Example: eervy wrod in tihs setncene can be mipsleled and you can porbbaly sitll be raed it quiklcy beuacse yuor eeys are relaly jsut usnig the frist and lsat leettrs of ecah wrod to inetrrept tehm. As long as there's separation, it's easy enough to interpret the words correctly. But, smashthemtogetherintoonegiantstringoflettersandthingscangetalittlehairy. It takes you a bit longer to switch reading modes to break the words apart, unless they're very obvious. --- Regardless, `setdefault` probably takes just as long to determine as `set_default` when reading code, so readability isn't impacted to a large degree. Though, in practice, it can still be a bit more annoying to reach for the `_` in_between_every_individual_word_as_you_are_typing.
Large old codebases are unlikely to be updating to the most recent version of python with every update, particularly across major versions. And looking pretty is literally the only point of the python language. If you don't care about usability and consistency, write in assembly.
I didn't know it was. What use cases have been tested between the two for speed? 
Relevant Xkcd: https://xkcd.com/163/
Well, if you don't know what numpy is, then Google is the place to find out! I don't know any great tutorials, but there are loads of ok ones, just search for them.
Startup time (and thus startup time of python itself) is included. Python (CPython) is not very fast. Depending on the code, python can run very slow (!haven't checked anything). Python's main objective is not being fast. We have c/c++ fortran (julia) (any other which i forgot) for that.
This might be my favorite xkcd. Thank you!
I'll believe what you say, Dr.
I haven't tried Data Nitro nor have I seen any tutorials on it, but I think the closest to what you're looking for is [xlwings](http://xlwings.org/). The other library that may meet your needs is [openpyxl](https://openpyxl.readthedocs.io/en/default/). If you're using the Anaconda distribution, you should already have both of those libraries installed. If you have tried either of those, can you comment on your experience with it and how it compares to Data Nitro? I haven't bothered with Data Nitro because I haven't found a need for it, but I've always been curious about how it compares to those two.
Maybe they wanted some of those pokeymons.
Import times would get ever so slightly slower. That's probably all. 
That's what namespaces are for.
No. If a human can read it, a computer can read it.
To add to the "because they preferred it" and convention, specifically it is preferred because they think it is more easily readable (some studies back that up iirc), and their priority is on readability over writability. 
Channels are part of the language though, not the runtime, right? And that is where the easy concurrency comes from.
That was i my thought process. But I was reading a few articles online that said it was illegal to scrape an website without it's owner's permission. So I can use scrappy on news sites, blogs and all that kind of stuff right? As long as i keep the data for myself and don't use it do make money. Thanks for your answer!
Just starting to get into python. Does anyone know of any solid open source examples using Django REST? 
This was my experience, I built a web scraping bot awhile back using python and scrapy, I believe, that inserted the data into a Postgres, later ES, database. Basically as a project to build a basic search engine. I got a letter from AWS that they had received a cease and desist notice saying my crawling violated some site's TOS. I didn't think too much of it at the time because my code wasn't mature enough to respect robots.txt, for example ... Nonetheless it's a neat project and a whole lot of neat stuff can be found by randomly crawling IPs ... 
Perhaps you missed [the link](https://benchmarksgame.alioth.debian.org/u64q/php.html) in the original post?
Why is it that in every test where PHP is faster, the PHP results gets bolded, but with every tests where Python is faster, neither are bolded?
There is more to looking pretty than just function names.
I've switched between it and the PythonImproved syntax definitions, both highlight self and cls, but slightly differently. To each his own I guess.
Off to a good start, But I'd recommend you look into using classes and dictionaries for easier management of your game, There's a lot of ifs and variables everywhere.
but, but... I'm just learning python so that I can get a job..!
Python does keep a regex cache, but I can't see the code so I'm not sure if they're bypassing it somewhere
I find Python's documentation to be fantastic and easy to navigate. Then again, this is what I'm coming from: http://docwiki.embarcadero.com/Libraries/Berlin/en/System.DateUtils.TryRecodeDateTime
Not sure about python, but other languages have relatively high overhead associated with function calls. One this simple might be optimized out though.
1. Always look to see if a site offers developer APIs. 2. Respect the robots.txt 3. If you make your bot well, they could never tell. 
Useless? That seems perfect to me. 
PHP is worse
Awesome! I welcome the critique. Can I import anything to handle irrational numbers? Or do I need Mathematica? 
Agreed, but go look at the official docs for json dumps and loads. It doesn't really even say what the return value is. That's ridiculous. 
Search for Paul Hallett. He's done work such as https://pokeapi.co/
Why can't you just define your function to take sza_lin as an input variable?
I think that code just gave me eye cancer. That aside, I know anytime I think like that I am generally approaching it the wrong way, like have sza_lin as an input variable or something, idk, I can't read the code. If you truly need independent functions, you can generate them into a dictionary (or list) of lambdas. 
/r/learnpython is where you'd get more help I'm not an expert but I think what you want to do is just instantiate objects, adjust this sza_lin index value property of the object. Can list the objects in an array if 0-54 works or a dict if you want to give them names. The definition of your object can have your function in each of them or call your function that works on an object of your type. Few ways to do this but anytime you're thinking "I might have to do something manually x times" objects/classes is generally your answer.
Looking for something like this? x = [] for i in range(0, 10): def func(y): def func2(): print i return func2 x.append(func(i)) [f() for f in x]
But built-ins can be shadowed too. E.g. you can declare a parameter or a variable with `id`, which happens all the time.
&gt;I'd think that non-self should probably be highlighted in blinking red There are valid cases for non-self here though. Eg. class methods( which generally get named `cls` of similar), static methods (where it's just the first real parameter) and potentially other metaprogramming usecases. Reliably identifying those statically may not be feasible (sure, you can look for `@staticmethod` or `@classmethod` decorators, but that isn't exhaustive (eg. you might have your own decorator which includes that or something), so I'd avoid getting too obnoxious here. 
Because that violates pep8. Even if it's inconsistent with other names, all code everywhere uses `setdefault`. If half the code uses `setdefault` and the other half `set_default` you introduce a whole different set of issues.
Name your bot Googlebot and no one will ever say a thing.
This looks promising however I must admit I don't quite understand what this code does, I am fairly new to coding. Could you elaborate? What would I pass into scipy.optimize.curve_fit that would be indexed for each different function? x[i] right? But what is the command x.append(func) for? Wouldn't I only need x.append(func(i))?
&gt;20fps Downvoted for false information. 
From scipy.optimize.curve_fit: The model function, f(x, ...). It must take the independent variable as the first argument and the parameters to fit as separate remaining arguments. If I pass sza_lin as an argument to the func scipy.optimize.curve_fit will attempt to fit sza_lin as a coefficient in the equation. That is not what I want. I need to fit a1, a2, h1, h2, h3, h4 to x and sza_lin[i], for 0&lt;i&lt;54. The only reason I need to do this is because I can't find a python function that will fit a function of 2 variables, so I am forced to treat my function as a single variable function with one of my variables fixed, 55 times so I fit the entire function across the entire range of my data.
Youre blowing my mind! Ive been pythoning for a few years and had no idea
Thanks for your kind and encouraging words. I'll definitely try to make it worth of recommending to friends :)
If that's true (although I'm still pretty skeptical) then try an object. class Thingy(x,a1,a2,h1,h2,h3,h4,sza_lin,i): def __init__(self): a1 = self.a1 .... def methoood(self): return ugly_function_above(self.stuffs) for i in sza_lin: objecto = Thingy(vars=variables_as_needed) do_something_with(scipy.optimize.curve_fit(f=object.methood())) Edit: Also do you work in biotech/medical/chemistry or related fields? I'm only asking because I work as a sysadmin/general IT Professional for a biotech place and your brand of ugly code makes me think biologist ;) Edit_more_helpful: Are you aware that you can set a parameter in your function to default to some value? Like just set s=sza_lin in your first function's arguments and then you won't even need to pass it the next time, it'll just take the default.
That may work for code that calls setdefault, but it will create a world of hurt for code that overrides setdefault, such as defaultdict, or customized variants thereof. 
r/lolphp
The old function still exists. The new one just gets the name. Python functions are first class objects. That means the can be handled like any other value, such as a integer or a list. You can assign new identifiers to it, put it into a tuple, pass it to another function and so on. You can explore how this works in the python REPL. &gt;&gt;&gt; def func1(): print('func 1') &gt;&gt;&gt; func2 = lambda: print('func 2') &gt;&gt;&gt; func3 = func1 &gt;&gt;&gt; func1.__name__ 'func1' &gt;&gt;&gt; func2.__name__ '&lt;lambda&gt;' &gt;&gt;&gt; func3.__name__ 'func1' &gt;&gt;&gt; func1 is func3 True &gt;&gt;&gt; def func1(): print('another func1') &gt;&gt;&gt; func1() another func1 &gt;&gt;&gt; func1 is func3 False &gt;&gt;&gt; func2() func 2 &gt;&gt;&gt; func3() func 1 
There is a difference. Wrapping by declaring a new function requires an extra function call. Simply aliasing `set_default = setdefault` does not.
`if err != nil` is that not the same as `if err is not None`, which seems to me to be a strange check and a long way of working (zero non-trivial golang experience here)
&gt; be raed be albe to raed FTFY
Pytest works great with django. It's really easy to learn and use and more readable than the xUnit style that is used in the standard Unittest library. [pytest-django](http://pytest-django.readthedocs.io/en/latest/index.html) includes tools for working the database, template rendereing and http requests, session cookies etc.
The project looks great. I'd be happy to use any Python implementation with JIT. But without Python 3 support, they are all really useless. Shouldn't we try to move CPython forward? Add a JIT, try to get rid of the GIL?
Although not complete, found it Quite sleek &amp; useful. 
Your suggested implementation and description perfectly describe remi https://github.com/dddomodossola/remi
I like to always use virtualenvs just so I never forget. Virtualenvwrapper helps. 
* Emacs will highlight `self` as a keyword by default, though it goes no further * PyCharm goes (much) further, it will highlight the first parameter of a non-staticmethod whatever it is and will also check that: - the first parameter of an instance method is present and called `self` - the first parameter of a classmethod is present and called `cls` - on metaclasses (subclasses of `type`) these parameters are renamed to `cls` and `mcs` respectively
Thanks! I had some questions if you don't mind. &gt; you'll be rebuilding the container every time Consequently we don't ever for any reason bake our code into the container or pip. We have found mounting anything that needs to be baked in read-only to be a suitable work-around and it stops us needing to re-build a container manually. We run pip every boot to unfreeze deps into the container (we do have an argument we can append to not run pip from docker-compose up), you're right this takes time. The decision on this came from the fact we saw heroku do the same during deployment. Maybe it needs revisiting, as I say I'm never 100% about anything we do, there has been so much change since the late 90's and early 00's; I love the current ecosystem more than the older one, but man it makes you think about things you never had to think about before... &gt; Sure you can mount your code in a shared volume into the container/vm and still use some of your local and common tooling but these methods behave differently across different host OS's. Unsure on that. could you elaborate please. Most of the things I build are never going to be run on a separate OS, our goal with docker and vagrant (which seems to have worked for us) has been to only use a limited set of technologies for the host machines, try to steer away from low-level decisions as they are the hardest to change.
Sounds like a belt and braces approach. Personally I'd drop the VMs and just stick with the virtualenvs.
Yeah. I just don't see Python as a language for the future any more. A global interpreter lock in an age when only smartwatches have single cores and it *still* defaults to ASCII, FFS. Python 3000 has turned out to be Python 1999. 
I guess it depends on what your aim is. Are you trying to prove the code runs with its dependencies, or trying to prove that the code runs on every platform out there? For day to day dev I'd be doing option 1, so running under a VM is over kill. But then (maybe) you want to have the confidence to tell clients that your code has been tested on every platform out there. In which case yes, you'd build a whole CI process that spins up several VMs (one for each OS) and then fetches the code and runs tests. Its a little bit heavyweight, so I'd only do this if there have been platform issues, or you have platform dependencies.
Depends on what you mean by artificial intelligence. That's a very broad term that encompasses many different algorithms. If you mean a "thinking machine", then there is no answer. If you just want to solve a problem using AI, then you haven't given us enough information
Just go back and re-read our conversation without looking at it like "who won" and "who lost". Deploying a binary package is harder than deploying a set of python scripts.
Thank you so much. I do have a question. I wanted to know how to implement machine learning to learn the composing style of a particular artist and generate progressions in that style.
In Zope it is a part of larger structure where classes are pluggable by configuration. So you can have user object with name, email and password stored in a database or you can change a configuration and have the user object look up the user data in LDAP etc. So Zope is 100% configurable in that regard. the contract for new objects and classes is that they follow the interface, and declare to do so. In older versions you could somewhat do the same, but it worked by convention. And only for one type at a time. So a class can implement an interface and the system can understand it. Making it possible to do something like: class User: implements(UserData) implements(PresentationPage) implements(SQLStorage) It is a technically really clever solution that I have really disliked using in practice. 
the slickest thing about what zope does IMO, is you can declare a series of adapters and the system will figure out how/if it needs to convert a class from one kind to another. I've never used it for anything "real" so like everything else it can probably be abused to the point where code is incomprehensible.
This would be fine if the functions raised NotImplementedError, IMO. It can be useful to have base classes of this form for an API where all objects of a specific interface inherit the class. That's the closest you can reasonably get to an "interface" in Python. Some may laugh, but it does have its uses.
Depends on the site, depends how you are using the data, depends if they catch you.
you used semicolons incorrectly every time you used them in this post
I'm completely in your camp. I do not use virtualenvs. I maintain a couple of python versions on my own machine for development, and I test often using DO droplets. I use separation of machines where you'd only run 1 version / package for a single application.
full disclosure, my phone screen size is such that with his exact message, the text wraps exactly on "hairy", so it's not a fair comparison!
that's a rather vague statement. what's your question? if python is different to c#? the answer is yes. if you have questions regarding your code then post your code . 
I'm not so sure I did. Perhaps as it is completely off-topic a PM would serve as a better venue? http://www.bristol.ac.uk/arts/exercises/grammar/grammar_tutorial/page_05.htm
Just out of curiosity, why there was work into Pyston rather than helping PyPy?
Thank you, I will try that!
then write it correctly. python works, maybe you don't know how to write python. maybe you are missing details of python, maybe you should read a book on python before (or while) writing programs. 
I agree with you, HTML is not really a programming language. My phrasing was a bit off. To consider HTML a programming language is crap. This is something many people do. 
My anonymous and smallish sample is what I have. I don't go with the big tech names doing things because they often have reasons and motivations that are irrelevant to me. My point is that pretty much every major wave that came and stuck, came my way pretty quickly. I was doing Java in the mid 90s. I was doing PHP before 2000, .net in the early 2000s, perl in the mid 90s, I was doing python by about 2010, Javascript by about 2000ish, web pages by 1995, solaris in 1995, linux by 1998, visual studio by 1998ish, Objective-c by 2008, etc And as a background hum I have done C and C++ since the early 90s up to and including the present. I pretty much didn't miss any major trend and was in on it quite early. Usually because more and more of my friends were doing it. I switched from Windows to Mac along with most of my programming friends around 2008, and I am contimplating a switch to a linux desktop now (along with some of my friends). Probably my laptop first. Rust and go. Not a peep. 
[removed]
[Testing Spoilers](#spoilers)
No worries, it wasn't good code to begin with :) I tried this and it exited with the same NameError. Maybe LabPython just sucks!
In another pyston [thread](https://www.reddit.com/r/Python/comments/4l3tf9/pyston_05_released_able_to_run_numpy_unmodified/d3k9jrl) /u/fijal wrote: &gt;disclaimer: I'm a PyPy dev. The main difference between pyston and PyPy (other than age) is how deep the differences are from CPython. Pyston imported a whole bunch of CPython, including C API (and refcounting), which means it's "only" an added JIT to CPython model. PyPy does much more, changing the entire object model, layout, GC strategy etc. Additionally pypy, since it's older, is more mature (so works better), but it's also easier to pinpoint it's shortcomings. The net effect is that despite pypy having support for C extensions (numpy almoooost works with 200/couple thousand tests failing), pyston promises to bring more compatibility, while PyPy promises to be faster PS. Pyson devs dismissed PyPy in the past saying they'll be more compatible than PyPy and faster, I'm calling their bluff and waiting for it to happen It seems like they are coming from a different direction. Pyston, compatibility -&gt; improve speed Pypy, speed -&gt; improve compatibility But of course both are improving both aspects. Edit: To your question: To have full control of their project? 
nice... downvotes for saying something almost positive about zope. not surprised. but you kids need to learn your history
[pyramid uses zope.interface](http://docs.pylonsproject.org/projects/pyramid/en/latest/designdefense.html#pyramid-uses-a-zope-component-architecture-zca-registry) and it's really handy when you need that little something extra. but 95% of pyramids users dont need to touch it, it's largely an implementation detail. 
I think what you're trying to say that it's surprising how different programming languages can be. You'll get used to it - learning syntax can be done in a week. Learning the correct, idiomatic way to express your code takes much longer. Don't make any assumptions about how things work, read the docs carefully. New concepts will arise or be pushed to the forefront in Python that don't have a C# equivalent. Even something as simple as assigning a variable can be a very different proposition between languages.
OP is not an idiot, just not great at asking questions. It doesn't come naturally to everyone and it's a skill that you get better at with experience.
I do use `virtualenv` though... I'm asking if I should stop using `virtualenv` or VM/Containers and why
My point is that I shared the same thoughts, and I chose not to use `virtualenv`s anymore.
maybe you're a dick source: this comment
Also, it seems like English may not be OP's first language.
Hmm...yes, I get your point, Thank you
I see nothing wrong with the post bro, but thanks alot for such a helpful reply -_-
Lol no I am an undergraduate intern at NASA working with ionosphere plasma physics. I generally don't care what my code looks like as I'm pretty sure it will never be used by anyone but me.
I did a quick test without the function definitions and it's able to read the globals just fine. I refactored the code to make it PEP8 compliant: def max(a, b): return a if a &gt; b else b # Exogenous flows would be communicated from LabVIEW, left 0 for now FG_VG = 0 # mg/dL / min FI_VI = 0 # uU/mL / min P1_BASEVALUE = -1.31e-2 P2_BASEVALUE = -1.35e-2 P3_BASEVALUE = 2.90e-6 # Multipliers, varied using spline interpolation in application. # Left constant here. P1_MULT = 1 P2_MULT = 1 P3_MULT = 1 P1 = P1_MULT * P1_BASEVALUE P2 = P2_MULT * P2_BASEVALUE P3 = P3_MULT * P3_BASEVALUE VHM_GB = 100 # mg/dL VHM_IB = 10 # uU/mL VHM_ALPHA = 3.11 # 1/min VHM_H = 136 # mg/dL VHM_N = .13 # 1/min VHM_BETA = 1 # min VHM_GAMMA = 5.36e-3 # ( uU/mL dL/mg ) / min^2 def dGdt(G, X, I1, I2): return (P1-X)*G-P1*VHM_GB+FG_VG def dXdt(G, X, I1, I2): return P2*X+P3*(I1-VHM_IB) def dI1dt(G, X, I1, I2): return VHM_ALPHA*max(0, I2)-VHM_N*(I1-VHM_IB)+FI_VI def dI2dt(G, X, I1, I2): return VHM_BETA*VHM_GAMMA*(G-VHM_H)-VHM_N*I2 ''' Fourth order Runge-Kutta method in 4 dimensions. Loops are unrolled from the RKN method for faster execution ''' def RK4(_G, _X, _I1, _I2, hs): _G_1 = dGdt(_G, _X, _I1, _I2)*hs _X_1 = dXdt(_G, _X, _I1, _I2)*hs _I1_1 = dI1dt(_G, _X, _I1, _I2)*hs _I2_1 = dI2dt(_G, _X, _I1, _I2)*hs _G_k = _G + _G_1*0.5 _X_k = _X + _X_1*0.5 _I1_k = _I1 + _I1_1*0.5 _I2_k = _I2 + _I2_1*0.5 _G_2 = dGdt(_G_k, _X_k, _I1_k, _I2_k)*hs _X_2 = dXdt(_G_k, _X_k, _I1_k, _I2_k)*hs _I1_2 = dI1dt(_G_k, _X_k, _I1_k, _I2_k)*hs _I2_2 = dI2dt(_G_k, _X_k, _I1_k, _I2_k)*hs _G_k = _G + _G_2*0.5 _X_k = _X + _X_2*0.5 _I1_k = _I1 + _I1_2*0.5 _I2_k = _I2 + _I2_2*0.5 _G_3 = dGdt(_G_k, _X_k, _I1_k, _I2_k)*hs _X_3 = dXdt(_G_k, _X_k, _I1_k, _I2_k)*hs _I1_3 = dI1dt(_G_k, _X_k, _I1_k, _I2_k)*hs _I2_3 = dI2dt(_G_k, _X_k, _I1_k, _I2_k)*hs _G_k = _G + _G_3 _X_k = _X + _X_3 _I1_k = _I1 + _I1_3 _I2_k = _I2 + _I2_3 _G_4 = dGdt(_G_k, _X_k, _I1_k, _I2_k)*hs _X_4 = dXdt(_G_k, _X_k, _I1_k, _I2_k)*hs _I1_4 = dI1dt(_G_k, _X_k, _I1_k, _I2_k)*hs _I2_4 = dI2dt(_G_k, _X_k, _I1_k, _I2_k)*hs _G = _G + (_G_1 + 2.0*(_G_2 + _G_3) + _G_4)/6.0 _X = _X + (_X_1 + 2.0*(_X_2 + _X_3) + _X_4)/6.0 _I1 = _I1 + (_I1_1 + 2.0*(_I1_2 + _I1_3) + _I1_4)/6.0 _I2 = _I2 + (_I2_1 + 2.0*(_I2_2 + _I2_3) + _I2_4)/6.0 return _G, _X, _I1, _I2 def runVHM(): # f = [dGdt, dXdt, dI1dt, dI2dt] # Function pointers x = [200, .01, 10, 0] # Initial conditions h = 1 # Time step of 1 minute __args = x+[h] # Number of steps, translates to minutes of simulation with time step of 1. N = 7200 for i in range(N): # x = RK4(x[0],x[1],x[2],x[3],h) __args[:4] = RK4(*__args) gt, xt, i1t, i2t = __args[:4] runVHM() 
We use containers as a development tool because we have system level dependencies and we're a Mac shop (have you tried installing OpenSSL on osx, it's terrible). It's much easier to tell someone to just install docker toolbox and run our setup script than walk then through installing ask the system packages. We did run venvs inside the container for a while, but moved to installing the python packages in the same step as the system packages. I disagree with this, but we've not run into any issues so far. 
Sorry, I got sloppy. You only need the `x.append(func(i))` line. This essentially calls a function (func) that creates a new function (func2) and appends the result of the call func (the created function) to the list x. Then a list comprehension calls every generated function in the list.
Can you provide some code examples of stuff that doesn't work for you? With the errors that are thrown. It would help us to actually provide constructive criticism/advice... Also, [A Byte of Python](http://python.swaroopch.com) is a great (and free) book. 
Arvixe seems to be a *shared* hosting service, which means that you share your server and your software stack with a hundred or so other users. This kind of setup used to be a decent tradeoff back when virtualization was a pipe dream and servers were prohibitively expensive, but by 2016 standards, shared hosting sucks across the board. The most logical step if you know what you're doing is unmanaged VPS: you pay for a virtual machine that comes with a barebones OS installed (usually you get to pick between a few Linux-based options), you get root access over SSH, and take it from there. The upside is that you can do whatever you want on that server, install exactly what you need, and configure everything to your liking. The downside is that you have to do all the sysadminning yourself. In terms of a Django-based application, you would install Python, Django, all the Python dependencies, and then probably either nginx or apache, with a suitable WSGI plugin (WSGI is a standard interface for Python web applications that allows Django and other frameworks to run on many different web servers), and whatever else you need. Then you'd configure the web server to serve requests through your WSGI application, and that's basically it. If resource and bandwidth requirements are tiny, running your own physical server might also be an option - check with your ISP though whether running servers is acceptable. Because you'll be serving from a consumer internet connection, you probably have a dynamic IP address, so you'll need to use something like [FreeDNS](http://freedns.afraid.org/) to get a domain pointed at whatever your IP is at that moment. A cheap single-board might even be enough, say a Raspberry Pi with an external HDD for storage, an SD card to boot from, and a little case; such a hardware setup can be had for less than $100 total. Keep in mind though that servers need to be on 24/7, which can rack up your electricity bill quite a bit. If you don't want to fiddle this much with server configuration and maintenance, something like Heroku can be convenient. The upside is that once you've one through a few fairly simple steps, deploying your application is a matter of pushing to the right git repository, and they configure everything for you automatically - absolutely no sysadminning required. The downside is that you're a lot less flexible with what you can do, and you have to build your application around the way they do things. Cloud services like AWS or DigitalOcean do less for you, but still give you more convenience than a raw VPS, plus they have free or cheap tiers, which might be more than enough for a small low-traffic application like yours.
That sounds great! Should be much clearer. 
In their about page they could use to define JIT since that seems to be a core component of this project.
Hello, this looks great, congrats. Would it be possible to extend it to multi-line formats such as LDIF which is for example used in Windows Active Directory dumps? (Example here: http://mcraig.org/ldif/Example.ldif)
&gt; I imagine that work could be done to make the Python faster. [`"Contribute your programs"`](http://benchmarksgame.alioth.debian.org/play.html)
As in several ethical questions, the answer is: "it depends". For instance, are we talking of an NGO, a public office website or a for-profit website? Some for-profit websites explictly forbid the the scraping of data in their Terms Of Service (whether or not you will get in court because of that, that's another matter entirely). Other for-profit websites, like reddit, are already open, so you don't have to do the scraping yourself (for reddit dataset, take a look at https://archive.org/details/2015_reddit_comments_corpus and https://www.reddit.com/r/bigquery/wiki/datasets) **But, it must be said, web scraping is a poweful tool of civil disobedience** Let me tell you a fun anecdote: In Brazil, the land records of cities are public domain. But, if you are an ordinary citizen, you will have to got to a notary's office and pay a hefty sum of money for each record. In São Paulo, there are about 3.5 million records, so you would have to pay a shit-ton of money for the complete records. Usually, city halls in Brazil have a machine-readable database of the complete records (because land taxes are a huge chunk of every city hall budget in Brazil), but those are usually kept way hidden. São Paulo City Hall decided to open the machine-readable file, announced it (with some fanfare, even), but unfortunately the only thing we got was a form where you input your land record ID and get your data. I created a scraper that went through all possible IDs to get the data. **I made a point to make it as uneducated as possible, making more than 10 million requests a day.** Together with some independent journalists, we made a [very useful data-driven news story](http://codigourbano.org/nao-acabou-o-espaco-para-construir-em-sao-paulo/) and, the city hall, instead of opening the data, decided to put a CAPTCHA in the data. I broke the CAPTCHA. All that process helped to get awareness and, with a good help from well-intended people inside the city hall (bureaucracies are schizophrenic hydras with lots of heads, after all), finally the entire dataset got opened.
Wow, thank you SO much for the in-depth response. Yes, Arvixe is a shared host. Is the only downside to that sort of setup the slow response times, due to the server being used by the other hundred or so sites? Full disclosure, I don't really know what I'm doing, and taking on the task of learning Python/Django has been weighty enough, so I don't think the unmanaged VPS is the option for me. I love the idea of the Raspberry Pi server... definitely something I'm going to look into. My only fear would be crashing it myself and not knowing much about servers. What's the big difference between cloud services like AWS vs the shared host? I've been playing around with heroku for a bit, and it seems like it might do, but it's also looking to be a whole other beast to learn on top of Django.
The mobile browser I used doesn't show those links
I think everyone is different. For example, you say "the platform and stack you run on are part of what you sell". This hasn't really been the case for projects I've worked on in the past. So if you're selling assuming an OS and stack, then it would be a good idea at some point, to build and test in a VM with those parameters. But unless you're writing low level stuff, or reliant on out of date libraries, obsolete OSes etc, this build and test should just be confirmation of what you already know. So day-to-day dev in a VM wouldn't achieve much. In my opinion.
highlighting language keywords and builtin functions is supremely useful for day-to-day coding, it adds visual cues to reduce the amount of eye motion needed to read code and also immediately tells you if you're inadvertently using a reserved word or builtin function name as a variable name (frequent offenders for me include "type" and "id" - these should be post-underscored). 
Great. Also, do any of you know when the 2016 version of this [scipy-lectures](http://www.scipy-lectures.org/) will come out?
OP is frantically refreshing this page (will read your link now :)! ) Nope, totally useless (read that one already ;) ) - command line only and does not output a file with the differences, but shows what was changed
Ah that's supposed to be a link, but it doesn't look load anything
Imagine a machine that can do everything from speech recognition to image processing and more. I want to start building the speech recognition engine where NLP and machine learning would come together. 
Human like. I want to start with speech recognition or NLP. 
Just to give you a short answer: You want a digitalocean droplet. It will be five dollars a month. They have one click django deployments, and multiple (excellent) tutorials. If you are committing to Python and django you are also committing to bash/Linux, so start getting cool with the terminal. Any other way is folly, IMO. 
Excuse me Bruv, hopefully i didn't shock nobody. 
&gt;Yes, Arvixe is a shared host. Is the only downside to that sort of setup the slow response times, due to the server being used by the other hundred or so sites? Mostly it's not having root, so you have to beg to have things installed for you. Such a pain to not have root. A vps is still one vm of dozens on a single machine, but at least others aren't sharing your os/kernel. I use digital ocean which is an unmanaged vps for like $5 per month. Great tutorials on managing your system too.
I understand, but I personally think that hiding is more trouble than adding an underscore. I personally think a code reviewer should insist on using the underscore to avoid hiding.
(*Spyder dev here*) What operating system and Python version are you using?
 import csv def import_csv(filename): with open(filename) as file: # DictReader returns a generator, which would've been exhausted # on line 15 return tuple(csv.DictReader(file)) def main(): file1 = import_csv('file1.csv') file2 = import_csv('file2.csv') uniq_images = set(i['Image'] for i in file2) - set(i['Image'] for i in file1) with open('file3.csv', 'w') as file: writer = csv.DictWriter(file, ('Name', 'Age', 'Image')) writer.writerows(i for i in file2 if i['Image'] in uniq_images) if __name__ == '__main__': main() 
Though, if you're in [the US](https://socialmediacollective.org/2016/07/01/why-i-am-suing-the-government/)...
*Scrapping* is illegal. Scraping?
`import .Lepton_With_Charge`
Try opening `file3` in binary mode, `'wb'` (see https://stackoverflow.com/questions/3348460/csv-file-written-with-python-has-blank-lines-between-each-row/3348664#3348664).
Please re-read your *Not Being a Dick Handbook*.
That's a pretty confusing error message. Have you definitely copied it all, or might there be some missing? Do you know where the module `ioctl_numbers` might be getting imported from?
[removed]
Very interested in the web app you have stood up. I'd like to do something similar. Do you have any helpful links ?
This look really nice - reminds me of seaborn. 
Unfortunately it's completely internal so I can't just link to a repo or a download link. But it basically runs this check and saves the results. If the status changes, an email is sent which either tells the user the service has gone down, or has come back up. The other check I run uses Requests to check HTTP status. 
The correct syntax for an explicit relative import of `Lepton_With_Charge` would be: from . import Lepton_With_Charge You would only use that if your directory also has an `__init__.py` file, making it a package. If you are just writing simple scripts and running them as scripts then the directory will be added to `sys.path` automatically and the import you used should work. From the error message it looks like the import of your lepton file worked, but for whatever reason (typos?) you have `Lepton_With_Changes` in your description and `Lepton_With_Charge` and `Lepton_with_Change` in your error message. To use the `pylepton` class `Lepton` you probably should use from pylepton import Lepton If you need the module `ioctl_numbers` import it as from pylepton import ioctl_numbers 
How do you put a csv into a list? Also, just try making a couple of sets with numbers in them and see what they are like. It's just a container like a list or dictionary. 
Thanks for this. Does anyone have particular recommendations? I won't get through 71 videos, as much as I'd like to.
Totally did miss it. Sorry. Color blind, the link blended with the background tint of /r/python's style. 
Use \_\_init__ instead of \_init_ Two underscores on each side
Is there anywhere that enumerates exactly what this does? The doc page is good for telling me how to use it, but not what functional changes this causes.
Develop in the virtualenv, deploy in the container/vm and keep it immutable. Developing in the virtualenv will also insure you're including all packages you need, doing a pip freeze to use in either using setup.py or requirements.txt will make deployment and management easier. 
I don't see that in the sidebar. this is not /r/pythonencouragementforloserswhocantprogramgood
[removed]
Thank you for being nice :] its rare to see good people these days tbh
Just curious if you've ever considered not using ICMP and actually monitoring the service the machine is supposed to be running
If you are installing this [ping package](https://pypi.python.org/pypi/ping/0.2), I don't see how it's favorable to use root level sockets rather than subprocess.
What are you interested in? I've only watched a few so far, but the ones that have stood out to me: [SymPy Code Generation](https://www.youtube.com/watch?v=nmI-cDAUjdE&amp;index=17&amp;list=PLYx7XA2nY5Gf37zYZMw6OqGFRPjB1jCy6) Demonstration of some practical techniques if you do a lot of tedious algebra and calculus in your work. [JupyterLab: Building Blocks for Interactive Computing](https://www.youtube.com/watch?v=Ejh0ftSjk6g&amp;list=PLYx7XA2nY5Gf37zYZMw6OqGFRPjB1jCy6&amp;index=2) If you like using Jupyter this talk will make you excited about the project's future.
Thanks mom.
Absolutely would love to attempt. I sent you a pm ;D
You can but you have to come through some philosophycal and practical differences. 1) try to follow pythonic code style from the beginning. That is: focus on business logic, not on funcionalities. Your main loop should be understendable by anyone without knowing the actual libs. Take a look at this wonderful talk by Raymond hattinger: https://youtu.be/wf-BqAjZb8M 2) oop in python is as powerful as in Java, but different. don't follow the "One file per class" pattern, collect stuff in modules. No interfaces, practically no abstract base classes ( unless you use hacks like ABC lib), multiple inheritance is the way to go. Also don't waste time writing getters and setters, there are no such things as private. 3) dependencies injection is somewhat a lighter problem but it's getting more attention. For an overview and a possibile solution look at https://youtu.be/zqRd941NXlI 4) somehow a direct consequence of 2: DO NOT abuse oop. Python is inherently object oriented. It doesn't make sense to create complexity wrappings, auxiliary classes, and so on. Take a look at this talk about class abuse in commercial code: https://youtu.be/o9pEzgHorH0 5) learn what "duck typing" is and how to use it to simplify your life. If an object is enumerating something, it make sense for it to offer a len() function, no? This is a very big component of the python wow, by creating special functions like __len__(), __next__(), __eq__(), __getattr__() in your libraries you really then can focus on pure business logic in the caller code. This is what the "zen of python" calls "beautiful code". 6) the python library is HUGE. Don't reinvent the wheel. Use the standard logger, use the standard json lib. These are more or less the biggest differences that i noticed when coming from java programming. Hope it make sense.
Step 1: find something that you'd do by hand to make money Step 2: write a program that will do it faster or more effectively than you could do by hand
https://docs.python.org/3.4/library/json.html#json.dumps &gt; Serialize obj to a JSON formatted str nope, doesn't say what the return value is at all
Lol. `string` is a module. You're looking for https://docs.python.org/3.5/library/stdtypes.html#textseq
I'll bite. Haven't touched Android for a while, so no idea how feasible some of these are. 1. Use [Kivy's plyer](https://github.com/kivy/plyer/tree/master/examples/sms) to parse SMSes and respond to queries by SMS. One example could be sending directions from one place to the other (using Google Maps) through SMS. 2. Use Android's accelerometer and gyroscope (via Kivy) to control a game/interface on the web. You can build something like a Nintendo Wii system.
consider x-posting to r/learnpython ?
Woops I was looking at something else. My point still stands though, that isn't nearly as clear as it _could_ be. Documentation should be as explicit as possible in my mind and the paragraph sentence form that python docs take is far more difficult to quickly parse than other languages. 
&gt; termux Let me see how I can leverage this for any of my work related activities... 
f1 = set(f1) threw an error. But https://www.reddit.com/r/Python/comments/4t09v6/find_value_in_csv1_that_is_not_in_csv2_difference/d5dnxy5 is working beautifully (and I have to read a lot more Python books to understand the rest ;) )
No worries, we're all human! :) Edit: Except for Reddit bots. They are presumably not human.
Build a media server in which you can store and access your photos an movies over wifi. 
There are nice micro-controller-like extenders (e.g. IoIo), if you're open to spending a few more bucks: https://www.sparkfun.com/products/retired/10748 How do you plan to run Python on it? I'm exploring the possibilities of running HFOS ( https://github.com/Hackerfleet/hfos ) on my device - i do this by installing Debian (possible from the store!) and running it virtualized. (As a complete HFOS setup needs a mongodb for geographical data etc somewhere)
Depends on the job. Im in the process of hiring, both developers will be using Python. I'd not refuse an interview to a candidate if the rest of their resume and experience look good and relevant to the roles. A good company will want capable people that it can invest in and develop (like learning languages and tool kits). If you're any good at java than you can probably learn Python quickly. Good companies will know this. Best of luck. 
no, you fuck off. this is a subreddit for python, (not learning python!) and definitely not your personal support group.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Thanks for the suggestions! I liked the Sympy code generation a lot, and I'm very excited about the future of the Jupyter project. At some point in the future I'd like to see it move towards a fully fledged desktop application, because I find the current browser setup a little hacky, but I could just be nitpicking. I can also recommend the talk on combining Numba and Dask. Plenty of power across machines and multi-GPU setups.
I'd recommend [Scripting Layer For Android]( https://github.com/damonkohler/sl4a), been around for a while and it requires you to download a python module from the same location but it works quite well. QPython is another app, I haven't used it extensively but I've heard good things. 
Can't access the server. gmane.org itself appears to be down, as neither thread.gmane.org nor dir.gmane.org are accessible. EDIT @ 10:40pm (timezone +9.30): Never mind, it's up now.
I wrote a similar project, flask-konch (https://github.com/sloria/flask-konch) which also uses IPython, ptpython, etc. and also allows you to automatically import anything on shell startup.
Sure. Some employers may have hard requirements for specific knowledge, but for the most part a smart employer is looking for active learners. Certainly at my job, we'll happily interview candidates with no Python knowledge. That said, most of the really good programmers I've met are comfortable in at least half a dozen languages. If I see a candidate who knows just one language (even if it's Python) I'm going to want to understand why he hasn't learned more before recommending him for hire. An experienced programmer or CS major who is competent in only one language is rarely a good hire. If he's had an extended period when he presumably intended to become (or already was) a programmer and hasn't managed to learn more than one language, it's likely he won't learn particularly quickly on the job either. First he's probably not very excited about learning languages (or he'd be doing it!), and second, he's probably not very good at learning languages - that's a skill like any other, and he hasn't practiced it. So not knowing Python? Not a problem. Knowing only Java? Not *necessarily* a problem, but a definite red flag that needs addressing.
A similar repo which supports IPython, bpython, ptpython, ptipython there: https://github.com/kxxoling/flask-shellplus
Updated model here, as the one you posted seemed to be retired, as well as its successor : https://www.sparkfun.com/products/13613
You can use [funf](http://funf.org/) to turn the phone into a data recording device. Capture timeseries from the GPS, accelerometer, whatever.
Use it as a camera for home security with ip Webcam. Tinycam to monitor from your other Web devices. 
The reason why I post this thread. I love the debate between experts and dictators on backward compatibility vs making the platform better overall. http://thread.gmane.org/gmane.comp.python.devel/158125 This guy basically sums up my thoughts really nicely edit: the exact technical issue of the problem http://thread.gmane.org/gmane.comp.python.devel/158125
Cool! I'll definitely check that out! I'm a big fan of Numba. If you liked the SymPy Code Generation video you might also be interested in the talk about [SymEngine](https://www.youtube.com/watch?v=03rBe2RdMt4&amp;list=PLYx7XA2nY5Gf37zYZMw6OqGFRPjB1jCy6&amp;index=69): Essentially, they're moving the internals of SymPy to C++ and making thin wrappers for it in many different languages. They are already getting some impressive speed-ups in comparison with the pure-python implementation of SymPy and other CAS systems.
Same here. Got one ticket and cannot go. Also two dinner/party tickets. 
Awesome! I may reference this for some later projects of mine. Do note that these optimizers can also be used for non-neural learning algorithms such as logistic regression and a modified multiple linear regression.
Gotta say, I'm in the "set it hang, but add a setting if they want otherwise" camp. It seems to me we could have a flag to set in os. 
I took an old andriod device and set it up to always display a weather app. I glued some magnets on the back and now have a dedicated, always on, weather station. 
It seems for most Python projects the answer is very simple: you don't. If the user-provided code fits your API, it'll work just fine, be it derived from an ABC or not. If it doesn't, just let it explode - it's not really your problem.
I'm always wander why DDD isn't so popular in world of Python and Ruby (should I blame easy to start MVC frameworks or ducktyping?). Anyway this is my attempt to collect useful links related to DDD in Dynamic world of programming. Any help would be great! I came to this idea after work with big enterprise software which contains 3.5M lines of spaghetti Django code. I suffer so much of it and dreamed of some fresh DDD there.
I'll go! 
I think you meant for these two links to point to specific messages but they're the same URL as the link post (or so it seems). 
Setup a virtualenv and install [jupyter](http://jupyter.org/): virtualenv -p /usr/bin/python3 venv ln -s venv/bin/activate source activate pip install jupyter You can then start it inside the venv with: `jupyter notebook` Grab some data science notebooks and play around: * https://github.com/nborwankar/LearnDataScience * https://github.com/rhiever/Data-Analysis-and-Machine-Learning-Projects * https://github.com/jakevdp/sklearn_tutorial
Download [Anaconda](https://www.continuum.io/downloads). All the data science packages you'll need to get started and the tools for installing packages and managing environments. Probably best to start with the [Pandas](http://pandas.pydata.org/) package and work from there.
I highly recomend Kivy, it's a multiplatform, so whatever you code for your android, it most likely work on a desktop, raspberry pi, windows, Apple, linux etc...
Use its GPS unit for a GPS in your car. You'll need to predownload maps since there's not a data plan though.
Sure would like to be able to lazily click a link to the other episodes in this thread. :3
For anyone else that didn't remember what ABC meant immediately, "Abstract Base Class".
Could you stop? There is no reason for your shit talk
Thanks for the marvelous insight
If you value up time I would argue against using Arvixe. My company used them for hosting before I took over. Servers went down one day and literally never came up again. They claimed it was maintenance and after I moved everything to AWS and cancelled the service almost a month later they tried claiming it was another upgrade window and that it was my fault I could not access the server. Aws will give you a server free for a year if you have never signed up before.
You have no real control over what people do with your code. If they do something stupid, that's their problem.
This is more data analysis related. Python can be the tool. You need to find signals amongst noise. Check out www.quantopian.com for some examples in investment 
/r/learnpython has been made for that, if you would've had a look at the stickied posts, the side-bar, the rules or the notifications
"Pickling" is basically translating Python objects to a form that can easily be saved to disk or transmitted over a network, by using a module called `pickle` in the standard library. "Serialization" is the word commonly used for it - the word literally means "translating into a series". Most data structures in Python are stored as chunks of data in different places in memory, with pointers connecting them. Serialization is taking an object that is scattered around your computer's memory and turning it into a continuous series of bytes that can be saved or transmitted and then converted back to the original object. The thing about the `pickle` module specifically is that it can be used to serialize just about any Python object, including function and class objects, which can contain custom code. To make that work, the actual data stream format of `pickle` is really a very simple programming language, which is evaluated when you load a pickle stream to actually create the deserialized object. It's possible to inject custom code into a generated pickle object to make it run arbitrary Python code at load time, so unpickling data you don't trust is extremely risky. Serialization is often used to save state, though that's not the only use case. "State" is a generic term that describes the things in your program that can change over time, like hit points or the player location in a game. If you save the state of your program during one run, you can then load that state during the next run and continue where you left off. What exactly needs to be saved depends on the program - a lot of the time you can't just save every single variable, as some of them depend on external factors like time and contain no meaningful user facing data. Also, in the future, questions like this are better suited for /r/learnpython.
Could not find anything satisfactory on /r/learnpython . My apologies though. I'll leave the post here and let the mods decide if they want to delete it.
oh, well, in this case it's okay to post it here, I guess :) Sorry to bother \^\^
Explain?
I didnt downvote
[removed]
[removed]
But many Python core developers got tired of the endless security discussions that the [Security-SIG](https://mail.python.org/mailman/listinfo/security-sig) mailing list was created last month. [It's also on Gmane](http://news.gmane.org/gmane.comp.python.security).
Dang, just moments too late. 
Is the ticket up for grabs?
Your best bet is clear and extensive documentation on as much of the project as possible (especially the template-y functions you expect people will over-ride).
OK. Congratulations on publishing a project and I hope to one day see more projects.
Couple comments here have very good points. Anaconda is defo the way to go along with the kaggle titanic tutorial but I would also suggest exploring the tutorials and documentation of scikit-learn as well. It is a really good machine learning library and really easy to use :) 
Sorry then. Somebody did.
tasker + stand == stop-frame / timelapse camera. I'm using a leftover ZTE to do this on a building site
The features to make FSMs actually useful are pretty cool. Do you envision adding support for nondeterminism (or maybe it already does, and I missed it)?
It's not my project ;-) I found it just useful. 
This thread is probably dead, but last time I checked the glibc implementation of pow, I recall it handling x**2 as x*x internally anyway. Not sure if I'm remembering right but I think so. 
[Playlist](http://youtu.be/cDINZlKoGcY?list=PLzKTQagLMaCZLZBJb4wuG4ALwQE2YJtes)
Thanks for posting, I'll be using this in my project on Sudkamp's Languages and Machines.
Thanks for explaining that. What is "duck-typing" and when would you use that over ABC?
Is SQLAlchemy (ORM mode) and Alembic not what you are looking for
trying to avoid adding external dependencies
First, abstract your database implementation from your application or business logic. Decouple the database implementation from the consumers, regardless of what you're using for persistence. *Example:* A *Persister* class knows how to retrieve objects by key, return lists of keys, delete objects by keys, and accepts objects to write them to the database. You may choose to specialize the persister by persisted class type (e.g., a User class is accompanied by a UserPersister). Second, don't write your own persistence implementation unless you absolutely need to. The pattern is well established and you already have your choice of several techniques: * Pickle into a key-value store (like *dbm*) * SQLAlchemy * Django and the model layer * Straight SQL using the *sql* package into a RDBMs (like SQLite, MySQL, or Postgres) * Object to document persistence into CouchDB Third, remember that when you need to write to a SQL database, reducing abstractions and hand-writing or tuning your SQL queries or stored procedure calls will almost always be faster to execute than using a higher level library (except when caching objects).
Scikit-learn's documentation has been tremendously helpful for me as I it gives you the ability to experiment with different concepts really easily.
You can somewhat chose your continuum/enthought poison. [Canopy](https://www.enthought.com/products/canopy/) is also very nice.
&gt; We're all consenting adults.
You can't access a database (apart from SQLite) without external dependencies and whatever you'll come up with will be nowhere near best practice. Just use SQLAlchemy. 
You've got a typo, not sure if intentional :-) Unless it's not your code, of course. &gt;pip install **pocah**
So your b value is the string minus the last 2 characters, in the case of that test, 'xx'. Your while loop is looping an amount of times equal to the length of b minus 1, or once. It finds one instance because the first 2 characters(the only ones it loops over) match. If the string was 'yxxx', it would return 0, and the second two characters there should be counted. You need to rework it so that it loops an amount of times equal to the length of the input string minus two. Also you don't really need b, you can just compare 2 character slices of the input string against a. As far as improvements to what you have other than the fix, here are my suggestions: * The concatenation of b[i] and b[i+1] could just be written as the slice b[i:i + 2] * Use spacing around your operators * variable = variable + 1 can be more succinctly written as variable += 1 * I know that codingbat does it by default but in your own work don't name a variable 'str', str is something built into python already and it will just cause potential future confusion. * Post future questions like this to /r/learnpython instead, this post will probably be removed for violating the sidebar rules. 
That's more likely because they don't know what they are talking about. Usually the community is pretty helpful, but like always this doesn't always follow. Still it is named after comedians, so good humour can't hurt. Edit: Scripting Is also programming - treating it any differently is a recipe for trouble down the line
Yes! Internals of distutils and setup tools are horrible!
Now I kinda get why Java people hate Python. 
That's duck typing for you. Sometimes it's insanely powerful, sometimes it's just ... finicky.
Yea, arrow is missing strict parsing, which is a must in real world situations
I prefer my tcp loggers to be aethists 
Hello, I'm co-chair for the PyDataLondon meetup (3,500+ members). I'd vote for Continuum's Anaconda (it is used by many more data scientists than Canopy: http://ianozsvald.com/2016/06/20/results-for-which-version-of-python-2vs3-do-london-data-scientists-use/ ), I'd also strongly vote for Python 3.5+ unless you have a legacy reason to go back to Python 2.7 for e.g. your employer. The PyData meetups are strong, if you can get to one you'll meet lots of likeminded folk. The videos for each conference are online too (also look for the SciPy and EuroSciPy videos): https://www.youtube.com/user/PyDataTV The non-scientific Python conferences tend to have a scientific track (e.g. PyCon, PyConUK) too. +1 the Kaggle Titanice competition to learn about building a classifier. Do a few other Kaggles and read the forums to learn a lot more - practise is everything. Tools you'll want to learn include sklearn, Pandas, matplotlib+seaborn, Jupyter Notebooks. Good luck!
I was, for a while, on the verge of writting my own dsq with support for kafka. The company I was working at solved the problem by dumping hardware on it, and not my team's time. Still though, I would like to ask you if you have the chance to implement kafka support.
Is there a pyData meet up in Glasgow or Edinburgh at all? 
You already have the URL with the filter arguments. Your 'next' link is the same, but with an extra argument for the page number. Further 'next' links just change that argument.
Do you have a better comparison with rq? it seems like you have this separate library solely for one reason (delayed tasks) http://python-rq.org/ 
https://gist.github.com/ondoheer/a20fc75a4c1382bc3937f62770c4f9e2 Here is a gist to the view, html and pagination macro I recently used.
I recommend numpy for rapidly reading text data. See the fromfile function. But pillow is probably the right tool in the long run.
Do you by any chance know how that is done? All the stuff I've found online hasn't worked for me and I'm not sure if it's wrong or if I'm implementing it incorrectly.
&gt; Why are you trying to parse the file manually instead of using libraries that are designed to work with images? Didn't know those exited. &gt; What have you tried? This: fileObject = open(IMG_0000.pgm, r); print file.read(); &gt; What's the problem? I get this error message: File "processImage.py", line 1, in &lt;module&gt; fileObject = open(IMG_0000.pgm, r); NameError: name 'IMG_0000' is not defined However am looking at the filename right now and it is defiantly correct.
Aw yis.
That NameError isn't saying "file not found", it's saying something closer to "variable not found". Put quotes around the filename. &gt;fileObject = open("IMG_0000.pgm", "r"); &gt; print file.read(); In general, there are a great many libraries for doing things already written. But you'll probably want to start with easier tutorials and see /r/learnpython 
That fixed on problem but now it says that the 'r' is not defined. Also, is /r/learnpython a good place to ask? The tutorials are a little to confusing and have blocks of text with almost no code.
by "container" do you mean "Docker" ?
I started the machine learning course on bigdatauniversity. Using python on Jupyter and pandas from the first lessons. So I think it is a good source for you. If you are not very familier with python You can do some basic learning at codeacademy as well.
For anyone interested in this sort of stuff, I recommend the TI [sensortag](http://www.ti.com/ww/en/wireless_connectivity/sensortag2015/?INTC=SensorTag&amp;HQS=sensortag) and [bluepy](https://github.com/IanHarvey/bluepy). I have a few scripts I could dig up that track and chart the acceleration of the tag and display it in a Kivy app (requires a raspberry pi... never could get BLE working on my iPhone thru Kivy).
DSQ does not manage worker processes. If you need to stop a worker then kill it with your process manager. supervisord and circus have remote facilities for that.
Well, there are hundreds of micro webframeworks out there, almost 100% the same. A dsq with kafka support would be different than celery/kombu because neither supports kafka. But I get your point.
Having everything subsumed inside emacs is great in theory. In practice a good deal of features will break someway or another, some integrations will be lacking, some third party update will wreak havoc a plugin, etc. Then you start hacking elisp and, in truth, it's a lot of fun. It's so fun that someday around your forties you realize you have spent half of your life hacking elisp. These days I prefer to integrate tools at a more general, less tight and thus less cool, level: unix. Because, you know, worse is better. And every day I care less about fancy autocompletion, automatic refactorings, on the fly linting, etc. I run flake8 using quickfix before committing, I run my unit tests using quickfix before committing, simple buffer-based autocompletion eliminates most of the repetitive typing, I keep a running ipython repl which I can feed from a scratch file open in my editor when I need. This might seem backwards to some people but the ipython 5 release hasn't broken my inferior mode.
Sorry guys but high school physics and computers should never be mixed. If you consider that at the high school level a student might have one and only one physics class that class should really be hands on. That means a real physics lab with real apparatus to explore the concepts the high school physics exposes. Now this was some time ago, but I do remember in physics class determining the acceleration due to gravity with a simple machine that burnt holes in a paper strip when a weight was released, one got out a real measuring device and created his data from which the acceleration due to gravity was determined. The value was in the hands on working with equipment and contacting the physical world. Determining an already known physical value was merely a reward for doing things the right way. Frankly this applies to most of what you learn in a high schools physics class, it is the exploration of physics with real apparatus that matters. A process of working with ones hands. We need to remember that the vast majority of students taking high school physics will never pursue it further so the experience of the class should be applicable to a wider array of students. Beyond all of that there is a huge problem, in America anyways, of students graduating from high school and having no practical experiences with machinery of any kind. You try to take a person fresh out of high school and set him to work on a machine, inspection apparatus or anything mechanical and he or she is completely lost. When using something as simple as a tape measure causes problems we have taken a course in out educational systems that is out of touch with reality. Frankly it is the old garbage in garbage out idea, if you can't interact with the real world and tie real measurements of that world all your simulations will be useless. 
Yes yes yes yes yes oh god yes yes yes yes yesssssssssssssssssss oh god yesssss
I just prefer to not respond to ICMP so I don't participate in smurf attacks 
😔💥🔫 
The extrusion changes it from 2d to 3d. I know it's not as cool as Mandelbulber... Can you give an example of what you would consider a true 3d mandelbrot?
Im rather fond of ninja ide
No. People who write stuff like this just have no idea what PyCharm actually does. 
Cool! I mentioned that this would be a cool analysis to my wife in passing as we drove through Småland just two days ago. And here it is!
You'll definitely want to look at pandas. I've written several articles on my blog that might be helpful but this one might be a good one for your particular use case: http://pbpython.com/excel-file-combine.html 
[The Mandelbulb!](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Power_8_mandelbulb_fractal_overview.jpg/1136px-Power_8_mandelbulb_fractal_overview.jpg)
Thank you for your reply. I think it would be easier to wrap one's head around the purpose of the library by keeping an example of how to write fixtures and suggest using an assertion library. In my opinion fixtures are an absolute necessity (and would save me digging through the code to find that there is no built-in support for it). Though I would probably opt for using py.test or the built-in unittest I can certainly see someone coming from JavaScript liking this style of writing tests.
Very cool, your result is way better than the ones on codeposters I think. It's a lot more detailed! 
If the life isn't necessarily your own, maybe you could set up a community radio station in Uganda: rootio.org 
I think the reason it isn't working well is because it's only looking at the data two notes at a time (the dataset's samples/expected values are only two notes each), I've heard that if it looks at "four bar phrases" that it will be able to write better music since a four bar phrase is a much more complete part of the song. I'll probably implement this soon in an updated version.
Make a post on /r/learnpython. We'll help you out.
I respectfully disagree. Using programming is a great way to teach Physics, especially going beyond classical mechanics. In fact, it is nearly impossible to go through an intermediate mechanics course in undergraduate curriculum without encountering a little bit of programming. It is a disservice not to expose young and aspiring scientists to the world of programming. There is no replacement for experiments and problem sets within Physics. It is probably the best way to "teach" Physics, but using programming as a supplementary tool should not be seen as invasive to the current classroom setup. The underlying mathematics found in Physics is just an abstraction, so supplementary material should not be seen as a threat when it is just an additional abstraction, *especially* when explaining the underlying mathematics. A simple mathematical model is extremely powerful for learners in every field, so it is a little disheartening seeing this shallow mindedness. That being said, you might be more experienced with Physics than me. I am just starting out in my career, and still learning a lot everyday.
I found that using a simple programming language to describe orbital phenomena is the best way to demonstrate these concepts, especially when you are able to do it on the fly. Students are really impressed when you are able to model a Lissajous orbit. I would definitely recommend it just to get the students interested in a subject because of pretty pictures. :)
Excellent idea/insight. I look forward to hearing about your changes and improvements! I wouldn't call myself a musician per se, but I have an extensive musical background, and four bar phrases would be a much better idea. You should also consider feeding the machine intervals from the key note as input if that is not what you are doing. So if the key is in Eb major, translate all Eb notes to +0, and treat F as +2 and so on. 
A conda environment creates a separate folder (in your conda root directory / envs / ) that contains a separate python executable and all the dependencies. You just need to point Spyder at it instead of the default Python. I believe you can do this in Preferences &gt;&gt; Console &gt;&gt; Python Executable. If you have an environment called "my_environment", then select the python.exe in the environment, (for example, C:\Users\Deto\Anaconda\envs\py3 ) Alternately, I think you can just switch environments before launching Spyder in the command line. For example, try: activate my_env spyder 
This is cool. What's your other project, if I may ask
I think you misunderstood what I was trying to say in my original post, or it is possible that I did not convey what I was trying to say properly. Regardless, I do not think there is a **substitute** for hands-on experience but that is not how programming should be used in the classroom environment. It should be used to **supplement** the learning the environment, not take away from it. If money were not an issue, it would be ideal to perform a lot more experiments, but that is not what we are talking about. We are talking about the communication of abstract ideas in the classrooms, and I think that the best way to do that is sometimes not a shoddy drawing attempt by a lecturer in a crowded room. I think modeling in the classroom is a great way to overcome the barrier between abstract academic concepts and more concrete examples found in experiments. I am not saying High School students should necessarily learn how to program in a Physics or science class. I think that exceeds the scope of the class, but if a course was taken in parallel, or in anticipation of a course, it could be very beneficial to one's learning. I think tweaking variable parameters is enough to demonstrate a concept without having to go into too much detail. You do not have to teach people how to program in order to show how it works. There is a certain duality that I think could be very powerful to both teachers and learners in the classroom. I do not think the students should necessarily learn the details about programming, but I do think that teachers should make an effort to demonstrate concepts via programming. There is a distinction to be made there. It is an extremely powerful tool that is underutilized in my opinion. 
Just curious, do you think this would have made your life easier?: [https://github.com/tyarkoni/transitions](https://github.com/tyarkoni/transitions)
Too much person of interest?
That is a finite state machine library. How would that be of use to OP?
For the project he is working on in the video. The project is a game implemented as a state machine.
Oh man this is amazing. It looks like a great motivator for you to just start writing code
Soo, this is something I don't pretend to be the most knowledgeable about, but as I understand it: languages usually run on the CLR (Common language runtime). C#, VB.Net, etc. are Jit compiled to byte code. This can be run by the clr on a computer (this is why you have to install .Net 4.5 for example, as you have to have a CLR to execute bytecode). There is also a base class library that ships with the CLR. .Net Framework is a Microsoft implementation of the CLR that is the standard implementation of the CLR. There are other implementations (which are not compatible) such as Mono. Most (if not all) languages that target the CLR are general purpose, so I would say, sure, .Net languages can be and are used for networking. I think [this SO answer is illuminating on the origin of the name](http://stackoverflow.com/a/628883/3799589). &gt;there's also a ton of times when it seems to have nothing to do with networking/web/etc. This is true of any general purpose programming language (which C#, VB.NET, F#, and any other CLR language is). Python is used in a variety of fields too. &gt;What language would IronPython be written in then? C#? Is .NET usually C#? Yes and no. Yes, C#is the most used language in the .Net ecosystem for new code. However, there is a _lot_ of legacy code in VB.Net (because MS had Visual Basic before). F# is starting to get popular too (esp. people who like functional programming). But yes, C# is the .Net language used for IronPython (it is actually only 31% of the code in the ironpython3 github repo, the rest is Python). So, usually, but not always, .Net code is C#.
Yes, if you not beginner. Otherwise I would rather recommend the http://editra.org/ .
I agree, this would really motivate me to write code and also show how much I have progressed in a project
Is it just a script, no GUI? There's an app called Termux which is basically a Linux terminal environment for Android. You can install python in it. Hell, you're not even limited to standard library. I was able to get Flask and a couple extensions and had a stupid little web app running on a development server on my phone. Point is, if it's just a little CLI utility written in python, it would be way easier to run it in Termux than learning something like Kivy.
What you do is basically processing natural language. What's the point if it's not prepared to do that for more than one language?
Sheesh. They're making such a mess by mixing two unrelated issues. The facts: * Linux provides both blocking and non-blocking access modes to its internal randomness pool. * Linux provides access through a character device API, conventionally named /dev/urandom and /dev/random, respectively for non-blocking and blocking access modes. * Newer kernels provide access through the getrandom() syscall API. The GRND_NONBLOCK flag selects between the non-blocking and blocking access modes. Historically, os.urandom() has used the character device API for access. The very name of the function indicates that non-blocking mode was definitely the intention -- even if the wording of the documentation might suggest otherwise. When the os.urandom() method was upgraded to use the syscall API, where available, it was converted from non-blocking to blocing access mode, either intentionally or accidentally. 1. Is a syscall the preferred API (when available) instead of messing with file descriptors and absolute filesystem paths? Yes. 2. Is it a good idea to mix a policy decision (blocking or nonblocking) with a technical decision (which API?), possibly changing the contract of an existing function? Definitely not.
does anyone tried EarSketch?
THanks, [this one](https://github.com/drummyfish/bombman) :)
Honestly that FSM library looks like it adds about as much boilerplate to use as it would take to implement. class Matter: def __init__(self, state='solid'): self.state = state self.melt = self.transition('solid', 'liquid') self.evaporate = self.transition('liquid', 'gas') ... def transition(self, start, dest): def func(): if self.state != start: raise ValueError('same as MachineError in lib') self.state = dest return func Not sure I see much reason to use a library for that unless you want to use the GraphMachine functionality it has to graph them or dynamically generate them from JSON input or something like that. But if you just want to use a specific FSM, that doesn't really deserve a new dependency IMO.
I agree with this.
Because that is usually what happens when you work remotely on large computing centres. I deal a lot with HPC stuff (hence the C/C++ and Fortran), and use Python mostly for data reduction and analysis. And because my typical simulation outputs ~100 GB of raw data, it is **much** more efficient to deal with it on the cluster rather than downloading chunks of it on my laptop for further analysis. Of course, there is certainly a way for PyCharm (or any other IDE) to open remote files, but when you just want to quicky edit something, `ssh` + `emacs -nw` is my weapon of choice. 
rq-scheduler can loose jobs on sigterm and sigkill, manificent.
Pretty cool runs well on a pi 3
&gt; by controversial way why is this controversial?
[removed]
[removed]
 &gt;I respectfully disagree. Using programming is a great way to teach Physics, especially going beyond classical mechanics. In fact, it is nearly impossible to go through an intermediate mechanics course in undergraduate curriculum without encountering a little bit of programming. It is a disservice not to expose young and aspiring scientists to the world of programming. We are talking high school physics here. Beyond that programming isn't something that people need universally. The point you seemed to mis is that are graduating high schoolers that really don't grasp physics and its relationship tot the real world. Part of that is due to abstracting things in the form of software instead of having students learn these things through tactile experiences. Physics is no place for computer based education. &gt;There is no replacement for experiments and problem sets within Physics. It is probably the best way to "teach" Physics, but using programming as a supplementary tool should not be seen as invasive to the current classroom setup. Seriously? How can it not be seen as invasive. More importantly what can programming realistically add to a high school physics class? &gt;The underlying mathematics found in Physics is just an abstraction, so supplementary material should not be seen as a threat when it is just an additional abstraction, *especially* when explaining the underlying mathematics. I suspect this is where we differ fundamentally, students need to work the numbers and not rely upon some pre raffled piece of software to solve their problem. &gt;A simple mathematical model is extremely powerful for learners in every field, so it is a little disheartening seeing this shallow mindedness. That being said, you might be more experienced with Physics than me. I am just starting out in my career, and still learning a lot everyday. My career has very little to do with Physics, at least most days, what my concern is the damage we do to students when they are taught via software or develop software to "experience" physics. High school students need to develop skills to work with devices and learn how to handle things like estimating, the use of fractions, the concepts of resolution and precision. Computers in the physics classroom undermine these goals, students see these computer derived results and think that it is important to specific an answer with 18 digits of resolution. For the most part it is never useful to do so in anything high school related and frankly in most practical applications of physics. So I have to ask, do you really think a student benefits for a computerized physics lab where the computer collects the data and processes it for the student. Or would it be more instructive for the student to collect the data manually and process it manually? Remember we are talking pre college students here. By the way I'm a big believer in beefing up science and math education in our school systems. That might include the use of computers for some of this education, but in my mind it would be a very sad day if a high school students first exposure to Physics was computer based. It misses the whole point of Physics in my mind. 
Is this a visualization of one or more files?
It's just one file that "overflows" to right as it gets longer.
It IS watching git commits :) The video is made out of commit changes made over time.
Yea, it's a bit unfortunate since phobias for snakes is the second most common after spiders (and much harder to treat). I know because I work in Python full time and for hobby projects and my wife has said phobia. It's not great. 
Update: I improved the script so that it now highlights Python and C++ code. It looks like this: http://i.imgur.com/C6j9TUd.png
Wow, hearing Vpython sent chills down my spine! I had to use it in Freshman physics at Carnegie Mellon. This was long before I knew anything about coding (literally, I knew nothing) and it was a mess. I kind of wish I had the time to go back and play with all the things i missed. I am bummed to hear it is no longer really being supported (or at least not being supported well). I wish I could help.
Might be cool, I'll have to give it a try soon. I wonder how it stacks up against `updater4pyi`?
Wrong subreddit, buddy. Try r/smalltalk.
I'd recommend diving into the source code of urlopen 
Used gource to make a "year in review" video to highlight the activity on the project after its first year at work and really liked how easy it was to make a video. 
I did some research a while ago and [pyo](http://ajaxsoundstudio.com/software/pyo/) is the library I like the most. They are closest to professional sound synthesis out there. The fact that it is mainly in C helps a lot. They have a [showcase](http://radiopyo.acaia.ca/) of the kind of sound it can produce. PS: Not sure about Python 3 support though.
ಠ_ಠ Why would you do that? As for Java convert, writing files longer than one screen (ok, let's be honest, two, maximum three) is an abomination to me.
I understand that in Java, it's designed that way, and I would definitely split the project in multiple files if it was something bigger and something I worked on in team, but I feel like this is, for me at least, borderline for what can still fit into one file under my conditions. The game's almost done and I think it will fit into 5k lines which is in my opinion OK for one file to have. It's easier for me this way as I don't have to go back and forth between multiple files in the editor, I just ctrl + F with 100 % certainty that I will find what I'm looking for, installing a new version is as easy as copying one file etcetc.
?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
This subreddit is for things related to the programming language Python, not for things related to snakes. Your comment has been removed, but if it's cute enough, you might try posting to /r/aww
I'll open-source it this evening, promise :) 
***Pyception.***
I don't recall if I have the latest QPython installed but when I open my QPython 3 app and click "Console", it is python 3.2.2 Sadly this is a fairly dated version these days.
Nah never tried it as ive heard its a bit slow and since my dev machine is a pi 3 i needed something lightweight but was nice to use.
Sorry, I just could not find the delete button on the mobile client. So I edited my post to reflect that it was a mistake. Did not mean that your post is wrong.
https://github.com/defnull/gitvid There it is (0x256 is my alt account) I am still rendering a video for bottle.py ... lots of history to render.
thank you
*cringe*
*cringing intensifies* Small life pro tip: keep your trolling account and your srs bznz accounts separate. And for fucks sake don't use emoticons with the latter. Have some respect for yourself.
[Gitvid](https://github.com/defnull/gitvid) is a new tool to visualize source code history. Based on [this](https://www.reddit.com/r/Python/comments/4tc7vv/i_used_python_to_make_a_timelapse_video_of_a/) idea, but written from scratch and with some additional features. The tool is brand new and feedback/contributions are welcomed. Have fun :) * GitHub: https://github.com/defnull/gitvid * Original idea: https://www.reddit.com/r/Python/comments/4tc7vv/i_used_python_to_make_a_timelapse_video_of_a/ * Source of video: https://github.com/bottlepy/bottle Parameters for the video above: --fast --fps 15 --style default I'm currently rendering a detailed version of the same git history (without --fast), but it might take a couple of hours to render 900+ commits. 
 https://www.reddit.com/r/Python/comments/4th31t/another_take_on_source_code_timelaps_videos_gitvid/
It makes no sense to submit to the Smalltalk subreddit. It's like preaching to the converted. The whole point of the article is to sell the idea of Smalltalk to non-Smalltalk developers.
Transposing isn't difficult if you know the key a piece is in and the key to transpose it to. If you're using MIDI's number representations for pitch then transposition is just an addition or subtraction of a constant from all the notes. For example, if the keynote of the song has pitch 65 and you want to transpose it to have pitch 60 you just need to subtract 5 from all the notes in the song (or add 7, transposing upward). On thinking about it some more, transposing might capture more of the scalar context of the songs compared with simply using the distances (though the distances are better than the raw notes). The movement from the fifth of the scale would tend to be different from the movement from the third, etc. (You could also try training separately on major and minor pieces, if you have that data.) Is there a reason you're predicting two notes instead of just one? You could go something like (x1,x2) -&gt; x3, then (x2,x3) -&gt; x4, etc. Also, 30 layers with 30 neurons each seems like a lot of neurons. You might get some overfitting effects from fitting that many weight values. 
Why not have a transactional memory model? 
There's no support for nondeterministic transitions at the moment. I don't have any plans to work on that myself in the near future, but would be happy to consider PRs along those lines!
I wonder how you implement the write lock acquisition? Scatter yet another C macro all over the code base? What about ref counting? Shouldn't you acquire the write lock there as well?
Isn't this a 2-year-old post? Is it in any way current w.r.t. today's Pyston?
Why you would not hire them? I though that problem solving is more valuable than a programming language. 
/r/learnpython The same question has been asked a bunch, plus I'm pretty sure there's information on the sidebar. Cheers.
There is not a best, but there are many good ones. You've listed a couple. Check out Flask and Falcon, as well. Also, /u/Kotch11 is right. This is a question best asked in /r/learnpython
I skipped a couple paragraphs. But most networking tutorials use an echo server just to demo two servers communicating. That doesn't mean it's all they can do. I'm somewhat new to network programming also, but I've recently found crossbar/autobahn to be pretty great for this sort of thing. Crossbar is a WAMP router. Also /r/learnpython cheers.
I know what STM is. It would allow you to eliminate the GIL. &gt; Turns out that it is not very easy to interleave write operations. Are you referring to write-write conflicts, or what?
WTF, numba lets you use multiple cores and the GPU? I thought it just let you compile your code super-easily! 
&gt; Can you imagine the value of a variable changing in between doing a comparison and using the value? This can happen whenever you use threads, whether a GIL is present or not.
That's true, except very unlikely given how threads are used in python, ie just waiting for I/O. With numerics, when you are actually operating on values in the program, cython, numba and dask force you to use a constrained scope. If people could blow through global dictionaries and lists in parallelized code, they'd have to be a lot more careful. I like that the current parallelization tools already force a safe paradigm.
One could write a super collider client in python, no?
I concur. I think it could get better in the future but right now, errrr... no.
I am using MIDI's number representations - Thank you for the advice on how-to transpose. What exactly is the "keynote" of the song? The first note? Other than that it makes perfect sense to me. About the two-note prediction - when i tried to predict one note at a time it didn't really work, and it was a random scattered effect... Two notes was a little bit more 'musically complete' than one note, so i used that for the initial commit. The next version of this program will probably work with 4-bar phrases because that's more complete musically. Also -- how many neurons do you suggest? I'm a high school student in a very (very) rural area so i don't have anyone i could ask, and the amount of neurons i should use in this project isn't really a google-able question.
but how does it show me the memes people post? 
Good work for a few hours learning, keep it up Check [this](https://pyformat.info/) out if you want to try some string formatting instead of concatenating (string + string) 
Absolutely astonishing work! The resulting image is now my wallpaper! Keep it up!
There's already a discord server with r/learnprogramming that's active and helpful. Cool thing is the Python channel is the most active channel there besides general. https://www.reddit.com/r/learnprogramming/comments/4qhja4/on_behalves_of_many_beginner_and_experienced/
I'm not saying engineers should forego learning the essentials of a curriculum in favor of hands-on experience, I'm saying that care should be taken to not forsake the value of hands-on experience. Having a solid understanding of the mathematical constraints is often something you don't need programming for (it has its place, no doubt). True, engineers aren't paid to make parts, but a basic understanding of how they're made can be helpful in knowing when complexity is worth the additional build time. Optimization is an enormously broad term... Are you optimizing for strength? Heat transfer? Schedule? Cost? If 2/3 parts get scrapped because it's over designed is it really optimized? To be clear I'm not at all discounting having solid understanding of the governing fundamentals, that's a given. I'm just saying it helps to have some hands-on experience with what you're asking the shop to make to avoid pitfalls. Maybe I come from a slightly less common perspective in the one-off composite aerospace realm. I'm really not discounting specialization, just sharing my experience.
Something simple you could do I think would be to make a new script based on this one except try adding a loop to it. Make it ask you a question until you input the correct answer. That should be relatively simple and looping is a very useful concept. Something somewhat harder but that is often done as a beginner exercise is to make a number guessing game. Have the script pick a random number and then ask you for your guess a certain number of times or until you get it right. You could also make it tell you if you get close or if you are too high or too low. 
So this is quite amazing, and I was really glad to see that others also honed in on the "2 notes at a time" method being flawed. This is also the 2nd or 3rd post in a couple of days about using python for music, which is really neat. Many of the above answers start to head in the right direction--such as intervals definitely being 100% necessary to consider, even more so than absolute pitches. However, I believe the solution you actually need goes far beyond that. The reality is that you probably need to find a way of actually creating data models for the music theory system, and then train the program in predicting the occurrences of these larger musical structures in a series of multiple predictions about different parameters, which will need to then be interwoven. For example, when you are training the program, it seems to me that you should be training it to categorize and predict a) the harmonic progression b) the harmonic rhythm c) voice leading d) the time signature e) the structure of the counterpoint f)the motives in embedded in the counterpoint. So for example, for it to be trained to predict the harmony as I mentioned in step one, you have to first create the system by which it can correctly analyze and categorize chords. Then it can make predictions not just of individual notes based entirely on trained intuition, but based on a large vocabulary of predefined, formulated chord structures. From there, you can build a framework of your composition by overlaying the harmonic progression with the harmonic rhythm. Then, you could have the harmony made more specific and detailed by specifying the voice leading, which for Bach follows a pretty strict set of rules regarding how to resolve chord tones. (For example, leading tones resolve up, dominant 7ths resolve down, and no parallel fifths or octaves.) Once you accomplish the above, you can probably shoot for imitating one of Bach's "two-part inventions" for keyboard, as they aren't super strictly structured and are basically two voices in counterpoint. Beyond that though, you would need to create python objects that describe compositional forms, such as dance suites, fugues, chorale, etc. You may also want to train it on some kind of "meta" level where you evaluate things like overall length in time, the ratio of sections, the propensity to delay a cadence towards the end of a phrase, etc.. This is really how humans do it. We memorize a ton of relationships and then work within those frameworks to create consistent styles. But within those styles, we find our own intuition and voice, which is the opportunity you are affording your program by incorporating the training algorithms. You still need to define the framework, however, and that is probably better done through conventional programming, rather than training. With classical music in general, there are a lot of formal rules and structures about style that could really be looked up and enforced via standard functional programming. Even without the neural network, I'd imagine you could functionally generate some music that would sound quite "correct". However, I would hope that with the neural network trained on Bach's prolific work, the program would compose things that are not just correct, but actually pleasant and even sophisticated! While you're at it, it would be interesting to train it on music from another composer of a similar style and see how differently the two individual instances compose. Bach Inventions vs. Scarlatti Sonatas should create some really distinct differences despite conforming to the same basic music theory system! The music theory alone will take you significant time to learn. Incidentally, I am working on a library to model music theory systems through python objects. I am still pretty new to programming, but this little project has caused me to think about this problem a great deal over the past week or so. Edited: Spelling, grammar, tone, content. 
Zeromq has bindings for just about everything and is really easy to use (at the simplest level). http://zguide.zeromq.org/py:all
Try giving your program invalid data. What happens if someone types 'A' for their age? Try to come up with a way to detect a non-numeric answer, and then give a suitable message. You will also want to eventually convert the supplied numeric string to an integer, so that your condition can be written `if age &gt;= 21`, not `if age &gt;= '21'`.
For that case, would you need to pickle? I haven't played with it yet, but it looks like you could use pool and run pool.map over slices of the dataframe (i.e., like the first example [here](https://docs.python.org/2/library/multiprocessing.html))
Can I ask where you are learning from? (Just out of curiosity.)
For a complex Python program handling formatting and remote http calls? No, 20mb is downright reasonable.
How is realtime chat a todo? Is that pretty much all slack does?
you need to give more information. Are you running a docker build file? Are you starting up from a docker run command? Are you exposing ports to the outside? Are the database and webserver binding to localhost or to universal IP? Also, /r/docker exists.
Websockets was something I was looking into back when I had thought to possibly port this onto the web, but I leaned more towards implementing it in Heroku before deciding against Web altogether for a standalone application. Now that I'm having trouble with porting my program to an .exe and .apk, I may need to reconsider that stance and take a second look at this. Thanks for the suggestion! EDIT: Also, I wasn't sure if this belonged on /r/learnpython or /r/python since this wasn't a specific question about a piece of code and was more a question regarding program direction. Apologies if this was the incorrect place to post this question!
cool!
Nice job! I'm the guy behind codeposters. Definitely cool seeing someone else's take on this. I also wrote my program in Python :)
Why does formatting and a few http calls have to be 20 mb?
Because rq forces end developer to choose between two bad alternatives. 1. Do lazy import which leads to big overhead for one task and can consume many resources on high loads 2. Do full import and deal with "magic" because forked process inherits db sockets and opened files if code is not aware about this rq feature. End developer do not need to keep this in mind.
Because the vanilla slack program is written using the Electron framework.
The Slack desktop app is built on electron. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Slack is not just a webapp. It has desktop apps as well as an XMPP gateway and IRC gateway.
The desktop app is a web app wrapped in electron shell, which arguably makes it worse. And you lose slack features using the XMPP and IRC gateways.
The best way: A slack plugin for weechat !
Thank you very much for that explanation. I have so much more to learn.
My point is, the desktop app _is_ the web app, it just gets it's own icon in your start bar / dock / application launcher. The desktop app suffers from all the same issues as running it in a browser, and is actually worse since the browser it runs in is out of date, requires it's own install, and is generally slower and more resource intensive than having a dedicated, native desktop application. Edit: After a little more research, it's actually worse than that. The desktop app uses electron which is fairly up to date (assuming they update the slack app everytime there's an electron update) but the OSX client uses MacGap, which uses Webkit. And since google is no longer contributing to Webkit, it's becoming horribly out of date.
Of course, multi-threading is tricky, because if you can access and modify the same value from different threads, that opens a lot of potential for bugs. But what you're arguing for is "don't give us new powerful tools, because some people might hurt themselves". Well, du'h! Of course. If you aren't familiar/educated in the can of worms that is multi-threaded programming, don't use it. Especially if multi-processing solves the same problems for you. But when you want that extra bit of power and possibility that multi-threading allows, it would be great to have it. And what you're mentioning -- cython, numba, dask, ..... are not solutions. They're work-arounds. Yes, of course I can achieve what I want if I try really hard. But that's the problem: it's harder than it needs to be. Instead of having to use memory mapping functionality or rewriting my code in Cython, it would be nice if multi-threading would just WORK without having to jump through hoops.
I agree entirely My only remaining (small) point is that the GIL is not the sole source of slow cPython. The GIL is an optimization, so some other solution would not provide 8x improvement on an 8 core machine. But Numba is more like a 30x-100x improvement over pure python and I've seen it 2.5x faster than numpy acting on huge arrays. It is not a just work around to the GIL. It is an ingenious solution that the flexibility of python provides.
Take it or leave it. All I'm saying is that this kind of tool is only of quite limited use if it's not prepared to support multiple languages. Notice that I say "prepared", that doesn't mean it should already come with multiple languages, it means that the code is written in a way that makes it easy to add new languages.
No emoji No animated gifs No point 
Try creating things in web or use Qt. No need to reinvent the wheel. Web/Mobile is where it is at. That's like 3 different responses you're going to get.
Reusing the shittiest slogan you could find may have been a bad choice to advance your cause. 
/r/learnpython it doesnt matter
You need to run `import twurl` before you access the functions inside the module.
Oh, thanks. I haven't looked at those examples in a while, since before github mandated https obviously!
Related to: https://news.ycombinator.com/item?id=10486541
This is the 21st century, we need hipper chat than just chat! /s
In short -- from my experience Java people tend to know only the Java world and toolset, and I am looking for "Unix Python hackers" -- people who can write a Python parser for tcpdump output, and who know what are design patterns for a Unix daemon. Java people usually are too focused on getting the BeanFactoryMetaClassMumble design pattern kosher from abstract OOP point of view and we don't have time to deal with this shit here. That's one of basic reasons we use Python -- it gets shit done. To be honest, I'm programming since I was 12 and I saw a real world need for a singleton maybe once.
http://docs.opencv.org/3.0-beta/doc/py_tutorials/py_core/py_basic_ops/py_basic_ops.html#basic-ops
Back in my days, our computers had 512k of RAM and we could do full screen animations in Deluxe Paint IV with that, not just send short strings over the network. #old #getOffMyLawn
It primarily comes down to preference. Try both and decide, for me pycharm definitely has the edge.
That code won't work though. You're comparing the sort order of strings, not numbers like you intended. You want to convert to an int. 
See: http://doc.pypy.org/en/latest/stm.html pypy-stm has no GIL. 
I've not worked with SOAP but it looks pretty similar to how you'd work with json - It looks like PartnerProperties is a list containing the APIProperty items? I believe you want to go SentEvent['PartnerProperties'][0]['name'] for that one item, which would be `for APIProperty in SentEvent['PartnerProperties']` for iteration
I default to vim (obsessively optimised) but have to say when it's complicated and I need to remote debug I have pycharm, I'm an open source geek but I gladly pay for jetbrains software (I never thought I would say something like that) 
U can learn The tkinter class, its easy and A better look
Firefox. Or any browser that actually understands security. Which Safari obviously doesn't, since Apple has never given an inch of a fuck about security/privacy.
This is what I did for awhile. I eventually switched over to XMPP and Pidgin since I found Weechat's "window" management to be fairly clunky to use on my Win7 setup. In terms of required setup and memory usage, the two solutions seem comparable so the switch to Pidgin has been a net win for me.
Sorry for the confusion, you are right. It says in the c7 document that it is removed and replaced with transactions.
Very neat! Could you export to KML or CSV with coordinates?
Pycharm is already set and widely used. So go with it. Also /r/learnpython for those kinds of questions.
NO! DIE POKEMON
your line worked minus the iteration. What does the "0" do ? also how do I use your line of code to iterate down to the next level of "API Properties" where "name" = subscriberID
Two things: 1) `simplejson` is faster and doesn't do this. Import as: try: import simplejson as json except: import json as a fall back 2) Check out [this SE post](http://stackoverflow.com/questions/956867/how-to-get-string-objects-instead-of-unicode-ones-from-json-in-python/13105359#13105359). Copied below is their code with some minor changes (converted away from dictionary comprehension for a legacy &lt;2.7 system) def byteify(input): """ Recursivly convert keys to strings From : http://stackoverflow.com/a/13105359 with minor changes """ if isinstance(input, dict): retDict = {} for key,value in input.iteritems(): retDict[byteify(key)] = byteify(value) return retDict elif isinstance(input, list): return [byteify(element) for element in input] elif isinstance(input, unicode): return input.encode('utf-8') else: return input 
Sorry, I misunderstood your previous comment. I thought you meant you got to a https page by just clicking the link and then the demo not working. It doesn't work in Safari either if you go to the https address. I've fixed it now though. Thanks again for pointing this out.
I tested it with answers ranging from twenty-one and up, then twenty and below, and it always gave the correct answer. As suggested, however, I am going to modify it to create an v0.2 that does supply an integer, so someone wouldn't be able to supply false answers.
Ahh okay! Yes it has to be relative to the git repository path.
SlackGitsin means GoAwaySlack in Turkish. I think it's a good name with a stand. 
Try 020, which is valid input for the number 20. Or 2, which is a valid age, but sorts between 19 and 20: &gt;&gt;&gt; sorted(['20', '19', '2']) ['19', '2', '20']
Wait, what? How does this work? EDIT: More importantly, how does that API work? This looks like it's begging for a ban. 
Well done. The beauty of quickly putting together all those libraries and coming up with such solution is great. It is also quite useful on helping me to catch my pokémons :)
I'm eager to see a response to this. Damn, I was wondering what could be done for PokemonGo because I'm just getting back into programming trying to pick up Python and this is freaking awesome.
I would but the problem with Python 3 is that the user has to have Python installed to run your programs, that is not what I am looking for.
It's no different than trying to walk into a certain grass patch, safari zone, cave, surfing a particular spot in any pokemon game because you know certain pokemon are in that area ONLY. I doubt anyone can say they didn't look up where certain pokemon spawn to catch them all? Doesn't ruin the magic for me knowing if I can farm Pidgey in an area for exp or going to find new pokemon somewhere else.
This is definitely in r/learnpython territory. Or take 15 minutes and work through the first couple of pages of this Python tutorial http://www.tutorialspoint.com/python/ . Look for the part about "Data Conversion" (but read the other stuff too). Or just google for "python convert string to integer", and read the top-most link. Part of learning programming is learning how to research these questions for yourself.
Nice commentary. Might consider adding the 'glob' module as a telltale for navigating the local filesystem.
To me, though, this feels like playing hide-and-seek, but you have an app on your phone that tells you exactly where your friends are.
I'm willing to bet that API won't last long
only on 2.7 ...too noob and lazy to get that up when im already on 3 **EDIT** downvotes...downvotes everywhere. I apologize for my lack of knowledge and overall lameness
Seems like `requests`. Starting Python on my computer takes 4.1 MB. `import requests` jumps it up to 13.0 MB. 
Can we just never reveal this to the public and use it on the downlow Edit: Tested this gift. Shit works found a venomoth in my neighbors backyard, even tells when the shits gonna disappear. Down vote this post to hell boys 
If you write a Slack client in assembly language that runs in a few kilobytes, I'm sure we'd all love to use it.
And if you write a program in Python 2, they don't need to have Python installed to run your program?
Ok, so if I load the page within abotu a second of flask starting up I get an empty map. If I refresh the page I get a blank page with "Flask Google Maps Full Map Example" at the top. Issue with the flask module maybe?
From what I have heard yes
Your too lazy to create a single venv?
I don't remember if the first gen had this, but I know that once you had seen a pokemon in gen 2 onwards it would tell you what areas you could catch that pokemon in. But that's not exactly the same as this app.
So then the less scrupulous make dummy accounts?
For starting Flask, for big projects Flask.
REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE NORMIE GET OUT!
Why doesn't it support python3? It makes no sense for it to not work in py3, it's not an old application and all the dependencies support py3. /rant
I'm downvoting your comment as fast as I can capt'n!
I don't follow. Numpy already releases the GIL and so does cython and numba. They are all using all your cores but cython/numba is doing it more efficiently (ie, doesn't have to come back up into python land in between operations). Using multiprocessing would make things significantly slower.
As long as the three step bug is present I'm going to have no regrets
Can't get the app because my phone broke and I'm stuck with an iphone 4 right now, but really cool! works great
Well, he's saying his project is good because it uses little memory, I'm saying that's completely irrelevant in a normal computer
That's what makes it scary to me. Impressed that the person made it, though. Looks cool.
Hope you didn't do it from your account!
Where are you putting the credentials? The get_args() function? Is there some sort of helper file I'm missing or are we supposed to be also putting in our location and step-limit too?
Of course not big boy :-). Smarter than that.
`python example.py -u USERNAME -l 48.8589507,2.2775175 -st 6` * instead of `USERNAME`, put your pokemon club username. if you want to use a google account, you probably have to use the `-a` flag. * the coordinates are for paris, for example * st is the step count. setting it to 6 will do 36 requests for 36 locations. the higher, the bigger your map will be.
I responded [below](https://www.reddit.com/r/Python/comments/4tl1md/live_visualization_of_all_the_pokemon_in_your/d5i9jw6) already. It is brute forcing all locations around a given gps coordinate by "walking" there via the protobuf RPC API. you can specify how big the map will be with the step limit paramter (`-st`). a value of 5 or 6 was big enough for me to walk around for some time. it seems to receive the data from the API: exact pokemon name, location and expiry time in seconds (when it will go away). the script will also periodically update the data (add, remove pokemon) (I'm not the author, just had a quick look at it)
See [the project's wiki](https://github.com/AHAAAAAAA/PokemonGo-Map/wiki) for [installation](https://github.com/AHAAAAAAA/PokemonGo-Map/wiki/Installation-and-requirements) and [usage](https://github.com/AHAAAAAAA/PokemonGo-Map/wiki/Usage).
You have no idea how much important business communication gets done via animated Pusheen gifs and Business Fish reaction images. 
Yes! One could, and one has: https://github.com/josiah-wolf-oberholtzer/supriya (not me). Great idea! Now I'm going to have to check this out myself :)
And if you're not strictly in the mood for python, there is also a LISP interface. I set that up in an attempt to learn LISP and it's actually a pretty cool workflow. https://github.com/byulparan/cl-collider 
I've got it running and searching for pokemon, but I'm a little confused as to how to get the visualizer working, or at least to see the locations of the pokemon
 Traceback (most recent call last): File "example.py", line 26, in &lt;module&gt; from gpsoauth import perform_master_login, perform_oauth File "c:\python27\lib\site-packages\gpsoauth\__init__.py", line 4, in &lt;module&gt; from . import google File "c:\python27\lib\site-packages\gpsoauth\google.py", line 4, in &lt;module&gt; from Cryptodome.PublicKey import RSA File "c:\python27\lib\site-packages\Cryptodome\PublicKey\RSA.py", line 83, in &lt;module&gt; from Cryptodome.Math.Numbers import Integer File "c:\python27\lib\site-packages\Cryptodome\Math\Numbers.py", line 42, in &lt;module&gt; from Cryptodome.Math._Numbers_gmp import Integer File "c:\python27\lib\site-packages\Cryptodome\Math\_Numbers_gmp.py", line 155, in &lt;module&gt; _gmp.mpz_init = lib.__gmpz_init File "c:\python27\lib\site-packages\cffi\api.py", line 810, in __getattr__ make_accessor(name) File "c:\python27\lib\site-packages\cffi\api.py", line 806, in make_accessor accessors[name](name) File "c:\python27\lib\site-packages\cffi\api.py", line 751, in accessor_function raise AttributeError('%s: %s' % (name, e)) AttributeError: __gmpz_init: "function '__gmpz_init' not found in library 'C:\\OpenSSL-Win32\\bin\\gmp.dll': error 0x7f"
Go CUBoulder
You should probably add `credentials.json` to your gitignore.
**EDIT:** I'm an idiot, just found the "Usage" section. Up and running! Hey r/python, I'm somewhat new to the world of Python and open source projects, so with the ethics of this little app aside, this seems like a great learning opportunity. I've downloaded the project and got it on an Ubuntu VM. I started off by creating a new virtual environment using Python 2.7... virtualenv -p /usr/bin/python venv Activated the virtualenv... . venv/bin/activate Installed the requirements... pip install -r requirements.txt Now here's where I'm a bit lost. I tried running example.py, but get the error... File "./example.py", line 4, in &lt;module&gt; import flask ImportError: No module named flask I've used pip freeze to ensure that flask is in fact installed, so I'm a bit lost as to why it won't run, barring me using this project completely incorrectly (very possible). Am I just missing something painfully obvious? Sorry if this is some real noob question, and thanks in advance for any help!
really? I don't see how it is buggy. Have been using it for the last 6 months.
I posted a fix here https://github.com/AHAAAAAAA/PokemonGo-Map/issues/405#issuecomment-233721255
It should. That's cheating, and defeating the original intent of the designers.
There actually was a feature of the pokedex to see which areas had a specific pokemon, but it did require you to have seen one of the type before you could look it up.
https://docs.python.org/3/library/venv.html &gt;The `venv` module provides support for creating lightweight “virtual environments” with their own site directories, optionally isolated from system site directories. Each virtual environment has its own Python binary (allowing creation of environments with various Python versions) and can have its own independent set of installed Python packages in its site directories.
I'm not aware of a specific IDE geared toward pygame. IDEs: Pycharm, WingIDE, Eclipse with Pydev, Komodo IDE... Editors: Sublime, Vim, Emacs, ATOM, VS Code, ... 
Might want to check the timestamp on that one.
Now "retrying_get_profile: get_profile returned no-len payload, retrying" I think the account was finally banned, checking.
You can try to take a look at this libary: https://github.com/benediktschmitt/py-ts3
Ahh good point, didn't look at that too closely. I'll pull out the old wireshark. 
Looking more into Zeromq today, it turns out that the library is only available for python2, not python3, so I won't be able to use it.
The trick is to get outside to find that out yourself ; )
I just Googled "find my coordinates" and received a list full of sites.
Hm seems easy to detect, better profit now.
The Map feature hasn't worked since I downloaded the script maybe 6 hours ago, but I can confirm at the time of posting that the backend command prompt is still chugging away happily, to respond to the people saying this may have been blocked.
with the new reddit app... i find it much easier to upload... 
Update your Google Maps API key 
Please explain how py2 is better?
I'm sorry to leave you hanging. I'm not the author of the lib, I just thought /r/python community would find it interesting. If you want to reach the author, you're better off creating an issue. My impression is that this kind of export is not supported out of the box, but it won't be hard to implement. PS: You can now contact the author in [this thread](https://www.reddit.com/r/Python/comments/4tl1md/live_visualization_of_all_the_pokemon_in_your/d5iqsru).
Does your account still work after that?
Diss. Thank you.
1) better library support still 2) everything py3 does without the annoyance of 3.
Exactly. I knew there was that feature and I wanted to find a link to something saying so but none of my searches brought up worthwhile things. Someone else saying it for me? Even better! Thanks.
You're making random guesses, and they're not working. Instead, try to understand what each of these lines do. What does the `=` operator do? What does the `open` function do? What does it return? Where does the return value go? What does the dot (`.`) do? What does the `read` function do? What does it return? What's on the left of the `.`, and where does it come from? If you can answer these questions, the answer might be a bit more obvious.
I actually have that same spread problem. 2 cities over isn't much better, with the only real additions being common af drowzee and once in a while a spearow or jinx (usually only at night, still not very common)
Yeah.... for now
Py2 is just better at being Py2. Like 1998 is the best 1998 we ever had.
Hey, AHAAAAAAA here! This started out as a coding exercise for myself to see if I can improve the unofficial API that was being worked on, but it morphed into a map. I was curious about the differences in pokemon spawning based on their area and the patterns that emerged and some analytical work. I posted this to the pokemon go dev community Saturday night and it just took off overnight. Now, the goal was to augment and understand the game without affecting the gameplay. I'm guessing this took off for 2 reasons: the tracking pokemon bug and that it's satisfying to see all the pokemon around you. Since I released it, there's been a lot of spin-offs and work done on it. It's all open source and free to use, people can do whatever with it.
Gen 1 had it, you just had to select "Area" in the pokedex. It doesn't give you super accurate data though but rather tells you a section of a route. It does however map ALL locations it can be found regardless of where you caught the pokemon. I don't remember if you gain that information when you see it or only if you catch it. I think the biggest difference is that this solution explicitly tells you where the pokemon is at that very moment. In the actual games you just know that it can be found in that area which is the equivalent of me mentioning I found a Snorlax near my apartment.
Changing one of the variable names might help you to see what is going on: file_handle = file(from_file) indata = file_handle.read() *Explanation:* file() returns a file_handle object, and these objects have a number of *methods* you can use on them, such as read(), readlines() and close(). You can chain method calls together too, using the "." (dot) operator. What you're doing in the first line is storing a reference to this returned object in the file_handle variable. Hint: But you *could* just use the appropriate method directly on the returned object, and not bother storing it, but just the result of *that* call.
Try turning this into one line my_string = "Hi howdy" print(my_string) Similar idea, just the other is using objects and function calls which work the same way as far as assigning variables go. The importance is functionally turning the 2 lines into 1 line will give same result in this context. But the 2 lines may have purpose, might need to re-use your file handle / variable but if not and it isn't unreadable might as well do it in 1 line.
Is there any coordination for the rewrite? I'd love to take a look and help.
Boto3
I've done similar things with the selenium package in python, so yea it would work. Similar versions exist for other languages too, so it depends on what you're comfortable with.
+1 to these observations. But there are more issues with library annotation. I tried to [annotate](https://github.com/scrapy/w3lib/pull/61) w3lib (a Scrapy dependency), with an eventual goal to have type annotations for Scrapy. The most serious issue was that while type annotations were useful for w3lib codebase (no bugs were found, but code became more clear on various string types used), they remain very hard to use for w3lib users, including Scrapy. Even if PR is merged one can't just install w3lib using pip and type check code which imports w3lib using these annotations. It seems the recommended way is to get a right version of w3lib source code, put a copy to some folder, and then point mypy to it using a command-line argument. It is not possible to use a version which is already installed in site-packages; users must maintain a copy, keep it in sync with w3lib updates, all this is manual, and one have to repeat it for each library which provides type annotations (regardless of whether they are inline or in stub files? is this correct?). Alternative way is to contribute w3lib stubs to the central typeshed repository. But then library versions become a huge problem: library author should keep annotations in sync in several repositories, and it is not clear what to do with older library versions. There are valid reasons for that behavior, and it is not too easy to fix. It seems there is some work on it going on in mypy. But without making it straightforward for users to consume type annotations there is little incentive for library authors to provide type annotations. It looks like currently a sweet spot for mypy is a monolith codebase - a project which uses libraries, not libraries themselves; I used it this way as well, and liked the result a lot. My experience with library type annotations is limited, so please tell me I'm wrong about this all :)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I don't have any experience with Pyglet, but I found Tkinter really easy to learn and use, the downside being that the GUI won't look the best. I would recommend using Kivy, which can make your GUI look amazing (harder to learn than Tkinter, but not too much harder) and personally I found it better to work with than PyQt. 
Python and the various associated libraries are good tools for this. 
Didn't compare them, but I did greatly increase the speed of parsing with newspaper. You likely are going to be io limited, which is why I went with the coroutine approach for collecting the articles, then I farmed off the real work to a process pool. https://gist.github.com/rothnic/7bb297b5853c542f73f9 Quick glance at the others and I think it would be hard to compare because of the difference in features. The natural language processing of newspaper is the part that takes the most processor time 
One advantage pyglet has is the extensive text rendering options. If rendering fancy text is important, it's worth a look. Besides that, pyglet would make sense if you want to make a fully custom looking interface. Otherwise, tkinter is easier for generic interfaces.
There are implementations of Python for .NET and the JVM, both of which JIT-compile their bytecode.
Have you been able to obtain some normally hidden game parameters by accessing the API? Things like Pokemon refresh timer, precise detection radius etc.? I'm writing a script to track down a particular Pokemon with as little player movement as possible, but so far I'm only able do it in simulation and without precise metadata and real Pokemon distribution maps I can't really make it useful for actual players. Maybe if I can obtain a large set of real Pokemon distribution data with this to train my AI...
I gotcha. I'll make sure to read it myself, then – thanks for the tip!
If the maintainers of w3lib are down with type hints but the changes in code are too much, how about another alternative instead of typeshed to submit a PR to keep the stubs as part of the main code base. Not sure why typeshed would be necessary unless the project maintainers did want to keep the stubs in the repo as the modules.
I learned a lot from /r/learnpython community. i like Brandon Rhodes talks for instance https://www.youtube.com/watch?v=DJtef410XaM
Nope
I have been playing with the idea of learning haskell for some time . After reading your answer definitively I will learn it. A good amount of cool python features comes from it as far as I am concerned (list comprehensions, etc)
I have seen most of Brandon Talks, In general he is an awesome speaker, He was one of our keynote speakers on this year version of www.pycaribbean.com, He is the reason why I'm reading a lot about software Craftsmanship books lately.
That description is super vague. Also questions like this belong in r/learnpython.
What is six actually used for? I've seen it in passing but never used it
Six is for Python 2 and Python 3 compatibility.
There is nothing like IPython for a full featured REPL.
I really recommend finding a tutor. Haskell is very rigorous. I taught myself Python but was totally lost with Haskell. 
I use Jupyter as my IDE.
http://wxglade.sourceforge.net/ wxglade. Drag&amp;Drop Gui Designer for WxPython
I love pyglet, but this is not what pyglet is for. I'd probably go with a browser based gui, since html/css/javascript is an extreemly well developed and documented gui. Rumi is a python package for this that I haven't checked out yet.
Sounds like Spyder. You can get it through Anaconda package. In Spyder there's internal (ipython console) to which you can send selected line of code (via F9 key) or you can segment you code into chunks with #&amp;&amp; comment, and then execute selecred chunk with ctrl+enter or you can execute entire script (F5, i think, dont really use it) Hope this is what you were looking for
We must be neighbors. 
If you are targeting linux only, best to use pygobject (gtk), it's more pythonic
Yeah I was told from my group the reason for this is because you can't compile python code or something along the lines of that. Instead I would need to program in c
Whoever is giving you advice is completely wrong and should not be giving any advice. Yes python doesn't compile to a fully self contained binary, but there are tools to do so like pyfreeze and py2exe. More importantly even if you are using c or c++ or any compiled language there are many factors if it will run on another person's computer. An application compiled on Windows won't run on Linux or vice versa. If you're dynamically linking it may break too. No matter what you do, you have no guarantee that another users system can run your code. You just target common scenarios or make your project open source and let the user deal with compiling. And not to be blunt, if you're tripping up on things like this, it seems like you're putting the cart before the horse. Make a good program in python3 and don't worry about details like these when you're starting out with programming 
The various operations in my code are fairly small, so the GIL only gets released for very short periods of time. Once the number of threads increases there is lots of contention for the GIL.
Does typing "localhost:5000" in the address bar of your browser work? 
The file will be auto-closed as soon as the reference to it's handle goes out of scope. No need to explicitly close. 
Could you please elaborate on this? I've figured it out except for this. I'm a beginner python guy but I know kind of what you're talking about. Would you mind, in the name of pokemongo, telling me what I need to do? Register with google? How? Modify the apiendpoint global ? I think I found that. Anything else? EDIT: To be clear, I'm almost positive I have it working on the backend. It's logging into my account and looping, but now that I have that working the map won't display. It just says "Flask Google Maps Full Map Example" EDIT#2: Also getting &gt; register_background_thread: not running inside Flask so not starting thread i see it in the code but I'm not sure what to do about it. EDIT #3: Don't think my last edit is a problem. Still no map displaying even though it was displaying before I got my password entered. EDIT#4: I haven't fixed it. The only thing I can tell is that after sometime it'll display the map with nothing on it.
I think it would be worth looking into search engine like [elasticsearch](https://www.elastic.co/guide/en/elasticsearch/guide/current/proximity-matching.html). It covers the actual searching/similarity (preprocessing like tokenization, stemming, lemmatization, stop-words...) aspect of your problem. You could generate synonyms/superlatives beforehand to feed it into the engine. In your edit you mention determining relationships between the words - look into gensim and word2vec.
Actually the file is going to be closed when it's garbage collected, not when it goes out of scope. This means that you now have a file that you opened and didn't close, which you have no way of knowing when it's going to be garbage collected/closed - if you try to open again you might fail, or not and it will lead to interesting/hard to track bugs.
Depends. If that code runs on CPython, then yes, it'll be collected since CPython does reference counting but if it runs on elsewhere that happens to prefer something else, it won't be collected.
Maybe not life changing but very important for me: "A Curious Course on Coroutines and Concurrency" http://www.dabeaz.com/coroutines/
Wow, great!
It's was not the talk per se, but when I saw a video on Pandas it really clicked on how much I could improve my work with it. Miguel's [introduction to Flask](http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) was also a life changer for me.
After setting up Flask and other modules needed to run the script.
While this isn't really python specific and probably actually less helpful in python than other languages, [ZMQ's article on multithreading](http://zeromq.org/blog:multithreading-magic) has changed how I look at threading. Their guide covers the usage of ZMQ, but there's quite a few interesting points throughout in that as well. 
99% chance the code will run on CPython and then you are wrong. But yea, there is that 1% to worry about and it's a bad habit. 
Based on my workflow I can't honestly say I've ever missed a debugger.
https://github.com/AHAAAAAAA/PokemonGo-Map/wiki/Google-Maps-API:-a-brief-guide-to-your-own-key
Thanks, I'll take a look at that.
Python dev at Twitter here. Would love to help. 
Does a book count? Fluent Python &lt;3
Can you use C++, because [Boost::Python](https://wiki.python.org/moin/boost.python/EmbeddingPython) is pretty nice? You can provide a namespace with global variables for modification by functions, and then obtain the results after execution. I do think it's unfair to look for a stack based API in Python. Due to the nature of function arguments, whether by argument tuple or keyword, the call stack is trickier. Lua also enforces how many values are to be passed to a function and returned from a function. It also doesn't have default values, like Python In other words Lua's call stack is more predictable than Python's. The [Lua equiv](https://www.lua.org/pil/25.2.html) of a function call is, in my mind, is pretty similar to the Python example you linked. If your concern is the fact that everything is a PyObject and coercing it to the C equiv, take a look at the [rich set of functions](https://docs.python.org/2/c-api/object.html) you can use to inspect or manipulate the PyObject. I'm not the best programmer, but I've managed to embed both Python and Lua into C/C++ applications, so please feel free to ask any follow-ups. I think [this site](http://www.linuxjournal.com/article/8497) is an excellent resource to get started.
I tried that but it doesn't seem to change the result. What kind of api key should I be using? 
What are good resources for finding experienced coding tutors? I've come across lots of listings for folks who help with homework, but no one who's used to whipping up a course of independent study based on my needs. 
I end up taking the "monkey approach" and just get into typing madly till the code compiles properly (or runs properly for interpreted language). EDIT: Sneaky mods have put a default indentation on your comments. First time posting here and noticed that!
When teaching adults I find it best to relate it to their craft. If you know what subjects they teach then you could find just the things relevant for that subject. Since its just rote knowledge then I don't see you getting too deep in the weeds. Maybe starting with the IDLE and what they can do from there. Also because they are teachers it may be more beneficial to see how they can add it to their teaching style and give them advice on how to use it in that way. 
I suggest Codecademy.
It's fairly easy to setup a full mirror, using a plain webserver like nginx but it's really big. localshop is quite a good solution to only mirror the things you need.
Been using pycharm since it came out, although I'm biased - when I was a Java dev I had already switched from Eclipse to IntelliJ (which pycharm is based on).
It depends on the kind of project. If I'm making changes to an older project with a large codebase, I'll spend a lot of time reading through the code, thinking about the best way to implement it. It's like performing surgery, only a few cuts (lines of code), but they better be in the right places. If it's a newer project, I still spend a decent amount of time planning, but then executing the plan and actually writing the code takes much longer (so much more to write) and so a lot more of the time is spent in the actual code-writing phase.
Thanks, didnt know this was a thing
Beauty! That's awesome thanks. 
&gt;Is there anything 'wrong' with wrapping the entire loop with (try:/ except Exception as err: log_error(err)) ? Will this prevent KeyboardInterrupt from halting the script? You should definitely do that. It will not catch KeyboardInterrupt. In fact, KeyboardInterrupt intentionally does not derive from Exception so that you can do that. &gt;Do I catch the Unicode error right where it occurs, and return None in place of the dictionary, so the calling function has to deal with {result} or None? Or do I let the main routine catch this error and the occasional timeout? Do not do that. If you want the calling function to deal with {result} or None, then wrap that calling function to catch errors. Your desire to deal with the exception in the code and turn it into a return code is understandable, but wrongheaded. Return codes suck. Your function should return its actual result, or bail by throwing an exception. &gt;What is the sanest way to keep track of which files have been pulled, which have been processed, and which threw errors? Keep a sqlite db file with a table where each row is one of your json files. One column is the filename, another is a boolean telling you whether it has been processed. At the top of your script, fill in the table, making sure to handle the case where the row is already present. Query this table for all rows where the success flag is false. When processing, for each file, if it completes, set the boolean. This will enable you to run your script as many times as you want until you handle all errors or die of exhaustion.
That's what I was thinking, but I'm not sure if that is too loosy-goosy for this crowd.
Beauty! That's awesome thanks.
Sublime Text or Atom.
Since you said you're new to programming, I think you might be confused about this a little bit. A text editor usually is just used to write the code, and save the file. Editors for programming give you some help with features like syntax highlighting (different colors for different keywords, makes it easier to read the code). However, if you want to run your python program, the default way of doing this is to open a terminal (also called a 'command prompt' on Windows), navigating to the folder where your python file is (e.g. my_program.py), typing in python my_program.py and then hitting enter.
I used PyScripter when I first started learning Python.
TBH for writing scripts you're better off with a text editor and then to run your scripts on the command line. If you really want a python IDE, look at IDLE.
Well I use Atom for most of my programming stuff, from python to html/js to c++ and rust. It is quite versatile and powerful. script package can be used to output code, but it doesn't do well with input. So I use a terminal for running the commands. Also I use linter (It may be an overkill for beginner). Atom also has amazing auto complete.
Which Twitter office? We're currently working on [this](https://github.com/AHAAAAAAA/PokemonGo-Map/issues/510)
U can get some examples and show them it and talk about it. im only one year with python but i learn a lot on that method 
Thanks, this looks promising. A few immediate questions: Must I use python 3 for this? My current app is python 2. I suppose I can upgrade, as long as my dependencies don't mind (networkx and seaborn). If I get this up running, I will have to be running this on my computer in order for someone else to have access? This is OK to start out, but having to keep my computer on seems less than ideal. Thanks again.
https://eev.ee/blog/2013/03/03/the-controller-pattern-is-awful-and-other-oo-heresy/ This is a sort-of response to Stop Writing Classes. It has the best description of what OOP is that I've ever read. Changed my perspective entirely.
Atom gets better and better with every patch for me. Highly suggested.
You installed your interpreter on C: instead of C:\Users\YOU. Right click Pycharm and run as administrator. Then try to select your interpreter again. The second error. You cannot run a program until you have selected an interpreter. 
He said simplest. Bottle is arguably simpler than both flask and django. 
You don't need hundreds of columns, you need a many-to-many relationship (student to exercise). Those are covered in the official tutorial, I think. Certainly elsewhere as well.
Are you using qgis?
I've tried both 32 and 64 I still get the same error + I tried restarting btw just checked, running PyCharm as admin doesn't help either
/r/Python is not your personal JetBrains support channel
I did it , I uninstalled , installed at C:\users\I , restarded the computer and ran PyCharm as an admin
u can make another table which is like class Category(models.Model): id = models.IntegerField() name = models.Charfield() class Skill(models.Model): id = models.CharField(max_length=7) description = models.CharField(max_length=200) class IXLData(models.Model): id = models.IntegerField() category = models.ForeignKey('Category') Skill = model.ForeignKey('Skill') Students = model.ForeignKey('Students') Check out https://docs.djangoproject.com/en/1.9/ref/models/fields/ for multiple relationships.It is a designing of an RDBMS system generally 
LOL ,why are you wasting time posting useless shit like this? There are some people in here that helped me already so you can take your negativity somewhere else
Welcome to the future! With py3.5 they switched to the newest (more or less at least) iteration of the .net chaos. This new iteration was shipped with Win10, there should be updates for Win7 but probably M$ didn't fix their f*ck up and you need to install VisualStudio to get it working below Win10 (possible that a make big chaos right here... and there is an update or installer). Just use Win10 and py3.5! For more info: py3.5 universal crt
Thank you :) If it won't work after installing all possible updates for win7 I guess I ll switch to a linux , they won't force me to update to win10 :P
Ha just being pedantic. Most people will call `__init__` the constructor 
[Spyre](https://github.com/adamhajari/spyre) looks like it could be good for this.
Use this https://github.com/dddomodossola/remi.
Are you violating any terms of use by scraping data?
I don't think so as we aren't sharing the data and we are not selling it, just analyzing it :)
how would this work without strict types?
Wow, thank you! I think you have it 90% and I wasn't super clear. I realize now that the picture of the table that I posted wasn't all that clear. Skill/exercise are really the same thing. Each skill has been broken down and given an exercise. C-A.21 has a description of "Ordinal Numbers" and a category of "Counting". Here's C-A.21 in the flesh: https://www.ixl.com/math/grade-1/ordinal-numbers I want to be able to get data on every student taking C-A.21, so I can see how they are with their Ordinal Numbers. So Frank will be doing many exercises, like C-A.21, C-A.22, C-B.1, etc. And C-A.21 will be performed by Frank, Sally, Jill, etc. Is that still a one-to-many relationship? &gt; Each exercise can only have a certain skill, but each skill can have any number of exercises attached to it With this IXL system, each skill has just one exercise. "Ordinal Numbers" only has the skill/exercise code of C-A.21. 
Thanks for the information. I'll definitely have a look at Tornado; regarding your second option I think you hit the nail on the head, I have no idea what the second process would need to be (e.g. what Python framework/API/whatever) or what to use as the messaging layer. Any ideas? I like the idea of learning a more involved framework like Django, at least for the purposes of picking up some web dev skills. 
Have you heard of cython yet? How is this different?
Fascinating stuff. Thanks for sharing.
Hmmm... I'll take a look at Kivy, too, then. I had been thinking about learning to use Kivy for a different project, and it hadn't occurred to me that it might be useful for my experimental GUIs.
The terms of service for TripAdvisor say: &gt;Additionally, you agree not to: &gt;... &gt;(ii) access, monitor or copy any content or information of this Website using any robot, spider, scraper or other automated means or any manual process for any purpose without our express written permission; Unless they did indeed get permission for it, it seems that this is violating the ToS.
Did you actually read the terms of service? Assuming you didn't get permission, you are violating them. In the "prohibited activities" section, they say &gt;Additionally, you agree not to: &gt;... &gt;(ii) access, monitor or copy any content or information of this Website using any robot, spider, scraper or other automated means or any manual process for any purpose without our express written permission; 
I'm not saying that VBA is the correct answer/solution for your problem, but I wanted to let you know that Excel *can* count past 224,000. If you're storing the number as an `integer` then that might be your issue. An `integer` can only [store whole numbers from -32,768 to 32,767](https://msdn.microsoft.com/en-us/library/aa164754(v=office.10).aspx). Instead you should use a `long` variable type. Additionally, I'm curious how you're counting and what you're trying to accomplish. If you're looping through your worksheet, then your code is going to be slower than it should be as there are other, more efficient ways of doing this. You don't even need VBA to accomplish this. For example, in regular Excel you could use `=rows()-counta()` or even just the formula `=countblank()` to get blank rows. If you *need* to do this in VBA, then there are a few ways to accomplish this in VBA as well. One of the ways is below. Again, not saying that VBA or Excel *is* the solution, but I don't think that you *need* Python to accomplish what you're trying to do. Option Explicit Sub count_empty() Dim lng_empty_count As Long Dim rng_range As Range Set rng_range = ActiveSheet.Range("A:A") 'Set your cell reference here lng_empty_count = rng_range.Rows.Count - Application.WorksheetFunction.CountA(rng_range) Debug.Print lng_empty_count End Sub
&gt; You should definitely have a top-level catch Again, no. This would defeat the entire concept of writing modular, self-contained code. Each module handles and logs exceptions as it sees fit, raising exceptions (after logging) if necessary. Nothing should rely / make assumptions about modules above it.
Have you looked into the Nuitka project as a possible point of comparison? They're trying to do something very similar.
Lovely attitude. /u/hell_0n_wheels is absolutely correct.
Well this has to be the coolest thing since sliced bread!
- http://kate-editor.org/ and learn how to run your script from a terminal !
Twitter Atlanta. We're mostly a sales / marketing office with a few engineers. Looked over your link. I believe a twitter.common/pants setup would help. We use that internally -- was originally developed and continues to be developed here. Look for the project on github. Basically you get a few libraries for easy file logging (twitter.common.log, logger library on steroids), easy app command lines (Twitter.common.app), and best of all, pex file creation with dependency control. So long as you have a Python interpreter (Python 2.7) installed, the pex will run (and the pex contains all dependencies). Edit: I'll take a look at what needs to be done from your link + throw in some suggestions of my own. 
I work in the travel industry and have heard of people getting sued over stuff like this, not to mention this is a company blog post. Review data is considered property of the company that collected it, and is often licensed to other companies. So yea, if a company is paying to use certain data, and you're scraping it from them, I could see them being mad and suing. Not to mention the money you might be costing them for API queries, straining their servers, etc.
"for any purpose" Your startup needs a lawyer dude.
Ah, cool. Thanks. Just glad to know that I can look forward to watching the talk videos.
IDK about 'legally' but there are several things you could do to draw less attention from sysAdmins. Randomize your access times (minimum once every 5 minutes and at varying rates) and run every connection through a proxy or tor and keep rotating them. The sort of time this will take will increase exponentially but getting sued sounds like it really blows!
-Please please use Mypy style type annotations and not Cython. Mypy has much nicer syntax and also generics etc (also less fragmentation in the ecosystem). +1 On keeping python semantics sane so they can be statically compiled. -I highly encourage you also to contact the mypy team for help and cooperation. I heard At pycon they were discussing doing something like this with mypy (a statically compileable strict mode) so they might be down for cooperation. Also you might be able to bootstrap off some of Mypy's type inference and other features as well. http://mypy-lang.blogspot.com/2012/12/why-mypy-can-be-more-efficient-than.html -Also you can reach out to Dropbox, PSF and Continuum Analytics..they might want to help. -Check out the problem statement outlined here for the just finished python compiler workshop: http://python-compilers-workshop.github.io/ And the proposed solutions: https://docs.google.com/document/d/1jGksgI96LdYQODa9Fca7EttFEGQfNODphVmbCX0DD1k/edit#heading=h.v4f52j6z2px6 Might be good to decouple the backend so you can eventually emit this PyIR and interop with JIT compilers. Though I think it is more important to also consider standalone compilation so apps can be distributed by themselves or compiled to web assembly and run on the web...or would this be tied to the Python VM? -Also I don't think people would optionally mind annotating python classes with types if it buys close to c performance... -Another cool extension would be multiple dispatch. -Also check out these relevant peps: https://github.com/haypo/conf/blob/31a1ac5e338d55a0482702f11b719c46dbec5554/2016-EuroPython-Bilbao/fat_python.pdf 
Nuitka doesn't want to use static type annotations (which is a huge dogmatic mistake IMO). How would you deal with the dynamism of python, particularly django? This trips up things like pypy which put in huge efforts and is only on average 7x faster (ie Classes get atr and set atr at any time etc) 
not only that, but they're doing it with a company blog post. Maybe a company wouldn't go after some random data dude punching away at a keyboard, but i bet they might be more inclined to sent a note to an actual company. 
Maybe you could reduce your footprint by making your dataset from a wider variety of sources. Maybe you could try tracking taxi and public transportation traffic to a given hotel. Or something as simple as the order that the hotel shows up on a Google search for hotels in the area. You could potentially record a lot of data from a very limited number of queries. Just have to use some imagination. 
When you looked at the ToS and read: &gt; access, monitor or copy any content or information of this Website using any robot, spider, scraper or other automated means or any manual process **for any purpose** without our express written permission; how did you conclude that as long as you are just "analyzing" it (and publishing it as content on a your company blog, presumably to generate new leads/clients) was fine? Like, why wouldn't you just withhold the name so it wasn't blatantly obvious you violated a company's terms of use, and you are encouraging all of your "trainees" to violate a ToS, too
Ah, I'm not really representing the problem very well. Its about the generalised problem of having restrictive ToCs on APIs that have no concept of legitmate use. The platform don't own the data/content on the platform, but they own the mechanism of efficiently getting to the content. When a consumer like us (a national collecting institution with a legal mandate to collect content) wants to collect the nationally relevant content that they are permitted nay expected to collect, they can not because the ToC has no provision for permitted mass API usage. 
Yes, I like the multiple dispatch and will probably include that. I also want to have overloaded operator = (one of the things I missed when I was working on Java was overloaded operators, so I want to include those. I;m just not sure how I will enable that in pure python for testing). Yes I was planning on mypy style type annotation so def abs(a:int) -&gt; int: although I want to make vast majority of code work without annotation. I think I will have warnings type output if it can't determine type and it will use variant type (any object, or int). For variant types I am thinking of using tagged ints (so pointer value but treat as 31 bit int value, or 63 bit depending on 32/64 bit compilation). Thanks for the feedback, I hope I get to work on this. I was really pleased with the Java to C++ but this is something I actually want to use myself, so I want a great compiler.
Cool project but... &gt;loaded them into Kibana in order to generate beautiful visualizations. Basically, bar charts :-)
oh i forgot about those. they were mentioned, too. It was overwhelming to think of the options. I'm coming from R, so I used ggplot2. Lots of nuance to it, but one package at least. I'm a data analyst/scientist. I have two main reasons to plot. Simple quick "what's what" looks as I work through my data in a Jupyter Notebook, and then a "clean/obvious/neat" graphic I can put on a slide and project on a wall to make a point to a room. Right now I've been just using the plot methods from a pandas df, which i think are matplotlib plots. 
I believe ggplot2 is available for python. 
Bokeh looked interesting to me, is Seaborn better for regression plotting than it, and better all around? Seems frustrating to have to learn different plotting tools. *edit* reading the Seaborn docs...argh, they want me to know this and matplotlib. &gt; Seaborn should be thought of as a complement to matplotlib, not a replacement for it
there's a few packages where people have tried to adapt it. I'm fine moving on to something native to python. I didn't have it ingrained in memory, I just had a working idea of what it could do, but was still looking things up to make it work. It's the advantage of being a novice.
I was planning on generating a __slots__ type interface automatically for anything set in the __init__ method, so class Point(): # or could be (object) both are the same points = {} # this is a class instance and treated as static def __init__(self, x, y): self.x = x self.y = y Would generate C code equivalent to the following C++ code class Point { public: static DICT points; int x, y; Point(int _x, int _y) { x = _x; y = _y; } }; 
What about classes that add or change attributes at runtime? 
Honestly, no. PyPy is open source. Yes, it's a JIT, but no offense, but why do you think that you can do better? From what I've heard, those guys are pretty smart, and that's and understatement. Why would you be better? &gt; I wrote an assembly language to C++ converter which was used on Sonic 3D Blast, and Javaground's Java to BREW converter which converted over a hundred games from Java into C++ so I have a LOT of experience That sounds like something that's a hell of a lot easier than Python to C++. Fixed types to fixed types is easier than infinitely mutable types to fixed types. PyPy manages specifically because it has a JIT. How will you? How will I use numpy? How will I use C++ libraries? How will I use Fortran? It doesn't sound like you've though enough about the problem. I run an open source library that I'd say is the best interface there is in any language for the application by light years. It's apparently so good that people using other languages (specifically VB and Matlab) write what I assume to be horrifically inefficient SQL wrappers around it. It's 95% me and 5% other people, so I ask with the best of intentions, why is your project better? Why should you be funded? Why should anybody else help you and honestly pay you to bug test your software that's is worse than PyPy? You need developers and you need time to become the best. You also need users, which is a very different problem.
How did you do that? I'm working on that right now but can't figure it out 
Which library?
I would really like a Python to C compiler! This would not depend on libpython would it? If not, I would like this so much because it would really open up using Python to so many new areas. Despite the fact that I have never backed anything on Kickstarter, if you were committed to supporting this for at least a few years, I would back it. Also, I think supporting 3.6 is very wise. Best of luck and keep us posted! :)
I like matplotlib for its versatility. The learning curve is a little steep but that also means it is more powerful. Also if you're a ggplot fan the latest mpl versions have the capability to turn your plots into ggplot style with one line. &gt;&gt;&gt; import matplotlib.pyplot as plt &gt;&gt;&gt; plt.style.use('ggplot') 
A lot of stuff is dynamic on first use, so Posts.objects.filter(user__first_name__iexact="john") for example to filter posts, this uses get atr magic. Where possible I want to run code at compilation time (if code is "pure" and can be worked during compilation it will be), if not then it will cache results (so accessing a value would lead to a pointer sequence (so Posts -&gt; user -&gt; first_name (would be stored as [(type, offset ) ... ] although for this case since it is used in generating SQL that would not be needed.