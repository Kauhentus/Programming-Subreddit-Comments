&gt; Every time I comment about it I get downvoted but it couldn't be more true: no one you meet in a professional setting is your friend. The only interactions you should have are bland, generically friendly, half-hearted attempts at most. Honestly, fuck that shit. The next time I am at a tech conference I am going to bring a "free hugs" sign and make some more meaningful connections and bring a smile to peoples faces. And if the absolute worst happens and ~~aliens invade~~ it costs me my job then so fucking be it. I if I piss of some professional victim undeserving of the title of feminist then I will hold my fucking head high as I go down: at least we had some fun while it all lasted.
&gt; I choose job over joke every time. My wife/child will not suffer for me trying to stand up for this type of a principle. That is perfectly reasonable and a very common sentiment. Unfortunately, much like the NSA, the chilling effects are quite broad and impressive without them ever actually abusing their power. A large part of me is tempted to say fuck it just because I don't have any dependents. :p
totally useless indeed
Could she at some point say that she's being discriminated against and win the legal argument because of this?
In fairness, one of the parties is a public persona with tens of thousands of followers and who has blogged about this publicly. And it's not exactly hard to find out the other party's name, either. As for her reputation, she does seem like an extremely intelligent person, but she also has a history of disproportionate, public attacks against even the people working with her and helping her. https://amandablumwords.wordpress.com/2013/03/21/3/
And he did walk into a job shortly afterwards. He doesn't seem *that* bad an employee.
After reading the article I was going to hold back on the bashing but her latest [tweet](https://twitter.com/adriarichards/status/530109180460675074) confirmed my suspicions well enough. &gt; a bit of a twat Is a bit of an understatement. This woman is a psychotic racist feminist who thinks that she is entitled to something. This is the type of woman who would not think twice about putting a man in jail for a "rape" that never happened. She is dangerous and I hope that any developers who she is 'evangelizing' to know well enough to steer clear; or at least mind their Ps and Qs until she is well out of sight.
Sorry, but I'm not interested in getting more women into CS. Not unles there is also an initiative to get more women into logging and construction **and** initiatives to get more men into nursing.
Is like sales rep for companies that sell to developers I would say. I rather deal with a 'developer evangelist' than with a non-technical sales-person. Also some companies's (I can't english) evangelist are random nice people, and other companies's hire real engineers; like Google's evangelists are crazy interesting. 
I disagree, I think the author did the right thing to alert her possible future employers to her psychotic demeanor by including her real name. She does not have nor deserve the right to be forgotten, and I hope this incident affects the rest of her pitiful career. 
Sweet, sweet karma. Adria got exactly what she deserved once all the smoke and dust had settled. I like how the article delved into Adria's past, almost in attempt to halfway justify her obvious victim complex. The only person being "not cool" was her. And while I'm not glad her employment future may be in jeopardy, I *am* glad she had the opportunity to learn a lesson from it all. I guarantee you she won't be pulling that kind of shit again.
If she wasn't making dick jokes the day before on Twitter then she might have a leg to stand on, unfortunately she's a huge hypocrite with what seems like a complete lack of ability to admit wrongdoing while also playing the victim card. From what I've read of her output due to this thread (many links/blog posts/etc..) she is a terrible human being with zero empathy for anyone that doesn't fit into her small box of "acceptable humans" who seems to be arbitrarily based on sexual organs and skin colour, because that seems logical right?
IMO, yes. The only way to reliably make money doing forex trading is to work for a large organization that brings major resources to bear on forex trading.
I think there is more than enough blame to go around, with almost every party choosing to escalate rather than deescalate.
But it's different because it was in the privacy of twitter and she doesn't own a penis herself so how could she kill anything?
&gt; "when you see someone driving like an asshole, there's a possibility they're trying to fuck with you. But most likely, they made a mistake and swerved in your lane" But its much more likely that they have no consideration for you, and probably don't even know you are there. And thats reallly at the heart of this, and how twitter gets used. For some reason, it allows user to abdicate any notion of empathy, and go straight into rant/irate mode without having to address the ethical questions like "whats the impact of my actions on others" and "what does the world look like from their perspective". Thats largely why I ignore twitter - its a mainly used as a self congratulatory echo chamber. 
If telling stupid dick jokes to your colleagues is shameful then basically everyone employed by my company (both male and female, employee to CEO) should be hanging our heads in shame. Thankfully though we are well adjusted adults that understand the difference between a dick joke and a threat on someone's life.
While nobody deserves rape/death threads from the bowels of the internet (4chan) she most definitely deserves a lot of the backlash she's getting, she acted like a bully not a rational adult.
Yeah and maybe innuendo and sex jokes are inappropriate and make people feel uncomfortable, did that ever occur to you? If I was at a conference to learn about some technology and some creep behind me was saying sexual things, I wouldn't like it or feel comfortable. I'm not from America so maybe we're just culturally different. I personally detest it when people come to conferences or lectures and proceed to hold distracting conversations when you're trying to listen. If you can't sit still and listen for an hour, get up and leave, don't distract people with childish sex jokes and innuendo, seriously there's a time and place, a conference is not one of them. Least of all for unfunny phallic references. Reading comments about this here on /r/Python and elsewhere, wow, absolutely shocking... honestly if Reddit is in any way representative of the culture in America, I feel extremely sorry for women who have to tolerate such insanity in real life.
Like they say no press is bad press. It's entirely possible they got their moneys worth from this incident. For instance, I had no idea her company existed until after this shit hit the fan.
&gt; I've got no idea if her Twitter account was linked to her "real world" identity at that point It was. She essentially created the whole incident by herself with her name smacked bang in the middle of it. Also wrote a post on it on her own public blog.
The issue isn't with the PyCon rules the issue is the way she handled it, she could have asked them to stop it or she could have found an even official to make a complaint to. That is the way responsible adults behave, they do not post pictures on the internet to publicly shame people.
She's over the top, but if I was listening at a conference and some guy behind me was saying sexual things, I'd feel uncomfortable. Also, it's fucking annoying when people make a racket when you're trying to listen. It's rude and inconsiderate, you may not think so, but I do. That said, this Ariana idiot took it too far, Hank sounds like an idiot too, but he didn't deserve to lose his job over it.
[**@adriarichards**](https://twitter.com/adriarichards/) &gt; [2014-11-05 21:27 UTC](https://twitter.com/adriarichards/status/530109180460675074) &gt; When you see a woman of color standing in the room, take a moment to think about her journey to get there despite racism and sexism ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://www.np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
"Author: cancerhermit" Is anyone else thinking this is a Python troll?
kryptobs is only specifically saying she deserves her tarnished reputation on the job market. Which makes perfect sense in the context of the parent comment thread. He is not referring at all to whether she deserves retribution from 4chan, you're inserting that meaning in his mouth and subsequently getting angry about it.
The guy's company is blameless, they did what was expected of them. If they hadn't fired him, then they would have been plastered all over Jezebel and Huffington Post and New York Times, not to mention the thousands of angry phone calls and e-mails taking up time that could actually be spent on better things. Nah, they played it completely right like Github and Mozilla and MIT did (of the more well-known examples).
It really isn't. Do you take every article you read as gospel? The guy's trying to sell his shitty book, no wonder he's written so much drama into the piece.
So If I actually wanna come up with a code I should come up with theory and then put it to the test with a random sampling of tickers? Because I really want to become an engineer in this field, I am working hard to get into a good school as we speak.
I think it's safe to say that the software industry does indeed have a bigger issue: gender inequality. 
What did PyCon do, besides put people together in one room, to allow this to happen? Give Richards a wifi connection so she could post to twitter?
BTW, have you watched this [norwegian top quality documentary](https://www.youtube.com/watch?v=tiJVJ5QRRUE)?
The true nutjobs don't get out into society in order to cause actual damage. This moderate cost a person their job. 
did you not finish the article?
My own impression is that she's sort of 'warped', rather than a "twat" (i.e. terrible person). Some people come out of life warped; some don't. Being warped like that is terribly unfortunate. I think that people like that deserve compassion. But, yes, often terribly unpleasant or harmful to be around. Sad thing is, it's mostly similarly warped people who unreservedly want to be around a warped person--which doesn't seem terribly like a healthy situation for a person. Very, very unfortunate.
Did you read the article? It seemed pretty clear to me that she doesn't feel she did anything wrong. I don't think she's in a learning frame of mind.
There are many good arguments here for and against switching from Matlab to Python. One of the biggest assets of Python in my mind, and something that did not appear to have been mentioned, is that Python is an open-source environment. This has been a reason why thousands have contributed useful python packages. Some of the Matlab toolboxes may be more polished, but I love the spirit that informs the development of software in Python. You become part of a wider movement, and that can be enormously helpful for your own work. In terms of performance I have found numpy and scipy to meet my needs in MRI image reconstruction/processing most of the time. For really compute-intensive tasks you can switch to C-code. It is not too difficult, and as a matter of fact something similar is done with Matlab mex files, when performance becomes an issue. I have not had much success with using GPU's and PyCuda with Python, but it is feasible. My problems have more to do with getting this compiled/installed on the Windows platform. Plus the capabilities of Python go far beyond engineering and scientific applications, which is very useful when you handle big amounts of data and need to push them around, massage them before doing the "scientific" processing. 
Honestly it sounds like PTSD, fight-or-flight.
It speaks to public perceptions about gender relations in the larger tech community.
Nah, that's just Ballmer.
I don't think it takes her publicly admitting remorse to regret that mess. She may be too prideful to say she was wrong, but I think below the surface it was glaringly obvious. Hank bounced back from the whole ordeal quickly, while her entire life got uprooted for quite some time: &gt; “Things got very bad for her,” Hank told me. “She had to disappear for six months. Her entire life was being evaluated by the Internet. It was not a good situation for her at all.” Despite all the drama directed at Hank, people were able to see the real issue with the whole situation: her attitude. And I think after enough scrutiny she probably had to come to terms with it herself. I maintain my opinion that she won't be pulling that kind of shit again.
Mentioning his employer would probably out his identity.
2 males were talking amongst themselves and made puerile joke, a female overheard their joke and this made her "scared for her life" so she tweeted a picture of said males rather than talking to them, or at least an event organizer. The guy apologized for any potential offense caused a day or so later, she refuses to even acknowledge that she did anything wrong while blaming everyone but herself for her actions. The guy found a new job almost immediately, she however remains unemployed. Think that about covers it. Note: I would provide sources but given that the article already did all of that I'll just refer people to the article.
Fuck that bitch. Way to pretend to be important with no actual accomplishments by acting morally superiour to random people and justifying yourself with pseudo-thought-through bullshit.
Can confirm. Haven't touched Python since this fiasco out of fear for dongles forking my repos.
&gt; “Yesterday, I publicly called out a group of guys at the PyCon conference who were not being respectful to the community.” Dat self-righteousness fighting-the-good-fight attitude. Ugh.
Imagine you and your friend were telling dead-baby jokes, and then you found out someone who recently lost their infant child had overheard you. Even though you were obviously just making harmless off-color jokes, you'd genuinely feel bad and apologize, right? Off-color jokes can be fine, but you should be smart enough to know what kind of humor is appropriate for different contexts. The guy recognizes he made a joke that was inappropriate, and sounds like he is genuinely sorry for making it. That's not to say that he deserved to be publicly shamed.
What facts are we missing here? The guy admitted to making the joke.
In my field women make up 70% or so of top researchers. Is my field ridden with gender inequality? should I feel afraid of vagina jokes?
i haven't heard a dead baby joke in a while. got a good one?
That's not what contemporary means. If I only just found out about the Apollo 11 moon landing today that would not make it a contemporary issue to me. It was contemporary two years ago, when it happened. Now it's just a thing you didn't hear about at the time.
&gt;Yeah and maybe innuendo and sex jokes are inappropriate and make people feel uncomfortable, did that ever occur to you? They do not, I work with adults. &gt;I'm not from America neither am I. &gt;I personally detest it when people come to conferences or lectures and proceed to hold distracting conversations when you're trying to listen. sad day for you I guess. &gt;If you can't sit still and listen for an hour, get up and leave, don't distract people with childish sex jokes and innuendo Nobody gets distracted, and if they do, they'll politely tell the person making the comments to not be so loud. Seriously dude, how old are you? &gt;Least of all for unfunny phallic references. It's not my fault you don't have a sense of humor. &gt;I feel extremely sorry for women You're an idiot. Women also make sexual jokes and comments. Stop treating women as a weak sex that needs defending.
FWIW, I took you at your word that you didn't intend to reignite, so sorry if I made it seem like I didn't. I was just pointing out that the headline might've been better worded. And please don't get me wrong -- I think there's plenty of value in the article and ensuing discussion. I also think the book the article is an excerpt of and the whole PyCon incident can serve as useful guides for community leaders.
consider yourselves reported.
I don't know what the correct answer is, or even IF there is a universally correct answer. However, in your example, personally I wouldn't care. I'd just opt to ignore them (KKK, neo nazi, whatever) and carry on. I wouldn't condone their message, but I wouldn't care that they were present. Ignoring people and groups like that is probably your best bet anyway; they just want attention. At PyCon specifically, it's a private-ish event, so whatever committee they appoint to determine what conduct is and is not appropriate will do so. That's within their realm of authority I'd guess. So, then it really depends on the types of people who fill that committee and how much of their personal morals they want to impose on others.
I wholeheartedly agree with what you wrote. I just came up with my example because the OP I replied to didn't give specifics, so I attempted to fill in the blanks. It really shouldn't surprise anyone that women are just as vile, gross, sexual, etc as men are. Given the opportunity and environment to expose those characteristics, and they'll do it! I can't blame them. It seems, to me, that women judge other women far more harshly and "keep them in line" more than men do in society. Men, we really don't give a shit. Just be cool.
Equal opportunity does not mean equal distribution and the desire to make every subset population match the breakdown of the whole population is futile in my opinion. There are many factors leading to which industries are female/male dominated. The software industry is making huge strides for being inviting to women. Whether they choose to participate is entirely their own accord. 
&gt; I hope that one day, she'll grow up a bit and realize that it would have been more effective to just speak to Hank and his friend directly instead of taking her outrage to social media and trying to make it a bigger deal than it was. And if she genuinely felt threatened by "Hank" (justified or not), she could have just reported him to the people running PyCon. If she wanted to publicly express frustration at the "brogrammer" culture she was witnessing, a tweet without the photo could have been just as effective. There were plenty of appropriate ways to handle the situation. I also totally agree with your "noble mindset" comments. A lot of the tech world is unintentionally hostile towards women, and it's a great cause to try and get people to think about how their actions may be perceived by others. But making it into an "us vs them" type of thing just brings everyone down.
I *am* talking about gender equality. If there's no effort to get men into fields, there shouldn't be an effort to get women into fields. Everything needs to be equal. Either a two-way street, or no street at all. If you are trying to get women into CS, you better also be trying to get men into nursing. Or else you're treating people differently based on sex, which is sexism. If you do anything for Sex A, such as creating groups and initiatives to help them into an industry, you better do the same thing for Sex B. And if you don't, I will be activitly against those sexist groups and initiatives.
You're very lucky to be in an academic field where women are adequately represented. In software engineering women make up only about [15%](http://talent.linkedin.com/blog/index.php/2014/03/women-in-engineering-the-sobering-stats). Your field is not ridden with gender inequality; you should not be afraid of vagina jokes. Does this really need to be explained? That men are not being oppressed by inequality, not excluded by sexism, don't systematically make less for the same work, aren't passed over for promotion due to their gender, aren't ignored and interrupted and spoken down to due to their gender, aren't oppressed sexually by predators, etc., etc. If there were no systemic sexism in society or in software development, there would be no issue. There is sexism in society and there is sexism in software development. Telling sexist jokes in a professional setting is inappropriate precisely because it contributes to an environment that dissuades women from participating. You can tell a sexist joke without having that intention, but you can't tell a sexist joke without contributing to that effect.
2 things: 1. Please post questions in /r/learnpython 2. Read the link sir_not_sir posted In short, what you probably want is a "while" loop. It'll look something like this: do_it_again = 'y' while do_it_again = 'y': your_code_here do_it_again = raw_input("would you like to continue (y/n)") This is sort of the most basic loop that will work for you. It can be improved on in myriad ways. Basically, after running the code, you are setting the variable do_it_again to some string. The while statement at the top will run the code again if the string you set it to is "y". Otherwise it will skip all of the code. I initially set do_it_again to y in order to make sure the code is run the first time.
especially if you account for her current views: &gt; ““Maybe it was [Hank] who started all of this,” Adria told me in the cafe at San Francisco Airport. “No one would have known he got fired until he complained. Maybe he’s to blame for complaining that he got fired. Maybe he secretly seeded the hate groups. Right?”
That's SJW propaganda right there. Keep it up, it sure is making it better for all of us.
Niiiiice! That's an excellent, curated list of books. The answers in this thread get pretty close to it, but that list looks like it's being kept up-to-date and very organized.
"Doesnt deserve 4chan." The dude didnt deserve to be fired over a joke either. But guess what happened?
&gt;&gt; Doesn't deserve 4chan but needs to stop dwelling on this one guy's one joke. &gt; "Doesnt deserve 4chan." There's quite a few words and no full stop after 4chan in my post. Why did you snip that bit out and make it look like the whole sentence? Go misquote someone else.
Twitpic I'm feeling uncomfortable with that last comment 
I'm going to reach out to the user in question. Edit: the user has responded and will take action.
I agree. I felt that Hank should have filed a wrongful termination suit. I am not sure of the laws in his area though. The issue I was trying to address in general is this tendency for institutions to become so "confrontation-phobic" and politically-correct that they use heavy-handed (and sometimes draconian) tactics to deal with issues where "common sense" should be applied. I suppose this does assume a level of common sense on the part of the managerial party.
I feel like she will end up in some kind of dramatic situation no matter what other jobs she ends up getting. 
Developer evangelists in general are pretty cool people, a lot of midsized companies have great groups, and SendGrid in particular has had some of the coolest I've met. Their role is to 1. spread the coolness of tech in general 2. spread word about the company 3. get people in tech interested in the company They do this by (generally) being high energy, approachable individuals. 
No, but the issue deals with what one might perceive to be a current social issue
Ehh, Its different, its selling your company to potential hires, its more HR than sales.
Why do you continually delete your comments?
As wrong as she may be, in her mind, she was a victim who showed courage by sticking it up to the middle aged white man who in her mind controls all of society and is always looking for an opportunity to humiliate and belittle her. At least she's not as wrong as all the mens rights people. 
Specifically what situations cause things like this to happen? And what should they do differently?
Only because nobody would fork her repos even with a 10 foot dongle.
This thread is severely lacking in Python-based sexual innuendo.
Tough to separate the two when it's her actions that created and nourished the shitstorm. 
( ͡° ͜ʖ ͡°)
What have you tried, and what form does the input take? If it's typed in, maybe you want something like this: lines = [] line = input('First line: ') while line: lines.append(line) line = input('Next line: ') print(lines) If you get the input from some source all at once, you can use the_input.split('\n')
Shall I take that as a pull request?
Hardware! That's a great idea too.
This is fucking stupid, ~~can we get a petition to get this man his job back?~~ Making a "dongle" joke at a conference is by no means reason for immediate firing, best of luck to you and your family Hank. Edit: Finished reading the article
This is my current code: def GetInput(): global i global j global x global operation #get input input = raw_input() input = input.split() #determine which operation to use and set appropriate variables #SetCol or SetRow if len(input) &gt; 2: operation = input[0] x = int(input[2]) if operation[3] == "R": i = int(input[1]) else: j = int(input[1]) #QueryRow or QueryCol else: operation = input[0] if operation[5] == "R": i = int(input[1]) else: j = int(input[1]) RunOperation() GetInput() What this ends up doing is taking the first input, running everything, and then stopping. Is the best/only way to do this to import all of the lines to memory and then run the functions on each line? This is what I was thinking to do, but I figured there might be an easier way to do this. *edit - In other words, read every line, save in a list lines[], and then run through each index of lines[]?
I don't think people were incorrect in what they were saying. I think you are underestimating the gravity of how you put words in a comment here. Please be careful with how you word things, and understand that now people are going to know that you, /u/Trifectard said "People like this need to be dead." That's the point of the story, and I stand by saying that you missed the point; you need to be careful about what you say, how you say it, and the people to whom you say it to. Both parties learned that to their detriment in this story. 
How would that change anything?
&gt; Just treat everyone the same. I would love to live in that world. That world is not this one. &gt; Just don't be making dumb inappropriate jokes I don't make inappropriate jokes. 
Maybe at some point someone needed to stand up and be a hero and role model; I don't think she was the right person for either role.
He meant that all women nurses are telling vaginal jokes. He is the only male nurse. There's also something to be said about the ability to carve out a niche in a sector of the economy. The ability to see an opportunity in technology and capitalize on it, is pretty level. It would be interesting to get the opinion of some high level MIT type women to speak about this. My internal bias is one geared towards programming and arts. In those two fields it seems like the ability to make something useful is far far far more important than what sex you are. However, if you're just mediocre then I could see the job market being a harder field to navigate.
You know, both of them were wrong. Hank was wrong for telling a joke he knew could be construed as sexist. Sophmoric behavior does not belong in a professional environment. I would not have called it grounds for dismissal, however, that is also really up to the policy and decision makers in the company. Adria handled this in the completely wrong fashion. Instead of snapping her picture and then tweeting it, she should have had the courage to speak up and let Hank know she was offended. She should have given him the opportunity to realize his mistake and apologize for it. In essence, she should have been the bigger person. Instead, she decided to take a more irresponsible route. As for the rest of the article, I don't know that I trust the biased slant against Adria. I don't care that she is black or Jewish. I don't care that I am white and male. What I care about is people treating others like equals, and in this case, it didn't happen. Sadly, social media is all too easy to access and we air way too much of our laundry through it. Edit: Apparently down voted because I didn't join the "What a cunt" circle-jerk. *eyeroll*
You're asking me about posts from more than one user there.
&gt; Point is only, I hope you can see how being the only woman in room full of guys making dick jokes can at least make you feel uncomfortable like you don't belong. But.. Didn't the story say she was making dick jokes herself earlier? And to a much wider audience?
&gt;"developer evangelist" It that like a perl zealot? 
See also /r/KotakuInAction. I will grant that it is getting harder and harder to follow if you don't keep up. 
I know what he meant. It's a silly counter factual. The situation doesn't occur with particular frequency, nor does it have a particularly negative effect on men trying to participate in nursing. The very idea of vagina jokes told by women at men's expense as a workplace trope is barely coherent.
Yeah, it's a different post entirely when you realise that the PyCon in question was actually PyCon 2013.
Do you not care about Jews because you're not a Jew? Do you not care about homosexual, because you're not homosexual? Do you not care about old people because you're not old? Do you not care about the homeless because you're not homeless? I apologize if you're an old, homeless, homosexual Jew, those were just examples. People shouldn't just care about the groups that they're in.
Yeah, it's a soon to be published (March 12) retrospective covering events and the aftermath of events from 2013.
maybe it was elisa media center?
Not entirely sure what you're talking about. &gt; Men telling dick jokes and men telling vagina jokes are both examples of men using a position of relative privilege that reinforces an environment hostile to women. First off, my example had the women telling off color jokes, as they are the dominant gender in that scenario. Both examples could make the minority gender uncomfortable, with IT being women in the minority and nursing being men in the minority. So the idea that jokes about vaginas (being made by women in this scenario) being an example of male privilege that reinforces hostility to women makes absolutely no sense.
It was sexual in nature. "I'd fork that" is obviously a play on "I'd tap that". Still ok, since he did not intend anyone else but his friend to hear it.
Aside from pity towards this woman, this post reminded me how much I enjoy Jon Ronsons books. 
it's so shitty cause this is only going to perpetuate her beliefs about unfairness in the work place. talk about confirmation bias.
Right. I intentionally didn't respond to your example of women telling vagina jokes at the expense of men, because it's a silly example. I instead cited the far more common example of men telling vagina jokes about women, because that actually happens, and actually has an effect on how people participate in the work place. &gt; So the idea that jokes about vaginas (being made by women in this scenario) being an example of male privilege that reinforces hostility to women makes absolutely no sense. Agreed. That would be nonsensical.
I hope you are not serious. 1. It is not hard to talk to a woman and not make jokes that can make her feel uncomfortable 2. The risk of talking to a nutcase that will publicly shame you is negligible. Why not stay at home all day? Getting out and driving your car is more likely to damage you.
It happened at a Python conference.
That entire thing is people talking *past* each other instead of *to* each other. Instead of discussing the valid issues that both sides have and working together, everyone wants a lynching.
&gt; if its above 70% you make a profit (you must use options to get that kind of likelihood) I'm not sure I follow you here. What do you mean by 70%? Do you mean 70% likelihood of the trade being successful? And why do you need to do this with options? Why not buy the underlying shares/CFDs? 
It could also be a bit of Obsessive-Compulsive Personality Disorder (OCPD), with the paranoia, the obsession with following rules (often for others but not themselves), and the complete out-of-proportion response to imagined offences. Also the inability to concede any wrongness on her part whatsoever. I live with an OCPD person at this time and it seems there would be a similar feeling around her of needing to constantly be on guard to avoid setting her off on a tangent. Whatever it is, it's negatively impacting her life and I'd hope there's someone in her life who cares enough about her to convince her to seek help. Of course, if it's OCPD, convincing them of anything can be almost impossible. :-(
I'm not going to become preoccupied with every instance of social injustice in the world. I'd rather live my damn life than worry about poverty in Africa. That goes for gender inequality in fields I have no connection to. I have better things to do with my time, such as arguing with people on reddit. But gender inequality in CS is actually relevant to my life and the people I interact with, and is therefore an issue I'll take time to think about. Don't tell me I'm not allowed to do that unless I commit all my time to every other issue too.
Actually the forking line was reportedly not a sexual joke, but an earnest statement of interest in that project, which Richards misinterpreted. It's not in this article but the guy who said it claimed so in the immediate aftermath.
This news is old as fuck. I can't believe an anti-SJW circlejerk got to +254 on python.
PC run amok. A great story illustrating why the sudden return of political correctness is destructive and useless.
No way, It's not illegal to discriminate against people if you don't like who they are or how their actions and reputation would affect your business. 
meh. she started this on her public twitter and blog. her name is known.
I have been in exactly this situatiion. Fired over some stupid innuendo. Worst yet, it wasn't even *meant* to be innuendo; but it was actually a typo. I didn't even know what the word meant until I looked it up in Urban Dictionary. Conflicted feelings about it. I *do* know how much shit women have to put up with in this line of work and was absolutely mortified when I found out what I'd said; on the other hand....Innocent until proven Guilty, anybody? 
I'm sorry, I'm just not the guy you confused me with. No one likes getting their mistakes pointed out but that's all I did to you, you stretched the meaning of the word "contemporary" to mean finding out about stuff that happened in 2013 and thought I was someone else. We're supposed to be adults. Don't feel like you have to burn me to even the score or something.
When you're in a conference hall, waiting for a talk during the day it's a professional context. 
That's the point, there was only one joke, Richards thought there were two.
The internet's response is almost always out of proportion, to anything.
It *IS* a contemporary social issue...
Guy shamed publicly at pycon loses/lost job is from 2013 but apparently it only happened two years ago. To anyone not up to date on the latest PyCon news, it is a contemporary issue. Keep the goalposts where they are, please.
&gt; I would love to live in that world. That world is not this one. I agree that living in that world would be awesome, and if more people acted like it, we might be closer to it. &gt;I don't make inappropriate jokes. I clearly said that I wasn't assuming you did. It was a reference the article.
lets say for instance the underlying shares have a 50% chance of going up, and a 50% chance of going down. no other data is given. you could sell a put, which expires at a specific price. This gives you the capacity to put your odds at 2/3's chance at making money depending on the volatility, as long as the underlying does not expire below the strike price. I guess the flaw is that time is against your side, but there are ways to exit and be profitable in quick motions, you just have to know the types of option plays available. http://www.optionstar.com/os2k6/sh.htm
The way this article paints the characters as one innocent, and the other as cold, and callus. Seems too cleanly black and white. Maybe that's what it was like, but I can't help feeling distrustful of something that feels so much like narrative.
"Oh but wait, I have compassion, empathy, morals and ethics to guide my daily life choices" [Citation needed]
I guess it was the expense part that's lacking. Even in the Forking joke there was no laugh at any ones expense. If he was gay it would have been a reference to forking from one guy to another. :/
People need to learn to take a joke. The woman should have been fired for her lack of humor!
Which is exactly why, when she meets white men, she thinks about the oppressive behavior they must have employed in order to get in the same room with her.
Yeah, I guess to me those facts seem like symptoms of underlying issues more than a reason to hate on her. I have a family member that has some deep rooted emotional issues and it's the same thing: everything is some kind of cause to save the world and everyone be damned for not appreciating their position. Since I'm used to it I see it as something more sad than annoying I guess. 
&gt; I wish I could let her know that interviews like this, where she comes of as being not right in the head, are just hurting her chances more. But she probably wouldn't believe you due to the other thing…
You can't go wrong with JavaScript. Language of the web.
I knew a few people who work/worked at SendGrid. My major complaint and perception is that SendGrid wanted so desperately to be hip and have a female evangelist that they ignored her online personality. Put another way, it felt like the "token minority friend so I am obviously not racist/mysongist". professionally this was a horrible decision because it dragged an email service company into a problem it didn't create or was responsible for. that said, I don't talk to anyone involved with the company anymore. if they didn't do due diligence on this, what else did they gloss over.
That was the part that really got to me. In effect, she completely removed responsibility from herself. I wasn't there, so I don't know what kind of jokes were being made. I don't know how loud they were, or if they were disruptive in any other way. But the truth is that none of that actually matters. What matters is that she doesn't have any idea of proportional response. If there had been actual threats or violence, okay, getting them fired is more than appropriate, to say nothing of legal recourse. But she strikes me as the kind who berates others for not expressing self-control, then fails to exhibit any self-control in her own responses. A hypocrite of the highest form, and all the worse because she appears incapable of seeing it.
True. Presumably the two guys involved are _almost_ as easy to find as Ms. Richards is. But OPs lament wasn't about practicality.
What's new to me is Richards' quotes, which are as astonishing as anything else she's said. I don't mind a little bit of gossip mixed in with my PEP news and framework tutorials.
Yes. The question was why he apologized, what he did wrong. How what he said could have been harmful. I've nothing to say in defense of the response she chose.
The severe internet harassment is tapping into a deep misogynistic underbelly of the internet -- the same assholes who, depending on who you talk to, either co-opted or were strawmen for Gamergate. Just look at this thread and you can see an occasional comment echoing the "Make her pay, make her obey" sentiment. Disturbing shit.
Run Python 2.7, import your shit and look at the \_\_file\_\_ attribute e.g.: &gt;&gt;&gt; import my.shit &gt;&gt;&gt; my.shit.__file__ '/path/to/my/shit.pyc'
I don't think they are necessarily different. But that is an argument that other industries should get more flak for it. It does not suggest that this one deserves less.
You'll likely need to split the reporting, the e-mailing, and the scheduling. Unlikely that you'll find a perfect solution for your needs which does all of it. 
do u have to be such a cunt
Your packages will always be found somewhere on _sys.path_: {noformat} ~ $ python Python 2.7.5 (default, Mar 9 2014, 22:15:05) [GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import sys &gt;&gt;&gt; for p in sys.path: print p ... /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7 /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload /Users/kteague/Library/Python/2.7/lib/python/site-packages /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/PyObjC /Library/Python/2.7/site-packages {noformat} The default behaviour is to stuff everything into a "site-packages" directory (except for the unpackaged Python Standard Library, which gets spread around to a few other locations). VirtualEnv basically just gives you a new "site-packages" location that is outside of your Python installation. VirtualEnv is still basically messing with your PATH, it's just doing it by changing the PATH that is baked into the Python binary where it looks for packages. Create a virtualenv and you'll notice that the site-packges directory will change from the default Python location to a new directory contained within the virtualenv directory structure. Then as long as you change your PATH to use the new virtualenv binary instead of your system binary, your package location PATH changes too. If you are working on multiple Python projects and each project uses multiple packages, then putting everything into a single global directory can cause a mess. Upgrades can break unrelated applications, etc. To avoid this, people typically create one VirtualEnv for each instance of a project installation they want to work on. 
Not sure what point you were trying to make with the Twitter link. At the time you posted, it was all dog pictures, announcements, and pleasant conversation. Not trying to contest whether or not she's racist/sexist, just saying, that's not a great source to support such an argument. At least not without requiring your audience to do their own deep digging into the feed, for a few pages worth of scroll minimum.
Wow. Sterling rejoinder. 
No, its not. Sales reps have a number they are generally held to...make this much revenue this quarter. Dev Advocates don't have that sort of thing.
What's the difference between a dead baby, and a dead baby joke? The jokes get old eventually.
It kinda surprised me that this was seen by so many male devs as a woman thing rather than a crazy person thing. It's especially depressing that it seems to have affected Hank's view of women.
Thanks! I've put Accelerated C++ on my book list.
Another book that I put on my list!
Thanks for pointing that out! It's nice to know that I don't have to stress about C++14 too much.
Great suggestions! And great re-formatting! :-)
Not even in just public, in the middle of 800 people.
I am very afraid...
Wh..wha..what? 
Thank you! You are the only one to point to a specific tutorial so far.
Great, thanks for the explanation. That makes total sense. My path and pythonpath as they are in my bashrc right now are ridiculous looking. It seems getting the hang of virtual env will simplify them a lot. When I was working on a project using PySide, I did a bunch of whack stuff, I'm sure, just to try and get all the dependencies in order. I'm pretty sure, and correct me if I'm wrong, moving all my packages into a new folder for my virtual envs to access will break everything...should I write a script to scan all the directories in my path and try to reinstall all the packages fresh? Please tell me there's an easier way. 
Yes, it is indeed the joke being presented in the comment you replied to. 
In truth it really depends. I made the assumption you are working on a large enough project where a complete stop and re-write is not viable from a business perspective - look at Netscape. I am looking at a several year time frame here. This might not be cheaper or quicker, but if you have to throw all your customers under the proverbial bus to clean up your codebase, then you will likely end up with no customers before you have a clean codebase. If this is not the case then just do a full re-write. If this is the case then you need to use some method to share functionality, to me REST APIs make sense in a web context. Sort of moving towards a service orientated architecture. You will need to have separate base templates for Django and PHP.
Right, considering had she done nothing but smirked quietly at a bad joke like the rest of the human race. No one would have noticed she was even there and literally everyone would have had a better day. One single ounce of a sense of humor on her part would have resulted in everyone still having a job, everyone would have had a good time at the show.
*m'wogrammer*
The thing is, she was part of the bucket. She made penis jokes herself over twitter. 
Certainly there's nothing wrong with having a laugh, making fun of yourself, or admitting that you have bodily functions. It's all fine. And I agree with you that humor about sex is often not sexist. It's tricky though to introduce the topic of sex into a professional or work environment. What would be fine among friends, is sometimes inappropriate among colleagues. Not everyone wants to share an intimate side of themselves at work. There's a history of men sexually harassing women in the work place. Men have gotten away with this because of their historically greater work place power. Bringing up sex in a way that might seem harmless to a man, might be interpreted by a woman as a pitch for intimacy, a jockeying for leverage, or even an attempt at overt domination or exclusion. The distance between a poorly judged gag and a micro-aggression is not very far. Bringing it back to the Python community, I feel on pretty solid ground saying this: we've built an amazing, helpful, friendly, intelligent community of people interested in programming. Let's make that community as inclusive as possible. Let's not assume that everyone who wants to talk about Python also wants to joke about sex.
This is exactly what small talk is: a social protocol to establish that we aren't gonna kill each other or some shit.
I think u/mguzmann was speaking in sarcasm in a rhetorical question on how to define if a field is gender dominated and what are the jokes we are allowed to tell in such fields. Also I would argue that anatomical jokes are not equal to sexist. A sexist joke is more along the lines of the joke: Why can't Hellen Keller drive: She's a women. The obvious being that she cannot drive because she is blind. Whereas the joke or innuendo: I'd like to fork that repository. Is not inherently sexist by itself, but could be in context. To better explain, would the word 'boy' be racist. Answer it would be on the context, because it has at one point been used in a racist manner. While I do agree that most fields women are not equal in pay or promotions and are generally the oppressed gender, we need to realize that oppression is not done by ALL individuals of different sexes, and if we look at what is dividing us, we are likely to stigmatize each other, make each other feel awkward in professional settings, and not make bounds towards gender equality.
I'm guessing her name had already gotten out so there was no point...
I agree with this. I am conscious of everything I say in public, especially at work, and especially in a work capacity in public (where I represent my self and my employers to the industry). I'm often shocked at what people say in work situations... What folks do on their own time amongst friends/family is different from how people should act in a professional context. I also think there was overreaction, but in a workplace, verbal abuse is always defined from the perspective of the abused. To be fair workplace disputes should also not be posted to social media the way this was. I don't even comprehend most of what people post to social media... it's like writing an email with the world on the To: line... anyways... this situation is upsetting, and I hope folks learn from it.
&gt; If she wasn't making dick jokes the day before The joke was a completely different one. She was telling someone how they should shove socks down their pants to confuse TSA agents. She wasn't turning "dongles" and "forking" into sexual innuendo.
&gt; she could have just reported him to the people running PyCon Didn't she? The guy was approached by conference security about a complaint.
"Hank" wasn't harassed to the extent she was. She has a completely different perspective in all of this.
Yes, but Hank now avoids dealing with women developers, *even though Adria was not a developer*. I have worked with fantastic developers, some of them are women. Now they may not get a good chance at dealing with Hank because he justifiably is afraid of being burnt again. 
I think I missed the part about her talking to the HN mods. That just makes it even more despicable. 
I'm not sure I follow.
So were they hacked or did they do it on purpose or copy/paste something without realizing what they were doing or...? But regardless, thank you.
Ugh. I hope Adria Richards never works in tech again. 
Yeah, I was really expecting a link to a specific tweet or something.
Bravo. In 140 characters there's no room for nuance or the verbosity that's sometimes required to explain the unsimple things in our complex world. The people whose lives are built around twitter learn to see everything as simple black and white matters. The tweeting woman in the article sounded like a clone of some people I know in real life who were radicalized by twitter. All social media platforms have their downsides, but I hate seeing what's happened to all these obviously intelligent people who have become polarized and shut off from others. 
*just* is the operative word there.
I don't understand why making a sexual tech joke is grounds for being offensive. It's not like Hank was being diminutive to any race or gender, I mean "I'd fork his repo" and "huge dongle" are not exactly parodying a minority group, quite the opposite.
Via the THIRD tweet. If she truly feared for her safety, wouldn't it be better to just go find someone connected to the conference in person?
Perhaps she does believe it. Honestly it sounds like she's had some pretty horrific trauma and instead of dealing with it in a healthy way she projects it onto the world in a terrible way.
And that's just it; it won't be because she's a woman, but because she's a potential liability.
I don't know about everyone, but I find driving very stressful. Even if you do everything right, somebody else and make a mistake and someone could die. It puts me on edge. Maybe that's why a lot of people aren't patient when driving.
When I go to the link, I see [this tweet](https://twitter.com/adriarichards/status/530109180460675074) pinned to the top of her feed. Maybe this is what /u/brerrabbit is trying to reference.
[**@adriarichards**](https://twitter.com/adriarichards/) &gt; [2014-11-05 21:27 UTC](https://twitter.com/adriarichards/status/530109180460675074) &gt; When you see a woman of color standing in the room, take a moment to think about her journey to get there despite racism and sexism ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://www.np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
Sounds like she has one of those "blame everyone but myself" personalities. The idea that he "secretly seeded hate groups" is a bit fringe unless she was trying (and failing) to make a joke.
&gt; Being able to muster an internet mob when your feelings get hurt is power. There are plenty of guys who "muster" internet mobs when their feelings get hurt. It has nothing to do with gender. It has to do with the reason behind it. &gt;Are you seriously going to claim that if one of the white guys present at the conference had tweeted that something "bothered" him, the story would have made an impact? You're gonna have to give an example of something a white guy would say bothered him.
Fair enough.
[Supplementary Reading](https://amandablumwords.wordpress.com/2013/03/21/3/). Apparently this is just a pattern of behaviour with Adria (prior to the incident from the article). When something happens that she doesn't like she immediately rushes to social media to stir up controversy rather than just talk to the people involved. I personally know people like this. Everything negative is the fault of someone else, and the world centres around them (according to the way they act; they would deny it if you address it directly). I agree that there is a lot in the tech industry that works against women, but Adria Richards is *not* the leader that such a movement needs (she'll just alienate would-be supporters, and implode at some point).
True, but I do think that the "right to be forgotten" could apply to the transition from childhood =&gt; adulthood though. Should offensive comments from "teen you" affect adult you?
Yes, it's like fight or flight, except it's jog or blog.
"I used both Python(x,y) and Anaconda in a scientific setting, and I would also recommend Anaconda over Python(x,y). " Why? "Working with Spyder will feel much more MATLAB-like" I agree, but after the initial transition, I decided that I prefer just using IPython without Spyder.
&gt; feminist This is such a loaded term that it's almost entirely meaningless at this point. The spectrum of people that consider themselves "feminists" is so broad and covers such a diverse set of viewpoints on issues that directly relate to feminism that it's just calling someone a "conservative" (e.g. Are they just a fiscal conservative? Are they tied up in religion? Are they just "small government" types? Are they libertarian? etc).
On a bit of a parallel note, I'll point out that a lot of people calling themselves feminists are currently pushing a view of rape that basically assumes sex as being something that's always an act that men do to women. Not as something men and women do together, or that women sometimes do to men. There's an extremely perverse undercurrent of thought going around right now where supposed equality warriors are basically taking all agency away from women. 
What would be the point? "Anonymous troll quotes mein kampf on website" I'm pretty sure it happens on reddit regularly. Ah here we go: https://pay.reddit.com/r/WhiteRights/comments/1l2i6v/we_must_secure_the_existence_of_our_people_and_a/ So yes, they do in fact do this on Reddit regularly :|
As a Male developer and a firm believer in Women's rights - This Woman is everything that's wrong with the "Feminism" movement. She took an innocent joke out of context and tried to further her agenda. It's sickening that she holds him responsible for losing her job. What a bigot! Also why would she bring up her ethnicity, like that would somehow give her a "Get Out of Jail Free card"?
She was.
[**@adriarichards**](https://twitter.com/adriarichards/) &gt; [2013-03-11 10:32 UTC](https://twitter.com/adriarichards/status/311062124615041024) &gt; Men can show leadership in the home by doing the laundry c: @lynneluvah @catpoetry @drgoddess ---- [**@adriarichards**](https://twitter.com/adriarichards/) &gt; [2013-01-04 02:56 UTC](https://twitter.com/adriarichards/status/287029788659568641) &gt; Straight White Male: The Lowest Difficulty Setting There Is (In The Real World) - by John @Scalzi http://whatever.scalzi.com/2012/05/15/straight-white-male-the-lowest-difficulty-setting-there-is/ ---- [**@adriarichards**](https://twitter.com/adriarichards/) &gt; [2015-02-17 00:16 UTC](https://twitter.com/adriarichards/status/567477613216550912) &gt; If I could go back to that day at \#PyCon and change anything, I would change to being a White man who objected to dongles ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://www.np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
&gt; Seems too cleanly black and white. What's that supposed to mean? (Richards is black) SRS is up in arms enough as it is - wouldn't want to ruffle that coven any more than you already have, huh. 
But no, you weren't given the chance to explain or apologize or sort out the typo. Out the door and blackballed. 
&gt; She may be too prideful to say she was wrong Dude, she's a woman. They're never wrong, amirite? 
You can be offended. Just don't offend certain classes of people, like women. Remember, it's not what you say, but what they hear that determines your future employment. Doesn't matter what you meant, but how bruised their feelings were. 
Because it puts her ahead of others when they circle jerk around about their oppression. She can tick off black, female, lesbian AND Jewish. And therefore her words carry more weight and her stack of Oppression cards act as a tie-breaker. 
Apparently so do other people that interview her, and that's probably why she hasn't been hired.
&gt; But "I would fork that repo " is a funny insider joke for nerds. So lets come away from this horrifying situation with at least that. This would be where someone like her would try to explain that women get tech too, math isn't hard, and I would lose my shit gut laughing at her saying that with a straight face. The first programmers WERE women. Ada Lovelace wrote the first software engineering. This kind of fluffy-bunny, soft-skills marketing bullshit hanger-on claiming to be all about tech and girls can code too is a complete insult to the genuine female software devs who are too busy cranking out world-changing code to give a shit about a weak joke between two Aspergers cases. 
It was a really obscure reference to the fact that Python's [sort is broken](http://envisage-project.eu/proving-android-java-and-python-sorting-algorithm-is-broken-and-how-to-fix-it/) and thus could qualify as a "Python algorithm".
 while do_it_again == 'y':
Yes! A good SQL tutorial will help me immensely. Gracias, amigo!
Yes, I'm a horrible driver, and I get a lot of people angry with me becuase they think I intentionally cut them off.
No need to be rude.
I hope Adria Richards gets bone cancer, and that's coming from someone who lost a family member to bone cancer. I wouldn't wish it on my worst enemy, but then again my worst enemy is just this annoying kid from high school who just deserves a snowball to the face really.
I think the /r/python boards aren't really a placed for these typres of things anyways but I can't deny it's an interesting conversation topic. I think you're right about the level of appropriateness in the work place. Those people would be considered creepy and or assholes even in an ad agency. Can I give one last bit of perspective? Its interesting that you used the phrases microaggresion and dominance. The thing about men that may be new here is that those two things happen all the time between guys. Even friends. Its like a way of keeping each other on their toes and sharp. Mini competitions are won and lost daily with each other. Kinda surprised it doesn't happen with women? The biggest emotional player in daily business is aggression. At the right time of coarse. But its still aggression. The top of the heap are great at expressing that aggression in successful ways. They might be complete assholes but they did just make the company a substantial gain. Personality types are kinda right some times and the amount of women willing to drop their empathy for success or turn it into a tool are not the norm so men kinda fill the need more often. To be the designated bad cop as it were. I don't know where I was going with that but it was fun talking. See you around. 
Yep. This was a easy win, gone wrong, and unintended consequences spun out of control. Classic PR screwup.
Talking about a big dongle, and "I'd fork his repo".. come on. It was a sexual natured joke with no target.
Article states she worked for SendGrid, iirc. 
Holy shit, really? I'll fork as many repos as I want. And make dirty jokes with my ~~male~~ dev coworkers. ;)
Sorry if it's not clear, but as I said to someone else I was only speaking on her job prospects as that's what the parent commentor had started the thread about.
I think one of the stupid things is, and this is just my opinion, but all this went down at a Coding developer conference, right? In theory, the only people crazy enough to attend these are developers, avid coders, and, in the case of journalists; people who have enough rudimentary knowledge of programming to understand context. If all that holds true, how in the hell does she take coding lingo (I'm no code monkey, but even i understood what the guys joke was.) and somehow switch it around into offensive verbal abuse? Hyper-sensitivity is unfortunately where society is headed; the media's aptitude to blow it out of proportion, and the fact companies have to fear getting their asses sued causes us to promote this idiotic feeling of entitlement. This is like when Dr. Matt Taylor literally advanced human space travel, and was reduced to tears from the torrent of insults cast by over-sensitive idiots. If this is ever going to end, we need to stop holding idiots with Art Majors on a pedestal because they have an opinion. 
That quote, "Men are afraid women will laugh at them, women are afraid men will kill them" has some truth, but can be abused. And it's from a woman's point of view, so it's not exactly uh, objective. but, like I said, it has some truth. I prefer, "Men are afraid their lives will be ruined, women are afraid their lives will be ended."
This needs to be the top comment.
The ethnicity thing was in relation to her right to be offended or to underscore the supposed extent of his transgression. But she worded (or else Ronson quoted) it exceptionally poorly, so that it sounded like she used race to justify her lack of remorse.
It's sexist because only men enjoy sex, apparently.
The way she described it, it made me feel like she thought the guy was going to rape, then kill her in the middle of 800 people. 
If you read the online statements by both parties and what was written by other people who've personally interacted with Richards, you wouldn't feel like this article is out of place. Even if you don't like the narrative, the tweets and blog posts are out there, and the facts are undisputed.
There are many situations where you might not be all your comments once made you out to be. Being a kid doesn't absolve you of responsibility. 
There is no rational way to implement a right to be forgotten that A) Actually works and B) Isn't a profound restriction on peoples right to freedom of expression which is valuable regardless of how or even if this is expressed in your nations law. In addition - It scales horribly - Its impossibly vague and the more intelligent judgement and wisdom required to render a just decision the worse it scales. - Its chiefly valuable as a tool for bad people to hide their misdeeds. It is an idea so profoundly stupid only those who haven't considered how it ought to be complimented ought to believe in it.
This actually saved me a significant amount of processing time once I got it working. The way I was writing to the database was killing my speed.
It wasn't quite that bad; I wasn't blackballed. I was given a chance to explain, but without knowing me personally, how can they tell I won't be more trouble further down the line...?
Great!
&gt; it only happened two years ago. To anyone not up to date on the latest PyCon news, it is a contemporary issue. Look, stop moving the goalposts. You were talking about things that "only happened two years ago" being "a contemporary issue" to someone who wasn't "up to date on the latest PyCon news" in reply to a comment talking about how he "lost", rather than "loses", his job two years ago when I corrected you about the meaning of the word "contemporary". This thread has gone on *ridiculously* longer than it should have. Remember, my actual contention is "*That's not what contemporary means.*" 
'wow' what? It was a sexual harassment lawsuit waiting to happen...
Realistically, you've got to get developers to use your stuff. It's less sales number driven (depending on the company) but if your sales number is bad you're still out of your sales and marketing job. I don't see it as a fundamental distinction to be honest.
Perhaps it should be discussed as well then. Point is, even if there are industries out there that suffer the same problem (but reversed), the problem of this specific industry still exists, and should be discussed. 
This is a decent overview, but what I really want to see is a tutorial on how to serve an app from a subdirectory rather than from / or a subdomain. Those things are generally easy, whereas I have struggled endlessly to figure out how to use a subdirectory without using blueprints and explicitly specifying what the subdirectory is.
Mental trauma is never a non-sequitur. It affects people's lives more than we would like to admit. Our characters and behaviours are pretty much a wall built around past traumatic experiences. I understand what you're saying, though: the article ends up trying to portray Adria a certain way to the reader. "That's not cool"?
Yeah she's off the wall. I remember at the time there was a tweet from Microsoft Architect Steve Marx who weighed in on the issue (In her defence): This is truly getting out of hand … (I mean the lynching, not the jokes.) To which she bravely responded: and I'm upset I had to listen to the stuff behind me yesterday. I'm Black. Has anyone in your family been ever encountered lynching?" followed by @smarx Straight White Male: The Lowest Difficulty Setting There Is 
Yeah, your contention is misguided. Its not that complicated.
I feel so sorry for the guy, he had fucking kids and he lost his fucking job cuz someone fucking called him out because she had a problem with her own fucking values and life problems. Also fuck that guy's company for firing him. Firing him was not the way to do it. It shows that you are a spineless fucking dipshit who don't give a fuck about your employees. Had the company stood by him it could've gotten national wide coverage, but being the spineless fucking dipshi they were I don't even know what they do. It's fucking hilarious she got fired and bitches and whines about it. That's fucking how it works you stupid fucking idiot. She has a fucking problem that she takes out on others and whines about it and nobody now gives a fucking shit. what a fuck state of affairs I mean are these fucking adults? 
Sendgrid retreats!
I read it. I just think it's bullshit. Companies just don't give away $100k for trading with no strings attached. They're not running the service for free. Don't be a native prick. 
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Hanlon's razor**](https://en.wikipedia.org/wiki/Hanlon's%20razor): [](#sfw) --- &gt; &gt;__Hanlon's razor__ is a saying that recommends a way of eliminating unlikely explanations for a phenomenon (a [philosophical razor](https://en.wikipedia.org/wiki/Razor_(philosophy\))). &gt;Never attribute to malice that which is adequately explained by stupidity. &gt;As an [eponymous law](https://en.wikipedia.org/wiki/List_of_eponymous_laws), it may have been named after Robert J. Hanlon. There are also earlier sayings that convey the same idea. &gt; --- ^Interesting: [^Razor ^\(philosophy)](https://en.wikipedia.org/wiki/Razor_\(philosophy\)) ^| [^Good ^faith](https://en.wikipedia.org/wiki/Good_faith) ^| [^Hitchens's ^razor](https://en.wikipedia.org/wiki/Hitchens%27s_razor) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cp74st8) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cp74st8)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
After reading to the article and the comment here I can still not understand what he has done wrong. He did everything right. He even apologized for something where there was absolutely no reason to, *just* to please someone. I feel sorry for what happened to him. And strangely for me (because my feelings against any extremist viewpoint are usually negative) I feel even more sorry for the things that happened to *her*. She clearly has some problems and probably needs some professional help. On the other hand I know that she will never get some (because she will absolutely refuse) and the whole thing only made her psychological problems worse. Fucking internet hordes...ruining everyone life.
Please define "crash". Does it give you a stacktrace, windows error message or something else?
They created the problem when they didn't properly vet their employees and hired someone who was an obvious problem waiting to happen
I mean, pay attention to context obviously in business settings, but I really don't think this is a huge problem. This is the crazy extreme. You're probably more likely to get hit by a bus walking down the street than end up embroiled in a scandal like this.
There *are* rational reasons to be afraid of dogs though. A dog can physically harm you or even kill you. If your mental state is so damaged that you feel in physical danger when overhearing a fairly tame joke between two friends then you should be seeking professional help.
I'd be surprised if they didn't remove it at her request. HN has gone full sjw lately. I got told not to comment anymore because I was making HN and the tech industry unsafe for women. I was also told that I should really think about talking to a female friend or family member about what life is like for women in tech since I clearly had a poor understanding of it. Wtf. I'm a female electrical engineering student...
Egalitarianism is a nice word, and you get to laugh at radfems who say "feminism *is* Egalitarianism" 
Yea, I'll never quite understand why women like to pretend that they don't make disgusting jokes when talking to men.
It doesn't even make any sense. Women are way less likely to be murdered than men in the first place. It should be more like "men are afraid they will be killed, women are afraid someone might say 'hello' to them."
That'd really worrying to me, as a technical female who hates sjws. I'm seriously contemplating sticking with hardware as a career instead of software because sjws have made far less inroads into the hardware community. Meanwhile, I've already had trouble with sjw feminists at companies like mongodb giving me grief about my gender, choice to study a technical field, and decision to identify as egalitarian. I feel like I'm walking on eggshells around those people and don't won't to have to constantly worry about workplace bullying.
/r/learnpython please
The article was by Susan Sons in linuxjournal. Excellent piece. http://m.linuxjournal.com/content/girls-and-software
Put that in context. Do you mean that this is what she thinks? Because that's probable given that she's discredited people's opinions because they were white males
&gt; Mixed race people have a ... Hey guy, you are wrong. Your sentence is really racist. I think Adria Richards is a bad person, but it doesn't apologize your sentence.
Her comments came across as misandric and racist. He's a white guy and thus had something to fear from him... Making a quiet, stupid joke to his buddy to his side? "I'm a black and Jewish woman, I felt as if I were endangered by him." Yeah, no. 
Sorry, I deleted my post and put it in the correct place.
So one is comparing socks to a penis and one is comparing a small bit of plastic to a penis, sorry but I don't really see the difference both are dick jokes and both are about as imaginative as each other. And as stated multiple times in the article and it's sources she was the one making the sexual connections to forking repos...
Did you "get told" by some sort of admin at HN, or just a random commenter? There's a big difference between the latter and admins removing a post for the reasons you suggest.
Hello, thank you for your reply! I was able to screencap this [error message](http://rl.kdv4.de/wp-content/uploads/2015/03/errors.png) 
And the company thought you were the problem, over a TYPO? Yeah, you dodged a bullet there. I'd have quit. 
&gt;Did you "get told" by some sort of admin at HN, or just a random commenter? Both. I actually had my email set to invisible and the mod looked it up with his mod powers. He sent me an email telling me I would be banned if I participated again in any discussion on "women in tech." 
I have now tried (...use_unicode=True, charset="utf8", collation="utf8_general_ci"...) in cnx = connection.connect() and still have the same problem. My database is using utf8_general_ci.
&gt; It's fucking hilarious she got fired and bitches and whines about it. You don't get it: as a "social justice activist" (deliberate quotes, she's no Martin Luther King), she believes nothing she does is worthy of reproach. You know she was there as a "social activist"? She might have been collecting a check from SendGrid but what she was really looking to do was find men to hurt, because that's how these people work. She was going to be the hammer that SMASHES the man-baby club of programmers and brings them into line! And cannot understand, why after completely DESTROYING SendGrid's viability with the very community she was PAID TO EVANGELIZE - she cannot find another job. First of all, because "developer evangelists" are few and far between - most companies need people who can actually do real, productive work - and also because nobody hires someone who is a cancer. But then again, in her world, it's all because those mean peens like to oppress poor little her. 
&lt;3
You must have missed the required "sexual harassment" training video at your work for all male new hires: the one that shows only young white men saying dickish things to other employees. It's not what he said, it's what she heard. She could have misconstrued ANYTHING and gotten her fee fees hurt. And she would have marched those hurt fee fees right down to HR or to an internet lynch mob. Welcome to the new, feminist Brave New World. 
Pycon in a month now... so beware what you say and to who... Ideally don't talk to anyone there because actually anything be offensive to anyone.
&gt; Are sexual jokes inherently anti-woman now? Only when men make them. That makes it verbal rape and oppression. Whereas she can joke about the penis size of another colleague, and that's different, because well that's her being sarcastic about someone else's penis, and as a woman, and someone of color, and a lesbian, and a feminist, and an activist, she is never ever ever ever ever to be called to account for doing the things she doesn't want other people to do because intersectionality and oppressor class and blah blah blah blah blah. It's why I don't socialize with women. Ever. I'm polite to them, but I don't befriend them, don't join them after work at office parties, or even do anything other than politely acknowledge them with a head nod on the way into or out of work. And neither should any man. Oh but wait, that would be somehow wrong and toxic and so forth and wrong. Ya just can't win. 
Yesterday I read a blog post on "Black Girl Dangerous" in which a girl expressed horror at being fathered by a white man. The guy joined the peace corps, went out to Asia to help the place out, fell in love with a woman there, and had kids with her. In the daughter's mind, he was a white colonialist, there as an imperialist to impose his culture and his country on her should-be-pure-and-nonwhite land. And a racist. And a white supremacist. Not some hippie who was trying to make a better world, but some kind of Christopher Columbus, I colonize this place with my evil seed type of dude. He's not saying people of different races are evil, he's saying that because of the way human groups work, they often face prejudice from multiple sides and try very very hard to fit in. When they don't and don't have to, meh, no worries. But when things go pear shaped you end up with a highly wound spring like her. 
Or simply boycott it. 
Thanks for the link. Really interesting story. Have to say, that lady is quite the giant tool.
I used Gearman, but in my case I had the worker transfer the data to have it processed.
Probably not at all set in stone, but could be quite likely.
Compassion at what price? I try very hard to be nice to people, and that includes telling a few jokes to offset the mood a little. But conversation with strangers doesn't come naturally to me -- the jokes can be as hilarious as they can be horrible. Once I said to a jewish co worker, whom I've met just once before - "Arbeit mach frei" as a term of endearment. Everyone laughed , and no harm came of it. But I've regretted it ever since - because that comedic gamble was so not worth losing a job over, or getting my life all messed up. 
Shortchanging has f*** all to do with sexual comments. 
Yea, bumping someone's side in an elevator isn't as life threatening as bumping someone's side when you're driving. We have good reason to be impatient with driving mistakes.
except that exactly *linux* isn’t. &gt; we do not break userspace is the kernel’s inofficial motto. apart from that there’s libraries, which break ABI all the time. windows “solves” this by letting applications introduce DLL hell by shipping all their own libraries. but then again on linux, you’ll get intra-distribution problems if e.g. i have `liblua.so.5.{1,2}` and debian has `liblua5.{1,2}.so.0` (wtf debian)
i love distributing for arch. so if i ever write something other than a python library, it’ll have a github repo with an arch PKGBUILD, and distributors of other distros will have to figure out how to do their bizarre incantations required for .debs and .rpms.
pip is awesome for windows and OSX, but here on linux i frankly copy&amp;paste and adapt a PKGBUILD if neither `sudo pacman -S python-$packagename` or `sudo aura -A python-$packagename` work.
If you use OSX, I can't recommend [dash](http://kapeli.com/dash) enough. 
If you use IPython you can get the docstring by putting a question mark after the class/function name. In an IDE there will probably be a shortcut that opens the docs for the selected text in a browser. I use PyCharm. So mostly I just have the docs open in Chrome in another window.
Does anyone know if there is a Docker-tutorial for PyGObject?
Or even in command line you can use: help(obj) Where object is literally anything. Of course this will only work of they have good docstrings
&gt; need to stop judging people in the court of public opinion I know this all too well.
yeah, as long as you don’t remove features without providing alternatives *cough* GNOME *cough*, you can whine all you want. but /u/jediknight didn’t read properly: the alternative the author proposed is using another virtual environment solution that keeps its promises: reproducible, described environments including system libraries (instead of such environments where only the python portion is reproducible)
Let me ask. How can a program know if a file has been transferred 100% vs 80%? If you're using multitasking, and one process is in the middle of transferring, while one is working on a document, what happens if the document transferring and being worked on are the same?
&gt; I read it. I just think it's bullshit. Companies just don't give away $100k for trading with no strings attached. It's advertising for their platform where people can do algorithmic trading without owning a massive hedge fund. I'm not a sic "native" prick you are just being an ignorant ass. Companies in the US can't just lie about what they do with your code 
&gt; she would view it very differently if the same exact set of events happened where the roles were reversed. She would view it very differently if the person were black. I'm black, and her [tweet](https://twitter.com/adriarichards/status/530109180460675074) at the top of her page actually annoys me a fair bit. If we're going to make any progress in terms of racial equality or whatever, we need to kill this mindset of seeing a person of a certain race, and then making an assumption on who they are, where they came from or what their story is. It's asking for sympathy, but for the wrong reasons. I don't want your pity, or for you to see me as a black man; I just want you to see me as a man. Yea, fucked up things have happened, are happening because of people's races, but to me the solution isn't to become hypersensitive, but rather just to forget about this superficial construct entirely and just see people.
[**@adriarichards**](https://twitter.com/adriarichards/) &gt; [2014-11-05 21:27 UTC](https://twitter.com/adriarichards/status/530109180460675074) &gt; When you see a woman of color standing in the room, take a moment to think about her journey to get there despite racism and sexism ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://www.np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
I know PyPy doesn't; it just sets `x == id(x)` for numbers to allow other optimizations elsewhere. No idea about Jython.
It's okay if Python 2 is used, but ultimately it's a sinking ship, [there will be no 2.8](https://www.python.org/dev/peps/pep-0404/). So for the sake of the people who have yet to be invested in an interpreter, recommend the version that will ultimately better serve them long term.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**TORQUE**](https://en.wikipedia.org/wiki/TORQUE): [](#sfw) --- &gt; &gt;The __Terascale Open-source Resource and QUEue Manager__ (__TORQUE__) is a [distributed resource manager](https://en.wikipedia.org/wiki/Distributed_resource_manager) providing control over batch jobs and distributed compute nodes. TORQUE can integrate with the non-commercial [Maui Cluster Scheduler](https://en.wikipedia.org/wiki/Maui_Cluster_Scheduler) or the commercial [Moab Workload Manager](https://en.wikipedia.org/wiki/Moab_Cluster_Suite) to improve overall utilization, scheduling and administration on a cluster. &gt;The TORQUE community has extended the original [PBS](https://en.wikipedia.org/wiki/Portable_Batch_System) to extend scalability, fault tolerance, and functionality. Contributors include [NCSA](https://en.wikipedia.org/wiki/National_Center_for_Supercomputing_Applications), [OSC](https://en.wikipedia.org/wiki/Ohio_Supercomputer_Center), [USC](https://en.wikipedia.org/wiki/University_of_Southern_California), the [US DOE](https://en.wikipedia.org/wiki/United_States_Department_of_Energy), [Sandia](https://en.wikipedia.org/wiki/Sandia_National_Laboratories), [PNNL](https://en.wikipedia.org/wiki/Pacific_Northwest_National_Laboratory), [UB](https://en.wikipedia.org/wiki/University_at_Buffalo,_The_State_University_of_New_York), [TeraGrid](https://en.wikipedia.org/wiki/TeraGrid), and other [HPC](https://en.wikipedia.org/wiki/High-performance_computing) organizations. TORQUE is described by its developers as [open-source software](https://en.wikipedia.org/wiki/Open-source_software), using the OpenPBS version 2.3 license and as non-[free software](https://en.wikipedia.org/wiki/Free_software_license) by the [Debian Free Software Guidelines](https://en.wikipedia.org/wiki/Debian_Free_Software_Guidelines) due to license issues. &gt; --- ^Interesting: [^Torque](https://en.wikipedia.org/wiki/Torque) ^| [^Torque ^\(game ^engine)](https://en.wikipedia.org/wiki/Torque_\(game_engine\)) ^| [^Torque ^converter](https://en.wikipedia.org/wiki/Torque_converter) ^| [^Pound-foot ^\(torque)](https://en.wikipedia.org/wiki/Pound-foot_\(torque\)) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cp7c3u4) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cp7c3u4)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Na, fuck that. Perhaps "deserve," is too strong a word, but I hold no sympathy. It's not even an ambiguous case here, both sides have had their say, and it's ridiculous. Can't even make a joke these days without someone publicly shaming you, then causing you to lose your job? I have 0 sympathy for people that stir up the mob, especially over such petty bullshit.
&gt;I'm not a sic "native" prick you are just being an ignorant ass. &gt; &gt;Companies in the US can't just lie about what they do with your code Ah to be young again. Good luck in life kid.
Exactly. It's ridiculous how sensitive society has become. I don't even really understand people getting offended by things, seems so anachronistic, like "I do say, that statement just offended my better sensibilities." If it's not threatening or directed at you in a negative way, who gives a shit? Just move on.
&gt; So one is comparing socks to a penis Er, no. She never compared socks to a penis. She said to use socks as an imitation for a penis. If you tell someone to stuff their bra with tissues, are you comparing Kleenex to breasts? &gt; both are dick jokes Again, incorrect. The punchline of her joke was the TSA agent's confusion. Just because a joke has a penis (or a fake one) somewhere in it doesn't make it a dick joke. &gt; she was the one making the sexual connections to forking repos... Not really, no. Did you read the article? &gt;&gt;A few moments earlier Hank and Alex had been giggling over some other Beavis and Butt-head-type tech in-joke about “forking someone’s repo”. “We’d decided it was a new form of flattery,” Hank explained. “A guy had been on stage presenting his new project and Alex said, ‘I would fork that guy’s repo.’” [...] This is why “forking someone’s repo” works both as a term of flattery and also as sexual innuendo.
Add to my list of shortcomings, the inability to see how any of this *waves hand around contents of article linked in title* counts as "resolving the situation".
Thanks. Is this similar to HTCondor? It looks like it. How hard is it to set up this platform? I'm somewhat hesitant on getting started on HTCondor because of the seemingly difficult setup phase. 
Don't write to the disk. Google for Recuva and load it on a different drive. Follow the instructions from Recuva. 
As someone who has done sales and advocacy, the mindsets are vastly different. In sales you do what you have to do to make your number that quarter. In advocacy you do what you have to do to make people happy. 
And how hard is it to setup? edit: removed a question. It seems to have a pretty good Python support.
If I recall correctly, SG's post came after being subjected to a DDOS, which happened well after Hank apologized on HackerNews and revealed he lost his job. At that point, SG may have already been unduly influenced by criminal behavior. The whole issue stunk. The second one person was fired, the issue span out of control into criminality. Which places blame on PlayFirst for taking extreme action without proper investigation to begin with.
It's not like you have to take him into the nearest dark alleyway to talk.. 15-20 ft away from the majority of people should be enough. You can't possibly think this guy was acting in a threatening manner. If he made an immature and offensive joke I don't think being beaten or drugged and raped is high on the list of possible things happening to you. If you can't talk civilly about your feelings in a rational manner then you should be in counseling not a python conference. Even if you feel legitimately threatened the answer isn't take a picture and post it on twitter. 
I've been looking at [BOINC](https://boinc.berkeley.edu/). It's designed for volunteer computing, but can be used for internal clusters. It can handle your three main requirements. For "load balancing", it can set the workers at low priority, allowing a local user to have all the resources they need, with the worker getting the rest. BOINC generally requires programs to be written for it, but existing applications can be run through [a wrapper](https://boinc.berkeley.edu/trac/wiki/WrapperApp).
lolwtf
[Zeal](http://zealdocs.org/) is the (platform agnostic) open source alternative.
No need to be rude, in general, to anyone. 
Tolerance and respect are given where they are earned. Given that the ShitRedditSays and Adria Richards crowd are vulgar, combative and rude - I waste neither tolerance nor respect on those people. 
Pycon's only role was asking the guys about the complaint and then leaving them be when they found out what happened. Everyone else, however... no, they weren't about resolving anything. Except maybe hank who apologized for what was a really tame joke.
Dude, that's what Adria Richards said. "Don't make jokes, you have kids to feed". For fuck's sake. 
I don't condone either of those activities. Firing the shit out of her and never hiring her again on the other hand is appropriate. 
&gt; The better response would have been to turn around and say "hey, in my opinion, that's really not cool and this is why...." That would have been reasonable and civil. Problem is, the person in question was an SJW 
&gt; If people valued him, he would not get fired. Dude, SendGrid hired her not for her expertise or intelligence, but to be "hip and trendy" and politically correct. And it blew up in their collective faces. If they were retarded enough to hire her even though she had more red flags than a matador supply store, they're stupid enough to dump a valuable employee just because someone's fee fees were hurt. &gt; This world is cruel, but action breeds consequence. Tell that to Richards and to ShitRedditSays. 
Linux is, usefully speaking, a mix of kernel and userspace but you are technically correct. That said, as things like docker become defacto standards for shipping relocatable apps on Linux, the different interfaces exposed by different kernel patch sets are becoming more notable.
I pretty much just said male because I'm the only female dev at my company. I would hope another lady would be able to shoot the shit and joke with us too. :)
Looks like it's a static site generator like Jekyll. 
You can think of WorkQueue as a layer on top of HTCondor, but it doesn't actually need HTCondor. So let me explain. HTCondor and Torque (mentioned below) are job schedulers and resource allocators. You tell those systems you have N resources and when you submit a task or job, these systems will play match maker and match your job requirements to the resources available. That is, if you have 10 cores available in your cluster and your job needs 4, the batch scheduler will reserve 4 of those cores for your job. With WorkQueue, you have a master/worker model. The worker is just a static executable that you can deploy on any machine and in any manner that you see fit. This means, for instance, if you have access to a HTCondor cluster or a Torque cluster, you can submit WorkQueue workers as tasks. That said, if you didn't have a batch scheduler, you can still use WorkQueue by launching the workers manually via say SSH or on your local multi-core machine. Once the workers are running (regardless of how they are started), they will connect to the master you write and receive commands to execute. This is really flexible since it allows you to take advantage of existing resources (HTCondor, Torque, multi-core, independent machines) AND mix them! For instance, in one project we had workers running in Amazon EC2, Windows Azure, a SGE cluster, and a HTCondor cluster. In HPC parlance, WorkQueue is considered a "glidein" or "pilot" system. Its normal usage is not in place of distributed systems such as HTCondor or Torque, but on top of them. That said, you can use WorkQueue without any underlying batch scheduler. So, to answer your question about setup: getting started with WorkQueue is very easy. You just write a master and start a worker. How that worker is deployed is up to you. You can use any batch system (HTCondor, Torque, SGE, SLURM, etc.) or none at all (SSH, local multi-core). Of course, if you want to automate and monitor things, having some sort of batch system would help, but it is not necessary to use WorkQueue. I hope that helps. I recomend skimming this paper: http://ccl.cse.nd.edu/research/papers/wq-python-pyhpc2011.pdf for more information about WorkQueue. PS. HTCondor and Torque can seem daunting to setup, but if you have pretty basic needs and requirements, then it is very much possible to get them up and running on your own. Of the two, I feel HTCondor is easier to manage and setup.
It's worth mentioning that the Anaconda distribution meets the same needs as the canopy distribution and then some. If the author misses the canopy editor, there are plenty of others (like PyCharm Community).
Your choice of words betrays your lack of comprehension. You think in terms of news articles in the new york times read by millions. Information is disseminated organically between users based on interest. Maybe I write something and 3 people read it. A month later 75 do, then 50,000. You are basically incapable of determining what everyone else ought to know and wrong to try. Your dubious "right" represent a huge threat to my legitimate ones. The idea that it can be implemented effectively without basically implementing internet wide censorship is equally laughable. If we have a means to host data out of reach of censors pens and a means to discover what is being censored we can host a list of stuff people would like forgotten making it easier to find what YOU want to hide. If we can't effectively we have no recourse to transparently police such a process because we don't know what we don't know. The entire concept is broken by design and functionally incapable of being improved by its very nature.
Vancouver, Canada - just a few hours north of Seattle - has already deployed predictive crime mapping tools to police units. http://metronews.ca/news/vancouver/1296440/new-technology-helps-vancouver-police-predict-future-crimes/
Seems likely that actually openly firing her immediately may have helped their position with developers in a way that quietly letter her go later would not have.
It's bugging me that the method shown in the [picture](https://d15chbti7ht62o.cloudfront.net/projects/1700218/photo-1024x768.jpg?1425482521) is missing indentation.
Ah, context fail. I read "male" as "only people of my gender", you meant "those people of the other gender". :P
I am so glad she's still unemployed in the tech sector. She still doesn't understand. 
Okay, and? The point I was making is that they probably broke the code of conduct and were reported to the conference organizers.
You can be discriminated against for personal actions or beliefs unless they were legitimately religious, I think. 
Thanks for pointing this out to me. 
She fully did this to herself to cement her own victimhood. Thanks for the disclosure on the right to be forgotten bit; personally I sit on the other side of the fence and prefer not to see history, as we make it, get censored. 
Well, even credit history fades after ten years, but I see your point. 
Any experience converting full addresses to longitude and latitude ? Doing something similar but the addresses I am using are in street , city, state , and zip format. 
All heterosexual sex is rape - said by more than one feminist Yes, I will quote this if necessary, but it really isn't. As this is demonstrably true.
For me, the second one wins hands down . It is much more readable. The, first one goes to needless complication, first creating a tuple and then unpacking it.
She literally could have taken her own advice and say, "that's not cool",and it would have ended there. 
I'd imagine it's because most of those libraries are open-sourced, donation-based projects. If that assumption holds, the maintainers are likely working whatever hours they work, and the hours allocated for open-sourced python libraries are minimal. edit: forgot word
The costs to switch outweigh the benefits of switching. When it swings in the other direction, people will switch. If Python 2.7 wasn't so great, there would be more benefit to switching. Also, the costs can't be measured exactly. You can't anticipate every module you'll want to use in the future, and if they're all available in Python 3. You might want to keep access to the long tail.
&gt; The "you desexualize yourself to fit in; you're oppressed!" lecture. I'm told that deep in my female heart I must really love make-up and fashion. It's not that I'm a geek who doesn't much care how she looks. Holy. Shit. 
[Calibre](http://calibre-ebook.com/) is a good tool to manage electronic text in general.
[This is a rather confusing page](http://urubu-quickstart.jandecaluwe.com/) Most immediately it just looks like it's completely unfinished, because it contains no content. Moreover the Quickstart doesn't mention what you should do after installing it through pip. Just that there's a file called _site.yml
The only way I know to do that is to use a geocoding service like google maps with a python wrapper https://github.com/geopy/geopy. I didn't like it because it limits you to 2500 a day and you can't do a bunch of addresses at a time or else it times out. I usually prefer zip-code anyway because at least you can group them into regions. Coordinates are literally only useful for plotting on maps to me. 
Thanks for posting this. You should make a parody of Sarah Silverman getting hit in the face with sausages, and substitute it with dongles. :D
Sadly a case of #notallwomen 
It's an ambiguous rule and goes without saying in polite society. And in polite society, it is not resolved through public shaming and photos on twitter. You're the one who brought up triggers in the first place. 
Thanks. It doesn't seem to be in an active development though.
Thanks for the suggestion. Why do you like RQ better than Celery though? 
I think there are databases you can [Geocode](https://developers.google.com/maps/documentation/javascript/geocoding) addresses into lat and long. But I have not used them 
Personally I found it easier to use and setup, and for the scale I'm using (&lt;20 workers) it was fine. I suspect that if you were in the hundreds of workers range that AMQ and Celery might scale better. 
Thanks. It seems to be one of the few suggestions here that have clear support for files transfer.
One time I switched from 2.7 to 3. Took me about an hour to port a dozen of scripts to get them to work again. Not the best experience when upgrading to a *slightly* newer compiler/interpreter for the same language. A better experience would be to deprecate certain features and throw warnings at people. I imagine that would speed up the adoption.
I'm sure this will turn out to be a great discussion. /s
It's against their TOS to do this for anything other than display with a Google Maps based map. (I don't particularly care if people abuse Google's services or not, but this is a reason to look elsewhere first)
I also think the second one is more readable. But the first one can be "improved": commands = prepare_commands(*map(app.config.get, ("DB_NAME", "BACKUP_DIR")))
In business, the question, "Why is the switch from X to Y taking so long" or even, "Why did the switch from X to Y never finish" can usually be traced back to revenue and the priorities of the leadership of any company. Sales can sell the new platform, and they can try to sell customers on the old platform on the new platform. But ultimately it won't be profitable for a ton of customers on the old platform to move to the new. So they'll always stay on the old platform. Thus, the old platform sticks around. Forever. 
Try using MaxMind, it has a free version https://www.maxmind.com/en/home
I don't think it's common for a mature programming language to break compatibility in such a major way... Also, IIRC, python1-&gt;python2 transition was less disruptive than python2-&gt;python3 (and python1 was a niche language too)... Overall, python3 feels like a major mistake which may push python back...
&gt;that would be somehow wrong and toxic and so forth It's not that I think this outlook is wrong and toxic to women, but perhaps it's a little toxic to you? Sure, some women are super crazy and pull stunts like this to "further" some agenda. On places like twitter and tumblr, these stunts reach a lot of people and the attention they receive can make it seem like a whole lot of people feel that way. But really, the community of over-the-top SJWs is just loud. They are not representative of how most women feel. Having spent most of my life living in two very liberal US cities, I have still never encountered anyone like the "tumblrinas" I hear so much about. Because I do not frequent tumblr or twitter very much, the only reason I know these people exist is because of bitching about them on places like reddit. Even at "women in engineering" events I've been to, there has been no talk of "oppression" or how evil men are. If the gender divide comes up, it's usually in the context of how men and women communicate differently and what women can do to self-advocate in the workplace. Mostly, events revolve around creating support networks, mentors, and role models for women who may feel alone in their career path. I suspect you have had some bad experiences with women in order to feel this way, but I think it's doing you a disservice to assume all women will behave in this irrational and entitled way. It can't make your life easy - socially, professional, or romantically - to be this suspicious and avoidant. I think if you were to be more open-minded and talk to some of the women in your life who others have already vetted for (ie co-workers or friends-of-friends who have never had an unreasonable outburst), you would learn that reasonable men and women are not so different. You might even become friends with one of them. As it is, your fear of encountering SJW-type women is not so far from Adria's fear of encounting a male killer. It's possible, sure, but it's not entirely rational.
Someone's got a rather... off-beat sense of humour.
But GNU's Not Unix!
Yes, with most batch schedulers such as SGE, Torque, HTCondor, there is a certain amount of overhead for allocating resources and starting a job. This can be anywhere from a few seconds to minutes (even if the resources are available). With WorkQueue, the worker "glides in" or is allocated the resource and just holds the slot. The master can then send it any number of commands or tasks to run without having to reallocate that resource. This is really effective for when you have lots of short running jobs. That is, where the cost/time of running a job may be less than the cost of allocating the resources. Additionally, WorkQueue has the ability to do caching and some advance scheduling tricks to help things be even more efficient. This is a big win for systems where the filesystem is not shared (typical HTCondor environments), but you need to perform computations on the same dataset. With WorkQueue, you only need to transfer the dataset or executable once (as long as they remain the same). Of course, this is controllable by the user.
 &gt;Does this really need to be explained? That men are not being oppressed by inequality, not excluded by sexism, don't systematically make less for the same work, aren't passed over for promotion due to their gender, aren't ignored and interrupted and spoken down to due to their gender, aren't oppressed sexually by predators, etc., etc. Bull. You are right now speaking down to somebody, presumably over their gender. And you are ignoring female privilege, and bringing up at least one issue that no longer exist (making less for the same work has been well debunked; I've not looked into promotions). As for predators: Men are more exposed to violence. They are less exposed to sexualized violence (I presume - I've not looked at the numbers and they're fairly unreliable anyway), but more exposed to violence in general. &gt;If there were no systemic sexism in society or in software development, there would be no issue. There is sexism in society and there is sexism in software development. Telling sexist jokes in a professional setting is inappropriate precisely because it contributes to an environment that dissuades women from participating. You can tell a sexist joke without having that intention, but you can't tell a sexist joke without contributing to that effect. And you can't argue for this without causing more sexism against men, which is systematically leading to wrong judgments (higher punishments) in court. Which shouldn't stop you from arguing, but should stop you from thinking the issue is one-sided. 
&gt; I suspect you have had some bad experiences with women in order to feel this way, but I think it's doing you a disservice to assume all women will behave in this irrational and entitled way. You know, we tried that with \#notallmen. They responded with \#yesallwomen. To women, men are just scum. So, uh, OK. And I have no women in my life. By choice. Because this. 
You could build one. I'd recommend looking at requests and beautifulsoup. However, you'll run into all sorts of problems when they accept resumes by web form instead of email.
And thus we hit the crux of Generation Offense.
Would [this](http://wiki.openstreetmap.org/wiki/Nominatim#Search) work?
Hey, so I'm a student at Georgia Tech who runs our undergrad AI club (we generally do our projects in python, which is why I'm here). The thing that got me my current internship was actually a personal project (in python!) related to databases and collaborative filtering. The easiest way to do things is to say "What is a thing I'm interested in" or "What is a problem I want to solve" and go out and try and learn about it and solve it. Mine was related to class scheduling and registration. We used constraint satisfaction to build a tool that would pick course schedules for students, and then I spent the summer building an app that would allow students to rate professors and classes on different metrics and use CF to personalize those ratings. It can be anything, I saw [this](https://github.com/fogleman/GraphLayout) in an article posted in /r/programming, and thought that reimplementing it would be a cool project, so [we did](https://github.com/gtagency/graph-reduction) and now a few of our members have some awesome stuff to put on their resumes that show a solid grasp of everything from good git practices to simulated annealing. So yeah, think of a problem, a minor inconvenience, something that takes up your time. And [solve it](https://xkcd.com/974/). It doesn't need to be the best solution (though at CMU you probably have immense resources for doing that), but something that you learn from and that teaches you. The other thing is that &gt; say "Machine Learning" because we didn't implement most of the things, we learned the concepts implemented some stuff but it isn't meant to be the "AI" class here- it's in the Psych department. This is ok. The [udacity ML course](https://www.udacity.com/course/ud675) is taught by my ML professor, let me quote our first assignment: &gt;Each algorithm is described in detail in your textbook, the handouts, and all over the web. In fact, instead of implementing the algorithms yourself, you may (and by may I mean should) use software packages that you find elsewhere;...In addition to implementing (wink), the algorithms described above, you should design two interesting classification problems. As far as I'm aware, Andrew Ng's Coursera course also doesn't have you implement any algorithms. Its not the focus of machine learning. You can, and people do, but they're already done better than you, and unless you're going for a PhD, you don't need to have that done. The important part is recognizing when and how different algorithms can be used and why they work better. That is to say, when you're done with your kickass project, write a kickass readme that explains why you made the choices you did.
[Image](http://imgs.xkcd.com/comics/the_general_problem.png) **Title:** The General Problem **Title-text:** I find that when someone's taking time to do something right in the present, they're a perfectionist with no ability to prioritize, whereas when someone took time to do something right in the past, they're a master artisan of great foresight. [Comic Explanation](http://www.explainxkcd.com/wiki/index.php/974#Explanation) **Stats:** This comic has been referenced 36 times, representing 0.0658% of referenced xkcds. --- ^[xkcd.com](http://www.xkcd.com) ^| ^[xkcd sub](http://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_cp7ugy0)
Well, I'm saying it again. Thanks!
Sorry, I'm not free to reply in full now but I really really appreciate your reply! P.s: I love Georgia Tech, I was there for HackGT last year and it was oodles of fun. Also, mind if I message you from time to time asking for advice and such? 
&gt; dont want some huge package that likely not portable Anaconda is actually, by far, the *most* portable way to develop python scripts and apps for the scientific and pydata. We build the *same* versions, including point releases, of a huge number of packages for Linux, Windows, and Mac. This means that if you are sharing your code or your notebooks with the wider world, everyone has an easier time interoperating. &gt; If i need a python package i just download and install it. If this is working for you, great! It does not work for a huge number of other people out there, and most of their pains arise when they try to collaborate or share their work with other people, and they have to tell those people how to get exactly the right versions of what libraries, built with whatever exact version of some compiler, linked against some other C/C++/native library. Solving that pain is why we built Anaconda. &gt; Thats one of the issues with writing and releasing software--there are always going to be varied opinions. You are entitled to your opinions, but you are not entitled to your facts. The fact is that Anaconda does not "get tendrils into your system". This is the only concrete criticism that you levelled, and it turns out to be factually incorrect FUD. &gt; You need to grow a thicker skin... My skin is fine, thanks - I see a ton of love for my product in this thread and elsewhere. I merely civilly asked you for specifics of what you found to be "shitty" about Anaconda (your original words, not mine), in the hopes that perhaps I may learn something which can improve it in the future.
You're correct; it doesn't seem to have had a commit lately. On the other hand, it is being used as the multiprocessing component for the [DEAP](https://code.google.com/p/deap/) Genetic programming framework.
Also, Anaconda is free for everyone, including for commercial use. You don't get restricted to just a subset of packages. Canopy charges for the additional packages: https://store.enthought.com/
&gt; Of course venv only isolates Python. That's all it needs to do, and really, that's all I want it to do. Could I have chrooted environments, or docker containers? So you never ever use any Python library that relies on native extension modules, or that might rely on another Python library which does? Any kind of database access library, lxml, and a raft of others. If you even begin to touch data processing or image processing in Python, you're instantly in "native library management" land, and pip/virtualenv do not help you there.
If you use conda and the Anaconda build of Python, it has an "environment" feature which is more robust than virtualenv, because it completely isolates libraries at the dynamic linker level. Best of all, package installs into these environments are completely self-contained into a single subdirectory. So, you then don't have to convince your sysadmins to install matplotlib or django from some unstable RPM repo, AND they don't have to worry that your package install is going to splat stuff all over /usr/local/lib. http://conda.pydata.org 
&gt; If you're not deploying to a machine you own then you're doing it wrong. Have you ever actually worked in a corporate IT environment? That's why people are downvoting you. The rank naivete of your objection is just kind of sad.
What the heck are you talking about? Only 3 of the top 40 Python libraries don't support Python 3 https://python3wos.appspot.com/ When you say "so many libraries don't support it", did you just make that up to support your self belief? 
You don't need that backslash continuation in the first version. Anything inside balanced punctuation (parens, braces, brackets) is automatically understood to be continued across lines until the matching close punctuation is seen. Also, if you're going to simplify, then simplify: commands = prepare_commands(app.config.get('DB_NAME'), app.config.get('DB_BACKUP_DIR')) This is 88 chars long, which is fine by me but if you're going to be pedantic about keeping things under 80 chars then write it as: commands = prepare_commands(app.config.get('DB_NAME'), app.config.get('DB_BACKUP_DIR')) The point is, there's no reason to give a variable a name if you're never going to refer to it again (and if naming it wouldn't add some documentation value, which isn't the case here.) 
You know, that actually seems appealing :-)
It was more logical deduction, followed by a discussion with someone of the opposite view. No polling involved.
More like one to reply to irrellevant ones in my mailbox ;)
By larger I mean 260 MB to 373 MB! I also did a line by line read of the file, even that is giving large file size. 
There are good arguments against migrating to Python 3 for real-world applications that need to deal with questionably-encoded strings. Armin Ronacher (author of Flask, etc.) has complaints about its Unicode handling [in filesystems](http://lucumr.pocoo.org/2014/5/12/everything-about-unicode/) and [in HTTP](http://lucumr.pocoo.org/2014/1/5/unicode-in-2-and-3/). Mercurial is [refusing to implement Python 3 support](http://mercurial.selenic.com/wiki/SupportedPythonVersions#Python_3.x_support) for similar reasons. There aren't very many reasons in favor of moving. Better Unicode handling is one of the more commonly cited ones, but, clearly, it's debatable whether it is in fact better. Python 2.7 is a fantastic, popular, and well-supported language; I'd ask you why people _wouldn't_ want to use it. :) Everyone still has some users on Python 2, so Python 3 support necessitates supporting *both*: very few projects can insist that their users use Python 3 alone. If you're doing releases in both languages, you can't use any cool new features from Python 3 anyway: you'll have to write workarounds for Python 2.7, or find third-party libraries to do the job, or something, so there isn't an advantage in Python 3. If you're using the `2to3` tool, it only reinforces this by having you write Python 2 and convert to 3, so your day-to-day development is in Python 2, you're asking contributors to send in patches in Python 2, etc. That said, Ubuntu does ship Python 3 by default and has been trying to migrate dependencies over. The `python` command is Python 2, and the `python3` command is Python 3, because that's the only sensible thing to do: given that Python 3 isn't backwards-compatible with Python 2, you don't want existing Python scripts starting with `#!/usr/bin/env python` to start running under Python 3.
Be careful. Somebody might take your comment as iOS-running robots discrimination, blow it out of prooprtion with some tweeting, and boom — you're unemployed. And sad, I guess.
I can't stress enough how great this internship is. I was a slightly dissatisfied chemistry graduate student but my work last summer gave me the momentum i needed to change careers. Right now I work full time as a python back end web developer in silicon valley. The trick us to join the mailing list early and read about what features the core devs hope will be added during the SoC. Next, fork their repo and start reading up on the back end API that you will need to implement whatever feature you choose. Finally ask for input on your proposal's rough draft before you submit it. 
PKGBUILD files don't solve the problem of distributing binaries for Linux, even Arch. You're still distributing source code, and building it on the client machine. While it's easy to do exacty that in Arch, it's also pretty easy to do on basically any other distro. The challenge I was referring to is in distributing *binaries* for Linux. It's basically an unsolvable problem.
adria richards is a professional victim, donglegate wasn't the first time she pulled bullshit like that, and any company would be foolish to hire her, she's a walking eeoc complaint.
When you tell about "Elliot Rodgers" *it is not rasism* cause you tell about *concrete person*. When you tell "common among mixed people" *it is rasism* cause tell against *category*of people *without exclusion*. If you tell "some of mixed people" it would be *not rasism* cause there is *exclusion*. What you think about phrase "men are rapists"? It is very radical feministic phrase and doesn't couple with reality. But phrase "some men are rapists" is true and has no radical meaning within.
I wouldn't say role model, but 4chan is the hero we deserve
&gt;massive 250 MB file Cute. Not to be a dick, the post is cool, but still
I am very sorry about that. I actually thought of trying out other compression methods. I tried what he did but that did not help in decreasing the size of the file. 
I tried that and my file size was almost half the original size! I'll rewrite the code again and see what could have gone wrong. As you said that that entropy is low in the data, would Huffman Coding be a better option here?
Don't get me wrong I'm not saying they went about things the right way (although let's be honest people would have complained no matter what they did), I'm just saying that did it for slightly better reasons than "The new print looks nicer".
&gt; would Huffman Coding be a better option here? No, as the [gzip manpage](http://unixhelp.ed.ac.uk/CGI/man-cgi?gzip) notes, Lempel-Ziv compression generally achieves better compression levels than Lempel-Ziv-Welch compression, Huffman coding, or adaptive Huffman coding. It lists some commands -- `compress`, `pack`, `compact` -- that you can use to compress using these methods, if you want to check that. One thing I noticed about your code is you are not opening the file explicitly as binary (which would be `mode='rb'` rather than `mode='r'`). Another thing you can notice by comparing the gzip manpage and your code is, your code uses a significantly different block size than gzip does.
*You* might not want to move over to Python 3 and that's fine. But there were parts of Python 2 (*cough*unicode*cough*) that desperately needed to be overhauled. Again though I wasn't saying they went about things in the best way, I was just saying they did it for slightly better reasons than "The new print looks nicer".
Here's a quick question, what does Python 2 offer you that Python 3 doesn't? Obviously this doesn't apply to you personally since you know Python 2 already, but I have seen people pick 2 over 3 when they first move to Python and I was wondering if you might provide some insight.
This thread again, seriously? I think this comes up once a month. Think about this - there's still millions of lines of Fortran 77 and Cobol and Delphi (and countless others) still floating around and being maintained... it is asinine to expect people to expend the effort to convert to Python 3 if there's nothing in it for them (i.e. evaluated the risk/benefit and decided switching is important). There's a decade or more of Python 2 ecosystem... the Python 3 ecosystem won't be there for some time. IMO the benefits to Py 3 vs 2.7 aren't worth it. It's a great example of Python 3 being "better" but not actually solving real world problems for people.
A decade of ecosystem and experience learning the ins and outs. Just because 3 is new and "better" doesn't necessarily make it a more efficient tool for a given application. In the real world, there's a high premium on getting it done quickly and well. If you know 2.7 inside and out, and everything you need is there, why waste time fiddling with 3. Especially if you have a large code base that's stuck in 2 land. EDIT: I came up with a really succinct example - PyPy. If you want to run your code in CPython and/or PyPy, you're stuck in 2.
I disagree that Python 3 is a mistake - but I do think it's a really good example of how much value there is in experience and ecosystem. Personally, the "flaws" that drove Python 3 don't cause me any pain, so I'm happy to keep on keeping on with 2, warts and all because I already know it and I already have a bunch of code in 2. I could certainly port it to 3, but why waste the time? I have yet to see anything about 3 or released only for 3 that makes me say "do want".
From a business perspective, it's the fear that "critical payments library X" is not Python 3 compatible, and we'll find out we need that library 6 months into the project. The only advantage Python 3 gives is some (arguably) nicer syntax and tidier builtins.
Sorry, I worded that badly. I meant for people who are new to the language.
I would argue that any library which hasn't been updated, (python 3 came out in what, 2008) you can't rely on being maintained, so shouldn't use for long term application. 
I don't see why not... You provided sample code. I got to learn a little about pandas.
You should clean all the Flask-SocketIO example stuff out of your repo. Its almost impossible to find the actual code you wrote for the redis monitor (which is in [run.py](https://github.com/no13bus/redispapa/blob/master/run.py))
BTW I didn't write the original piece.I just thought it was cool so I posted it. Just in case people think I am claiming credit for someone elses work.
That is really cool. Drew conway has a cool video on [Chicago Crime analysis](http://drewconway.com/zia/?p=2741). Some sort of reddit competition with the dataset you linked to would be great.
I have some 30GB+ database tables that would like a word with him.
If they want to contribute to dual Python 2/3 projects, or start a project that runs on older computers, they'll have to learn Python 2. If they plan to ask friends for help learning (which is extremely valuable), chances are their friends know Python 2 better.
You want the [Python Excel](http://www.python-excel.org/) packages. I've used xlrd; it's not that bad. 
Maybe [xlwings]( http://xlwings.org/quickstart/) can do what you want also.
The hex is referring to the location in memory that this function is stored at. It's an implementation detail of the cpython interpreter to keep track of the identity of objects (look at hex(id(count)). Generally you can just ignore it. Also, these types of questions are _really_ better suited for a platform like stack overflow. Edit: Since you asked for a link to the python documentation, I'll be nice and provide one: https://docs.python.org/2/library/functions.html#id
I thought so.. Thanks for the info. Edit: and an extra thank you for the docs link. :P
Uh, you can also build packages from binary files or offload the building to a server that makes the built packages available in a repository
Try scraping if you don't want to pay and would like a good data collection exercise. Yahoo stock data, current or historic, is reasonably easy to scrape using a loop with a list of tickers/URLs and the 'readHTMLTable' function in R's XML package. 
Thanks, I will keep that in mind.
&gt; start a project that runs on older computers Disagree: What makes python 3 unsuitable for older computers?
Same here: try: maybe_raise_value_error() e = 'everything OK' except ValueError as e: pass print(e) On Python 2 this bullshit worked, on Python 3 the scope leaking is fixed
that. Not to be mistaken with this. pip install that
Could use a better name. I mistook it for "rapedscript", then realized it was "rapid".
First, when if I install a bunch of modules via pip, will that slow down the running process at all? No Second, if I have several programs running on the same machine. Will they conflict with one another, or is it spinning up separate instances? It won't slow down your machine. 
&gt; it won't slow down your machine ...Any more than running several programs at once normally would
Are you talking about [Application Dispatching](http://flask.pocoo.org/docs/0.10/patterns/appdispatch/)? Works great for serving up an app on a subdirectory.
Any of the 1,000 OAuth2 packages that wrap two requests and a callback in multiple modules with at least one abstraction layer over what amounts to a vanilla dict. I think Google actually has a package solely responsible for creating?parameterized=urls from a dict. 21st century shit.
Yeah I see what you're saying there... that's not an ideal solution if you're not running a Python app up front (among many other reasons). So then what about something like this (nginx): location /my-subdirectory { rewrite ^/my-subdirectory/(.*) /$1 last; proxy_pass http://backend; } I'm pulling that off the top of my head, so it might need a bit of tweaking to get it just right - but I'm pretty darn sure there's *some* combination of location &amp; rewrite that'll allow you to drop that subdirectory off of the request URI that gets passed to your upstream app. Either way, I think that particular problem is in the proxy config, not Flask. I'll mess with this later, see if I can dial it in.
&gt; sqlite 3 where on a date The thing to keep in mind is that Sqlite isn't a big production sort of date. Sqlite doesn't need to go someplace fancy. It'd be just as happy to stay at home, cook a simple meal with you, and then watch something on Netflix. What's important is that you have a date where you both do something *you* enjoy, that allows you to enjoy each other's company. Sqlite also has a bunch of functions to help make working with dates easier, like these that [convert strings to dates](https://www.sqlite.org/lang_datefunc.html).
You will not be able to do that natively in sqlite since 1/1/2300 is less than today as a string. Best would be to store dates as dates. Otherwise you will have to pull out everything and do the filtering in python. 
Logging and subprocess. Both end up being needlessly complex. Logging now has entire books written about it.
It doesn't really make sense to zoom in Python, because it's a programming language. If you want to change the font size, you can do that in your editor. Many schools use IDLE, because it comes with most installations of Python. You can edit the preferences in IDLE to change the font size to something larger or smaller. The exact location of the command changes based on your operating system. 
&gt; I disagree that Python 3 is a mistake But you are essentially agreeing with me! Costs are high, benefits are somewhere between low and non-existent. Why migrate?
Female entitlement, brah. 
I really don't go around deleting comments of people who say mean things about me.
I'm using Windows 8 and Spyder, do you know where to change the font size in this?
Haha! Hahahahaha!
1. Be able to use other context managers in setting up and treating down. 2. Good code design says highly cohesive code should live close together. The result of forcing the setup and teardown to be in separate scopes means having to manually track and add code to teardown whatever was setup. You are also forced to save state on the rest object which is simply more stuff to keep track of. Compare that to being able to encapsulate the setup and teardown together in one score and not have to save state to the object. If done consistently this should reduce overall complexity and reduce lines of code.
Did you try google? This isn't a python or even spyder related question.
would use it if it would work without node. (python only)
Does PyPI provide a solution for reporting known malware/bad packages?? Also, it seems to be against the "zen of python" of there being only one obvious solution, when PyPI provides numerous packages that essentially do the same thing, as pointed out by /u/CodeShaman. Edit: pypy -&gt; PyPI
I was unclear: I meant "older" as in "running older OS versions," not "older" as in "aging hardware". If you're trying to deploy on RHEL 5, which is still supported for several years, there's no supported way of installing Python 3. (Even on RHEL 6 and 7, you need to use a separate "Red Hat Software Collections" repository.) If you're trying to write something that works for end users on Mac OS X, they have Python 2 included in the base OS but not Python 3. And so forth. It's certainly possible to ask your end users to install a Python interpreter on their own, but I think that running out-of-the-box is one of the good advantages of Python 2, and if you're going to be asking users to do something extra (or bundling a copy of the interpreter in your app), then Python 3 has to compete against a *ton* of other possible languages you could write in—including several (C++, Go, Haskell, Rust, etc.) which don't require you to ship the whole interpreter. Python 3 isn't a bad choice, but it's no longer obviously right. If I'm caring about my choice of language that much, I might as well care a little bit more and get a language that's better suited for what I'm doing.
Nice well-written post. I always considered descriptors a fairly advanced topic. If you wrote them into intermediate text, what do you consider advanced?
It's stereotyping, not racism. Everything that mentions racial differences is not automatically racism. Saying that someone is a rapist is an accusation of crime which could be sexist if you're implying that makes women better. But what if it was true that all men were rapists? would it make you a sexist to believe that? Yes, but your belief in sexism would be grounded in fact. Extreme political correctness might make you say that all men are not rapists, and you'll be more popular for that, but it wouldn't make you correct. The belief that mixed race people often feel like they don't belong isn't saying that they're inferior, it's just pointing out a common phenomena . Maybe people would be less likely to race mix after learning things like that, is that wrong? Your opposition to this comes from your belief that all races are "equal" and it doesn't matter who you have kids with, right? Well that belief comes from wishful thinking and race-mixing propaganda. It has no basis in scientific fact. In fact there are studies that show race-mixed children are more susceptible to mental health problems. I might point you to the dictionary if you don't believe me: Google racism: * prejudice, discrimination, or antagonism directed against someone of a different race based on the belief that one's own race is superior. Notice it doesn't say anything about acknowledging that racial circumstances or genetics are different, only that you believe your own race is superior due to those differences.
Any package uploaded to PyPI whose `setup.py` is broken. Nothing more annoying than getting a traceback when you run `pip install &lt;package&gt;`
&gt; You've reiterated what I said there - python2.7 for you "just works" and you'd have to learn the new features to move to python 3, so you're not going to make the switch. No, that's not at all what I said. I'd love to learn new features. A Python 2.8 release would *include new features* in a backwards-compatible manner. The people who are introducing new features to Python 3 and not Python 2 are holding back the ecosystem. Looking at the slides, features 0, 1, 2, 3, 4, 7, 8, 9, and part of 10 can all be done in backwards-compatible ways, and could be introduced to Python 2.8, if a Python 2.8 were allowed to exist. One way to note this is that several of these features were introduced _after_ Python 3.0. For instance, `yield from` is in Python 3.3, so it must be backwards-compatible with Python 3.2's `yield` syntax. So, yes, it's certainly cool that these features are in Python 3, but I'm not the one holding back the ecosystem. You don't need to convince me that Python 3 has cool features. Put the cool features in Python 2.8 and I'll gladly use Python 2.8. As for `print &gt;&gt; file`, Python 2 has `from __future__ import print_function`. As for `raise ExceptionClass, message`, I seem to be able to `raise ExceptionClass(message)` just fine in Python 3. If there's some awesome, backwards-incompatible syntax you want to introduce, `from __future__` is a perfectly fine way to do it. All the new Python I write uses `print_function`. But if I have to learn another language because it's better, why should I learn Python 3, in particular? There are all sorts of amazing languages out there now. I've been getting into Rust lately, which is a great language with a great community. I plan on taking a look at Go, and I was reading a bit about Scala last year. I agree that Python 3 is better than Python 2, but for all the Python work I do, I'm not using Python because it's the *best* language. I'm picking it because it's compatible with existing code, or it's pre-installed on the servers where I want it to run, or whatever. And Python 3 won't work for that.
xlrd is the right way. another is to export from excel as CSV and use pythons csv support
I do not believe that mental activity or phisical capabilities are equal among some statistically average people of different races. Some races have more stronger and taller people in average, some races have more robust and fast people in average, some have more smart and cunning people in average, some have more warlike. This is cause of history of each separate nation. But it doesn't excuse anyone who tell **all those bagers are lazy** or **all those vivers are nervouse**. Cause some of bagers works really hard and some of vivers are very calm and wiseful.
Do you mean PyPI?
Department of Energy?
I'd start with decorators, and work backwards onto what's happening underneath
http://en.m.wikipedia.org/wiki/Design_of_experiments
I know this has probablybeen asked before but do you plan to publish this as a book? Perhaps something like https://www.gitbook.com/
*Before you read this list, you should know that I respect the authors of these packages very much. They've put a ton of time in and I think that their packages are great, but I also think that these are notable packages that are widely used that have room for improvement.* **Numpy** How in the hell do you include this in a setup.py without forcing people to compile it constantly. I haven't figured that out and the advice for installing it in a virtualenv didn't really get me anywhere (so I recompiled). The interface doesn't feel very python like, but I'll compliment the inline docs. **difflib** The function definitions are all over the place here. I get that there was a push in this library to be very efficient but I've found it to be a pain to work with. I'm glad that there are many utility functions, but so many of them seem to include display logic that it is tough to figure out what to use. What is the value of the following? difflib.SequenceMatcher('a', 'a').ratio() If you thought `1`, you would be close. The answer is actually `0`. If you had done `difflib.SequenceMatcher(None, 'a', 'a').ratio()` you would get `1.0` but the first `'a'` is getting assigned to `isjunk`, which is never called because `b` gets `''` which is never iterated over (when `isjunk` is called). On the otherhand, you might call `ndiff` with `a, b, linejunk, charjunk` and `unified_diff` similarly. I would pull out all of the display logic into separate methods over something like a `Comparison` instance. I would rework the argument orders, and move the optimizations to separate chunks of code. **BeautifulSoup** BeautifulSoup 2 &amp; 3 had questionable design. I really love the library (though I haven't used much bs4), but things like the below make me think that things could be so much better. 1) Inconsistent camel or underscore (`handle_comment` vs `findAll`) 2) overwriting __getattr__, which leads to things like &gt; soup.find_all('x') TypeError: 'NoneType' object is not callable 3) refusing to delete methods (e.g. findChildren, fetch, findAll) 4) Returning None at the end of some generators def nextGenerator(self): i = self while i is not None: i = i.next yield i I'd love to see BeautifulSoup without the backwards compatibility, without the lumps, and with more chaining operations. You should really read the library though for things like `RobustInsanelyWackAssHTMLParser` and also buy the author's book __Constellation Games__.
R is popular for statistics. What specific algorithms are you interested in? Numpy and Scipy have a lot of numerical algorithms. 
wkhtmltopdf is a bit of a bugger to get setup but once you do you can do some lovely looking stuff in it and it's pretty reliable. When you consider how many moving parts between generating HTML and output a nice PDF you can forgive it.
I'm kinda curious as to why people are down voting this thread without commenting...?
can't believe I missed this....-_- thanks :)
+1 for subprocess.
Oh. Whoops. I just used "python" and assumed it was the only one. Makes sense.
Sorry I'm not in your niche. My experience involves modeling, simulation, signal processing, and data visualization. If I were you, I'd look up books on applying the subject in a programming environment, and see what language/libraries the authors use.
IIRC you can use QT designer to 'design' a GUI and save it as a .ui file or something similar to that Then you can use a python utility, pyuic or something like that, to output a python code file from your UI. The python code generated will be sort of a barebones sketch of your UI. Then you can go in by hand and add in various functionality - Link your buttons to certain methods, etc... I haven't played much with QT designer as I didn't find it to be that helpful but perhaps I should have given it more of a chance. Perhaps you can actually add more functionality within QTDesigner itself rather than having to go and edit the python code it generates by hand.
I can't rename rapydscript, not my poject. But feel free to file a bug report :p
hmm, when I go to view code in the designer it says "unable to launch C:Python27/Lib/site-packages/PyQt4\uci" which im not sure why its saying that. I have python downloaded. When I view the code in notepad or a text editor it pretty much looks like HTML if I add actual python code and try to open up the file in the designer it wont even open.
you dont add python code to the .ui file you run the pyuic command on that file which then outputs a python code file which you can then further edit to add functionality to your gui. I cant help you with why the program isn't working. I don't use windows and have only used pyqt on OS X. check that you have pyqt installed. It is not included with python rather is a third party module that needs to be installed **after** the QT framework is installed EDIT: Hopefully someone else chimes in as I am no expert in using QT. I have used it for one program I have written but did not use QT Designer as it didn't seem to save me any time.
Some of the "spyware" packages used names that were typos of known packages, which I think is particularly malicious, and a total dick move.
I did this as well, it is definitely the sane way to go.
I figured there had to be better ways. I never really gave it a shot and just ended up writing everything by hand anyway rather than using QT Designer. 
It somehow feels odd to reintroduce rigid type checking into type free python..but this is something I actually missed at some occasions ! Thx for this great post !
Would a tutorial series on getting started working with Qt Designer and Python be something folks would be interested in or has this already been covered pretty well elsewhere?
This is clearly a homework assignment. Most people won't do your homework for you, but if you post the work you've done (and a link to the image/pattern you're trying to reproduce) and ask why what you're doing isn't working, that may get you some sympathy.
Noted. I've been looking for good python topics to write about on my blog, I'm going to add this to my que for writing in the next week or two.
She is? Glad the world has at least _some_ capacity for justice.
What do you use now?
Considering that _she organized an internet hate mob against this man_, you're obviously wrong. But hey, I'm sure a Nice Guy like you has nothing to fear from mob "social justice", right?
Hi there. You have posted a beginners question to /r/python, however it is far more suited to /r/learnpython, where users are actively interested in helping with beginner topics. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Cheers &amp;amp; best of luck!
I disagree that those packages are needlessly complex. They are complex because they need to be. Both packages try to provide some tools to help dive down a very deep rabbit hole. 
What versions of python does descriptors apply ?
Yes. (any that you will use)
Just a minor correction, but in your first example the arguments to the `isinstance` function are reversed, and the type is `str` not `string`. Otherwise, well written.
Some commentaries would be nice for beginners to follow. Also maybe try zooming in cause text size is like size 0.0001 on youtube
thanks for that spot
The ui files from what I remember are xml. But you may as well treat them as project files for designer that the uic module in python can interpret at load time. Then you write your code using that loaded class. Personally I stopped using ui files in python because you lose autocomplete and the ability to really customize the ui for advanced scenarios. But that's for what I need, not for what a beginner might. Either way I'd stay away from them if possible. Like others said you get a better understanding of qt writing it by hand and creating clean code structures. 
Python already did tell you where the problem is: position 7306. It appears that you're trying to open the file with the wrong encoding (it isn't UTF-8). At a guess, I'd say it's more likely Latin 1 (given the byte it can't decode).
You use Designer to create the main features of a widget by drag'n'drop and filling in details in the Inspector window. You can get a look at what you've done in a preview form, and keep fiddling until it looks right. The saved file is processed by the pyuic5 utility included in PyQt5 (pyuic4 in PyQt4), the output is a Python file with one or more classes that contain the code to instantiate the object you designed. You import this module and call upon the class(es) defined in it. You don't edit or extend that code because you always want to be able to go back into Designer and tweak the design. Any change no matter how tiny (wording of a label, margin, whatever) means generating a new uic file which would wipe out any edits you did. I have found the generated code difficult to integrate into other code. I forget why now; it makes assumptions, it defines names, etc. Oh, one thing was that with Designer you can't specify things like a keyPressEvent handler. Or define your own signals. Ordinarily you would make these methods of the widget class. But the widget class is entirely the output of Designer and you can't touch it to add an event handler or any other special feature because any tweak to the design replaces that code. The "solution" to this is to write a class that inherits the generated class. You can have your own methods then as well as the UI code. But this starts to get really complicated. (Alternatively for event handling you can install an event filter proxy on the generated widget. Gets even more complicated.) In the end I just used Designer as a sketch tool to get the look and proportions of the design how I wanted them. Then I just copied the setup code from the generated Python into a \_uic() method of my own class. 
&gt; Numpy How in the hell do you include this in a setup.py without forcing people to compile it constantly. That's not really an issue with numpy, that's an issue with the infrastructure for distributing Python packages. For a long time, there was no good way to distribute pre-compiled binary packages. You used to use eggs for that, but when everyone was told to use pip instead of easy_install, eggs got left behind. Now, finally, there are wheels, but last time I checked, you couldn't upload Linux wheels to PyPI. [Conda](http://conda.pydata.org/) exists precisely to distribute things like numpy as pre-compiled binary packages.
I'm using it to select a particular line. I'm using some functions to calculate a line number and then taking that number and reading the specific line of the csv. Do you have any other ideas?
David Beazley on advanced Python: http://youtu.be/sPiWg5jSoZI
There could be a byte there that your text editor isn't showing, depending on what editor you're using. 
I tried it with Notepad, Wordpad, and Notepad++ and none found any weird bytes or anything. I tried taking that line out of the csv and was given an error in a position the length of the line previously.
DAE like this but not that?
You can try opening the file in binary mode, and seeing exactly what lies in position 7306: with open('your_file.csv', mode='rb') as f: f.seek(7306) # go to position 7306 print(f.read(1)) # print the offending byte 
Wouldn't agree with you on logging though. I like how it works. Its pretty easy to even pipe your logs to some 3rd party (say Sentry).
Please visit /r/learnpython for help with starting up learning python. Their vast and powerful army of redditors shall enlighten the living daylights out of you!
If you could post the entire traceback, that'd be nice. Chances are you're just missing a `.decode("utf-8")` somewhere. 
Ah, sorry to read you're on that system. The standard codec is cp-1252 (not latin-1 or utf-8). with open('my.csv', encoding='cp-1252') as f: reader = csv.reader(f) for row in reader: print(row) 
You could be doing something against their terms of service. Just something to keep in mind. 
Agreed on logging being too complex. I'm ok with it now, but only after many requests for help elsewhere. It's built to handle the complex cases, not the simple ones.
Comparison with Plumbum?
This is something I made while learning Python. So please let me know if there is any chance for improvement regarding coding, packaging or anything at all. [Here](https://bitbucket.org/sras/titley/commits/all) is the code. 
Just in case someone is looking for yet another resource on descriptors besides this superb doc, you can check out the talk that one of the organizers of the SF Python Meetup group gave. It was at Yelp and I was in attendance. I sometimes go back to this when I forget how to use descriptors as I don't use out much in my programming. https://www.youtube.com/watch?v=ZdvpNaWwx24&amp;feature=youtu.be&amp;app=desktop
CamelIsUglyAsFuckInPython
Check out this video: https://www.youtube.com/watch?v=twRQNSFXiYs . It's about making a linkedin bot, but the consept can be used for many other sites. He uses selenium to log inn.
Wait sh is supposed to be a hard ch? 
Probably the simplest example has to do with closing files. With setUp/tearDown you have to do something like this: class MyTestCase(unittest.TestCase): def setUp(self): self.f = open('somefile', 'w') self.f.write('test data') def tearDown(self): self.f.close() def test_something(self): # . . . test test test . . . If you can use fixtures, however, it's a bit simpler: class MyTestCase(unittest.TestCase): def setUp_and_tearDown(self): with open('somefile', 'w') as self.f: self.f.write('test data') yield # Or somehow send control to the test function # file is automatically closed here. def test_something(self): # . . . test test test . . . This example is almost too trivial to be strongly motivating, but I hope you get the point. Generally speaking, modern Python asks programmers to use with-blocks to manage resources when possible. Yet the standard `unittest` package doesn't really allow us to do that in our test fixtures. I think this is a real deficiency that we should address.
Is what true?
No, not at all. There is a python package named 'pyDOE', and the experimental design task view on [CRAN]( http://cran.r-project.org/web/views/ExperimentalDesign.html) for R IS under 'DOE'.
I'm sort of confused by the author's insistence on this: &gt; Of course, anyone can say: PEP-426 lets you build whatever you want, just do it! However, to make something really simple to use some conventions need to be broken, and if you want to convert your project some effort would be needed. You see, if it's not officially sanctioned it's not going to pick up. Death by lack of interest. And if nobody makes it, it's not going to be officially sanctioned, due to its nonexistence.
That gif is extremely irritating. I don't want to have to wait for someone to slowly type out a tiny example for me. Just give me a block of code.
I have heard it both ways, "konk" and "konsch."
I agree, their tutorial is much nicer: http://xonsh.org/tutorial.html
I keep getting the following error while trying to install it with pip on Arch: FileNotFoundError: [Errno 2] No such file or directory: 'readme.rst' Command "python setup.py egg_info" failed with error code 1 in /tmp/pip-build-kkc20g_m/xonsh
The interface for user's computer is not necessarily writing the entire program, but as the interface is the thing you see and interact with the most - it's an easy mistake to make. 
I'd always say learn the latest, but so much of the Python world is still on 2.7, there are reasons to stick with it. For instance, if you are developing for OpenStack, you might want 2.7. If people where you work are on 2.7, you might want to stick with it. In reality, learning either is fine. The differences aren't huge. If you know 3.X, you can write 2.7 code with a few tweaks. The big thing I ran into is some libraries I needed were on 2.7. 
try running `file &lt;your csv file&gt;` to see what it guesses the encoding is
That's kind of funny, seeing as how 'conch' usually needs a pronunciation guide too. Wikipedia has it as: /käNGk,känCH/ so 'xonsh' == 'konk' or 'kansh' (probably the latter).
I get that, too. I ended up just downloading the source and installing it using `setup.py`. `readme.rst` _is_ in there so it succeeds.
It's a chicken-and-egg kind of problem. It's hard to convince oneself to build something that has a high risk of death by lack of interest/usage/etc (like distutils2 did).
Hopefully they have a good excuse for making a product that needs a pronounciation guide. Like, maybe it was originally written in Esperanto?
| | xonsh | Plumbum | |-------------|-------|---------| | Stupid name | ✓ | ✓ |
In [4]: arrow.get('2013-05-wtf') Out[4]: &lt;Arrow [2013-05-01T00:00:00+00:00]&gt; 
&gt; Get rid of py_modules, packages and package_dir. Just discover automatically whatever you have in a src dir. I don't have or need a src directory since I'm only distributing one module. One module distributions should be the norm. &gt; Get rid of MANIFEST, MANIFEST.in and the baffling trio of package_data, data_files and include_package_data. Just take all the files are inside packages. Use .gitignore to exclude files. I don't think you've thought this through. First off, not everyone uses git and even if they did, not everyone will use git forever. Something else will come along. Secondly, I'm not distributing my tests with my my dist. I'm also not including my .rst doc files, which are in git, but I am including the html build, which is not in git. Good thing I can specify those with MANIFEST and stuff. &gt; Have a single way to store and retrieve metadata like the version in your code. Not a handful of ways. This is where I myself go off standard, I keep all this stuff in my packages main init. Just like version, I have author, email, url, contributors, etc. All available as python variables in the module itself. When it's time to dist, I read the module and use regex to extract the text. All in all, this sounds like the rant every one of us had right after we packaged our first distribution. 
This is a really nice hack. I [made a tiny pull request](https://github.com/ajtowns/odictliteral/pull/1).
Exactly. Thank you :)
Today I wanted to create a Python project structure. I found out about [PasteScript](http://pythonpaste.org/script/) and the [Python Boilerplate Template](https://pypi.python.org/pypi/python_boilerplate_template). I tried it. It's a mess. I really don't like setuptools. I would prefer something easy like PHP's [Composer](https://getcomposer.org/). I think it's ironic that there's something about PHP which I miss in Python.
Ditto - no install method worked other than installing from source. 
That is a great use. Actually, now that I think of it, we have `[1, 2, 3]` for lists, `{1, 2, 3}` for sets, and `{1: 'a', 2: 'b'}` for dicts, why not `[1: 'a', 2: 'b']` for ordereddicts?
Wait, not "sssonk?"
&gt; which xonsh &gt;&gt;/etc/shells
Looks nice, I have had to learn about Kalman filters for a while but have been putting it off. Will give it a try now.
That would be awesome. There is also [PEP 468](http://legacy.python.org/dev/peps/pep-0468/) for ordered kwargs, which would make them little bit more usable using OrderedDict(key=val) syntax, which you now can't use, because kwargs are unordered.
&gt; This is where I myself go off standard, I keep all this stuff in my packages main init. That's not off standard, it's convention to add an \_\_author__ and \_\_version__ attribute to modules.
\_\_author__ and \_\_version__ are, but I have more than that. I put those and.. copyright, credits, license, maintainer, email, status. I think I have other repositories with contributors too. It's been a while since I did that, and I'm no longer think it was such a neat idea. If I change contributors, should that be a commit on init or setup.py would be much more clear, init could be code.
This is great. Now we just need proper GARCH and VECM support.
So here's a simple demo I created, and the truth is that there's a number of ways to achieve the desired goal. I chose a solution that starts with Nginx proxy_pass-ing a subdirectory back to a Flask app, and then uses an environment variable when running the Flask app, to pass that value into the application itself. https://github.com/YellowSharkMT/Flask-Endpoint-Example This route is definitely simple &amp; dirty, but it's ready for production (aside from a wsgi wrapper). A downside to that simplicity is that it's a one-to-one deal, in terms of subdirectory/endpoint to an instance of the application; another is the fact that the endpoint is specified at runtime and cannot be changed afterwards. Those are solvable problems, though. For a bit more fine-grained control (e.g. language prefixes in URLs: `en/page1`, `de/page1`, or any sort of similar scenario), you can use [URL Processors](http://flask.pocoo.org/docs/0.10/patterns/urlprocessors/) to expand your application's ability to react to any sort of incoming URL prefixes or patterns. **TLDR** the [example I whipped up](https://github.com/YellowSharkMT/Flask-Endpoint-Example) would be good for a a one-off app that you want to attach to a subdirectory. For more complicated URL handling, you'd want to check out the [URL proccessing decorators](http://flask.pocoo.org/docs/0.10/patterns/urlprocessors/).
On PronounGate: http://antirez.com/news/64 Lots of details in discussion [here](https://news.ycombinator.com/item?id=6845286) In short, Ben Noordhuis was harassed over that, was [threatened and called an asshole](http://www.joyent.com/blog/the-power-of-a-pronoun) by Bryan Cantrill(*), was threatened with termination by his own boss, and finally stepped away from libuv, to which he was the most active contributor (I recall he single-handedly authored 1/4 or even 1/3 commits to libuv - can't find the exact figure now though). So, because Alex Gaynor wanted to push through changing _3 pronouns_ in comments (so not even changes to the actual code), while breaking some project rules as well (signing CLA etc); and brought in a mob with him - the man was harassed, and the project lost its most active author. Alex never contributed _anything_ to node.js before that. A group of developers (including Noordhuis) recently split from node.js, starting io.js - the official stated reasons were different, but that scandal sure came up in discussions. Re: Alex's stance on Richards scandal - can't find it right now; it's been a while. He himself is not going to answer, as you can see. ---- (*) This was coming from Bryan ["Have you ever kissed a girl"](http://www.zdnet.com/article/how-suns-need-to-control-the-code-cost-them-the-company/) Cantrill - the guy who had no problem directly insulting men in purely technical discussions; but says using 'he' instead of 'them' is a fireable offense.
Indeed. And packet _generation_. Which is effing _awesome_ if you're building networking stuff and just want to test things. Like firewalls.
Thanks for that link. Very useful :)
You have too many choices - that's the problem. Try something else, like [cookiecutter-pylibrary](https://github.com/ionelmc/cookiecutter-pylibrary), maybe that will suit you.
Looking at it, I realise that the docs for linecache say you can use it for 'any file'. In practice, it's really for Python files, and it assumes that the encoding is UTF-8 unless there's a magic `# coding:` comment specifying something else. It's pretty easy to get a specific line from a file in general, though: with open('path/to/file', ...) as f: l = f.readlines()[lineno-1] # -1 to convert 1-indexed line numbers to 0-index EDIT: [Python issue 11726](http://bugs.python.org/issue11726) deals with this.
I would love to see a simpler, more convention based way to package simple modules in Python. I don't think you've got all the details right (e.g. using .gitignore to exclude files from distribution sounds like a bad idea - the files I want to distribute and the the files I want checked into version control may well not be the same thing), but I completely agree with your basic idea.
Great posting!
I have the 3.4 version, can I just do a update or I have to uninstall and install the new one?
Thank you too!
&gt; I think you're confusing python modules with the one javascript file npm installs. But that one .js file usually has many commonjs modules inside it. I am most distinctly not. I'm saying that having two packages inside a src folder is not a common packaging pattern, as it's uncommon for a single package to install multiple packages. There are other benefits to having a src dir, as you have linked, but none are especially compelling. I was unclear when I said modules instead of package however. I tend to do that when I talk about python packaging, since I want to be clear when I'm specifying the package and the python package you are packaging. Too many packages. I can see where you might have thought I was referring to a single file. No, I'm referring to (instead of a src dir) you have a dir the same name as your package, similar to how 'requests' is setup: https://github.com/kennethreitz/requests 
Nice! Had to find out how it worked... So you've probably seen this for arrays: &gt;&gt;&gt; array = [1, 2, 3, 4, 5] &gt;&gt;&gt; array[1:3] [2, 3] odictliteral *(ab)*uses this via `__getitem__`: &gt;&gt;&gt; class X: ... def __getitem__(self, key): ... print key &gt;&gt;&gt; x = X() &gt;&gt;&gt; x[1: 2] slice(1, 2, None) &gt;&gt;&gt; slice(1, 2, None).start 1 &gt;&gt;&gt; slice(1, 2, None).stop 2 Though it uses multiple slices: &gt;&gt;&gt; x[1: 2, 3: 4] (slice(1, 2, None), slice(3, 4, None)) That's an ordered tuple, ready for an OrderedDict. Very cool. 
In the end you still have to use [Setuptools](https://pypi.python.org/pypi/setuptools) :(
3.5.0.alpha2
Plot twist: Plumbum === lead
Indeed, a middleware layer is a great approach as well. Not sure what to advise about getting it to work with Apache, I'd fall back to the error logs &amp; debugging though... it's probably just a matter of getting those headers right, as you suggest. I don't have any experience solving problems with Apache as a proxy though, unfortunately. Good luck with it! 
You just added more length and added absolutely no new information. 
And yet, the author uses hyphen-minus instead of a proper hyphen... go figure... :D
not pythonic
3.5.0-alpha(.)2* Semver.
That would certainly meet a need, I think.
Drop the dot between alpha and alpha version and I could go for that in the name of readability. 
Yeah. Never bought much this argument. Knowing the internals is great, but I rather learn it organically, as needed, than put myself to an often unpleasant experience writing boring code when there are tools that would make my job easier. The main thing with this is, if you take a look at Qt Designer, yes, it abstracts stuff for you, but it's still a rather complex tool, with some mastering needed to use it productively. If you started with it, then two things may happen: One, you don't ever need much more than what Qt Designer gives you; two, you do, and have to learn to do some stuff by hand, but less than if you didn't use Qt Designer at all. So, lets say it's a 50/50 chance of never having to learn how to do it by hand. If you don't learn Qt Designer first, though, now you learned a bunch of techniques and a whole way of doing things that's slow, boring, more prone to errors, and you might never use again, after starting using Qt Designer. Anyway, this is a lot longer than I intended, but to conclude: learn the practical way first, using the tools actually used by professionals, and trying to be efficient, rather than maximize learning, or something like that. If you have to, or if you ever find yourself struggling with the more advanced stuff, go back and learn the by hand way, the internals and that stuff. Off course, I'm talking from the point of view of a somewhat experienced developer, who wants to learn something to use on the job, or just to expand your knowledge. If you're starting out, perhaps taking the harder path has its advantages.
You post this every week?
Also, they don't show the complete solution anywhere.
This article has an error. The function isn't defined correctly. When defined as shown in the article, `euclid(100,140)` returns 0. The error is that for some reason the first definition doesn't include the `or a` discussed later in the article. I wrote this on the command line with Python 2.7.8: &gt;&gt;&gt; def euclid(a, b): ... return b and euclid(b, a%b) ... &gt;&gt;&gt; euclid(100, 140) 0 &gt;&gt;&gt; def euclid(a, b): ... return b and euclid(b, a%b) or a ... &gt;&gt;&gt; euclid(100, 140) 20 Frankly, the algorithm used isn't as simple as discussed. A lot has been packed into the one line of the function and makes the function significantly more difficult to understand, especially for a beginner. /u/raymii should also make sure to check his blog post for errors. An error like this can cause a significant problem for the beginners the article is targeting. Edit: formatting
Just install the new version. 3.4 and 3.5 install into different directories. If you use the default install directories, you can install 32bit and 64bit flavors of the same version. Then read the section on "Using Python on Windows" in "Python Setup and Usage" in the manuals. In brief, "py -34" starts python 3.4; "py -35" starts python 3.5. It is very painless to have any combination of python 2, python 3, 32bit, 64 bit versions installed on one box. 
Run the installer as administrator, even if installing just for you so it can install a new c runtime version.
perfect is the enemy of both good enough and incremental development
And if incremental development doesn't reach good enough for most people, that isn't good enough. 
[unittest.mock](https://docs.python.org/3/library/unittest.mock.html) is a really useful library for this kind of thing. you can just mock out the return value of a callback so you can test the function that calls the callback. alternatively, you can test the callback itself and mock the behavior of the calling function. in terms of straightening out a mess of overdesigned, deep inheritance trees, with multiple layers of indirection...that's a sticky wicket and will take some time. first you need to develop a really comprehensive testing package that will codify the correct behavior of the application. once that's taken care of you'll have a lot more ability to refactor with some confidence that you aren't breaking things. 
This is good stuff. I use Tornado and while it is easy to step through and understand what's going on, I still wonder how it all started, what the authors had to know in order to write software that impressive. I look forward to the rest of the series and the book.
&gt; what the authors had to know in order to write software that impressive. All of this: https://tools.ietf.org/html/rfc7230 https://tools.ietf.org/html/rfc7231 https://tools.ietf.org/html/rfc7232 https://tools.ietf.org/html/rfc7233 https://tools.ietf.org/html/rfc7234 https://tools.ietf.org/html/rfc7235 
The spec is massive. Even on top of all of this, they did it using Python's design paradigms, added wsgi support, added long lived connections, coroutines, etc etc. All in a tidy package (I feel that reading through Tornado's source gave me a better understanding of Python). 
It's not an IDE - it's primarily a layout designer where you graphically create GUI objects. You can also setup event actions (Slots/Signals). Once you create the layout you have to write the Python code to make use of the GUI. Here are some notes I made when I was learning PyQt. I'm very inexperienced with PyQt and these notes are just a barely organized collection of notes that I found helpful as I worked through some tutorials: General Process ----------------------- 1. Place widgets on GUI using QtDesigner. 2. Apply layout controls to widgets. 3. Apply a grid layout to the background widget to allow resizing. 4. Define signals and slots in Qt Designer. 5. Save layout file, gui.ui. 6. Generate Python class: pyuic gui.ui -o gui.py. The class name is Ui_mywidgetname - the name of the top level widget. For this example the class is Ui_Form. 7. Write application code which inherits from the GUI class defined in gui.py. 8. Write custom slot methods to implement functionality. 9. Write a __main__ routine which instantiates the GUI class and launches application. Example main.py ----------------------- import sys from PyQt4 import QtCore, QtGui from gui import Ui_Form class MyForm(QtGui.QMainWindow): """Note, the MyForm class should inherit from the same PyQt class as specified in QtDesigner.""" def __init__(self, parent=None): ' Initialize the GUI object QtGui.QWidget.__init__(self, parent) self.ui = Ui_Form() self.ui.setupUi(self) def add_entry(self): ' This is the method for a custom slot called add_entry. self.ui.lineEdit.selectAll() self.ui.lineEdit.cut() self.ui.textEdit.append("") self.ui.textEdit.paste() if __name__ == "__main__": ' Create an instance of the GUI class object and show the form. app = QtGui.QApplication(sys.argv) myapp = MyForm() myapp.show() sys.exit(app.exec_()) Signal and Slot Editing ----------------------- You can define event actions in QtDesigner using the Slots and Signals editor. Click the Edit Signals and Slots icon. Click on the object emitting the Signal and drag to the object which will perform an action (the Slot). The editor will let provide a list of the relevant Qt signals that can be generated from the Signal object and the actions that can be performed by the Slot object. To define a custom slot (action method) drag the signal to the main form. Select Edit, click the plus button to add a slot and type a custom method name. Modifying attributes ----------------------- To modify any of the Qt widget attributes shown in QtDesigner Property Editor from PyQt use the method: set* where * is the property name. For example, to set the readOnly property for the textEdit widget use ui.textEdit.setreadOnly(True). Slot Methods ----------------------- Remember to make a method for each custom slot. Review the slots defined and create a dummy method for checking layout and signals: def myslotmethod(self): print('myslotmethod') Run the main module from the command line to view errors or be sure to redirect sys.stderror or log errors. Layouts ----------------------- After placing all widgets apply layout controls. After applying layouts select the background widget and apply the grid layout. This will allow the entire layout to stretch with the window. Here are more details on using layouts: http://qt-project.org/doc/qt-4.8/designer-layouts.html 
Chuckle-worthy.
Hey, I made something similar: https://gist.github.com/dankrause/9488553 You use the subscribe class method as a decorator to subscribe to any number of event type globs, then you make Event instances with string event types, and arbitrary arg and kwargs, call their publish methods, and subscribers are called if the event type matches their globs. I never bothered adding an unsubscribe method or anything, but it works nicely.
Is coding for the pi using python relatively easy?
Lol I see this just after I finish setting up an Apache server 
Looking forward to the rest. Thanks 
any disadvatages in using this or plumbum? how about speed?
There's a lot of syntax errors there, I think this is what you meant: &gt;&gt;&gt; def main(): x = eval(input("Give me a number: ")) for i in range(10): x = x ** x print(x) &gt;&gt;&gt; print(x) And that just gives me: NameError: name 'x' is not defined on line 7 Can you explain a bit more? 
I'll see what I can do.
This error has now been fixed on master (https://github.com/scopatz/xonsh/pull/3) thanks to paradoxxxzero. I'll probably do a micro release with the fix in the next day or so.
Not yet. I don't like the `$?` syntax, so I have yet to implement it. I was thinking about having just a builtin `statuses` list. Thoughts? I am very open to sugestions here.
x is assigned inside the function main() - it does not exist outside of it.
TLDR; 1. what is html 2. iframes 3. server side templating (with tornado) 4. tornado and websockets + javascript: refering to the official doc.
done.
Ok! The mobile site should be fixed. Sorry about that.
OK, wait... Let's say I built a simple game that runs in terminal, and hosted it on a server like this one. Could my friends connect to the game using telnet and play? Probably a stupid question.
http://i.imgur.com/NIVsFp9.gif
This is the most correct answer you'll get. Remember you are not testing the system which the callback is interfacing, you are testing the isolated unit itself. Remove the system which it is interacting with via mocks in order to test in isolation.
What happened to that pinned post concerning homework questions? Anyway, try asking in /r/learnpython or /r/learnprogramming, you're more likely to find help there.
No, we will not do your homework for you.
The course is run by RMIT (a university in Australia), it's the current version of a bachelors degree developed at MIT some years ago. It begins with Jython to introduce core concepts and from there moves on to Java and later (optionally) C. Thanks for the responses. The URL for those interested: https://www.open.edu.au/courses/it/rmit-university-bachelor-of-technology-computing-studies--rmi-cpt-deg-2015#panel-2015RMI_CPT_DEG4
Thank you
Could you pause it between scenes too?
Thanks to all for your suggestions 
Good question, mods please leave http://www.reddit.com/r/Python/comments/2voohz/homework_learning_and_posts_on_rpython/ pinned.
https://github.com/gabemart/hipku
I've been using pyp for quite a while, and find it very useful for editting in between pipes. Once I got used to it it's awesome how many grep/sed/awk/... commands it replaces. But it runs in a shell - so the output from pyp goes back to bash (sh, dash, ...). I am "in bash" and pyp is just another command available. OTOH xonsh is a shell, and I am "in xonsh" which (so far) looks more like being "in Python". Another way of looking at it: in my normal shell **ls** is builtin, and **pyp** is a nice extra for "python editing", whereas for xonsh "python editing" is builtin and **ls** is a nice extra
This is the first iteration that implements ‘expect’ as a fixture. This is really the third attempt at an ‘expect()’ implementation that allows multiple failures per test. I'd love any feedback. 
Cause we get to mock them.
No, it's just an example in the readme. 
FYI, I've also made a web page using this library. You can find it in the description on github. Try it youself and you'll know the answer.
Actually because of this comment in /r/php : http://www.reddit.com/r/PHP/comments/2yg2d6/worlds_most_pedantic_pullrequest/cp9bjym
Pyglet just got a new major update a few months ago which is pretty good. Depending on what you're working on (i.e. sprite based stuff) you might want to check it out. If you're a mac user and you want to get Pyglet to work with retina I've had some luck and I'm working on a patch that will help. 
Thanks :)
Pyglet is okay. I like the API, for sure. I've had some more trouble getting reasonable frame rates in real projects than I'm comfortable with, though, but I haven't really given the latest version a try.
I'm not the most familiar with the project but I'm pretty sure the newest version is a significant change from before. I haven't gotten very far in using it yet (I'm just in the planning stages of a game) so I can't comment on performance. 
YES!
The names *are* oddly similar for you to have missed that.
You can access and manipulate it through sys.path
On my MacBook, it's handled from ~/.bash_profile. Python installer updated this file for me. Hope this helps. 
No I don't import any other modules, as I said its VERY simple. I tried to install py2exe and it says I don't have Python in my registry... Sorry found sounding like a idiot (which I am) but how exactly would I go about packaging my code? If its any help I am running Windows 7.
Pandas for Python, without question. Could probably provide an example in 4-5 lines when I get a few minutes. 
Are you serious? Have you googled this at all? What can we possibly do for you that 10 seconds of looking around online can't? There are innumerable ways to do this built into python. And it should take about 3 lines of code to write your own function. Here is a link to the python docs that go over this: https://docs.python.org/2/library/math.html That is the first link when I search "python degrees to radians"
https://github.com/takluyver/pynsist
Python is an interpretave language. You must have it installed to ruan a Python script.
/r/domyhomeworkforme
Now now, that's just mean...
Ok, man, thanks for the help!
I like the way you write docs boy!
`echo "export PYTHONPATH=$PYTHONPATH:/opt/local" &gt;&gt; $HOME/.bashrc`
Could you not simply convert it to a .exe file? 
examining [the scripts directory](https://github.com/mfitzp/Wooey/tree/master/scripts) leads me to believe that the scripts that get automated UIs have to be written using argparse? I use argh for my script command line parsing. argparse is painful. Given that you are using flask for webappdev, I was guessing that you expected the scripts to be written using clint.
I did that. I used for key in jsondata: Print(key) It out putted keys one of which is interactions. I now need to parse through that list to find 'text' I tried For text in jsondata[ "interactions ]: Print(text) All it does is print out text a bunch of times
Useful to know, thanks. 
/r/learnpython
The main challenge to programming in Javascript is not the language, it's the DOM and the differences between browsers. You'll have to deal with those no matter what language they're in. JS is also not a great language, so there are advantages to using one of the Python-in-JS implementations. But don't expect it to make browser programming straightforward.
As many times as this has come up, the answer, to me, is unless you're just curious about the theory behind it don't do it. JIT interpretation is obscenely resource-intensive, meaning the only thing that makes sense performance-wise is something precompiled. There are still many problems with this approach. First, all implementations are 'leaky' by nature, because they have to make assumptions on the Javascript equivalent of some Python code. How do you treat the this/self variable? Well, javascript handles it much differently than Python does, and closing it requires some extra trickery that you'll mentally have to keep track of while developing. Second if you run into issues, you will have a hell of a time debugging. I don't know if anything can be done with symbols like minified libraries. Is your code failing because of your programming mistake, a mistake of the library writer, or an assumption that the library writer made about how Python should port to Javascript? Good luck figuring that out. Finally, Python and Javascript are by nature two very different animals that approach object-orientation in different ways, and you wind up losing on both sides as the library developer has to find that middle ground. Now if you're talking about a web browser with a Python engine embedded, that's a whole 'nother ball of wax.
&gt; g = pd.TimeGrouper('Q') // can also do "3m" this is great!
Okay, thanks for you help, I did expect an answer like this one. As I said, I want to use Python as a replacer for JavaScript. I have no problem reading or fixing the JavaScript code that is generated but writing the code itself in Python would accelerate the development process significantly. I'll look into the precompiled implementations and research if they are actually feasible to use or if they'll generate more work than they save. As I mentioned, performance isn't a huge issue in my case either, I won't be using it for complicated stuff. Are JIT interpreters really that bad? I imagine that they would be good enough for general use, they do have a fair amougnt of popularity and community around them. Do JIT interpreters have the same problems as the precompiled implementations or these ones work generaly as intended (with an added overhead though)?
It's quite hard to decode data without knowing anything about it. What language is it written in? What program produced it? What kinds of things do you expect it to say?
never heard of this one - I don't use windows but it looks relatively straightforward as an answer for the OP's question.
You'd be better served by brushing up on your JS skills. But whatever, give it a shot. Just make sure you update us after it's all said and done.
Thank you so much /u/cstoner i finally had time to run the code through PyCharm and it worked!!! 
Flat is better than nested. My ideal is to try to make each line atomic in the sense that for whatever action is happening on any given line, it relies as little as possible on other lines for the structure of it's syntax. Don't get me wrong, lots of times I try to put as much into a single line as I can. I'm a big fan of list(map(func,seq)) type stuff but I try to avoid getting too meta. In the time it takes to make some meta-system only to avoid typing, you could have just typed every letter of it. Parallelizing your logic onto multiple lines might seem redundant, but it also makes it easier to work the 'meta' with the text editor. I really don't care if doing something 'meta' is going to save me a hundred lines versus a flat approach, but part of that might be bias from using a modal, line-oriented text-editor.
this seems to be some kid from my intro course, in which case we were told not to use eval xD
Disclaimer: I helped design RapydScript. It depends what you are looking for. The closer you get to 100% support for Python, the more weight you "pay". You should also consider pre-compiled vs. libraries that compile in browser. PyJs is the heaviest of the libraries. PyJs tries to mimic Python exactly, so it'll be a little easier to write. The cost is that you'll have large files (on the order of MB) which are heavy. I did not like using it because tracing javascript errors back to the Python source was painful. After PyJs, there's Brython and Skult, which both compile in-browser. I haven't looked into them much lately, but they are lighter, on the order of 100's of kb for the libraries. I don't want to go into them much since I'm not up to date, but they are interesting. Last, but not least, there is RapydScript. RapydScript is more like JavaScript with a Pythonic syntax. Since the languages are pretty similar, 90% of your Python code will probably just work, and it will be very fast and lightweight. It is pre-compiled so the client won't have to wait to load the page. Also, since RapydScript is JavaScript under the hood, the compiled code looks very similar to original, and will work with any JavaScript library. 
That's actually an eye opening idea, thank you! Would you happen to have an example of this I could reference? 
Try making a board game with Tkinter module, and create an Ai to play with you. We had an assignment like this for our programming class and it was a lot of fun.
I'm creating a script that uses a csv to make an html form and php scripts to post to a mysql database. It's basically like a python typewriter, but I can make all that in 3 min once it's done. My next step will be to make a GUI, probably with tkinter.
Has anyone tried this with huge consecutive Fibonacci numbers?
You can define all your functions in a script, then do any setup calculations you need in a block at the bottom: if __name__ == '__main__': Do stuff This part will only happen when you execute the script, rather than import. Then, I use Ipython, and type `run myscript.py` to load that all. Then you have it in the interactive interpreter to play with. I believe ipython can run R scripts also.
Pull requests are always welcome. And more detailed hints are appreciated.
* support IPv6? * since 255 ** 4 is quite huge, xrange() may be better. * this approach seems not right. E.g. The last IP in the loop is (254, 65024, 65024, 254)
If this is true, RapydScript is a Godsend, thank you sir.
&gt;In R I work with Npp (with NppToR) and usually just run highlighted lines with ctrl+r, load the variables into workspace and do whatever I need to do. Is there an IDE for python that would offer a mechanic like that? If you are familiar with R's knitr, sounds like maybe IPython notebook environment may be the way to go for you if I understood you right. I would install python and ipython notebook using Anaconda distribution to get up and running easily. It is fairly easy to run R code from within Python using [rpy2](http://nbviewer.ipython.org/github/pybokeh/jupyter_notebooks/blob/master/pandas/PandasCheatSheet.ipynb#rpy2). &gt;What kind of practice is usually used when using Python professionally, do you always just source the full script? I'm a data analyst and use a combination of plain vanilla py files and ipython notebook where I use the latter to prototype the former. I use VIM and may look at into using PyCharm later. Others may use Spyder IDE if coming from MATLAB background.
http://www.reddit.com/r/beginnerprojects
Do you have any good sources where someone can learn Python3 asyncio more in depth?
I'm not a fan of Java. But, I was under the impression that Java includes backward compatible bits with the latest JRE or JDK. The Python method installs each version into a different directory distinguished by 32vs64 bits, and major.minor version numbers. This allows you to install specific versions that may be required by specific applications, while still tracking the latest versions. This situation is a rather general solution to the problem created by the failure of many application developers to migrate to Python 3. All Python2 only applications should have been abandoned but for maintenance, along with Python2 itself. The only reason I still use Python2 is because a few packages have not been upgraded in the 6 years since Python3 was first released. I'd rather rewrite than wait for those slowpokes to catch up.
I need part 2!!
1.Ipv6 done 2.I have a trick that converts all ranges to xranges... Its called python 3 (I was going to do something about xranges, but I found out python 2 doesn't support large enough numbers to run the program anyway.) 3.Your right, t'was a bug import time import sys from pyhipku import encode n = lambda num, ind, pow2: (num&gt;&gt;(ind*pow2))&amp;((2**pow2)-1) for i in range(0, 256**4): ip = [n(i, x, 8) for x in range(4)] #print(".".join(["%s"]*4) % tuple(ip)) print(encode(".".join(["%s"]*4) % tuple(ip))) #time.sleep(1) for i in range(0, 2**128): section = lambda num: "".join(["%x"]*4) % tuple(n(num, x, 4) for x in range(4)) ip = [section(n(i, x, 16)) for x in range(8)] #print(":".join(["%s"]*8) % tuple(ip)) print(encode(":".join(["%s"]*8) % tuple(ip))) #time.sleep(1) 
With JS Harmony taking hold and bringing some of the good Python ideas (e.g. comprehensions and destructuring) to JavaScript, I have a hard time believing Python is so much better than JavaScript that it's worth the additional level of indirection a transpiler would create. I've written Python and enjoyed doing so, but JavaScript is a way nicer language than people give it credit for, and it isn't hard to learn. (In fact, many of the so-called Bad Parts exist because one of JavaScript's goals is to be easy for developers of all experience levels to use.)
So I take it you figured out exec()?
That would be nice, but I don't think it would be nearly as nice as adding `OrderedDict` literals. My favorite version is to use square brackets: &gt;&gt;&gt; odict = ['a': 1, 'b': 2] &gt;&gt;&gt; odict OrderedDict([('a', 1), ('b', 2)]) This is a nice dual to `dict` and `set` literals being unordered containers using curly brackets, with `list` and `OrderedDict` being ordered containers with square brackets. Obviously we already have the machinery to parse this, and it might mean that `OrderedDict` finds a new home in `__builtin__`/`builtins`. This is a structure I use a lot, if I could use it without having to import `collections` and use an iterable of tuples to construct one I'd be much happier.
You may find [this](https://wiki.theory.org/Decoding_bencoded_data_with_python) useful, at least as a starting point.
I like the set operator |. I've been implementing a rough geometry library that lets me add lines, polygons, solids, and implementing them with the set operators. This seems like a self-consistent use case.
Thank you
From the title, I thought you meant IDE/editor. In both cases my answer is Emacs.
I would focus on ease of (developer) use and use Python only. Question for you: why are you searching/replacing data in files on servers? If you are attempting to update server configuration, this might be a good time to investigate configuration management tools such as Ansible, Chef, Puppet, or Salt.
&gt; Saying my data doesn't make sense is irrelevent to the actual problem and false. you don't know what i'm working on, do you? I didn't say it doesn't make sense. I said to look closer at it and to make sure it does. You should be able to solve a problem like that by hand.
hardcore bestiality porn.
It seems to me that dictionaries should have all set operations available. In fact, dictionaries should be considered a special case of sets where the elements of the set can be associated with a value.
The OrderedDict literal syntax, which I've wanted for a time as well, should be o{}, just like we have r"" for "raw" strings.
Or just make regular dicts ordered by default. 
Hi, Thanks for the reply but I don't want to install my app. I would like to use my app like a git client. Do you have any idea?
This kind of total-history thing was one of the (unstated) motivating golas behind xonsh. Maybe make an issue for it? Maybe someone will pick it up before I get to it :) I'd add a timestamp to that list too!
Most people don't want their exe's to have a command line, so that's disabled by default. Just put it on the path.
A git client is most definitely installed on the end user machines.
On linux? Definitely. Windows? Not at all certain. Most likely not.
Before you go down this super-nontraditional route, please spare a thought of mercy for whoever will have to maintain this codebase years from now.
No but there is loads of them just by using this thing called google. 
Compulsory vim response. But for me, it's music, must be repetitive with little/no vocals, and nobody to distract me.
I use docker at work, and I love it, I have not looked into vagrant, bit from what it looks like, it seems like a middle ground between docker and a VM. I can't comment on vagrant, but some niceties about docker include: low running overhead, isolated, predictable environments, linkable instances of docker containers. Docket tries to provide a single command, to deploy, such that you cannot/ should not have to touch the production environment, and only rebuild it when you push new code.
PYTHONPATH=foo python bar.exe
With risk of sounding stupid - what's the difference? :)
I work with a lot of scientific data where we have arrays of data for each parameter or by some other scheme. We want to identify each array by name, rather than by index. Think a CSV file, it's nice to refer to a column by the header rather than by its column number. I found that an OrderedDict is an easy choice here for implementing our core collection type, since our use case is a little more complicated than just CSV files. We use JSON files for configuration. They're easy to edit by hand and easy to use from multiple languages. In some applications we have the requirement that certain fields should be overwritten with new values after an appropriate action is performed. By simply providing json.load with an extra parameter (object_hook? Something like that, can't remember exactly off the top of my head) it uses ordered dictionaries instead. This preserves the order of the fields when we overwrite the configuration file. Due to the nature of the data I work with ad mentioned earlier, OrderedDict makes a good choice for many cases, such as when I'm converting a collection of array like data into a collection of 1 to several values. Nested OrderedDicts just make it easy. Those are 3 use cases for me that I can think of after just waking up, there are definitely more. I just think it's a better solution than having a lot of lists of tuples that I would have to iterate over manually instead. 
 &gt;&gt;&gt; [5,4,3,2,1] == [1,2,3,4,5] False
I think that would be harder to spot in code, and it would make the implementation in the parser more difficult. We don't allow "string comprehensions", and in many cases the r can be removed from the string, depending on contents, without changing the data contained in the string. That won't work with the syntax you propose. 
Ordered would mean you're guaranteed to get the items out in the same order you put them in (i.e. when iterating). Unordered means the data structure is free to shuffle things around as it suits: &gt;&gt;&gt; ud = {} &gt;&gt;&gt; ud['key12'] = 1 &gt;&gt;&gt; ud['key97'] = 2 &gt;&gt;&gt; ud['key3'] = 3 &gt;&gt;&gt; for k in ud: ... print ud[k] ... 2 3 1 
Ordered only guarantees that the order won't change. Sorted means there's a particular structure to the order. For example: &gt;&gt;&gt; unordered = {'2', '4', '1', '3'} &gt;&gt;&gt; unordered # A set is unordered. {'4', '3', '2', '1'} &gt;&gt;&gt; ordered = ['2', '4', '1', '3'] &gt;&gt;&gt; ordered # A list is ordered, but not necessarily sorted. ['2', '4', '1', '3'] &gt;&gt;&gt; sorted_list = sorted(ordered) &gt;&gt;&gt; sorted_list # A list can be sorted. ['1', '2', '3', '4'] 
cool story bro edit: not sure why I'm being down voted
i have seen plenty of IDE vs IDE discussions here in the past. So I was looking more around physical environment. But i have still yet to look at Emacs, should check it out. Kinda hard for me to step away from Spyder. Would love to know what you would say makes Emacs better than other IDEs.
I started with Brython because it is very pythonic. I created a website based on brython, tornado, websockets, etc and brython was easy to use for this little project. Now I'm creating a new web site using Django and several javascript libraries. This project is larger. I started with Brython but I had several issues: * jQuery and other libraries integration is hard * Bugs with Internet Explorer * Performance issues: loading time, browsers differencies So I searched an alternative to Brython for this project and I tried RapydScript. I'm very happy with this choice: * jQuery and other libraries integration is very easy * Internet Explorer 9 is compatible * Loading time is very fast, like Javascript I made my own Django tag for RapydScript compilation but you could find compatible assets manager.
My implementations works and are consistent :) http://archery.readthedocs.org/en/latest/bow.html http://vectordict.readthedocs.org/en/latest/algebrae.html Consistent with intuition (linear algebrae test of distri/commut/...) http://vectordict.readthedocs.org/en/latest/consistent.html https://github.com/jul/ADictAdd_iction/blob/master/docs/source/result.txt
Maybe you can try using other LP libraries? [PuLP](https://pypi.python.org/pypi/PuLP) is a good candidate, as it is an interface to known solvers.
Py2exe produces an executable with several DLLs and other dependencies. It can also combine and produce a single EXE. In either case, it doesn't have to be installed. It is a self-contained executable. If you use py2exe, it will show a console window in Windows. If you are on the command line it will output inside the same window.
Use grin
I have alredy found a couple of Django packages to ease using RapydScript. That's actually how I started looking into this. Here, in case anyone is interested: https://github.com/traverseda/django-pipeline-rapydscript https://github.com/pztrick/DjScript
CoffeeScript looks quite nice too. Is it a better alternative to the ones I mentioned?
Vagrant is specifically "finally a good CLI frontend" for VM drivers. Whether you're using docker, VMWare, Virtualbox, or something else, Vagrant makes it super easy to build, destroy, manage, and access (via ssh) the virtual machines.
Reminds me. [Always code as if the person who ends up maintaining your code is a violent psychopath who knows where you live.](http://blog.codinghorror.com/coding-for-violent-psychopaths/)
Even easier is to import pdb on the command line and you are immediately dropped down to the debugger: $ python -m pdb myscript.py 
Well done. Don't forget about the print statement. While it lacks the power of pdb, it is useful in simple debugging cases.
Draw diagrams (BY HAND, not with some fancy pants UML program or other charting solution). Get index cards, write down a short description of what various functions/classes/etc... do, what they expect as input, what output they give. Focus on understanding one workflow/use case and all the parts involved in executing that. Then another. And another. Eventually you can figure out the 'big picture' from there.
This would make a great band name.
Then what is the purpose of having them unordered? 
This is something I did a lot of when I first turned up and have since begun to neglect for the sake of trying to get on with adding my own code to the project. Perhaps I'd benefit from spending more time planning and mapping out the code that's already there. Thanks!
256.256.256.256 (well any one of the ipv4 octets being out of [0-255] yields crashed program/internal-server-error As an example http://pyhipku.lord63.com/170.249.76.655 or http://pyhipku.lord63.com/170 etc. In your 'split_ip' function you throw an exception when the IP is malformatted and the program exits, the webserver doesn't get the data it is expecting and it throws an internal server error- for a webby, cgiy kind of program the right thing to do would be to still produce a valid web page, either explaining the error, or maybe in this case, to go ahead and still produce 'normal' output using the partial seed. Well, that is what I would do anyway. Your parsing and exception throwing is fine if a human is seeing the output of the program directly, but you're not following the cgi spec if you barf and dont send all the data back to the web server.
In /r/software many people were inclined to say how garbage this data is. Even based on my personal experience and knowledge, this is generally unrepresentative of what I've seen. 
You could try dms, bitbucket.org/anacrolix/dms. 
The data seems highly skewed, and presented badly. More importantly, it's bad practice to use averages for values like salaries. They should be using median income. 
I'm inclined to think the data is fine -- especially since they pulled from many different data sources -- and think more that the analysis is a bit flawed. As /u/uberalex pointed out, medians usually do a better job of capturing the "true" mean for salaries because salary distributions are often highly skewed. Also, if you look at the average salary by years of experience, you'll see that the only age group making &gt;$100k on average have 20+ years of experience. It seems plausible that more experienced developers use certain languages (C/C++ especially) and that biased the averages for the language graph. This should've been checked and (if true) corrected for in the analysis.
I don't like this, but I seem to be in the minority. Here's a summary of my case: 1. If you combine `dict`s with `+`, then the `|` for sets becomes a wart. If you instead use `|`, you're suggesting that `dict`s behave like sets, which they don't. 2. It makes the language bigger for little benefit. 3. We'll have an (arguably) nicer way of doing this whenever PEP 448 rolls around. That is, `c = {**a, **b}`. And since I *really* don't want to be doing research right now, here's my rant: ---- On my first point: When it comes to builtin containers, `+` has a single interpretation: it concatenates things. If I write `a + b`, and `a` and `b` are `list`s, `tuple`s, or `str`s, the result is simply the concatenation of the two objects. The fact that there is a *single*, *simple* understanding of what `+` does cannot be understated: it's what makes a language "small" and easy to learn. Now, if I define `+` on `dict`s, I'd like to have a single interpretation for what `+` does with *all* builtin containers. It can no longer mean concatenation, as `dict`s are unordered. Instead, `+` will mean something like this: make a new collection by iterating over and inserting elements from `a`, then iterating over and inserting elements from `b`. This is a generalization of concatenation for ordered collections, and precisely describes what `a + b` means for `dict`s (combine the `dict`s, and if a key is in both `a` and `b`, keep the value in `b`). What smells, then, is that the union of two sets `a` and `b` *should* be written `a + b`, not `a | b`. Why have special syntax for set union? It would just become a special case of what `+` does. But concatenation is *also* a special case of what `+` does, and it doesn't have it's own operator. OK, so maybe implementing `dict` combination with `|` is a better option. Perhaps, but I think it's still ugly. The reason is that `dict`s do not behave like sets. A `dict` *is* a set of key:value pairs, true. But we also require that a `dict` be a surjective mapping. This means that if we think of a `dict` as a set, no single key can appear in two pairs in the set. In other words, a python `dict` is a set of key:value pairs, but a set of key:value pairs is not, in general, a `dict`. Take, for example, the dictionary `dict(a=1, b=2)`. This is equivalent to the set `{('a', 1), ('b', 2)}`. But the set `{('a', 1), ('a', 2)}` is not equivalent to any `dict`. Therefore, writing `a | b` in the case of dictionaries is very misleading to those of use who are math nerds, because the (mathematical) union of two `dict`s may not be a `dict`. For example, `{('a', 1)}` is a `dict`, and `{('a', 2)}` is another dict. Their union is `{('a', 1), ('a', 2)}`, which is not equivalent to a `dict`. Therefore, if we write `|` to combine two `dict`s, we are "abusing" the term "union". I don't like that. ---- On my second point: I don't see much benefit in the additional operators. As it is, one must write `c = a.copy(); c.update(b)` to achieve the same thing as `c = a + b`. Clearly the second syntax is shorter, but it is less clear. In the case of duplicate keys, which value ends up in `c`: that from `a` or that from `b`? More importantly, however: will the new syntax actually be *used*? In practice, we don't often need to create a copy of `a` as above. That is, it's usually sufficient to write `a.update(b)`. Before seriously considering implementing `+` or `|` for `dict`s, I think someone should grep through a few large codebases and determine how often such a construct would be useful. Perhaps it will be useful, but my guess is that it will be kind of rare. ---- Thirdly, as /u/indosauros points out in [this comment](http://www.reddit.com/r/Python/comments/2ymjt5/new_operators_for_python_dictionaries/cpbclpv), PEP 448 will introduce additional unpacking generalizations, so that `c = a.copy(); c.update(b)` will be written as `c = {**a, **b}`. I like this. It doesn't change the meaning of `+` or of `|`. It still requires learning a new rule: right unpackings override left unpackings, but it is useful in more cases than `a + b`, namely in unpacking function keyword arguments. PEP 448 is already accepted. In this light, I'm not sure that I see any reason to consider overriding `+` or `|` for `dict`s.
I use them a lot when I want to guarantee an order of iteration (like a list), but I also want lookup with keys (like a dict). Also, I use them so that my code is always deterministic. A few times I encountered a bug in unit tests, but it depended on the order of iterating a dictionary, so I only saw a failed test maybe 1 in 10 times. By using ordered dicts, that particular dict iterator always had the same order.
I'm working through [this](http://www.amazon.com/Python-Scripting-ArcGIS-Paul-Zandbergen/dp/1589482824) book now. It's very good. Also for tutorials just on Python, not arcgis specific check [these](https://www.youtube.com/playlist?list=PL6gx4Cwl9DGAcbMi1sH6oAMk4JHw91mC_) out. *edit - I know those Python tuts are for 3.4 and Arc uses 2.x but they are still quality tutorials and syntax is basically the same. 
This article makes it easy to think coroutines allow for simultaneous or parallel processing. This would be mainly of interest for CPU bound applications. With coroutines your code is still running in a single thread, but you don't even have to worry about that if your application is IO bound, as with a web server. The use of coroutines allows for very elegant code when working with independent tasks that need to interact occasionally. I love coroutines. I just wish there was a way I could use them to parallelize my heavy-duty engineering calculations.
Nice, thanks for sharing. PyCharm free edition also has a graphical debugger that's really handy.
&gt; My personal recommendation is to write a test for every piece of code you read. This I totally recommend this. I had been in the same boat and writing tests was a great way to see what was going on. As time passes things goes faster.
I don't know about the environment, but I know about my habits: before I start working, I must skim through /r/python, /r/emacs, other RSS feeds and write a bit of elisp. Takes 20 to 60 minutes. I think it's a bit long sometimes but the best way to progress as a developer.
Looks interesting. But when I hear "django" + "api" I think "Django REST framework". When would we prefer one above the other ?
&gt; American salaries are crazy, I think Reddit is so USA-centric it forgets just how much richer the USA is in comparison to the rest of the world. No, Silicon Valley salaries are crazy. Out here in flyover country we're making something a bit more nominal.
Yeah - but housing is presumably cheaper there. The UK is small, with a high population density compared to the States (really just look at the population density of England - as most people live in England and the Scottish Highlands make the UK figures inaccurate) That means land and housing are far more expensive. And the fact we are an island and have to import everything doesn't help either. The USA isn't perfect but you pretty much won the lottery of life.
Write documentation for the legacy code as you come across it. Use find-in-files to see where functions are called from. Also, put breakpoints in unfamiliar functions so you can learn when they're called, under what circumstances, and what type the arguments are. Add logging or print statements to follow control flow. Refactor code so that it makes more sense, including giving things better names, making sure private functions are not in the public interface, and ensuring each function only performs one specific task. Generally speaking you hardly ever "fully understand what has been created before" even if you wrote it all yourself, since human memory is limited. So you just have to do the best you can with documentation and structure, and fill in the rest with logging and breakpoints.
If you want to know what the average salary is, you use the mean. If you want to know how much the average developer's salary is, you use the median. But yeah, pretty graphs seem to be 'code' smell for poor data analysis.
Jp Morgan. Source: Ex jp Morgan 
I read the article [Stop Using Print for Debugging](http://inventwithpython.com/blog/2012/04/06/stop-using-print-for-debugging-a-5-minute-quickstart-guide-to-pythons-logging-module/) a while back, and have kept that link handy ever since. Print's great, but if you use debug logging, you don't have to comment everything out for production.
Austin, Texas has pretty good salaries for python devs if you don't want to deal with SF level cost of living. I know plenty of mid level devs making north of $100K.
And it should also factor in average salaries or cost of living by region. Figure your typical person in any given position in San Francisco is probably going to have a higher wage than a person doing the same job in Atlanta. Of course, your dollar also doesn't go as far in San Francisco than it would in Atlanta either.
That seems reasonable. One of the cons of using logging is that you have to import it first, instance a logger and somehow manage the level (if you want the benefit of not having it print in production) before you can start debugging. One of the pros of using the print statement is the relative low cost (in terms of efforts) of using it. To me, if I'm in a project that does not already use logging, I think I would prefer using pdb instead of logging if I was to put that much effort to get it started for debugging purposes. Your mileage may vary.
I think it might be a bit higher - it's hard to tell as the job titles etc. become a bit weird as you get more senior. But still it's nothing like USA.
Thanks. The Django REST framework (and others like Tasty Pie and Django Piston) provide automatic REST end-point APIs for Models. This is a tool to cleanly specify other non-RESTful APIs too. In addition, it leverages the power of Django Forms to provide validation.
Wasn't a wide enough survey i guess
If they don't have python or don't have your specific version of python (depending on if your code is compatible) or if they don't have the right version of package X, then you need an exe. It's 1/2 a day to make an exe and saves a lot of pain. EXEs are not only for GUIs, but people that go to the trouble making EXEs for Python usually make GUIs. As such, when you double click the program, the command window isn't shown by default. If you're calling it from the command line, you'll see the output. Since you've already used cx_freeze, you're done. You just need to tell your user to call it from the command line so they know something was actually done.
No it wouldnt be anywhere near the USA but we are nowhere near as cheap as the UK seems to be.
Use a python web microframework. Define your url entrypoint. This will map to a function in python. Do this in a Popen: ffmpeg.exe -i myfile.avi -f webm -vcodec libvpx - Capture the stdout (stdout=subprocess.PIPE). Feed it as the output of your function, to the web, with a content type of video/webm 
Wait? The UK is cheap? Housing in London/SE (i.e. where you can get a decent job) is insanely expensive. Is it more expensive in Ireland? Some of my family live in the middle of nowhere in N.Ireland and it seems cheap, but it would be as it's in the middle of nowhere.
thank you definitely checking this out
ok, now how do I get a visa for the US? 
I would put Silicon Valley and its surrounding area up against almost anywhere in England with the possible exception of a few city center areas. Quick check has them looking similar with currency conversion, which means they are both stupid expensive. 
As a programmer for the last 10 years who moves quite often, I can confirm. Here are highlights that show when I moved from place to place and/or changed income significantly plus what I paid in rent to kinda illustrate cost of living (although I would rent a 3-bedroom house in some places and just rent a single room in others, so the values are $ per bedroom). Most positions involved writing Python. Location | Year | Title | Fulltime salary or contract rate | Monthly Rent or Lease (per bedroom) --------|----|-----|-------------------------------- | ---- | Washington DC | 2005 | Sr. DB Administrator | 46/hr | 1200 Arlington, VA | 2006 | Sr. System Administrator &amp; Tools Developer | 105,000 | 1200 Bumfuck, North Dakota | 2008 | Lead Software Engineer | 80,000 | 300 Austin, TX | 2009 | Sr. Software Engineer | 92,000 | 450 Austin, TX | 2011 | Software Development Manager | 110,000 | 450 Austin, TX | 2013 | Sr. Software Engineer, Internal Systems &amp; GIS | 115,000 | 600 San Francisco, CA | 2013 | Full-Stack Web Developer | 70/hr | 1250 Redwood CIty, CA | 2014 | Sr. Software Engineer, Backend | 145,000 | 1250 San Jose, CA | 2015 | Sr. Software Engineer | 148,000 | 800 
[They are about the same.](http://www.numbeo.com/cost-of-living/compare_cities.jsp?country1=United+Kingdom&amp;country2=United+States&amp;city1=London&amp;city2=San+Francisco%2C+CA) Rent is slightly higher in San Fran. but is made up for by the lower cost of living. [San Jose is far cheaper than London.](http://www.numbeo.com/cost-of-living/compare_cities.jsp?country1=United+Kingdom&amp;country2=United+States&amp;city1=London&amp;city2=San+Jose%2C+CA) America ist wunderbar...
Austin, TX here. Approaching mid level dev. 100k is not on my radar. Think it is time to start looking for a better radar...
Fair enough. I'm still broke.
&gt; housing costs are far less than the Bay area But property taxes are way higher. That being said, yeah, Austin is way cheaper than the Bay Area. I'm just bustin' balls.
Relatedly, average salary for a new lawyer is six figures IIRC, but median is like $45K. Meaning half of all new lawyers make barely more than they'd make without a graduate degree, but everyone looks at the average and goes "even if I don't make it, I'll still earn like 80K/yr!"
This is awesome. I've just been using pdb and try statements.
http://travel.state.gov/content/visas/english/employment/temporary.html#overview
Go to meetups or otherwise build connections and start getting your resume out there. If you are any good, it should definitely be on your radar. Entry level should be anywhere from $45 to $70 (depending on your degree and how good you are). Midlevel should be $65 to $120 and Senior to Principal should be $100 to $150. Especially in any software company located downtown. Arboretum and 360 is spottier. Source: I'm a director at a software company. And no, we are not currently hiring (but we might be in the next few months). 
Why not just test it like one of those early access games like 7DTD , Forest etc and ask the players to report bugs &amp; crashes?
i thought that 'worst case' scenario for CSS in India seemed a little off - $53k and you'd be living pretty high on the hog over there. average programmer salary in India is about $11k according to this: http://visual.ly/salaries-web-developers-india-philippines-usa-and-around-world which seems more believable.
I see you've only been programming for 1.5 years. 100k should probably not be on your RADAR for Austin yet. I spent 6+ years working at many tech companies in Austin and can help point you in the right direction so you can hit 100k within the next few years. If you want, PM me a link to your resume and I can shoot back some higher-paying places that match your skills that are currently hiring.
Python, unfortunately, does not have much success on the game dev front : (. From those only EvE really counts, and it's not pure python. A big part of it is python (game logic), but they wrote the graphic engine in C++. For game dev tools python is heavily used, but for game logic scripting Lua is more popular for being lightweight and easier to embed. For python to be used in game dev it needs to be easy to distribute (or/and embed) and have acceptable performance. Maybe in the future with nukita, pypy, or kivy (on mobile front). Right now C# dominates on indie game dev (unity), and the old beaten C++ dominates AAA game dev. Unity actually supports "python" with boo script, a python like language, but Boo has been dead for years.
Sorry - that wasn't deliberate I just don't know CA geography that well and Wikipedia said San Jose was in the valley. But I guess San Fran gives a pretty good guide - basically the cost of living is around the same but London salaries are lower.
Yeah, but a pair of jeans costs $2 there.
Sorry, this could not be more incorrect. San Francisco isn't in silicon valley. San Jose is actually closer. If you want a map of how salaries are impacted, take a look at a map of the greater bay area. That is the area of impact.
that's what i mean - you'd be living pretty well in India on $53k. hardly seems like a 'worst case scenario'.
&gt; Housing in London/SE (i.e. where you can get a decent job) Oh come on, that's like saying "Housing in Manhattan (i.e. where you can get a decent job)" They have software engineering jobs in places like York, don't they? A quick Internet search suggests they do. You seem to be falling into that same "metro is great, everything else is worthless flyover country" trap that people on the East and West Coasts of the US do.
It's fine. I wasn't meaning to come off as an ass, I was just trying to point out that there are massive variations in any metropolitan area. Actually, unless they are rolling up places like Cupertino and Palo Alto into San Francisco, they are massively more expensive than stock San Fran zip codes. Sort of like the difference between postal zones and postcodes in the UK. Below are two "mid-priced" homes in the middle of Silicon Valley. They go up into the 8 digit prices, right up there with Central London. [Cupertino house](http://www.zillow.com/homes/for_sale/Cupertino-CA/pmf,pf_pt/19625802_zpid/4281_rid/days_sort/37.352897,-121.988583,37.253492,-122.14325_rect/12_zm/) [Palo Alto house](http://www.zillow.com/homes/for_sale/Palo-Alto-CA/pmf,pf_pt/19469371_zpid/26374_rid/days_sort/37.480988,-121.980858,37.282385,-122.290192_rect/11_zm/)
The only part of San Jose that is really part of Silicon Valley is that little tendril that runs up to the bay near Milpitas, and that is much more expensive than the majority of San Jose to the south. Silicon Valley can be considered to run from San Mateo/Freemont in the north down through San Jose, but to value property in Silicon Valley by pricing San Jose and not including places like Palo Alto and Cupertino is like saying London isn't expensive because I priced Edgware, UK.
Okay. Wow. Those house prices are insane. I was expecting like a McMansion or something. It must suck to live in that area and not be some tech-millionaire.
Edinburgh etc. are pretty nice too. But London has orders of magnitude more jobs.
Well yeah, but the comment I was responding to seemed to be implying there are no good jobs anywhere but in the center of London.
I can agree with that, but taken in the context of the conversation -- the balance of housing costs and developer salaries -- the whole greater bay area must be considered the same market as silicon valley. If this were just a conversation about housing prices, it would be disingenuous to include San Francisco in the conversation at all, because we are really very far from Silicon Valley. edit: also this is just a nitpick, but I said San Jose is actually -closer-, not -in- Silicon Valley.
Are you actually in the middle of your career as a developer? Lots of places don't really use the Junior title for anyone. And relatively junior devs still get 'senior' titles. Cause it's much cheaper than paying people. 
&gt; and in many cases the r can be removed from the string, depending on contents, without changing the data contained in the string. That won't work with the syntax you propose. I don't see your point here. I can say "in many cases you can remove the 'o' from the dictionary, without changing the data contained in it, if you don't need ordered semantics". &gt; I think that would be harder to spot in code That's fair, but one might have made the same argument against providing set syntax over needing to use `set()`.
I'm wondering what the best way to do that without `exec` is, for Python 2 and Python 3 compatibility. EDIT: It appears that exec(source, globals) like that works fine in both 2 and 3. Potential solution found!
http://en.wiktionary.org/wiki/bumfuck
Oh, yeah, got it. Everything else was a legitimate place, so that confused me for a minute.
Yep. And the bonuses are wonderful as well. 
Yea I do python stuff now in Chicago but I'm in grad school for financial math. Going to try to leverage python/c++ experience plus grad school and move to a trading firm to do python/c++ development work. 
I am at a trading firm and it is a super cushy job. Pay is great, benefits are great, and everyone I work with is crazy smart. It is a pretty nice industry to get in, good luck! (C++ and Python are two of the major skill sets we look for) 
I would like to know too!
That's great to hear! My job right now is so cushy, it'll be hard to leave without knowing Ill have the same work/life balance/blend but Ive only heard good things about the developers for trading companies. Thanks!
IPv4 can be represented in more ways than `[0-255].[0-255].[0-255].[0-255]`.
I don't do Windoze :( Gonna make me launch a VM to play a game with 500 lines of python code? Why can't I just `python setup.py develop` ?
My work life balance is great; family oriented trading firm and I rarely feel over worked. It is rare I work more than 40-45 hours a week. There can be some very big egos in trading but life is pretty good if that is my biggest complaint. 
&gt; When it's scientific, What about for Bio Tech companies?
Confirmed. Southwest (not SoCal) Python dev here w/ 5 years experience $50K/year plus benefits.
I meant the EXE for people without python. 
My history is different than many. I am about 2 years into my 2nd career. I understand I am not at the 100k level now but I don't really see it out on the edges of the radar either here. I love the place I work, there are great and smart people all around. My Goal is about what you say fancy_panster, I want to get there within the next few years (which would represent @ a 66% increase). I have a lot to learn but I think I have a very solid and natural understanding on things like architecture and how things should be done. I am experienced to some degree across the full stack. I am also very good at understanding and interpreting business needs and interacting with customers and end users regarding the software I write. Something that I think is more rare than not. Thanks for everyone's advice.
I consider myself to be at least approaching the very early stages of mid level dev. The company I work for really seems to like me and puts me on some of our teams "bigger, heavier" projects, as well as leading one of the teams within our team. I am one of those devs that will always be pushing myself to learn new things so am I in the middle of my career as it pertains to overall knowledge? No way, no how. Am I approaching mid level knowledge of my primary language (Python), and have a pretty solid understanding of some other key and common languages and syntax's? I think so.
I think we're making the same observation, just using different representations. Nevertheless, the problem remains: it doesn't make much sense to define set operations between whole dictionaries, only between their keys and values. I understand what you're saying when you write "a dictionary can be considered a set where every element of the set has a value associated with it", but I'd like to point out that this means that a `dict` is no longer simply a set, but a set plus some structure. Therefore set operations might not make much sense on them. I could explain further, but I might just be misunderstanding your suggestion. Maybe this will clarify: given `x = dict(a=1, b=1)`, `y = dict(a=2, c=2)`, what do you think the union of `x` and `y` should be? Are you suggesting that `x | y` should be another way of writing `x.keys() | y.keys() == {'a', 'b', 'c'}`? Or are you suggesting that `x | y` be something like `{'a':2, 'b':1, 'c':2}`? If it's the latter, then that's the heart of the matter: such an operation isn't really a *union*, but something else, and I'd object to the abuse of the union operator to carry it out.
I'm not sure how fancy you want to get, but an idea is to put your code into an [IPython notebook](http://ipython.org/), of course they will need to have IPython installed as well. The front end runs in a web browser however. You can [add buttons](http://nbviewer.ipython.org/github/adrn/ipython/blob/2.x/examples/Interactive%20Widgets/Index.ipynb) and input boxes to submit your numbers and data and have it display results.
I moved to the US from Colombia, a great software developer in a colombian company working from there makes like 30K too; a junior or intern makes like 6k. Cost of living is kind of high, so is hard to get software engineers, people don't wanna spend a lot of money and time studying something that will barely, if ever, return :( 
If he doesn't mind SF prices he can aim for like 70k here with that experience. And there are suburbs and ways to live to save money instead of wasting all in the city
Non-mobile: [Herpetology](http://en.wikipedia.org/wiki/Herpetology) ^That's ^why ^I'm ^here, ^I ^don't ^judge ^you. ^PM ^/u/xl0 ^if ^I'm ^causing ^any ^trouble. [^WUT?](https://github.com/xl0/LittleHelperRobot/wiki/What's-this-all-about%3F)
That best case scenario is ridiculous, 20+ years of experience making 95k? 
What's in it for the tester?
Depends, renting can be insanly expensive if you want to live somewhere decent or something of a decent size. I pay around 2 grand a month for the place I live in at the moment. Its all relative I suppose.
Don't use Dropbox with git. It has the potential of screwing up the repo. I think it's something to do with the versioning.
Washington DC is paying dev's 100k easily. 
The study of herpes. 
2k a month, 3500 sq foot house in a nice neighborhood in Fredericksburg, Virginia. About 35 miles south of DC, estimated driving time, about 2 fucking hours each way. Therefore, I'm lucky to have a programming job in Fredericksburg making 80k. 
no offence but that kinda sucks balls. 
There are other places in North Dakota?
Heh. The benefits are worth about $15K, plus it's a non-profit and I only work 30 hours/week. My last job paid quite a bit more, but I was expected to work 70-80 hours weeks and I was looking for a change.
maybe from a national prospective you may be right, but that's because we have a diverse range of poor ethnicity's. Our population is over 300 million. I can assure you the average programmers quality of life is way better than you think based on those reports. 
yeah I hear that. that's a good setup than. Good for you. 
Geographically yes, but culturally, it's been shifting north, just as culturally, "Silicon Valley" has started referring to people merely writing software, not just those fabbing actual silicon into chips and generating Superfund sites in the process.
It looks like there's some [major population areas](http://www.neighbourhood.statistics.gov.uk/HTMLDocs/dvc134_c/index.html) and then the rest is large, empty spaces filled with King Arthur, Hogwart's, and soccer fields. While England has a population density of 413/sq. km, my little American state of New Jersey (like your Jersey, but newer) is 467/sq. km. 
Finally! I thought I was imagining things.
When you say "devs", do you mean people with 20 years of experience and 13 master's degrees, or...?
Isn't that just the tech companies battling for the same small handful of uber-geniuses? Let's not call those kind of people merely "good". 
Oh gosh, please indent every line four more spaces for proper reddit code formatting. (This is why you are still single)
Startup Compass doesn't use proper scientific methods for their "research". No need to put much attention to this.
Ditto. Sixfigs, but I don't actually use py at work all that much. This job is not in the Bay Area or a big metro area, btw. I think salary is mostly based on area specialty not on language of choice. That would be akin to saying "people who use hammers make $X salary in average". Maybe expert carpenters do, but not construction workers.
This is a pretty great analogy for nonprogrammers, imo. 
im 7
Perhaps it runs in a different version of python from your desktop than the version of IDLE you have. Or maybe you need to use pythonw rather than regular old python. 
Or retire early.
Yep, it's on [GitHub](https://github.com/medman826/depth_camera).
I wouldn't mind trying to do this. I don't have time right now, but I might be able to in a little bit.
try /r/learnpython, you'll get help faster.
Possibly different versions of Python installed, or a different default python installation. Another likely scenario can be that you named a file Tkinter.py. Try importing tkinter, lowercase. 
First few lines from tkinter import * from tkinter import messagebox from tkinter import ttk 
No I don't have that.
OK, awesome, I have installed and worked with Heroku before, so I'll give it at try. And its not a homework assignment, but a side project. I've been asked what personal projects I an working on and I never have any answers, and this one brings me joy.
I agree with everything, except I wouldn't say it's disingenuous since many people who work in Silicon Valley also live in SF.
Its just a framework, its not going to make your specific API for you, right?
Python developer in Dallas, TX. I'm making just under 110k doing about 65% Python and the rest split between JavaScript and other front end tech. I could probably get paid another 5 to 8 percent but, I like my hours and my coworkers.
Oh well it's Just That i have to transpose it then! Sorry...
One of my favorite ways of practicing was to make an encoder/decoder for strings. Sort of like string = "a rabid hamster arm-wrestled the unpleasantly smiling man" * apply a character map (i.e. a --&gt; b, b --&gt; c....) * add "noise" characters or sequences * you can make a shifting character map, which changes based on the in-process string characters. this prevents simple whole-string character map permutations from solving your encoding * reverse substrings * tweak parameters (character mappings, etc) based on input (number of "e"s processed, etc. * change mappings from single characters to lists of characters * instead of creating your message from a single point and going one direction (Left-to-right), you can have multiple "budding" locations, which each encode in different directions * make it so the range of symbols is a parameter: so like...create an encoding for the STRING above: it can consist of 2 symbols (0,1), 5 symbols (a, b, 1, 6, f)...etc the trick is to figure out how to come up with reversible actions on strings that would be difficult to predict. it's pretty fun, and there's INFINITE encodings you can play around with...
Try New York and environs. The pay is pretty good there too.
Yea seems to be £20k for a junior dev, £30k mid level and 40k to around 60k for a senior (depending on specialisation/ experience).
Here's how you can send your friend a standalone program not dependent on having python installed: Prerequisite for *you*: install pywin32 extension, make sure pip is working. Then in a cmd window: pip install pyinstaller cd /my/project/directory/ pyinstaller my_python_module.py Then create a zip file of the `my_python_module` folder in `/my/project/directory/dist/`, and send it to your friend. He can unpack it anywhere and run the `my_python_module.exe` file inside the folder. That's assuming your friend uses Windows. If (s)he uses linux or mac, (s)he most likely already has python installed, so you can just send the python file. There are other ways of creating standalone executables from python programs, also with windows installers, but they are more involved. Two alternatives are py2exe (for python3) and cx_freeze, or you may use a two-step procedure using pyinstaller first, then a generic installer like Inno Setup or NSIS. 
Yeah, it's strange how much the countries still differ even with globalisation. 
Basically 80k in Silicon Valley after college is working class poor. 1BR apt in SF is 6k a month.
Looks good! I would just polish these lines up a bit: data = json.loads(data_in) data2 = data['data'] data3 = data2['children'] for d in data3: print(d['data']['title']) Maybe something like... posts = json.loads(data_in)['data']['children'] for post in posts: print(post['data']['title'])
You also have two unused imports, `io` and `csv`. I'm sure you were planning on doing something with those eventually?
Russian Sr Python developer/teamlead 14k$ salary here. AMA, meh. I have no PhD, but I got pretty good salary for Russia. Rent for 1-room apartments - around 5.5k$. Food - same if you want to not starve, 2-3k$ if u r student(enjoy noodles and starvation).
I would guess a lot of python programmers are scientist type people with masters/doctorates, which kind of throws it off.
No degree here (Charlotte, NC) and making right at six figures. Well over if you include total compensation package, and this is only JavaScript mostly. 
Why? They, like mobile developers, are fucking clownshoes, doing nothing of difficulty, and are completely replaceable.
Please post this question to /r/learnpython rather than here (have a look at the sidebar rules).
Anything metro accessible is now at least 1500-1600 for a studio, 1600+ for 1BR.
A measurement system should have no clock, else you have the overrun problem: accumulating tasks taking more then the scheduled time that will provoke a snowball effect. And you have the halting problem (if I wait for a task, is it not anwsering because it is in a legitimate infinite loop, or has it crashed? When is it okay to kill a task ?(Finite State Machine...)) Zabbix, munin nagios ... and their descendants all have this flaw. You are building an asynch system on with a synchronuous state of mind, it will fail. 
is there a way to easily monitor and restart cron tasks (without sshing and editing crontab).
 import datetime import os.path def time_stamp(filename): ''' injects a timestamp into a file name ''' name, ext = os.path.splitext(filename) timestamp = '_'.join([str(x) for x in datetime.datetime.now().timetuple()[:6]]) return '{0}__{1}{2}'.format(name, timestamp, ext)
Suggestion: The location should be highlighted/obvious.
We have created a new job Python board. We wanted to make something that will replace the currently non-funtional job-board on Python.org with something that's much lower-cost to run, more beautiful and does not rely on a cumbersome email-based submission process and a single volounteer. Github gives us free hosting and Travis compiles the static web-pages and keep everything updated. What that means is other than managing the pull requests, this thing costs nothing to run. We want to pass on these savings to the Python community by making this job board 100% free forever. It's open for business now: You can post a job if you want - just [make a pull request](https://github.com/pythonjobs/jobs). We have only one rule for now which is that we only allow "direct" job postings. What that means is that if you are an agent/headhunter/IT Consultancy you have to say who the actual employer is - you cannot keep that information secret. The whole thing is actually a static site. The code that generates it is entirely open-source and is based on the [Hyde](http://hyde.github.io/) static site builder. Here's Steve's original product anouncement [on the UK Python mailing list](https://mail.python.org/pipermail/python-uk/2015-March/003559.html)
I am not goig to do your homework for you.
Ha. Good one.
Is using existing solutions like cron not an option? Checking status of tasks by checking logs is pretty normal, it'd be trivial to [make a web interface to tail a log file](http://stackoverflow.com/questions/11357873/how-to-stream-the-last-few-lines-of-a-file-in-django). You could also add a function to check for config updates and add them automatically every x seconds, maybe updating existing tasks? I'm not familiar with APScheduler so I can't help with that at all.
Do math from the terminal ([pmath](https://gist.github.com/wackywendell/919042f19ab6932447df)): $ pmath '3 + 4' 7 $ pmath -f'.4f' 'pow(2000, 1/3)' 12.5992 $ pmath -f'.4f' 'sin(pi/2)' 1.0000 $ pmath -c 'exp(1j*pi).real' -1.0 $ pmath 'x=3;x+2' 5 $ echo '3+4' | pmath 7 I wrote this because I found `bc` confusing, and I couldn't find a reasonable way of doing a cube root from the command-line... the best I could find [involved a log and exponential](http://www.linuxquestions.org/questions/programming-9/cube-root-in-bc-814009/).
 def tail(path, window=20): with open(path, 'r') as f: BUFSIZ = 1024 f.seek(0, 2) num_bytes = f.tell() size = window + 1 block = -1 data = [] while size &gt; 0 and num_bytes &gt; 0: if num_bytes - BUFSIZ &gt; 0: # Seek back one whole BUFSIZ f.seek(block * BUFSIZ, 2) # Read BUFFER data.insert(0, f.read(BUFSIZ)) else: # File too small, start from beginning f.seek(0,0) # Only read what was not read data.insert(0, f.read(num_bytes)) linesFound = data[0].count('\n') size -= linesFound num_bytes -= BUFSIZ block -= 1 return '\n'.join(''.join(data).splitlines()[-window:]) def head(path, lines=20): with open(path, 'r') as handle: return ''.join(handle.next() for line in xrange(lines)) 
(just checking my understanding) so this let's you access your home directory from your script?
It definitely says "UK" all over
FWIW you could replace the comprehension in `head` by `itertools.islice(handle, lines)`
Yeah. You can also access it with a browser and navigate the file tree, if the URL is to a directory it provides a directory listing.
 def gRange(s,e,step=1): ''' generalized range create ranges of any object type s and e need to be comparable by &lt; s and step need to produce an s when subjected to s+step good for dates, for example: gRange(datetime.date(2015,1,1), datetime.date(2015,1,10), datetime.timedelta(days=1)) ''' ret = [] while s&lt;e: ret.append(s) s = s+step return ret 
I love this one. Not just for version strings, it works with anything that has numbers in it e.g. IP addresses. If you want to sort paths (*nix and/or Windows) using this technique, then you might want to modify the regex to also split on path separators: return map(try_int, re.findall(r'(\d+|\D+|[/\\])', item)) 
The people who made this live in the UK. We advertised it on the Python UK mailing list which is full of UK recruiters. I'm going to post a role based in New Jersey today - would that convince you?
You're welcome mate :)
THANK YOU I spend a lot of time double checking if package data was installed correctly with packages I create, and I also like to double check the source code of libraries that I use a lot, especially if the documentation is spotty. This will save me lots of pain.
Didn't know it existed.
Shouldn't it be return tuple(map(...)) Can key function be an iterable?
Is that a huge loss? I barely went there anymore anyway and I don't know of any project that was purely relying on Google Code in its distribution or bug tracking. However, it's pretty nice of the Google folks to offer migration and honor Github and Bitbucket. Those people put a lot of effort into making a great platform for developers.
Hi there. You have posted a beginners question to /r/python, however it is far more suited to /r/learnpython, where users are actively interested in helping with beginner topics. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Cheers &amp;amp; best of luck!
Hi there. You have posted a beginners question to /r/python, however it is far more suited to /r/learnpython, where users are actively interested in helping with beginner topics. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Cheers &amp;amp; best of luck!
And a racist. And a sexist.
Nice! What about using yield instead of storing a potentially very large list? Generators are pretty sweet :)
Upvoting for awareness (can't believe I actually used this phrase) and now I'm off to mgirate the one or two repos I had there. They should at least send an e-mail to the devs to notify about this. I didn't receive anything D: 
From the toolz library: def groupby(key, seq): grouper = defaultdict([].append) for k in seq: grouper[key(k)](k) return {k: v.__self__ in grouper.items()} And I found this on learnpython: def Tree(): return defaultdict(Tree) 
Very cool, I'm also gonna echo the `yield` sentiment 
The e-mail notices will be coming along soon. 
I think you're morally obligated to do that if you use this in Python 3.
To answer your question, here are the Python projects that will be lost: https://code.google.com/hosting/search?q=python It's a pretty interesting list. Lots of quirky old school projects. If you're a professional web developer or just use Python at work, it's probably not a huge loss. If you use Google Code for hosting, it's not a huge loss either as you can migrate pretty easily. If you're a maker/hobbyist/experimenter who's into trying out interesting lesser-known libraries for fun, it'll be more of a loss. You'll probably want to dig through and see what you want to save/migrate before it goes away.
Back in the day that was nearly our entire release server. Merely had to sub-class and add a few lines to make sure it only served tarballs. Build scripts had already versioned the dirs, and machine was only accessible internally, so was quite enough to serve all releases to whoever wanted them within the company. And available within a few hours of my being asked for it. Thanks (again) stdlib!
from string import Template result = Template(text).safe_substitute(vars)
Thank you Google! It was pain to see all these mirrors google_code &lt;=&gt; github.
To be fair, that list of about 960 projects also includes some that have already moved somewhere else (phusion-passenger, h5py, pychess, pymssql, ...).
don't roll your own. I've had great success using celery as a task queue for asynchronous tasks. a useful pattern is to have cron jobs that just push a task onto the celery queue at regular intervals. 
This is why you can't rely on Google.
While this is ok, any reasonable editor\* has the ability to jump you to definitions. Since this will work with your own code *and* other libraries, it seems like a much better way to do it to me. Given that I'll always be in my editor when I want to see some other module's code, and I'm going to want to open *that* in my editor too, dropping to the shell to do all that seems like adding a lot of friction in the process. \* Emacs and Vim or sure. If any of the Python-specific ones don't do this it would be shameful.
It will be interesting to see if this causes some forgotten projects to be reborn / forked. 
Until August 24, 2015. After that it will closed for new changes etc. &gt; August 24, 2015 - The site goes read-only. You can still checkout/view project source, issues, and wikis. &gt; January 25, 2016 - The project hosting service is closed.
For folks using Pyramid, there's [Cornice](http://cornice.readthedocs.org/en/latest/tutorial.html#defining-the-services) from Mozilla. There are other options, I just don't know anything about them.
Face-slapping is equally appropriate for those.
Why do you think so? Google is very reliable but it has already been mentioned that Google Code was not active at all in the recent years - especially when compared to competitors like Bitbucket or Github. I think they just accepted that they simply are not specialized enough to compete with those. I mean, Google is an allrounder. They cannot keep up with the pace e.g. Github is coming up with new ideas and (great) concepts for SCM.
That's why they call it the cloud. You've no control over how long it sticks around.
&gt; Google is very reliable but it has already been mentioned that Google Code was not active at all in the recent years At least in part because they did what they did with so many other services - announce it with great fanfare, build up a reasonably sized user base, then neglect it for years.
**Iteratively create a pandas dataframe by column** AND **Download stock data from Yahoo.com** import pandas.io.data as web import pandas as p from datetime import datetime as dt start = dt(2011,1,3) # end = dt.today() end = dt(2011,6,5) stocks = [ 'XLY', # XLY Consumer Discrectionary SPDR Fund 'XLF', # XLF Financial SPDR Fund 'XLK', # XLK Technology SPDR Fund 'XLE', # XLE Energy SPDR Fund 'XLV', # XLV Health Care SPRD Fund 'XLI', # XLI Industrial SPDR Fund 'XLP', # XLP Consumer Staples SPDR Fund 'XLB', # XLB Materials SPDR Fund 'XLU' ] prices = p.DataFrame() for stock in stocks: prices[stock] = web.DataReader(stock, 'yahoo', start, end)['Adj Close'] 
Subversion is quite present in the enterprise world.
Ah, this answers my question, I removed 2 and problem was solved. Appreciate the assistance!
I'd like to point something out here: Not long ago, we had a discussion about how all the python docs URLs point to the 2.x version of the documentation when most people would be better helped with the 3.x version of the documentation. The main argument against switching over in that discussion was that it would break many deep links. Now this move from Google, who as it seems will take down the entire content of the site at the end or 2016, will break *a hell of a lot* of deep links. Let's see how bad it is. Maybe we can switch over the doc links then.
No problem at all! I'm happy you're getting the answers that you need. :) Are you using a framework at all with your code? If you are, then you might be able to get more specific help to your framework in that framework's subreddit (ie - if you are using flask, try /r/flask, or django try /r/django). /r/learnpython is a pretty great place to figure stuff out though, from getting started through to deployment.
I'd imagine the biggest loss is loosing all the projects that are no longer maintained and whose authors won't go through the bother of migrating their code to a new site. Old little projects like that are often invaluable when working with, say, older technologies that nobody cares about anymore but which you have to support at your workplace.
Why?
Once a week is a piece of cake, I would be interested in trying your game.
Oh, I see now what you mean. Yes that could be arguably more elegant. However it doesn't reduce the number of lines needed... it actually increases it as you have to add an import. Based on that rationale I would judge it unfavorably. But then everyone has his coding style : )
Python 2 returns a list while python 3 returns an iterable. In both respective cases however it's compatible with the usage as a `key` function.
Yes, if you want to do a simulation, that's more or less what you'll need to do. (Or do what /u/hbweb500 suggested, which is basically the same thing.) If you want to do more sophisticated modeling, take a look at [lea](https://code.google.com/p/lea/), a python module which is built for simulating discrete probabilities. &gt;&gt;&gt; import lea &gt;&gt;&gt; sim = lea.Lea.fromValFreqsDict({0: 199, 1: 1}) &gt;&gt;&gt; sim.random(1000).count(1) 3 &gt;&gt;&gt; sim.random(1000).count(1) 6 &gt;&gt;&gt; sim.random(1000).count(1) 8
Yes, mine0, thanks for the correction.
I'll try to answer as best as I can, please correct me if I'm mistaken. 1. You can run PHP without the "A" (Apache) and "M" (MySQL). IDLE is just simple IDE. You can develop without it using just text editor and interpreter. 2. You can't embed Python code into HTML. Python code can output HTML code if needed. Usually if Python is used for web development you would use some web framework (django, pyramid, flask). 3. I'm not familiar with Ruby so can't comment on that. I'd say you can do more with Python than with PHP or at least it's easier. PHP is developed for web pages where Python has lots of other uses as well. There are bindings for lots of things like OpenGL and different GUI frameworks (GTK, TK) so you can create games, desktop apps or almost anything. 4. No idea on this. 5. Most definitely. There are differences in syntax and such but most concepts are same between languages. 
I'm still working on convincing my coworkers to use it... I've been a python programmer since I started programming, but many of my coworkers haven't been using the language for more than a year or two. We're also a bunch of electrical engineers (hence scientific data), and convincing an engineer that the way they're doing something is inferior is about as easy as digging your way to China with a toothpick. I've tried showing off the awesome features it has, (legally) sharing a book written by the author of Pandas, showing how I can do certain tasks much faster because of it, but it just hasn't caught on yet. 
That one's great. I just found out you can access the regex it uses via `string.Template.pattern`, which I find very useful. Using that, you can scan text for patterns that you could replace via string.Template.safe_substitute. [Here's my example/project](https://github.com/dustractor/tktem/blob/master/tktem.py) that I made while I was snowed in last week.
Google basically started the web app trend. They brought the idea of easily accessible and integrated web apps to a lot of people. You really think they'd release their RSS reader as a standalone thing? It's safe to say Google has no interest in non-web app products (unless it lets you view web apps, i.e. Chrome).
One answer: Python can do everything you require even more. Thank you
No problem! A whiskey night where I can't sleep yet :) By some of the smalls will be eaten by larges: I meant that if it hits on 12345, then it doesn't check the small list. Take the keep [1,2,3] case: if you roll a 4 (common to both small, large) then you have one independent dice. If it is a 5 (1/6) of the time, then the large list will be hit, and both small cases [1,2,3,4,5] will not happen. So many of the possible small cases for both lists are pre-empted by the large ones. For the keep [2,3] case: then it can be reduced to the 61/186 cases where a four is rolled. There are 36 cases for the next two dice If one of the next two dice is a 1 (16/36) then you have [1,2,3,4] and a 1/6 chance that you will hit the 5, meaning the 1,2,3,4 and 2,3,4,5 are never recorded. e.g. 2/6 of the small straight cases never happen. Similarly if it is a 5, then there is a 1/6 chance that you get a one (same result) + 1/6 chance that you get a 6, meaning that 2345 and 3456 never get hit. All in all, I count 18 of the possible 36 cases where the small set doesn't happen or is beaten by a large and an expectation value thus of about 16.4% I should have known my earlier math was a bit off because 42.5 is higher than the 61/186 states that are a superset of all small straights In the end, a pleasing and counterintuitive result. You'd think that rolling 3 dice would be better, but most of the possible small sets involve getting a large set and thus never happen. Because the initial probabilities for getting the necessary states are too low, then you're better of keeping the 1,2,3. Logically it makes sense, because the smalls involving a six never happen (all part of 23456), and the others involve randomly rolling a 1, which the other case already starts with. I guess there is old wisdom in the 'bird in the hand is worth two in the bush.' 
/r/learnpython
And nope.. list == is only true if they are the same length and each and every element in order are also equal
Nice find, the kickstarter project looks interesting too. Shame all the lower price courses have gone.
Software and source code are not (necessarily) the same. You can give one without the other, even under GPL (at least v2, not sure about v3 at the moment) you can distribute binaries without the source code (unless requested). At any point the article said that it was impossible to get back the code, it just implied that the task would be hard, which is good enough. Now, about the pointless of the endeavor, I disagree, it was a very interesting problem to solve, with many enriching discoveries during the process, that's not pointless at all.
&gt; If they can run the application in a Javascript virtual machine while running a browser (possible the most complex user space software run on many home computers) simultaneously, they can also run it directly on the hardware. You're assuming no server-side code exists in the project. Weird for someone posting in /r/Python. Almost all the cloud stuff I've ever written couldn't run on a Windows computer without the person installing Python (Python is what manages the DBs and responds to API requests), which might not be possible. I've used company computers that forbid such installations.
Maps isnt gonna have much longer if they don't improve. Bing and others are totally kicking their ass right now in terms of speed and ease of use. 
Thank you. I like this general method.
But with the right seeding, you can make it rain.
Thank you. I will take a look into lea.
The problem with something like that is that (to my knowledge), there is no way to fool isinstance. This means that if you want to use the fascade pattern, you're sort of stuck. In the very recent past, I needed to create a class that pretended it was a two different types of other classes (which for all intents and purposes it was, because it exposed all the same api as the two classes). Unfortunately other places in code not under my control used isinstance, and I was forced into an ugly multiple inheritance structure. moral of the story, isinstance is the devil, if you want to do type verification, do so by assuring yourself that they have the API you want, not by checking for the type you want.
Webapps are easier to maintain. You don’t have to code for every platform (or require people to install Java), and you can push updates when you want instead of waiting for people to update their software. Plus webapps can be accessed anywhere, on your tablet, mobile phone or any computer around the world with an Internet connection (even a local RSS reader needs an Internet connection).
 In [14]: l.sort(key=natural_sort) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input-14-5ee9ed4b7a05&gt; in &lt;module&gt;() ----&gt; 1 l.sort(key=natural_sort) TypeError: unorderable types: map() &lt; map() 
I didn't say that Google didn't give a warning that gave us time to migrate. My team was part of a small, but growing, group of developers who were willing to try out the Google Wave Kool-Ade because we assumed that it would be around for at least a few years. We went through some effort to migrate TO Wave from another collaborative tool only a few months before Wave's closure was announced. We didn't appreciate having to put similar effort into migrating OUT of Wave the same year. A major issue with Google's handling of Wave, and what led my team into its situation, was their messaging. They came out with incredibly strong statements about how they thought that Wave might be an "email killer" and that it was essentially god's gift to team communication, collaboration, and productivity. The fact that they were willing to completely pull the plug on the tool less than two years after making continual epic announcements about how they believed they were changing the face of Internet-based collaboration has made me pretty paranoid of trusting any similar future announcements from them. IMO, Google's current collaborative offerings are still inferior to Wave. Docs/Drive is a UX Frankenmonster. Their messaging capabilities aren't nicely integrated with document sharing. &amp;tc.
That's true, dealing with personalized maps in "Maps Engine" seems to be at about 1/4 performance of the original Maps app, on a good day.
IMO a full blown IDE isn't really necessary most of the time for Python. All of the currently popular editors generally have pretty good Python support (for autocompletion, virtualenv, etc.) and that includes Sublime, so you should be in good shape already. But when you do need a full IDE, PyCharm is excellent, with the caveat that some of its best features (such as remote debugging) are not in the free version. (If you happen to already have the full version of IDEA, just install the Python plugin to get all the same functionality.) Eclipse has a Python plugin too, but overall is not as nice as the IntelliJ IDEs in general. On Windows, Microsoft's own Python kit for Visual Studio is excellent but I think you might need a paid version of VS already to use it. I'd also recommend installing iPython. It improves the Python console quite a lot, and has the iPython Notebook for interactive but reproducible stuff.
Sublime or vim in split screen with ipython is great.
Damn, ISIS shut down Google Code? This menace must be stopped.
Does the CRM not have a python api?
I'm using PyCharm and currently really liking the new iPython capabilities. It's amazing. You get the interactivity of Python notebooks with the autocomplete and syntax features of PyCharm.
yeah it's just a huge time saver. I basically needed standard api that matched my models. Rest Framework did it in about 4 lines of code and a serializer class which included serializing many to many relationships among other things. Things that would be a bitch to serialize and manage on my own. 
yeah I originally went with Tastypie myself until I realized it's future was looking sketchy. Plus just like Django dominates the web framework world in the Python language DRF just dominates web api's in the Django world so I figured why not jump ship to it. 
At least it's not as bad as Perl. Talking for 15 years about how the next version will be so great. Where the fuck is it? But seriously I feel like a lazy bastard. I love Python but I'm a primary C# developer. What little time I have to develop I'm building websites in Django which is most stable with Python 2.7. I think in the next few years we should see support for Python 3 pickup. I think maybe if Python keeps making improvements with Parallel libraries, web sockets or something similar maybe we'll be more inclined to upgrade. It's always a pain in the ass to upgrade but most of the time you never look back. Angular 2.0 has sent shock waves through the Angular crowd. Updating is always a bitch. 
I see. That sucks for your team! My company completed a migration last year of a bunch of stuff from Groove to Sharepoint. Oh boy, did that suck, especially the part where Groove had no limitations on filenames, but Sharepoint did, so hundreds of files and directories had to be abbreviated. &gt;&amp;tc. I've seen this before. I'm not sure you realize, but the &amp; is just a fancy *et* (if you look closely, you can see it). So if you want to use it and still keep some of the letters from *et cetera*, you would write &amp;c. Otherwise, it's like when people write "ATM machine," which of course is "automatic teller machine machine." Anyway, this has been your language dork tip of the day.
The Python program would be the central piece where it acts as a glue to coordinate the computations, optimizations and scheduling of sub-programs.
&gt; There is no reason that an RSS reader can't run on any device capable of connecting to the Internet. Just because you proclaim it to be so does not mean that it is so. There are a *multitude* of reasons why an RSS reader (or any other arbitrary piece of software) can't run on some particular piece of hardware. In an environment where the user does not *own* the machines they are using or does not control the software policy for the machines local software may not be an option. You know, people that have jobs and use computers owned by their employers. Their particular software platform may not be popular enough to have capable or well written RSS readers like say BlackberryOS or Windows Phone. You're sort of all over the place with your disgust at the idea of people using services through a browser instead of simply running software locally. You say connecting to a server to retrieve data is OK yet "rendering a GUI" (whatever the fuck that is supposed to mean) is not OK. Now this may come as a shock to you but RSS feeds (and even aggregated RSS feeds) are data. Bundling some CSS and JavaScript alongside the data to display that attractively is no less a valid use of a remote server. Using the web to provide access to services is an old idea that goes back to the NCSA httpd which first introduced CGI. A URL after all points to a *resource* and a resource can be not only a document but also some sort of dynamic output generated by a web server. Now maybe you're offended by the idea of servers daring to run some sort of software to serve their users. You seem overly obsessed with the idea that everyone should always be running software locally on their computers. Even if people can run an RSS reader on their local PC, they may not fucking want to do so. For instance, I do not want to run a local RSS reader. I used Google's Reader because I subscribed to a lot of feeds but didn't want to try to get different readers on all my different devices synchronized when I dropped or added feeds or when I read particular news items. Google Reader did that and was available wherever I wanted to access it even if it was from someone else's computer. When Reader shut down I replaced it with [rawdog](http://offog.org/code/rawdog/) using some scripts to aggregate different feeds. I host it all on a server so I can access it from wherever. It's a lot less convenient to maintain than simply firing up Reader.
Seriously, a 1-year shutdown date is a rather reasonable warning.
Python has nothing on [Perl](http://perl.plover.com/obfuscated/)!
When I saw something like this the first time, I had no idea what was going on. b = (2,5)[x==3]
If you want confusing code, [take a look here](http://codepad.org/UzSmoxF2). Look at the code and then scroll down and look at the output. Then afterwards get the explanation [on the author's blog](http://benkurtovic.com/2014/06/01/obfuscating-hello-world.html).
5 months is absurdly short notice for most businesses (especially enterprises). It's these 'short' notice cancellations that really hurt their projects and scare significant customers away. Worse, those are precisely the customers they need to be courting as they represent guaranteed income.
I got an email for an old college project I had on there earlier today.
TortoiseSVN is the reason svn is so widely used in the enterprise world. I have yet to find something as good as TortoiseSVN for git.
Split a generator into chunks without consuming it all at once: def batchify(generator, size=100): return izip_longest(*[iter(generator)] * size) Example: # a generator which will raise an exception a little way through def fib(): a, b = 0, 1 while True: yield a + b a, b = b, a + b if a &gt; 100: raise Exception batched_fib = batchify(fib(), size=5) next(batched_fib) # (1, 2, 3, 5, 8) next(batched_fib) # (13, 21, 34, 55, 89) next(batched_fib) # Exception The solution is taken from the itertools docs. It's fiendishly clever, and it's hard to achieve the same thing in another way.
And they have a GitHub migration tool, which is probably where all this should have been anyway.
Except Google Code was around long before anyone said *"the cloud"*.
Wonder what the performance characteristics are. At what complexity/number of concurrent requests would outperform other blocking drivers? How well does it jit with PyPy? This may be very, very good.
&gt; Google is very reliable but it has already Yeah, tell that to my Note and Feed reader accounts. 
One guy's perverse obsession with ToscaWidgets2. I don't know how much was the library's fault and how much was the fault of the guy and his extension of it, but editing a webpage has never been so difficult in my life. Sometimes changing trivial things was easy, but changing anything non-trivial was an absolute head scratcher. So much class fuckery and indirection and special cases. It was like the Tao of Python was specifically violated in every way possible, intentionally. The guy had grand delusions of a super modular system where anyone could jump in and quickly make some arbitrary new thing out of all these reusable component. But he was mad. It wasn't even close. The documentation was never very useful either. Does anyone non-insane use Tosca?
I tried pycharm, vim and Eclipse with PyDev. PyCharm earned my money. I still use vim a lot however.
If you're actually going to do a lot with reddit in python, you could look into [praw]( https://praw.readthedocs.org/en/v2.1.20/).
TIL Google Code existed.
https://code.google.com/p/tortoisegit/ ? I haven't tried it, but there it is. I have to agree though. TortoiseSVN was so usable we had everyone on a large project use it; even our project manager. It was just the best way to ensure everyone had the current documentation because we used it to store those files in a subversion repository as well as our source code. I did set it up as a separate repository, but that's about as much fuss as was needed to get everyone going.
Anything left that people actually care about will be relocated by the maintainers or someone that uses it. I really don't see a problem here.
That's not very long to adapt in the business world. My place of work still uses XP machines.
I've stuck with BitBucket for the private repos so far, last time I checked Github didn't have free support for private repos. Disclaimer: I haven't checked in a while.
We do all our web development using the Django framwork
&gt; because it's quite easy to type and saves a lot of if statements Explicit better than implicit? I mean, what's wrong with b = 2 if x == 3 else 5 ?
i have decided to give a look at putting together all the material into a book on leanpub by the name of *Intermediate Python*.
What a crap article; Flask is not just suitable for small-scale applications, Pylons is superseded by Pyramid and Zope2 and Grok haven't been updated in ages.
[Abstract Base Classes][py3abc] allow `isinstance` to be 'fooled', but only as long as the code doing the check uses them. For example, perhaps you find yourself wanting to check for a list. Rather than using `isinstance(value, list)`, you can use the `Sequence` ABC from [`collections.abc`][collabc]: from collections.abc import Sequence assert isinstance(value, Sequence) Thus, any class that defines the abstract methods from Sequence can be used in place of a list, including `tuple`, `str`, and any custom classes that adhere to the protocol. Similarly, you would use `MutableSequence` if you needed to modify the items. [py3abc]: https://docs.python.org/3.4/library/abc.html [collabc]: https://docs.python.org/3.4/library/collections.abc.html#collections.abc.Sequence
To get a complete answer, I'd have to know what exactly twitter.get_followers_list() returns, but the basic gist is, /u/juliob's code assumes "followers" is a list of dictionaries, hence each iteration of "follower" should give you a dictionary, with the key "sceen_name". Instead, "follower" seems to be a string.
Hi there. You have posted a beginners question to /r/python, however it is far more suited to /r/learnpython, where users are actively interested in helping with beginner topics. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Cheers &amp; best of luck!
&gt;Even if people can run an RSS reader on their local PC, they may not fucking want to do so Even if people used Google reader, they did already run the software locally (their browser together with a JS vm running locally on their machine). It was just written in such a way that it required a connection to a google server somewhere to run. This sucked because the only actual service the google server provided was synchronization across several devices, which while being nice was not vital for the app and could have been handled using a plethora of other services should google choose to shut down their server. Maybe the technology is not here currently(?), but it should be possible to write webapps in such a way that they could be cached and run locally without depending on the server. Of course this only makes sense if the server does not provide some vital functionality of the application(which couldn't just as well be run locally)... like a package manager.
As well as perforce and windows hosting. It doesn't mean it's ok. 
I've recently turned an extended `enumerate` that I used a few times into a [PyPi package](https://pypi.python.org/pypi/enumerate_skip/1.0). It acts like `enumerate` itself, but allows you to not increment the index, which I needed at one point because I was generating data that included the index but not all values of the iterable passed to `enumerate`. So first my code looked somewhat like for index, obj in enumerate(...): if obj.has_some_attr(): continue # do something with object and index here Simply using `index` there lead to gaps in the output (1,2, 4, 6, ...). With the enumerate_skip package, I can now simply do it = enumerate_skip(...) for index, obj in it: if obj.has_some_attr(): it.skip() continue # do something with object and index here and have consecutive numbers in the output.
If Google Code was an isolated incidence I wouldn't care. But it's symptomatic. Which means that any new services Google launches will be automatically considered ephemeral. Which makes it ephemeral by way of self-fullfilling prophecy. This should be evident to any borderline competent management, but apparently it isn't. 
Neither do I. I was simply pointing out a fact that was not obvious to me by just looking at the list.
O rly?
Can you imagine the chaos that would ensue if Github shut down?
RIP Google Reader
Except they didn't :P. Certainly good to know though! Looking into it, abc seems to provide a generic (, if potentially verbose, ) way of doing this sort of check. So if you use it correctly, I suppose isinstance isn't the worst.
That syntax is relatively new. Before it was added, that confusing mess above was actually the idiomatic way to do that inline.
docopt taken to the next level.. nice - will try :-)
Show us your profile data. If you are already spending most of your time in numpy native accelerated code then your optomisation strategies are more limited.
OK I think I am about ready for the more obnoxious "NO HOME WORK QUESTIONS PLEASE. WE WILL NOT DO YOUR HOMEWORK FOR YOU. PLEASE TRY /R/LEARNPYTHON INSTEAD. ALSO, PLEASE MAKE IT LOOK LIKE YOU SPENT MORE THAN 2 SECONDS ON THE ASSIGNMENT BEFORE ASKING FOR HELP." to replace the politically correct and easy to miss "Homework &amp; learning posts belong in /r/learnpython." message. Anyone else?
You need to give some more information if you want any help. - You need to format your code better, so people can actually read it. - You need to give us examples of data you are inputting to cause the error. - You need to tell us the actual error you get, copy and pasted, from Python. This would be better posted to /r/learnpython or to Stack Overflow.
 def clear_screen(): """ clear the screen in the command shell works on windows (nt, xp, Vista) or Linux """ import os os.system(['clear','cls'][os.name == 'nt']) 
Tortoisegitt is exactly the same, but with git. 
Would this be a comparable generator? def gRange(s,e,step=1): ''' generalized range create ranges of any object type s and e need to be comparable by &lt; s and step need to produce an s when subjected to s+step good for dates, for example: gRange(datetime.date(2015,1,1), datetime.date(2015,1,10), datetime.timedelta(days=1)) ''' ret = [] while s &lt; e: yield s s = s + step
It's all transient.
I'm a Python dev in Austin and I definitely don't make $100k.
Thank you for pointing it out. That's because I didn't handle the exception in the flask before, because all the rondom IPs should be all right but I forgot that users may input IP addresses manully. Try it now to see if there is any bug.
There is another alternative you should consider - [Numexpr](https://github.com/pydata/numexpr). I've played around a decent bit with Numba, Cython and Numexpr, and my suggestions would be the following: 1) Try Numba first as it works with your native Python code and there is hardly any manual work that needs to be done to try and get a speedup with Numba. The drawback is that you don't have too much control with Numba. If it doesn't work for your functions after you experiment with the `@autojit` or explicit `@jit` decorators, you have very little in the way of knobs you can tweak to try and get Numba to work for you. If it does work though, you can get very impressive speed gains...almost as good as Cython (sometimes better, other times a bit worse) 2) Try Numexpr. It avoids making temporary in memory copies of arrays when performing simple computations on arrays, which can be a big bottleneck with Numpy. Moreover, it will use all cores/threads on your processor, which is not always the case with Numpy depending on how it is installed and whether you are setup to use MKL or something like BLAS to take advantage of multicore/threaded processors. Using Numexpr will require you to refactor code and break certain intensive computations into NumExpr compatible sequence of simple operations. You may also find that NumExpr may not work for you depending on the type of calculation you are performing. 3) Cython is the go to place if you desire full control over the optimization of your numerical code. The learning curve is much steeper, but it is very powerful, and wonderful to work with once you get the hang of it. If you use IPython, using the `%cython` magic command makes testing and writing Cython code a breeze. So really, I'm advocating for learning and trying all 3, which is probably not the answer you want. They each have their strengths and are worth understanding and adding to your repertoire if you tend to write a lot of numerical code. If you are in a rush, try Numba first as it is braindead easy to use and at least attempt getting speed ups with. You may be more than satisfied with it. If not, then Cython would be your next step. Finally, as someone else mentioned, if you are relying on Numpy specific solvers at each timestep, there is very little you can do to improve your timing beyond moving any explicit Python loops into Cython. That should still give you a significant speed up (you want to avoid explicit Python loops altogether when writing highly optimized code), but the numpy calls will still be a bottleneck that you won't be able to overcome unless you have an explicit method (and assuming an explicit Cython method would be more efficient than the Numpy version...which isn't necessarily the case). You may find this presentation instructive regarding how Numba/Numexpr can end up being far faster than Numpy even though the latter relies on highly efficient C/Fortran libraries - http://www.slideshare.net/FrancescAlted/its-the-memory-stupid-julich-2014-30571836
Just for code-golf :). The more pythonic one-liner would be a ternary-like operation like `b = 5 if x == 3 else 2`.