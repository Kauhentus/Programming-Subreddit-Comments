Bikeshed'ing. The same people who complained loudly about f-expressions are now complaining about assignment expressions. Not because it does any sort of real damage to the language, but because it's an ideological debate and they feel its on the level where they can enter into the discussion even if they only have experience with programming in python and only for a few years. 
Thanks for this! Though I've already made a GUI with kivy I'll definitely give one a try as well
This should go in our jobs sticky
&gt;&gt; Explicit is better than implicit. &gt; &gt;Instead of an explicit assignment and an explicit expression now you have an expression that implicitly is also an assignment. This statement only makes any sense in the world where there's an expectation that "assignment" implicitly carries the connotation of being statement-only, which is true in Python today, but it's absolutely not inherent in the concept of assignment in Algol-derived languages (of which Python is a member). &gt;&gt; Sparse is better than dense. &gt; &gt;Instead of an explicit assignment and an explicit expression you can do both things simultaneously now. This is true, and very beneficial. Sparseness refers to the idea of separating concerns into logically digestible elements, but the idea of a test-and-set operation is fundamental to all programming languages. It's even found frequently in Python (e.g. in the implicit looping of comprehensions). This is a case where sparseness isn't a feature, but rather an obfuscation, specifically isolating elements of logically atomic operations. &gt;&gt; Special cases aren't special enough to break the rules. &gt; &gt;The whole point of PEP 572 is to save one line of code in some special cases This is explicitly not the case. PEP 572 lays out several reasons for this change ranging from lambdas to comprehensions to loop expressions. &gt;&gt; There should be one-- and preferably only one --obvious way to do it. &gt; &gt;Every example from the PEP itself now has two ways to do it: There are practically infinite ways to do everything in Python. That's not what this line item is about. It's about ***obvious convention***. You don't use bit shifting on native integers through numpy to do simple multiplication, because the obvious choice is the asterisk operator on standard Python integers. Convention enforces this, and if you ever saw someone doing the former, you would correctly criticize it and reject such edits from common code bases. The exact same goes here. There's no reason to start throwing colon characters around in places where standard usage is clear, concise and elegant. But where ***all three of those parameters*** are improved by a different construct, that's where this feature not only can, but should be used as the obvious right way to accomplish a task. 
&gt;CPython takes a traditional approach of compiling source code entirely before execution. Python source is compiled to a Python-specific byte code, which is then interpreted directly. PyPy does JIT (Just In Time) compilation; that is, code is compiled as it is executed. I found this very misleading: it suggest that PyPy compiles Python source code directly to machine code without using Python bytecode, which is false. Please, [read the documentation](http://doc.pypy.org/en/latest/architecture.html#pypy-python-interpreter). 
If you can give me a screenshot of your current GUI, I would be happy to mock something up for you in PySimpleGUI.
Hopefully I'll be building out the readme, changelog, roadmap, and function docstrings for u/pythonHelperBot. The last few weeks I haven't made much progress with the local stack overflow search but I have managed to improve a lot of the infrastructure, including replacing most print statements with logging.debug() and a module that searches for source files and formats their path using os.path.normpath() so I can switch the code from computer to computer more easily. I also hope to start adding some testing to the bot, so I can catch errors earlier, but I haven't done that before and replicating praw classes is going to take some time to figure out. I'm trying to improve a lot of little habits of mine, and seeing what I like and what I don't.
It does if you're using new Reddit.
Can you take a screenshot? I'd check myself but the redesign grinds to a halt for me.
I can't, I don't use it either. I've been told and seen it mentioned in multiple places, however.
If you want the production ready feel of a sql database but don't want to mess around with setting one up, you could just use sqlite3. Another option would be to serialize to rdf using rdflib. 
:( markdown inconsistency is a bug, not a feature.
ZODB is rock solid, and really easy to use. Just subclass off of class persistent, and your objects, graphs and applicationos become persistent. 
Not sure if sarcasm or not, but none of the words you cited mean that he knows anything about the topic.
https://i.imgur.com/0SSuHRD.png
What is the mpl\_finance module? I tried to install it via conda, I get an error (can't find it).
It's the new module for finance, branched from matplotlib. Use pip, not conda.
Cool. That worked. Thanks.
Pickle is robust, depending on your requirements. :) [ZODB](http://zodb.org), is likely a good choice, again, depending on your requirements.
That's upsetting and I need to make a post on this when I can &gt;.&gt;
&gt; I found this very misleading: it suggest that PyPy compiles Python source code directly to machine code without using Python bytecode I was not intending to suggest that. In fact, this is why I said, "The end result of PyPy's compilation ...." -- to suggest that there were multiple steps involved.
This is a good explanation. I see a few minor issues. The main reason the Python devs didn't choose to use `=` for assignment in expressions is not backwards compatibility. Since expressions with `=` were mostly invalid before, making them valid won't break any working code (except maybe keyword arguments). Rather, it's because it's too easy to have typos be valid code that way. In C (where the `=` operator can do assignment anywhere), it's very common for programmers to accidentally type `if (x = 1)` when they meant to type `if (x == 1)` (some C style guides recommend "yoda" syntax, where you write `if (1 == x)` instead). Anyway, `if x = y` is invalid in Python, and remains so with PEP 572. If an assignment is actually wanted in that context (rather than a typo), it can be written as `if x := 1`, which is much less likely to be typed by mistake. As for your example code, these are invalid expression statements: a := (b := (c := 1)) f := 4 Basically, you're not allowed to use an unparenthesized assignment expression anywhere a normal assignment with `=` would be allowed. If you put in extra parentheses it will be valid (so `(f := 4)` is a legal expression statement), but style guides will probably recommend against it. A few other places extra parentheses will be required are keyword argument values (`foo(x=(y := 1))`) and default arguments in function definitions (in the very unlikely event this is useful): `def foo(x=(default := 1)):` These are also likely to be discouraged as bad style. A somewhat more substantial limitation on assignment expressions is that you can't target an attribute or index of another object. Only bare identifiers are legal targets (so `x := 1` is OK, but `x.y := 1` is not). They devs didn't rule out extending the syntax to all the usual assignment targets at some point in the future, but it's not planned to happen soon because there doesn't seem to be much of a need for it (and some special kinds of assignment, like iterator unpackings, e.g. `(x, y) = iter([1, 2])`, would be particularly useless in expression contexts since the remaining value would be an empty iterator).
Dump it out into JSON. If the graph is implemented with dictionaries, you're already halfway there. Persisting JSON documents is a solved problem, and is way more secure than any pickle-based solution. 
&gt; Rather, it's because it's too easy to have typos be valid code that way. In C (where the `=` operator can do assignment anywhere), it's very common for programmers to accidentally type `if (x = 1)` when they meant to type `if (x == 1)` (some C style guides recommend "yoda" syntax, where you write `if (1 == x)` instead). I've never heard this argument by any of the core devs which is why I didn't include it. And from personal experience I disagree with it-- only beginners make that kind of mistake. Assignment expressions in C and C++ are extremely useful. &gt; As for your example code, these are invalid expression statements: &gt; a := (b := (c := 1)) &gt; f := 4 &gt; Basically, you're not allowed to use an unparenthesized assignment expression anywhere a normal assignment with `=` would be allowed. Unless this is a recent change to the PEP that I did not notice, it is allowed. There was discussion to make unparenthesized statements like these not allowed, but this never occurred. Guido's reference implementation allowed the statements that I said are allowed, but not the ones I said were invalid, as well. &gt; A few other places extra parentheses will be required are keyword argument values (`foo(x=(y := 1))`) and default arguments in function definitions (in the very unlikely event this is useful): `def foo(x=(default := 1)):` Completely don't know about the keyword argument thing, unaware where this was specified. Thank you for adding the object assignment/slicing thing, definitely correct and a limitation.
Good call! Thanks a lot.
RemindMe! 3 days
Man, "children" is putting it mildly. I don't doubt any core dev's technical competence. Not even a little. I seriously doubt the ability of half of them to behave as public representatives of a hot dog cart, much less a global community. That thread was downright cordial by their standards. [Here's the discussion about his resignation.](https://lwn.net/Articles/759654/) About halfway down, they start discussing the community code of conduct (CoC). It's [this,](https://www.python.org/psf/codeofconduct/) if you want to read it with context.
Here is a great machine learning data set I have been playing with: [https://github.com/AFRL-RY/data-clif-2007](https://github.com/AFRL-RY/data-clif-2007) Great for Deep Learning with 3M+ labels. 
Using Python with Ansible to setup my development and server environment for my side project. 
Disclaimer: Not only am I not an expert, I'm a dumbass. This could be done by allowing context managers to exit early. There was an early PEP (370-something I think) that wanted this and Guido denied it because he said it didn't have a good use case. I'd happily write my own context manager for these assignment cases but they can't exit early and will *always* execute the contained code block. If we had a way in the context manager to exit in its `__init__` method all of this drama could have been avoided. This shouldn't (see disclaimer) have any affect on anything except the specific context managers we write for this use. class Foo(object): def __init__(self, o): if o is False: # Or whatever it takes to skip the code block raise GetMeOutOfHere else: self.o = o def __enter__(self): return self.o def __exit__(self, *args): return True with Foo(bar()) as something: print("something is not False")
RemindMe! 2 days 
Is the data structure a tree (lists and dicts) of primitives (int, float, strings, bool, None)? Serialized to json instead of pickle - safer and more portable, but still a simple file.
Rewriting our work codebase from almost scratch. Now I'm re-doing the entire thing with * Full-ish test coverage and writing tests before the code. It's slow as I've never done it before but watching tests pass feels good man. * A PostgreSQL database in Docker for testing, no more testing (which were actually dev, not testing) schemas in the production database. Absolutely necessary for testing, took a few hours to get the hang of but well worth it. Not having to connect remotely also saves lots of valuable time when running tests. * An actual setup.py so no more sys.path.append("..") to make imports work in sibling directories. The entire codebase was full of this crap. * 10/10 on pylint before I commit. I think I average two #pylint: disable=whatever-warning per file but it's well worth it. It's found so many unused variables and imports and formatting issues. * An install script that * Creates a conda env * Installs requirements to it * Installs the app with setup.py * Sets database connectstring in an env var so no more database URLS in code * An uninstall script that * Uninstalls with setup.py * Deletes the env It's slow work but I'm learning a lot and rewriting feels soo goood. I can't believe none of the responses in the bajillion "how do I import from other directories" threads have a "make it a package with setup.py" answer. I despise the sys.path.append("..") approach, it's so fugly. I thought packaging was only for distribution to other people, how wrong I was. 
There was a talk last year about graph databases in python - it can be found here https://www.youtube.com/watch?v=Fy611BorGTc
Nice! Keep it up! Don't be scared of text tutorials though. Especially package's documentation is often a lot better than what you can find on YT in my experience. Check out [requests](http://docs.python-requests.org/en/master/user/quickstart/), it's really great. Combine it with some json and an API about something you're interested in and you can make some really cool stuff. 
I and a friend of mine were working on a project that help you to automate yours python tasks easily ita named phulpy https://github.com/jefersondaniel/phulpy take a look and let your star if you like it and also let me a comment pls
I and a friend of mine were working on a project that help you to automate yours python tasks easily ita named phulpy https://github.com/jefersondaniel/phulpy take a look and let your star if you like it and also let me a comment pls
None. Just download the pandas docs and practice on a dataset. https://pandas.pydata.org/pandas-docs/stable/pandas.pdf
Bad bot
In your opinion are there any useful books on programming? 
https://github.com/jakevdp/PythonDataScienceHandbook
It's a Python compiler, essentially. (The truth is always more complicated.) In many tasks it can be 2x to 5x faster than CPython without you needing to change your code. There are some catches: A few C libraries don't work, and others run slower than they would in CPython. For example, MySQL libraries based on C are slower than the pure-Python MySQL library, and SimpleJSON is slower than just using the default JSON library that comes with PyPy. Also, it has a warm-up time as it figures out what to compile and how to optimise it, so short benchmarks may show it actually being slower.
I've seen many game engines running hot 100% but only one core. Most of them are written in C++. Can you explain that? 
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
If this is a daemon/service why not gracefully handle (e.g. log an error and continue) in case of an HTTP status code != 200? Is there a need to specifically handle all of the different types of HTTP errors?
The issue with C assignment expressions using `=` is given as [the first frequently raised objection](https://www.python.org/dev/peps/pep-0572/#why-not-just-turn-existing-assignment-into-an-expression) in the PEP. I don't think it was discussed too widely, it was just taken as conventional wisdom. That's not to say that C's assignment expressions are bad overall, just that a different spelling would be better than `=` if it can be used in the same places `==` can be. The list of limitations on where unparenthesized assignment expressions can go is in the [Exceptional Cases section](https://www.python.org/dev/peps/pep-0572/#exceptional-cases) of the latest version of the PEP. I do think it was added relatively late in the process.
Python is not an implementation of a language: python is a language specification. That is, a rulebook about what output you should get given a particular input. There are a number of implementations of python the language. The reference implementation, which is maintained by the same people as make the rulebook, and gets updates first, is written largely in C and similar languages - it's called CPython. There is also ironpython, jython, brython, and a few others. There is also Pypy, which is an implementation of the python language written in python (specifically, a subset of python called Rpython). This sounds weird, but lets them do some clever stuff under the hood. It's better at some things (like tight loops in python code), but worse at some things (interacting with compiled libraries like `numpy`).
For all exceptions you can't handle, crash. Handle as many as you can. For a 401/403, login &amp; replay. For a 429, throttle thyself. You can't do either of those things if the service has crashed. Ensure when the service automatically restarts it gets some work done before crashing again, such as by deadlettering or skipping the bad item.
I just lost 2 hours.
https://python-for-multivariate-analysis.readthedocs.io 
As someone who has used a similar tool to migrate a lot of python to being typed, you overestimate the pain in practice on a real codebase. It's normally straightforward to find the places where weird stuff is happening. Most python code, like most code, doesn't have weird Union input and output types.
Yeah but that's specific to this PEP in this form. This idea has been tossed around for years, and I've heard the compatibility thing more over those years. Or I could be misremembering. It was quite some time ago. The addition of exceptional use cases was definitely added late in the process, because when Guido made a reference implementation he explicitly allowed them at the top level and in some more complex statements such as implicit tuples without parenthesis. Seems to not be the case now, which to be honest, is kind of depressing. The behavior of assignment expressions before would allow complex side effects, which while I dislike, companies that want to obfuscate, love beyond belief.
This heavily depends on the size of the project. The larger they are, the harder they will fall, with things like this.
I can with a high degree of certainty promise that the project in question was larger.
Better asked *only* in /r/learnpython.
As large as Dropbox's entire Python infrastructure?
Certainly in the same scale.
Creating a rest api for computer evaluations at work using flask-restplus.
It looks like the problem is in the line where you check if choice == ‘A’ or ‘a’ What seems like a totally understandable statement is really being interpreted as: if (choice == ‘A’) or (‘a’) What the second condition is actually doing is checking if the string ‘a’ exists. It always will, so that if statement is always true. The best fix is just to check if choice.lower() == ‘a’ This way, the choice is made lowercase so you can compare to ‘a’ regardless of input case.
You have Choice == 'A' or 'a' Which you think means (Choice == 'A') or (Choice == 'a') Which actually means Choice == 'A' Or 'a' And 'a' == True
The whole problem is in condition. The part "or a" will always be True even if the choice is wrong
I like how you formatted your code in your post lol. This is a simple problem, Pythons logic doesnt work the way youre expecting: Let me add some parentheses so you can see how Python is evaluating your statement: `if (choice1 == 'A') or ('a'):` In this case, `or ('a')` is evaluating to `True`. Same with your elif statement. The solution is simple: `if choice1 == 'A' or choice1 == 'a':` Some other ways I see it done/usually do it: if choice1.lower() == 'a': or if choice1 in ['A','a']:
Thanks!!!
If choice1 in [‘A’,’a’]: Or if choice1.lower() == ‘a’:
This belongs in /r/learnpython . Also, in that sub, read the "reddit code formatting" link.
If you say so. But I still have my doubts.
Like all great side projects it's a bit of both. Though if you're still learning Python maybe just pause and come back to it when you have more experience. Taking on too much work can take the fun out of doing a project
Pycharm. I'm a hardcore Vim user but all its features are well worth it.
Ok. Thank you
I use Pycharm if I'm doing hardcore Python development (which, as a Ruby/Java developer, is rare but I like the Python libraries for scripting and doing Machine Learning tasks) or vim if I'm editing Python on the server. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
That’s an interesting point. I am going to have to think about that. 
Let me go through a few of your objections: &gt;Python is a dynamic language. By nature writing static code is an imperformant antipattern. Your public APIs need to be statically typed already. If they aren't, other people can't use them. From there you can work backwards. In practice, I'd say something like 95% of code in python is static. (in fact, with the advent of PEP 544 (Protocols), I'd argue that any situation where you accept a union is incorrect (unless you're using the union to intentionally be overly-precise). You are always accepting a protocol. Historically, you might not have always defined an ABC for your protocol, and instead accepted a Union of types, but if you're able to accept two types, to a method, they both quack the same way, therefore there's a shared interface that you're actually accepting, and so you can define and use a protocol instead. Therefore, &gt;Python is a dynamic language. By nature writing static code is an imperformant antipattern. Is just untrue. You were writing mostly static code anyway. And you have an escape hatch if you need/want to do something like override `__getattr__` (although amusingly, you can often hack the attrs back into the type system if they aren't truly dynamic, ie. in something like an ORM). &gt;This is only true if the calls don't accept a union of multiple types and if variables retain their type throughout the scope in the first place, which to do in a dynamic language is silly. The fact that it is dynamic is a feature and should be used. It should be used, when appropriate. In those cases, you have the escape hatch of `Any` or other similar hacks, but again, those cases are the long tail. While python allows you to do a lot of things, that doesn't mean you always should. &gt;Absolutely but this occurs based off the previous by-hand generation. I doubt that the example provided (20% by hand) would be enough, and even then, the tool doesn't make decisions by known hand-generated info, but completely dynamically at run time, in which inputs to the hook could be vastly underrepresented or overrepresented. Sure they could, but in practice they aren't. We have proof of this: in practice, most python code can be JITed just fine. This only works because call sites are normally invoked homogeneously and guards are rarely (and in some cases never) invoked. 
I've been interested in plotly, but everything I find has it as a paid service. Is this true?
The only thing I have heard negative about bokeh is the learning curve to begin. Everything I have seen on it has been very positive otherwise.
&gt; If I were to choose between slow but accurate and fast but potentially horribly wrong, I'd go for the first. [...] Even worse, just because a function currently only ever takes an int and outputs an int, does not mean that function was meant to always take an int, and can rarely (but not gone through during this hook) take another type, such as a float. Eh, I don't think this is an accurate characterization of the problem. If you decide to type everything by hand, it's true that your type hints will be "accurate", but that doesn't necessarily mean the type hints will be *helpful*. What you're basically proposing here is that you precisely annotate by hand a few small corners of your codebase and implicitly assign everything else a type of `Any`. This is technically accurate, but you're not really getting any benefit out of using a static type checker: you've left the vast majority of your codebase dynamically typed. Having a draft of plausible type hints, on the other hand, *can* be helpful. For example, let's use your example: we ran PyAnnotate (or MonkeyType or whatever) on our unit/integration tests and on some percentage of production code and discover that some function `f` only ever receives ints in all of our samples. This tells us valuable information! In particular, tells us how whoever wrote that code/wrote the unit tests expected that function to be called, tells us about how that particular function is actually used in practice... We've essentially discovered what appears to be an invariant in our code. Now, suppose we either continue adding type hints or continue running PyAnnotate in production for another week or two and eventually discover that `f` can sometimes receive floats in some edge cases. This again tells us something useful! In particular, we've discovered that either 1) we've misunderstood what the actual invariants are or 2) that whoever is calling `f` is doing so incorrectly. We can either fix the type hints on `f` (and probably update our unit tests) or fix the caller so it also passes in ints. &gt; You heavily underestimate the errors this tool causes. Is not typing the majority of your codebase any better? Specifically, not adding types will often generate what are effectively false negatives: you think everything is fine even if your code contains subtle bugs or broken invariants. On the flip side, using probabilistic tools like PyAnnotate and MonkeyType have a tendency to generate false positives: your types end up being overly restrictive in some cases and require fine-tuning. This is a trade-off: do you prefer false negatives, or false positives? On one hand, if you care about correctness, it's more useful to get a bunch of false positives (false alarms) -- having a list of things to investigate is more useful then not having a list at all. On the other hand, if you get too many false alarms, you're going to have to spend a lot of time wading through them and figuring out which ones are real or not -- at this point, you're basically back to square one. &gt; This is only true if the calls don't accept a union of multiple types and if variables retain their type throughout the scope in the first place, which to do in a dynamic language is silly. The fact that it is dynamic is a feature and should be used. Unions aren't actually that common in practice. For example, if you look at the Python standard library, most of the available functions don't accept or return unions. Most cases where code accepts a union can be replaced with code that accepts either a parent class or a common protocol. To put it another way, the only time you'd need to accept a Union is if the actual underlying code is literally using `isinstance` checks or whatever and needs to handle objects with dramatically different interfaces. Most well-written Python code does not do this -- the recommended practice is to use duck-typing and design your code so it assumes all received objects satisfy some given interface. (For example, the `len(...)` function is designed to accept any object with the `__len__(...)` method.) &gt; in which inputs to the hook could be vastly underrepresented or overrepresented. Who says you need to blindly trust inputs to the hooks? For example, you could set up whatever A-B testing framework you're using to run PyAnnotate or whatever on 1% of all incoming requests in production and collect data for a period of say, two or three weeks. Then, take all the functions that were called a sufficient number of times and generate type hints just for those. &gt; Not necessarily, because just because this was written for with mypy in mind. It will agree with any bugs in mypy. Based on my understanding of how both this tool and mypy works, I strongly doubt this is actually the case. Tools like PyAnnotate and MonkeyType tend to generate overly-simplistic types, if anything. &gt; Python is a dynamic language. By nature writing static code is an imperformant antipattern. Why would writing static code be imperformant? &gt; If the initial generation is incorrect, it can lead to more incorrectly written or unnecessarily duplicated code in the future. If you discover that the initially generated type hints are incorrect, just fix them. If you discover an inconsistency between your type hints later down the line, that's a great opportunity to fix your type hints or refactor your codebase. You can tune mypy to help make detecting these sorts of inconsistencies easier -- e.g. pass in flags to prohibit the use of the `Any` type, enable all warnings, and see what happens.
That's true for the vast majority of use cases but not all. As soon as you build an API backed by a cache engine like redis you start seeing how slow your framework actually is. I've cut by half the amount of machines behind a load balances just by switching frameworks. We are talking thousand dollars... (switch languages has dev costs, don't forget)
PyCharm, been using it for years now.
If I am able to, I will almost always use a Jupyter Notebook to write Python code these days. Free, easy to use, super easy to prototype with. If i really need to be writing with out using a Jupyter Notebook, I have started using Visual Studio Code. Free, built in terminal, highly customizable. 
Interesting. In what situations would you not use pickle? Also what about something like Neo4j?
As a beginner I’d avoid an IDE completely. Hell, as a pro I’d avoid it too. Some of the worst projects I’ve been involved with were architected by individuals who lean too heavily on their IDE. You really don’t need one. 
https://wingware.com/downloads/wingide-101
[Python for Data Analysis, 2nd Edition](http://shop.oreilly.com/product/0636920050896.do) by the original author of Pandas.
That's kinda like using pen and paper to so calculations because you don't want to lean to heavily on your calculator. Use the tools available for their best fit. Code completion, syntax hilighting, refactoring, and linting are incredibly useful features, especially for beginners. 
You can get completion and highlighting without a full blown IDE. I never said you don’t want an editor... just not a bloated tool like IntelliJ. HIGHLY recommend against that. I’ve been using python professionally for over a decade (and doing very well for myself) and I really genuinely mean this. IDEs are crutches. For environments that require them (iOS, Android) it makes sense but for Python, particularly beginner Python... absolutely not. 
Interesting concept, though I do wonder: by the time the boss is visible by facial recognition, isn’t it already too late?
&gt; For the time being, I propose that we shift into low gear and defer major language changes for a while Jesus, I hope this will be the case. 
Visual Studio Code is free and even if it is not a full fledged IDE it provides all the features that you are going to need . Also it supports other languages.
&gt; Most python engineers don’t use an IDE [citation needed]
VSC is good general purpose editor with nice plugin system, debugging, console integration etc. Good enough for most day to day tasks.
vi or bust and none of that vim shit either
Oh, I feel your pain... never touched an iPhone, but had to deal with other proprietary embedded crap, like "smart" TVs. Well, things that often cause memory violations in Python wrappers are the cases when you forget to `Py_INCREF()` some object. It is particularly heinous with bound method objects because when their refcount drops to zero, the pointer may be pointing at another method, and then you will be calling something unrelated... Try sticking `fprint("pointer to util: %p\n", util);` and `fprint("util refcount: %zu\n", Py_REFCNT(util));` in that function and see what it gives you.
&gt;made those obligatory the very second they made it into the standard This is exactly the problem. They were sold to the community mainly by being "optional", but people apparently love their static type checking so much they need to do that to Python as well. Whether one thinks type annotations are a net benefit or not, marketing something as optional that then get made obligatory in *some* environments is dishonest, especially since the people in charge could have seen that coming (it was pointed out frequently in the discussion of the PEP).
Some people like the dynamic typing of Python, and they dislike having to now use type annotations against their will when style guides/linters make them mandatory in some projects, but not in others. I disagree that type declarations (or inline assignments, especially with an ugly operator) make Python code more readable. It makes Python look more and more like Perl, to be honest.
They should just be on [mldata.org](https://mldata.org) where they can be loaded by scikit-learn.
I think I found the root issue. In my obj-c code I'm running delegates, which are kind of like callbacks a bit or like android listeners. Basically I think the root of it is that I'm trying to use my python object in the delegate functions but unless you declare your objects "strong" in objective-c they won't be available inside the delegates. Now it's easy to declare obj-c objects as strong objects but finding out how to make a python point void\* a strong reference has been a little hard... Or the other issue could be that cython thinks I'm in an infinite loop of recursion because of the delegates cycling over and over...
Wouldn't Python be too slow to keep up with the rapid changes that are occurring?
Hello Sir, I liked the coding style you did for tkinter. If you don't mind, I will study and follow this coding style. :) Thanks a lot. PS. I'm still a newbie. 
You probably want to blame those individuals rather than the IDE :) Just like you can't blame one car is bad just because its driver was a dickhead. 
Type hints and pycharm changed my python life. Full autocompletion, type warnings, etc. are so so useful that it's very hard to go back once you've used it for a while. As for your claim that most python engineers don't use an IDE, that's bullshit in my experience. 
You can't abstract the web framework away, that's totally counterproductive. Each framework has its own advantages and disadvantages and you should choose the one most suitable for the job. Also they are so different in what they offer, that it hurts more than it helps (eg. tornado offer async request handling, django offers db integration, flask is minimalistic). Basically web frameworks appeared to abstract away the routing, http request parsing and handling, etc and you now want to put another layer on top of that? Your best shot is keeping your business logic in other modules/classes which you use in your views.
Looks neat (never used it). One small wonder I have. They license under BSD but have a weak dependency on the unidecode package which is GPL2. They certainly don't seem to install the package but since they import it, I thought that meant they had to license under a GPL license as well? I probably get that one wrong.
The documentation isn't all that clear, but there are some worked examples using tornado and flask. Integrating with django is a little unclear. The hardest part is making interactive graphs work with what you want and not using their weird built-in tornado server thing. I've been meaning to make a django integration, but I can't seem to find the time. They have a support chat that is really excellent.Hit it up. Just remember most help will be gotten during American evening hours.
\#1 [https://realpython.com/python-web-scraping-practical-introduction/](https://realpython.com/python-web-scraping-practical-introduction/) \#2 [https://github.com/tryolabs/requestium](https://github.com/tryolabs/requestium) 
Check some crawler framework maybe? I have used [scrapy](https://scrapy.org/) a little, and it looks cool! It'll let you to abstract from the workers management.
PEP 8 is great, but lets be honest, not everybody follows it to a T. 80 character line limit? That's so stupid on modern machines. Not to say those 300 character lines are acceptable, but 80 is silly. PEP 8 has lots of really great advice. By and large, stick to it, but don't treat it like some kind of bible. There are so many libraries that use camel case. They aren't inferior because of it. Camel case vs snake case is a stupid argument and should never have been in the style guide. What does matter is to pick one and to stick to it consistently. The standard library isn't even PEP 8 compliant! 
I've never felt a great need for it, but I like that I now have it available to me. I'm probably going to avoid using it till I see what the general consensus on it is. I like to stick to coding in a style consistent with what the majority of people use except snake case and the 80 character line limit from PEP 8.
He's trading on a daily scale so python is way fast enough ! If you plan on doing some fancy high frequency trading, python might be problematic but other limiting factors will occurred such as the latency of the internet connexion.
You're on the wrong sub, mate. This is a sub for programmers rather than snake collectors.
Python 3.6 should be your first choice lol
I don’t know if you are sarcastic but this subreddit is about the programming language Python, not the snake.
With Plotly, if you wish to use their online dashboard or data service, u have to pay for it. But its completely free to download the library (it also has a companion library called cufflinks that is meant for offline plotting with plotly), make your charts, and publish to your own website.
get a python 3
This can be a funny project ! You will need to learn about signal processing and more precisely [time frequency analysis](https://en.wikipedia.org/wiki/Time%E2%80%93frequency_analysis). The "imperfections" you want to detect will certainly have a characteristic frequency content. Try to extract features from the time-frequency analysis [librosa has a bunch of them](http://librosa.github.io/librosa/feature.html) and train a classifier. As always for machine-learning, the most difficult part is getting your annotated database that you'll use to train your classifier. Use an audio editors (audacity for example) and isolate a bunch of plosives, spinking, ... It will be your annotated database. Hope this explanation is clear enough.
**Time–frequency analysis** In signal processing, time–frequency analysis comprises those techniques that study a signal in both the time and frequency domains simultaneously, using various time–frequency representations. Rather than viewing a 1-dimensional signal (a function, real or complex-valued, whose domain is the real line) and some transform (another function whose domain is the real line, obtained from the original via some transform), time–frequency analysis studies a two-dimensional signal – a function whose domain is the two-dimensional real plane, obtained from the signal via a time–frequency transform.The mathematical motivation for this study is that functions and their transform representation are often tightly connected, and they can be understood better by studying them jointly, as a two-dimensional object, rather than separately. A simple example is that the 4-fold periodicity of the Fourier transform – and the fact that two-fold Fourier transform reverses direction – can be interpreted by considering the Fourier transform as a 90° rotation in the associated time–frequency plane: 4 such rotations yield the identity, and 2 such rotations simply reverse direction (reflection through the origin). The practical motivation for time–frequency analysis is that classical Fourier analysis assumes that signals are infinite in time or periodic, while many signals in practice are of short duration, and change substantially over their duration. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
did you test it while wearing big retro spy sunglasses with a giant fake mustache?
It's saddening that GvR was left with no choice but to leave because people couldn't get a grip on a mere PEP. It reflects badly on parts of our community.
Thanks for posting this.. Cheers
Actually, i find it that big projects give me initiative to learn, otherwise I'll turn into a huge pile of procrastination. On your estimate, how long would it take to build it(assuming a fast learner)? 
I think the idea is just that if everybody follows the same convention then it's much easier to read and understand somebody else's code. For example if I saw something in camel case I wouldn't expect a variable and then might be thrown off a little bit if I then discovered that it was. Of course I agree that the line limit is a bit over the top, but I try to follow the convention whenever I can and it has made my code a lot more readable. It's a bit like grammatical rules in English. You might not like following some of them, and sure you can choose to ignore them if you wish, but when you write something and need help with it from somebody else, they are more inclined to help if it follows the standards most people follow. If you're not capitalising proper nouns or you're using semi colons incorrectly, somebody who does things the "correct" way is going to be a little bit annoyed and may be less inclined to help.
No idea, but I can aubio might be worth a look, there essentia is another audio library, but might be harder to get going with.
For 2) you might be best off asking the devs of PSUtil, on a mailinglist if they have it / mailing them or open a ticket as a last resort.
web Scraping + Confluence API = Corprate Cybersecurity Newsletter. But of-course, y'all aren't supposed to know that.
Python 2.7 = No
Missed opportunity to call it QtPi.
[removed]
Short answer yes. Long answer – yes but you might not get what you want. The load command will bring your whole script into one cell. You can then split it from there. There is no way for the notebook to chunk up your code into cells, so you have to do that manually. In saying that, it will chunk up your code if you use the special comments that you get when you export a .py file – try doing that and seeing what the syntax looks like. Most of this is stolen from [stackoverflow](https://stackoverflow.com/questions/21034373/how-to-load-edit-run-save-text-files-py-into-an-ipython-notebook-cell).
I recommend Raymond's talk on idiomatic python: [youtubes](https://youtu.be/anrOzOapJ2E)
Based on all of your r/machinelearning posts, I bet you have a *very* suitable farm.
This is likely the right answer, if the data stored in the nodes is simple, serialise to JSON. It's a great serialisation for probably 90% of use cases.
That's very much false. Many scientific computing libraries in Python are actually written in C and C++. The idea is that Python is an easy language to work in, but the heavy lifting is done in another language by the libraries. I've yet to meet a computation in my use of Python where I couldn't use a library built on something fast to do my computation. Computations that take long are not typically a long serial computation, but many thousands of computations one wants to do in parallel. Then it makes sense to use numpy or even tensorflow for them. 
If your application is mostly I/O bound, as it seems to be, you're not going to get significant benefit by using Cython or other code speed-up solutions (like PyPy). These are effective for CPU-bound workloads. You should work on your code logic, maybe using parallelism techniques tailored to your use-case. 
Could you please provide an example of such generator in while loop?
It really depends. I did something similar converting a game I wrote in Python to an android app. After finishing the game logic converting it to use Kivy for the graphics instead of pygame took about a week and a half and I was also still fair new to Python
There's no Python 3.7 version uploaded though.
Nobody forces **you** to use them. If a team that works on a particular project agreed to use type annotations why would you deny them such opportunity?
Even Jupyter is going the IDE route. I personally wouldn't code without integrated debugger, unless I ma
That's one hell of an achievement. Is the app on play store? 
Which I think is absolute BS.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
https://github.com/jonathanslenders/python-prompt-toolkit or just ipython if you want to have python shell where you can add your functions and variables. 
Cython does next-to-nothing for you here. asyncio will. Eg: https://compiletoi.net/fast-scraping-in-python-with-asyncio/
to use it properly you need to use a webcam, and place it in an obvious place from where you boss will come 
haha no! its very unnatural for bosses to come that way to office
thanks
Snakes can't eat GPUs, you silly goose.
For the OP use case, it may be a little bit more complicated, unless they use PersistentMapping or BTree objects.
Depending on your workload you might have more success with prefetching[[1]](https://instagram-engineering.com/improving-performance-with-background-data-prefetching-b191acb39898) and caching[[2]](https://docs.python.org/3/library/functools.html#functools.lru_cache). 
Isn't there already tool named QtPy?
I’m still using 2.7 🤭
[It's on it's way](http://blog.qt.io/blog/2018/07/17/qt-python-available-pypi/#comment-1204306).
Pickle is a serialization format, not a database. If I just want to save a data structure as a whole, it's a fine data format, as is marshal (for simple data). If I want to update/search/access parts of a set, then a database is better. Also pickle, in it's default usage shouldn't be used with untrusted data.
\+1
That just means you have something else to fix today. 2020's getting closer and closer.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
What's the difference with the previous PySide package ? Sorry I'm not sure to be aware of the real context here
Python 3.7 or the fact that it's not uploaded?
Check out the [asyncio](https://docs.python.org/3/library/asyncio.html) rabbit hole as well. Here's a good tutorial by Guido: "[A Web Crawler With asyncio Coroutines ](http://www.aosabook.org/en/500L/a-web-crawler-with-asyncio-coroutines.html)"
as long as your little project didn't become viral yet :D
Just messing around with a voice assistant using speech_recognition and gTTs. [Source code from GitHub](https://github.com/Dextroz/VoiceAssistant/blob/master/voiceassistant.py)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Dextroz/VoiceAssistant/.../**voiceassistant.py** (master → a0662e1)](https://github.com/Dextroz/VoiceAssistant/blob/a0662e128078b1ec3d3e244257c619667e7710f7/voiceassistant.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e2ligo0.)
Creating a stairstep report with variable number of months to take into account from 6 through 48 months stepped and total recovered % based on the month paid and month assigned. tis fun!
PyQt I believe.
 Σ(゜д゜;)
😮 It took so long to happen that I forgot that this was a thing. Good going QT team.
Yep. It lets you use the same syntax regardless of whether you're using PyQt4, PyQt5, PySide, or PySide2. It's pretty awesome.
Whilst I agree, the camel case vs snake case debate is genuinely one of the dumbest. One isn't better than the other, and they're both used pervasively throughout the Python and programming world. There really shouldn't be any cognitive overhead because of how common it is. Snake case vs camel case is not a convention argument. They're both so common that they're both equally acceptable in my mind. In fact, there are a lot of conventions that are so consistently broken that the way we break them is as much convention as the thing that purports to be convention. As long as your code is readable and follows most of the major conventions, I don't think it should influence our tendency to help. Code that is inconsistent and a total mess? Yeah, bugger them, but most of the time people get caught up on really silly stuff. This sub in particular gets hung up on the most meaningless things at times.
The fact that it's not uploaded
Oh, I see.
I'm another one who never uses an IDE. With Java maybe you need one, but for python or C, I've never felt the need in 40 years of programming career.
Where is there any mention of python version in the post....?
Getting started with a Python course.
Python 2s never go away no matter how hard people try to kill them
Can you PM me the name of that course or a link to it? I'm curious :)
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I wouldn't say it's counter-productive. But I guess I'll go look for answers elsewhere. Thanks!
Can you help clarify something. What’s my username please 
After over a year, I came to the moment when I'd like to show my library to other people. Haps is a small python IoC library, that lets you handle Dependency Injection easily, without any XML/JSON/you-name-it configuration. Everything is done in the code of your application. And there are no external dependencies. My motivation to start creating this lib was lack of such tools for Python. Of course, there are some projects like spring-python, but they seem to be forgotten. I needed something fast, small and easy to use. Sugar, spice, and everything nice, accidentally mixed up with Python Annotations and that's how Haps was born. Now it's heavily used in a couple of commercial projects that my colleagues or I work on, and also some private apps. I'd be happy to see what do you guys think about this.
You are right - learning Python and learning tools are two different things. But until I got on /r/Python I never met an engineer that didn't use IDE or at least advanced text editor (for years it was Sublime, currently people fell in love with VSCode). Must be a field/domain thing I guess?
I pretty much agree with what you're saying - neither are better than the other in a vacuum. I'm just of the opinion that it would be easier if everybody did the same thing.
Like it. I used this before stable version and this was very nice solution for DI in Python.
PySide2 is Qt5, PySide is Qt4
[Yes, in this section](https:/python-for-multivariate-analysis.readthedocs.io/a_little_book_of_python_for_multivariate_analysis.html#install-python) In addition, the libraries used have all had major updates since this was created (pandas 0.17-&gt;0.23, numpy 1.10-&gt;1.14, sklearn 0.17-&gt;0.19, etc.)--scikit-learn 0.18 had lots of breaking API changes that might affect this code. Just looking at the recommendations for manipulating data with pandas, it's not idiomatic--`df.apply(np.mean)` instead of `df.mean()`, repeated operations instead of `df.groupby().agg(['mean', 'std'])`, etc. Basically, anyone reading that will not learn to use the tools correctly. 
Ever heard of search engines? They are really useful tools, you should try them.
[Tutor -- Discussion for learning programming with Python](https://mail.python.org/mailman/listinfo/tutor).
Sure hope you don't plan on using introspection tools with this library. __all__ = list("Qt" + body for body in "Core;Gui;Widgets;PrintSupport;Sql;Network;Test;Concurrent;WinExtras;Xml;XmlPatterns;Help;Multimedia;MultimediaWidgets;OpenGL;Positioning;Location;Qml;Quick;QuickWidgets;Scxml;Sensors;TextToSpeech;Charts;Svg;DataVisualization;UiTools;AxContainer;WebChannel;WebSockets;3DCore;3DRender;3DInput;3DLogic;3DAnimation;3DExtras" .split(";"))
Still a noob and learning about how to interact with APIs. Made some good progress with a couple of projects that are useful to me. The first project requests a free IPv6 subnet from PHPIPAM, and then assigns both that and a linked smaller subnet for building a static route over a point to point link. I have bigger plans for this but happy to just have the base assignment logic (mostly) working. The second project is to play a random episode of a few select TV shows on Netflix via the Roku API. The random episode bit is working, but it currently only picks a random episode from a single TV series and is just run from the CLI. Next steps are creating a web interface so I can trigger it from a smartphone, adding a way to select the series, and seeing if I can do the same thing for shows on Hulu or other Roku apps.
&gt; we were still discussing with the PyPi people to be able to upload our wheels to their servers ... can't anyone already do this?
Looks like (Fabric) [Invoke](https://github.com/pyinvoke/invoke), but less mature.
That poll was taken before an updated version of the PEP was published, such that there was a swing towards the PEP, although I cannot recall how big a swing. The PEP doesn't bother me one way or the other. If I want to use it I will, if I don't, I won't.
Is this like Pyqt5? And if so, what's the difference? 
Pfft, what is this, 3 weeks ago? Get with the times, old man.
Why not 3.7? It was recently released and as far as I can tell it's just as backwards compatible as 3.6. No reason not to use it. Plus you get to use the new toys like async keywords, data classes, and the ability to just throw a breakpoint() wherever you want.
Nah it isn't that good so I didn't bother putting it on the playstore
Whats the smallest time scale that python is effective for? Hourly?
I'd dig in the direction of "strong objects". This seems like memory allocation issue. However, I know nothing about Obj-c, so, maybe I'm wrong.
Main issue I have with PySide2 is they refuse to create builds for Win32/Python 2.x, due to Visual Studio version issues and that Python 2.x is going end-of-life in 2020. Hope they change their minds. Some of us are stuck with this platform for the indefinite future.
This one is built by the qt devs themselves
Why should developers want to port something to python 2 when it's eol is in 1.5 years. Waste of time and money.
You forgot to perform a comparison after the and statement Example X &gt; Y and X &gt; Z
The expression `numOne &gt; numTwo and numThree` evaluates to `True` if `numOne` is bigger than `numTwo` and `numThree` is different from zero: clearly this is not what you want! Instead, `numOne &gt; numTwo and numOne &gt; numThree` does what you meant to do. That said, Python already has a `max` builtin which accepts any number of arguments (https://docs.python.org/2/library/functions.html#max), so you can just write: ```python numOne = int(input("Enter a number: ")) numTwo = int(input("Enter a second number: ")) numThree = int(input("Enter a third number: ")) maximum = max(numOne, numTwo, numThree) print(maximum) ```
First, for if fucntions don't use multiple nested ifs when you can avoid it, use else and elif; If a = b: Code Else: Or Elif: Secondly, just the the max function instead? Print(max(numOne, numTwo, numThree)) Which will return largest int
I use Sublime. Sublime is not an IDE. 
Add the numbers to a list and run max() on them is the easiest way. To fix your code: instead of having 3 if statements in a row try if,elif,else.
Because the work's already been done. They have working alpha builds from a month ago but stopped doing them for *reasons*(tm). Also I wouldn't be surprised they push back the Python 2.x EOL again.
IDEs just bundle a bunch of tools that people use anyway. I'm not sure why you think not using an IDE makes you a superior developer. What's the difference between running `$pytest xxx` and clicking a button in an IDE that does the same exact thing.
Thanks! I didn't know about the built in function.
*for learning the language* an IDE is a bad idea 
This is great news! Thank you The Qt Company
If I end up writing a long comprehension it is usually a bunch of checks for files in a directory and it isn't too hard to read what the intent is. The performance difference between a comprehension and for loop is negligible so readability always comes first. Nothing in python is going to be fast enough to make it worth sacrificing readability. Which is fine because even if it takes 10 times as long as something written in C it is still fast enough to not matter in most cases.
&gt; are not IDEs I know that, hence "advanced text editor" in my post.
I'm building [`GitHub-File`](https://github.com/jacquerie/github-file/tree/develop), a utility to express the configuration of a GitHub repository as a file and to apply it from the command line without having to click around in the UI. Since one can keep these files under version control they can ensure that all the repositories of their organization are configured in exactly the same way (e.g. have the same merge policy, the same issue labels...)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jacquerie/github-file/.../**7cdf7b5b22d140611f053d14161af1de49b33b97** (develop → 7cdf7b5)](https://github.com/jacquerie/github-file/tree/7cdf7b5b22d140611f053d14161af1de49b33b97) ---- 
Why? DI is a design pattern and it doesn't really need a library or framework. If your client code autodiscovers deps then it's arguably the opposite of the DI pattern.
VSCode, Komodo Edit, Pycharm are all very good.
This looks good thanks for sharing. Akka and Kafka are very different things from each other. Going to assume you are more interested in Pulsar vs Akka comparison and not Kafka. I also came across this the other day that implements the actor pattern which Akka is based on: [https://github.com/godaddy/Thespian](https://github.com/godaddy/Thespian)
I'm working on a simple current_user module so I can use it like current_user in rails. Thou I'm concern how I implemented it. I instantiate the class at the bottom part so I can do it like this. from module.current_user import current_user Is importing it like this in different module costly? 
Of course, you're right. DI pattern tells you sth like "Your objects should not create dependencies by themselves, you rather should provide it from outside", And that's a general rule. Now there's a couple of approaches to this. In basic case, you would pass the dependency to your object in the moment of initialization (like a param in \`\_\_init\_\_\`). So you'd end up with a lot of code like this: db = Database(self.connection) my_service = Service(database=db) And that's fine. The second approach (commonly used in Java world) is to have a library that can handle dependencies by itself. With haps, this code would look like: my_service = Service() or even: my_service = Container().get_object(Service) And the framework will care about creating dependencies, the scope of each one and injecting them. The code looks more clear, and unit testing is as easy as in the first approach.
I'm preparing for a collegiate programming contest next Friday. Re-reading my CLRS atm.
First, here's not the place. You might want to head over to [r/learnpython](https://www.reddit.com/r/learnpython/). Second, what do you expect? On line 7 you iterate from 1 to the user input, but in your `primes` function you skip 1, and the next is `range(2, 2)`. Ranges in Python are *non-inclusive* which means that `range(n, n)` return nothing. This is where my help will end. It's about the logic from here.
&gt; The code looks more clear Does it though? I think IOC is a very useful pattern but not necessarily in python 
Thanks for the suggestion. I will try contacting them directly.
 for n in range (1, userInput): print (n, prime(n)) Side note (another user answered your question about how your function can return `None` instead of `True` or `False`): this isn't going to give you `n` primes. It's going to give you any primes that may exist between 1 and `n`.
Yes indeed. MQ is only a small part of the system.
I would be *astounded* if they push it back again. 
These are good. I’ve already started my first Flask web app.
Why?
So going back to example provided in the documentation for fft.rfft &gt;&gt;&gt; np.fft.rfft([0, 1, 0, 0]) array([ 1.+0.j, 0.-1.j, -1.+0.j]) What's the Fs considered here? Are the complex numbers the positive spectrum values? A step by step procedure would help us a lot to understand the function.
If only that information was hosted on a platform that allowed and encouraged user submitted contributions and improvements to the hosted content.... Sure would be swell to be able to clean up small errors here and there as you spot them.
In my opinion, whoever listens to what people actually want and then delivers it (i.e. threads) gets to be the new king.
&gt; Raymond Hettinger The poster child of what I am talking about.
I'd download that. 
Thank you! I was just trying to get f2py going on Windows literally a couple days ago and gave up. I just tried your instructions and was successfully able to use f2py.
When I see := in a language, I stop looking at that language and dismiss it as some crap being hyped by some academics.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Breaking backward compatibility seems like python thing. Why not just do it for every version. I love having multiple versions of python on my machine and keeping them all up to date with pip so that I run some things in one version and other things in another version. Ideally pip would then start to drift in names so that I have to google every time so that I have: pip install lib pip27 install lib-lib pip3 install liblib pip4 inst pylib pip4 --user blah -password blahblah auto-install py-lib-lib -v 3.2 pip5 --ssl certificate.pem 漢字 installio lib-lib-py-lib-lemon 
Do you think this is a good idea? ‪Fortnite virus disguised as aim bot hits almost 100,000 players https://www.thesun.co.uk/tech/6683072/fortnite-cheat-app-hacking-attack-warning/‬
Whoohoo! I can't tell you how many different things I tried to get this working. Glad the instructions were useful. :)
This info is great. I am really intrigued by Data US, super interesting. 
No.
I usually find myself doing things like: def __init__(self, dep=None): self.dep = dep or Dependency() So in regular production use, you just let it default to whatever, but in tests you can provide the dummy dependencies. What do you think about that approach?
So are there advantages? 
/u/coleifer figured you might have some input
I'm just starting out with Python but I'm going to try and build something with Django. I've also got "Automate the Boring Stuff with Python" on hold from the local library so I'm sure I'll have some more projects while I'm working through it!
Is there any reasoning or is it just because you say so? I do everything with a text editor and cmd line, but it's just a preference. I don't see how putting a GUI over it makes it a crutch.
You are scummy enough to ask people to help you cheat?
!remindme 18 months
I will be messaging you on [**2020-01-18 17:50:52 UTC**](http://www.wolframalpha.com/input/?i=2020-01-18 17:50:52 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8ztme3/qt_for_python_available_at_pypi_qt_blog/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8ztme3/qt_for_python_available_at_pypi_qt_blog/]%0A%0ARemindMe! 18 months) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Getting a bulk email notification set up on AWS with Lambda functions. I'm building out the ability to follow people on Hacker News. Hope to work on the front end next week, and ideally ship by the end of next week.
One important non-technical difference is that PyQt is GPL/commercial only, while PySide2/Qt for Python is GPL/**LGPL**/commercial, so you're not forced to choose between paying or open sourcing your code.
Well once wrapped in a generator, you can simply go for data in generator(socket): # do stuff but to implement the generator itself, you would probably end up having the same uglyness: def generator(socket, size=512): while True: data = s.recv(size) if not data: break yield data But now you get to hide the uglier implementation, and you also only have to use it once. From there, the rest of your code is much cleaner and simpler. I'm sure such generators probably exist in some library.
Maybe you can get yourself to look into powershell.
Peewee does have built-in migration features, actually. http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#schema-migrations They are not "automatic", however, in the sense that the library does not perform a stateful diff of the existing schema and that defined by the models. You can write simple or wildly complex migration scripts using the features of the `playhouse.migrations` module. The [API docs](http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#SchemaMigrator) show you the available methods.
Cheers, always happy to help :)
Yeah, I saw that actually! Very cool! Still, my task right now is complete the product I am working on and not to build a migration library for Peewee. I think I am going to look for something that is already ready out-of-the-box possibly like https://github.com/klen/peewee_migrate
I wasn't at all suggesting you *should* build a migration library for peewee, merely that you *could*.
Unlike the scientists at Jurassic Park, I prefer not be preoccupied with what I could do! :) Kidding, point taken. Thanks for the comment and more importantly the awesome library!
You're going to have to get used to that, I assure you it will happen more often until Python 2 is no longer a viable option.
&gt; This was actually debunked by actual math PhDs so many times (I've read about 10 rebuttals just on Reddit). I, on the other hand, have heard the “x = x + 1 doesn't make sense in maths” line a fair bit, but not even a single rebuttal. I would appreciate links to a few of those rebuttals.
lmao. Sort your life out.
neither does b4, but resizing the window does the trick for me, as noted by /u/one2gov
----&gt; r/learnpython
&gt; built by the qt devs themselves 
Or skip the middle man: https://en.wikipedia.org/wiki/IDLE
LGPL instead of GPL
&gt; https://en.wikipedia.org/wiki/IDLE Or really just: https://www.anaconda.com/download/
I am honestly tired from repeating the same thing again and again. But I will again. There are no Py2 Win packages because mixing Msvcrt.dlls of different MSVC versions causes undefined behavior. Just because the snapshots existed doesn't mean they are in a working state. 
learning by project - created a GUI that let a user create a web map of travel locations. The software extracts the exif data from the pictures and store the information in a database. A user can also manually enter/edit information. There are a few options for the map like tile style, marker style, etc. The output is a map with a bunch of markers, when you click on them you see the picture, the date it was taken and the location.
IDLE is an interactive python prompt. Like you would write the line and see the result immediately. It is good for starting very early on but not the program people use to actually write the scripts that you can save and run later. IDLE is usually installed when you install python. And then it appears as a regular application icon. Or simply open your command line prompt and type python and hit enter and you will get into a similar environment What people use to actually write python is an IDE like pycharm, which will allow you to write and save and run the files 
&gt; the Win32 + Python 2.x platform Together, that's probably the least-used python platform in existence. &gt;Also I wouldn't be surprised they push back the Python 2.x EOL again. Various big-name libraries have already announced that their current versions for Python 2 will be the last, ending support for 2.x ahead of schedule. There's really no point in pushing back the 2.x window now. If Python can toss GUIDO overboard, it'll have no problem tossing 2.x.
Why did they have to " [discuss] with the PyPi people to be able to upload our wheels to their servers"? Also, would/could/will this work on mobile?
Why would you post that link? Anaconda does not include IDLE. 
This is not true. IDLE is not just the "python shell", it also has a file window to create and edit programs. Click New &gt; New File. 
Got a nice chuckle out of this XD 
Interesting. Also, hilarious. I feel like you might be able to construct some useful data using such a thing. How does the bot determine if it's a drug transaction?
Nice try police guy.
Christ I hate venmo for this very reason. Remind me to delete my venmo.
If the comments contain any of the following emojis 💉💊⛄️
They signed up for it when they used Venmo.
You can make transactions private..
http://www.vicemo.com/ has been around for a couple years so this isn't particularly new. I also think that there was some app that would cross reference the venmo pic with facebook for more details.
I’m biased towards it and I think it’s tools are better. 
Hilarious my dude. I'd add the word "gram" or "grams" to it too. By the way, how does the application support emojis? I see you had the pill emoji... does it treat it as an image or string or something?
I pasted the emoji into a string and python must recognize it's Unicode identifier.
I could see how innocent people could get swept up into the feed if they want to give their friend $5 for lunch, and put "thanks for the drugs fam" as a joke, that could definitely be bad. [Related security article](https://mashable.com/2018/07/18/venmo-public-transactions.amp/)
It's simply checking string for keywords. I think the names and profile picture is what makes it so funny/shocking. People should set their transactions to private and I'm hoping this spreads some awareness of that.
Why *wouldn't* they be?
They're probably not making wheels the normal way, so they may have needed to get some metadata right or something. The wheels are also much bigger than most wheels on PyPI - maybe they needed to bypass a file size limit that's normally applied.
I think the point though is to show people, like hey you are putting this info out there for anyone to see.
I think I have missed that as I haven’t used IDLE for very long before I discovered the wonderful features of pycharm and other text editors written specifically to write code. 
There's a setting on Venmo to make transactions private so if you choose it to be public...
emojis have unicode equivalents if you didnt know. [Here!](https://apps.timwhitlock.info/emoji/tables/unicode)
It would be nice, wouldn't it! &gt; I created an account but wasn't allowed to save edits. 
Real programmers only use gex editors. 
Think its a list of words it looks for, saw one that was 'diet coke' and I assume 'coke' was a match. 
Tweeting their names and profile pictures goes too far, I think. Yes I know - they can make their transactions private by default (but we also know that most people *probably* don't know this). It's a fun script, sure, but I'm not really sure what the end-goal is by blasting everyone personal information.
Does it really spread awareness, though? You're posting this on a technical subreddit, and your project is on Github. More often than not, the kind of people on technical subreddits and Github aren't the same folks who need to be reminded about their online footprint.
Looking through the first 50 or so it seems that almost every one is a joke, it's like the old memo line on personal checks - if I was writing a check to a buddy that was always something base and/or obscene.
Brilliant
This is TheBestThing^(TM)
Public ledger, duh
Well one could argue that you can choose to make it private. I was mortified the first time someone asked me to pay them back for the dinner we just had with venmo and it defaults to making your transaction public and you have to tell it to be something different. I am not saying people can use the "I didn't realize" excuse for every instance but public as default just seems super weird to me. 
No but the people on Twitter might
Exactly 
I've watched it a month or two, and this talk really changes my practice with library management. I DO love pipenv, and it seems now all package management in most languages have the same way to do easily and seriously. Well done, Kenneth!
This is a really shitty thing to do and borderline "It's just a prank, bro" territory. Cool bot, but you're totally exposing real people in real life with real names that may or may not because doing something illegal, but the implications make it seem like they are doing something illegal. You took no precautions for anonymity.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I'm in a weird mood... The fact that this link 404'd made me abruptly laugh hard enough to shoot a snot.
Thanks for reminding me that programming is fucking sweet.
I've got a bunch of sort-of logs from a bunch of sort-of standard processes at work, and I'm munging them all into an excel sheet using python to extract data and pandas/numpy to run some analysis. In the ideal case, this will mean that we can analyze and shave some time off of our process. (Although most of what I'm measuring here is computer time, not human time, so the answer could just be "more computers".)
~~you~~ Venmo should disable the picture feature, it's sort of borderline privacy invasion. ~~You~~ Venmo should really even ~~randomize the names.~~ remove their entire publish-by-default policy. FTFY 
Blame Venmo. They make the data available. He just formatted it. The public transaction thing is dumb. Having an API you can crawl for that info is even worse.
Exactly
Simply because you have never had to use numba/cython doesn't mean it is never used. I have achieved speed-ups on three orders of magnitude by moving from the numpy way to numba. There is no 'library built on something fast' for me to do what I wanted (a global floorplanner for integrated circuit design). 
That does not seem like a fair review. There are lots of things that don't make themselves clear by just looking at them, specially shortcut symbols. Almost all operators are like that... like what do @, |, &amp;, ^ % &lt;&lt; etc do? If your answer is that other languages have those symbols, then the answer to this is the same. There are others language like Pascal, etc that have this syntax. I think its unfair to expect that everything will make sense upon reading the code without ever having to learn anything new.
This is harmless but it's exposing the fact that there's a ton of data available that could actually be used against someone. These transactions are obviously jokes but with the API you could also take a single user's entire history and actually form a profile about them. I saw a landscaper who accepts payments from his customers with Venmo. If I was a competitor I'd use the list as a way to target my marketing at all of his clients.
Just started learning python but I want to build a simple web app using flask where I can set a timer and it speaks to me every 10 seconds and counts down the last 10 seconds. So I can interval train without having to look at a phone screen for how long is left! Currently coded a simple count down timer and struggling! 
I often wonder about this and see how many times people complain about it, specially when new changes to the language are involved (irrespective of whether those changes are liked / hated by the community). My take on this is ... Python came first, the Zen was derived later as a description of Python. Python was not designed with the Zen in mind. Thus, the Zen fails to capture Python and its essence in all its complexity. It makes a good idealistic attempt, but often falls short. Its like trying to draw a line which encloses the black part of the mandelbrot set while leaving out the white part completely... although theoretically such a boundary exists, its a practically impossible task. The Zen cannot capture everything about Python, and it would be folly to use it when the core team (who know Python and the Zen) is completely divided on a PEP.
https://mashable.com/2018/07/18/venmo-public-transactions.amp/
It depends what you mean by 'full-fledged'. A Kivy app is a genuine standalone app that runs like any other, and can be distributed via the ios store etc. However, Kivy apps don't use native widgets etc.
This is hilarious. Public info is public yo. IMO, to preserve the public service aspect, have it auto delete the tweet if the user sets their transaction record to private.
&gt; http://www.vicemo.com/ Thanks alot now my company IT guy thinks I am browsing a drug abuse website.
I wonder if any of that is because English might not be their first language.
It'd be hard to track this, you'd have to store all the users you've tweeted about and check every 24hrs or so to see if they've updated their settings. I'd be more bothered by someone storing and constantly checking up on me than anything. 
Its probably a teenager / young coder who thinks they are the best thing since John Carmack.
It's lol. If it were me I'd abbreviate the last names to make it slightly less personal. The photos are good though. FWIW I'd guess a lot of the entries are jokes. So there's your plausible deniability :-)
&gt; I'd be more bothered by someone storing and constantly checking up on me than anything. Someone who was bothered by that would set their banking transaction record to private. 
URL: www.vicemo.com/ Category: abused-drugs You and me both, probably everyone else using the same web filters too.
I disagree. Pulling a random transaction for laughs is not nearly as bad as checking up on users constantly. But, I do have all of mine set to private and only put a random emoji or letter as the description. 
That's exactly what I don't want. I want someone who listens to people, incorporates people's ideas into his/her own ideas, and delivers something that's better for the language and its future. Listening to people and doing what they want is a recipe for a mottled language. We need someone who has a vision for the language and who is ready to listen to other opinions and incorporate them into their own vision. This is what Guido did for Python... listened to everyone carefully, incorporated their opinions with his vision, and finally did what he felt was the correct thing - not what the people asked him to do. 
Mine are all for "sensual massage".
You can't delete data from the Internet. Even if OP hides it, all the other places that scraped it up will still have it. It just gives a false sense of security to hide it after the fact.
Hello DNS
And, that’s how I got into the landscaping business. 
I didn't realize that they just give away potentially personal information to anyone who can use write a script. It's crazy.
&gt; I am not sure if people who disagree understand how good this is! There are well respected core developers who don't like it... so I know that very smart and capable people who have the ability to understand it better than me/you/typical python user, do not like it. And there are other core devs who do like it. Most importantly, Guido and Tim Peters like it. I have been coding in Python for 12 years and I have missed this feature for most of that time. I am totally in love with it. This seems one of those "the dress is black/blue or gold/white". People seem to be divided at a much deeper level than what discussions can resolve.
*blockchain developer somewhere twitches*
Pretty funny. I always thought the idea of these transactions being public was really stupid. What does anyone gain from that? It's just a massive privacy problem. I actually started tipping my friend $1 on venmo every other day or so and wrote to him like we were both in an IS terrorist cell. Like here's $1 and my message is 'Inshallah brother. Soon we will put our blades to the heads of the infidels. Insha'allah we will be deserving of paradise'. His account got locked for a while and then my other friends joined in. We are all probably on some sort of list now. But yeah, I've almost always written a joke message when venmo'ing money to people so I wouldn't take these drug deals very seriously.
I think it's a good idea to point out the privacy issues on venmo. If we're able to track these transactions who is to say they won't become part of some sort of background check in the future?
I always put things like "blow job" or "huge bag of ket" as online references between mates. Always a chuckle.
&gt; started disregarding zen of python Python came first, the Zen came later. The Zen of Python tries to capture what Python is like... and not the other way around. Python is what Guido and other core devs make of it... by following their own vision. The Zen tries to capture that vision, but it is an ideal and also fails to capture those times where subjective opinion finds that some people disagree with the match of vision with the zen. I personally think the ":=" is a great feature and fits in very nicely with the Zen of Python. Its because it fits the way I think about programming and its flows very naturally for me. No seriously... I absolutely love the new := expression. There could be some reasons for that... my first language was Pascal where := is the assignment. Also, I am an applied mathematician (and full time programmer) ... so there might be some part in my mathematical training that helps me to think that := is very natural. I think Guido and Tim might have shared some of that ... which might be the reason for them liking it so much.
True Python engineer use ed
I think you are kind of a dick. Do it with real crime.
&gt; The whole point of PEP 572 is to save one line of code in some special cases by adding a whole new syntax feature. For me, the ability to assign to a variable and test the variable in an if condition really improves writability without compromising readability. When I tried writing some code like that, I found that there was a reduction in cognitive load and I really enjoyed writing code the new way. Seriously, just try typing out a few examples from the pep (not copy paste) and you might see what I am talking about. The **whole point** is not to save a lint of code. The point is to make writing code more natural and reduce cognitive load. Also, if saving a line of code was bad, we could do just with **while** loops and have no need for **for** loops.
Do you have a link to the API's documentation? I saw the GET request in your source but I want to see if they support any other requests.
Lol. If someone is stupid enough to conduct criminal activity, why on earth do you think it’s on OP to hide it for them?
The origin of grep, nice reference
I thought Venmo’s API wasn’t public anymore unless you got a token back in like 2016?
Good idea. Great way to make people realize that there is a "Privacy" feature in VenMo
I can't find any docs right now which is weird. I'm sure they support more.
It's called PayPal
Oh they're not serious at all.
Oh last initial is a good idea. Thanks
True. I'm sure many companies have downloaded the 100s of millions of transactions for their own marketing
It doesn't even need a token. Check my source code.
See, that's the thing--essentially that is making the service self-configuring, which is the opposite of what DI is supposed to be about. Fwiw I'm not an unconditional fan of DI because it breaks encapsulation and forces the client to know way too much about what the service needs to function internally. As a client to your service, much of the time I want to do data = YourService.fetch() And not have to tell your service how to live its life. Also "dependency injection" is a really stupidly pseudo technical name for something that barely deserves to have a name in the first place. It's a very Java-y thing to do.
Can I access the iOS hardware (camera etc)?
That's the kind of pattern I favor as well.
free him, free my boy guido
Honestly, PyCharm really does the trick for me. It has a lot of the autofill and suggestions that help make my coding go quite a bit faster. That being said, it does have its issues, I've had memory leaks with PyCharm before.
If you're parsing big ascii files, you're program is CPU bound and not IO bound. Binary files are 1000x faster.
I didn't mean to react to each and every whim, but people have been screaming for working threading and speed for a very very long time and very loudly. Instead, we get changes that serve to annoy the crap out of most people. pip upgrade all How the heck hard would that have been. 
writing an insane scraper to get a valuable dataset from a site. this is my first attempt at proper async requests vs my old fashion multiprocessing pool that can let me scale up the requests as needed rather than limiting to X cores
&gt; It's simply checking string for keywords. Figured this out when I saw one for "Diet coke."
I have achieved 500x speedups by optimizing numpy relative to numpy. How you write it matters. Did you use for loops and if statements? Did you use flatten vs ravel? Did you avoid making copies? Did you take advantage of searchsorted? There are problems that numba and cython are better for than numpy, but there are other problems in the same program numpy is far better for.
I think you're a piece of shit. It doesn't matter if this is public data and it doesn't matter if people have done this sort of thing before, you are being unethical. Whether you are explicit or not, you are accusing people of breaking laws, and you are doing it in a public venue. There are laws against that sort of thing. Being a highly intelligent and educated person, and being an engineer, means you don't do unethical shit, even if it is perfectly legal, even if the onus is on Venmo, you are supposed to be better than that. Fuck you.
Huh weird. Please let me know if you are able to find it.
Use a graph database. [ArangoDB](https://arangodb.com/) is quite nice. You get a web UI to manage it out of the box.
The account explicitly claims they are jokes but thank you for your feedback
Scripting some web scrapers with ebaysdk, beautifulsoup and requests. 
My favorite false positive was "Diet Coke." Or is there something I should know about? 🤔
I think you should really reconsider whether you want to participate in systematically outing people for sex work and recreational drug use, on the basis that they used a payment platform without fully understanding that their transaction would be public. A large part of the blame goes to Venmo's idiotic design, here, but by amplifying it, you are increasing the harm Venmo does.
Well from the beginning and learning aspect of it, all of it has been by myself. But I think it’d be fun to collaborate with other people to make stuff!
Thank you! I took a look at the requests link and did some of my own research on what Json and API’s are, and oh boy, I do not know what is going 😂
If you want to run that script automatically when the selection changes, you should add either a scriptJob (maya cmds) or a eventCallback (maya API) Scriptjob: import maya.cmds as cmds def foo(): print "bar" cmds.scriptJob(event=["SelectionChanged", foo]) EventCallback: import maya.OpenMaya as OpenMaya def foo(*args, **kwargs): print "bar" index = OpenMaya.MEventMessage.addEventCallback("SelectionChanged", foo) If you have any question, just let me know!
It’s a shame that the toxicity around this new PEP made Guido give up the reigns.
That's the spirit ;) It's really OK to feel lost. Take on thing at a time. Don't listen too much to people like me who say you should learn X or Y, Have fun, write lots of crappy code and learn a little something every day and you'll do great. 
&gt; The code is at: https://github.com/joel-g/venmo_tweeter https://github.com/joel-g/ar15-reddit-tweeter Guns, drugs, what else OP?????
You should purge all the old tweets with the full last names.
Do you think the people who are ACTUALLY buying sex and drugs are the ones making these transactions? I'm sure those people are writing "Uber"
Yea sure, why not??!! I'll pm you the kv code and the Python code
"weed removal" Your drug detection algorithm needs work. 
I am lost in my class of Artificial Inteligence hahaha
The check function could be enhanced, but you have to start somewhere. Those who tend to make such transactions will - I postulate - use messages that are somewhat higher context than that which you mention in your logic being lower context. Former being "fuel for my white pony" versus "giving ma homie for dat phat a$$ hookup". Rationality will dictate that if you are engaging in such behavior, you would take measures to instill a risk-averse characterization in order to minimize the objective criterion of being caught by law enforcement, e.g., covering up your tracks; but again, economics/psychology/irrational exuberance expose the fragility of human rationality (just for example); therefore, its reasonable to expect that some users will simply state "50$ for this [substance]". If you were able to compile a training set perhaps NLP/AI/ML? NSA has got to have troves of that type of data (and associated attribution) in which you'd be able to apply such prediction.
I'm not sure what that means 
For someone totally noob to licenses, you could theorically develop a pyside2 program and sell it with closed source without paying for licensing? I think I need an ELI5 on this.
I have used venmo occasionally when doing things with friends and I have never once, for the life of me, understood why I would want this stuff to be public or why I would care about anyone else's exchanges. I turned on full privacy and couldn't care less about others. What is the point of this and why does *anyone* care? Honestly, if more of my friends used something like SquareCash, I would prefer that
Poor form for down voting this guy, Python People. They're contributing to the discussion and have great points even if they start off with the wrong foot forward. To lean towards fairness, OP did ask what people thought. 
Yes as I recall it was the file size limit that needed to be bypassed/worked around. Can't find a link at the moment :/
&gt; 100% pure Python then (emphasis added) &gt; First install Python&gt;=3.6/pip, **NodeJS/npm&gt;=5.2**, and Git: ... &gt; npm start ... 
First and foremost, this is better for /r/learnpython But, you can probably build a REST API with any of the thousands of tutorials and hundreds of packages.
nice, add all the tree and leaf emojis haha
Working on it
So if I use Pyqt5 for personal projects, there is no advantage to using pyside2? 
Venmo making transactions public by default and turning payments into a fucking social network was a terrible idea from the beginning.
&gt; In a statement, Venmo is quick to point out that while the “safety and privacy of Venmo users and their information is one of our highest priorities,” when it comes to protecting this information, it’s up to each Venmo user to change their default Venmo settings and make it private. Fuck you Venmo. Your app design of 'public by default' prioritized this social mechanism as a growth hack at the expense of your customers' security &amp; privacy.
If I had to guess its California-ites who grew up in sheltered environments so the thoughts of people abusing the information doesn't cross their minds.
what's the data project for?
It boggles my mind that people who use Venmo don't immediately set their activity to private.
That was like their thing. They wanted to attract people that fancied themselves ballers and want to brag about how much money they are spending on things. How it became generally used by the public and considered a viable alternative to paypal, I have no idea.
If you are local to the Bay Area and can carve out some time on a weekday this is an opportunity to take a class from Python luminaries like Raymond Hettinger and Wesley Chun. Or stick around for talks ranging from Data Science/ML topics to popular APIs, tools, and frameworks in the Python world. I have volunteered with PyBay for all three runs so far and can answer questions if you've got em!
Yeah but no reason to make it more so. 
&gt; being an engineer, means you don't do unethical shit If only that were how the world worked. \**NSA laughs in piles of your data*\*
Licensing -- restrictions on how the software can be used/published
&gt; How it became generally used by the public and considered a viable alternative to paypal, I have no idea. especially since paypal bought them ~4 years ago
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
made me lol
thanks man, I feel a good tongue lashing is only fair when people do boneheaded shit, most people are too thin skinned to see past my saltiness, it's pretty amusing to me that a forum full of engineers are more accepting of my foul mouth and strong opinions. I'm sure this guy isn't really a piece of shit, but he should feel bad.
[Joel](https://www.linkedin.com/in/joel-g) [Guerra](https://twitter.com/joelatwar) is the author of this libel bot. [He works for Microsoft.](https://support.microsoft.com/en-us) For the lulz.
What's stupid about conducting criminal activity?
thanks man. You're a good guy, sorry I called you a piece of shit.
For some constructive criticism, as many others in this thread have already said including the names and pictures is disrespectful towards the people making these transactions, many of which are probably unaware it is public. It also doesn't add much to the project overall. Even if Venmo makes the data public, you creating this is only spreading this information further, and you should take some responsibility by removing any information that could be used to identify real people.
The fuck? California-ites?
I agree, I find it unbelievable that they are able to get away with this honestly. 
That's one sexy looking library thank you
I guess bay area-ites/LA-area-ites would be more accurate. I know because they're all around me.
There's an interesting [Reply All](https://www.gimletmedia.com/reply-all/4-follow-the-money) episode along these lines, for anyone that podcasts.
dont listen to this guy. half of the ones selected are jokes, it's more of the point being shown of the effects of public data 
Yes
Yes, like child labor or slave trade.
Username checks out
This is exactly why I noped the fuck out of that app. To be clear, not because I do a lot of drug deals, but because how fucking insane is it that people think it's fine to publish their financial transactions for everyone to see as if it's just another kind of social media? It's fucking mindboggling. 
Haha, I see what you did there.
Was it ever considered that maybe most of these are jokes? I know that I've sent money to friends on Venmo pretending it was for random items.
Kind of similar, but last I checked (years ago), it was Twitter's policy that if you store downloaded tweets from their API, you're supposed to delete tweets that are later deleted by their user. Impractical, sure, but maybe it's not unreasonable to expect some level of responsibility in exchange for getting free access to data. Still different than Venmo, though, in that their data should have never been public to begin with.
It's interesting but does seem nearly impossible. For example, in a class a couple semesters ago, I was running some python scripts to pull tweets, surprisingly Twitter has a very nice API. I would pull 10k+ at a time and then synthesize those tweets further. I likely still have the old Excel files of all the tweets. Obviously I don't use that data for any other purpose, but there's no way I'm going through a list of probably 100k unique tweets to see if they've been deleted! 
Ah so he's familiar with stealing user data and a complete disregard for user privacy.
By clone you mean alternative, right? Usually when people call their instance a clone they mean it's actually forked from the original source, like saidit.
I don't need the code as much as a screenshot of how you want it to LOOK. 
Beside standardization, what benefits does this have over directly fetching from these exchanges' websocket APIs?
Brandon Rhodes will be speaking. I saw his Pandas tutorial at Pylon in Montreal. It was great and I think anything He talked about would be interesting. 
nah man, I use these postal scales for weighing letters and shit, you know, ounces and pounds for postage.
Yes, I did things the efficient the numpy way, however for a problem at the scale I was working at, it was far better to right parallelizable numba code. 
I can't tell you how I want it to look bc I just need it to get the job done however I'll post a screenshot of how it looks
Enjoy! A lot of people don't seem to like tkinter, but it really grew on me during this project. There are some things I would do differently now looking back, but it works. Feel free to PM if you are looking for resources. 
Oh, not for portion control or jewelry? 
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Please read the sidebar.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Anyone working at a big company or government agency with lots of legacy dll's and legacy python code might need to use Windows 32-bit (because the dll's can't be re-made as 64-bit) and be stuck with 2.7. I work with plenty of Fortran code that is decades old and prohibitively expensive to replace. These people aren't typically hanging out on the internet discussing their stuff. It's a similar obscurity as the millions of people who still work with VBA every day.
I just released a new **simple GUI** that perfectly fits that kind of data entry you have. Rather than using several little input boxes you can design a simple form to collect all of the data at once. It's called PySimpleGUI (pip install pysimplegui). This code import PySimpleGUI as sg form = sg.FlexForm('Rename files in folder', auto_size_text=True, font=('Helvatica', 12)) layout = [[sg.Text('Source Folder', size=(12,1)), sg.Input(),sg.FolderBrowse()], [sg.Text('Search Pattern', size=(12,1)), sg.Input()], [sg.Text('Rename To', size=(12,1)), sg.Input()], [sg.Submit(), sg.Cancel()]] button, values = form.LayoutAndShow(layout) Produced this form [https://user-images.githubusercontent.com/13696193/42919952-6cb80060-8ae2-11e8-8277-545fb91b7e17.jpg](https://user-images.githubusercontent.com/13696193/42919952-6cb80060-8ae2-11e8-8277-545fb91b7e17.jpg) It was designed for projects just like yours. Idea is to get a nice looking GUI for minimal amount of work
I just released a new Python GUI SDK meant to allow you to build custom GUIs in **minutes**. For real... in minutes. I'm not talking just about Message Boxes or single field input forms, but rather flexible forms that don't require a lot of code to implement and use. It's based on tkinter so it doesn't need a bunch of extra packages installed, unlike other GUIs. To install `pip install PySimpleGUI` I just dashed out this little example form for another post: [https://user-images.githubusercontent.com/13696193/42919952-6cb80060-8ae2-11e8-8277-545fb91b7e17.jpg](https://user-images.githubusercontent.com/13696193/42919952-6cb80060-8ae2-11e8-8277-545fb91b7e17.jpg) Here's all of the code required to build, show, collect results.. form = sg.FlexForm('Rename files in folder', auto_size_text=True, font=('Helvatica', 12)) layout = [[sg.Text('Source Folder', size=(12,1)), sg.Input(),sg.FolderBrowse()], [sg.Text('Search Pattern', size=(12,1)), sg.Input()], [sg.Text('Rename To', size=(12,1)), sg.Input()], [sg.Submit(), sg.Cancel()]] button, values = form.LayoutAndShow(layout) There are not many choices between zero and tkinter. Jumping right to tkinter is not an easy task for a beginner.
Has a vim plugin in case you didn’t already know.
If she really is a ***beginner*** that's only 15 years old, then I don't think any of the normal GUIs are going to be particularly quick to pick up. I just released a GUI written specifically for beginners or light-weight applications. I wrote a MIDI-player with it recently so it can be used of a bit more complex tasks than collect a name and address. It's called PySimpleGUI. It will take no longer than 15 minutes to learn, honest, and even that is probably overkill. Install it using `pip install PySimpleGUI` You'll find a lot of documentation and examples on the GitHub: [https://github.com/MikeTheWatchGuy/PySimpleGUI](https://github.com/MikeTheWatchGuy/PySimpleGUI) Perhaps once one or two of these simple GUIs are built then maybe have her look at tkinter should one more level of detail be desired.
If you want to super-quickly build a GUI for your app that based on tkinter, then perhaps you should consider PySimpleGUI. It'll take you just a few minutes to be up and running, building your own custom GUIs. `pip install PySimpleGUI` Lots of documentation, example code, and screen shots at the project's GitHub: [https://github.com/MikeTheWatchGuy/PySimpleGUI](https://github.com/MikeTheWatchGuy/PySimpleGUI)
Looks visually good How do I create a board? Doesn't it support threaded comments?
I'd love to see the results!
Oh, it was more that one Dev put up a very passive aggressive thread saying bool(0.0) should not be false. He was the Russian fellow, but the bickering was a bit childish
I can't tell what depth you need in your GUI. What widgets you need and how you'll use them is probably the more important question to answer than a broad "which package". Until you have a rough sketch of your design it seems difficult to move on to choosing a platform. I just released a ***simple*** GUI package meant to bridge the gap between nothing and tkinter. It's called PySimpleGUI and may have enough features to cover your needs. If it does, then it'll be a LOT easier to learn and work with than any of the standard GUI packages. It'll take you a few minutes to mock up your GUI in PySimpleGUI, not a few hours or days. You can quickly get an idea of how to layout your GUI without committing to spending a lot of time on any one particular platform. Take a look at the docs and many examples on the GitHub at [https://github.com/MikeTheWatchGuy/PySimpleGUI](https://github.com/MikeTheWatchGuy/PySimpleGUI) To get started `pip install PySimpleGUI`
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
pretty 
Who behaved in a toxic manner? The core devs or the outside community?
Not from a non-technical view. Not sure what about the differences. 
**How do I create a board?** By clicking on the top-right corner picture, it'll give the option to "Create Board". **Doesn't it support threaded comments?** Not at a time, but I am planning on adding this feature soon. **P.S:** If you are a python developer, you may consider contributing to this project. It'll be great.
You can sell your program with LPGL source code, but you'll have to publish the LPGL source code and also any changes you made to it. It get's more compilcated, if we're talking about LPGL3. Then you'll have to provide a way for the user to swap out the LPGL3 licensed parts. More: tldrlegal.com
Python2 is dead m8. 
Python2 is dead m8
This project is basically **inspired by reddit i.e design flow, features etc.** It's still under development. So, it'll get most of the features present in reddit. At a time, only I am working on this project. That's why it's not progressing that well. If you are interested, consider contributing to this project.
looks great
It's true, but OP only talks about grabbing data.
Does it matter? The result is that he stepped down. But I kind of understand him, it must be soul-crushing when people push features which are against the spirit of the language ("no side-effects"). I hope the PEP will not go through.
Nice, have you considered writing a decorator for the components - to make it a bit more manageable; as an example (un-tested): def component(function): def wrapper(*arg,**kargs): jsx = function.__doc__ comp = function return __pragma__(("xtrans", None, "{}", "( {} )".format(jsx)) # must return function finally else NoneType object is not callable return wrapper This would simplify your react components to: @component def FormPanel(props): """ &lt;Form className="padding"&gt; &lt;FormGroup&gt; &lt;Label for="text_input"&gt;Enter new todo text:&lt;/Label&gt; &lt;Input onChange={comp.on_text_change} value={props.form_panel.text} id="text_input" placeholder="What to do?" /&gt; &lt;/FormGroup&gt; &lt;/Form&gt; """ def on_text_change(e): props.form_panel_update(e.target.value) **Note:** I changed the reference function references from `on_text_change` to `comp.on_text_change` - i couldnt figure out an easy way to modify an existing function in the decorator. 
That's an interesting point, what would you suggest OP do to fix that dependancy? As far as I can see node is just needed for webpack - /u/agentgreen420 could consider using on of the python packages that minifies and combines web assets as a replacement. As for Git - i am not aware of many projects that don't have some sort of version control system as a dependancy. Not sure what point you were aiming for - maybe you could clarify.
a [Discord](http://discord.gg) bot integrated with [RethinkDB](https://www.rethinkdb.com/docs/cookbook/python/).
You mean PEP 572? That's already been accepted and will be implemented and released in 3.8. FWIW... I absolutely love the feature, and I am sad something that makes so much sense to me (I have been programming in Python for 12 years and have missed this feature for a long time) is so hated by many others. &gt; against the spirit of the language ("no side-effects") 2 things about this. First, Python is not functional ... and I have never seen it articulated as a tenet of Python that it should not have side-effects. Second... I don't see the assignment expression as an unwanted side effect - specially when its precisely articulated about what it does. And given that this can be viewed as a side-effect, I am not sure side effects are always bad. Is there some kind of an argument that side effects are to be avoided at all costs? Speaking of side effects, a similar behaviour happens in list comprehensions [f(x) for x in range(7)] will leave x == 6 irrespective of what x used to be earlier. Now, this can be considered as a side effect of the list comprehension... or the user can simply be careful to use a different variable name in order to avoid getting it overwritten. Either way, its not really a new or taboo concept in Python.
Yes, 572. It feels to me like a C-style hack. I don't have anything against C/C++, I programmed in it for years, but imho it doesn't belong to Python. But I understand it's a matter of personal preference. &gt; tenet of Python that it should not have side-effects. It makes the code harder to comprehend, and actually doesn't bring anything. I consider it much better to do the assignment first to some good-named variable, and then do the second command in another line of code. That's the tenet of Python, that the code is easy to comprehend at the first sight. Of course, I don't say this does some major damage in this respect, but it feels to me like a small step in the wrong direction. But if it was approved already, it's probably useless to talk about it more. I just hope that python development will not continue with this philosophy of introducing new hacks. 
It's ok, most of the times, but if you have a quite large code base, that's using this particular `Dependency` it's harder to swap it with sth else, e.g. change `SendgridMailer` to `MailgunMailer`. You have to: 1. change every class, that's using this dependency, and change its `__init__` 2. track every path this deps are passed in your code Also, if your `Dependency` requires another dependency, that requires another, you have to pass many variables to the first object. With haps (and with some base classes, that are not required but helpful), your init would look like class Service: @inject def __init__(self, dep: Dependency): self.dep = dep And then you can create object either like `Service()` or `Service(dep=some_dep)`. What people often forgot, haps also manages the scope - you can decide if, on the creation of your `Service`, haps should create new `Dependency` object every time, or should create it once, and use every time.
&gt;Fwiw I'm not an unconditional fan of DI because it breaks encapsulation and forces the client to know way too much about what the service needs to function internally. As a client to your service, much of the time I want to do &gt; &gt;data = YourService.fetch() That's exactly what haps provides you. Your services still don't have to create dependencies (they are injected from "the outside"), and your client can use your service like `YourService().fetch()`, without any knowledge about its deps. And you still can (if you need) pass your services explicitly. BTW. I agree about the naming
I feel it is very pythonic and fits very naturally with the way I write programs. Often, I will write code like (pseudocode here) if (string xyz matches pattern): get the first group from the match and do x1 with that get the second group and do x2 with that When writing this code, I find that I start to write if (pattern.match(xyz)), and then realizing that I will need this again to get the groups, so I will either have to run the pattern match again, or store the result, and then, I will have to go back and refactor the code, so that I am not doing the pattern matching multiple times. This used to happen often enough that I really used to miss this feature. Then, slowly, I learnt to foresee the code and do this upfront... but not always. Often times, the code inside the if block is hazy until I actually get to writing it, and then it becomes clear that I need to go back and refactor stuff. This is a very welcome change and makes writing python programs very similar to the way I think and reason about them.
&gt; pattern.match(xyz) But not write it this way: some_fitting_variable_name = pattern.match(xyz) ...
Most of the frameworks have IoC, maybe not in such an explicit way. Look at Django - there is no need to pass DB connection to your QS or Manager if you want to change DB implementation (Postgres to MySQL?) you don't have to change anything unless you're using some specific features. To change mailer or auth, you need to create your own implementation and just swap it in config. The framework handles everything for you, and even if you can't see it at first, that's a kind of IoC. So, if you're about to use more light FW, like Falcon or bottle, IoC can help you with keeping your architecture clean.
Nothing wrong with that... but as you said, its personal preference. Initially, as I start coding up a function, I think of the code a little hazily in my mind... if (pattern.match(xyz)): g0 = pattern.match(xyz).group(0) g1 = pattern.match(xyz).group(1) As I am coding it up, I realize that I am having to match the pattern multiple times... and then I go back and refactor. match_result = pattern.match(xyz) if match_result: g0 = match_result.group(0) g1 = match_result.group(1) This is perfectly fine, but results in either having to plan for the future code upfront or having to do a minor refactor. Both of which lead to a little cognitive effort while coding. If I could simply assign the result in the if clause if (match_result := pattern.match(xyz)): g0 = match_result.group(0) g1 = match_result.group(1) this reduces the cognitive effort towards program structure and trying to guess precise details of how I will code the rest of the program and more towards a natural implementation. Again, I think its a personal preference, but I think this is a huge thing. Similarly, I know many people might disagree, but I think the indentation for block separation is a huge plus in my opinion. People can obviously ask... what's wrong with braces? Nothing at all... its a personal preference, and I love the indentation approach much much better.
Glad you found it useful!
Great suggestion! I've added it to the article. If there are any other useful links, feel free to share!
I like programming but do not get to use it every day so it doesn't come as easy for me as others. I wanted to find a way to max our my Bing Rewards quickly each day and wrote this to help. I have it running every day on my Windows 10 server so it never interrupts my day to day activities. 
Machine learning for classification. Always really impresses people and super easy. Just do something better than MNIST. Do a dashboard. You'll end up making products based on dashboards so might as well demonstrate that. Bokeh and Dash are probably the right approach. Make an automated data analysis pipeline that integrates the above two. 
Use a graph database. The scene is a little thin but libraries are available. 
He was in favor of PEP 572, so it's the opposite.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
The main feedback I would give is that you could refactor a little and replace i = 0 while (i &lt; 30): ... i = i + 1 with this: for i in range(30): ... Or even (if you aren’t too attached to that call to print in the second-to-last line): for _ in range(30): ... If you want to keep the call to print, I’d suggest rewriting it as print(f”The count is {i}.”) which uses a new feature called f-strings.
Awesome, thanks for the tips.
What python are you on? Which operating system are you using? Have you tried [ensurepip](https://docs.python.org/3/library/ensurepip.html)? Have you tried uninstalling and reinstalling python? Python installs should include pip these days. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Why is Bing rewards useful?
It costs 5,250 points for a $5 Amazon Gift Card. Maxing out my searches each day nets me 8,100 points every 30 days. Plus there are other ways to earn that do not cost money each day. Easy money to me.
I forget the link (from stackoverflow) but from my snippet: Miniconda3-latest-Windows-x86\_64.exe /InstallationType=JustMe /AddToPath=0 /RegisterPython=0 /NoRegistry=1 the detail : [https://github.com/conda/conda/issues/1977](https://github.com/conda/conda/issues/1977) 
I can't believe this has been downvoted. I found it incredibly interesting and it has made me want to get involved in data science for sport. 
&gt;FWIW... I absolutely love the feature, and I am sad something that makes so much sense to me (I have been programming in Python for 12 years and have missed this feature for a long time) is so hated by many others. I am sad that so many people (Guido too, apparently) underestimate the damage done by untrammeled side effects. I thought that he was drawing inspiration from the explosion in popularity of languages like ocaml, haskell and F#. I thought he would steal their ideas while maintaining the pragmatism which they lack, but which python is famous for. They are *mainly* popular because they provide programmers with a way to keep side effects on a tight leash, which in turn leads to more predictable, easier to understand code, which is *fantastically* important on large, complex code bases. I thought he could also see that 572 was a clear step in the direction of perl, famous its fantastic ecoystem of packages and tortuously hard to understand one liners that ultimately killed the entire language and community. The thing that bothers me the most isn't actually 572 (I think the damage can be kept limited) but the impression I now get that the delicate balance between pragmatism and purity may have been an accident of history that will one day be undone rather than part of some master plan by Guido, and that the language may be heading into the direction of perl like oblivion. &gt; Speaking of side effects, a similar behaviour happens in list comprehensions [f(x) for x in range(7)] will leave x == 6 irrespective of what x used to be earlier. There are many other examples of similar behaviour in python. Um, yeah, there are. That's an anti-feature that was rightly removed in python 3. I applaud that for exactly the same reason that I'm highly skeptical of 572.
I read this wrong and saw it as 8,100 points a day. I was like holy fuck 
That'd be nice.
You both managed to not answer my question and say things I didn't even ask about for seemingly no reason. Title says reddit "clone". Code does not seem to be a fork of reddit-archive/reddit Is it and am I mistaken or not?
And the biased marketing torward pipenv continues in blog posts, even though multiple PyPA team assurred everyone concerned on here that they don't mean to have made it "official" in the format shown.
It's by no means a clone of reddit-archive/reddit. I started this project from scratch. By saying reddit "clone", I meant that it contains most of the features and design flows of reddit. Being a python developer, I just wanted to do this project using django rather than pylons with some updated design &amp; features.
Yes, using the pyobjus module that can dynamically wrap the native apis in python. I'm not sure what its limitations are, but it can do most things. However, it can also be tricky and require some knowledge of the normal ios apis. For some things there are prewritten pythonic wrappers, such as the ones in the plyer module.
Nice! A quick google (sorry) shows it's definitely against the [terms of service,](https://www.bing.com/rewards/Tou), be careful if you have anything else attached to your bing account that might be punished. Sorry to be that guy, this is just a warning :D
This is awesome. Thanks. I'll be testing this tonight.
Nothing wrong with it. It’s just not 100% python 
Thanks for pointing that out for others. I think my next project will be to put together a list of top trending keywords from all the major news and social media sources. That way the queries will be relevant to the day and less likely to be flagged. You can also adjust the sleep time so that longer intervals per searches help prevent any flagging as well. 
Hey man, I hate pipenv as much as the next guy but it's the only *sort of official* solution. Would love to recommend something else but most other solutions are just as WIP as pipenv, have smaller communities and are less recognised. Better recommend the worse solution than no solution. Would love to recommend hatch or poetry but they've both been buggy for me. 
You should make the sleep times random. It'll make it seem more human
Great idea.
Altair looks great from what I've seen. https://www.youtube.com/watch?v=ms29ZPUKxbU is a great overview of it.
That's a really creative use for annotations. 
Focus on something that "you" find interesting and exciting to try to build. I never had any good experiences from asking people what they want me to program. If often are too massive. Google for yourself is the best option. 
The thing I don't like about Pipenv and rather the Pipfile standard is it promotes a false narrative. Pip itself does not support Pipfiles. While it does support other formats such as pyproject.toml, of all things it has no Pipfile support. I'd just add a note that even with pipenv the Pipfile should be exported to a requirements.txt before publishing a package.
I had several accounts banned for doing this exact thing but I did get some Amazon bucks. I would just have a list of random words and random timeouts and that might be ok. Running it at different times of the day might help too.
Outside community, there was a lot of resistance and backlash to PEP 572.
If you made this with selenium(it's a library to controls browsers) then you could have it run in the background
I'll check it out.
Thanks for the feedback! It doesn't need to run automatically, in fact, I would rather it didn't run until I want it to. I will keep in mind not to hard code the modelPanel, thanks for that information! I tried the supplied code and its the same issue I'm having. When I run it, it will create the new UV set but then it overwrites the current UVs by not projecting the new UVs onto the new UV channel.
Are you still using Python 2? List comps use a separate scope in Python 3, just like generator expressions.
Wait doesn’t selenium still have a window opened? Or am I missing something?
No you are able to make it run headless
How? 
PhantomJS is what I used but there are other methods like headless chrome
I don't know yet but the website has a semi outdated dataset that was recently paywalled/embargo'd for whatever reason as of a few years ago. it just seems like a valuable opportunity to get this dataset now before the site decides to take it down but thats not likely either
F-strings are life indeed, but won't work on python 3.5 so be careful when using it on scripts you plan to deploy everywhere
That’s an excellent point. I’ve the archer’s mindset and forget that not everyone will always be running the latest stable.
what the fuck are Bing rewards and why is Bing even still a thing? Congrats on your learning though.
&gt; for _ in range(30): &gt; ... You use the _ as variable name when you don't actually use the variable, right? Which would mean you'd just loop 30x.
&gt; Maxing out my searches Meaning the searches on just one account?
Correct. 
As I understand it, _ actually means that the value is discarded - Go does a similar thing. There’s no real advantage to this in Python, I believe, but if you’re not going to use the variable in the loop it signals that to anyone reading the code (and so if I were reading it, I wouldn’t spend ages hunting through the loop on a wild goose chase looking for where the variable i was being used.)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Add something like this to your script and it will run without the window. from selenium import webdriver from selenium.webdriver.chrome.options import Options options = Options() options.add_argument('--headless') driver = webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options=options)
When Bing first came out I used to punch in some random searches everyday to build up points that I would eventually cash in for 400 Xbox Live points. I guess you can get $5 Amazon gift cards now.
Thanks so much, that's a lovely compliment! I'm glad you found it inspiring :)
So, purely to satisfy my curiosity, if OP want's to make it seem more "human" by setting the sleep times to random, wouldn't he also want to restrict that randomness to between certain hours of the day to mimic human sleep patterns. i.e. don't run at all between 12:00am and 7-8 am? 
Try [Automate The Boring Stuff](https://automatetheboringstuff.com/) as a way to learn. There's a million places that teach Python, but this one is really good at showing just how useful programming can be and how much you can do with it. I personally made a lot of progress by taking on projects that interested me but seemed out of my league. 
From a documentation perspective you might want to include what Bing rewards is. And include that the script would be against their ToS.
Cool. Just a random thought for anyone reading, if you're ultimately making Excel spreadsheets, you can actually skip the CSV export/import bit and directly write to Excel with packages like openpyxl and xlsxwriter. I use these at work all the time, they're great!
Its a miracle it lasted as long as it did with Guido as BDFL and how large the Python community has become. 
What's the title of the python data analysis book?
It doesn’t officially discard it. You can always use that `_` variable again. It’s just a convention in Python to use it as a discarded/discardable variable.
what would be your python version installed on your windows machine?
I think it is a good practice to use constants rather than hard-coded strings in the code. Its easier to modify the values at one place as the code gets bigger. `for i in range(30):` e.g.: you can use a constant variable instead of '30', knowing that this value will change as per the requirements of the user.
3.7
Latest stable release is Python 3.7. f-strings have been a thing for a while, it's surprising the amount of people who've still never heard of them.
Have you tried installing it to a usb stick and seeing if it works? 
ez_setup.py module is installed??, plz check
Have you watched the GILectomy talk from Pycon 2017? The GIL is like 4 lines of code in CPython that makes a lot of things very easy. Just threading problematic. However, if you're blocking on IO rather than CPU, Python is totally chill with that, hence asyncio + friends
Yes it is. :/
I was going to suggest adding a user agent header to the requests, but now I'm thinking maybe that's not the best idea.
Duck typing, and proper usage. Like if you're talking about an app like reddit yeah you might have an authentication app that has your User model, but it literally won't care about anything else. Its only job is to provide User and authentication mechanisms. You can reuse that app all kinds of places. Then you might have a post app where people can make and comment on posts. This depends on the authentication app, but the authentication part doesn't care about posts at all, or how it gets used.
There's a lot of work in progress. And nothing is stopping you from making your own ;)
Interested in this thought as well.
I am a developer working in an automobile company, and I am in-charge of developing many internal web services and scripts. I do a lot of fun stuff :) Right now, I've been coding in `flask`, for the longest period that I can really remember. Miguel Grinberg's tutorials are a godsend. I am using `flask_login` to interface my application's services with our project management tool: Redmine. I am also using `flask_restful` to write the API endpoints. This is much more easier to read as opposed to vanilla flask. The database I'm using right now is MySQL, but I want to try out ZODB or Postgres. I'm using RabbitMQ (with `pika`, but I want to move to `celery`), ElasticSearch (parsing a lot of file formats, proprietary and ascii with python), and I am writing the user interface using Nuxt.js. My application will be deployed on a bunch of docker containers, running in a docker swarm managed across several VMWare instances. My company doesn't encourage external cloud services (yet), and we have to maintain our own servers. I'll update more later.
Before you even get into APIs, I recommend Al Sweigart's excellent resources at [Automate the Boring Stuff](https://www.automatetheboringstuff.com). He has some great [YouTube Videos](https://www.youtube.com/watch?v=1F_OgqRuSdI&amp;list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW) as well to complement the lessons, but as /u/efxhoy said, do not be scared of text based resources. Sometimes, they're better.
I think pip is not properly installed. Try the following.. Python -m pip install --upgrade pip 
I love you my friend. Do you have access to a microbit? I'd recommend getting one, or something ESP8266 or ESP32 based :) 
Have you tried `xlwings`? It is really amazing what you can do with it.
Any chance friend?
Oh man, I have been coding for 4 years now and I still do this stuff. I discovered the joys of a `setup.py` file only recently, and I will get started :) I am also doing a lot of the same things you're doing. Interesting! Writing tests before the code feels weird! TDD, eh? But `pytest` makes this so easy. What do you use for tests?
Interesting! I'm following this.
Using Google's API? How's your mileage so far?
Requirement already up-to-date: pip in c:\\users\\matthieureynier\\appdata\\local\\programs\\python\\python37\\lib\\site-packages (10.0.1)
Ah, thanks for correcting me! :-)
Related news: The TOML project [recently released v0.5.0](https://github.com/toml-lang/toml/releases/tag/v0.5.0) of their specification.
Could be that your MSVS comes with 32-bit compiler, but you installed 64-bit Python interpreter, or the other way around. Look into `sys.version` to figure out your interpreter's version. Another problem may be in that MSVS didn't install / download everything you need for compiling Python extensions. There are a bunch of Windows SDKs, service packs, build tools and other such garbage. MS has never been consistent wrt the location or the packaging of their tools, so it's hard to tell what exactly you are missing. Oh, and after installing things like MSVS and other toolkits / SDKs you need to restart your computer. Otherwise whatever they install on your computer isn't discoverable by other programs, so might do that as well. PS. You might have better luck with Anaconda, since, my understanding is, it relies on MinGW, which comes bundled with the environment.
Yes, also, humans are really bad at being random and it's really easy to write a program that identifies a random input versus non-random input. Though I'm not sure how much effort ms puts into identifying these bad actors.
Just looked it up. Interesting! We have a raspberry pi. 
If you are on some Debian derivative (sounds like it), try: sudo apt-get --reinstall install python Python 2.7 on Debian-like systems comes with pip, so that should also give you pip (back).
Software "clones" are not, generally, forks of the originals. [wikipedia screenshot](https://i.imgur.com/J8wACSL.jpg) https://en.m.wikipedia.org/wiki/Clone_(computing)#Software
Every 29,000 points is a year of free XBL Gold, so that's kinda nice.
I try to stick with the standard library when I can so I've been using unittest exclusively. It's been really nice so far so I haven't really had a reason to switch. 
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I'm not sure what's happening, but if you're willing to drop Cmd, I think prompt\_toolkit should be able to handle it: [https://python-prompt-toolkit.readthedocs.io/en/master/](https://python-prompt-toolkit.readthedocs.io/en/master/)
First, thank you for your help. I have installed 64-bit Python interpreter, and 64 for MSVS too. (I tried with 86 and 64 both installed too)
Aha. That's good to know.
You are my saviour. All it took was that one simple command with ensurepip. Thank you so much for ending my struggle.
Looks neat, few thoughts. From the example code, &gt;&gt;&gt; doc = document() &gt;&gt;&gt; doc.add(comment("This is a TOML document.")) &gt;&gt;&gt; doc.add(nl()) &gt;&gt;&gt; doc.add("title", "TOML Example") # Using doc["title"] = "TOML Example" is also possible When you call `document.add` you should consider returning `self` so you can chain operations together: &gt;&gt;&gt; doc.add(comment("Hi")).add("title", "Example Chaining") Adding one item at a time seems a little primitive too...`dict_to_toml`? Also, what if the the objects were a dot-dictionary so the items in the document could be used like TOML reads? &gt;&gt;&gt; doc['server']['host'] = 'localhost' vs. &gt;&gt;&gt; doc.server.host = 'localhost' I'll definitely be giving this a try. I'm tired of grokking JSON with `key_comment0`-style configs.
This is one of those times that good development practices seriously pay off. If you've done a good job keeping your code decoupled and you have a strong test suite then yeah, module at a time is a great idea. Considering that your team waited this long to port (and that you're asking the question) I suspect you're in for a bad year. Your strategy remains the same, but you'll need to add tests and perform the decoupling as you go.
Life is fun.
What do you mean by mileage?
That's the gist of it, yeah. LGPL still has some restrictions about your users needing to be able to get the source code for the LGPL part, and so on, but if you jump through a few hoops it is possible to use it for closed source development.
Hi all, I'm the author of this post. If anyone has any comments, I'd love to discuss. Thanks! 
When people refer to reddit, clone is usually a fork.
I had problems with Google's API. Code I wrote wouldn't work the same after month, even though nothing else had changed. I abandoned my work on the Voice Hat for the Raspberry Pi because I got frustrated with Google's API.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Using future is IMO the best way. Write code that is 2+3 compatible so you can move incrementally. Use tox to run your test suite under both interpreters. Maintain a whitelist of files that are allowed to fail in python3 so you don't backslide on new files. Start using mypy to help catch type errors, especially relating to text handling. Run it for both versions. That can go module at a time also
lol
/r/learnpython 
Weirdly enough I just discovered Bing Search rewards yesterday. I'm fairly new to Python, and I was contemplating how I might accomplish something similar. Thank you for providing such a wonderul resource. Your timing is impeccable. 
Here's an excellent post from someone migrating a large python codebase, while continuing development on it: https://medium.com/@boxed/moving-a-large-and-old-codebase-to-python3-33a5a13f8c99
Ohh! Sorry! I didn't understand what you want! In that case here is the fixed code: import maya.cmds as cmds UVSETNAME = "mySet1" FACES = "*" selectedObjects = cmds.ls(sl=True) cmds.polyUVSet(selectedObjects, create=True, uvSet=UVSETNAME) cmds.polyUVSet(cuv=True, uvSet=UVSETNAME) for selectedObject in selectedObjects: cmds.polyAutoProjection("{obj}.f[{faces}]".format(obj=selectedObject, faces=FACES), lm=0, pb=0, ibd=1, cm=0, l=2, sc=1, o=1, p=6, ps=0.2, ws=0) MC.isolateSelect("modelPanel1", aso=True)
Hey 13steinj, When you're coming up with a strategy, you need historical data for indicators. When you start streaming with LiveDataFrame, you can ask for a certain amount of historical lookback (ie: 4 hours). This gives you an immediate window into the coins traded on an exchange. If you fetch directly from the websocket API, you would have to program an architecture capable of storing historical data on disk (ie: a timeseries db), as well as storing more recent historical data in memory (ie: Redis) - otherwise you will have to wait for enough historical data to build every time you connect to the websocket. Since a lot of analysis is going to be taking place in Python / Pandas anyways, you can skip all of that architecture programming and jump right into analysis with LDF.
Get rid of SOAP?
You can also retrieve 4h of ohlcv directly using the exchanges REST API + get the update using the exchanges WS API. That being said, not all exchanges support WS so if you need WS support in your client, using such a service is the way to go
Learning scrapy and scraping websites. 
&gt; why is Bing even still a thing? Some people are lazy so they use Edge with default search engine as Bing. Other people use Bing for porn.
I'll take at those packages - thanks for letting me know!
I think the most likely way you will likely end up being flagged is because you don't actually follow any of the links. Bing almost certainly records other data points such as tracking your mouse on a page, etc. I would expect this behavior to be flagged fairly quickly, but I'm interested to see how long you can go.
+1 for operator chaining. That would lend well to the "fluent" style of programming (a term I picked up from [this issue on the Black tracker](https://github.com/ambv/black/issues/67)).
&gt; Where on God's green earth do I save the document. Does it even matter? How do I open that file from say the desktop &gt; Many just say okay download our template and then just type something along the lines of openpyxl.load_workbook('example.xlxs') If you do not supply a full (absolute) path to the file then it will be interpreted as a path relative to the current working directory (folder). This will be the directory (folder) that you called your code from. So you could either change into the Desktop folder in Powershell then run your code or you could use absolute paths when saving/loading files e.g. openpyxml.save_workbook('C:/User/Desktop') (I'm not sure on the exact location of the Desktop folder on Windows but you can fill that in.) Hope that helps.
Oh nice! I didn't know chromedriver did that. 
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I'm new to python and am in week 3 of the MIT intro class. It's tons of fun. My side project is parsing my Schwab transaction history csv files for stock options. Go pandas! 
😉
Lol I wrote a new tool in 3 and somebody at my company PORTED IT BACK to 2 so they didn't have to set up python 3 smh
I finished out an AI for working with people's names. [https://www.alphanym.com/](https://www.alphanym.com/)
The f strings are worth it alone. 
If the company is using both then you could have just made it run in both from the beginning. 
Given that the data sounds like it is relatively well defined, I think a relational database (e.g. SQLite) would be better than Mongo. I wouldn’t worry about size at this stage until you get to the 10s of millions of rows unless you’re saving a lot of columns. Definitely go with the one table approach - splitting your data between tables just makes it much harder to query and maintain. I would also be comfortable with a text file based approach (csv) depending on the application. 
Sneaky snake. I do approve.
You might consider compiling everything with Cython. It can produce C code that is compatible with all versions of python. That could reduce what needs to be ported immediately. 
I've had a bit of a play with the python arcade module but not pygame. What are people's feelings between the two?
We weren't really using either at the time, at least on our team. We definitely didn't have a large 2.7 codebase... 
Unrelated but what are being rewards?
We are working on something similar but unless you plan on paying for hosting and a web interface and protecting the code you have to encapsulate it. Msg me for more
Exactly. There are tons of places like this. Python 2 will live on for literally decades because of legacy integrations.
It really depends on what you plan on doing with that data. First of all, that's not a "large amount". You can normally chew threw a few hundred thousand lines in a second. If you're just going to do some simple count/sum/average type operation on it a simple text file will be enough. If you're planning to do more complicated operations, e.g. cross referencing with other data, you may want to use an SQL database. In that case you'd use SQL to do the heavy lifting. However if you're *just* looking for storage of sequential data plain text files (e.g. csv) will be easier. Using an SQL database to store only a single table is kind of defeating the point of using a relational database in the first place. Btw using dates as a table names sounds… ominous. If you need fast indexing and *searching* you may get faster results with different kinds of databases specifically designed for that purpose. Your problem sounds vaguely like logging. In that case you might also want to look into things like log storage. I'm sure there will be things specifically designed for that purpose. Side note: A database isn't a data structure. Data structures are more about implementation, such as lists, hash tables etc. What you're looking for is a storage solution / database management system.
I have my scripts running constantly on raspberry pi that I have at home. You can use telegram API to make it accessible for everyone. I use telegram for most of my boys.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I’m the opposite, I’ve been using them for a while and didn’t even realize they were new, I just thought I’d been missing out. Glad to know I’m not *that* slow! 
You might try /r/cscareerquestions
Thanks
Hmm that's odd. I haven't been having the issues Ur describing. Were you using the same packages as I am?
This sounds promising, especially since I use Raspberry Pies for my robot's "brains", and the chatbots do run on them very well (so long as I have not enabled speech recognition, which takes about 15 seconds +/- to process every utterance). I'll look into the Telegram API. Thanks.
I like arcade better due to less boilerplate code and is more modern. It still has some rough edges, I've been running into sounds issues with it lately, but is being addressed. I plan to stick with it. It definitely needs more contributors.
I have quite a few lists throughout the project. Would defining the list as a numpy array (they’re almost all lists of strings) make a significant difference?
Sounds like a lot of fun, good busy! Can you spare any details on the number of monthly pageviews or visitors these apps are serving. The infrastructure set-up makes it sounds like you’re serving in the 100’s of millions.
I ran a web design business for about 15 years, so hosting and web interface is a breeze - but - everything I ever did was always in stuff that ran natively on the server (PHP or ASP/VBScript) or in the browser (JavaScript) - never anything like a Python script. I'll message you for info on "encapsulating", thanks.
Not super relevant here but it's usually a good idea to wrap your code in a function for increased reusability: def main(): # your code here pass if __name__ == '__main__': main()
learning python midstride as I develop a Django website that also handles customer service ticketing. It also reads an Email box, and adds those as Tickets, in addition to taking their attachments and putting them on a CDN Python is pretty neat and I'm pretty new to it. What should I do to keep going as a Python software developer? It seems like Python is really popular for machine learning and Data Science. Is it better at processing very large heaps of data than other languages? What I've noticed about Python as opposed to say C# and PHP is that it's a fully 21st century language -- it doesn't seem burdened by it's history, so there's not need to support functional paradigms, there's no globalism, and the basic Python comes with a lot of powerful webfriendly libraries like email, imaplib, urllib etc. 
pyglet all the way! Documentation and examples aren't *too* good, but the library is. Arcade actually uses pyglet too!
Check out the [multiprocessing](https://docs.python.org/3/library/multiprocessing.html) module.
Doing some learning when I find free time and to make learning interesting I make small games, started this project long time ago, but recently found more free time so I made first version. The game I made (as I said this is just first test version, so right now there are only 9 cards) is something like Hearthstone (game with cards), and my actual inspiration was not so well known game Astral Tournament. I see that a lot of people are using different modules, but during the development I only used os (for changing the size of cmd) and configparser (working with files), later planing to use pygame for graphics (right now this is text game). Right now the game is singleplayer (I have almost 0 knowledge of modules like twisted or socket, but I am still learning so I have good hopes), there are some nice features like replay system (that is even better than Hearthstone, coz they don't have any ;) ). If you have more questions send me message coz I don't want to write the wall of text in this thread, but fell free to ask any question if you want to try the game and don't know how to play Github: https://github.com/MightyJosip/Card-Tournament (to run the game you need to download every file and folder except the installed folder; in this version there is a small bug that in main menu you can't write choose, but only c, that will be fixed tomorrow)
How about weight the likelihood of any searches in a 15 minute span at 10%, and if that hits then do them on the 20 second or whatever increments
Thank you! I was frustrated I think I realized I needed the path established but was confused. I eventually saved a file as in the idle and copied the path from the file name input section to see where it was default saving. I dropped my excel file example in there and I was able to get going. For now I'll work in that folder but how do you redirect the path for files. I have seen something about os but you need to import that first so I'm not sure if that's a full library I need to install first. Can you just use path = and set it to where your taking files?
Thanks for the tip!
You are better placed in r/learnpython ... but just to round out the discussion for now - "os" module is standard library, does not need installation, comes with python. 
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
Thanks, done.
Check out r/learnpython
An alternative to webbrowser and pyautogui would be selenium. It may be more reliable and you can run the browser in headless mode.
I only spent the whole day yesterday finally figuring all this out so I can restructure and isolate the environment in my research project. This is a great summary! Well written and really clear for motivating why one would want to use virtual environments. You make a good case for using conda as well. I think the only additional thing that would be helpful would be maybe indicating that you can export an environment.yml file to take a snapshot and duplicate your project's environment on another machine. Also, I have to admit I'm still not entirely clear what determines when you should make a new environment. I get that you should have one environment for each project, but what if you're trying to use an app or tool someone else developed in python and want to integrate it into your project. That app likely has an entirely different environment. I guess you just keep it separate and call it from your environment? I think python is great but this package management stuff is so messy for beginners. It's really easy to start coding, but just as easy to screw up everything 
Soooo, what are they?
It is actually quite an improvement! If they can reduce the input lag I might consider to switch! :-)
Systems engineering, too.
You might consider using a headless browser instead of the requests module, and make sure to set a user agent and a referrer as well. I do a lot of scraping and some of these sites are hard as hell to fool. Another option is to just get a VPN if you're already running it from home anyway.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
From what would you switch? I dont notice any input lag on the current VSCode insider...
I haven't done something of that size yet, but I'd: 1. Check dependencies on [Can I Use Python 3](https://caniusepython3.com/) before anything. If there is a package that wasn't ported to Python 3, the first thing would find a proper replacement. 2. Check points of problems (probably running `python -3` to check warnings) and use [Six](https://pythonhosted.org/six/) to port those calls to a version agnostic version. 3. Finally, move to Python 3. 4. Once the move is complete, slowly replace Six to the normal calls.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://pythonhosted.org/six/) - Previous text "Six" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20e2oravq) 
Nice news! Someone knows if this new Language server also fixes the preLoadModules feature? Right now it is not working at all.
it lives!
Is there a reason you're not using a function with default arguments? It might make more sense to the user if they see "num_searches" as an argument rather than just "for i in range(20)". I like it though!
Is there a reason you're not using a function with default arguments? It might make more sense to the user if they see "num_searches" as an argument rather than just "for i in range(20)". I like it though!
I'm a bit shamed to say that but neovim. I'm mostly working with Python and I cannot find a \*perfect\* auto completion plugin that works as good as vscode\^\^ I am also doing some JS/TS lately and there's the same problem with vim. That's the only reason though My input lag might come from the vim "emulation" layer - or not sufficient memory - or wayland - or linux in general. I am running arch which is not supported directly afaik. What OS are you running? 
We didn't. Screw you Guido. 
Beginning Programming with Python book. I'm trying to learn Python programming, any help is really appreciated
Format strings. It scans the string to print replacing {&lt;varname&gt;} with the variable provided. From the example above {i} would be replaced with the value of i at that current iteration instead of having to build the string or concatenate strings together.
Well, what would you like help with? :)
I just started this book, because I recently failed a Python programming class. I had trouble with controlled loops
Seems to be working!
Really good work here. I am thinking of implementing my first python script and this is very inspiring. thanks again
I would definitely recommend trying out `pytest` at some point. It makes writing tests so much nicer. The things I love about `pytest` are * Writing tests in top-level functions rather than being forced to use classes * Using `assert` built-in keyword rather than `self.assertEquals` * Test fixtures for test set up. Instead of having a `setUp` method, you instead define a fixture (a simple function that returns an object) and you pass it as a parameter into any test function you want. * Parameterisation for tests. If there's a test that you want to run over and over again with different parameters, there's a special fixture that lets you do just that. * Built-in `capsys` fixture let's me really easily capture stdout and test against that.
Loops are genuinely really easy. Hopefully the book will help you out, but also do a few of them in a Python interpreter if you want to get your head round them. If you have any specific questions regarding loops I'm happy to help.
The frontend is code is transpiled into JS, but it's still written in Python!
Thank you
That’s got the best titled graph I’ve seen today !
Selenium will also make it looks more like an actual user's interaction with your web requests.
The (a, b) are tuples, not lists. So you have a list of tuples. A lambda is usually just a way of defining a function, in this case, it takes an argument that you called pair (which will be one of the tuples), and you return the second value (index 1), to use as the key for the sorting. I recommend that you look up sort and see what arguments you can pass into it. The effect is that it will use the second entry of a tuple to sort the list. In fact, as you can see, it's sorted alphabetically. 
Wait wut? I’m kinda new to Python, do you mean it works on anything before it? Or, like, after?
All I need is remote interpreter support and I can switch.
I don't know numpy enough, sorry. Python lists are already really efficient, especially if use them on the end side (append and pop methods). I don't think numpy could do better at handling lists of strings, because it is designed to do something else. But I could be wrong. Just try by yourself, it shouldn't be a big waste of time. 
After. f-strings are a new feature of 3.6
Won't work on versions prior to 3.5
Oh dang, alrighty, thanks!
`int(0), int(-1)` That's a tuple, not an integer :)
OMFG, thank you! Looked at my code a gazillion times and never noted that I used a comma where I needed a colon. 
The OP probably wants the slice `word[0:-1]` (or more likely `word[1:-1]`) there.
Good to know! Thanks!! 
I've got another question for you, if you don't mind. Now that that's fixed, I'm having a problem. If the correct answer is `False`, it returns `False`. If the correct answer is `True`, it returns `None`. The part I'm not getting is that there isn't a possibility to return `None`. It must return `True`, or it must return `False`. There is no logical escape for any third option (I'm not using any `elif` statements, it's strictly `if` and `else`). Any idea what kind of witchcraft is at work here?
That did end up being what I was going for. Thanks for the help!
You're ignoring the return value of the recursive call, so it returns None by default there.
I do not understand. When it reaches the end of the recursion, it will return True or False. 
Yes, but during the recursion it just calls the function and discards the result.
In the future, this is the kind of question I suggest asking in r/learnpython, a sub geared towards questions and learning more about python. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. And best of luck programming!
Oh, I see. Hmmm, I did not know that. Thanks!
I'll just leave this here https://experiments.withgoogle.com/move-mirror
With that being the case, recursion isn't a valid solution for this problem, is it? For example, if I pass in ABCDBA, when it gets to "CD", it has no way of passing that False back up the ladder?
Arcade is more modern. Use it and let Pygame fade away.
Oh man, I was so focused on my problem I didn't realize what sub-reddit I was posting to. I definitely meant to post there. Sorry about that. Thanks!
You have to return it :)
Right. Duh. You da (wo)man! Especially since I accidentally posted this in the wrong sub-reddit. Thanks for helping even though it isn't the right sub-reddit for this kind of question.
Im on Windows and i really like working with vscode. Pycharm is also great, but just like you also write in other languages besides Python. 
No problem! The big thing I'm interested in is making sure folks know where to go for questions in the future. Everyone makes mistakes and everyone constantly learns more. Begin apart of the [10,000 for the day](https://xkcd.com/1053/) is great.
Ha, it really is.
more flexible: from selenium import webdriver from selenium.webdriver.chrome.options import Options options = Options() options.headless = True driver = webdriver.Chrome(chrome_options=options) Should work with any browser that support a headless mode. Selenium will do the work of figuring out how exactly to get the browser to start in headless mode.
I just today got confirmation at work that they'll pay for a Pycharm license so I can use a RI and I'm so happy... 1 TB of RAM and 80 threads, here I come! 
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I have a question maybe you can help with (sorry, no answer for yours). I use Python for statistical analysis and data visualization, but need to create a survey based on some simple logic that is impossible to do in survey monkey. I’m thinking I could code it (as I said, the logic is simple), but I would have to create a web interface for this so that people could respond, right? Is there some easier way to do this? Sorry if this is a stupid question!
The part that specifically confuses me is this bit: &gt;pairs.sort(key=lambda **pair**: **pair**[1]) Written as a function it would look like: &gt; def pair &gt; pair[1] In the example code, the object containing the tuples is pair**s** (with an "s"). So I assumed we are not accessing the tuples in the pairs object. Which is what confuses me. Conceptually, I understand that we are accessing the second item in the first tuple to sort by (alphabetically). But what I don't understand is **why?**.
Nice little thing: in the interactive interpreter, the underscore is set to the last returned value: &gt;&gt;&gt; 4 * 4 16 &gt;&gt;&gt; _ * 2 32 &gt;&gt;&gt; _ 32 &gt;&gt;&gt; 
It's just a shortcut to the objects `__contains__` method. So `x in y` is the same as `x.__contains__(y)`. Lists, sets, dictionaries, and custom objects all have their own method of implementing `__contains__`. 
Looks neat, and I've been meaning to check into streaming analytics. The only notes I have are that you seem to be creating classes when I would prefer tuples or namedtuple. Likewise with the collection object, is there any reason not to simply use a list?
\`--save-path=&lt;path&gt;\` ?
First of all, ML/Data Science are current buzzwords and are together much smaller than Python. Python is everywhere. If you feel like you are importing too much, stop doing it. Writing your own simple functions for small tasks is perfectly fine and don't let anyone tell you different.
I love the idea, but unfortunately the way that Transcrypt works, the jsx has to be passed into __pragma__ as a literal.
To add to this, conceptually there are at least two ways of implementing the __contains__ method. One is a brute force method of looping through the elements of the object to see if they are equal to the parameter. This is how lists or tuples are checked. It's simple to understand and may perform perfectly adequately for a objects containing a few items. However, if your object contains thousands or millions of items, it doesn't scale well as you need to check every item in the list until you find a match. The second method is being create a precomputed hash table for every element of the object. Then when a parameter is checked for presence in the object, you just compute the parameters hash, do a quick lookup, and know if it's in the object. This is how sets and dictionaries in python work. They can be enormously faster because the o(n) time is effectively almost perfectly linear whether the object has 2 items or 2 million (ignoring issues of hash collisions). If you're writing your own version in C, you'll have to pick whether to do both or just one.
My career path is exactly the kind of pathway this article details. I loved computers, but in high school a really terrible teacher teaching C++ broke me. I thought I was too dumb and could never do programming as a career. Swung towards the liberal arts in college, and eventually through some friends and connections made it in to a specialized commercial sales job. Became bored, restless, decided to learn Python on Codeacademy and from Youtube videos when I finished my work by noon each day. Automated the worst parts of my job, then was poached by a competitor to help automate their business practices. Python taught me I could build solutions for a living and actually realize my dream job. Now I'm a full stack developer and business analyst and I love my career, but I only got here because Python spoke to me. 
You forgot the `r` in front of the path. Windows paths must be raw strings. if not os.path.exists(r'C:\Users\my.name\Desktop\Python\PERatios\Data'): 
I was breathlessly singing the praises of the language today to my husband who was not convinced. Am enjoying the giant TOLD YA SO! 
/r/basic 
Tf is Bing and why is Microsoft rewarding you 
Can someone post the article? Paywalls are stupid.
There's nothing wrong with the script. It's just different from what did in the interactive session. If you did a `print (c)` in the interactive session, you'd get "here" there as well, because you never changed the value of c. The second line of the script should be `c = c.replace("e", "i", 1)`
Ah yea, of course. Thank you!
 --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Noted, with thanks.
Huh, I see. Thank you much mate.
Not a stupid question. Probably easy to do in PHP. What output do you need? Raw text, csv string...???
Mr Waffles can I pm you? Just starting Python and going back to school. Your path is very similar to my goals. 
I'm very much a beginner, and am slowly building up my knowledge. A while back on programmer humor, I saw a program that had this loading animation that was simply the slash and dash lines. But the program wrote over itself and I always wondered how he did that. Well, I'm glad to say that today I found a solution! import sys import time loading_animation = ['|', '/', '-', '\\'] loading = 0 while True: for animation in loading_animation: sys.stdout.write('\r' + animation) time.sleep(1) sys.stdout.flush() time.sleep(.1) loading += 1 if loading == 10: sys.stdout.write('\r'+'Your Program is Loaded!') sys.stdout.flush() break I'm not 100% sure what's going on here, but I finally figured out how it works! The only thing is: It works in pycharm, but if I try it in the standard IDLE, this is the output: |/-\|/-\Your Program is Loaded!' So I'm not sure why one system likes it better than the other... But, I'm working on a pomodoro timer; I'm following the [100 days of python](https://training.talkpython.fm/courses/details/100-days-of-code-in-python) course and it's the first project. Fingers crossed!
No, if someone wants to publish behind a paywall, then they don't want me to read it.
Very similar. Was in a boring mechanical engineering job and decided to go to MbA school. Learned business but also taught myself Python and some BI/data analysis. (Code Academy as well to start). Now I work at a bank doing Data science and building things like fraud detection algorithms. It’s much more exciting and fulfilling. learning python opened the way to learning so much more. 
I hand not heard he stepped down. :(
Use incognito mode.
What version of Sublime Text are you using? Also what is the OS?
The output doesn’t matter as much, anything that I can easily analyze with R or Python. I have a list of items, x1 to x34, and I want someone to *rate* then all 1-5, then order that list and have them rank the top 10 (there will likely be ties), then take those 10 and do pairwise comparisons between each (so 90 pairwise comparisons). It’s impossibly tedious to hard-“code” all potential interactions into existing software, but seems relatively straightforward logically. I just have no clue how to even GOOGLE how to make a user interface, that’s how little I know x_x
Sublime Text 3 and Windows 10. I just uninstalled Python and Sublime and then reinstalled them. 
See the first sentence [here](https://docs.python.org/3/library/struct.html#byte-order-size-and-alignment). Basically, since floats are 4 bytes, by convention they are lined up with the 4 byte boundaries. `struct` knows this and helpfully adds padding for you. To turn down `struct`'s help, use a `=`. &gt;&gt;&gt; struct.calcsize('=hf') 6 
Is the source code available anywhere?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
The command `python` was replaced with the command `py` on Windows. 
You can specify the Interpreter to use in Tools &gt; Build System &gt; New Build System... Here is an example of the format and things you can *(should)* specify: `{` `"cmd": ["C:/IntelPython3/python.exe", "-u", "$file"],` `"file_regex": "^[ ]*File \"(...*?)\", line ([0-9]*)",` `"selector": "source.python"` `}` note: / are used for all paths
That's what I've been trying. My path must be wrong. I will try again now 
&gt; They can be enormously faster because the o(n) time is effectively almost perfectly linear The complexity of a linear array search is on the order of `O(n)`, while for a hash table lookup it's `O(1)`^[1] --- [1] It can be argued that not every hash lookup is constant time. e.g. if your hashing algorithm produces lots of collisions, in the (extremely unlikely) worst case a lookup could be `O(n)`.
Use / *(forward slash)* to define the path, it's OS independent.
I feel for you. I have very little time these days for web application development, but what you're asking seems fairly straightforward and very do-able in php. I suggest you post on the subreddit for php and see who bites, you might find a few developers who could squeeze this in between jobs. Good luck!
I read once hash collisions shut down a microsoft server once. Apparently the hashing algorithm was simply the length of the string and someone made a hash table of all the zip codes in the US :). 
It now says [WinError 5] Access is denied
We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). Try a few and see what resonates. Also, if you don't have one already make sure you look for a project that interests you and start on it as soon as you can. Programming is a lot more fun if you have a goal. Come visit us in /r/learnpython if you get stuck. 
Thanks so much!
My personal recommendation would be to start by buying a raspberry pi. If you want to program in Python on a Windows machine, you have to install Python and a bunch of dependencies, and if it's your first time out it's a PITA. Get a Pi, it has built in Python support in the form of IDLE. Then grab any of the Python books, like Automate the Boring Stuff with Python, or Python Crash Course, and just start messing with stuff. Python has a nice easy learning curve, but it's very powerful. You'll get it in no time if you put a few hours into it every week. Good luck! Change the World!
Right now I can only use my macbook pro is there a good ide for that? would intellij work? 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Well, you need to install Python support. Whatever you use, that's your very first step. If you don't have a python interpreter, nothing's gonna work... I've not been Mac familiar for over a decade now, so I really don't know MacWorld anymore. I'm a Linux and Windows guy now. Windows only because I need compatibility with clients... Otherwise I'd be Linux Only :)
Yes absolutely I want to help people because I am so lucky.
qBittorrent has an API which it might be a lot easier/safer to use. Also given your example download, you may want to look into Sonarr as it already does what you're asking and probably a lot better
Thank you. I am writing it to be able to scale into something big because we plan on selling this or open sourcing it later in the future. However right now only a few dozen people are going to use it. 
PyCharm works fine for macOS. You can download Anaconda for mac, it had Python and a bunch of other packages, and then you’re good to go.
Having a look at your post history, it seems your post was downvoted and removed by a moderator. Not making any judgements on their actions, but it may have triggered a temporary ban or something else like that on your account due to low posting karma. I upvoted this post to maybe help?
I have to strongly disagree. I code in Python in Windows and Linux, and if you use Python via Anaconda/miniconda, it’s very easy to get started. Almost the same as on Linux.
Thank you for the suggestion, just having some vocabulary now is very helpful!!!
 Your EDIT2 is correct. The lambda expression written as a regular function would be like: def sort_helper(pair): return pair[1] The use of the word pair could be replaced with any variable name. It's only used inside the function/lambda to refer to whatever is passed in as the parameter. The sort function of the list passes each element, in turn, to whatever function is provided as its key parameter (our lambda function), and associates each element (pair) with the result (second item of that pair). Then it sorts those results from "least" to "greatest" and uses that order to rearrange the elements of the list.
Yup, I use Anaconda on Windows too, but you have to install Anaconda, as well as a Python environment like IDLE. Raspberry Pies come PYTHON READY. I use my Windows boxes to train up ML models with Tensorflow/Keras, etc., primarily for machine vision applications, but I would have been lost trying to set this up if I hadn't gotten my chops with the Raspberry Pi first. Disagree to your hearts content, I stand by my opinion.
Open Sublime as an Admin/ make sure you have access to the script or path Python is install under. Can't really help you here.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
This is the most wholesome comment that I've seen in quite some time. 👍 
To add to u/novel_yet_trivial's answer, an object does not necessarily need to implement `__contains__` to have `in` work. The relevant C code is [here](https://github.com/python/cpython/blob/ce75df3031c86b78311b1ad76c39c0b39d7d7424/Objects/abstract.c#L2046) and [here](https://github.com/python/cpython/blob/ce75df3031c86b78311b1ad76c39c0b39d7d7424/Objects/abstract.c#L1954), but the gist of it is if `iter(my_object)` works, then `thing in my_object` will also work. For example: class MyClass: def __init__(self): pass def __len__(self): return 3 def __getitem__(self, i): return range(3)[i] print(1 in MyClass()) Prints `True` because `MyClass` implements both `__len__` and `__getitem__`, which in turn means that we can get an iterator from an instance of `MyClass`. The implementation of `in` boils down to "try calling `__contains__` if it is implemented, otherwise get an iterator and do an O(N) search".
google python anaconda site:.edu then find a good intro python cs course posted online and run through it then transition to stuff you find here and there... those courses will hold your hand to get started with install etc
Ooh ooh! I got this. So this very contrived example is to show you how you can sort a list of tuples using a lambda function. The argument for sort is key= &lt;function goes here&gt;. If you had defined a function before, you could put it in the key part. Like: def sort_this_way(item): return item[1] pairs.sort(key=sort_this_way) Notice you are passing a function as as argument to a function. That’s because functions are objects in Python. Writing all that function definition is a lot work for something you are probably only going to use once in this context, so python lets you do it in a anonymous, kind of throw away function definition using the lambda notation. So “lambda pair: pair[1]” is a function definition. The function takes one argument (“pair” in this case) and returns the evaluation of the expression on the right of the colon. It could have also been written as “lambda item: item[1]” to mirror def sort_this_way declaration. So ultimately you are saying “sort this list of tuples using the second element as the sort key”. Notice that in the print out of pairs after the sorting, the second elements of the tuples are in alphabetical order: four, one, three, two. To generalize, sorting multidimensional data can be done by mapping each data point to a single dimension, ordering the mapped data, then print out the original data in the order that the mapped data is listed. Try this: “pairs.sort(keys=lambda pair: (pair[0]%2) + len(pair[1]) )” and see if you can verify the results by calculating the order by hand. 
Welcome to Reddit. Home of over-moderation.
This is from January
I have never heard the package repository called the “cheese shop” before. Is that really a thing, or is it an outdated reference...or is someone trolling this reporter?
I code in Python professionally on a MacBook. I have been using Sublime Text, but Visual Studio Code is also quite good and free. 
Thanks so much!
Thanks for the help that's where I'm gonna start!
I love the comment on the email that made the announcement, "Python's entrenched bureaucracy soldiers on" :-)
But it should change it to JavaScript because of Node.js. Everything attributed to Python for the success is better served with JavaScript. I also forgot this is r/python.
&gt; I know Python is implemented in C The reference implementation is in C but there are others in Java and .Net.
Here are more government datasets/databases downloads PubMed Download https://www.nlm.nih.gov/databases/download/pubmed_medline.html ToxMap Download https://toxmap.nlm.nih.gov/toxmap/download.html Blast DB download ftp://ftp.ncbi.nlm.nih.gov/blast/db/
Would you say the $200 for Codecademy's Python course is worth it? 
It was the original(?) name of PyPI. https://wiki.python.org/moin/CheeseShop
&gt;***Everything*** attributed to Python for the success is better served with JavaScript. In your opinion, maybe. At minimum, I haven't remotely seen the statistics field rally around JS, nor the build system world, nor the sysadmin world, ... Not to bash JS, but with Python you get: - Huge standard library that includes a lot of stuff you'd normally need to manually install. - Enormous community. - A nice language with a rich runtime introspection system that doesn't have JavaScript's...weirdness. 
Does this mean that I can have direct connection between C# and Python or between Java and Python? If I can write Java and Python "together", does that mean that on some extent I can write Python and Clojure together? 
Ehhhmmm ... I was always wondering what a business analyst is? Could you educate me? And what is the difference between a programmer and a full-stack programmer?
"the cheese shop" is the proper name for the thing everyone calls "PyPI". :-)
I think the spirit of the post is that for this person Python made sense and encouraged them to pursue development on their own. What language you enjoy is very subjective. For me there are several languages I like better than other depending on the type of task I'm doing. 
wait for it to be on sale for ~$10, it happens
I recommend sentdex, TheNewBoston and Corey Schafer on Youtube and Python Crash Course book.You should write projects about things that you like.Otherwise, it can be difficult and boring, i think.
Very similar to you. I was always fascinated by computers, and as a kid I spent more time fiddling with (and sometimes breaking) my laptop than anything else. I was also scared off by a terrible Java teacher and decided to go into a finance major instead. After school I got a job in corporate finance and ended up hating it. Despite this my first “language” was VBA, automating spreadsheets and such, eventually creating a Frankenstein’s monsterish forecasting Excel plug-in. Afterward I started experimenting with this cool new language that my boss encouraged me to look into, Python. I ended up loving it and eventually found a job as a business analyst at an analytics/consulting firm with my combination of SQL and Python experience. I now write analytical software for ETL processes, report generation, and just general businessey-stuff automation. I’m planning on trying for a MS in CS soon.
Would you mind sharing what tutorials/projects you did to ramp up? I’ve just finished the Codecademy course and have no clue where to go from here nor what to build to showcase my eventual skillset. 
But in JS you get weak types so you have to double check everything! And you get callback hell! And clunky synchronous implementation! JS is fast though, which is nice. I occasionally think about how great things would be if browsers went with python rather than javascript. Having Google, MS, Apple, and Mozilla all pouring resources into a faster interpreter would make a huge difference.
https://www.github.com/microsoft/vscode
https://github.com/Microsoft/vscode-python
I'd see how far you can get with e.g. http://pythontutor.com first!
I switched majors after the first year of CS because I spent endless hours in the stupid computer lab trying to get the java compiler to work. It was so bug ridden that simply deleting and adding a semicolon would somehow make your computer work. I got so depressed after not seeing my friends or the light of day for days on end, that I switched to engineering instead. It's only now that I'm realizing that I really do love programming, and am getting into Python. I wish younger me would've had the resources that are available now. 
Depends on who you talk to, but a Business Analyst is sort of like a wingman to a CEO / high-level managers who shows them how the business is performing based upon metrics that they discover are important. In good companies, the analysts/data scientists agree upon what factors decide the business's growth, but in shitty ones, the managers just tell analysts what to do and don't really want to listen. Now a programmer is anyone who writes code for a living. He could be a person who writes server code, and those usually code in Python using `Flask` or `Django`, or he could be using `Ruby on Rails`. Other programmers develop code for hardware, or they're called `Embedded Software Developers`, these code in C or Java or any other low-level languages. Some even code in Assembly. Then you have web developers who write the interfaces you use every day. They are sort of overlapping with desktop application developers these days because of how the `Electron` framework is gaining popularity. A Full Stack Developer again means many things to many companies. Some companies, bad ones, hire a single developer to do a bunch of work, both on the front and the back end. This developer is expected to both write the interface that the users will use, and the server side code that enables the interface to work the way it does. Other companies use this way of coding as a way of building a team that knows how different components of an application works. The Full Stack Devs in this scenario are specialized, they are doing this because they want to learn both ends of the application. It's a fun field to be in. I do Full Stack work, but I enjoy the server side of the code more than the client side. Mostly because I can't center a `div` to save my life.
Use Unity.
https://nofile.io/f/0sDM0CnRG8T/Python+has+brought+computer+programming+to+a+vast+new+audience+-+Programming+languages.pdf 
&gt;To add to this, conceptually there are at least two ways of implementing the I know you said "at least", but really there's an almost unlimited number of ways. The most basic is a linear scan, but there are numerous more efficient ways for various data structures, and hashtables aren't particularly special in any respect other than they're commonly used and builtin to python. Eg. other data structures are things like: - sorted binary trees. Eg. red-black trees or AVL trees. Here the data is inserted and maintained such that everything in the left branch is lower than the right branch, so you can just compare to see which half of the tree must contain your item, resulting in O(log n) search (but some complexities in *keeping* this property efficiently, without the tree becoming unbalanced). - Other trees. Eg. B-trees, with multiple subtrees at each branch, rather than just left/right nodes. - Stuff like skip lists, where layered jumps through the list again allow O(log n) search times. - Tries, where partial prefixes of the items index it at each layer. - Even just something like a sorted list that searches using binary search. - There's even probabilistic stuff like bloom filters that can check for membership efficiently, but may also count some things as members that were not added. Really, there are *hundreds* of potential ways to store and find data, often each having many variants that change the details. Which is best can depend on the exact use-case. For python, you'll usually use dicts or lists, but this is really just because those happen to be the efficient builtin datastructures provided. There do exist libraries with other datastructures too though. &gt;They can be enormously faster because the o(n) time is effectively almost perfectly linear whether the object has 2 items or 2 million (ignoring issues of hash collisions). Nitpick: you mean O(1) (**constant** time) here, not O(n) / linear. Linear/O(n) means time proportionate to the input size, which is what you'll get using lists (ie. compare with each of the n items). Dicts are constant time (in the average case), which means it takes around the same time regardless of how big/small the dict is. (There's also things in-between these - for example, many of those I gave above are are *logarithmic* time: ie proportional to the log of the input size)
...this isn't how reddit works at all and to be perfectly honest I am beyond surprised that people on this subreddit can't bother to look up simple things like reddit bans. This is literally just a case of his browser or the reddit redesign being absolutely shit. Can't tell which is causing it though.
There's actually a class of DOS attack based on deliberately generating a bunch of strings that hash the same, and submitting these as input somewhere that means they'll get put into a hashtable (which will thus be slowed down to linear performance). This is why python actually randomly permutes the hash of stuff like strings each startup (so eg. "hash('foo')" may give a different value each time you restart python), so that the hashes can't be externally predicted.
Yes. If you use Jython (for Java) or IronPython (for .NET), you can pretty directly use java/.Net classes from python (though conversely, you do lose interoperability with C modules compiled for CPython)
Hmmm... well it seems several others might benefit from this exchange so I'll keep it public. Warning: This might be a bit lengthy. I'm going back to school for the first time in a couple decades and I've decided to pursue CS. That's kind of a lie though. I'm actually in a state of perpetually trying to teach myself Python. I think I might have ADD? It's because I'm an artist? I have a million of these reasons. Then I fell into project management and consulting a few years ago. First its just large building projects or revising practices but all my background is interpersonal so I did great on that but had a learning curve on logistical side of things. Now I find my clients needing to come up with technical solutions to automate, maintain procedures, etc because so much time and $ is wasted paying people to clean up their own messes. I was successful to a point but couldn't really take it to the next level. I tried to be slick and use workarounds like Google DataStudio for no-code dashboards, stuff that let me avoid just learning to code. If I'm honest it just feels like I've tried every shortcut and backdoor besides just learning when I just need to gain the skills so I can create cool shit. Some things worked and I'm proud but between me and myself, If I sound frustrated it's because it's true. I've flirted with learning to code for so long that I feel like it's become a strength in a weird way. I've been able to watch tools be developed all these years where when I was in HS, Python was an infant. Now I have AI at my fingertips if I get bored and learn to use it. So that's pretty epic. I also have been able to build a mental conception of code from watching a million videos. I need to kinda just learn the syntax and the tool-sets. I certainly don't feel as blind as when I started. Finally I know it's Python I want to learn. I thought it was Ruby on Rails at first. Then JS. I've learned what Python is and how versatile it can be. It reminds me of who I hope to be (corny af). I finally had a heart to heart with myself a few weeks ago and asked what it is that I want. Here's what I came up with: I want to be able to walk into any size business in my town that needs to modernize and be able to analyze data sets (sales, whatever) into making data driven decisions that make me look like a goddamn wizard. I want to have the ability to use python to make custom solutions from small scripts to apps. So much is already done with Salesforce and eCommerce platforms that really its knowing how to take what already exists and fashion it in a way that's relevant to a use-case. I want like 20 of these scenarios (doable in my town) so I have some halfway passive income with the potential to build a full on company beyond just myself. I want to be The Keymaker for my city. I'm sending myself to school so I'm responsible to a schedule and I'm actually pretty excited to go. I've registered as a CS major but I want to minor in Bus. I don't know if that's smart but I want to learn both. Turn's out that the school doesn't offer Python so I'm still gonna just have to learn it. The environment would be super helpful though I think. Ok, if you came this far then no I love you more. My main concerns/questions that I'd love anyones take on: 1. Is CS the right move for me? Should I be choosing a different degree? I don't mind the math although I know it will be hard but is it relevant? Should I be more on some data analysis track? Information Systems or something like that? 2. School vs no school? I have grants for now so I'm not out of pocket. I think it will help me to have the structure and will lend confidence to clients if they see I have a degree. I also know that in many cases a portfolio &gt; degree. However, I've found out that they don't teach Python so I will still have to self teach. :/ Basically school is for the momentum and credibility? And knowledge? And girls? wait wut? Thoughts? 3. Python? Have I made this into a monster in my head that's way less intimidating in reality? Advice? 4. Freelance or gain employment? tl;dr - Here's my whole life pls tell me how to live it. I kid I kid! Just looking for another perspective/s. Any input or personal experiences that you all feel like sharing is welcomed. 
+1 for Sublime Text. JupyterLab is also quite decent, although it still needs some more improvements imo before I’ll transition fulltime to it.
I see. Thanks for the clarification!
Tips on learning Python + SQL and what is it that's pushing you towards CS if you don't mind me asking? That's pretty much what I'm about to take on. o.O
Learn Tkinter for client's needs. Discover ttk themes controlling button display. Can you just revert to Tkinter buttons? NO! MAKE TTK ./DO. Successfully make ttk do after 9 hours. Discover bar decorated by WM also controls appearance of the max/min/close buttons. Can you just... be okay with that? After you spent 9 hours making a fucking -different looking- button? NO! OVERRIDEREDIRECT(1). And now ye got yerself a couple days of discovering what is documented correctly and what part of themes every (mainstream) source of documentation seems to ignore. You probably had that just by virtue of using ttk; you almost certainly get it if you override. But yeah, fuck CSS.
Sing the praises over this way to the noob?
Okay, thanks my eyes completely skipped over the ```Byte Order, Size, and Alignment``` section to go right for the chart with the character reference. And if I run into any more questions I'll ask on /r/learnpython.
pygame is post modern Don't believe all the outdated Arcade propaganda(gosh, that guy sure does spend a lot of time bashing pygame). That library uses an old deprecated graphics API, and that weird ctypes abomination underneath(in 2007 that might have been an ok idea). 'Modern OpenGL' is deprecated. With pygame, we use post modern graphics systems like Metal and Vulkan.
[removed]
Eh, apples and oranges. Its not what a language is possible but what it makes easy. The scientific and mathematical modelling libraries in Python make it the lingua franca for this field whereas Javascript really is the language of the web. Whereas (this is just my experience) writing a simple server that accesses a DB and serves the database is much much easier in NodeJS but for anything to do with data analysis or the odd IoT application, Python for sure. 
I think you mean that `x in y` is the same as `y.__contains__(x)` rather than `x.__contains__(y)`
OK, you are getting there... sort of. The thing is, the programmer who created the project must have never compiled it with Microsoft's compiler. Or at least, not with this specific version. The problem is a typical C kind of mistake: it happens when someone uses a variable of type, say, `unsigned long` and then does something with it that implies that it can be negative (in this case, unary minus). The result of such procedure is what's called "undefined behavior". Sometimes, programmers know what kind of code the compiler is going to generate in such cases, so they do it anyways (but mostly it's just an oversight). Some compilers, depending on compilation settings can be more lenient about such things than others. Apparently, the compiler the author of the package used to compile his / her code was OK with this. What can you do? -- write to the authors of the package and tell them there's a problem. Maybe you can also get them to produce a newer version of the package that compiles on Windows. Otherwise, you can fork their project (if it exists on GitHub for example, you can simply checkout the source code locally) and edit the source of `_proj.c` to get it to compile with VCC.
Do you use python 3 now?
Found a solution. After getting the (fpr, tpr) values from sklearn.metrics.roc_curve, I chose a fixed set of FPRs along the X-axis. Then, I got the corresponding TPRs (Y-axis) using np.interp and the fpr tpr values. Now that I had the same no. of points in each ROC curve, I averaged them using np.mean. Now I have only one curve. 
I use Intellij at work but it is too bloated. What hardware specs do you have?
Very nice improvements
Haha I love PyQt for how easy it is to write GUI in it, and I've thankfully never had to write anything in tkinter. 
What that link doesn't explain is *why* PyPI was nicknamed "the cheese shop": when it started, PyPI didn't actually host any packages, just provide a centralised index of links to places where you *could* download packages... much as the shop in the sketch doesn't have any cheese! Since then PyPI has become more centralised, `pip` was developed and became the normal way of downloading packages, and so the name no longer makes much sense. But it used to!
Google forms. 
Focus on being able to pick up languages and frameworks quickly than focusing on which one. If you’re married to a tool, you’ll inevitably be left behind when the new hotness comes out. I don’t know how much experience you have but at my current job we use at least 3 different languages for various tasks with at least 5 different frameworks. This isn’t even remotely diverse, either — a company like Facebook can utilize something like a hundred different languages, libraries, and frameworks. Learn what approach is best for each task, and how to see through the hype, pick which one has the right amount of “community support” for your current project in its current timeframe — these are more on the business management side than any programming skill. You’ll stick to one language eventually, but you’ll find it in the opposite direction — you’ll find what field you like to work in best, and you’ll pick up the most appropriate language and toolset from there, not the other way around. 
&gt; Prints True because MyClass implements both `__len__` and `__getitem__`, which in turn means that we can get an iterator from an instance of MyClass. For what it's worth, I've never seen that fallback be of any use and it has burned me several times, I hate it. Basically, if you implement a map-like construct you *have* to implement `__iter__` or some bit of code will at one point hit that fallback and try to call `__getitem__(0)` which likely will blow up.
I would use Redis.
The language is like crack. I'm entering my 4th year in a CS major and I barely did any coding in my free time outside of school and some paid courses all the way to 2nd year of university. Like, I felt like I had the skillset to program and liked the theoretical aspects of CS so I majored in it, but never felt that "fire" to just write actual code. Then I discovered python... Everything I hated about C# and Java just suddenly vanished. Now I write around 500-800 lines of code for hobby projects like discord bots every day out of sheer enjoyment. It's just great. Kids should be taught some python first, not c++ just so they could see that coding doesn't have to be messy. I fully agree with the fundamentals and bad habits arguments, but the approachability... 
Using a Dell 5520 / Ubuntu 18. No problem here with intellij or pycharm. That said, vscode is a fine editor as well. I can't make a definite decision between pycharm or vscode now.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Choosing the right library makes all the difference. I actually use tensorflow and mxnet (mostly mxnet) for any and all linear algebra calculations. In fact you can do many other kinds of calculations too using the big machine learning libraries. Calculations get offloaded to the GPU without me having to drop down to lower level languages. That said, you're right, there can be gains made, but often not much. The biggest problem is people writing poor code to begin with or not understanding their libraries well. Often numpy has many specific optimised functions for tasks that people don't use because they don't know the library well enough to know it even exists. So many gains can be made by just using the right library properly, and then dropping down to more low level stuff is almost always unnecessary. By the way, if you need numba, look at using mxnet instead. I find it faster for the types of calculations people typically resort to numba for. Those libraries are so much more capable than just neural nets if you know how the math works. 
Is this legit?
I'm not sure about the particular case of Sanic, but Python has ways to share memory between processes: [https://docs.python.org/3.7/library/multiprocessing.html#sharing-state-between-processes](https://docs.python.org/3.7/library/multiprocessing.html#sharing-state-between-processes) But like they say in the docs: "when doing concurrent programming it is usually best to avoid using shared state as far as possible"
The problem is that people won't. Depending on your background you'll see one or the other as more common if you work in lots of different languages. Camel case is by the most dominant style in all the languages I use so I tend to use it. I see it more. Im just more comfortable with it. Heck, I even just hate how snake case looks. I find typing the underscore a wasted keystroke which breaks my hands from their standard position thus slowing me down. So it might be easier for a person who only ever does python if everybody in the python world adopted it, but it might be much harder for somebody who mostly deals with the other convention and mostly works in other languages. See? There just isn't a good reason to choose one over the other. The only thing that matters is consistency. 
albeit generating csv can't hurt much, especially if a future random caprice of boss may cause such a demand if I already had csv generation implemented, I'll sure keep that as option too
Yes
Great story. How long did it take you to gain the confidence to know that you could work somewhere else and succeed?
returns : **NameError** Traceback (most recent call last) **&lt;ipython-input-20-46604cc5a421&gt;** in &lt;module&gt;**()** 1 **# segrigating &lt;html&gt; tags from sentence** 2 **import** string **----&gt; 3** low\_df**\['Text'\]=**final\_d**f\['Text'\]**.s**t**r.low**er**() 4 pri**nt('#Checking words in lower caps or not**') 5 pri**n**t(lower\_**df\['Text'**\].h**ead**()) **NameError**: name 'low\_df' is not defined it was working sometime ago 
I'm running a Carbon X1 G5 with Arch - I have no problem with intellij or pycharm ;-) It's just that the UI is quite overloaded and distracting in my opinion!
There's no answer to that. Try to write an OS from scratch using Python. Try to do webdev using Assembly only. Apples and bears, my man.
Strange... I find them pretty similar UI-wise (files on the left, code on the right, shell &amp; logs at bottom). The one thing keeping me on pycharm is the slightly better completion/intellisense. And the one thing that calls me to vscode is the better support for other languages (using pycharm CE, not full version).
I would suggest that next time you find a bug in open source, instead of submitting an issue pull the repo and do your best to find the problem yourself. Sure it might be hard and you may even give up but eventually you'll find one you can fix and you'll have your first pull request! If you do give up, be descriptive with what you did to try to find the problem. I find developers will reply with full details on what they had to do to fix it and you can learn from that. I did this with bugs but you can do the same with adding features. I just like bug smashing better. 😉
Of all the languages I’ve tried python is the best and only language I’ve tried
Maybe I am doing it wrong. If anyone wants to do it through Team Viewer that would be great.
I have adapted my vscode to look a lot cleaner :-) Here's a comparison between my neovim setup and vscode: [https://imgur.com/a/RKmQ68h](https://imgur.com/a/RKmQ68h) But the input lag on the vscode side keeps me from switching. I use it for TS and JS from time to time and actually really like the huge variety in support. Quite unfortunate that it is so resource heavy
What do you program with python 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Oh I see... Zen mode :) Never used neovim, might give it a try.
I also miss FZF in vscode\^\^
Sort of - my configuration just disables everything ;) neovim is great but lacks a decent UI, I love font ligatures and you just cannot get them working unless you are using iTerm2 on a Mac (which I will never own)
Did you already have a dataframe called `lowerdf`? Very limited context above. Please also look up how to format code for this subreddit (hint: switch to markdown editor and indent everything four spaces). Like This
&gt; will lend confidence to clients if they see I have a degree. Actually, it won't. Employers, maybe... but when it comes to clients your degree is irrelevant. In fact, you don't even need to know how to code. Getting clients is a whole different skill set. It's more sales and marketing than anything else. I learnt that lesson the hard way. If your goal is to serve clients, focus on understanding their needs. Then, build solutions they can use or solutions you can use for them. If I were you, I'd start talking to people who own businesses. But... If you're not sure, I'd say employment might be a better option. In that case, staying in school would work better. That's because freelancing is more of knowing how to sell yourself than anything else. When you can do that, you're much better of finding clients and then employing others/outsourcing. However, that doesn't seem to be your goal. Plus, it's a rocky road, not everyone is willing to go through the initial struggle. 
Yep, I've been trolled. Sorry about that comment, I probably shouldn't write it)
&gt; I would suggest that next time you find a bug in open source, instead of submitting an issue pull the repo and do your best to find the problem yourself. Totally agree, but you should still report the issue first in order to find out if it's really an issue or maybe just a misunderstanding. 
I use python mainly to web scrape, to organise folders and automate tasks such as excel etc
Take MIT 6.001x. It's free and better.
Your downstream bandwidth has no bearing on theirs servers/CDN upstream bandwidth...
I recommend [Miniconda](https://conda.io/miniconda.html). Exact same thing, except it doesn't download all the [included packages](https://docs.anaconda.com/anaconda/packages/py3.6_win-64). Makes for a much faster download, and then you only download the packages you need.
Not very long. I think we're all just always learning and never know when we're ready for anything. Better to just take on a project and figure it out! Originally, I was hired just to be a business analyst since I knew the business and was technically literate. But once I got to the new position I had enough down time in between requirements gathering and coordinating with the development team that I could build my own projects.
Yep!
Language is just a tool
You need a project! The only tutorial you need is the Python docs. Think of something you know super well! For me, it was our company's price rater. So I just built it in Python using Django. I would recommend if there's some Excel spreadsheet somewhere that your company uses as primary business tool, recreate it it as a webapp for your first project.
Like most titles it depends on your employer. Generally, a BA is someone who knows the business side of the firm and can act as a liaison between the business customers (the revenue side like sales, marketing, etc.) and the IT developers. Depending on your employer technical skill varies. We have some BAs with little to no technical skill, and some like me who can also perform full stack development work when needed. The non-technical BAs are SUPER important. Most problems are political not technical.
So i first fork it, then clone the repo and look for the bug after that i create a pull request right? Can you please also guide me how much time i should spent on reading documentation? What are some of the great entey python projects. Thanks man!
Does creating an issue is contributing to project? What exactly is a contribution?
Amen fuck CSS.
&gt; Visual Studio has long been recognized for the quality of its IntelliSense (code analysis and suggestions) across all languages Quite explains why I bought the resharper plugin from jetbrains. It's not like C# tools are important to Microsoft, so it's completely fine to let a 3rd party take over.
Fixed it. Thanks for the help :)
Thank you.
Or alternatively, if someone wants to publish behind a paywall, then they want their readers to pay to read their work...
I've got another problem where when I run some code (ctrl+b) and it asks for an input, when I input the data it does nothing. It's not my code which is an issue as it works fine in Pycharm and regular python ide.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
That's great news but I'm not sure it can beat PyCharm yet, for what I'm reading. Maybe in 5 more years, microsoft!
Oh, you're just a cunt that plays on their username. How cool is that! 
It might be worth trying deluge, they have a headless version. I can't recommend transmission though, it's very easy to get it into a weird state, and it doesn't seem to recover well if you delete its files (something Azuerus used to be good at). - no idea if deluge is better here though.
Thanks I’ll check it out!
Back then. Node.js didn't exist or not as popular. My statement is still very correct.
This is typically where multi threading would be useful
Is there a sample implementation or example of that?
&gt;My statement is still very correct. As you said, this is r/python. Without any supporting evidence, you look more like an egocentric agitator than someone trying to make a viable point. What specifically makes node.js better, other than "everything attributed to Python"?
If you are really lazy you can just open up another terminal window and run it there, otherwise you can merge the two scripts and give each its own thread. read more here: [https://stackoverflow.com/questions/2846653/how-to-use-threading-in-python](https://stackoverflow.com/questions/2846653/how-to-use-threading-in-python)
Oops! I meant to post about 3.4.9rc1. I'll delete this redundant one if I can.
&gt; In your opinion, maybe. At minimum, I haven't remotely seen the statistics field rally around JS, nor the build system world, nor the sysadmin world, ... Don't forget AI/ML. Python is on its way to dominating in those fields.
Got the right version this time, posted about 3.4.8rc1 earlier today :S
Udemy "python mega course build 10 projects" is fantastic 
If you are shipping a commercial game in Python, use renpy like everyone else. If you aren't writing the sort of game that lends itself well to renpy, strongly consider Unity engine.
I'm slowly trying to do the same thing. I moved into a dat analyst role (mostly excel right now) but want to automate our clunky practices. I always did well in school, except for math (and felt a lot of that had to do with teaching quality). How do you convince yourself you're not "too dumb" for any of this? 
I think multiprocessing suits best here https://pymotw.com/2/multiprocessing/basics.html
It's Python for Data Analysis by the creator of Pandas
You probably have PyCharm pointed to another Python executable or environment.
Yes! Creating good bug reports (or issues) is absolutely a contribution! There's all kinds of resources on how to write a good bug report out there. Writing documentation is also a great way to contribute to a project, without having to figure out how the code works from the beginning. 
Long time Go, Node, C, front end etc.. dev here. I was inspired to learn Python after realizing the depth of the libraries available and meeting some folks doing amazing things with Python: [https://blog.parse.ly/post/7408/introducing-currents-a-view-of-1-billion-peoples-attention/](https://blog.parse.ly/post/7408/introducing-currents-a-view-of-1-billion-peoples-attention/). I'm learning by rewriting an activity logging and tracking engine that runs r/https://worldfit.org, a non-profit that connects olympians with middle school kids to inspire them to participate in 6 week exercise programs. So far I've used 3.7, Tornado, SQLAlchemy to model my data and set up some of my basic api endpoints. My next foray will to set up proper environments (I'm going to try poetry first), CI, and deployment triggered by commits to master/tags on the repo. After some fumbling around with installing way too many pythons into my environment, it has been a delightful experience. My favorite bits so far are the various ways variables can be passed into functions, the way in which running processes update as files are saved, the simple object mode, clean syntax and the mix of rigor and humor that I've found in much of the community. There are still a ton of things I don't fully understand. I'm excited to learn them. Thinking back, the article that sealed the deal for me by simply jamming too many interesting things into my thoughts for me to ignore was this one: [https://www.ibm.com/developerworks/community/blogs/jfp/entry/How\_To\_Compute\_Mandelbrodt\_Set\_Quickly?lang=en](https://www.ibm.com/developerworks/community/blogs/jfp/entry/How_To_Compute_Mandelbrodt_Set_Quickly?lang=en). Looking forward to diving into many of these concepts once I get the World Fit port into production and keep it up for a few months. Thanks to all who put so much into the Python community! 
Does C++ have to be messy ?
I see - thank you!
Lol about the div ... thanks for the explanation, makes sense to some degree. I guess when I hear stack, I think about a network stack, but the front-end / back-end categories make sense!
Wow. I had no idea Python was getting that big. I mostly start new projects in Go now that Py2 has been EOL'ed. Now I'm hoping I'm ahead of the curve and not the fifth Beatle… I love me a punny Economist article. "Biggus uptickus" indeed :D 
sounds just like me. now I'm working a lot in Java and really miss doing strictly Python, its' syntax is perfect! glad you found something you like! 
Ok sweet that sounds good. I think I will go with the text file based approach as I won't need to query more than one day's worth of data at a time for the most part. It will be accumulating roughly 60 million rows a year all total (300,000 per day). 
Hey! My advice is to find active projects that you use (or want to use), then take this exact same question to their IRC or other channel. Let's say, for example, you really like Tornado. You can find how active the project is by looking at how many commits were made to the repos: [https://github.com/tornadoweb/tornado/commits/master](https://github.com/tornadoweb/tornado/commits/master) Great! Lots of activity! Then I recommend taking the time to read the open issues: [https://github.com/tornadoweb/tornado/issues](https://github.com/tornadoweb/tornado/issues) and the conversation that is happening under them. If you have ideas of how you'd like to address these problems \_don't be afraid to comment\_. So long as you are respectful to everyone and put forth honest solutions you are doing it right. A good community will rally around any energy put toward improvement and help catch you up with details you may not see. Also, read and engage on other venues for the community. Most have links from their docs/homepage like these: [http://www.tornadoweb.org/en/stable/#discussion-and-support](http://www.tornadoweb.org/en/stable/#discussion-and-support) Then pick up on fork, branch, commit, PR mechanics discussed in the other thread here.
Which is the same thing that /u/EsotericRogue said. A pay wall is a non-starter for the vast majority of potential readers. 
Thank you for clarifying that. I didn’t realize that was the original case.
How many versions of 3 are there? No wonder they can't update 2 any more.
I can’t imagine churning out that many lines a day even in a job. 
&gt; It's just that the UI is quite overloaded and distracting in my opinion! The IntelliJ UI is overloaded? Looking at your Neovim vs VScode screenshots you can get pretty close if not the same layout in IntelliJ. [Here's what my PyCharm looks like](https://i.imgur.com/s1gQk8Z.png) Note: Blurred out project name and opened random standard lib files since I have a work project open(hence using 3.5).
First: This belongs in /r/learnpython Second: For the love of god don't ask for help by showing your issue via a shittily done meme, or a meme at all. 
Did you also have to learn some other languages to do what your doing (automating) for businesses? How long before you were able to start automating your job and then other businesses? I'm trying to learn python now so I find your story super motivating! Thanks :)
On scale from 1 to 10 it's an apple.
I'm going to update all possible dependencies, polish code for each existing microservice and prepare releases for them before doing any integrations with the microservice that was written with Elixir language which is intented for searching opponents for matches and building game lobbies. Probably will make a migration to Python 3.7 as well. Link to the project - [https://github.com/OpenMatchmaking](https://github.com/OpenMatchmaking)
I agree
The article talks about it...
Thank you so much 
No problem. Let me know if you have any further questions :) 
I've created an application that can tell when my city bus is coming to my bus stop. I send an sms with two option (home / work), depending if I want to go to my workplace or if I want to go back home. The application uses selenium to get the bus realtime position and get the ETA from my bus stop, It next text me back with the ETA. I use the Twilio API and Flask for the SMS part. I'm not waiting the bus more than I have to anymore! :D
Haven't you already been able to use the Python language server for some time? Atom's ide-python uses it already, and I thought vscode was already using it as well.
It does not. The fact that you seem incapable of stating anything clearly, and that you seem to found a comfortable home with node.js, is a good indication that I should avoid it. Thanks for your unintentional meaningfulness.
This is the 'intellisense' engine from visual studio that has been turned into a language server. There's an existing python language server (https://github.com/palantir/python-language-server) that vscode, atom, sublime, emacs, etc all can use, and this is just another language server that you are able to use.
It is what this article is about with Python but it applies to NodeJS better.
Where did this come from?
I'm three years into building a client base. Thanks for the response. 
It is not " they can't update 2" , they won't update. I am not sure about it but it's most likely about design and technical changes at fundental stuff. PS: I am not expert at any thing about developing a programming language, I made my conclusion about that by reading popular, production( developing with Python,not developing Python) related posts, essays etc.
You only need to fork on GitHub if you have a commit. You can clone the original repo and then fix the bug and then commit, then fork and then push to your fork. 
Well, I admittedly don't have *much* experience with MVS. My general feeling is that the main benefit is you're already familiar with it. In general, the consensus is that PyCharm is the best full-featured IDE for Python development, and it supports a whole lot of stuff really well, but it would be a leaning curve. I'd say probably start with what's familiar instead of trying to learn a new IDE and a new language at the same time.
MSV has some good sides: 1. Debugging is just like C++/C#. Just put in the red dot breakpoint. 2. In a breakpoint, make sure you View&gt;Other Windows&gt;Python Interactive and set environment to debug. 3. When using anaconda, pretty easy to manage environments in the solution itself. 4. Analyze &gt; Launch Python Profiler really helps narrow down time/cpu consuming areas
&gt; Not to bash JS, but with Python you get: &gt; &gt; * Huge standard library that includes a lot of stuff you'd normally need to manually install. &gt; * Enormous community. &gt; * A nice language with a rich runtime introspection system that doesn't have JavaScript's...weirdness. * Nice scientific computing libraries. * Bindings to the Apache Spark. 
Can you name a single JavaScript library for machine learning that is anywhere near as popular as the existing ML libraries in Python?
Where are you lot finding jobs to automate. Everything I do is as automated as possible....
Python 2 and 3 are different languages entirely at this point.
I believe JavaScript has as many machine learning libraries as Python has such as TensorFlow.js. But I already said that NodeJS is new! Python has started to become very popular and used in Google and taught as a general scripting programming for non-CS majors around 2007-8. It coincides with the time that Data Science, machine learning started to get traction. The term "Data Science" didn't exist in 2008 (I believe). So, most developers, academics, and scientists would code in Python because of its ease to code over C++ which they would have used. But the fact is v8 engine underlying NodeJS is faster (a lot) than Python, and better sync with the browser which will be beneficial for data visualization after all without learning anything new like matplotlib. JavaScript skill can be transfered to web development for both bankend and frontend. You can create Mobile app using React Native which has more tutorials than Tinker that nobody uses. You can make a desktop app using electron. The editor you use every day (VS code) is written in JavaScript not Python. Well, if you use spyder, that's C++ I guess. 
That is just what I was looking for! Thanks!
Can I use anything in the Hadoop ecosystem with JS? How about just Apache Spark? Are there JS bindings for Spark (Spoilers: No).
Python lacks good optimizing native code compiler with full type-deduction, which is impossible to make knowing how dynamic Python can be. So you can't write an OS in pure Python. You can't make good game engine in pure Python. You can't do embedded software development in pure Python. Also you can't do mission-critical software in Python, where a software error can cause people's death or loss of million dollar space shuttle. Those things should be done in strongly and statically typed languages with good software quality verification tools. Python is good at where it is good at, it is definitely not suitable for everything, so it is not the best language.
I know it's stupid, but I secretly wish that python wasn't so popular so that it looks better when I'm confident enough to list it on my resume. I'm afraid by that time, everyone will have it. 
When I reached peak performance I could churn out about 500-700 lines of complex c++ in a day (12 hours/day), I got burnt out in a week.
So that i call good arguments 
I said NodeJS is new!!! It's not hard to think people are developing for NodeJs platform. That's like a simple idea to extend the current practice of big data industry. Moreover, we were talking around the context of the article. No beginners starts off for learning programming because they want to extract and manipulate big data through cloud!!! Majority of people just want to create a web app, mobile app, and some automation for the local computer. What you are focusing is only small segment of computer programming use case. Because Python is after all a wrapper for C or C++ for the big data programming anyway, there is no reason why JavaScript cannot do better when there is an ample reason why JavaScript could do better.
VS ist the best IDE compared to all other IDEs no matter for which languages - this statement is totally accepted by the C# users who just don't know any other ecosystem 😈 Imho it is not a bad IDE but has lots of weaknesses! And especially its Intellisense is rather weak imho. Sure it gets you most semantic relations in C# but it fails for filtering with wildcarts or regexps. Quite often it *collapses* and you have to delete its database in order to bring the IDE (!) up again. Besides this the *language server* isn't related to Intellisense at all. So the approach itself is a nice try! 
Yeah I bet data science work is great fun in Node
Ooooh that makes sense, thanks
Do you use any exotic data for the fraud detection? I saw an interview by Amex CEO(?) talking about AI helps them detect that sort of things better by using the devise information the user is using to access. The methodology is basically detecting the outliers as "unusual activity" right? I think you segment activity types into 6-8 types, and if a particular activity doesn't fall into any of the types, then the system raises a flag. I have economics/econometrics background and we use transaction activity, but this kind of using the unconventional data is new outside of the field. Plus, we don't have a skill or mind to think about extracting data from the devise and use it. We are not trained to gather data which is usually given.
I know you said not VSCode, but if you're looking for a free tool, VSCode with the Python extension is one of the best free Python editors out there. It has support for autocomplete, multiple linters, multiple formatters, debugging, unit tests, running programs and more.
I use Atom for python. I like it.
What service does it provide?
I followed a similar path - started learning Python &amp; R around a year ago and now use it every day at my job. You're going to struggle a lot initially, but it's because you're trying something new, not because you're dumb. Start simple, ask questions, and embrace failure!
it provides supply chain network optimization utilizing puthon PuLp module, PM me you are more interested, I will share some tutorials
You originally said that &gt; I believe JavaScript has as many machine learning libraries as Python I've pointed out several libraries (to what is, arguably, the most popular ecosystem of machine learning libraries that exists) that have bindings in Python but not in JS. Please keep on point and stop moving the goalposts. &gt; That's like a simple idea to extend the current practice of big data industry. If it's so incredibly simple, then you should be able to knock out a Spark binding for JS in an afternoon, right? /s &gt; No beginners starts off for learning programming because they want to extract and manipulate big data through cloud!!! Speak for yourself. I learned how to program in order to work with large datasets (albeit not technically in the cloud). &gt; there is no reason why JavaScript cannot do better when there is an ample reason why JavaScript could do better. There's no reason why it can't do better because there's more than enough reasons why it could do better. Way to go, Captain Circular Argument! 
I guess the reasons not to use it (*if don't have it already installed*) are that there are other more suitable ways, like PyCharm IDE, or VSCode text editor. That said, if you're already using Visual Studio and are familiar with it I think you can try it as an IDE for pyhton (using the Python Development Tools for MVS).
Never tried web dev with django?
An API for my company. Is a networking stuff to automate routers, switch and firewalls. They hired a team of developers but they ask me to create an API for them to work specifically for our network(ISP company) and i am just a network engineer here.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
node.js runs on the computer faster than python. that's the most important reason. nodejs is new, that's why it doesnt have as much libraries as python does because data science is new. If node.js exists in 2006, people would develope machine learning big data things in JavaScript. period. there is compellig reason why python is better for the use other than it was there. If node existed in 1998, google wouldve been written in JavaScript.
Ooooch - per day! I read it as 300,000 rows to get up to date. 
This doesn't appear available anymore. 
Okay, I'm done. Obvious troll has become quite obvious. Reported.
Hi, I'm a colleague of @rblasucci at Wallaro Labs. Both approaches will work with Wallaroo, so it's down to personal/team/business code style or guidelines. The only restriction Wallaroo has for user defined classes, objects, and types is that they can be serialized and deserialized, so that it can ship them over the network to other workers when necessary. An example where one might want to use classes for state is keeping the state mutating logic definition close to the state definition itself. It might seem trivial in a simple pipeline, but when multiple pipelines intersect over the same state, having the mutation logic defined in a single class instead of in multiple computation methods can help keep things consistent.
This question seems like its coming from the point of view of resume padding or putting a tickmark on some college project list (please do correct me if that is not the case). Yes, reporting a bug is definitely a contribution... specially if you write a good bug report and also provide a minimal code sample so that anyone else can replicate the bug. &gt; What exactly is a contribution? A contribution is any help that you provide to an open source project to make it better. It could be good bug reports, or writing/fixing documentation, fixing bugs, reviewing PRs that others have submitted (you will learn a lot from this), taking active part in the discussions of an open source project or implementing new features.
&gt; how much time i should spent on reading documentation? Not too much... just enough to get the job done (like read about the process for submitting PRs to the project and if there is a checklist to check before you submit a PR). No one has read all the documentation. All you need to do is be nice in asking questions... and don't worry about people who tell you (sometimes rudely) that you should have read the documentation (just nicely ask them to point you to the documentation and read it if its relevant). The coding world is often harsher than it should be... and you gotta be able to brush off much of it in order to be able to make any headway.
Most Python modules are pure Python, in which case they don't need any compilation or additional preparation before they can be imported and used. For ones that do require compiling, it's certainly possible to distribute prebuilt versions, and most popular modules with compiled components do so (e.g. numpy, scipy). If precompiled binaries are available, they'll usually be distributed via pypi and pip would know about and install them. What is the library in this case?
Depends on the module you want to install. You can find some precompiled packages here: https://www.lfd.uci.edu/~gohlke/pythonlibs/
This will solve your problem [https://www.youtube.com/watch?v=jnpC\_Ib\_lbc&amp;vl=en](https://www.youtube.com/watch?v=jnpC_Ib_lbc&amp;vl=en) :)
thanks for the suggestions, but so far the only optimization techniques I see in tensorflow involve gradient descent
What they should call it is a case study in what not to do. Package management in Python is a dumpster fire.
I'm making a text based adventure for the same purpose. Definitely checking this out after work seeing what functionalities you put in! I also need to learn how to make it executable.
With respect, this argument is beyond bullshit. They are the same language. The major difference is the string literal type only.
Our firm employs an army of people to do manual data entry between systems because there's no integration layers. Now, our legacy systems are too complex to even begin building integrations, so our only safe interface is the UI. We use Python and test automation tools, selenium, and other apps to try and automate the drudgery. It's not easy because many business rules are informal and implemented as the result of experience. However, these people will not be losing their jobs. At a firm like ours there's so much work to do that whenever we automate some awful data entry task those employees are freed to go and perform higher value work elsewhere.
I can probably get by with just Python, SQL, and in rare cases JavaScript. I recommend you build and deploy a small web-application as it will teach you the full stack, including all the annoying system administration work required to actually serve a customer! I would say it took a few months of tinkering because I could start turning some of our shitty Excel spreadsheets in to super basic Django apps.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. [Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
No, I've been practicing leet codes and coding on various sites and i think i now think I'm ready for contributing to OOS but the problem is i don't know how to begin and what to do that's why asking for same.
That's fair, I suppose I was hyperbolizing. Basically what I was trying to convey was that 3 is \~the future\~.
OP, I tried it myself, but found it extremely slow, even slower than PyCharm. But there is no reason to not try it...
What do you prefer?
Well I am terrible at math too, but then I realized computers are pretty good at it and development has little to do with math! No one is too dumb, because no one is super bright! We're all just trying to do the best we can and learn every day. Every developer I know has the Python docs permanently open in a Chrome tab. Does map() return an iterable or a list of results? I can't remember.... better check the Python docs. Now that keys are ordered should I use a dict or an OrderedDict? Better check Stackoverflow. Those simple questions can be answered, but harder and more interesting questions are "How do we design a minimally viable solution we can improve upon over time?" In my experience most problems are political not technical. The "coding" part is only half the challenge. The real challenge is understanding your customer's needs and building an appropriate solution. Development is less about syntax and more about structures and design. That's the best part! No one has ever designed anything perfectly. So you can always continuously improve anything. 
What's the hard way story?
Yes. It is an incredibly bloated language with rules that only ever kind of apply, and almost always in the way that is the opposite of what you want. Rust is supposed to fix a lot of this, but I don't know enough about Rust to make any judgement. The great, starter-friendly thing about Python is that you can do almost anything with it but it stays simple unless you intentionally write overly-complex code. This is why I kind of like Go as well -- there is almost always a "best way" to do something. Some people don't like the opinionated nature of Go, but I find it somewhat refreshing. And Go's compiler is *fast*. I have a Go program that is ~250 lines but imports a lot from the stdlib and one external package but it compiles fast enough that it feels like running a python script.
&gt;Perhaps unnerved by a future filled with automated jobs, 90% of American parents want their children to study computer science. Is this true? I feel like 90% is a hugely exaggerated number.
If you clone the code or download it from Pypi, you can use: import sys sys.path.append('C:\\path\\to\\module') # or use a relative path import the_module
Considering I support 2.7.7+, 3.4-3.7 with the same codebase, I disagree.
I used pyinstaller on Linux to make the Linux executable, and then did the same on a virtual machine running Windows to make the Windows executable. I might try to set up a Mac OS X virtual machine later to make a Mac OS X executable.
Yes.
I don't think so. What I am saying is not that fer-fetched.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Check out r/learnpython
Hey no one here actually seems to answer your questions. Yes it is one of the best it has simpler syntax than most, had the largest open source contributions of any language, one of the biggest communities, and one of the largest selections of libraries provided to you by a single command line command. Giving it a rating from 1 to 10 makes no sense though so I'm not going to answer it... Whats a 1 and whats a 10.
But you can do all of that in a Python wrapper, which is in Python. It really can be applied anywhere. If it can't, then name one specific task it "can't" do. You can wrap C in python, hence you can do all those things you mentioned if there are existing python wrappers for the task.
http://archive.is/G98H7 
I use VS Code for now, it is quick which I like, and has good git integration.
PEP572 is now an official branch on the GitHub repo! Milestones!
Taken your input seriously :-) Hired a designer to take examples I've made and make them look better as you suggested. Will post a before and after.
Perhaps not messy, but it forces the programmer to think like a computer, instead of forcing the computer to understand like a human There is a lot of &lt;template&gt; noise {in ++C} that{ obfuscates the real const * int meat of what's going on; So in that sense, yes I'd say it's messy. Compared to Python, at least.
One group I'm particularly interested in connecting with is the Machine Learning crowd. I'll wait a little bit until I've got more polished looking examples. Here's one I put together in about 10 minutes. It's not technically correct, but a decent mock-up of a possibility. If you're the one running these things over and over, you can easily put in default values for all of the fields. Then you simply click "submit". Or, perhaps have a list of different settings to choose from. [https://user-images.githubusercontent.com/13696193/43022246-95a27a8e-8c34-11e8-99b9-7aba906aed87.jpg](https://user-images.githubusercontent.com/13696193/43022246-95a27a8e-8c34-11e8-99b9-7aba906aed87.jpg) I'm working with a designer to make it look prettier. Any feedback is greatly appreciated. Pretty much all comments make it better in some way.
Thanks for the encouragement :) Something about being a lady has really instilled a sense that if I dont get it it's just my feeble lady brain, but I really enjoy the "proof" logic problem aspect of all of this, challenging though it may be!
Thanks! Wish I had someone to ask questions to IRL, tough when you know more than you boss 😂
You can't do OS in pure Python, you can write a whole lot of wrappers and C code, but 1) it won't be a pure Python project 2) your kernel will strugle a lot with trying to interpret bytecode and collect garbage in real-time mode. Random stop the world GC pauses and GIL in kernel, that sounds like fun? Try doing a game engine in pure Python wrapping OpenGL for example and compete with modern native game engines, you'll be like 10-100 times slower. Try doing some embedded programming with CPython, you will run out of memory in intialization phase. MicroPython fixes a lot of stuff, but it still a lot of overhead. Tell me how you are going to do mission-critical stuff without any format proof mechanism of software correctness?
Spamming some blog. Nothing else
I think I've read these newsletters. You're not fooling anyone. 
That was me and PHP. Dabbled with different languages in school, but PHP got me into programming for fun. After getting tired of security issues and frequent bugs with PHP CMS's, I looked for another language to learn well, and decided on Python 3.
It seems like the best approach would be to parse the files manually and do the calculations via a program to avoid the confusion? Parsing or something similar would only take roughly 5 minutes. I calculated a rough estimate of 30-45 mins for analysing by copying and pasting into an excel spreadsheet and found out it would add up to a lot of hours over 1000 companies but I could learn to code in that time so id be killing two birds with one stone by using Python. Would the fact that annual reports all follow the same regulations and standards which causes them to name and lay everything I need out the same make this any easier? 
It is awesome and inspirational, thank you for sharing. Excellent work.
I'm hoping to spend around 500-750 hours on this program but learning as I go. Fingers crossed that'll get me close at least because anything more might end up being a waste of time.
H5py is a good database system. I’m working on a project with a similar amount of data 300k x 365 and it doesn’t show me down. Previously I just had a collection of pickle files.... not really a database but extremely simple to implement
I used tabula. Not sure if its a pdf parser but it did what I needed. Seems like the more long winded method though.
r/learnpython 
Yesterday I wrote 0 lines and removed 2 lines. Bug fixing inside old messy legacy code with complex business logic makes me feel so very productive.
Great resource for windows users. OP: To install a wheel directly from a file on disk you simply run: pip install C:\path\to\file.whl 
Alright I'll move this post there. 
The basement