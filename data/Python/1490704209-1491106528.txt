Just a heads up, companies like Expedia do not like people doing this sort of thing. See prohibited activities in the terms of service: https://www.expedia.com/p/info-other/legal.htm
I learned python primarily by automating my account on an old text based online game that the admin had given up on. Web scraping and working through web forms is pretty fun, and there's loads of useful tutorials online for how to do it.
Had a script that would parse large XML files (LTE configuration files) with varying attributes per element into CSV format. Some of these attributes (GPS, Azimuth, Tilt, etc) were to optimize a new site or the entire network to ensure that the PCIs (Physical Cell IDs) were as unique as possible. If the PCI had to be re-used, the script would ensure that they're physically as far away from each other as possible to ensure there's no interference. Finally once the optimization was completed it would generate the necessary XML config files to provision the changes required on the LTE/UMTS/GSM networks.
Oh god, doing this by hand would have been horrible.
Facebook does all the work. They're adding alt tags as image descriptions. So they add 'meme' in the alt tag and of course their machine learning model is fairly accurate.
Where were you sourcing the data from?
Yeah that'd be sweet to automate, doing that manually myself :P PS: who the hell is downvoting people's comments 
How did you get started with this? Online tutorial?
Looks great! Would be awesome to run on a local project (by file path) that is not hosted on GitHub. Just a small English tip, instead of "more faster" you would just say "faster". 
Uhh can you share that with me
How did you happen upon this? Are you working at a medical device company?
I wrote a script that scrapes the Dutch equivalent of Ebay for Iphones that are sold below their actual worth(and notifies me by email). The actual worth is determined by analyzing all of the downloaded data (that is saved to a database, so I can measure developments over time. )
Ha. I wrote something similar, takes it from my pogdesign calendar and downloads a hd episode of the show from pirate bay.
I wrote a quick 'password generator'. As the default (Linux) commandline ones don't actually generate strong passwords. The program automatically saves the password to clipboard (and the program can be activated by bash command) so that the process of generating / using the password takes only a second. 
www.python.org doesn't seem to listen for connections on its ipv6 address. It has both an ipv4 address and an ipv6 address, and if you happen to connect on the ipv6 address (as you should actually, but most people still don't), it times out. The solution is for the admins of www.python.org to configure their server correctly. The workaround is to put python.org, www.python.org and docs.python.org in your static hosts file, with the ipv4 address. (The workaround used to be to disable ipv6, but that will now cause problems with the increasing number of sites that make use of ipv6 correctly.)
So when ever you approach a traffic light your phone automatically turns your light green now?
Wrote a script which makes facebook posts in my group at certain points of time. People still think that its a real person and not a bot posting these.
An automated malware analysis system for checking android APKs for malicious behavior.
Here's the code on [GitHub](https://github.com/StefGou/reddit_to_spotify) as you asked. Have fun!
Up for a game of `__ball__`?
CIA Analyst :^)
[it's this](https://github.com/kennethreitz/autoenv) basically it allows you to stop polluting your main bashrc/zshrc/fishrc/etc with project specific config. For example I have my aws creds specific to client/work projects in that project (and excluded from source control).
Love it! I'll try to contribute, no promises
Edit: Hey wait, you're not the OP...
I literally do this as my job. Wrote a chat bot that does a bunch of tedious tasks based on chats in various chat rooms. Like resetting accounts, changing account statuses, posting automation test run statuses, checking bug status, etc. It also does dumb things like post stock prices, current weather, checks the weekly weather report to determine if it's a good day to get a carwash. A script that queries for new builds posted for the apps we test and alerts the group via email. (our dev team sometimes takes hours to send us a notification so this is a lot more responsive) A script that will generate charts for our test completion progress. All of our test automation is written in Python. Non work things: Amazon price checker. Basically the same as camelcamelcamel except mine texts me as soon as the price drops below my target and then auto updates itself to have this new low price as the target if I don't buy it. A Twitter bot that automatically tweets my ISP anytime my download speed drops significantly below what I'm paying for and links the speedtest results. 
This! This is useful! What's launchd and cron though, and why not just have it loop every 30 mins? 
Any chances to start using py3 in your tutorials? 
Since you're just starting out, maybe try this to get going: Make an html form for each stage of the process (for each question). Find a way to store the responses in a data structure that stays around between requests (in memory, text file, or a sqlite db). Each form submits to a (possibly different) function that processes the input data, then redirects to the *next* form. All the while, you print out your data structure somewhere on the rendered page as you go. You might try using [Bottle](http://bottlepy.org/docs/dev/) or [Flask](http://flask.pocoo.org/).
Woo, thanks man!
&gt; and the output was being copied and pasted by hand. So I did what any reasonable python hacker would do... ...pipe the output to and from xsel in a while [ 1 ] bash loop /s
probably making illegal copies of fanart from google image search and deviantart but yeah, DCMA
Flask is certainly more widely used at this point, and so you're likely to find more examples and tutorials for Flask. For that reason, it might be a better option for you. They're similar in some ways, yes. I feel like the two frameworks make different assumptions about how you're building your application, and Falcon lines up more closely with how I build mine (only a REST API backend, with a Javascript SPA out front). Of course, from the little bit I worked with Flask, it seemed like it was very flexible and you could approach it however you'd like - but Falcon was designed specifically for what I wanted to do.
Thanks for pointing this out. Most people don't know this :)
This isn't far from the truth. I am on a limited contract and spend much of my time rewriting the code so that it is idiot proof as no one left has any python experience.
Why do you think 1 line expressions are better than 2? Also, in real code `(1, 2, 3, 4)`would almost certainly be stored in a variable anyway and therefore a minimum 2 line statement. Your error reporting will depend on your testing library. Pytest provides extremely readable error reporting. Grappa's error reporting, like it's syntax is unnecessarily verbose, and I would argue, less clear than the equivalent assertion error messages provided by Pytest. And my code is entirely accurate since `a[3]==4` implicitly tests that `len(a) &gt; 3`. I don't see a situation when: `x | should.be.have.length.of(4)` is going to be preferable to `assert len(x) == 4` I'm a python programmer - I want to test my code using python.
Interesting, thanks!
thank you I will have a look shortly
Script that scrapes my league's fantasy football website after kickoff of each game and generates an html page that displays real time scores which it then uploads via ftp to my site.
I disagree. `pytest` probably has one of the best error reporting system compared to other frameworks out there, but IMO it still introduces visual noise and it is harder to read or easy to understand when certain errors happen, but hey, that's normal because it's a domain-agnostic framework. It tries it hard and does a good job, but the good point about grappa is that you're implicitly describing you intentions to the library as long as you do by writing them from the developer perspective. That allows grappa to do more fine-grained operators and error analysis/reporting, providing more detailed information about the nature of the assertion and subsequently, the error. &gt; I'm a python programmer - I want to test my code using Python. Mmm... Are not you writing Python code either way? &gt; And my code is entirely accurate since a[3]==4 implicitly tests that len(a) &gt; 3 That's not correct. The reason of your failure if the index does not exists would be typically a KeyError exception, instead of an AssertionError. Again, this introduces more fear while seeing errors.
This reminds me when I first coded something complex enough to teach me what spaghetti code is. I felt proud and embarrassed at the same time.
Mind sharing? 
Thank you for showing us your will. 
unfortunately it's nothing too fancy or cool, a plot with a slider comes up asking the user for the "y cut off height" 
My code is obfuscated all right. Just not on purpose. It's for a small non-profit and the contract was a mutual decision so there are no hard feelings. 
i hate to be selfish, but let me give it some thought. I'm not 100% sure on what the potential of this code is / if i should look into protecting it in anyway 
You're going to have to come up with a real example where grappa actually solves a problem that pytest or unittest doesn't. At the moment I don't see any reason to spend time learning to use Grappa, and I certainly don't see how I would sell this to my team as worth their time. Don't get me wrong, I think it's a cool project, I just don't see where it fits into the stack on a production codebase.
No worries at all, I completely understand.
Collecting episode names and numbers from TV series taking information from IMDB and then consistenly renaming the (cough) "found" episodes I have saved in a way that doesn't offend my OCD :D
Ah, that fumction. Says in the manual that its for debugging usage. Doesn't seem like its a good idea for production usage with 16 gb cache. Thanks for the link though :-)
I scraped a government webpage for free slots in one of their notoriously full scheduling web apps. It checked every few minutes, if anything was open (i.e. cancellations) earlier than my currently scheduled appointment it would swap to the earlier one. I let it run for a while, and presto! I moved up the ladder to an appointment only a few days from starting it, instead of a month or two down the line, which was my original appointment time.
Hands down my favorite programming book. Teaches the basics, like all books do, but then gives a tonne of useful ways to actually use the language. Thank you!
Of course developers are human beings, I didn't say anything to the contrary. But developers also usually know the syntax of the programming language they're using well. It is a wrong assumption that stringing methods into pseudo-English sentences is somehow generally more "human" than plain old expressions.
Google
I don't know launchd, but I assume it's similar to cron. With cron, you can schedule whenever you want your application to launch. Ex: every five minutes, after every reboot, etc. The benefit of using a scheduler, instead of just having it loop, is that your program can be less resilient while achieving the same result. I'll give a simple example. You write a program that scrapes a website for the local weather. You have it loop every 30 minutes. There was a small problem with your ISP and your connection went down while the program requested your weather info. The program exits because there was an unexpected error and you won't get weather info until you manually restart your program. Same scenario but with a schedule: Your program exits because of an unexpected error. Your scheduler starts the program again after 30 minutes and your weather reports keep coming in. Of course you can program around those unexpected errors, but that takes time. Why not let cron handle all those pesky errors instead? 
Have you checked out the official [python tutorial](https://docs.python.org/3/tutorial/index.html#tutorial-index) yet?
Oh boy. A lot of stuff i wrote. But before there was puppet and chef and salt i started writing such system. My deal was to make it agentless. I had practice in using dsls but thought i needed something more than that, that stopped me in my tracks because i couldn't use python in python (eval is evil, we don't want scripts to run with elevated privileges) so i ran a js vm inside python, however it wasn't that effective as i wanted it to be. Still it is a finished product but I never used it. It basically connects over ssh and runs a js script over output, it could include scripts, they were kept in a redis db. I got stopped by js callbacks. All of this worked with multiprocessing and gevent. The jsonrpc2 interface has been handled by gevent with some jsonrpc2 wsgi blendin. JS has been a pydermonkey module running in a forked process with nobody user so it was pretty safe. My platform limited me to pydermonkey, couldn't use V8 but it was enough as I did not need any dom parsing speed, only raw js. In hindsight I overshoot. Got dreamy about perspectives and ran a full stack different language inside python which was a bad idea. Should've stick with dsls or yet better yaml and I could've made the first puppet...
That script reminds me of [this defcon talk](https://www.youtube.com/watch?v=sgz5dutPF8M).
I see your point, but let's clarify concerns: - Humans are still the slow layer in the software building process. - Human time is far more expensive than machine time, therefore any step forward that tries to optimize that time cycle is welcome. - The syntax is the same: Python compatible code. You're simply expressing things in a different way than the perhaps typical idiomatic way. - Programming languages, especially high-level ones as in the last 40 years are designed for mostly human consumption. - Programming these days is about expressing intentions that are closer to human-brain than machine-brain. - Aren't you using pseudo-English expressions already in Python? The language itself was designed to be expressive and English lexicon friendly, such as having semantic logical operators such as `and` or `or`. Interpreted modern languages such as Python expressivity was a strong design choice. What's wrong extending that principle over testing primitives. - I'd suggest don't just think in terms of the syntax or purely implementation details: syntax is just an implementation detail that is there to assist humans solving problems. - `grappa` context is not a generic programming context: it is about testing. Testing is about feedback. Testing is about reliability. Testing is about behavior consistency. Testing is about verifying input-output contract expectations. - Testing is not always fun. Seeing errors is not pleasant. Fixing them typically is. If you can make that process more pleasant, fast and fearless for the human side, it should be a win-win transaction. `grappa` tries to contribute to that.
yeah, its not far from what I'm looking for... something even more concise would be great.
Simple but clever trick. This is very helpful to me. Thanks :-)
I work for inonline e-commerce, on a shipping team. We get an ungodly amount of issues with shipping carriers and the files they provide, detailing our label purchases. I had never touched python before I started working at this company, but I quickly realized I needed a way to parse, edit and compare csv files. With a generalized script that I would modify depending on what I needed to do; I cut down the time I had to spend on most issues by around 90%. I eventually started using this script to put our acceptance testing results into an excel document. Due to the large number of tests and the amount of verification we had to give, this could take a few days just to show one file behaved as expected. Now I can run files, and in under 2 seconds put together an in depth breakdown of the results. Maybe not super "cool" but the amount of time it saves me is unbelievable. 
launchd and cron run programs on schedule, so that you don't have to have your program running in a loop doing nothing for 30 minutes.
Concise does not imply less comprehensive. Something that includes toy problems and solutions would be nice... 
That sounds really cool and useful!
I'm so happy the next season is coming soon.
Learning by reading Learning Python by Mark Lutz
i like the way you think 
I'm a small business owner. Most of my inventory comes from a single distributor, and when I order they email me a PDF of the invoice. I wrote a script to parse that PDF and update my store inventory with the products I ordered.
Alex from Kite here. When we launched Kite here on reddit almost a year ago we were blown away by the enthusiasm for our smart copilot vision. Over 65,000 of you signed up for Kite in the first 72 hours, and over the past year we've been working with many of you to deliver that vision. We're excited to be opening up Kite for everyone to download today. Here's what we've been working on: * Deep editor integrations to make Kite better for smaller screens and more integrated into the coding workflow. You no longer have to dedicate a sidebar of your screen to Kite; instead, recommendations from Kite replace your editor’s autocompletions and hover results. * Fine-grained privacy controls modeled after the .gitignore file format means that you can selectively and precisely decide which files and folders Kite indexes. * Next generation type inference engine that uses both static analysis and statistical inference over Github. Kite beats PyCharm and Jedi by 32% on a typical Django project, offering more completions when you need them. * Ranked completions which put the most relevant completions at the top of the autocomplete box using techniques traditionally used in web search. * Kite for Windows (And Linux in testing!) Check it out at https://kite.com/ 
Thats a good idea! But its a poor sketch of our national flag. We might change in the future to another flag, more elaborated.
First off, I believe this should be posted on /r/learnpython. Second, your code sample seems to be a 404. If you could fix that, that would be nice. 
If you ask someone: could you do that without that library, I think any competent people will say "for sure". That's not the real discussion here. Most libraries are out there to assist developers to do things in a more handy way. The library is not inventing any new way in terms of giving you a weapon to do things that you can't do with raw Python code. Clearly that's not the goal and relevant thing here. I already answered that not everything is about just the syntax, but the way you express intentions and how you get the feedback from that (see other comments). PS: based on your example code, if you think that code is more expressive than using `grappa` assertions, we might have a bigger problem here. 
QoS can be a complex beast, that said you can still see effect of torrents on a line. The issue comes in that, again the torrents can eat up all the inbound capacity. So in short, no. QoS can help as you can use it to limit something before it eats up the whole pipe. However Torrents are a different beast because the clients don't exactly depend on proper TCP SYN/ACK.
Don't think just about syntax details with trivial assertions: think about expressing more complex intentions and possibilities in other scopes, such as: https://github.com/grappa-py/http
Thanks bud. This was a huge help. Reality is, this is probably the best idea. I was hoping to build it as one interactive page but because I'm limited in my ability right now, it seems that i'll have to keep it simple and have the "flowchart" be a series of pages that ask singular questions, which provide a few choices that determine what question is next. Thanks again, for the suggestion. 
Learning image processing and finishing my thesis
When you work in a studio that focuses on VFX, there are a shit ton of materials that artists need to work on their "shots" (the clips of video between cuts in a film or TV show). They may have a clean plate of the location without any character, the characters on green screen to be comped in, and maybe some assets that the branding team needs them to incorporate. Now imagine you have 500 artists that need anywhere from 5-100 of these assets multiple times a day to finish their shots and you can see how much time they waste just looking for the files the producer told them to use. Making tools that bring all of these assets into their file automatically on build stream lined that entire process. Next is the proprietary tools they need such as "wispy fire" or "color correct for scene 4". Depending on what shot, scene, or team you are working on, that tool list can change drastically. As with the assets, if the artist needs to go looking for those tools every time he has a new shot were wasting hours everyday across the floor. So my job would be to first see what tools they needed and create them in the event they didn't exist yet, then use Python to incorporate those tools right into the original UI of what ever program the artist is using such as Maya, Houdini, and Nuke. It really challenging and rewarding work, but the hours are insane and with the ever growing outsourcing of work it was only getting worse. After about a year I was suddenly working ~22 hour days as if it were normal, so I moved into interactive work where I now use Python to be my exchange layer between programs and peripherals like getting the CANbus info from a Ford Mustang and drive it into a game in UE4 to let drivers drive real cars while viewing the game world in VR. 
Add an inside toilet cam with some video analysis and you might be able to reconstruct the image of the turd and post it with an estimated weight. Then you can have a high score contest
I've not used the built-in templating before, but I assume you want to start with YAML like this, # example.yaml key: $value then replace $value with something and deserialize the YAML into an object? The two tasks - templating and YAML deserialization/serialization - are separate and can be handled separately, no? import yaml from string import Template with open('example.yaml') as f: template_str = f.read() # build the template replaced = Template(template_str).substitute({'value': 'real data'}) deserialized = yaml.load(replaced) # =&gt; {'key': 'real data'} 
I need to read a CSV and set the columns in the data as variables that I then manipulate. The problem is that the actual work must be done on a different computer than mine, and the client will only give us 2.7, no IDE, and no packages other than what's installed. And by "no packages" I mean pip and pandas. I've tried bootstrapping both in to no avail- installation of pip via Easy Installer requires IT admin sign-in; installation of pandas with a WHL file requires pip. So I'm trying to set arrays using numpy. Did I mention I learned Python last December?
For any midwesterners who know/love the game Euchre... I made a program that observes the user's play pattern, then runs that play pattern thousands of times and recursively finds the errors in their patterns that are causing them to lose games.
Nice
http://codingbat.com/python Has some good beginner puzzles and intros to arrays, string manipulation, lists, and logic. 
Why OS X &gt;= 10.10 only?
Recording a church service...
Hey Alex, on your security page you have a link pointing to https://kite.com/smart which shows a 404 page. 
Haha that's pretty precise. Good for you going at it :D
Dragon naturally speaking + dragonfly/python = Automate almost anything.
I knew was used for this on a webserver. I foolishly pictured it running on a local environment, but I realize you probably run it from a VPS?
Hey, I think your "Choose language" dropdown is a bit broken on Chrome for Linux: https://postimg.org/image/ggoerv56r/ Also, you should put a link to your GitHub page: https://github.com/kiteco
My thoughts exactly haha
Why are you wasting my time, no Linux support. Then you want a monthly subscription at $18.90 per month for pro. Go jump in a lake. And take your "Social Media" sales crap with you.
What about all the concerns with keys/etc. private data stored in the cloud? EDIT: Agh! It costs $18/mo!? This costs *more* than the IDE it's *assisting!?* A bit much, imo.
Learning to machine learn for a work project, specifically doing supervised learning on text data with scikit-learn. 
I think the real question is "What does cardiometry have to do with a web stack?"
What book?
I understand where you are going with this but the device itself should not be providing any voltage what so ever to the user. It has sensors that detect the electrical signals from the heart. *"Electrocardiography (ECG or EKG*) is the process of recording the electrical activity of the heart over a period of time using electrodes placed on the skin. These electrodes detect the tiny electrical changes on the skin that arise from the heart muscle's electrophysiologic pattern of depolarizing and repolarizing during each heartbeat."* https://www.wikiwand.com/en/Electrocardiography 
Google has a playlist on machine learning with Python. http://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal
Where are they on YouTube? 
I'm looking forward to seeing this discussed on the Python ideas mailing list for inclusion in the stdlib.
I raised a flag no one seems to have raised. I shared my concerns based on knowledge and previous experiences, there is no need to get defensive against me for sharing my opinion.
PEPs are not written until there has been a discussion on python ideas, possibly python dev as well, at which point somebody says "We need a PEP". Of course 99.99% of things that are proposed on python ideas get rejected out of hand as they are complete crap.
At an internship for a technology company, I was given a large spreadsheet detailing all hardware needed for a specific project. I was tasked with locating and downloading all relevant technical documents from the parts' manufacturers' website. I wrote a few hundred lines of Python to load the spreadsheet and automatically download and properly categorize the documentation needed. In terms of time, it payed for itself in just in just one project.
&gt; I shared my concerns based on knowledge and previous experiences This is what I take issue with. You shared your concerns based on **completely unrelated** knowledge and previous experiences. I'm sure you are a great EMT, but that in no way qualifies you to raise this flag. 
"A domestic power supply voltage (110 or 230 V), 50 or 60 Hz alternating current (AC) through the chest for a fraction of a second may induce ventricular fibrillation at currents as low as 30 mA. With direct current (DC), 300 to 500 mA is required. If the current has a direct pathway to the heart (e.g., via a cardiac catheter or other kind of electrode), a much lower current of less than 1 mA (AC or DC) can cause fibrillation. If not immediately treated by defibrillation, fibrillation is usually lethal because all of the heart muscle fibres move independently instead of in the coordinated pulses needed to pump blood and maintain circulation. Above 200 mA, muscle contractions are so strong that the heart muscles cannot move at all, but these conditions prevent fibrillation."
I'm not really qualified to give advice on this, but there's more than just technical skills to become attractive to employers. Written communication skills, for example, is very important if you want to work with a remote team. If you don't have any work experience yet developing with Python, then I'd really recommend to try and get an internship, contribute to an open source project, or try to apply for a junior role even if the pay is low or it's an unpaid role just to get the experience. You could really learn a lot even in just 6 months of working in a software development team with experienced engineers (and not just the specific technologies involved, also the processes such as their Git workflow, deployment, code reviews, testing, etc.)
well, given you early and narrow focus, you have significant gaps in general programming related knowledge. Yes, you can expect getting tripped by that frequently because such little math problems are universal enough to be understood by everybody and require certain amount of problem solving skills, that they are used really frequently as entry level filters to programming jerbs. to gain experience with cute little math-related programming problems try doing easy and not so easy problems from eg https://www.reddit.com/r/dailyprogrammer/ https://projecteuler.net/archives 
You're looking at a business license. Check the link to personal licenses.
Did a quick YouTube search. USB chargers can put out as much a 2000 mA or 2 amps. According to OSHA anything above 17mA - 99mA can cause death and anything above 100mA - 2000mA is like to cause death. "Many cheap Chinese USB chargers are routinely the cause of fires and electrocution for not providing proper mains isolation". https://www.youtube.com/watch?v=VStdZ56bqfs Having a device powered by a charger of questionable quality, plugged to your chest is not scaremongering. This is why electrocardiogram machines are expensive, every part is carefully designed and tested to ensure your safety, even the power supply.
For a fee lol
channel is https://www.youtube.com/channel/UCmzTmS0qmEI4hog0TTC4h9A code is on github: https://github.com/mfwarren/yachtpromo
We made an Instagram like filter for photos at uni. Easy, but cool! 
I used python to pull rss feeds of CNN and Fox then compare the headlines and notify my when a headline from both were similar. My thought was to filter out all "non news", assuming an important enough news story would be covered my both networks, using similar words in their headline.
Hello, thanks both I am sooo dumb thanks for the help this was the fix, If username == authUser.read() and password == authPass.read()
Can you write the project on your own machine, create some kind large binary with all the deps included and then transfer it to the target environment with FTP or SCP?
please post this in the appropriate subreddit: /r/learnpython 
Sorry 
I'm putting together a horror-themed LARP heavily inspired by the Alan Wake game with some friends and colleagues. Currently working on network of Raspberry Pi's, Arduino's and Wemos' communicating using a mix of WIFI, LORA and 433 MHz radio. It's been great fun to use IoT-skills to build something a bit more unorthodox than the usual home automation stuff. This week I've been working on a soundplayer client (hide a RPi and a set of speakers behind a wall and create disturbing noises) as well as a remote controlled flashlight (turn it off wirelessly at the worst possible time for the players).
tests are pretty bad at measuring skill level. I have several years of experience but am self trained (marketing major graduating in 2007). A little over a year ago I left a company and I took an employment test from a recruiter that included a ton of questions with academic terms I was unfamiliar with. I probably missed most the answers. However, I interviewed and got hired. Meanwhile, I have been successful in this role just as I have been in previous roles. You might miss some job opportunities if you test poorly, but you also might not, and the market is hot enough that a lot of companies will hire you regardless of how much weight they lay on tests. In my opinion, the best way to go is to hire someone who seems to love code. Some people will underperform and others will be rockstars, but I doubt the average quality will differ much from interviews that include tricky problems that are (probably) not realistic problems you'll ever face on the job. These are probably questions you'll know how to solve when you think about them a bit and / or face more work in Python, but they also aren't what you'll do in a job. If I interviewed you, my questions would be more about the types of things you've worked on and how you'd approach example problems in a general sense. You might experience harder interviews too, but don't let it bother you.
Yes, I wrote a few GUI apps for Linux with Python.
Try "the python cookbook" by Beazley and Jones and maybe Slatkins' "effective python. 59 specific ways". 
It's a cool idea, but I fundamentally disagree with how they keep using the phrase "context switch" in the video demo. If I'm googling around for a solution to a coding problem, I'm still deeply engaged in that problem. Just because I've pivoted from my text editor to my browser doesn't mean I've "switched contexts." A context switch would be if, while I'm googling around for python syntax, a coworker comes in and asked me to help them construct a regular expression on an unrelated problem. 
My father asked me to help my lil bro with his math homework, and I hate making stupid exercises that he'll solve faster than I can make them. So I wrote a script that generates elementary school homework with correct answer for checking, and since it's randomly generated, he has no excuses! So A+ for programming but F for being a bro lol
I have done something similar in the past. My suggestion would be to start the students off with small parts of a project (introducing strings, variables, raw_input(), lists, etc.) and then show how those parts can work together to build a functioning program. Maybe you could show the students how to write a script that asks the user a series of questions, and then uses those answers to do something next. (Quick example that could be broken apart, then brought back together: https://pastebin.com/h2kTNBup) After we got some of the basics down, we used Tkinter to create a GUI that had pages (well, technically frames), that contained info about the student. I thought of it as a 'all-about-me' project. They could include interests, hobbies, a resume, a page with contact information. You could get a bit more in depth and use images as buttons in Tkinter so that a button with a Facebook logo would open up the browser to a Facebook page (or twitter, or instagram, or tumbler, or whatever else these kids are using now a days.) In the past, I've set up larger projects with lots of comments about why each part does what. I think for beginners (and especially HS students who may not be totally interested, it may be more useful for them to be able to "plug and play" with pre-existing code, rather than struggle to get it off the ground in the first place. That way the see that their code does work, and they get instant gratification. 
Seems to be the new "thing" in the Django events. - "Navigating unconscious bias" - "Solidarity of Systers" - "Marketing for Developers" - "The ghost in the algorithm: how to define and to apply digital ethics for the common good" - "Autopsy of a slow train wreck: The life and death of a Django startup" - "Last Mile Django" - "The road to unempathic communities is paved with good intentions" - "The art of interacting with an autist software developer" - "Dial M For Mentor" - "Docker Lessons from Real-World Projects" - "Rants and Ruminations From A Job Applicant After 💯 CS Job Interviews in Silicon Valley" - "The Struggle of Tech: Feeling Better as a Learner" - "At your service! The DSF - how may we help?"
a variation of a traveling salesman problem. it blows to say the least
I guess talking about *Django* at a *Django* event is too mainstream now :)
Do you happen to know where/how companies like Expedia and Trivago get their data, are they also scraping, or pulling directly from airlines API?
For work: choropleth ZIP codes based on business activity in Folium For fun: incorporating OSMnx's graph of streets to see where I have/haven't run.
So it is only $8 per year more expensive than all of PyCharm?
This month I'm doing a few things. 1) Finishing OpenCv tutorials that I made for myself 2) Finishing stock analysis to then use code for another project 3) Adapting my openAI neural network to have the ability to play any game in the gym. 
If you have 2016.3 and 2017.1 PyCharm Installed, it seems to only install to 2016.3 on Windows. Popup is all over the place. Can't mouse over to it without holding Ctrl to keep it from closing. Seems to have the info that PyCharm is popping up for me already, for the most part.
 if link.get('href') and 'valid' not in link.get('href'): And if link.get('href') and hit in link.get('href'): Will catch "None" and you won't need to Try/Except it. NoneType isn't iteratable meaning keywords like "in" don't work. You have to use comparison operators for non-iterable comparisons like "==" and "!=". 
Learning all the new async/await stuff added in python3 :)
https://learnxinyminutes.com/docs/python3/ 
I am sure they have safety precautions in place. A power isolator would be used in these types of circuits. https://www.google.com/search?q=power+isolators&amp;oq=power+isolators&amp;aqs=chrome..69i57j0l5.2677j0j7&amp;sourceid=chrome&amp;ie=UTF-8
https://github.com/liftoff/GateOne
I'm finishing off my first big project! It's a teaching aid for my mineralogy students. I've got releases out for windows, mac, and linux (https://github.com/selkind/Mineral-Flowchart/releases) but I need to go back and add comments to the source code.
Using [selenium](https://selenium-python.readthedocs.io/) to drive Firefox.
I've never seen a programming community such as the one of Python with so much infighting instead of promoting it's language against other languages and frameworks. The whole 2 vs. 3 discussion is so ridiculous. Move on, switch to 3 and focus instead on making Python the best language every developer wants to use.
I would assume that the listings you see on Expedia are acquired directly through the entity that is offering them, such as a hotel or airline. I don't think that you can actually book anything on Trivago itself. Trivago gets data from many online travel agencies, but that might not be the only source. There is a reason why that kind of data is kept secret. Pricing strategies are in place to maximize profit, so price forecasting would go against that goal.
Would you mind sharing code ? Very interesting ! 
Practice makes perfect. Keep trying and don't let this setback deter you. Second the recommendation for Project Euler. [Codility](https://codility.com/) also has a good set of questions online.
Lazy coding.
so how does this exactly works? thanks
Bitcoin won't mine itself.
No vim/emacs/linux support... hmmmmmm...
Installing a key logger on my system doesn't seem like a good idea to me, sry. 
This week I learned that library I implemented for my project at work is buggy, not stable and not complete version of Celery. I had fun working with asyncio though!
&gt;create a unique sum from a given array. if a number repeats, find the lowest unique number for the array, and then return the sum. This doesnt even make sense to me. I dont understand what they are asking.
Not any that I know of. Be careful when using cloud hosting like Google Drive - you should only edit/save files one at a time, which is possible to do if there are two of you. There are better solutions like Git or SVN, but don't bother learning them for a small project. IIRC Google Drive remembers who changed which lines of text, doesn't it? That can be useful.
we wont be working in 1 file. We have a main file and then 2 sub files and when we are done we have to put everything in the sub files. It just saves time uploading and downloading all the time as well :P
The directions weren't very clear. It was like If you have an array like so: 1,2,3,4 provide the sum. If you have an array 1,2,2,4 then find the lowest number than can replace the second two and THEN find the sum
I'm developing an evaluation pipeline for a robotics research project, including visualization and statistics run over a large number of experimental data
Trying to analyze a collaborator's code and add to it so I can analyze emission lines from galaxies. End goal is to be looking at supermassive black holes/AGN (active galactic nuclei). Compared to him (and probably most people in thus subreddit) I'm really new to programming but I think it's pretty cool, the more I get over the learning curve, the more I enjoy everything. 
I made this weather script that goes online, retrieves a gif, slices it up, edits it, then projects it onto a 3d sphere so I can see the entire globe's weather and rotate it around like in google earth. I'm pretty sure g. earth had a similar feature already, but it was great practice!
What the actual... How about shell script, sed and awk?
&gt; It was like If you have an array like so: 1,2,3,4 provide the sum. wait, so... &gt;&gt;&gt; a = [1,2,3,4] &gt;&gt;&gt; sum(a) 10 ?
Google things separately. Flask, as a library, is not hard to understand and set up with its docs. There will be information if you Google how to control LEDs and temperature sensors from a raspberry pi and then it's just chaining together.
do you by chance remember your login? not that i work for the same large web retailer you used to work for... nomsayin ;)
The privacy page now gives a 404: https://kite.com/privacy
lol this is useful and creative!
He doesn't mention petrol. What makes you think he's British? Oh is it the mixing of miles (imperial) and litres (metric)?
I'd like something like this for C/C++. Python is fairly well documented. Looks neat but I'm concerned about some redditors saying it spies on you. What's up with that?
Yeah, he's using a microsoft product. ayyyy
&gt; interactive work where I now use Python to be my exchange layer between programs and peripherals like getting the CANbus info from a Ford Mustang and drive it into a game in UE4 to let drivers drive real cars while viewing the game world in VR That sounds interesting/fun as hell.
And I happen to have multiple monitors... 
yup
yea, easy. except it changes. it wanted it to be so that the ultimate objective is to provide a sum, BUT if two numbers in the array repeat you must find the lowest number possible that makes each number unique, and then find the sum. if you are given [1,2,2,3,4,5], i would have to return [1,2,6,3,4,5] as 6 would be the lowest number that would make each number unique. then return the sum
from the sounds of things, this is going on windows
Lol I think they have me on a block list. They used to respond but now even if I tweet them normally they don't. It was mostly for fun. 
&gt; If
If you're talking about the chat bot I can't. Other than the dumb things it does it's all internal stuff that if I took it out it wouldn't make sense. 
Yeah I'm really curious about this...
&gt; rning by reading Learning Python by Mark Lutz nice. currently reviewing part VI of the book
Programming related interviews generally involve algorithms or math problems. For math problems like the ones here: working on the [Project Euler](https://projecteuler.net/) is a pretty good way to practice. As for the other half, you'll need to do research into how to implement programming algorithms. [Here's](http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/) a list of some of the algorithms asked about for interviews. [Here's](http://interactivepython.org/runestone/static/pythonds/index.html) a good resource for python with data structures and what not.
Lmao! Finished that for ya
No, they record the sermons then put them online...
They look like the Tamagotchi's everyone (except me) had at school!
Do you have a github link for that?
I think its the OP's fault. Or mine.. WHO KNOWS? Tell her that you wanted to spend more time with her ;) so you maked computers do these kind of jobs. jk 
So basically an unsolvable problem? Or at least O(n!)
Interesting problem. Did they specify what order of complexity they were looking for? 
Then stop the interview right there. These are math questions not programming questions.
At last someone competing with unittest in the "least pythonic" category.
That would be fine too, just didn't want to list every option.
you're confused; the 5th edition of the book is the latest. the book is divided into parts or sections, i'm reviewing section VI. i am in no way related to the making of the book nor do i even know if there's a 6th edition coming out.
 def weirdop(val): x = set(val) i = 1 while (len(x) &lt; len(val)): x.add(i) i += 1 return sum(x) 
You sure it didn't install under 2.7? Do this: pip list | grep -i "matplotlib"
friendly plug for /r/flask
while true, do your program. Prompt to repeat, if not yes, break. 
I love Kivy, but IRL distribution was difficult because sound was critical for my project.
Nice work. Any specific reasons not to use docker for this ? Would make it easier to use I think ... 
I had fun opening and closing my mothers blinds with servos when she was away. Not one person involved in the outcome. Perfect! + Twitter can do some mad shit if you hook it in. Tis cool when something on your desk moves when someone on the web tries to (such odd). + Reddit also. + PIR sensors are good for simple home automation. Just be careful on the time delays.
First off, understand that 21 hours is pitifully little time for beginners. I've been teaching Python to kids for a few years now and the biggest hook I've found is GRAPHICS. Pygame may be too much to take on in 21 hours (and when the kids ask you to help them install it at home you will go insane) but the Python Turtle library will do just fine. You have to start with some basics (Hello World, and so on), but the sooner you make pictures appear on the screen the better.
Ah I see. Thought I joined the party late. 
Nice idea....
That first one sounded like a really fun problem, I wrote up a solution in ~30 lines and then I deleted it all and came up with this beauty. I didn't sum it because that's not an interesting part of the problem, it's super trivial to just call sum() Inb4 "I would not hire you if you wrote this in an interview" def lowest_uniq_list(arr): """ Given a list of numbers returns a set with any duplicate numbers replaced with the lowest possible value in order to create a list which does not contain any duplicates. 1 is considered the lowest value """ poss_nums = set(range(1, max(arr) + 2)).difference(arr) number_dupes = len(arr) - len(set(arr)) return set(arr) | set(list(poss_nums)[:number_dupes]) print(lowest_uniq_list([1, 1, 2, 99, 99, 3, 4])) #{1, 2, 3, 99, 4, 5, 6}
I using PyCharm on a 4K screen. After clicking "more" on a piece of code, the text in the tooltip is so small you'd need a microscope to read it. Is the microscope part of the Pro version?
&gt; Honestly, I have no desire to work for you if this is what you are expecting a web developer to know when you hire them. These questions are great for a Number theory final, or even a discrete mathematics quiz... but web development has zero to do with finding primes... unless of course its a math website about prime numbers. That's a bit extreme. Programming often stalls on problem solving. Tests like these check problem solving skill. They want to test candidates based on what will prevent them from being autonomous.
Sounds great. Thanks for the help! Just had a few ah ha moments with Python, Grove sensors and RPi. This UI/GUI arena looks to be the next area I look into.
It supports Vim and Emacs on the Mac version. Maybe it's just Linux that doesn't. 
It should work on anything. `[1, 2, 2, 2, 4]` becomes `[1, 2, 3, 5, 4]`, which sums to 15.
Damn that is a pretty good point, welp, looks like my solution sucks for big numbers. But it is faster than all the others on reasonable lists.
Crime Forcasting project with 2d Arrays
You can create pretty impressive stuff with Kivy. Good for making nice UIs, games, etc.
/r/learnpython
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Haha thanks man! It's a doozy for sure!
I agree, none of those problems sound impossible, And since these problems are normally about seeing how you approach problems, throwing your toys out the pram because they're non-trivial isn't the desired approach. I recently had an interview where they had me whiteboard the Josephus problem. After I brute forced it, they told me that if you convert n to binary and do a cyclic left bit shit, that new number is the fastest solution to the problem. They didn't expect me to know that, or to work it out, they just wanted to see how I would go about the problem.
I'm Manx, but living I'm Ireland. I prefer mixing miles and litres used. Strange I know 
Basically the only tutorial that I found for automating Acrobat Pro was [this one](http://kitchingroup.cheme.cmu.edu/blog/2013/11/23/Automating-Adobe-Acrobat-Pro-with-python/). It's a good starting point. From there, the only other real resource is the [Adobe SDK Documentation](http://help.adobe.com/en_US/acrobat/acrobat_dc_sdk/2015/HTMLHelp/#t=Acro12_MasterBook%2FIAC_API_OLE_Objects%2FOLE_Automation2.htm) which is somewhat of a pain to go through. The OLE API is somewhat limited in what it can do. I had an action in the Action Wizard that I had to rewrite into pure JS to have it work with Python. And to insert the JS into the PDF documents that I was working with, I had to use a folder level script which can be any .js file that you put in the %appdata%\Roaming\Adobe\Acrobat\Privileged\DC\Javascripts folder (which you'l likely have to create). Here's basically the Python function that I put each PDF through (I'm not at work so I'm going off memory). app = Dispatch("AcroExch.AVDoc") app.Open(src, src) pddoc = app.GetPDDoc() jsOb = pddoc.GetJSObject() jsOb.theFunctionInTheFolderLevelScript() pddoc.Save(1, outputFile) app.Close(-1) 
PyPDF2.
Sure, here you go! https://github.com/nraval1729/cliNews Sorry, I didn't know about BeautifulSoup back then. The way I use it to put it in my bashrc file and it prints the news every time I launch my terminal. Hope this helps! Let me know what you think :)
To get slightly more specific, the company that I work for is interested in a specific type of ad that is in classifieds sections of newspapers. And certain newspapers only post PDF versions of their classifieds sections online, which is a major pain in the ass and hence the motivation for doing this. 
i wonder why they don't use pandas.
You kidding me? They're such lazy creatures.
I'd be interested in seeing this if you wanted to post a code repo. :)
&gt;Applying this approach requires learning to program a computer, and so this text interleaves a complete introduction to programming that assumes no prior knowledge. &gt;Data science also requires careful reasoning about quantities, but this text does not assume any background in mathematics or statistics beyond basic algebra. Probably because of this, I'm guessing. Keeping it simple. They do use pandas a bit in the background of the companion [package](https://github.com/data-8/datascience) they created for the text.
That running list is hard to update because you need to delete numbers you run into from it. You should try this. I don't think it will even be linearithmic.
Multiplayer game server with twisted framework (client written in of all things, GameMaker). More newbie with Python but so far it's going great and is actually playable without the features I'm adding. Love Python!
I learned how to write tests from James Shore...here's the link to he's free videos on how to write tests for Java: [lets-play](http://www.jamesshore.com/Blog/Lets-Play)....he also has a website devoted to writing tests for java script: [lets-code-javascript](https://www.letscodejavascript.com)
I am currently using hugo, but it seems like pelican has all the goodies these days. should i switch?
Sure, here you go. https://github.com/FloresRobles/sp-news
Uninstalling the "agent" on MacOS (which Atom helpfully installed on its own a while ago), was also a real pain.
I have not used hugo before. I think the advantage of pelican for me is python. If you often use jupyter notebook(which is also based on python) and want to publish it to your blog, probably you should try it. Pelican may be the most popular python based blog system. I am new to pelican so not familiar with any of them. As far as I know, the themes of pelican are not as rich as hexo. 
Nope, its for a machine learning AI that learns to play Open Hexagon: https://www.youtube.com/watch?v=LIoIkDQkyzg https://github.com/bhillmann/dex I am implementing A3C and would like to gather experience from multiple game instances to de-correlate learned instances, thus parallelization will help greatly.
Are you absolutely married to Win api's for this? You'd probably have a less demanding task if you can swing doing this in *nix. Because I know how I'd do that almost immediately, Win is another story. 
 def getUniqueListSum(list): list.sort() twice = [] avail = [] t = 0 for i, x in enumerate(list[:-1]): if x == list[i+1]: twice.extend([i]) diff = list[i+1] - x if diff &gt; 1: for c in range(1,diff): avail.extend([x+c]) while len(avail) &lt; len(twice): avail.extend([max(list)+1]) for x in twice: list[x] = avail[t] t+=1 return sum(list) 
Maybe they think the students will have 200 million row data sets? It take pandas 8 years to work that! (I'm kidding, I love pandas)
https://github.com/tuomasjjrasanen/python-uinput
Just a quick try, I think that should work for most cases I considered. I agree its kinda an ugly way to do it but my mind went to a sorted method and that's what I would have attempted. 
You need to tell the instances which device to listen to somehow, I didn't dig at all on open hexagon, but I assume that can be configured at launch or something. Then it's a matter of pooling a bunch of virtual input and switching around to the appropriate output when needed, recalling that GIL is going to mess with you regardless. import uinput device1 = uinput.Device([ uinput.KEY_E, uinput.KEY_H, uinput.KEY_L, uinput.KEY_O, ]) device2 = uinput.Device([...]) device1.emit_click(uinput.KEY_H) device2.emit_click(uinput.KEY_E) ... These will all be firing in /dev/input/eventX - each device getting it's own character device there.
Ok, thank you! I'll likely try this out in the near future. As an aside, you mentioned configuration at launch. I am fairly new to the concept of interacting with arbitrary programs with python, so are you saying to somehow launch the game such that there is some method of calling it directly? (Such as through the subprocess module?)
Sure, can I get a list of everyone _you_ think is a douchebag? I'll immediately stop glamorizing them.
Alright, thanks a lot! I'll see what I can do with subprocess.
Godspeed
Things that are very "tangible" are the way to go IMO. The chat/twitter bots and game cheats idea is very cool. Teaching them how to use flask and deploy a real website, like a social network, might be fun. The fact that scripting cursor movement is very easy and tangible (it's very obvious to someone what they need to do, no API documents needed) makes writing farmville bots, for instance, a fun exercise in automation. Keep it as practical as possible. Learn the language while doing. It's very difficult for a new programmer to make sense of abstract concepts like objects, classes, and list comprehensions until you see how they work and what you can use them for. Obviously you have to start with some building blocks. Maybe follow a free book/guide like learn python the hard way until you're at the point where students can actually grok what they're doing, then move into projects.
&gt; Who cares? What makes this relevant to the python community? A large portion of people - many of which may be newbies looking for a community. It may not be many of us but enough that it matters - it drives people to our community. Comments like yours could be misconstrued as unwelcoming to those that are pointed this direction. While it may not be what you meant - just be conscious of the possible effects. &gt; I don't come to r/python to 'keep up' with famous people. There is probably more than a few things you may need to filter out. Just add this to the list and move on. It's kind of arrogant to think that just because you don't care - no one does. &gt; Also linking to a tweet, without even a description in the post for context, is hardly informative or interesting python based news. Valid. Titles on Reddit seem to be like naming variables in code.
I agree. The focus should be on making the post *more* relevant, or as 'relevant as possible', not on my feelings about it. Thanks for the feedback :) 
People like you make me happy. Only in the Python community have I ever seen someone take in a opposing viewpoint, actually consider it, and then agree with it. I feel like in a lot of other places this would have turned into bickering back and forth, but instead it led to constructive feedback where someone actually took the advice of someone. If I wasn't a broke college kid you would be gilded. Edit: That's not to say it doesn't happen in other communities, just that it's rarely seen by me in places other than the Python community. 
&gt; See http://stackoverflow.com/questions/31949760/how-to-limit-python-traceback-to-specific-files Answers the question quite perfectly – Fruch 
Shortest solution 
Hmmm.. So first off thank you so much for replying!! It means a lot to me. He briefly mentioned named parameters but I think he said it will be covered later on. Second: for the 2nd loop; while (rangeNum &lt; current): print(0,end = " ") rangeNum = rangeNum + 1 print() the print(0, end = " ") in combo with the rangeNum = rangeNum + 1 continues to print out values IN THE SAME LINE, as long as the while condition/statement remains true? Why wouldn't it print a zero everytime it loops? Also I checked in the interpreter what print() does and I was right! It prints nothing but why would he put/use it here? Please explain. Lastly, I checked the link and it works (it that is what you meant lol) it is the same link he posted on his ppt slides. Though it only seems to confuse me more. Thanks again! 
FYI: it got removed in /r/django because AutoModerator doesn't trust brand-new accounts that rush to post.
...windows? Call your headhunter.
You can do it tactfully. "If these are the types of problems I'll be solving on a day to day basis at your company, I don't think I'm a good fit for this position." Either the interviewer goes "oh yeah this is just fucking math I'm a moron" and has a backup set, or you leave unmemorably. I've dealt with a question like that in an interview that was just way out of the job domain and just went "No idea. I've never needed to solve anything like that before. I'd google it to start." He gave some other simple questions that were fine. I crushed the interviews from everyone else, got the job, and then quickly learned that that person should not be giving interviews alone, and he gave them paired for a while thereafter. Not a bad programmer, he just had a weird (mirrored) idea of what problems "smart" people could solve.
Working on the new spiderman homecoming movie. Using Python to build tools so I can work faster as we approach delivery
Is pandas not great with larger sets? Isn't it more an issue of fitting it in memory?
At that age, I'd start with the basics for 3-4 weeks: data structures, basic constructs, functions, executing programs. Maybe classes- not sure. This is nitty gritty and boring, so you need practical applications interspersed with the lessons that will have applicability later on during the course. For me, board games are the obvious answer. They have simple but very specific rules and can easily be broken up into small solvable problems for homework. Write a function to roll two dice and find the sum. Draw a random card from the draw pile and add it to the discard pile. Figure out if a player in Risk has a set that can be turned in. This is very specific domain knowledge but lots of kids are already going to have it and will be able to help others. You should have (or find online) a few different runnable templates of existing games. Then have the kids design and build their own game by editing one of the templates. Have them come up with some distinct rules for a new game that's similar to one of the games you picked. Connecting them to graphics is hard. It's only worth the effort if they can mostly ignore it, because teaching graphics and programming at the same time sounds like a nightmare. But at the same time, having a game that's just text is straight out of the 80's and that won't appeal to to many people. There's probably a good middle ground, but maybe you have to lessen the scope of games. That's what I'd try! But I've never done this before either. :D
You should 100% take an hour or so to learn a version control system (VCS) such as git. Try https://www.atlassian.com/git/tutorials Git will save. Your. Life. The first use case you might think of is project-wide undo, but it gets better. You might edit one file and your friends edits together and now they don't work together. Oh no! But what if you had access to previous versions of both files...and you know who edited which parts of them! Use a VCS.
You need to use the [random](https://docs.python.org/3/library/random.html) module from the standard library. import random jobs = [job1, job2, job3] job = random.choice(jobs) return job P.S. If you are using 3.6 and want to choose with different weights for each job, random.choices is available. 
I think it means *something* about your intelligence whether you can solve a logical question or not.
I looked through your code and I'm a bit confused about what "class" is. 
If i was interviewing you and you didn't event attempt to submit code at all for the problems I would probably pass. I would consider hiring someone who at least knew how to show me a sum even if they didn't understand the second step.
Fantastic resource !
Someone who can't install vagrant and run `vagrant up` probably doesn't have the aptitude for playing around with deep learning either.
Unless you're on a time crunch, definitely set aside 30 mins and learn how to use git.
r/learnpython Also on reddit indent your code by 4 spaces so it'll be properly formatted.
It would be easier to get just a raw list instead of that nested key value you have at the top. Ideally you want this: {% for device in devices_list_name_here%} {{device.os}}, {{device.status}} {% endfor %} Otherwise you will have to get inside the object and then iterate on it. Something like: {% for device in devices_object['Procurve Switches'] %} {{device.os}}, {{device.status}} {% endfor %} Iterating over the items on the outer most dict won't work. There is only one item. You want to iterate the underlying list. 
Wise words: ask yourself, what's the real business value of these upgrades to the latest and greatest DB or version of Python? What are the pain points your client is experiencing?
I am by no means an expert, or even a computer scientist, I'm a biologist who had to pick up programming during my masters studies. I took a couple of classes on it, some more useful than the other. In reality what helped me most was having to actually do something, my supervisor gave me a two month project which involved a lot of data gathering and manipulation. It took me a while to write my first "real" (non-practice) scripts, it took a lot of googling and stackoverflow diving, but in the end that's what taught me the most (and also boosted my confidence quite a lot). After a while a couple of things that were confusing at first just "clicked". So essentially what I'm trying to say is pick a problem you can realistically solve, and try to do it in python. 
I'm guessing your not talking g about the animal...
Yes but really nothing standard is. You need to use things like spark or other distributed computing frameworks
Yes, exactly. The main problem is actually that above the part that contains template variables there are parameters that need to be parsed/extracted before the template variables can be replaced because the variable values depend on the parameter values. So in theory we'd have to parse the unprocessed YAML file with the template variables still there, extract the parameters, replace the template variables accordingly in the original YAML string and parse the new YAML string again. The parsing of a YAML file with template variables can be problematic due to the format of the template placeholders. We can of course mark them as string in the YAML code (like, putting them in quotation marks) but in that case if we want to replace the template varible with a number format like int it won't work anymore in the second parse iteration because the value would also be parsed as string because of the quotation marks. 
Gee, you seem angry.
Good on him. We need more folks at the top to keep pushing/using/talking about technology. Might end up inspiring kids to look into it more seriously.
Integrate it with [homeassistant](https://home-assistant.io/)! You can have a notification sent to you when the weather is fine and a machine is free, for example :)
May I suggest migrating to [homeassistant](https://home-assistant.io/)? All this is supported, and much more!
I wondered about the statistics of using dice as opposed to using randrange. Thanks for the interesting read!
Thank you. You saved us from that XKCD situation.
Someone forgot to de-bug their program. ^im ^sorry 
And like the part 1, the same terrible formatting and visual design which make the article impossible to enjoy.
Thanks for the article OP. Just a quick question. I'm currently doing a Crime prediction project and I'm reading data from a CSV file and putting that into a 2d array. I want to use Pandas and I'm wondering if you used it before and what the benefits are to reading the CSV file and iterating through it 
Yes you are right. We are working on it. Thanks
Glad to see Andreas' and Sarah's book getting some well deserved publicity -- it's a great intro to machine learning, and python makes everything easy and readable, and hence accessible. It's worth the read even if you think you aren't necessarily interested in ML, because you might find that you have a use for it after all once you read more about it.
I have a minor in computer science, but that was all Java. So I had a solid background (by no means immense, but decent enough) in the theory. Then I started doing python on my own projects and slowly expanded my abilities by wanting to learn to do a certain task, using Google to find the required library or module to look at, play with them until I got it to work like I want, repeat. It's definitely a question of learning some basics, and then going out and doing things. Tutorials are a great way to learn new things that you can then try on other problems. The one thing I would recommend to everyone is to always be on the lookout to see how people solve problems. Twice I was talking to someone who asked me for help initially and when I looked through their code they had found a very cool unique way of solving another problem that taught me a new way to use a function. Always be open to learning new things.
I'm taking a computer science course at my high school and after learning about MIT's app inventor we learned to use Python
I pretty much had no choice about learning it when I accepted a role in a company who's tech stack was mostly Python. Didn't even know how how to Hello World in Python on Day 1 on the job. Luckily I had already established my programming chops in other languages before so it became a job of mapping my existing knowledge to Python's way of doing things. It essentially​ became a huge active code reading exercise. I believe that to be the key to learning any language if you already know how to program; Just read code to get those ah-ha moments where you map a concept you know of to the way of doing it in a new language. One thing I remember struggling with at first were circular import errors. I was mad at Python for not taking care of it behind the scenes like some other languages do. Then I realized these other languages had the training wheels on and Python was forcing me to be a little less dumb about it. If you don't know how to program at all, then you will need to learn your basics from somewhere. Luckily the internet has nearly endless resources to help you getting started nowadays. My advice would be to not wallow in the learning too long and start tackling increasingly difficult problems and projects that you will commit to seeing through. Write shitty code, make mistakes, learn from those mistakes, be faster and wiser next time around; That's what we call experience and spending more time in books won't give you that. Also, I see a lot of new programmers express their discomfort about copy/pasting too much... The only reason you should ever feel bad about copy/pasting is if you aren't making an active effort to understand what is happening in that snippet. It is part of the job and we still do it on the daily; no shame in it! All this to say that being forced to learn Python happened to be one of the happiest accidents in my career. That was 5 years ago. I'm a maker above all so having an easy, clean-looking high-level language that has ridiculous depth in terms of the library ecosystem allows me to do more with less and I'm absolutely in love with that idea. Python is now my main language whenever and wherever it makes sense to use it.
I followed the official tutorial and docs. Honestly, they're great.
Learning python is absolutely a no regret experience, It is also my main scripting language.
Great, looking forward to it!
Yes, but sometimes it is intimidating for a beginner 
Started with a couple of hours of Code Academy, then began a project (writing a parser and a set of unix-like tools for manipulating a vendor configuration file) I'd wanted a solution for for ages. I just started googling each thing I needed to do to get there, learning the APIs as I went. "Python3 How do I open a text file and read it line by line?" "Python state machine parser" (an architectural mistake that cost me a lot later on, but it worked at the start) "How do I store a tree in Python 3?" and so on and so forth. OK, I started with some programming knowledge from other languages and systems, but I hadn't really written anything like this before. It took me about two months of coding at night to get to a minimum viable product. The key to learning and writing this toolset was making a lot of mistakes and powering through, scratching my head, asking questions and just continually working towards my goal. It turns out that the hardest parts were figuring out what the proper terms for things were, like "AST" (abstract syntax tree). Until you find the right term it can be a little tricky to find what you need. What helps there is asking people questions, but then you'll have to figure out how to clearly express what you want to achieve. Find something you really want to see a solution for (though I recommend picking something that there's already related work that you can use as a model). Just start googling each piece as you need it. Ask clear questions with examples. Be prepared for people to poo-poo you and your idea. Some people suck, but others are amazing and will help.
Or [checkio](https://checkio.org/). It offers logical puzzles (not based on prior knowledge of anything) and requires you code a solution to them. They begin moderately easy. You'll spend most of your time learning to design good algorithms. And once your code passes the tests, you can review others' solutions to compare/contrast coding styles.
Input: [-1,-1] {-1, 1} -&gt; 0 # Your solution gives this Even though the answer should be {-1, 0} -&gt; -1
If you want to embed the parameters in the same YAML, and if you're only doing simple data replacement, then perhaps you can try YAML's native anchors &amp; aliases? # example.yaml params: &amp;params PARAM1: &amp;P1 5 PARAM2: &amp;P2 "five" PARAM3: &amp;P3 [*P1, *P2] data: &lt;&lt;: *params more: - *P3 - *P2 that will load without the need for templating and will preserve the original data type. You end up with this python dict: # yaml.load(example) =&gt; { 'params': { 'PARAM1': 5, 'PARAM2': 'five', 'PARAM3': [5, 'five'] }, 'data': { 'PARAM1': 5, 'PARAM2': 'five', 'PARAM3': [5, 'five'], 'more': [[5, 'five'], 'five'] } } If you need to do true templating, such as building a list/array with a loop or formatting strings with other strings, then you should probably try to store the parameters separately. 
Join Quantopian, then spend a couple of days there (or more). Complete their 11 basic lessons, then move on to their detailed lectures. You will not only find detailed lectures about backtesting, but also the means and the data to experiment with backtesting. And Quantopian is python-based with their own built-in IDE.
Depends, what kind of application is this for? Is it a one off that you need up an running fast? Flask. Is it something that you will be maintaining over a long time? Django is more structured which will help with that.
And what has a steeper learning curve ? 
I was in a malware analysis class in graduate school. We were given an assignment to write a program that would recurse through a directory and search through each file for signatures, given a signature file. I procrastinated until the Friday before it was due (due Monday) and I was freaking out that there was no way I could write that in Java, C, or C++ (the languages I knew) in that amount of time. A friend told me "do it in Python" and I called him crazy because it would clearly take longer to learn a new language AND complete the assignment. His second hint was "go look at the documentation for os.walk". I finished the assignment in 1 day with 40 lines of code (including comments). I've been a heavy python developer ever since. 
The partially derivative comment is absolutely amazing haha
&gt; something about binary representations (didn't even try this one. I have no idea how to get a binary representation) &gt;&gt;&gt; n = 0b100010100110010010 # binary literal &gt;&gt;&gt; n &gt;&gt; 10 &amp; 1 # 10th bit 0 &gt;&gt;&gt; n |= (1&lt;&lt;10) # set 10th bit &gt;&gt;&gt; n &gt;&gt; 10 &amp; 1 1 &gt;&gt;&gt; n # as number 141714 &gt;&gt;&gt; "{:b}".format(n) # render to string of '1' and '0' '100010100110010010'
I'll look into that. Thanks.
He put RADIO. On the INTERNET. (this guy fucks)
It's one of the classic ML examples using the Iris dataset. He literally copied it into a Jupyter notebook as a learning exercise. No big innovation or amazing coding, it pretty much is a 'Hello World' for ML 😂 Also, I'm not sure what classifying flowers has to do with the 'New NBA' lol. (yes, I get the symbolism - he could have picked a much better example though) 
Functools, pep8, multithreading, generators, etc... 
Elaborate "etc" :)
This really seems quite useless. Why wouldn't I just yield myself? Weird to depend on a package for that. Also why would you have: ... except FileNotFoundError: raise FileNotFoundError('File not Found') 
There are more pieces included in Django that you need to learn but the alternative is that you have to learn Flask and then figure out what Flask extensions and other packages you need and learn them. In the end I'm not convinced that Django is harder.
This is probably a joke. Little bit early for april 1st. https://github.com/stasfilin/fastread/blob/master/fastread/core.py#L8 
First thing to figure out is whether the bottleneck is in your Python code there or not. An easy way to do that is to send the same request through something like `curl` and time that on the command line. If the latency is similar, then the problem is not with your code, but with the network, the OS, or the hardware.
I concur. This is basically the 'hello world' of ML. Don't know why your post got some many down votes, it should be obvious. As you said it is the hello world of machine learning (that is also a small dataset). In addition it should be obvious he is doing simple ML because he is reading and INTRO to ML book, using knn (works but simple, especially when prepackaged), has about 15-20 lines of code, and is running it on a laptop. He is also using the iris dataset which comes pre formatted with all the features he needs. Good for him for learning, I am no expert yet either, but I've done enough to tell he is just getting started. Anyone who says otherwise has no idea what they're talking about and is a Mark Cuban fan boy.
At least for Python, native Unicode support (the project features heavy text processing, and they want international localization support down the road). I'm also looking at this for maintenance down the road for *other* developers. I'm a seasoned software developer, but this is actually a project that was supposed to be designed for undergraduate students to work on (it's at a University). I scored the job after the previous developer bombed horribly, ha.
Question about Hypothesis: Running tests with that tends to be extremely slow. Is there any way to make it faster?
Piece of cake, as an experienced programmer I just followed "Dive into Python", see the link on the right of the page under "Online Books and Resources".
Wow, that was an incredibly unclear question. Just so you know, this is called a "Mex" problem, or "minimum excluded value" (which is google-able). The only reason I know this is because I had to solve a Mex problem for a game theory math class I took. But even after reading your question I didn't understand that a Mex was part of it... Edit: I probably would have done something like: unique = set(input_list) while len(unique) &lt; len(input_list): unique.add(MEX(unique)) # where MEX returns the minimum excluded value from unique return sum(unique) By breaking it down into two separate problems: 1) a mex and 2) a summation, the "pseudocode" becomes much easier for me to write.
I'd suggest you use something more modern than IRC, something like Discord or Slack. 
Not all radio but IU sports games. It started out as a way for Alumni to listen to home games anywhere in the world. They had a number where you could dial in and it would let you listen in to the local radio broadcast. (Imagine the NCAA letting that slide these days). Then it moved to the Internet audio and video. [Leading gateway agrees to swap $5.7B in stock for video broadcaste](http://money.cnn.com/1999/04/01/deals/yahoo/) [He just got really lucky cashing out of Yahoo before it burst.](http://finance.yahoo.com/chart/YHOO#eyJzaG93QXJlYSI6ZmFsc2UsIm11bHRpQ29sb3JMaW5lIjpmYWxzZSwiYm9sbGluZ2VyVXBwZXJDb2xvciI6IiNlMjAwODEiLCJib2xsaW5nZXJMb3dlckNvbG9yIjoiIzk1NTJmZiIsIm1maUxpbmVDb2xvciI6IiM0NWUzZmYiLCJtYWNkRGl2ZXJnZW5jZUNvbG9yIjoiI2ZmN2IxMiIsIm1hY2RNYWNkQ29sb3IiOiIjNzg3ZDgyIiwibWFjZFNpZ25hbENvbG9yIjoiIzAwMDAwMCIsInJzaUxpbmVDb2xvciI6IiNmZmI3MDAiLCJzdG9jaEtMaW5lQ29sb3IiOiIjZmZiNzAwIiwic3RvY2hETGluZUNvbG9yIjoiIzQ1ZTNmZiIsImxpbmVUeXBlIjoibGluZSIsInJhbmdlIjoiMnkifQ%3D%3D). IIRC there was a minimum amount of time he had to hold Yahoo stock before being able to sell it and he did just that. Source: I've played Rugby with him. Never seen him in anything other than a tracksuit. Guy is living what I'd do if I suddenly became rich.
Code academy to get the syntax down. (I already knew multiple other languages). "How to ___ in Python 3" for anything new I come across.
&gt; (this guy fucks) 
God damn, you guys will have the world on a string. I'm 34 and I never even touched a computer in k-12.
You could use Cython to compile your code. It should speed things up a bit but don't get your hopes up too high ;) 
I wish I had the knowledge to help with this, playing pirates when I was younger was always a joy. Good luck!
Why, though? I'm probably in the minority, but I really prefer plain old IRC when the point is to type words and have groups of other people see them immediately... If I need to collaborate on documents, share inline graphics, have granularity in access control - I can see the need for newer stuff. ...But when I can toss eggdrop and ircd on a VM with 1 gig of ram and 1 vcpu to manage what amounts to a shared clipboard among my team, Slack is the slacker. *rimshot*
But... muh user friendly software... Seriously though, wouldn't setting up, say a Discord server be easier and less costly? I haven't used IRC myself but I know that it requires a server which requires maintenance. Why bother when you can have the stuff set up for you?
Is that a good book as a starter resource? I know absolutely nothing about ML.
Don't you mean in a string? Well in c I guess it in a char array.... I'm leaving now.
&gt;Getting his pyth-on FTFY
So what have you accomplished 
I mean...I knew all of that, but I was making a Silicon Valley reference, because Russ Hanneman is clearly a Mark Cuban caricature.
Yep, one can get by using packages / copy and paste and if that is all you need then this is the best solution (I agree with you). It was mainly a rebuttal to the original comment saying this seems like heavy stuff when in fact it is beginner ML. 
Only one I'm familiar with is https://github.com/harvimt/quamash
Sadly, it only modifies the default schemes
Darkula is good enough for me
What would be good for a Q/A site, social network, personal blog, forum, business website as an example ? 
Maybe this is helpful? https://www.reddit.com/r/Python/comments/33ecpl/neat_discovery_how_to_combine_asyncio_and_tkinter/
a bit of googling yielded this: [async_gui](https://pypi.python.org/pypi/async_gui/0.1.1) however, I am not sure how up to date this is. From what I can tell, you should also be able to use PyQt + quamash to create a GUI and mix in some of the python3 async features.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hopefully! I'm the only guy who takes coding seriously at my school so we'll see, in December I talked at a assembly about how I started coding, how much I have learned, and how it is the future. That was definitely a cool gig 😄
Cython isn't going to help with IO bound work. There might a speed up in the code to build and handle responses using pypy, but the network is typically the bottleneck in this situation. 
We discussed that as well, but we were thinking about setting up the IRC server itself as part of the intro. As well as the lack of need for anything other than text. But they're both options, we need to evaluate them and see if the implementation is any harder. 
Haha nice 😄
The next stop I'd make after upgrading to an actual session would be to look at maybe doing the requests concurrently with threads - there's an extension to requests that puts outbound requests in a thread pool and generates futures to hang callbacks on. There's also the aiohttp client if OP is comfortable with asyncio - it's not for everyone but was designed for this sort of situation. 
fwiw I just tested all of those with pendulum, and the list in indeed the same. *for future viewers*: The list is the same. I tested this by parsing some arbitrary time under each 'city' string (from pytz) in pendulum. https://en.wikipedia.org/wiki/List_of_tz_database_time_zones ?
Default one.
Bless your heart
IDK, I mostly need one off little web forms or REST APIs so I typically end up not needing all of that stuff. Just want to return some JSON if you catch my drift :)
Darcula all the way.
Only done it today. But I've just semi-automated trading on the FIFA FUT game. I open up Bronze card packs. Send them to my transfer pile and the code will go and check the web app for the current market value and list the card. A good way to mine coins. I also automated my football (soccer) predictions that get submitted to a league. Gain points for best predictions. I scrape odds online to get the bookies favourite prices for correct score and parse that to create a text file. I use workflow app then to retrieve the text file in Dropbox to make a text message. 
&gt; Default Darcula, &gt; Darcula with colorblind filter, &gt; Darcula all the way. Darcula - a darker theme with legible text is all I need. Lighter/white themes make me strain my eyes more than necessary which leads to a headache - a never-ending cycle.
 Here's a modified version of the code that also runs in Python 3. Everything creates a list named `result`, since in Python 3 `map` now returns a `mapobject`. List comprehensions are also added (and they run almost as fast as `map`). import datetime alist = [str(x) for x in range(10000000)] print("\nStandard loop.") a = datetime.datetime.now() result = [] for item in alist: result.append(len(item)) b = datetime.datetime.now() print((b-a).total_seconds()) print("\nStandard loop with function name in local namespace.") a = datetime.datetime.now() result = [] fn = len for item in alist: result.append(fn(item)) b = datetime.datetime.now() print((b-a).total_seconds()) print("\nUsing map.") a = datetime.datetime.now() result = list(map(len, alist)) b = datetime.datetime.now() print((b-a).total_seconds()) print("\nUsing map with function name in local namespace.") a = datetime.datetime.now() fn = len result = list(map(fn, alist)) b = datetime.datetime.now() print((b-a).total_seconds()) print("\nList comprehension.") a = datetime.datetime.now() result = [len(i) for i in alist] b = datetime.datetime.now() print((b-a).total_seconds()) print("\nList comprehension with name in local namespace.") a = datetime.datetime.now() fn = len result = [fn(i) for i in alist] b = datetime.datetime.now() print((b-a).total_seconds()) I get the following results in Python 3.5: Standard loop. 1.728273 Standard loop with function name in local namespace. 1.706101 Using map. 0.539602 Using map with function name in local namespace. 0.536706 List comprehension. 0.668053 List comprehension with name in local namespace. 0.609126 
I'm not sure I understand. What are you trying to sanitize things for? HTML?
Something like this ? with a cronjob behind ? http://moderndata.plot.ly/create-a-plotly-dashboards-in-under-10-minutes/
Actively working on 2 projects: The first one is a longer, ongoing one where I'm building a Playthrough Manager/Organizer for video games. The idea is to have an up to date database of games from multiple platforms, be able to plan out playthroughs with metadata, objectives, achievements and be able to journal them with text, images and video. Once you have a few completed playthroughs, we can use the data to make nice visualizations, give you insights and make game recommendations. The second one is a little sillier and mostly just for fun. It is a video thumbnailer / summarizer that turns any video (local, youtube, vimeo etc.) into a short GIF. We leverage Scikit-Video, Scikit-Image and FFMpeg to do this and select our thumbnails based on scene detection algorithms. There is an ambitious goal to be able to hook it up to live streams but I'm not exactly sure we'll be able to make it work. All of these of being are / will be open-sourced and are developed live on my [Twitch Channel](https://www.twitch.tv/serpent_ai) on weekends and select weeknights. Streaming programming turns out to be super fun so if it has ever crossed your mind, don't hesitate to give it a try and/or join the community. It is super nice and non-toxic compared to the rest of Twitch. 
Neat, but I don't really understand why would you do something like this. Can you give some use case? Tasks are running on a background anyway. And you can just throw more threads in your celery pool if it's long IO-bound tasks. 
github theme with plenty of whiteness 
Monokai. Always monokai.
Darcula. Once you go black you never go back.
StimulateMe! WhyIsiNeverQuiteWasAdminOnSoManySubReddit's?
Yeah my only complaint with Darkula is that it's really hard to read comments, the contrast is way too low. 
It's that the NBA is evolving from arithmetic statistical models and beginning to find applications for ML. Cuban has the resources and problem at the ready to use ML on this scale, and so I assume he wants himself a baseline understanding in order to employ actual ML experts to build NBA ML models. 
[removed]
Thanks for this. I'm still trying to wrap my head around decorators and this cleared up a lot! 
Thanks, very informative. I think I should read up on cron!
Pygame with Pyglet being a close second. 
Darcula IDE theme, but I use monokai for the editor and find window/panes. Monokai for life!
Monokai for me. Dracula is good too. It's all about the dark background; much easier on the eyes. 
Dracula!!
Depends on what you want to do. Flask is great for small apps regardless, but forces architectural decisions beyond that. Django comes with a bunch of stuff already figured out, but you have to pay by its rulebook and infractions are heavily penalized. I work on an application that's django based but doesn't use a database. Instead it cobbles together a bunch of web APIs and uses an external json auth server. Our code is full of hacks to accommodate this. Had it been Flask based, everything would much smoother in my opinion. aiohttp would be an even bets choice for it by let's not go there
Check out Dayle Rees's color schemes, he has a bunch that are ported to most of the major editors/IDEs. #[Preview Themes](https://daylerees.github.io/) #[Download @ GitHub](https://github.com/daylerees/colour-schemes) &amp;nbsp; I personally use a modified version of **Tron Contrast**
Darcula with a few personal tweaks.
Well it's not intended to be filled with your actual interests; the ISPs will make money either way, but I can at least give the ad agency a little extra work trying to figure out what do with my 100 visits/day to diaper porn sites and craigslist searches for used tube socks.
[removed]
I've been doing Leetcode python algorithm problems daily and I feel like i'm ten times the develop I was before. I've only been doing it for a month or two.
Yeah it's not the ad companies I'm worried about it's all my searches for bots programming and cyber security that I wish to not get targeted for. Good or bad I don't want the CIA coming to me 
I'd be astonished if they were using DPI for this - more than likely they're using flow data (much, much more cost effective). And even if they were, unless they're using an SSL intermediary, SSL will break DPI - so the *most* they can possibly get in most cases is [src,dst,hostname]. The conclusion here is that they can't see which part of any given website you're going to, or your user agent, etc etc. *If* they wanted to, they could probably infer it with traffic analysis (eg, `example.com/foo.html` sources `assets-1.external.com`, but `example.com/bar.php` sources `assets-2.another.com` - going backwards they can tell `/foo` vs `/bar` by looking at which `assets-` you subsequently hit). But, I'd bet they're not doing any of that. I'd even bet they haven't bothered with *any* reference web graph, so *not* spidering (as you've done) would screw them harder. If they're involving graphs, it's probably generated *from* their data - and by not following links, you're throwing bad data into their graph. If I'm right about any/all of this, you wouldn't need a full blown fake web driver or link following - you can fuzz their stats with urllib2. They won't know the difference, and it'll confuse them more.
A data scientist will be able to filter that out pretty easily. It may already happen as a result of standard cleaning operations. You'd really be better off [using tor and https](https://www.eff.org/pages/tor-and-https).
I would also suggest using a trustworthy VPN, such as F-Secure Freedome or Private internet Access. Having used both, I suggest Freedome, it seems to play better with mobile devices.
NSA/FBI more likely. 
Then why can ISPs sell my traffic? Where is the replacement that puts *everyone* under FCC jurisdiction if it's about protecting everyone from the deception that their traffic is private?
Legislation comes in waves, just wait for the replacement holy shit
As far as the bill goes, do they get to sell data acquired before the bill was passed? I haven't seen any clear answers on this
Probably a good idea to run this in a VM, just in case it stumbles onto an exploit.
Well they *did* have to buy all those politicians, so indirectly I can pretend I don't make typos.
www.ahundredtimes.rickandmorty.foreverandeverahundredyears.com
I had this idea once before and discussed with a friend. The problem is that the nature of the dirt could be quickly "learned" and then filtered. We would need to continuously change characteristics of the false data in order to force them to update their filters and algorithms.
How about Windscribe? 
Market research.
Depends. If you have a class full of static methods (which I've seen) you're better off with a module. But I'll add a staticmethod as a helper utility that only makes sense for that class but doesn't need to access information about the instance or the class - say mapping keys from a json response to something the class expects. The added bonus is you can inherit and change this behavior in a base class of needed (not sure how super interacts with staticmethod though). 
How do? What makes you feel that you've developed? Also, what is leet code? 
Finishing up Learn python the hard way. 
Leetcode is a site with a couple hundred algorithm questions ranging from easy to hard. Hackerrank is the same and is a good place to start because "easy" at hackerrank is easier than easy at leetcode. You just have dozens of interview type problems to solve. A couple months ago I couldn't develop anything without lots of docs and googling. These sites forced me to memorize a bunch of fundamentals so now with enough time I can solve almost any algorithm problem thrown at me. I won't always come up with the most efficient solution but I can solve them.
That's a fair question, and sadly, there is no good answer. Both claim to have no records to give over. Without independent audits from a trusted auditor we can only hope they are telling the truth. If you go for a VPN in another country you run into difficulty accessing content here, and you can guarantee the US is spying on you as now they can assume you are not a US citizen and have fewer restrictions. (As if they obeyed them anyway!) Realistically, you aren't hiding from Uncle Sam either way, you can just try for increased privacy for yourself and to make more work for them. As Level1 Techs covered this week, if the feds want to spy on you they'll find a way, even if that means rerouting hardware you purchase to install a bug in the UEFI before it gets to you. But, the topic of the post was about ISPs selling browsing data, so I'll get back to that. HTTPS only limits them knowing what you looked at on a site, not which sites. Tor is great for this, but slow as molasses and many sites won't let you in because you are an evil hacker. A US VPN gets you around the ISP logging, and creates fewer issues than Tor or a foreign VPN.
This makes sense. I couldn't figure out why he wouldn't just hire someone who is an expert to do the job a million times better than he could just starting out. If that's his reason for getting a basic understanding of ml, then he is much smarter than I realized!
With HTTPS everywhere slowly becoming more standard, I was suspecting they might just grab DNS requests since those are already clear text. For encrypted flows, I suppose they could capture TCP source and destination, but if your using a hosted service with a non static IP, the destination IP address may not give you enough info. I suppose SNI is also clear text even on an encrypted session, though.
TOR sucks unless you want to do shit you shouldn't. Edit: LoL @ the downvotes. Show me your commitment to the awesomeness of Tor by making yourself an exit node.... 
The Republicans have successfully prevented any positive progress taking place. It's better than their usual strategy of actively undoing it.
Nice enough thought and all. But, among other things, this will significantly eat into your data cap.
Are you sure you don't want this instead? https://docs.python.org/3/library/ast.html
Rather wait for a replacement president.
You do realize that getting rid of a law that hasn't gone into effect doesn't change anything? Because that's what happened. You know that the ~~Telecom Act of 1996~~ Cable Television Consumer Protection and Competition Act of 1992 is still on the books and prevents ISPs from selling PII? That's right, they haven't been selling and still won't be able to sell them. How about that telecoms donate to both parties? Let's not spread the mindcancer I'm seeing everywhere else, we should be smarter than this. Please. I don't want to unsub here too. edit: I was wrong about which law it was, but [I'm right about the law itself](https://transition.fcc.gov/Reports/tcom1996.pdf), see page 113.
Stick out to whom? 
No, I don't need to parse Python, I need to match valid Python expressions within another language.
Can you elaborate?
Did you seriously just paste your code into a Google Doc? At least use pastebin or something...
poking my head in to say to do a reset but looks like you did it. idk why people are down voting this. this community has toxic assholes.
Don't believe for a second that this is a partisan issue. What was repealed was essentially a lightweight bandaid to a much bigger problem.
I think no matter what you do you're going to have to communicate to your gui via it's own thread in a thread safe way. Tkinter isn't the easiest to operate in a threaded way but it's doable with a bit of research online and getting really familiar with locking threads. I personally like wxpython, it's fast to prototype in, looks good enough for my purposes, and it's easy to write threaded functions to talk to the main gui thread.
for learning? Flask. why? you do everything yourself which forces you to learn how things really work and talk to each other. and flask is easier to work with. but for work? use Django it has all the bells and whistles built in
Source me on that.
this is true. but i think the idea is to move yourself sufficiently far from the mean of data targets that you present a not worth the effort target. still not sure if OPs idea would work though. i think a more macro approach of injecting an array of generic (but misleading) user models by a large number of people could cause enough interference to make the business case less appealing to ISPs. They are trying to detect patterns, if we want privacy, we will need to spoof them. 
I'll wait, because[ I don't think you're unbiased at all](https://www.reddit.com/r/AskReddit/comments/60nxcu/whats_the_worst_case_of_rich_kid_syndrome_youve/df8tnu2/).
I personally use 12 VPN's on the TOR. It takes approx an hour to load one reddit page.
I think he was entertaining an idea more than a process. He's suggesting you take a sample of normal internet browsers histories, cleanse them of red flags, and then access the remaining sites to make yourself appear as a standard user. 
Excellent. Now where can I find a company willing to sell others' browsing histories?
If all you ate were bamboo shoots, you'd look to conserve energy too.
Nice, congrats! 1 Beer: thanks! I come back to this sometime in the future;) Nope, I'm not in Berlin. I'm located in Erlangen (100km from Munich). Should you ever be around, gimme a ping ..
Yeah why don't you count the Ds and the Rs next to the vote record and look at the pattern 
Thanks for the in depth explanation! I suppose I could scale back to simpler methods, I'm just used to having to overkill everything. Although from what others have suggested I see a path for spoofing multiple lives of internet traffic which sounds like there's plenty of fun to be had over-engineering, so I'll manage. Although if I were collecting the data you mentioned and looking to throw nonsense out I'd look for repeated visits to hosts with similar amounts/sizes of packets transferred at semi-regular intervals, and if it didn't fit the format of something routine like checking email or reading a couple blog pages I'd toss that out for that user unless it were for a site that I had a contract with.
As of Oct 2015, [Wired Broadband Providers with Data Caps](http://broadbandnow.com/report/providers-with-data-caps/) And it's only going to get worse and worse, until it's ubiquitous and ***everybody*** is taking it up the ass.
&gt;randomly hit a different one every minute I'd think it would be more effective if the intervals were more random. So you spend 30 minutes on one site, then 5 on another, etc.
Searching the .txt of the act doesn't come up with anything, but I'm a bit too tired to parse through the document so you can have this one. However, I wouldn't hold my breath that it wouldn't be repealed. There's money to be made and a "deregulate everything" mindset. It's not groundbreaking that telecoms donate across the board, they've got plenty of money to do so. If you think one nerd whipping up a fun project out of a recent news story is reason enough to unsubscribe to a programming language subreddit then maybe you're guilty of some sensationalism yourself.
I know, just have it cycle through new subreddits every week or so!
If it's sensational to want to get away from ridiculous partisan hackery in my tech subs, then yeah, I'm sensational.
I did the same
Hey guys let me know if you have any critique on the app or my code. I will try to get the custom design section up and running as soon as possible. 
Ah, that's what I thought you meant. Security through obscurity.
I'm sad that that site still doesn't exist.
The general aim of this approach, is to produce so much extraneous data and to generalise your specific browsing so much that the data becomes meaningless (due to its generality/non-specificity) and prohibitive (due to the volume you produce). 
security purposes mostly. Ensuring that the string is not going to turn my database into ransomware, OR ensuring that my users won't somehow be negatively affected from another users input. I would say SQL injection or XSS, but to be honest, I'm not an expert in security, and so I don't want to limit my inquiry
for gtk, there is [gbulb](https://github.com/nathan-hoad/gbulb) which makes everything glib-based (gtk, gdk, gapplication) async-capable.
There's ways around that though, this is a pretty naive implementation, but you could do a lot to simulate a user on a page and generate data that appears legitimate. I wonder if it's possible to counter-machine-learn some stuff here: train it to simulate how you browse a page (auto-encoder maybe, give it data about dwell time, links clicked, etc etc) then let it loose. That might risk simulating the browsing of whoever you trained it on though, so maybe get your housemates/family to help contribute data, might produce something mixed enough do the job. Share data with other people on the net and generalise further? Just an idea.
 An you just opt out of sharing your data? I thought they had to allow you to opt out??
[removed]
It seems like it still uses dict-like objects the same way CPython does, just on top of the Go runtime. [Here](https://github.com/google/grumpy/blob/master/runtime/object.go#L40) is their definition of an `Object` struct.
Could improve the program by making it multithreaded. Each thread opens a different website and stays on each website for a random period of time before closing out.
I am writing a text search bot for Discord. It currently has commands like "what did X say about Y", functions for time zone calculations to aid in game match making and a markov chain for "impersonating" users.
So you're saying that when you get a user-inputted string you want to make it safe from everything at once? If so, I'm afraid the only solution is def sanitize(all_your_data): return '' But seriously, for SQL injections so long as you are using whatever SQL library you are using as intended there shouldn't be a problem. For [sqlite3](https://docs.python.org/3/library/sqlite3.html), that means always doing `cur.execute("your query x=?", x)` instead of something like `cur.execute(f"your query x='{x}'")`. Similar story for HTML, just use the HTML escaping of whatever library/web framework you are using. If you are not using a web framework but still want to generate HTML documents, you can use [jinja2](http://jinja.pocoo.org/) templates, which is what Flask uses. HTML is perhaps a bit more complicated than SQL because there are often more places where things need to be escaped, and maybe you don't want everything to be escaped. I've never used it, but it looks like [bleach](https://github.com/mozilla/bleach) is a neat little library for only sanitizing the potentially dangerous parts of HTML if that's what you want, but simply sanitizing everything like jinja2 would do is a much simpler, and probably just a better solution in general. Hope this helps, I'm still a little unsure about what you want.
You get this with [plotly](https://plot.ly/python/histograms/) out of the box. 
There is the [parser](https://docs.python.org/3/library/parser.html) module.
You can make tables with plotly. https://plot.ly/python/table/
Fantastic, thank you!
Unfortunately it's actually the latter and we're trying to keep the footprint of everything as small and the convenience for the user as high as possible, which means from our point of view that having only one YAML file with everything in it. Yet Another YAML file would at a first glance only further contribute to confusion. Oh, of course, thanks for the hint towards the anchors. That's actually really good to know nevertheless. 
As someone that hasn't really looked at that kind of thing, how would you filter this out, assuming they don't necessarily have the list of sites or the script or something like that?
Oh yeah, and even links. It was hard for me to find. I gotta say with the links it fills the criteria but using canvas doesn't feel right. All those features like zoom are completely out of place for a simple data table. I'll keep it in mind but for now, with Plotly as the only alternative, I'm still leaning towards angular data-table.
The vpn uses a encrypted connection, so all your isp should see is many encrypted connections to your VPN service.
Look, I don't like the NSA shit either but there's a difference between a single organization being able to get your data and anyone and their mom being able to do the same. 
All traffic is encrypted and bounced through the VPN, so all your ISP sees is a million connections to privateinternetaccess.com that they can't inspect.
TaskQue is good software to manage tasks. It has also won Financeonline "Best User Experience" and 2017 Rising Star award.
You can disable features like zoom and pan. I personally use vuejs + elementui. http://element.eleme.io/#/en-US/component/table I serve json with flask for the table and just generate divs with plotly which I embed in a jinja template. For more fancy stuff I'm starting to play with ag-grid, https://www.ag-grid.com/
&gt; Occasionally, F-Secure gets requests for Linux support. Considering the market share and fragmentation of the Linux distributions, it is currently not feasible for us to have a Linux version of F-Secure Freedome. You don't support me, i won't support you
Have you checked the [toolz](https://toolz.readthedocs.io/en/latest/index.html) group of modules? Edit: Added a better link
For reasons I cannot legally explain, I can personally vouch for PIA's guarantee. I know that's not worth much as a random stranger on the internet, but there it is
"garbage to sift through" Would it really make the slightest difference in a practical sense? I mean, I assume any time someone looks at your history they're looking for something and filter the data anyway.
Person of interest sure, but with nothing to pin on you.
I have! There's some great stuff in those modules.
[removed]
[Hiring] Python software developers for full-time in-house work at Eniram Ltd in Helsinki, Finland. Our team creates the platforms for: - data storage - data processing - interactive computing Our services are used by our data scientists, analysts and production systems in order to help shipping companies save fuel and reduce CO2 emissions. On the Python side, useful skills include mastering of Linux, NumPy &amp; Pandas, Jupyter, JupyterHub, Docker, Kubernetes and Cython. More information: http://www.eniram.fi/about/careers/5666-2/ or PM
I moved to a job where all my programming was in Python. From there it just falls into place.
TurboC++ 3.0. I've ported it myself obviously and I use a truetype port of fixedsys as the font. I'm old school :P
Solarized Dark :)
what kind of game?
Oh no how dare they have an opinion.
genuinely interested, how? 
I like. We can make it a lot more complex if you want, then they can't filter out batshit :3
Solution: become the highest bidder to buy your own internet history
How does this compare to Flask-Diamond?
Yup, change it to an async function, `yield from` to `await`, and `asyncio` to `curio` and it should work exactly the same.
&gt;And, if you want to help improve the speeds.. run a relay! I'd love to run a relay but am not really interested in being investigated by the police for distribution of child pornography. 
Interesting. So you just tunnel encrypted traffic to another relay? 
Out of curiosity, who runs exit nodes? I can only think that LE would be the only people running them who wouldn't get shut down. That means that, provided they also own a lot of guard/entry nodes, then Tor probably aint as strong as it used to be. Just thinking out loud here. I would happily run a relay if I could contribute to stopping this invasion of privacy nonsense.
Well, they might still be able to see dns depending on how you have that setup. Unless that is being resolved through the vpn. 
logging, packages, some kind of FFI, command line arguments, concurrency, decorators, async,...
Sorry I had to reload the app. It's my first time deploying to pythonanywhere 
inform us when its up. I am very excited to see
Some jurisdictions, it's legal to run a node and not be liable for its activity. In those cases it can actually be beneficial to run an exit, because it creates mask traffic for your own activity and therefore smudges your profile, giving you a privacy edge against your ISP. In other jurisdictions, you are held liable, so people don't run as many exits. Probably a lot of exits are hosted on NSA-friendly platforms like clouds, though, so it's generally safe to assume that the exit node is not your friend! That's why Tor Browser includes HTTPS Everywhere by default.
As far as I understand it, celery still works where you must specify a maximum limit to the number of workers. So if you have unpredictable task-triggering characteristics and/or particularly long-running IO tasks; you can accumulate enough tasks to block yourself from accepting new tasks, even if all those workers are themselves awaiting IO. Whereas with asyncio, so long as its the IO that's blocking, you can continue accepting new work long past that limit
Most decent VPN services offer this. If not, there's always the choice of using dnscrypt.
You could base your course in the book "python 201, intermediate python". The topics of the book are wisely selected: argparse, collections, functools, iterators, generators, etc. https://leanpub.com/python201
yup this works, are there any other dangers to forms? (I wanted to be vague, since I don't know the answer to this)
Why not just bump the version and be done? 
&gt; I do want them to replace the builtins however. Spoiler: They won't. Guido doesn't like map/filter/reduce. I can't entirely blame him. Your example above could be just as well implemented using list comprehensions or the regular map and filter. It goes against Python's "one obvious way" principle. On a side note your filter function appears to take the iteratable as first argument. If you do functional programming that's not a good idea since it makes the function less useful for currying (which Python can do using `functools.partial`). PS: You don't need methodcaller for your example, you can just map `str.strip`.
Sanitation or validation library? There is WTForms. https://wtforms.readthedocs.io/en/latest/
See also: "Peering into complex, tiny structures with 3D analysis tool tomviz" https://opensource.com/article/17/3/tomviz-large-3D-datasets
Hm... depends on where you're having this thing send its requests to. I wouldn't have it click on links for YouTube or Imgur, for example.
That's fine. A VPN for Android that has the thought process to allow for trusted WiFi to access local stuff and to even permit an app direct network access is hard to find. Freedome gets that right.
Are you okay with me compiling it into a super lightweight docker container to be ran on a rPi? Seems plausible to me.
&gt; the "one function call per line" golden rule of maintainability. Never heard of that, that seems overly restrictive. I agree that nesting function calls until you burst the maximum line length is usually a bad idea but restriction to a single call is just asking for unreadable code.
Tor Browser is not great for security, because it is a huge single target for hackers, with thousands of users all on the same outdated Firefox.
Just installed it. I really like that it changes whole IDE and not only the editor colors.
sanitation, sorry
Part of me thinks they possibly could. It's not like they don't have other sources to cross-reference.
question: could DNS lookups reveal things like which APIs you call? for example, you set up this script to look at a bunch of different subreddits, but could the people mining data see which subreddits you actually submit comment forms on and make certain API calls to? obviously, if you comment more on some than others, they can tell you're more interested in what is there, regardless of whether or not they can actually *read* what's in the traffic.
My alma-mater university runs an exit node out of the computer security department. They use the data output for research purposes.
No one else here seems to support this but I do. Great idea in my opinion. If this perceived as crude, then lets just keep refining it. 
Material or Material-Fork? Just curious. Kind of confusing there are two.
They are doing God's work. This makes sense. What an interesting project!
It's not a zero sum game.
&gt;Also, I'm not sure what classifying flowers has to do with the 'New NBA' lol. (yes, I get the symbolism - he could have picked a much better example though) Actually I think it's the perfect example. What's wrong with showing off a 'Hello World' for machine learning? He's not going to do the actual coding for the NBA but it's a cool showing of him getting his feet wet.
&gt; urls = [x for x in urls if x[:23] == 'https://www.reddit.com/'] browser.get(urls[randint(0,len(urls))]) Cleaned up a bit: urls = [x for x in urls if x.startswith('https://www.reddit.com/')] browser.get(random.choice(urls))
IT'S NOT YOUR INTERNET HISTORY! It never was your internet history. The ISPs own "your" internet history. You pay them for their service, and they own the machinations which allow you to use their service. "Your" web browsing history has always been their property. It's the simple concept of ownership. Dont like it? Find a new ISP that doesnt sell browser history. Grow-up!
Material-fork
I was just pondering this today, thanks!
Https is great, but we need DNSEC too.
I can't remember if i made this myself or there was actually a theme file. If there actually is one would appreciate seeing it as i know my current lacks a few bits coloured
&gt; cheese pizza For the uninitiated?
The US constitution.
I put a pull request in on your terminal script to make it work in python 3 (basically just changed the prints to functions), put it as a separate file, took out the artifact comments and reduced number of function calls by using linebreaks in the print functions.
See [GeoPandas](http://geopandas.org/).
I dont like either party, but this was a partisan vote. I feel betrayed by Obama for the other spying, sure, but they're separate issues.
Yeah, while related, I don't see how that level of nuance is missed. Republicans were obviously bought by corporations here, Democrats obviously motivated by other scummy reasons. 
I shared this post mainly because it contains a bunch of things that I didn't know anything about. Hynek Schlawack's [attrs project](https://attrs.readthedocs.io/en/stable/) is also quite cool :)
Went in expecting blogspam, came out with knowledge of stuff I haven't touched before. Thanks for the info!
What made you believe that it might be blogspam?
You're missing the point. Yes, this *one* vote was partisan, but the bigger problem is not. The only reason this one vote was partisan was because the parties "don't like each other", and many of the congressfolks were just voting however their 'leader' wanted them to vote. Both parties are having a race to the bottom in terms of privacy for the average citizen, it's just that the current group dragging us through the mud are from the right side. 
Im not missing the point, I just do see it the particular way you do or we're talking about different things. Think about how people are going to react to "govt spying on you for security" vs "govt sold you out to corporations for profit". People are going to parse those differently in their heads. I think both are awful, but not everyone is necessarily going to because of their worldview and arguably you can drum up more outrage over the latter which is the typical Republican schtick. I agree for the most part but this is just an issue with semantic precision. I vote green party for a reason. 
I tend to try and focus on the bigger picture, and even though these small 'battles' are impactful now it's extremely easy to lose sight of the direction we are heading if you encourage folks to focus on the "omg this party did what?!" shenanigans. I also vote green. \*high five\*
I can see that since people tend to get tribal. 
think about some other words that begin with C and P that are perhaps outstandingly more illegal than pizza
Python's relatively new `enum` module makes use of metaclasses to implement some cool features. In my opinion they didn't go quite far enough (even though they mentioned the possibility in the PEP). With a few small changes the following would be possible: class Color(BetterEnum): RED BLUE GREEN Assuming you don't care about actual values for these constants (as is often the case), you instead have to do: class Color(Enum): RED = auto() BLUE = auto() GREEN = auto() Either way metaclasses make some pretty cool and sometimes magical things possible.
Better yet, just have selenium scrape something like [this random list website for random websites to visit](https://www.randomlists.com/websites). 
&gt; Spoiler: They won't. Guido doesn't like map/filter/reduce. You misunderstood. I mean when imported via `from enumerable import *` that the map/filter/reduce builtins are replaced with my variations. &gt; On a side note your filter function appears to take the iteratable as first argument. If you do functional programming that's not a good idea since it makes the function less useful for currying (which Python can do using functools.partial). That is actually a really good argument. I'll probably change this then.
It would depend on what kind of device it is. What would you like do be able to do? 
Would probably be simpler to use: http://www.theuselessweb.com/ http://weirdorconfusing.com/ Rather than having to manually create a list which is then predictable.
What library or API did he use for texting?
Me too, thanks.
Just a style thing, but I'd rather see method chaining like this results = ( filter(log, date, "[3:29:2017]") .filter(critical_error) .map(methodcaller('strip')) ) Not sure if it's actually in PEP8 but it's the convention with method chaining in the pandas community at least. IMO it looks way better.
Illegal things are not described with illegal keywords very often. Selenium doesn't share cookies with your browser so you won't buy anything accidentally.
Basically just the picture of author as thumbnail and semi-vague title of blog (instead of something like 'Class creation using the new `__prepare__` and `__subclass_init__` magic methods', in which case I would have known it's new stuff to me). 
I kind of see "forcing architectural decisions" to be a pro of Flask though. I often won't *want* to do things the Django way for one reason or another. Flask allows for way more freedom to customize what your stack is going to be. Plus, without the Django hand-holding, Flask forces you to understand what you're doing on a deeper level.
map/reduce, and I think I'm starting to hit limits on processing, so that I've had to look into parallel threads/multi processing. Those are instructive in so much that they make consider how your data is being manipulated in linear or async fashions.
&gt; With a few small changes the following would be possible: class Color(BetterEnum): RED BLUE GREEN why it's a very bad idea https://www.youtube.com/watch?v=voXVTjwnn-U#t=46m45
I like how it redirects to "security". Like, secure in the knowledge that your privacy will only be invaded by the proper third parties systems.
Well, it's goal is to analyze your code...and provide you with code...do you think the code is provides is...from...PEOPLE?
That's not really true, don't go so far left that you forget whose shoulders you stand on.
That was awesome! Thanks for sharing!
Yeah, there are a bunch of free ones like that. All the more reason to go with a paid one from a reputable company. And, as with all things, if you can't understand the business model, you are the product rather than the consumer of the product.
use VPN?
Oh that sounds cool. Does the program make the roster changes for you, or does it just flag who you need to take out of your team? Also, can you run multiple python scripts on a banana pi at the same time? Im thinking I'm going to have to get something like that myself for a few similar jobs
Yep, the script sends the AJAX call that makes the roster change for me. Trust me, I had a LOT of fun putting together the roster optimization algorithm. :) And multiple scripts can absolutely be run at the same time, though I wouldn't exactly recommend it. I use CRON jobs to schedule when I'd like the scripts the run, and I have they arranged so they don't overlap – but they absolutely theoretically could.
Who stops the VPNs from selling the data ? That is the thing I don't think most people get...
yeah, that's totally the admin's job
i use Monokai with the background set to the color of Visual Studio's dark theme background
you should probably write a nice letter to the school asking them to have waitlists.
I really think using this module (and to a lesser extent even the builtin map/filter) goes against the grain of Python -- Pythonic code uses straight-forward list comprehensions, generator expressions, and plain old for loops to do the same thing more clearly and with less code. Here's a rewrite of your example using a generator expression -- a syntactically beautiful way to do a map and filter(s) in one expression: with open('log.txt') as log: results = (line.strip() for line in log if '[3:29:2017]' in line and line.startswith('CRITICAL')) for line in results: # do something Also note that it's much less code. You don't have to define two helper functions, because you can just do those tests (and call `strip()`) inline with a generator expression or list comprehension. Also no imports are required, and no 3rd party module.
I'm interested in what you can actually tell about me by the times I'm home/online. How can it be that much?
Tom should be very proud of himself.
You've got it wrong. A VPN is an encrypted tunnel between the user and the VPN provider. It hides your content from the ISP. It also means the server you are talking to doesn't know where you are, based on your IP, at least. HTTPS alone merely encrypts data between user and web host, the site being accessed isn't encrypted. So, they know you are on pornhub getting ads from gaydudes.net, but they have no idea what exactly you are watching. Though, it's obvious it is video.
Thanks. Please copy, distribute, share.
Nope.
Hey thanks for taking the time to extend it! I appreciate it, and have merged the pull request :)
Well, maybe the fact they would lose the very thing people are paying them for... which is not the case for ISPs. If you pay for a VPN you tend to care. You are not wrong, it's not perfect. But it's certainly better than NOT using a VPN.
Except Google knows you did that if if have a Google account 
This. 
I just made a statement without regard if it was believed. You've chosen to take issue with it. I'm the one on the defence here, that's hardly argumentative 
This is pretty interesting actually. I'll be sure to take a look at it when I get free time. Thanks! 
2
Any library that's as easy to start with as pip install --user flask and from flask import Flask app = Flask(__name__) @app.route('/') def main(): return 'That was easy!' if __name__ == '__main__': app.run(debug=True) Is some quality goodness.
&gt; "My brother in law has a "habit" of going to jail. All. The. Time. My wife wants to know when it happens, so I setup a script to poll the local jail inmate rosters, and send me an email when his name shows up. It works pretty well." - from the above link
It's ok I have an AOL account.
Show us on the doll where they touched you 
for homework
The long standing thoight is that op wears matching pajamas too but that is only a rumor which I heard from the great Hetsu the all-powerful korok crap God
What set bonus does matching pajamas give you? 
Too complicated, I'll wait for EzPyGameWrapper :)
The time of a web request is closely tied to the age (think work hours vs school hours) and to the class/job (think night shift vs white collar office hours). The rhythm of requests varies with age (younger connect to more pages with tabs and refresh more, older people tend to read a little bit longer and open one tab at a time). Add some other data for cross validation (browser and system, other services -netflix?- being served at the same time), and the picture becomes very clear. Even more so when the classifier take into account thousands of other users, dozens of which likely share part of the pattern with you. And dozens of which are in your​ 'cluster'. (i.e. close to you in a sense that is relevant to the data processing, be it your neighborhood, or something more abstract like a combination of patterns or antipatterns) Picture to yourself "who is the kind of guy that connects to the net at 9pm for the first time in the day, opens 8 pages on Reddit right away, follows links, and does all this in chrome on his iPad, while watching Netflix ?" You got the picture ? So can the data munching robots. And they know when they guy left home this morning, because his phone never updates apps after 8:46. That phone is a iPhone 5s, btw.
tomviz is its own application. Many of the developers have worked on ParaView and tomviz borrows some of its source code. The icons have been redesigned for tomviz and then pushed to the Paraview code. So both projects have benefited from tomviz—a big advantage of open-source.
Erm, did you mean to comment somewhere else? 
Darcula with keyword arguments changed to not be red, since I continually think there's an error 
. import final_product final_product.run()
Glad to hear! Let me know what you think after you've given it a shot :) some design choices might be biased towars my personal needs, would love to get a second opinion
What kind if FPS would I get with 1M triangles on a sub-$200 graphics card? Does it support simpler primitives (e.g. 1px line sprite)?
You should totally pick up git/github, would help a lot for code sharing :) Something that would help your code a lot as far as looking good: [textwrap.dedent](https://docs.python.org/3/library/textwrap.html#textwrap.dedent). You could actually also do some nice things with class/dictionaries. [Here's an example](https://gist.github.com/waynew/c1bfcf651bf6acf9bea5b157e0932c3d) Some other things that I noticed while I was looking over your code/translating it: - No need for `str('this is my string')` - `text = 'this is a string already'`. You can use `''` or `""` to make a string, or `"""this can go over multiple lines!"""` - rather than `break` at the end of each of your `if` chains, try `if: ... elif: ...`. If you're worried about not getting out of your loop you can do something like `race = 0; while race not in (1, 2, 3, 4, 5, 6, 7, 8, 9):` (though really I'd do `while race not in range(1, 10)` if I were using ints like you. - `ConstitutionMod= (Constitution - 10)//2` You do this at the beginning - but later you change `Constitution` and also use `ConstitutionMod`. Did you really want a function here instead? - starting equips - you could add that to your code as well, so they get to choose their starting equipment from within the program. Not sure if you *want* that, but you could do it. If you want some more suggestions, you can comment on that gist. But for your first week of Python? Sweet action :)
For avoiding password in script and conveniently sending emails, you should check out https://github.com/kootenpv/yagmail (disclaimer: I started yagmail) 
Nano on my Pi, but when on Windows definitely PyCharm 
Any modern language (e.g. designed after 1990) stores variables in scopes. This means that there isn't a single list of variables, there is a nested set of scopes, which contain variables. In theory you could iterate over those scopes, but you'd be listing the entire standard library. You can list the variables in the current scope with `print(locals().keys())`, but if that answers your question, you should really clean up your code. 
Here is a snippet as a small example, though I can't post the whole thing or really any context wider than this: for i in range(0, len(list)): file=open("file.txt", "r") for loop in range(count): file.readline() x=list[i]
Coursework write-up.
Vi when I need to go into the servers, and Sublime Text whenever I'm writing programs. 
One of my lecturers uses Jupyter to make online resources for us. What's it like?
Great! :-) As a beginner I try to avoid confusion as much as possible ;-) so I'm deliberately avoiding everything that is not python 3+. Your tutorials looks really interesting and useful and I'm looking forward when I will be able to try them out also :-) 
vim on linux and mostly vim on windows via mkbaXterm or notepad++ when going over long logs
@nightcracker - A closure is not the only way for a function to have state that is private. Functions are first class objects - and therefore you can store attributes - my 3rd example above works fine : def next(): if not hasattr(next, 'cache') : next.cache = 0 next.cache += 1 return next.cache It is certainly not an idiomatic solution but it does work.
http://github.com/rochacbruno/manage
I learnt how to uses classes and used it to write a k nearest neighbour classifier. Also started a blog to document the process of (hopefully) becoming a python wizard
No vi noooo lol Nano ftw :) 
You can run little snippets in each cell and see the output, which means you don't have to constantly do print commands, and it plots and datframes nicely
Emacs + Evil
Emacs /s
And then anyone can read and/or modify your state by changing `next.cache`. In other words: it's not private. I know that in Python we don't care about that since we're all consenting adults, but what I said is still true.
I'm glad to see I'm not the only one who took note of Beazley's prepare hack. I'm actually using that in a work project to ease the creation of error handling classes. Essentially each error handler gets a fresh specially treated `functools.singledispatch` to make it a well behaved descriptor (ignores self and dispatches on the second argument) which is an exception type. Then there's a decorator (because there's magic anyways) to wrap the function of method in question and handle exceptions that come out of it without having a long tail of `except BlahError as e:` following it. It's probably not the most sane API and its definitely going to trip up someone, but I'll be damned if the implementation isn't slick. 
I use vim on Linux. Have tried pycharm a few times but too bulky and unwieldy for me.
Is there an API that can be called directly from Python to render figures? Or is it purely GUI?
Could this render output to an occulus rift?
You could probably do some web scraping if there isn't an official api
The video looks very pretty. What kinds of use-cases is it most useful for? Also, the name seems to be a pun upon "tomography" (the word being mentioned in the video, but I don't know what it means) with the icon resembling a cross-section of a tomato. I like that.
What is the error you are getting? 
It's not an error, but rather the "Except" clause seems to occur every time. So it says "Error! Please enter a valid number" No matter what I input. 
vim &amp; jupyter - where I really want vim bindings or neovim
Your input is a string not a number. I would suggest writing the assignment in psuedocode before jumping in the code and also reading the python docs.
&gt; I did find toturials and did exactly as they did and still no end solution., The script I did was from this video, the part where he types in the sqlite3 database.db command is where i get an error. it is at 16:14 &gt; &gt; https://www.youtube.com/watch?v=8aTnmsDMldYbase.db &gt; &gt; what comes out is this for me 
Python errors https://imgur.com/gallery/Tec1m
So, that str around the input assignment is better moved to where you concatenate during printing. What you are doing is comparing a numeric value to a string (though the python treatment of raw_input is as a string anyway). Testing this I see no issue, but your milage may vary. 
I am still receiving errors just based on it being an "invalid number" due to the try/except clause.
One thing that *did* make it in that is an absolute abomination in my opinion it typing.NamedTuple. Aka the class based one with defaults. Here's the example code from the docs. class Employee(NamedTuple): name: str id: int If you removed the type annotations, this is a syntax error. There's no reason why this should be a thing. If defaults were needed for NamedTuple (which is the *only* reason-- besides the _field_types attribute-- why this atrocity made it into that module in the first place, and types shouldn't be enforced in python anyways-- they're hints!) then a defaults kwarg dictionary should have been added to the original object in the collections module.
Errors? You mean your text that you print during the except?
Yes. Shouldn't that only execute if there is an error? And when I input nothing, it still shows up.
I am a noob too. Once I took care of the strings and floats I was able to get it done using lists. I am wondering what level class this is for because I am self taught? 
Thanks, but doesn't work for whatever reason. Anyway, it's submitted now so nothing I can do to change it. My code is altogether about 200 lines so little things like this don't really bother me too much anyway.
Fair enough
Print type(your variable), yourvariable And Test=yourvariable+1 Print test Ignore the capital letters here... Your variables and comparisons aren't doing what you think they are. You should work iteratively. Do one small thing and when it works, add more. This is a full script containing a few errors that you could catch earlier.
And I'm trying to help, not be mean, sorry if I sound like a dick.
Don't get SASy
understood. thanks! Maybe you can help me with a more specific question then. How can i import data into my python code so it can analyze it?
/r/learnpython would be a better place to ask questions like this. What format is the data in?
there are many different ways to do so and it depends on exactly what you mean. You can create your own arbitrary file format (a good exercise!) https://learnpythonthehardway.org/book/ex15.html ^^^ that teaches you how to read files. or you can create an interpreter for standardized data formats like .csv. Or, you can have a user be asked to input the data. or , you can manually input the data to be calculated in the code. etc. etc.
I wrote a Minecraft [bot client](https://github.com/smilechaser/mc-roboto) that automates the generation of packet formats based on the version number. It uses protocol specs from another [project](https://github.com/PrismarineJS/minecraft-data) and builds the appropriate packets according to what version of the server you want to connect to. It's part of a bigger project to write a complete bot, but...baby steps right? 
vim! with a medium amount of plugins - linter (ale) - formatter (yapf) - completer and some others
PyCharm does have vim bindings I hear (just in case you didn't already know).
Ride the elePHPant!
That doesn't mean that tor sucks, just that it's not well-suited for the use-case of downloading things at very high transfer rates. You're unlikely to actually use 100 Mbps on an individual connection for very many things; there are just too many sections of the network in-between that slow it down. But you can always choose which traffic to send through Tor and which not to (say, most of your browsing does, but your package manager does not). Or perhaps for your particular needs you're ok with the lesser privacy gains of a VPN.
I love this sub
I'm not a data scientist. But it would be pretty easy given the very naive implementation given in this post. Say we're looking at a data set of requests from a user. You notice that, hmm, the majority of requests come from Chrome, but there are some coming from Firefox. You take a closer look, sort them by page requested, and notice that a majority of requests come from four specific urls. That looks pretty fishy, and a little bit more investigation of timing data and referral headers gets you to the conclusion that these are all fake, so you filter out all the Firefox requests and are on your way. That's us making it easy on them by using a different browser (although statistics say we do), but you can expand from there. Large tech companies spend a *lot* of time and money figuring out how to filter out bots for the purposes of spam and ad fraud detection, and they're using much more sophisticated techniques than this (the ones I know I'm not at liberty to talk about). Similarly, fraudsters have been spending a lot of time and money trying to get better at looking like their bots are legitimate users. Something that someone wrote in 15 minutes is far behind the times.
See my comment [here](https://www.reddit.com/r/Python/comments/629jbe/not_excited_about_isps_buying_your_internet/dfljglc/?context=3).
* https://en.wikipedia.org/wiki/Feature_toggle * https://github.com/etsy/feature
Haha this is awesome
I am really not sure. I was recommended this link on extracting the data necessary, but still trying to figure out the mechanics. http://jsoc.stanford.edu/ajax/lookdata.html?ds=hmi.Mharp_720s_nrt
Does anyone else think the guy on the left looks like alternative universe programmer David Beckham? 
ew
Both of these Hipsters are wrong, the correct language for programming is D. And by the time you've memorized most of those symbols and commands, then the correct language will be E, which uses still different symbols and instructions. https://en.wikipedia.org/wiki/Tower_of_Babel It's like a master carpenter telling the new kid to go bang nails into scrap wood. Gtfo of our hair kiddies, we've got work to do.
I don't use aws lambda so can I make the pie locally ?
[removed]
gross.
You can get rsux.org for 12/year from Google Domains. Not the .net one, though, unfortunately (sounds cooler IMO).
Lold. 
Yeah I've tried it but there's no Python 3 support, and I wanted to write my own, smaller one. Not that there's anything inherently wrong with `spyral`, mine is just more of a helper than a complete wrapper.
Can we please concentrate on the important things here? And that is, which shirt is prettier. I prefer the design and wordplay of R, but the colors of Python.
You could use [`watchdog`](https://pypi.python.org/pypi/watchdog), to run a command if `*.zip` is modfied/added/etc: watchmedo shell-command --patterns="*.zip" --command="py your_script.py ${watch_src_path}" .
Weird people. Too many weird people.
I've just tried installing.. it doesn't allow me to use the Alt button as I'm used to, and scrolling is hell. Do you normally turn the Alt functionality off? Or just any good tips? 
You should be able to use something from scipy: https://docs.scipy.org/doc/scipy/reference/spatial.distance.html
HTML ?
You know nothing. K and J are The Languages that Go~~o~~d himself touched. edit: correcting spelling autocorrection's correction
Depends if you parse past reddit ;)
Thanks, worked flawlessly: http://ezpygame.readthedocs.io/
Atom with IDE extensions and a lot of other plugins
One thing you'll definitely have to do is use the step style for your histograms, which draws a line instead of a filled bar. Once you've done that, I'd suggest using Jupyter widgets to turn histograms on and off.
is that how you handle session-id's?
Very cool! I think I might use this for some other things as well. For example, my downloads folder inevitably becomes a cluttered mixture of primarily .jpeg, .pdf, .zip, and .exe files. Using watchdog, I could use a script to automatically sort downloads into different subdirectories, such as `pdf`, `images`, `zip`, `exe`.
Pycharm &amp; Atom
So?
You are confused because of the location of your print statement, I think. The append is working. Try changing your code to include this: print("listainnput before input", listainput) inputinch = raw_input() print("listainnput after input", listainput)
I don't see the use case for this tool if it does not offer significantly more possibilites. The app which is generated can be simply copy pasted from any tutorial which would have the advantage of having documentation on how to use the code. The only "smart" thing is the integration of the User Model with Flask-Login integration. The other tables and all endpoints are simple templates which can be found right away in the Flask / Flask-SQAlchemy documentation. Beside that: The generated code contains Syntax/Indentation Errors.
"A star is a luminous sphere of plasma held together by its own gravity." ;)
they have to fight to the death
I'd do both if I had to write VHDL. 
Hello frontend developer. Day going well?
Unless I misunderstood, Flask already had command line integration with click: http://flask.pocoo.org/docs/0.12/cli/ and you can easily add your own custom commands. 
Atom on OS X. Vim on Linux. 
I do teach advanced Python all the time. I try to focus on practical topics as well as advanced techniques. Some of the topics in my class (some of which haven't been mentioned yet) are: * DB access * GUI programming (yes, some people still do this) * Multiprogramming (threading, multiprocessing, asyncio) * Comprehensions * Generators * Decorators * Metaprogramming (inspect, decorators, type() to create classes) * Unit Testing * Profiling/Benchmarking * XML/JSON/CSV/YAML * Network access (SMTP, requests, paramiko) * special (AKA "magic") methods: __str__, __len__, __add__, etc. * core lib things they may not have heard of: - scandir - os.walk - pathlib * useful data types (defaultdict, Counter, ordereddict, deque) 
Experimenting with Flask + Zappa on AWS Lambda
Anaconda is primarily a bundle. There is no required IDE. I use PyCharm with Anaconda. Many people use Vim or Eclipse. Other than its large size, I have not run into any downside to using Anaconda. Just because Spyder is included, you don't have to use it. 
I use rails and I just don't get coffeescript. Javascript isn't that verbose or syntactically complicated, especially if you're using Jquery. 
Right so the issue is the page is kinda fucked, most of the table rows are closed *but never opened*. Meanwhile lxml's HTML parser is libxml2's which is [a hand-rolled HTML4-ish parser](http://xmlsoft.org/html/libxml-HTMLparser.html), which is kinda garbage to be honest. As a result, if you look at the children of your `&lt;tbody&gt;` as parsed by lxml.html it's two TR followed by a bunch of TD: &gt;&gt;&gt; doc.xpath('//*[@id="main_content_area"]/div/div/table/tbody/*') [&lt;Element tr at 0x1058ee520&gt;, &lt;Element tr at 0x1058ee310&gt;, &lt;Element td at 0x1058ee260&gt;, &lt;Element td at 0x1058ee208&gt;, &lt;Element td at 0x1058ee418&gt;, &lt;Element td at 0x1058ee6d8&gt;, &lt;Element td at 0x1058ee730&gt;, &lt;Element td at 0x1058ee788&gt;, &lt;Element td at 0x1058ee7e0&gt;, &lt;Element td at 0x1058ee838&gt;, &lt;Element td at 0x1058ee890&gt;, &lt;Element td at 0x1058ee8e8&gt;, &lt;Element td at 0x1058ee940&gt;, &lt;Element td at 0x1058ee998&gt;, &lt;Element td at 0x1058ee9f0&gt;, &lt;Element td at 0x1058eea48&gt;, &lt;Element td at 0x1058eeaa0&gt;, &lt;Element td at 0x1058eeaf8&gt;, &lt;Element td at 0x1058eeb50&gt;, &lt;Element td at 0x1058eeba8&gt;, &lt;Element td at 0x1058eec00&gt;, &lt;Element td at 0x1058eec58&gt;, &lt;Element td at 0x1058eecb0&gt;, &lt;Element td at 0x1058eed08&gt;, &lt;Element td at 0x1058eed60&gt;, &lt;Element td at 0x1058eedb8&gt;, &lt;Element td at 0x1058eee10&gt;, &lt;Element td at 0x1058eee68&gt;, &lt;Element td at 0x1058eeec0&gt;, &lt;Element td at 0x1058eef18&gt;, &lt;Element td at 0x1058eef70&gt;, &lt;Element td at 0x1058eefc8&gt;, &lt;Element td at 0x105a2d050&gt;, &lt;Element td at 0x105a2d0a8&gt;] Now you may not have seen that because your browser will use an HTML5 parser and fix up that crap when you look at the result of Inspect Element (that's the final DOM your browser is actually using), you can see the catastrophe when checking the original data via View Source if your browser even makes that available (Safari apparently does) or by looking at what Requests retrieved. To get the structure your browser shows you need to use a *proper HTML5 parser*, which in lxml you can do [by installing html5lib and using `lxml.html.html5parser`](http://lxml.de/html5parser.html) but then funny story: &gt;&gt;&gt; doc = html5parser.fromstring(requests.get('https://farm.ewg.org/persondetail.php?custnumber=A09875645&amp;summlevel=whois&amp;dbtouse=2001').content) lib/python2.7/site-packages/html5lib/_ihatexml.py:265: DataLossWarning: Coercing non-XML name warnings.warn("Coercing non-XML name", DataLossWarning) &gt;&gt;&gt; doc &lt;Element {http://www.w3.org/1999/xhtml}html at 0x104ec4050&gt; as you can see, by default if the document declares namespaces (which this one does because it's an offense to all that is holy) *html5lib will keep them* which makes the document kind-of a pain to interact with. Since fromstring/parse provide no way to trivially manipulate the parser's defaults the solution is to initialise the parser yourself and tell it to ignore namespaces: &gt;&gt;&gt; from lxml.html.html5parser import fromstring, HTMLParser &gt;&gt;&gt; doc = fromstring(contents, parser=HTMLParser(namespaceHTMLElements=False)) &gt;&gt;&gt; doc &lt;Element html at 0x10599dd40&gt; and now: &gt;&gt;&gt; print(len(doc.xpath('//*[@id="main_content_area"]/div/div/table/tbody/tr'))) 18 Alternatively, you can create an lxml tree from html5lib directly which is a bit simpler and more readable, although that creates an ElementTree so you need to call getroot() of you want the root element (xpath works on both trees and elements): &gt;&gt;&gt; t = html5lib.parse(contents, treebuilder='lxml', namespaceHTMLElements=False) &gt;&gt;&gt; len(t.xpath('//*[@id="main_content_area"]/div/div/table/tbody/tr')) 18 **TL;DR: lxml.html's parsing is garbage, use `html5lib.parse(content, treebuilder='lxml', namespaceHTMLElements=False)`**
What platform are you on? I had issues using MatPlotLib on OS X until I learned this trick: import matplotlib matplotlib.use('TkAgg') # Mac only import matplotlib.pyplot as plt After adding the middle line, now plots pop up normally.
I use Windows 10, so it may or may not work, I'll try it in a minute. So far I've found a better way to do it though, I just don't use the plt.show() command, and explicitly close every figure, because in PyCharm, as I found out, I can open figures in a new tab and look at them there. I'm actually really happy with it, the only thing I miss from Spyder is their variable explorer, which is useful for going back to fix mistakes, but I usually just run both at the same time and switch to Spyder if I need the variable explorer, until I find something similar in PyCharm. Thanks though!
A small issue: Sometimes on Mac, the plot pops up, but it's not visible, and you need to alt-Tab through your windows. 
I'm getting an error with the to_numeric function when used exactly as in the article: ValueError: Unable to parse string " " Using pandas 0.19. It seems like this function changed some time recently. Now it needs argument errors='coerce' since by default it raises the errors. 
That's fighting talk, sir
GeoPY I think is what it's called. Not really as simple as some people are saying (its in lat lon right?) Projections can become hairy.
&gt; they don't magically do things that .format() doesn't They do actually, you can put essentially arbitrary expressions ([with various grammatical annoyances/restrictions](https://www.python.org/dev/peps/pep-0536/)) in an f-string, not in a str.format string. On the other hand &gt; why bother with anything else? f-strings are completely useless for lazy or manipulated interpolation (logging, i18n, SQL, ...).
Thanks for your answer. I managed to do it! First I had issues with getting the data from the urllib page since I didnt setup the following step correctly but now that also is fixxed (all I had to do was stop using the variabel that I defined on the mainpage and use the one that I defined for the detailpage "see openlink.findall" I used to have it set at container.findAll (which means that is was searching on the mainpage instead of detailpage)) This is my code if anyone needs it for reference: container_link = container.findAll("a",{"class":"vwo-thread-title"}) pagina_link = container_link[0].get('href') openlink = soup(urllib.request.urlopen(pagina_link), "html.parser") myfile = openlink.findAll("div",{"class":"cept-thread-content"}) myfile1 = myfile[0].text
edited the post
Aquamacs and sublime.
After the 50th woRdplay in some package name or conference it kinda loses its charm
This was the single feature I always missed in python. I even tried the format(**locals()) hack, but it's too ugly and slow. I'm really glad they finally added it :)
 f'The value is {value}.' Kinda looks like: "The value is $value" Now crucify me :-D
It has a weird cult, to be very frank with you. However, try using it. The class system is bizarre, variable scoping is very poorly handled, and the whole language revolves around ping ponging callbacks.
I second this. The first big project I did with Python was using Flask to build an app that hit another site's API (getpocket.com) and presented the articles on my site. I tried using Django first, but its batteries included model made it really hard for me to start, considering I was also new to the MVC paradigm as well. But Flask is really to just make something really simple and just keep adding parts as you need them, allowing you to slowly start playing with new features and understanding how a web framework...works...in general.
He is a visard, so it wasn't that hard.
+1 for Geany
I do like TypeScript. I wish I could convince my architect or PM to move to it.
/r/learnpython
Should I be posting there also? 
You should post only there.
Ok
Note to self: if I ever feel the need to try JavaScript I'll have a look at TypeScript first. Thanks for the info. Sounds like it isn't so bad.
I'm actually sick in bed at the moment so I can't answer fully. Suggest you search the Emacs wiki, and search online for Emacs configuration on Macs. Short answer is yes you can remap keys and depending on your display you can configure scrolling and font resolution.
Should i delete this then? 
Yeap.
I'll just copy-paste it there and then delete this. Reddit won't let me post for another 4 minutes. 
yes. Hoping for: from __future__ import string_literals 
It's ok. We all need bash sometimes. (don't you dare stick 'my' in there). 
It sounds a bit dumb but a few of my friends want to trade pepes (as in, the green rare froggo). There's different tiers of rarity (e.g. common, rare, very rare, etc.) and so I'm gonna write a script that searches the image of a given pepe and see how rare it is. It's gonna reverse image search 4chan and Reddit (a.k.a. where 90% of all memes live) and count how many matches turn up.
I did an online course in R and found a language full of inconsistencies and decisions that seemed to make sense if you weren't a programmer (if you were, you'd scream and point out the bugs it would cause), much more than PHP. Read and weep: * http://shape-of-code.coding-guidelines.com/2012/02/29/parsing-r-code-freedom-of-expression-is-not-always-a-good-idea/ * http://www.talyarkoni.org/blog/2012/06/08/r-the-master-troll-of-statistical-languages/ * http://arrgh.tim-smith.us/ * https://github.com/tdsmith/aRrgh/issues/18 * http://blog.obeautifulcode.com/R/How-R-Searches-And-Finds-Stuff/
How are you running the application? If you're just spinning up the dev server locally, you can use the built in click integration to manage this. But for a server deploy, you'll have to do something different. Gunicorn allows passing arguments into the target application: gunicorn myapp:app("path/to/conf") But I don't think uwsgi does. An environment variable defining the path might be the easiest route and then you can add optional arguments to your factory and click integration to override that. 
Just upgrade already.
Ugh. I remember doing functional verification with (Specman) E... so happy SystemVerilog came around.
Can't wait do that from 3.5 
JavaScript's semantics are also fundamentally weird, kinda wrong. Some operators do not behave the way you'd expect, and a lot that are commutative normally (do the same thing both ways around) aren't in JS, + for example.
He was referring to SAS I think.
I wouldnt use SQL. I'd use h5py along with numpy. Regardless, dicts are inefficient in terms of memory usage and speed. For your code to even load the file and type all the things, it probably takes at least 20 minutes. It's taking a number like 1000 and making an int64 out of it. Do you really need an int64 or can you get by with an int32 or int8? I used to use dictionaries and python data types to store highly structured data. I got a 10x memory and 500x speedup by switching to numpy. Here's a good overhead check...you have a 40 GB file but probably require 80 GB to store it because you're using the wrong types. Try a 10 GB file. What does your RAM usage hit? 
Hah - if all you have is a hammer...
&gt; I'm pretty sure Aurora 4X is just that, but don't quote me. ~ */u/amras0000*
 It works like this: x = "there" print(f"Hello {x}") This will output "Hello there".
Loses its PyCharm?
Ahh I think you're probably right. Oops.
I like it better than % notation because you don't have to keep track of the order of the variables, you can specify them by name. Less likely to make mistakes, and it's much more readable. 
Now I get it. That's cool. 
Even if it is syntactic sugar, isn't syntactic sugar nice? I'd much rather type: print(f"Hello {x}") than print("Hello {}".format(x)) I would say it's easier to read in addition to being less to type. Win-win
I loathe the man who thought to himself "ya know what, we need server side JS." 
I remember when .format() first came, and I thought "Gee... % was certainly usable, but these are a lot better. Not quite perfect, but way better. When f"" was first released I thought, "Now THAT is really nice." And so far, in my experience I have not yet had a reason to re-think this. If I ever build my own language, I'll use roughly the same syntax as f"" strings.
 f = lambda f: eval(f"f'{f}'", *operator,attrgetter('f_locals', 'f_globals')(sys._getframe(1)))
It makes code way easier to read, because the variable name is inline with the string. .format() print('Hello, my name is {:s}. I am {:d} years old and have {:s} hair'.format(name, age, color)) f strings print(f'Hello, my name is {name}. I am {age} years old and have {color} hair') See which one is easier to read? Without f strings you have to go to the end of the string and read the variables, then use your eyes to figure out where they insert back into the string. f strings is one of those things where the more you use them, the more awesome they become.
&gt; manipulated interpolation (logging, i18n, **SQL**, ...). plz no
But you can specify them by name with `.format`, it merely requires duplicating the names in the string body and as part of the keyword args. The whole argument for these f-strings is like that. &lt;thing&gt; about &lt;other formating method&gt; is moderately annoying in &lt;particular use-case&gt; so lets introduce &lt;new formatting method&gt; that solves that problem (&lt;but introduces some other annoyance&gt;). * `%` requires things be in order and puts the args at the end away from where they appear * `.format` can support random order with keyword, but is too verbose * f-strings supports random order without verbosity, but doesn't support dictionary usage, and they can't be assigned to variables or moved around. At some point we just need to admit that we won't ever have a single formatting method that will work for every use case and that we need to stop introducing additional ways to do things.
I would argue that additional ways to do things are created because no single way to do something (such as string formatting) is perfect in all scenarios. More than one way to skin a cat. 
Sure the variables are in-situ, but at the cost of making the entire string fixed to its line. You can't assign it to a variable, or pass it to a function. You can't reuse, you can't internationalize... For every benefit that f-strings offer over `%`/`str.format` for one use-case there is a corresponding detriment in some other use-case. 
Scala has string interpolators that work like this actually (s"$variable or ${object.thing}") and it's indeed pretty handy, it makes formatting strings easier to parse (since everything involved in the creation is in the string and not at the end)
For pythons &lt;3.6 you can still do this in a way that's more readable, at the expense of more typing. Instead of `{:s}` use `{age}` as you did in the f-string example, and your argument to `.format ()` becomes `age=age` instead of just `age`.
I haven't tried it but I bet you could just add `:r` as a format after the `x`.
It can also take expressions: a = 10 b = 20 print(f"The sum of a ({a}) and b ({b}) is {a+b}") &gt; The sum of a (10) and b (20) is 30
Bear in mind that this is basically just running eval() on the code. You can also do expressions that have side effects. Though because it's string literals, this *shouldn't* cause any problems. But if you do `f"{__import__('os').system('/bin/sh')}"`, then that *will* start a shell.
Bash allows you to do `${value}`. Useful for things where it would be ambigious as to what the variable name is. Like "The value is XXX${value}XXX".
&gt; `%` requires things be in order and puts the args at the end away from where they appear I just don't understand this concern. Even before `str.format` was introduced, you were never required to put your parameters off to the right side of the screen: 'Hello, my name is %s. I am %s years old and have %s hair' % ( name, age, color, )
Those people are incorrect :)
Exactly. Don't like syntactic sugar? Write in machine language, in hex codes.
Finished the first part of a project in analyzing flow cytometry data. Now I'm starting up the second part which is running clustering algorithms on said data.
_there is no god_
It doesn't have to be just string concatenation. You can use it to format other types. Useful for numbers, for instance. &gt;&gt;&gt; a, b = 5, 7 &gt;&gt;&gt; f'{a}/{b} = {a/b:.4}' '5/7 = 0.7143' You can also use the same modifiers as with `str.format` &gt;&gt;&gt; for word in 'f-strings are super awesome'.split(): ... print(f'{word.upper():~^20}') ~~~~~F-STRINGS~~~~~~ ~~~~~~~~ARE~~~~~~~~~ ~~~~~~~SUPER~~~~~~~~ ~~~~~~AWESOME~~~~~~~
You might already know about this but /r/MemeEconomy is working on creating a virtual stock market for memes called NASDANQ. I can't tell if I'm ironically or unironically excited for this. [Link](https://www.reddit.com/r/MemeEconomy/comments/551qnm/the_birth_of_nasdanqcom/)
Great, and now you've turned a simple print statement into fucking 8 lines of code. You're going to need a projector to fit a single function into your field of view.
It's wordy, but it is at least readable.
Now you've made a single line interpolated string into 4 lines. 3 of those four lines are **completely** redundant. I don't see how this is better.
Just as `.format` didn't replace `%`. Someday maybe we can hope to have a thousand formatting methods none of which replaces the prior, and then python will be feature complete.
https://www.python.org/dev/peps/pep-0008/#maximum-line-length They are not completely redundant; they make it clear where the function calls end.
&gt; Are we optimizing based on the number of lines of code? No, but we're sure as hell not ignoring it. If I can turn 8 lines into 1, lose zero information, and remove a bunch of entirely unnecessary redundancy, that's an optimization I'll make 100% of the time. &gt; I thought we were optimizing based on readability and developer happiness. If I were to come across an 8 line print statement to write three variables to the screen, "happy" probably wouldn't be the best descriptor for my mood and "readable" definitely wouldn't be the best descriptor for the code.
This forces you to count appearances of %s to figure out which variables goes where. Your named placeholders version violates the Do Not Repeat Yourself principle.
lmao, i was wondering how deep f strings got. well, this really does point out something super important - don't dynamically build what's inside {} using user input and do something weird where you create an f string dynamically. I don't think people would much but don't doubt it'll pop up at some point. On one side I love it, but on the other side I think they could've skipped the eval aspect even if it's awesome and will inevitably be super useful. The main problem I wanted them to solve was the heaviness of `.format` and f strings are a damn good solution that's even better than all the previous methods. It's like a throwback to perl! But more explicit since you have to prepend f. I wish I could backport this to 3.4! Is there some futures import I can do?
The issue isn't giving the db creds to someone who _should_ be running it. If a DB conn is made from the client, you have to assume the client can compromise the creds (`strings` on a .dll, pcaping the DB handshake, etcetc). The issue is if the code gets committed to a repo or becomes read accessible by people who shouldn't. Environment vars is the old school solution to this but these days something like Hashicorp Vault is much nicer and scales way better. Again, I have no idea what your arch looks like or what your use cases are, but in general we make a point to tell our clients to not keep creds in source. Centralizing them within a true secret store minimizing the likelihood of them getting read by an unauthorized party.
Thanks buddy, thanks a lot!!!
Actually I feel like that's a great tradeoff. If you're frequently dynamically building strings or passing them around as functions, you're either doing something wrong, you're doing internationalization, or you're in a very specific niche. And in those cases, feel free to use .format(). Otherwise, f-strings adequately cover the vast majority of use cases elegantly while improving readability and removing unnecessary verbosity.
So you can also do `"Hello, %(name)s" % { 'name': 'world' }`
I did a handful of Django tutorials while at the hospital for my wife to give birth to our first child. Afterward, I used downtime at my job (in process improvement) to automate and improve some of the labor-intensive issues we had. Within a few months my boss had noticed the improvement in efficiency, and I gradually moved to writing Python full-time. After about three years at that job, I moved across the country for a job as a dedicated developer. It's been four years since then and I've been writing mostly Python since. The job I have now is mostly Ruby and a little Clojure, but I still write Python every day one way or another.
I'm confused, how would it be any different if you had used .format(x) instead? You'd still run into the exact same issue, except the x is there instead of inside the string. Of course, most linters would catch this latter, and the hope is they update to also catch issues in the former.
&gt; Your named placeholders version violates the Do Not Repeat Yourself principle. That's a valid point, and one that I'd not really considered. In my mind the namespace of the string formatting is separate from the namespace in the calling scope, so the fact that I'm passing in parameters that are stored in variables named the same as their corresponding parameter is incidental. In practice, I find that it's quite rare that I'm passing in multiple parameters stored in discrete variables like that; I'm usually doing some sort of manipulation at the same time.
That example is a little too simple to illustrate the potential confusion. Take this example instead: def foo(): a = 1 b = 2 c = 3 # 10 lines of logic x = 'a' y = 'b' z = 'c' return f'baz{x}spam{b}foo{c}bar{z}eggs' Now think about it with more variables. Imagine the string being formatted is more complicated. Using explicit `kwargs` to the `format` method lets me look at the string formatting and know exactly which variables are relevant, rather than having to scan the string and backtrack through all local variables to find out if they are a component of the output. Most of the praise I've seen for this is about how much easier it is to format a complicated and lengthly string, and I posit that the more complicated the string the less useful this really is.
You didn't get my point. I understand what f-strings are for and it makes sense when you want to use them for things that are complex enough so f-strings will be shorter or more readable. What I don't understand is when people use it to replace `foo + bar`.
Hahaha! Exactly! I program like a MAN! None of this sissy syntactic sugar for me!
You see where this could lead to SQLi right? If username was accepted from a login form, and the user enters foo; drop table user_table;
I, for one, am not extremely thrilled at having three ways to do the same thing, and don't feel very motivated to learn Yet Another Formatting Mini-Language. I haven't looked at it in detail, but I can only assume `f`-strings are at least slightly incompatible with `str.format`. Of course, if you also count strings.Template, which was deprecated somewhere in 2.x, but not removed in 3.0, we now have four ways to format a string. It's all very un-`import this`-like.
Sure, but you're moving complexity from one problem into another.I could make the argument that with: `'foo {} bar {} baz {} spam {} green {} eggs {} and {} ham {}'.format(a, b, c, d, e, f, g, ...)` Good luck looking back and forth, counting, figuring it out which variables goes where. If I ask you to quickly get me the variable that comes after "green", you have to do a lot of counting. So yes, they both solve sightly different issues and therefore put complexity at slightly different places, but neither is strictly better. That being said, I hope no one coding real python would have any sort of code this messy and complex. If you do, please please split it up into smaller clean chunks. EDIT: I just wanted to point out, generally when you DO have string formatting this complex, what people end up doing is sometihng like: data = { 'a': 1, 'b': 2, } print "{a}, {b}, {c}, {d}".format(**data) This is exactly what this new pattern is trying to solve here.
Much more powerful than just variable interpolation. Read the PEP for more elaborate examples.
He's talking about name=name, age=age, color=color 
I am already using pyOpenSSL package but it is still throwing an error in Python 2.7.6.
Not really, it would be translated as: FormattedString((Literal('SELECT foo FROM user_table WHERE name='), Argument('username'), Literal(';')), {'username': 'foo; drop table user_table;'}) The SQL interface library would receive that `FormattedString` object and see the entire data structure. (The point is not flattening the entire thing into a string, because it ends up with the same issue as the `f"…"` literals, as you point out.)
Your last example is _exactly_ why I believe the existing string formatting is preferable. The new pattern isn't solving the same problem, it's dumping all locals into .format() instead of asking the developer to explicitly define the inputs!
Lol! Joke received on pin eleventy-billion.
When it was being discussed on python-dev there was a proposal to make f-strings extensible to do things such as that, but it was shot down early on.
`DROP TABLE deities`
Do you mean a 3 hour interview or a 3 person Human Resources interview? The suggestions will likely be different depending on that information.
If its a white board kinda interview then learn a few basic algorithms. Ask as many questions as possible to understand the problem. Its only after know the problem completely you can solve it correctly. If it is a system design kind of interview then try to build an app like twitter on white board. It wont involve coding but you will need to know concepts and how thing fit together. Facebook has good general guide lines for preparing for an interview, https://www.facebook.com/careers/life/preparing-for-your-software-engineering-interview-at-facebook/
3 hour.
Did you correct it? If so can you please share? I'm working on the same assignment now
 totalRevenue = 0 totalDonutSold = 0 price = .55 #.55 cents per donut #Total Donuts Sold def updateDonutsSold(x): #function to track how many donuts have been sold today global totalDonutSold totalDonutSold = totalDonutSold+ int(x) #add donuts sold in current transaction to total print "Finalized sale of",x," donuts" #print this out after each sale #Total Sales Figures def updateSalesFigures(y): #function to track total revenue global totalRevenue totalRevenue = totalRevenue + int(y)*price #add revenue from current sale based on donuts sold times the price to total revenue #Total Donuts sold at end of day (to be added) #ToDo while(True):#InfiniteLoop til the user enters nothing and donutSold = raw_input("Enter Donuts Sold: ")#Ask for input if donutSold.isalpha(): #if the text has letters in it then give an error and try again print "Error! Please enter a valid number." #if there's an error, continue to next loop continue elif donutSold == "": #If the user gives no input, print out the following print "Todays total sales: $",totalRevenue #print out total sales so far print "Total number of donuts sold: ",totalDonutSold #print out total number of donuts sold so far break #end the day elif int(donutSold) &gt; 0:#If the input is greater than zero updateDonutsSold(donutSold) #update with the number of donuts updateSalesFigures(donutSold) #update with the sales of the donuts continue #loop again for next sale Your teacher's name isn't Ramesh, right? 
I would but it's code for work. :/ I suppose I can link my project I stole from to put half of it together. https://github.com/justanr/objtoolz/blob/master/objtoolz/descriptors/singledispatch.py I yanked out most of the magic in this such as `undescript` (which repeatedly calls dunder get to unravel a potential descriptor chain) and then used Dave's trick to ensure that a fresh descriptor was loaded into the class at creation. 
This is an intro to python class. CIS245 at my school. Very basic, first coding class I've taken here. Took a harder java class in high school, haha.
just give me some silicon and my soldering gun, and an abacus for data modeling
Personally I think this sub is a good place for questions, but /r/Python hivemind tends to disagree. *shrug* Good luck with the text adventure! I hope you'll eventually post it here if you get to the point where you want to show it off! 
Can you give a practical example of how you would use that? I am still early on in my python lessons but it all seems to be about printing basic stuff... I'm thinking a real world example could help motivate me.
Last night I'm wondering why there is no regular expression literals like JS. It has r'...' but is just to say that this string will be parameter for RegExp.
Well you also save all the arguments to .format(), often I ended up writing the variable **3 times** using the old format: `"{x}".format(x=x)`, now it's just `f"{x}"`. You can also do expression any Python expression within the format replacement fields which is quite nice for simple things. All of this puts the attention on the relevant part of the string, which makes a very common use case of `str.format` more convenient _and_ more readable.
Just use pycharm and rename variables with the refactor tools and it'll handle this for you.
Honestly I've abandoned python for games. For ease of use for simple games I think Js has python beat just due to portability. Also the frameworks are much better. 
Huh interesting, didn't know they had added that.
C# got them "recently" too, and it's been really great, especially combined with stuff like `.ToString()`. You can do nice things like `"Timestamp: {DateTime.Now:yyyyMMdd}"`, the item formatting also works in python fstring.
Matter of taste maybe, but the + operator implies numbers, where f-string is explicitly a string. 
Ex fucking cactly
I find /r/learnpython to be more oriented towards beginner questions like this with a simple answer, while /r/python seems good for more advanced questions which require deeper knowledge of Python (import hooks, descriptors, etc.)
I worked for a man that did his master's thesis on punch cards. He wasn't much older than me. Jesus, where did my youth go?
Why not use named %-interpolation as previously described: https://www.reddit.com/r/Python/comments/62kt64/fstrings_in_python_36_are_awesome/dfnqize/ "%(fname)s %(minital)s. %(lname)s;"%locals()
But + is fast! I'm starting to feel like I'm fighting a lost battle with my argument. Maybe this is just another case of preferring expressiveness over performance, which makes sense when you use a language like Python in the first place.
I know what you mean. I had a background in Java befor learning python it the string concats where really weird to me. The way they do it in Java seems so more natural.
The threat is allowing user-supplied data into a query, so keep that in mind. For instance, if you have a query `select name from users where id = {}` and pass in the ID from an HTTP request, there's probably nothing stopping a user from passing something like `1; drop table users;` as their user id. Modules like `psycopg2` (for postgres) let you pass parameters in additional arguments to `execute` or `executemany`. The module will guarantee that the parameters are handled safely. In your query, you put placeholders, such as `%s`, `{}`, or `?` — it varies from module to module. The module will safely protect them from being evaluable as SQL, either through escaping or through some fancy protocol. Even `sqlite3` lets you use SQL arguments. Now, if you're just calculating part of a SQL expression from programmer-supplied code, such as using a schema-describing object or just using the result of something like `", ".join(["name", "address"])`, there's probably not much to worry about. There's still an attack vector hiding in there, but it's much less likely to be part of your public API.
&gt;Wasn't there already 2 ways to do it? .format() and %? Hey, don't forget good ol' string concatenation.
You use processed silicon? Back in my day we started with a bucket of sand we picked up by walking to the beach. Uphill. Both ways.
Slow-*er* than typical use of format, but, honestly, if you're using `print` you better not be in a speed-critical section of code. It also just violates good programming style by passing too much information to the method and violates python style by being less explicit about what you're passing.
Don't use `+` to concatenate strings. I mean, it's perfect for, like, two strings. Strings in Python are immutable. That means that when you do `a + b + c + d`, in additional to having memory for a, b, c, and d, you then have to allocate memory for the result of `a + b`, which we'll call `e`. Then you have to allocate memory for the result of `e + c`, which we'll call `f`. Then you have to allocate memory for `f + d`, your final result, called `g`. If we were being too clever we'd make the result of `str.__add__(self, s)` some sort of `ConcatString` class whose `__str__` and `__repr__` did the final join, but that violates "Simple is better than complex". I'd expect a JIT interpreter like PyPy might be able to optimize this, but I don't think Cython can. When you use the formatting string, you avoid the intermediate calculations. Yay! I think I'd rather see `"".join([a, b, c, d])`, but I'm really not offended by f"{a}{b}{c}{d}".
I agree, /r/learnpython is great for beginner questions, but the way /r/Python downvotes and refuses to answer beginner questions on this sub bothers me. I feel like one of the most pythonic principles is to welcome beginners, and downvoting new questions violates the principle to me. Of course users who just spam /r/Python with homework questions and never try to solve their own problems deserve the downvotes
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [Beginner's Python cheat sheets - updated](https://np.reddit.com/r/learnpython/comments/4y06nq/beginners_python_cheat_sheets_updated/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
/u/iamkindofcreative has a nice answer. I just want to add that this type of algorithm is called *Input Validation* and you can find lots of ways of doing this by googling those keywords.
I play in Angular.io with JS/Typescript, so I can definitely seeing myself getting confused: Python: x = f"{value}" ES2015/Typescript: x = `${value}` Angular Template (also similar to Mustache): {{value}} Although I find it annoying that the Angular stuff is Angular's own mini language and not, say, javascript, it at least saves me from having to read: {{`${foo + 'bar'}`}}
 I still like python but I woud have probably been a much easer language to use if the stdlib/lanugage had a bit fewer redundant features. There are already lots of code bases which mixes `""%()` and `"".format()` which only makes the code harder to read (more noisy) or modify (because you should at least try to understand which one to use in your modified code based on just reading the rest of it.)... I personally don't see that f-strings adds enough benefits in contrast to the noise it will bring to code bases... 
/u/daelin pretty much covered everything, but here's a `sqlite3` example: curs = conn.cursor() curs.execute('select * from users where username=?', (username, )) SQL Injection is a fun topic. I wrote a blog post covered some advanced exploitation if you're curious about the non-vanilla stuff you can do. https://nvisium.com/blog/2015/06/17/advanced-sql-injection/
Gotta be careful, too much syntactic sugar and you'll get syntactic diabetes. 
Even notepad++ has refactoring..
Just starting out? Without a doubt, Python Crash Course, the book. Dont even waste your time on online tutorials...those are useful later when you have a foundation. I wish I started with that book right away. 
% formatting is friendlier for casual users? Not really, no. When I got started with Python and was looking at String formatting, the % Notation utterly confused me because of it unnecesary (as shown by the simplicity of .format()) verbosity. I was happy to find .format (), just because it is that much more intuitive. And this goes along with f-strings. As soon as you know the syntax you are ready to go and don't have to think about which letter you have to put where.
Even more than that, they can do, a = 500 print(f'the number doubled is {a*2: &lt;7}') That's a format modifier and an imbedded expression. Pretty cool if you ask me.
One small step for man.
I wanted to write "some more casual users" but thought that was too awkward. Everyone's different. Most of the people I've worked with have preferred %.
I cannot believe this got downvoted. It is very important that we bring out these big issues into the community!
Have you considered rewriting it in Rust? (ima rust newb, I'm just suggesting)
Reading through the threads here is my summary: Doing some intensive numerical work, the reporter noticed that their program ran with twice the RAM usage on Python 3.6 x64 than Python 3.5 x64. After further research, it appeared that this occurred due to a performance regression in frozenset. The bug report is here: https://bugs.python.org/issue29949 and a potential patch: https://gist.github.com/methane/8faf12621cdb2166019bbcee65987e99 The bug had to do with the growth factor of ~~frozenset~~ set. There was some followup questioning the patch's factor of 2. On the bug report, Raymond Hettinger suggesting reverting this refactoring: https://github.com/python/cpython/commit/4897300276d870f99459c82b937f0ac22450f0b6 That appears to be the resolution of this regression. EDIT: as /u/zahlman pointed out it is set and not frozenset, as frozenset is clearly immutable.
Minor nit: r'...' strings are not exclusively for regular expressions (the "r" stands for "raw").
No, I totally agree. I get the people that just want to spin up a crud app real quick not wanting to deal with Flask (even though it's trivial, at least to me). What I don't get is the people that complain that Flask forces them to understand how stuff is interconnected. It's not like you're forced to parse HTTP yourself or something. There's lots of faults I can find with Flask but requiring a deeper understanding isn't one of them
Can you explain how print(f'Hello, my name is {name}. I am {age} years old and have {color} hair') has an unclear function call ending?
I don't think anyone who thinks fstrings are too many would object to dumping some older formats. In fact I would be OK with fstrings if we dumped the other ways to do it. Two formats that have a shared spec is much better than the 5 or 6 formats we currently have. The problem with saying "but we already have &gt;2 ways to do it" is that there is no reason to ever stop once you get past 2. Let's add 80 new ways to format strings because we already have 2 different ways so these 80 others just fill in certain corner cases that are difficult with the existing methods and it makes somebody happy. Why not add perl formatting, it would make it easier to convert some perl scripts over. What about ruby? What about...
Ones and zeros? Pussy! Use +5 volts and ground states like a mensche.
RegEx has to be imported in Python. To have a string type for them, I suppose you would either have to import the string type or the RegEx library. Fwiw, r'' is used for RegEx, though, because it represents a raw string so all the RegEx stuff doesn't get interpreted.
Dude, if you haven't big-banged your own DIY universe into existence you shouldn't talk.
Thanks for the summary!
Pssh. Back in my day, programmers defined entire sets of physical laws out of the intrauniversal ether with which to generate our subatomic particles.
I want to make the computer talk. How would I do that?
Conciseness is part of readability. You are basically choosing to be like `urllib` rather than like `requests` here, without any apparent reason for choosing added complexity.
kind of like scala s strings
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
- I really don't like doing `**locals()`. - `f"{os.remove(filename)}"` is no more "sketchy" than `str(os.remove(filename))`, user input can't into f-string unless you do something really stupid. - Again, `"{}".format(foo.bar)` is bad because you need to look outside the replacement field to figure out what's going on. You can actually do `"{foo.bar}"` with normal `.format()`, although I suppose that doesn't really help my argument that much. - I don't really think of f-strings as a new format method, they are a convenient sugar for instantaneous formatting with `.format`, which is a common use case. Python probably does have too many formatting methods, but at the same time they do all seem to have a place.
`+` does not imply numbers.
You could very well want to read different error messages (with their formats) from a resource file. Can't do that with fstrings.
Oh, and with the `.format` `.` lookups, there are some weird quirks. For example `.0` is how you do `[0]`.
https://groups.google.com/forum/#!topic/python-ideas/FSd6xLHowg8
Probably a lot given that I'm against fstrings and I don't know all the features of `.format` or `%`.
Wow. As a frequent reader of both r/Python and r/Scala, this seems like a very elaborate April Fool's setup.
I can take no credit. /u/joshlemer did all the work.
Have you checked out the official [python tutorial](https://docs.python.org/3/tutorial/index.html#tutorial-index)? It's pretty good, especially since you said you weren't a "absolute beginner" but "revising your python concepts".
And fstrings have weird quirks like not allowing you to lookup into dictionaries by a string. `f"{mydict ["key"]}"` fails for obvious reasons. That's the problem all these methods have their own little quirks that you have to learn. I don't want to learn any more quirks I just want to format strings.
I use butterflies. Without Emacs.
Join would probably be faster for a large number of arguments. For only two they are probably the same. The difference would be that if you join 200 strings then all 200 are available to you when join is called and you can compute the length of each and preallocate memory to hold the whole thing. If you have `a+b+c+...` then you have to allocate and construct all the intermediates `a+b` then `a+b+c` and so on. Otherwise I can't imagine it matters.
Magic eraser. Some men just want to erase white boards. import requests from time import sleep from random import randint p = Place(user, passwd, greedy=True) while 1: x = randint(0,999) y = randint(0,999) pixel = p.get(x, x) if "color" in pixel and pixel["color"]!=0: print("Erasing {}x{}".format(x,y)) p.draw(x,y,0) sleep(1)
&gt; factor of 2 Fun fact: the most efficient growth rate is the golden ratio - https://crntaylor.wordpress.com/2011/07/15/optimal-memory-reallocation-and-the-golden-ratio/ (1.5 is a good enough approximation that people might have reached empirically)
you forgot to add that you need to import Time and Requests. :D
It was under "Usage". But I just tossed it in the module body. Theoretically if I could actually get a few hundred people to run a similar script, you should be able to toss up a server that serves a json 'paint by numbers' and then all of the clients go about painting it. 
My doing. Sorry. I recommend not internetting for the next 30 hours or so.
Software isnt perfect. They release bug fixes, but there is the occasional regression. It's not necessary to shame them. What do you expect them to do differently?
damn, I wanted to make a leaderboard too of people's claimed spaces.
Retrieval speed. I have an SQL table with the same data, but between the huge available RAM and my less than perfect knowledge of SQL it would be probably quicker.
I've tried leaving it running and it eventually did terminate, so maybe you're right about GC (and probably about resizal issue, as well). Thank you.
&gt; Uh python has always been able to do this. In python 2.7.1X: &gt; print(u'hello {x}'.format(x='there')) 
I want to like them. I really do. Well, I DO like them but I don't find them nearly as useful as I was expecting. In most real world situations when I've tried to use them, I end up reverting to using str.format() all I can pass around the format string before evaluation. 
:|
You can do '{a.dog}, {a.cat}'.format(a=my_animals) '{a[0]}, {a[1]}'.format(a=my_animals)
Honestly the foo + bar is ugly and far less clear than the f-string. Granted I'm still learning, but I hate seeing var + var concatenation in the books I'm studying from and always replace it with f-strings. It just looks better and imo makes what is happening much clearer. Especially considering how often I'm using it to replace str(var) + str(var). I just wish google would get TensorFlow updated for windows versions of Python 3.6...
Actually, now that the format is standardized, it might make sense in some cases to use the f-strings-alike for that, possibly even with automatic locals() gathering. But then, there were [not-super-fast string interpolations](http://rightfootin.blogspot.ru/2007/02/string-interpolation-in-python.html) with merely a function call instead of `f""`, but those weren't generally considered useful anywhere. So I guess syntax support in editors / checkers is the primary benefit of the f-strings, with the rest being minor. 
Wow!
Taking down that blue corner. from Place import Place from time import sleep p = Place(user, passwd, greedy=True) for x in range(999,990,-1): for y in range(999,990,-1): r = p.get(x,y) if "color" in r and r["color"]==13: p.draw(x,y,color=0) sleep(1)
Niiice! Thanks. Better than beer;) Rgd tutorial: cool. Highly welcome. Yes, pls keep me updated. Btw: if you are offering professional services around Crossbar.io/Autobahn/WAMP and want to be listed on crossbario.com (as in "consulting/solution partners"), pls send me a mail!
This is amazing.
Haha, you really don't understand anything about electricity. Put a hand on each lead of a car battery. Did you die? Did you even feel anything? Car batteries can put out several amps! 12 volts won't put any measurable current through your body.
Wow this is really really cool!!!
I don't agree this is shaming. If it were posted anywhere but the Python reddit, I might have agreed with you. But how else do you bring attention to it? Maybe others can benefit from knowing this bug exists. And maybe people here can add to the solution. 
You can use indices or keys with mod formatting too.
You can use indices or keys with mod formatting too.
It is awesome how far people can go when they have a goal stablished. This is much more inspiring than any other 'learn to code to be smarter' campaign. You're great!
Wow! Oh man this is awesome!
This isn't shaming
I know that you are joking, but E is actually quite an interesting language. Capability based security sounds like an incredible model
I read up on this a bit and apparently factoring is decomposition of the problem, then reworking it to work well for the problem. I misunderstood Raymond's factor to mean refactor, when it is in fact a very different idea.
&gt; misunderstood Raymond's factor to mean refactor But so did Raymond: https://bugs.python.org/msg290915 &gt; undo the refactoring in https://github.com/python/cpython/commit/4897300276d870f99459c82b937f0ac22450f0b6 
This is beyond incredible. Well done!
I hate change as I'm autistic. I'm extremely tired as I've had a rotten night. I was about to launch a blistering attack on reddit, at roof top level, with all cannons and rockets firing and bombs dropping. Then it clicked :-)
0's and 1's are syntactical sugar for modifying voltages and currents
First thing i thought - no examples! 😁😁😁
&gt;I thought I would share my mini triumph. That is not a mini triumph. That is art.
Came here to say this - CodeAbbey has a nice, gentle slope of increasing difficulty and if English isn't your primary language, many problems are translated already.
I still have reasonable control over a single button mouse, as long as the sensitivity is low. So I'm not quite at the point where I've needed to investigate that. The thing that's difficult is all the 'chords' you need to type when programming. As my MS deteriorates, I'm sure I'll need to use more drastic tools, so thank you for the tip. I can imagine a voice driven programming tool, based on hierarchies of snippets. It might not be perfect for Python, but I could imagine being quite productive in something like Scheme, because it has a more regular syntax. 
Wow that's great. `is set` is wonderfully readable. Does `is set` work on any variable to check if it's been set?
I hadn't seen that before, no. But that is basically the kind of thing I'd imagined. I can't immediately see the code on his github, although he did promise to release it. I'll have a proper look later and contact him if I can't. Thanks for the tip. Edit: https://github.com/dictation-toolbox - thanks again.
Wow this really is amazing. I can't even imagine how you made it so that every letter is different based on context. I'm sure thinking it through and coding it was the real deal, but I guess people want to see the plotter just because it's so cool to watch it work :-D Keep it up, you're awesome!
I'm thinking that this is maybe an April Fools joke... This has been available since Python 2.4, when they introduced the `set` type. All you're doing is setting `flag` to the `set` type, and then checking against this. If, inside your function, in the `if flag is set` block, you added `print flag([1, 1, 2, 3])`, it would give you `set([1, 2, 3])`
April's fool... didn't get the joke, however
You'd have e.g. `{int}` for sets and `{str:int}` for dict. I'm really not seeing the problem here, can you explain? In `Tuple[int]` vs `(int,)` you think the former is prettier?
You're behind the kvalifood youtube channel? It's real nice!
Yes. Thank you :-)
To aid mobile users, I'll link small subreddits not yet linked in the comments /r/place: --- ^I ^am ^a ^bot ^| [^Mail ^BotOwner](http://reddit.com/message/compose/?to=DarkMio&amp;subject=SmallSubBot%20Report) ^| ^To ^aid ^mobile ^users, ^I'll ^link ^small ^subreddits ^not ^yet ^linked ^in ^the ^comments ^| ^[Code](https://github.com/DarkMio/Massdrop-Reddit-Bot) ^| [^Ban](https://www.reddit.com/message/compose/?to=SmallSubBot&amp;subject=SmallSubBot%20Report&amp;message=ban%20/r/Subreddit) ^- [^Help](https://www.reddit.com/r/MassdropBot/wiki/index#wiki_banning_a_bot)
Hello mtverlee, I tried to use the Todoist API too. Unfortunately I didn't work. Could you send me your script, so I could discover my faults. That would be great. Thank you.
Scala subreddit is now python themed as well. I think this is what humans do on April 1st every year. They create situations of momentary confusion that's usually resolved by a laugh. This is usually referred as "April fools."
Impressive. 
There might be currently, I meant that is that's not necessarily a requirement of a type hinting system in Python. It's up to whoever writes the interpreter how that block is interpreted. I just realised that's what you meant by "I think it was a mistake to make them objects".
That was new 
Something that lets you specify a picture and top/left coordinates and it paints the first non-matching pixel to match the picture would be good. Then collaborators can share a picture. Edit: I'm working on this, but an update to the library that lets you download a range rather than a single pixel would make it enormously more efficient.
Already are!
&gt; It's not necessary to shame them. They're not going to get any better if they're surrounded by fanboys ready to hide any problem under the carpet.
Why stop there? You can state when the flag is not set too! `def foo(*args, flag=not set):` Explicit is better than implicit ^^^^^^april ^^^^^^fools
Videos in this thread: [Watch Playlist &amp;#9654;](http://subtletv.com/_r62q2sm?feature=playlist&amp;nline=1) VIDEO|COMMENT -|- (1) [A Starry Card - Python Screencast (One Hour Programming Sketch)](http://www.youtube.com/watch?v=-vflUS5Xi2I) (2) [AxiDraw V3](http://www.youtube.com/watch?v=5492ZjivAQ0)|[+22](https://www.reddit.com/r/Python/comments/62q2sm/_/dfoo9mr?context=10#dfoo9mr) - The handwriting content itself, the stuff that I've written in the last two months, is just under 2000 lines, and about 2/3 of that is numeric data, of this kind: 'y': EndGlyphFactory( normal=Glyph('y', Stroke(Point(18,100), Point(2,1... (1) [VimSpeak Demo](http://www.youtube.com/watch?v=TEBMlXRjhZY) (2) [Using Python to Code by Voice](http://www.youtube.com/watch?v=8SkdfdXWYaI)|[+1](https://www.reddit.com/r/Python/comments/62q2sm/_/dfp0ey2?context=10#dfp0ey2) - I'm curious if you've seen these videos. Do you think something like this would make it easier to program by voice? VimSpeak Tavis Rudd at PyCon 2013 controlling emacs with dragon naturally speaking [Handwriting (with a Cricut)](http://www.youtube.com/watch?v=W5YGwNlO53A)|[+1](https://www.reddit.com/r/Python/comments/62q2sm/_/dfou8ui?context=10#dfou8ui) - Can you show us some pictures​ or video of the plotter working? I will still make a video using the AxiDraw and my fountain pen, but I just asked my wife to test it on her Cricut craft cutter, and it does pretty well, though there is less choice of... I'm a bot working hard to help Redditors find related videos to watch. I'll keep this updated as long as I can. *** [Play All](http://subtletv.com/_r62q2sm?feature=playlist&amp;ftrlnk=1) | [Info](https://np.reddit.com/r/SubtleTV/wiki/mentioned_videos) | Get me on [Chrome](https://chrome.google.com/webstore/detail/mentioned-videos-for-redd/fiimkmdalmgffhibfdjnhljpnigcmohf) / [Firefox](https://addons.mozilla.org/en-US/firefox/addon/mentioned-videos-for-reddit)
:-)
I use the built-in OSX accessibility system, in off-line mode. It's not very efficient for this kind of thing, and is mostly only useful for the names of snippets and variables. I have a lot of custom snippets set up. Fortunately I can still click the mouse and hit keys like spacebar or enter, to acknowledge the imput, so I can muddle through. But I've spent the last couple of hours looking at some of the resources someone linked up post, which uses Dragon, and seems to be much more flexible, able to do the whole thing with voice. So I suspect I won't be using the built-in version much longer :)
They can solve it without you and they already have. I run an open source project and that's a major regression. You hit those fast. I assume you have never reported a Python bug. They are very responsive.
To ruin the joke: in Python, everything is an object, and we take that seriously. Types are objects, and you can do the same sorts of basic things with them that you could do with any other object - in particular, you can assign them to variables, pass them as function arguments, use them as default parameter values, etc. `set` is the name of the built-in [set](https://en.wikipedia.org/wiki/Set_%28abstract_data_type%29) type. `is` checks for object identity, i.e. whether two names are naming the same object or not. There is only one object representing the set type (although you could create multiple objects that are themselves sets). You should not write code like this, because (aside from being quirky and not at all idiomatic) it's abusing an ambiguity in the English language.
`format_map` isn't just sugar here - it allows you to use things that don't play nice with `**`, in particular custom types that override `__missing__` (for subclasses of dict) and/or `__getitem__` (things that implement the Mapping protocol as described by `collections.abc`, but aren't necessarily even dict subclasses). I suspect it might also be faster with large dicts, but I haven't tested that.
&gt; user input can't into f-string unless you do something really stupid. As far as I can think of, even the "really stupid things" you could possibly do here wouldn't be in any way the f-string's fault.
It more seems like you are being oversensitive here. No one is pointing any fingers.
Your backstory is unrelated. Regardless, it is something interesting to the python community, and the community is only going to be proud to see it been taken care of so quickly.
Because that is how you end up with SQL injection attacks.
&gt; you download a range rather I was just capturing the network traffic when you clicked on pixels, how do you define a range without hammering the GET too much? &gt; Something that lets you specify a picture and top/left coordinates and it paints the first non-matching pixel to match the picture would be good. We need a tool to turn 8bit pictures [like this](http://schmoesknow.com/wp-content/uploads/2012/11/8-bit-mario.jpg) into JSON. Then clients can subscribe to a URL of JSON to draw together. Pseudocode: # Initial position for drawing x0=0 y0=0 pixels = requests.get("http://example.org/mario.json").json() while 1: idx=random.randint(len(pixels)) x=pixels[idx]['x']+x0 y=pixels[idx]['y']+y0 color=pixels[idx]['color'] pixel = place.get(x, y) if pixel["color"] != color: place.draw(x, y, color) Or: while 1: for idx in range(len(pixels)): x=pixels[idx]['x']+x0 y=pixels[idx]['y']+y0 color=pixels[idx]['color'] pixel = place.get(x, y) if pixel["color"] != color: place.draw(x, y, color) The randomizer would work better for a 'botnet' so it doesn't continually restart from 0, but the latter would be more complete. Where the JSON returned looks like this: '[{"y": 0, "color": 0, "x": 0}, {"y": 0, "color": 1, "x": 1}]' Generated from: pixels = list() pixel=dict() pixel["x"]=0 pixel["y"]=0 pixel["color"]=0 pixels.append(pixel) pixel=dict() pixel["x"]=1 pixel["y"]=0 pixel["color"]=1 pixels.append(pixel) json.dumps(pixels)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Because if it gets even as complex as `foo + ' ' + bar`, it already starts to seem more elegant as `f'{foo} {bar}'` - it's a higher-level way of thinking about how the strings go together. And once you've ceded that, `special cases aren't special enough to break the rules.`
honestly, I just put a sleep in and let it run. The plan now is to let the system guide the bot. It'll listen on the websocket for "damage" in the area and fix that pixel. If you are drawing a new image then the noise of everyone else's actions will start it off and then (my favourite thing!) vandals will guide the bot to finish the picture once it's recognisable.
I'm not being overly sensitive. I do open source. There are certain people that are conistently rude. Other people are consistency polite. Guess who gets their problem solved? Look at the title of this post. Someone said that this whole thread was not about shaming, but should be a source of pride because it was fixed quickly. Does the OP's title sound like it's praising anything? If it's not ok in business, it's not ok in open source. 
&gt; `**dict(my_animals._asdict())` Note that you already have a dict from the method, so just `**my_animals._asdict()` works fine. You could also use `.format_map(my_animals._asdict())`, as well as the other suggestion.
&gt; Something that lets you specify a picture and top/left coordinates and it paints the first non-matching pixel to match the picture would be good. Then collaborators can share a picture. I made that, you can find it here: https://pastebin.com/87dqJRcA
I'm curious if you've seen these videos. Do you think something like this would make it easier to program by voice? [VimSpeak](https://www.youtube.com/watch?v=TEBMlXRjhZY) [Tavis Rudd at PyCon 2013 controlling emacs with dragon naturally speaking](https://www.youtube.com/watch?v=8SkdfdXWYaI) 
&gt; the growth factor of frozenset. ... Wait, what? Isn't the whole point of `frozenset` to be immutable? Why would a growth factor come into play - just during construction? Would it be unacceptably slow to "trim" frozensets after construction?
A lot of doctors should be using this.
You should post the source code with a permissive license to help others in your situation!
Making sure that it actually works the way it's intended to. (Although if I'm thinking straight, round-to-nearest with phi^n will always give the right value anyway.)
I guess RSS would be a start http://pib.nic.in/newsite/rss.aspx Fetch all items in RSS Loop through the RSS Save each page Or similar 
That's a common misconception, where an author believes that his work is 'too messy and useless'. I guarantee there's a really good chance it would still be useful.
I "do" open source myself (https://github.com/kootenpv), and I have yet to see a negative/rude comment. The title of the post is more "click-baity" than rude in my opinion. But I guess we're not going to agree on that one. Have a good day.
I've tried learning it myself. I understand the concept but can't get it to work, any reading/testing recommendations?
There is [Hylang if you are interested](http://docs.hylang.org/en/latest/) Also if you want to try common lisp, there is [a really cool emacs library that might help you code without having to input parentheses](https://www.informatimago.com/develop/emacs/emacs/pjb-cl-magic.el)
I think join is faster in a tight loop but I might be wrong. I see + as "let's concatenate these two strings", join as "I have a list of strings I have to concatenate" and f-string as "I need to construct this complicated string out of a template and a bunch of variables". 
No effort in trying
Speechless! 
Looking for a remote full time job, I have 14 years of Scala experience. I would like to only work part of the day. I haven't written Scala in 10 years, but I'm excited to try it for the first time. I have a few projects I worked on in my spare time. They are all in [Malbolge](https://esolangs.org/wiki/Malbolge). You can find them at my github: https://github.com/iamsuchanoob. Prefer jobs within 20 feet of my house.
You should provide more info. My guess is that you are using Python 3 and you are getting a TypeError because you need to do convert the inputted strings into numbers. You can use `float` for this: `float(input('A:'))`, etc. Also you need to do proper string formatting with the `print`. If you have Python 3.6, you can use f-strings very similarly to what you are trying to do there: `f'X = {quad_1}'` Also, use [/r/learnscala](https://www.reddit.com/r/learnpython) for beginner questions in the future.
What is the error you are getting? On first glance the parenthesis around the input function is not necessary. And there may be a problem with converting from strings to ints. Cannot really know any better without an error message. 
Hey, that's pretty good. I'm finding the definitions of OOP and other things really easy to understand, nice job :)
Omg I just found out about your story and just wanted to say congratulations. Way to go sir. 
I have some projects you can help. https://github.com/rochacbruno/Flask-GoogleMaps/ https://github.com/rochacbruno/flasgger/ 
Of course you can use lists with a for-loop. &gt;&gt;&gt; greeting = 'hello' &gt;&gt;&gt; things = ['cat', 'dog', 'mouse'] &gt;&gt;&gt; [f'{greeting} {thing}' for thing in things] ['hello cat', 'hello dog', 'hello mouse'] If you don't have the pleasure of using 3.6 and f-strings, you can use string formatting: &gt;&gt;&gt; ['{} {}'.format(greeting, thing) for thing in things] ['hello cat', 'hello dog', 'hello mouse'] 
April 1st is terrible for my programming induced autism.
How hard is it to teach it new styles of writing? This could be useful by the CIA to forge their much needed "suicide notes" ....
Sorry, super new to Python. What???Haha . Could you possibly write out a quick example if it's not too out of your way. Thank you
I've used it for desktop applications many times using wxPython. I have found it quite reliable and easy to use.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
There was a project that I saw and contributed to a little a while back. [q](https://github.com/borzecki/q) while this is not a hugely active project something similar that allows quick "man page"esk like lookup and code examples would be great. even if it would send back simplified version of python.org.
Yes. PyQt is my favorite of all options.
That's false, it does not dump locals in there, it actually parses the string to get *exactly* what it needs!
How do you interact with the web browser? Can you use a mouse?
Do you mind if I copy your code onto my github project to make it easier for people to download?
Python for desktop apps is definitely the 'road less travelled' - there definitely aren't as many people doing it as there are using Python for web app backends, or for scientific computing, so there's less info out there about it. But I quite enjoy not having thousands of 'best practices' to read about. ;-) I wrote [a blog post](http://takluyver.github.io/posts/so-you-want-to-write-a-desktop-app-in-python.html) a couple of years ago about the Python-for-desktop-apps landscape. I don't think things have changed massively, but there are some interesting updates in the comments. I don't think there are *any* really good options for cross-platform desktop apps. Besides Python, the main choices are: - C++ with Qt (but yuck, C++) - Javascript with Electron (looks modern, but even simple apps are big and slow to start) - Java
Amen to that, You can create some really nice-looking and high-functioning desktop apps with Python using PyQt. There's a huge amount of documentation online, takes a short while to get the hang of it but it's really intuitive stuff once you've got the basics
Amazing! I am a university student and I have a lot of notes than I need to take when I'm studying. Does this machine do full note-taking for many pages for example? 
No, but it probably should be higher on my list. Dropbox is an example of a successful python desktop app.
You may be interested to know that Tim Peters, the Godfather of Python worked at Dragon for quite a while. 
 print('"hello world" in scala') 
it's one 'f' vs an extra 'format()' line i'm looking forward to it. bring it on, debian!
I would totally forgive you if you aren't writing PEP8 code :-) Very impressed, keep going!
I agree with you in general for any sane allocator, however given the allocation scheme of his post, it is ceratinly true that the memory would never be reused if you used exactly the golden ratio. He said so in his own post! And it was only with that specific allocation scheme that the golden ratio ever came into the analsys. So honestly I have to ask, what did you mean by "Fun fact: the most efficient growth rate is the golden ratio"? You specifically cite that blog post, but now seem to discount the conclusion of the post. Instead of arguing about nothing though, let's just agree on this: memory allocation does not occur in the simplified fashion of his blog post and hence the most efficient growth rate certainly isn't the golden ratio. The specific rate depends on many different interacting factors (space, speed, locality, etc.) and you can only optimize in some ways at a cost to the optimizations of others.
Not at all. Go ahead and make this bugfix: https://www.reddit.com/r/Python/comments/62ph3u/python_rplace_module/dfoyvv0/?context=3
Good catch.
Very kind. Thank you.
I've written several desktop applications with wxPython, tested on Windows and Linux. Big or small wouldn't matter. It's super mature (19 years!). It's also native widgets and a permissive license, unlike PyQT. Only downside is development has slowed considerably and I don't think there is a *fully* functioning version for Python 3.x yet (meaning all widgets are ported over), though some are using it in production.
I'm impressed 
I would suggest checking out all of [coroutines related videos by David Beazley](http://www.dabeaz.com/talks.html) , he is a legend! [This article](http://www.aosabook.org/en/500L/a-web-crawler-with-asyncio-coroutines.html) by guido himself on writing a crawler with asyncio was also very helpful The coroutines related chapters of [Fluent Python](http://shop.oreilly.com/product/0636920032519.do) also contain some good stuff All the PEPs related to async/await are also very useful And lastly, keep trying this stuff out until you get it right :)
Congratulations on your victory!
Because I love my handwriting...is that weird?
This is amazing. Could we see a comparison with an actual letter you've written by hand previously?
Seems the code is designed for his handwriting in particular. If he removes the code that makes his handwriting his own, then the user will be left with a bunch of empty boxes that they will need to fill in with numbers and such themselves. I agree that OP cleaning the code up and releasing it wont help anybody.
A web scrapper would do the job, nrincon.mr@gmail.com, i'm a little bit rusty, but i can i could help.
By 'object' I suppose you mean structuring your app in an OOP way? What jumps out to me is separating concerns. Some concerns you might have: * data storage and retrieval * calling other programs * usecases * command line interface I would design interfaces around these things. What I mean by 'interface' is a set of functions or methods (behaviours) that you rely upon; such that anything that has the correct behaviours can be relied upon. This allows you to swap two implementations of the same interface so the code that relies on it won't notice. You could do that with objects; you could do that with functions. Data: You could have a class that writes the data to file system in the same way you have. If you ever wanted to use a SQL database you could just swap out the object responsible and the rest of your code still works. Calling other programs: Design classes for each external program to encapsulate the fact that it's calling out to a program. It's methods can mimic commands and parameters the external program needs. Use Cases: This is your "app". This object knows how to call other programs, write to the database object and so forth. You could have a function / method for each use case. The app doesn't know you're writing to the disk, it only knows about your data object. Your app doesn't know it's calling external programs because it's only interacting with plain python objects. Commands line interface: This is how you interact with your python app. You define what commands it can receive, the help messages and flags. Each command will call a use case. This let's you add new commands very easily. Isolating this interface allows us to swap it out easily. You could now have a GUI that calls the use cases, or a web server that accepts http requests. The fact that the app is using the terminal becomes an implementation detail. Keep in mind you can use objects, but you don't need them. This is more about separating concerns using interfaces. Python has no formal way of enforcing an 'interface', so you'll have to be on top of that in your code. That is how I would approach it. I hope this helps! Depending on your knowledge you may need to read up on some key words I used here. :) 
Either one of those two would be my top choice for a desktop app. Easiest route to cross platform compatibility.
I did not know that, thanks! Wish they would update to 3.x but it's understandably hard with a large code base. 
This opportunity sounds interesting, my team of highly skilled White-headed capuchin monkies are ready and waiting to accept this offer sirs.
0 and 1? What a fancy way of saying off and on. Sounds kind of sugary to me.
Hello Lanseuo, I too had some trouble with the Todoist API itself, but I was able to use a Todoist library for python which you can find [here](https://github.com/Garee/pytodoist). You can also find my script [here](https://pastebin.com/4iLw36AH). Please note that it was thrown together quickly so it is messy and poorly documented. If you have any more questions feel free to ask. :)
Honestly, most of the time when I am writing a simple cross-platform "desktop" app I just write a webapp in Flask with a local server (imagine Jupyter Notebook; Not that, but the same concept). It's just so quick to throw together a minimal UI, and I know that it'll run just about anywhere.
We only have one bike, but we're willing to put super cool pegs on the front and back so other people can ride it at the same time. 
I have to admit, I was hoping for that github to be real with a few malbolge programs in it
Can bike fly? please confirm
You'll definitely wanna check out the coursera course [Functional Programming Principles in Scala](https://www.coursera.org/learn/progfun1), and a good textbook I would recommend that covers everything in the language basically, would be [Programming in Scala, Third Edition](https://www.amazon.com/Programming-Scala-Updated-2-12/dp/0981531687). Both the book, and the course are taught by the creator of the language, Martin Odersky.
Maybe you are talking about resource and settings files? They make it easier to make changes to your 'app'.
I actually made sure it lead to a dead Github link, as I thought it added to the whole thing. Happy April!