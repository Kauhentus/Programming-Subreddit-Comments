I don't use Anaconda, Windows or PyCharm so this is pure guesswork, but maybe try adding an `__all__` variable to the `__init__.py`. Something like __all__ = ['Timer, 'timercontext', 'functiontimer', 'TimerStats', 'functiontimerstats', 'MemoryTracker'] The docs are [here](https://docs.python.org/3/tutorial/modules.html#importing-from-a-package) explaining the logic behind it. PyCharm might pick up on it to decide if names are in the namespace or not.
Or if you don't really care, just use sqlite.
Well then you should stop trying to use loops and go back to the beginning where you learn what `str + str` does.
Very useful. Not.
Sorry but notepad or leafpad is purer.
You can't \(or rather shouldn't\) just read a file that's utf8 encoded as ascii. You should read it in as ascii and then maybe convert the content and remove all characters that are not ascii. This is a quick idea how it could work: with open\(args.f\) as file: content = \[''.join\(c for c in l if ord\(c\) \&lt; 128\) for l in file\] You will most likely do it more elegantly, but this should work the way you want it to. The content variable will then be a list of lines with all non\-ascii characters simply removed
Quick thoughts: - Very important to stop accepting new plugins that aren't py3-compatible (good choice!) - Doing a "big bang" upgrade (where the old version stops then the new starts) is really risky - it's killed many companies. - If you could run both versions of Python to continue supporting existing plugins for a while (~one year) that would allow time for migration. One release where both work but 2 is default, then one release with 3 as default but 2 still working, then finally take 2 out. - Otherwise, you'll have to port all the plugins (either personally or by talking devs around). Either way, the most important part of this is actually your relationship with plugin developers - keep that going well and everything else is solvable. You'll need to explain why the change is important, why it needs to happen now, what you're doing to support them (this bit looks good I think) - from their perspective, you're demanding free work just to keep their plugins working! TLDR - the migration is IMO a good idea and the timing is good, but your organisational structure is setting you up for a lot of work to make it go well.
So, you want a web framework but not web framework? Not sure if trolling or...
I've made a mistake, I gotta rethink the whole thing, but thanks for help :) 
I mean I don't need to design screens for web applications using Python. Only processor built using Python. 
It's looking good. I always find working on a project like this is the best way of learning new stuff. How about looking at adding tests as the next step using something like [PyTest](https://docs.pytest.org/en/latest/) or [Nose](http://nose.readthedocs.io/en/latest/)? I find PyTest easier but both are very good and widely used. The builtin [unittest](https://docs.python.org/3/library/unittest.html) is also good but is arguably less user friendly. Feel free to message me if you ever want more code looking at or if you have other Python questions. 
Fuck
How can I tell if my version of NumPy was compiled with those libraries? I use Conda for my package &amp; environment management, if that makes a difference.
"egg_shell" did not match any existing version of py.exe on my computer, even though I downloaded [and downgraded] to py v3.2.0 which is the required version for pygame...
Thank you!
Oh, I'm guessing you're on Windows. Not sure. Sounds like something that whomever made the installer program did. Python itself doesn't have any notion of a 'scripts' folder.
https://gist.github.com/blakebjorn/de24417bb032c71c3901a82c79bcf926
oh ok thanks for helping anyway
https://ai.google/education/#?modal_active=none 
The obvious way is to define something that'll act as an iterator, and use that everywhere you need to iterate. Eg. def iter_list(p): while p: yield p p = p.next And use it anytime you want to iterate as: for p in iter_list(l): do_something(p) Indeed, if you've a linked list class, it'd make sense to make this the default iterator (ie. the `__iter__` method) so you could just do `for p in l:, or at least a method on it (if, for example, you want to have different ways to iterate the structure (breadth-first vs depth-first for instance))
Thank you very much for the help. It is much appreciated. :) [This website](http://www.mathinary.com/degrees_radians.jsp) helped me understand radians better, if anyone needs help with that.
Lol. An `asyncio` admirer surfaced to teach me a lesson... well, very predictably :) Concurrency and parallelism are really interchangeable, but someone on the internet decided that they mean something different (I think I know where you convictions are coming from: must be someone like Rob Pike / Go authors). So, if that's your religion, I've an answer for you: Nobody needs concurrency. It's a byproduct of trying to exploit parallelism. Subsequently, nobody needs t solve it. If you only solve concurrency, but not parallelism - you just do something stupid, like threads in CPython. I'll answer other bullet points later.
Started with plugins for Blender, myself.
I'd given up hope, thanks for the reply! I'll give this a shot.
I imagine there's something out there already, but if not I'd love to work on this if you'd like.
just want you to know this post is heroic and so few people understand these things. Python still lacks a realistic solution for parallelism other than multiprocessing and "well if you're IO bound, waiting for TCP results is kind of like parallelism right?"...which is not even something you need asyncio for, threads do it just fine (nobody understands the GIL is released for IO). 
&gt; An asyncio admirer surfaced to teach me a lesson... well, very predictably I wouldn't consider myself an admirer. I've used it and I like it for what it is: a cheap way to get concurrency without dicking with threads. But it's not without failures and faults. &gt; Concurrency and parallelism are really interchangeable, but someone on the internet decided that they mean something different (I think I know where you convictions are coming from: must be someone like Rob Pike / Go authors). They're not though. Concurrency is when two tasks are making progress at the same time, parallelism is when they're executing at the same time. Parallelism is a superset of concurrency. More precisely on asyncio it's cooperative multitasking. You have to give up your execution to let someone else execute. This is probably asyncio's biggest fault. If you block, the entire loop grinds to a halt. &gt; So, if that's your religion, It's not a hill I would die on, but it's important to understand the difference of you want to properly critique something that is using concurrency. &gt; Nobody needs concurrency. It's a byproduct of trying to exploit parallelism. Subsequently, nobody needs t solve it. If you only solve concurrency, but not parallelism - you just do something stupid, like threads in CPython. Like I said, we all hate the GIL. But until that problem is solved the only parallelism we can use in Python is multiprocessing. But you don't seem to understand the why and the history of the GIL and the benefits it offers. Which is why you're making unconvincing arguments. Asyncio is a way of dealing with concurrency in a deterministic manner. That's it. You know, inside any coroutine, which coroutine is running and what it's doing because the coroutine that is running is you. The second you use await or async for or async with you give up your execution so someone else can do something. It doesn't solve race conditions or anything like that, it solves knowing when context switches happen. I'm not an apologist, but you're making ignorant arguments because you don't understand it. 
okay. 
r/learnpython 
&gt; Ultimately, this comes down to how we write code. Most people are more than happy to write code that mixes IO and logic, package that up and ship it to pypi or wherever. But as you've stated, how do you get different async implementations to work together. Well, you really can't but as a library developer you can design an async interface and have users implement that interface with what ever libraries you want. &gt; &gt; Imagine that, actual first class design principles in Python, which are all too lacking in almost every bit of code I read. Hmm, I'm not sure that I agree with you here. Concurrency is seemingly redefined everywhere, but I think the best definition simply compare between task interleaving and true parallelism. I think a lot of the problems people have with `asyncio` is the explicit async sync points, being forced to think about them in order to understand control flow. Personally, I dislike the implementation of `asyncio` itself, I prefer `trio` - I think in many places it's a little over engineered - but it works. I have used it for several projects, and the async syntax made it far easier to reason about "tasks" and deal with futures and promises. Unfortunately I'm rather tired to write a more structured post just now, but I'd be interested on taking the conversation further at some point.
I'd be interested if you could elaborate on this with some examples!
IMO, python3 isn't different enough that you'd "learn python 3". Just change your interpreter to a python3 interpreter, run your tests and fix what breaks. It's barely different than ruby 1.9.8 to ruby 2 was, IMO.
I started working my way through "An Introduction to Statistical Learning" to teach myself modern statistical techniques. It's written for R, but I've been doing all the problems in pandas/numpy since I vastly prefer Python. This is aside from my usual work of using Python to slice and dice terabytes of netCDF files doing science.
I got it working. I edited my post with the final code. Thank you so much for the help. :)
What do you currently know? Based on that I would suggest a particular path. But remember, there is no fixed path for learning since AI is still under development. 
I know Matlab too!....they just started making their code compile-able a few years ago...I hear good things. 
The easiest way with conda is to type `conda list` to pull up all the packages you have installed. For me, numpy is listed as `numpy 1.14.1 py_36_blas_openblas_200 [blas_openblas] conda-forge`, which indicates it was compiled with blas and openblas. Or you could see by starting a Python interpreter, importing numpy, and running `numpy.show_config()` and take a wild guess as to what this undocumented function is saying.
Have you tried numba?
https://docs.python.org/3/whatsnew/index.html
Because string processing in bash is painful and perl is a write-only language. 
Recursion is really nice when you are dealing with trees Lets say your tree is implemented like this class Tree(object): def __init__(self, value): self.value = value self.children = [] you create your tree, with many levels of children, and than for instance you want to get list of all nodes, what do you do? Recursion! def get_all_values(node): return [node.value] + [get_all_values(child) for child in node.children] all_values_from_tree = get_all_values(tree_root) P.S. I haven't checked if this example is working 
woah! what an interesting concept! didn't think about that, thank you so much for the help
Learning python. I mean, playing around in python, mostly.
Adding functionality isn't what moves you from a 2.x to a 3.x version. It's breaking changes to previously existing functionality that makes that change. The big change for python 3 was how strings were fundamentally changed. &gt; The main difference between Python 2 and Python 3 is the basic types that exist to deal with texts and bytes. On Python 3 we have one text type: str which holds Unicode data and two byte types bytes and bytearray. &gt;On the other hand on Python 2 we have two text types: str which for all intents and purposes is limited to ASCII + some undefined data above the 7 bit range, unicode which is equivalent to the Python 3 str type and one byte type bytearray which it inherited from Python 3. [Reference](http://lucumr.pocoo.org/2014/1/5/unicode-in-2-and-3/) A lot of other changes that happened between python 3.0 and python 2.6 (which released ~2 months apart) have been added into python 2.7 already, dict comprehensions for example. IMO, the change isn't that big a deal - logically. What sucks is it is a big deal syntactically. Little things that are heavily used like xrange or the print keyword are not invalid in python3. But the way to learn this, is to do, not to read. Every minute spent doing is worth a hour of reading.
It's a different approach to solving a problem. The way I think of it is that loops take a problem, start from nothing and then build up to the solution. Alternatively, recursion can try to take a problem, and continuously simplify it to an easier problem until the solution is trivial. That can sometimes be easier if the path to the solution isn't obvious the other way at first, e.g. [Towers of Hanoi](https://en.wikipedia.org/wiki/Tower_of_Hanoi). Some problems are just recursive by nature, and can be easier to tackle that way. For example, dealing with nested data structures, where you may not know ahead of time how deep the structure goes (e.g. trees, as another user suggests) is pretty hard to do any other way, to my knowledge. As a simpler example of my first point, considering a function like summing the numbers in a list using loops vs recursion. [ Obviously this is a built-in and I'm being more verbose in the code than I need to, but it's for the sake of demonstration. ] def loop_sum(my_list): count = 0 for number in my_list: count += number def recursive_sum(my_list): if len(my_list) &gt; 0: return my_list[0] + recursive_sum(my_list[1:]) else: return 0 In `loop_sum`, you start with a count of 0, and then go through the list and add each number to count. For a problem like this, super straightforward. In `recursive sum`, you perform an operation that makes the input simpler - in this case, taking off the first element of the list - and then starting over again, making it simpler and simpler until the list is empty, in which case the answer is trivial, 0. [ You could have implemented the structure a bit different, obviously ]. A trade-off in this case is certainly readability. Hopefully that helps? 
**Tower of Hanoi** The Tower of Hanoi (also called the Tower of Brahma or Lucas' Tower and sometimes pluralized) is a mathematical game or puzzle. It consists of three rods and a number of disks of different sizes, which can slide onto any rod. The puzzle starts with the disks in a neat stack in ascending order of size on one rod, the smallest at the top, thus making a conical shape. The objective of the puzzle is to move the entire stack to another rod, obeying the following simple rules: Only one disk can be moved at a time. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
I've got `numpy 1.14.1-py36ha266831_2`. `show_config` returns a list of items like ``` mkl_info: libraries = ['mkl_rt', 'pthread'] library_dirs = ['~/miniconda3/lib'] define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)] include_dirs = ['~/miniconda3/include'] ``` So it looks like it may use mkl? I suppose installing from conda forge may be better?
I was recently having dinner with (amongst others) a former industry professional and he said that he's never used recursion in his entire career. I mean it's basically a loop but it's just a way less intuitive way of doing it. The point of writing code (python especially) is readability, so why make factorial(x) return x*factorial(x-1)? It's just not as readable as generating a list and multiplying it together, and it's not even as fast to run as some tricks that you can do when multiplying a list of consecutive numbers together. It has neither of the advantages and it makes people pause for a second and run through the code you just wrote mentally. Especially if it's called some_random_function(x) that returns x* some_random_function(x-1) or something you have to go 'oh ok, it's a factorial, I see'. The most you can say, professionally, is that it makes you look clever. 
Recursion is **not necessary** and moreover - it makes additional overhead because system has to store current variables to call stack and then pop them from call stack. So, when you can replace recursion easily with loop, do so. On the other hand, recursion can make you write lesser amount of code, and, in several cases recursive algorithm is simpler to develop.
[For Hire] Webscraping and other small jobs using Python Beginner looking to learn stuff and make some spare cash. [A single testimonial](https://www.reddit.com/r/testimonials/search?q=captmomo&amp;restrict_sr=on) [Github](https://github.com/captmomo) Example flask app, pygal graphs made with scraped data: https://immense-headland-56609.herokuapp.com/
I think you forgot to include the link to the article / tutorial / whitepaper. 
Sounds like your prof wants a rudimentary ORM of sorts. Your solution should probably look something like: persistor = Persistor() c = Course("Python 101", "CS") persistor.save(c) courses = persistor.load() Your entities shouldn't need to know how to save and load themselves. Your prof wants a new module that takes your entities and knows how to save and load them.
Yeah I'd really like to! I'm currently learning the AWS ecosystem, so I'm really no expert but S3 seems to have a quite simple CRUD api to build something over. I'll keep looking for a project out there, id nothing satisfying comes up I'll PM you. (Or PM me if you have some ideas already!)
Neither of those are IDE's
Cool, another worthless article, to people who actually want to understand: `*args` = everything after required variables in a function, will be stored in this list, `[arg1, arg2, arg3]`, values only. `**kwargs` = everything that isn't part of predefined keyword arguments, will be stored in this dictionary, `arg1=value` becomes (in kwargs:) `{..., "arg1" : value}` That's all it takes to explain pretty much everything about them, I couldn't ever find a simple and short explanation on this and it's infuriating, learned how they work by simply testing. Basically, if you can't explain it simply, you don't understand it, so don't fucking try to explain to me what you don't understand, thanks.
&gt; numba I never heard of it but gonna give a look at it thanks :D
No problem you should also consider cython, pypy, dask, nuitka etc and just reexamining your analysis process to see if there are any algorithmic speed improvements. Also profile your code to make sure this part is the bottleneck in your application
IndexError: joke index out of head's range
&gt;#A simple example &gt;Let’s take an example to illustrate the main purpose of this lib, and consider the following sentence: &gt; "What will be the weather in paris at 9pm?" &gt; Properly trained, the Snips NLU engine will be able to extract structured data such as: &gt; { ... "slots": [ ... { "value": { "kind": "InstantTime", "value": "2018-02-08 20:00:00 +00:00" }, ... ] } Shouldn't the `"value"` be `"2018-02-08 21:00:00 +00:00`. **21**(9PM) instead of **20**(8PM)?
Alright I think that makes sense, in class he said that most of the work would actually be based on the interface and very little of the assignment mark mattered on the implementation because he wants us to be able to use our persist interface for what ever method of persisting we want. That being said I'd assume I would first make a persist interface which would have the abstract methods for load, save, etc. then have a module that extends the above method that will actually implement the abstract methods. I think I am right in thinking that but correct me if I am wrong? Based on your response I'll go and work on it, and maybe I could come back to you with it? Thank you for your help, I think things seem a bit more clear now.
So far, I’ve taken a class in compsci that was based off of python. That class, used learned mostly syntax, functions,loops, essentially all the basics. Now, I’m reading “how to automate the boring stuff with python” so I can start some small projects as much as I can. After I’m done with HTATBS, I plan to read “learn python the hard way”. I’m currently taking Linear algebra and discrete mathematics at college. I’m pretty new haha
Paris is UTC+1
* Tornado + Twisted + Redis Queue + Threads * HTTP is used for the most part, for everything else Redis Queue is used. * Frontend is it's own beast and has been completely separated from the backend (a few services still renders frontend in the back). The frontend just makes HTTP/Websocket requests and Nginx routes them to the appropriate service. * This is a broad question and I'm not sure what you classify as "abnormalities". Can you clarify? We also do some "wizardry" with Postgres triggers and notify features. RabbitMQ is also used but not in any meaningful way. It's still a "working concept" of sorts. Redis Queue meets our needs but it might not meet yours so you should explain what you plan to do.
You're right we'll update the doc, thanks
There's plenty of tutorials and books available, without a solid question I wouldnt know where to start. /r/learnpython might be a better place to ask. Personally I'd use Python 3+, and if imagine manipulation is your main goal Pygame might be better suited than tk.
No need to. I was incorrect. /u/revolsuna corrected me [here](https://www.reddit.com/r/Python/comments/835q1v/snipsai_opensources_its_natural_language/dvg2pg4/).
That is incorrect. In fact one of the most important proofs in computer science is the fact that recursion is *not* more or less powerful than the alternatives: The [Church-Turing thesis](https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis). What the gentlemen in the video is referring to are fixed length for loops, i.e. loops that can only iterate over a given interval. Adding while loops (or GOTO) grants the additional power that is necessary to achieve Turing completeness, with or without recursion.
**Church–Turing thesis** In computability theory, the Church–Turing thesis (also known as computability thesis, the Turing–Church thesis, the Church–Turing conjecture, Church's thesis, Church's conjecture, and Turing's thesis) is a hypothesis about the nature of computable functions. It states that a function on the natural numbers is computable by a human being following an algorithm, ignoring resource limitations, if and only if it is computable by a Turing machine. The thesis is named after American mathematician Alonzo Church and the British mathematician Alan Turing. Before the precise definition of computable function, mathematicians often used the informal term effectively calculable to describe functions that are computable by paper-and-pencil methods. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Nice one! Although their bad explanation lead directly to your better explanation... so it had some value at least. Cunningham's law strikes again! Seriously thanks tho.
You can right that function iteratively with a similar line count using bfs/dfs. stack, values= [root], [] while(stack): node = stack.pop() values.append(node.value) stack.extend(node.children) return values 
Sorry yah what I meant was the base class. ok now my only other question I can think of before going to work on this is in part 4 of the task description where its says that we shouldn't be using the factory methods, I get that he is referring to something like the following ## factory methods for Course allCourses = {} so when I take my persistence out of the class' could I just outright remove those factory methods?
The best advice about recursion for beginners is to avoid it. If you must, watch this: https://www.youtube.com/watch?v=Qk0zUZW-U_M
Yeah, sqlite is perfectly viable for this kind of application, built into python standard library, and still more consistent than mysql.
C# really got it right, it's really very pretty.
Seriously though, it seems like everyone and their dog takes a stab at explaining it but ends up confusing people more (myself included) I never understood them until I watched sentdex's Tkinter tutorials. Check him out, That guy is a blessing. 
both of your responses are heavy on personal insults and condescension and short on real responses to the points made. the author clearly understands the difference between concurrency and parallelism, as gleaned from those sentences which compare and contrast them, while making the intriguing point that we really are trying to get parallelism in all cases. When we use async or threads so that multiple IO streams are all waiting for data at the same time, we *ARE* attempting to invoke parallelism, just not CPU parallelism. I've seen an enormous number of blog posts about asyncio and pretty much none of them seem to shy away from claiming the advantage of asyncio is "speed", which implies either that a novel form of parallelism is being introduced (it's not, IO doesn't block even with threads) or that the context switching overhead of asyncio is cheaper than that of threads (I've seen this argued both ways however my own benchmarks indicate that thread context switching is overwhelmingly faster than that of async). &gt; It doesn't solve race conditions or anything like that, it solves knowing when context switches happen. this is a circular argument. Why is it an advantage to know when context switches happen for any *other* reason than that of preventing race conditions ? &gt; I'm not an apologist, but you're making ignorant arguments because you don't understand it. you really should practice responding to people's points in a respectful manner rather than insulting them. 
BF compiler with more direct code-gen in Python: https://eli.thegreenplace.net/2017/adventures-in-jit-compilation-part-4-in-python/ 
True, as I said, choose a style and stick with it consistently. But imho there is no wrong choice.
Not to nitpick but I'm pretty sure that loops are an optimization of recursion not vice versa. There are certain algorithms which could be expressed via recursion but not via loops, or at least not without going insane.
Novice question here: &gt;The drawback being that your user must submit their data through a web form, which may not be ideal when implementing an API. Couldn't you utilize a front-end form, take advantage of WTForms, and just jsonify the result of the validated form, then pass that to an API?
We love to do code reviews in r/learnpython btw, so after you work on it some more feel free to drop by there and ask if anyone else has more ideas. Critiquing other.people's code is also a really good way to learn.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
You should highlight the offline aspect a bit more I think. It's definitely a key selling point for many applications and seems to not be the default if it is not mentioned. Great library. Might look into it.
1: read the sidebar 2: post in /r/learnpython 3: read THAT sidebar, especially the part about not posting images of code and about formatting your code properly for reddit.
Huh. Interesting problem. What are you struggling with? With regards to the algorithm, let's consider the worst kind of brute force. You make query for 'a' and record the 5 values it returns. Then you query for 'b' and record the five values. Then 'c', 'd', ... 'z'. Then 'aa' then 'ab' then 'ac' ... zz'. Then 'aaa' ... 'zzz'. I guess you go on like this until you've reached some sensible limit. Maybe 30 characters? When to stop isn't really clear. I guess you just hope that all the usernames are less than 30 characters. But ... uh ... Is there a better way? Is there some structure to this problem that can guide you how to search?
&gt; Except he honestly doesn't if he says they're one in the same. They're not. Concurrency and Parallelism are different. you're thrown off by the line "concurrency and parallelism are interchangeable". They are interchangeable in the sense that a program that is written to expect concurrency is by definition (race condition bugs aside) compatible with parallelism. I can write a threaded Java program and if I run it on one core, it's concurrent; if the OS puts it on multiple cores, now it's parallel. second paragraph, also some intriguing points: "Nobody needs concurrency. It's a byproduct of trying to exploit parallelism. Subsequently, nobody needs t solve it. If you only solve concurrency, but not parallelism - you just do something stupid, like threads in CPython." clearly the author treats concurrency and parallelism as two different concepts. But the statement, "nobody needs concurrency", what could that mean? I had to think about this (which is why i think this author is really intriging), and here's why. We claim asyncio and threads with GIL give us concurrency but not parallelism. But we're talking only about CPU parallelism - we *do* get IO parallelism, in that if we send off requests to ten web servers, we wait for *all* of them while they each work on getting us a response *in parallel*. If for whatever reason asyncio had a limitation where it only allowed a single blocking IO call to be in play at a time, clearly everyone would find that ridiculous and nobody would use it. This is what the author means by "nobody needs concurrency".
This is true. But are you really saving yourself anything by manually implementing the call stack? The best case space complexity is O(log N) and worst case is still O(N) regardless of if you use the call stack or a stack (or queue) that you write. The simplicity of recursion for many tree operations is very beneficial assuming the tree is something like balanced. On the other hand, if you're trying to do fancy code interview stuff like level print a tree or reverse print a tree, etc., then recursion can very quickly become your enemy and a stack or queue can make your life far easier.
I just skimmed the article, saw this as the end, and immediately knew that it was not worth my time. I like to *hope* that the author knows this, but it certainly isn't clear. In my quicker, one-off stuff, I will often just do def myfunc(*a,**k) since it is easier and faster. Other times, especially if someone else will look at the code, I use conventions.
Sometimes you can simplify your code greatly just by using recursion. There are performance penalties and memory limits to contend with when it comes to recursion that the programmer must be aware of, however. But it is often the case that a problem simply does not need to be performant and where the stack has far more space than a given recursive function is likely to ever need. If you're writing something that can handle it and if recursion lets you write a given bit of code in a few lines that would take you dozens of lines with iteration, then go for it. Why not?
I don't know enough about your class or prof to know if you're doing it right either :) But generally, I think you're at least on the right track. I'm going to pull a prof move and say "the rest is left as an exercise to the reader", but a few final thoughts: 1. `.text` isn't a great extension. Your original file used `.txt`, this probably should too. 2. I wouldn't name your class `PersistImplement`. It doesn't describe how the implementation works, and doesn't leave much room for naming a new implementation down the road (ask yourself, "how would I name the next one? `PersistImplement2`?") 3. You still need some way to load courses, but you probably are aware of that missing piece already. 4. Look at the API from your original file and try to make it *less* flexible. Your original backup method as a default file name but it can also be set by the user. Make your new method do that too.
The "retiring" date isn't the same as when users will stop using it. I suspect (As with other languages), that as the language stops addressing the needs/desires of newbs and focuses on the niche desires of the old hands, it'll stop seeing growth amongst beginners and start its slow decline. (Never fear, another language will rise to take its place.) 
What are you using as your sources for tkinter parts if you don't mind me asking? 
There's a `Scripts `folder in the root of python installation, it is added to the path of the environment if selected in the installation on windows. By default, it contains easy_install.exe and pip.exe. If you install packages that has scripts in it's setup.py (entry_points of distutil.core.setup), the exe will be copied there and you can run them directly.
Yes you are right, I don't think my comment was necessary I apologize for that. Although I do think in almost all cases(besides *balanced* tree traversals because the call stack is extremely unlikely to go above 1000 frames) it's likely better to use an iterative algorithm especially in python. 
Except that one time where flood fill blew up my stack and I had to rewrite it iteratively.
Some of that dank, of course.
The stdlib already has a solution for this: `loop.run_in_executor(...)`
Yes, from what I read it appears WTForms is an option for an API. The client just needs to indicate in the POST request header that it is a form. However, this would require implementing all the WTForms boilerplate on the backend, without being able to take advantage of the templating shortcuts WTForms offers. I'm generally inclined not to include a library without a compelling reason, but I do think either way is a reasonable decision in this case. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Should have used an iterator
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
spam
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I'm just getting started, but I'm keep good notes, so I should be able to build a tutorial when I'm done.
spam
spam
Check out https://github.com/kennethreitz/bucketstore for nice S3 interface
Maybe. I've been looking for an excuse to play with postgres. I'm a DBA and having postgres experience would expand my resume a bit. I don't want this project to turn into a feature creep situation. Reading through your other replies though, I think you may be biased. I already manage several MySQL databases in a production environment (for several years now), and I've rarely experienced the problems you are describing. I had one slave server a few years ago that had a couple corrupted tables, but the master was solid, so were our long-term backups. It appeared to be hardware related, as our other slave servers were unaffected. Are you sure you weren't having underlying hardware issues? What OS were you running MySQL on? Although I haven't had corruption issues with MySQL, I am concerned about security. It's had several severe vulnerabilities that I didn't enjoy mitigating... In any case, thanks for the suggestion, I'll start looking into postgres. 
If there's a Tkinter reference out there, I've probably referenced it at some point, including the Tcl/Tk docs and source code as well. The [nmt.edu reference](http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html) seems to be the most complete and reliable IMHO, though it's 8.5 only. It seems like every reference I find is incomplete and slightly dated in different ways, so I've learned to believe nothing I read without experimentation.
That's where I intend to go with this, but want to start collecting data this year, as I'm not planting anything due to a new pup, that chews and digs up everything in my yard...
I'm not really going the Arduino route. All of my IoT devices so far are Raspberry PI's, so I can customize the OS for connectability and management. I wish that better bundles for environment sensing were available for the Pi. Arduino seems to win that race hands down.
This is one of the sweetest “we have removed your post” messages I’ve seen in a subreddit. Did you just type that all in?
I'm assuming all variables are know and you don't want actual mathematical expressions to be solved where values are just variable names as placeholders (parameters). Basically, you need to get (or write your own) expression parser which exposes AST (Abstract syntax tree), then for every step, log it somewhere, and that's pretty easy to do, since to parse and expression, you go over entire AST of said expression, so every step is saved. Python std has AST, of course, because it needs to use AST in the same process when parsing and executing your code, so why not just expose it. https://docs.python.org/3.6/library/ast.html [NodeVisitor](https://docs.python.org/3.6/library/ast.html#ast.NodeVisitor) sounds like what you might be looking for. Though, there might be a module that already exposes it without you having to do it yourself, but I can't recall any.
Cool, it's your time to shine and write your own. I've written such thing before and it holds data in images pretty well, doesn't seem to be slow either, but it has no encryption or offsets in place. Basically, you just store information in every least significant bit (most left one, and it's least significant for a reason) of the image. This implementation is written for 32bit PNG images only, but you could edit it to support 24bit PNG and probably JPEG (even though that's a bit more complicated). [It's nowhere close near finished, but might be useful to someone](https://hastebin.com/bebaqivoqe.py).
OpenCV would be a good starting point
It's possible, yes. But probably not very easy. Aside from some python knowledge, I think you can do it with the opencv library. Keep in mind that an encoded video is not just 30 pictures per second, though.
Please do. Should be interesting.
**Ackermann function** In computability theory, the Ackermann function, named after Wilhelm Ackermann, is one of the simplest and earliest-discovered examples of a total computable function that is not primitive recursive. All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive. After Ackermann's publication of his function (which had three nonnegative integer arguments), many authors modified it to suit various purposes, so that today "the Ackermann function" may refer to any of numerous variants of the original function. One common version, the two-argument Ackermann–Péter function, is defined as follows for nonnegative integers m and n: A ( m , n ) = { n + 1 if m = 0 A ( m − 1 , 1 ) if m &gt; 0 and n = 0 A ( m − 1 , A ( m , n − 1 ) ) if m &gt; 0 and n &gt; 0. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Depending of your matrices strutures, there is some great sparse system solvers (https://docs.scipy.org/doc/scipy/reference/sparse.linalg.html#solving-linear-problems). It can lead to huge performance improvement.
And he never stated the opposite.
I admit I am biased, because I strongly believe postgresql is the superior product. There are just too many simple cases that produce surprising behavior, inconsistent data, unexpected data transformation, etc. in mysql for me to consider it a good tool. Cases any number of my friends have encountered in production or at home. If you're in a channel with dbas, you'll eventually hear the inevitable mysql horror stories -- they're in no short supply. There may be cases where mysql is, for the time being, marginally more performant. To know this you need a very in depth knowledge of what is going on at the table layout level on both databases, and the use cases are odd indeed. I haven't heard of one that isn't better solved with a different tool than mysql, either. I can assure you that no harm will come from picking up postgres. It's one of the best-made pieces of software in the world, I would wager top ten. Enjoy
I became a wizard at Excel, and then I started learning database stuff (started with Postgres), and I was like “hey, I don’t have a programming interface like VBA with Excel, and my only other programming experience is with MATLAB”, so my dad (IT Systems Architect) told me “MATLAB sucks, you should learn Python.” Didn’t believe him, but now I sure do. Python is the love of my life
For example, if your data structures are recursive, like trees or something, then often recursively-expressed algorithms will be simpler and cleaner. There are a few sorts of problems where CPU time and memory make a difference. But for many/most problems these days, some other resource is the limiting factor. Developer time and maintenance costs are often the scarce resource. In these cases, fewer lines and clearer = better. 
Sadly, that's the truth. Python has a soft recursion limit, which can be extended with sys.setrecursionlimit(). However, even with that in place, you can seldom go beyond 2000 depth. The sad part is that there is no need for that limit to be there. It's just a decision Guido made. [David Beazley: Generators: The Final Frontier - PyCon 2014](https://www.youtube.com/watch?v=D1twn9kLmYg&amp;ab_channel=PyCon2014) provides an ugly but working solution..
I’m currently in a data science and machine learning course. I have a background in Pharma, start ups, project management, analytical chemistry, and some biotech. I’m in St. Louis. I’m looking for moving into data science later this year.
I can't speak to your exact problem but I can say that 3.2 is *not* "the required version for pygame". I'm using Python 3.6 and pygame installs right out of the box with `pip install pygame`.
Selenium-python would be great for this. 
&gt; A quad core processor usually has only one APU/FPU so leveraging multiple threads for math operations don't always translate to significant performance increases. No, a quad-core processor has 4 floating-point units and 4 fixed-point units, and it's been that way since the mid-1990s. Secondly, NumPy uses internals for most calculations. Almost everything within the `numpy` namespace is internal, IIRC. Where that changes is submodules, like `numpy.linalg` which is compiled against OpenBLAS or MKL, generally, or `numpy.fft` which is FFTPack or MKL-FFT, for example. The reason Numba can beat NumPy with 1 core is that Numba blocks the calculation to fit into L1 cache, whereas NumPy doesn't have the benefit of pre-processing so it generates full-sized temporary intermediate results. 
Ok I'm one year senior to you, don't you have AI in your course? If you want to learn it earlier i would suggest Googles ai site or Udemy 
Sometimes the Numba concept of "just add @jit" is a little too simplistic and people lose a lot of performance as a result. `@numba.jit` has a bunch of important flags: `nogil=True` `nopython=True` `parallel=True` They are all `False` by default. Enabling them would probably allow you to skip using `dask` entirely in this situation. Read the docs: https://numba.pydata.org/numba-doc/dev/reference/jit-compilation.html 
Sadly, decisions on the big bang upgrade have already been made. It was decided that it'd be too much work to support both Python 2/3 interpreters at the same time. So we'll have two versions one where only Py2 add-ons work and another where only Py3 work. But there will be around two years time difference between them. So it's not gonna happen overnight. I'm probably late in saying this but I'm not a Kodi Core Dev or anything, I'm just a student hoping to work with them during the summer on these problems. Right now I'm just trying to think of what would be the best way to do this. Like you suggested a way to run flake8 on ONLY the changes introduced in a pull request. Is there a way to do that with 2to3 etc? Problem is that 2to3 / futurize are made as fixers, they run and fix things, but we actually just want to report them (like linters do.) I looked into how we could create a flake8 plugin that uses lib2to3 for providing linting, but haven't yet been able to come up with a working PoC.
Excellent thanks. Im seeing some tutorials online for this already
Great thanks for the info. Yeah my files are 23.976 and can be hours long. Im sure processing time will take a while
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Try to print your variable "scores" and you'll probably see what's wrong :)
What did the lesson attached to this homework question try to teach you? I suggest you review that material and ask for help in class. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Rather than lotly could you maybe use (bokeh)[https://bokeh.pydata.org/en/latest/docs/user_guide/export.html]?
Yeah, talk is in Russian, but I've made English subs myself, so you get 100% same experience :)
It is, but it's only available on Linux. I can't believe there isn't something like this for windows...maybe I will take a crack at it. Thanks for the code to get me started!
It's a tool.
Cool Beans
One thing though...could you provide some commentary on what each function does in your code?
Why would a Python user want to use latex and Markdown? Don't we already have ReStructuredText and Sphinx?
One thing to notice is you don't need to call `asyncio.ensure_future()` when you are passing in coroutines into `asyncio.gather()` since `.gather()` will call `ensure_future` for you. This example in the article: async def run(): # We create an empty list to store our coroutines in f = [] for x in range(1, 6): f.append(asyncio.ensure_future(meow(x))) await asyncio.wait(f) could be re-written as: async def run(): coros = [meow(x) for x in range(6)] x = await asyncio.gather(*coros) print(x) Also note that `.ensure_future()` for running tasks is an obscure syntax where you can call `loop.create_task()` which is much more explicit. And in python 3.7 you will be able to call `asyncio.create_task()` which will allow you to not have access to the current event loop thus avoiding the `asyncio.get_event_loop()` call if you are spawning tasks within a coroutine.
1. I haven’t tried either of those. 2. Rendering math characters, auto generating figure, ToC, and table numbers, and LaTeX templating are essential for academic publishing. 3. What this amounts to is basically GitHub-flavored markdown with in-line LaTeX math that renders to PDFs. Feels super comfy to write.
Look into emacs org-mode and org-babel. You don't really need to learn all that much about emacs to get to the point where this use-case addressed. 
Are there IDE-independent versions?
ReStructuredText is a markup language created for Python for the purposes of documentation. It's essentially the "official" markup language for Python. Sphinx is the standard tool to create Python documentation (although it's also used by non-Python projects). Sphinx can embed matplotlib plots, use templates, embed Python code - and LaTeX!, etc. Here's a create example of a math-oriented documentation page both about and generated by Sphinx, which has the text needed to produce it at the end of the page: https://matplotlib.org/sampledoc/extensions.html And the Sphinx home page: http://www.sphinx-doc.org/en/master/ I think if you check the list of features you might see that generating math-oriented documentation, including LaTeX and rendering to PDFs is covered. Sphinx and Jupyter Notebook/IPython are Python's answers to Knitr and Markdown. 
That's fantastic! Is this pure research or is there an specific engineering application this will apply to? I work in rocket propulsion and I'm definitely familiar with running simplified versions of Navier Stokes to get quicker answers... our performance prediction codes are similar in comparison to full CFD solutions.
Thanks for the info. I'll definitely experiment with rendering `.org` files through GitHub. 
`range2d` (generator) you're iterating over linear "bit stream" but image is two dimensional, so it just calculates the x and y in the image while iterating only over n amount of bytes. Could be done another way, but that's how I made it more readable. `message_to_bit_stream` (generator) iterates over every char, converts it to actual byte value, formats it properly to 1's and 0's and then returns a single bit on each `next(gen_object)`, used to store bits in least significant bits of rgba without making entire thing unreadable. `int_to_bit_stream` (generator) same thing just returns bits of a number instead, used to store message length (first 4 bytes that are stored in image rgba values tell it how long the actual message is) First loop in both encoding/decoding is reading/writing message length, second one is reading/writing actual message. Nibble is 4 bits. [Everything else boils down to understanding how binary operators are used to manipulate individual bits](https://stackoverflow.com/a/47990). In encoding, in first loop, generator provites bits that are written, in decoding, the opposite thing is done, as it not might be obvious, it just puts bits into right locations, since it was written in most significant to least significant direction, it must also be read that way, so first bit that is read is pushed 31 bits to the left, so that it's first one, the next one is 30 bits... and till all length bits are read. After that the nibbles are reconstructed in the same manner and stored in a list, which later on takes two nibbles at once, and ors them: nibble1 = 0100 nibble2 = 0110 byte = (nibble1 &lt;&lt; 4 | nibble2) &amp; 255 = (`0100`0000 | 0000`0110`) = `01000110` &amp; 255 = 01000110, `&amp; 255` is here to just to be sure that there's no trash, which in this case won't happen, but you never know, once we have a byte, we can convert it back to character.
I know how generators work, but thanks, I'll keep my loops.
'Cause Russians are bandits, even if they're coders.
You should probably put an example up (a link on the main README.md) I'm not sure I'm willing to go through the effort of trying this out without knowing what the output will look like.
&gt; to nitpick but I'm pretty sure that loops are an optimization of recursion not vice versa. Nobody said that recursion is an optimization of loops. Looping and recursion are completely unrelated concepts that merely happen to be equivalent to each other. Yes, that's a very idiosyncratic definition of "completely unrelated" :-) Suppose you have a simple task to perform in real life: you have ten letters, and ten envelopes, and need to put each letter into an envelope. Try explaining how to do the task using iteration. Now try doing it via recursion. Even though they're mathematically equivalent, one is completely natural and the other is not. 
I'm lucky enough to have a subject that is almost fundamental (as we aim to understand how falling films, thin layer of fluid, behave and how some instabilities and wavy structure lead to transfer intensification) but yet have a lot of applications : falling films exchangers and absorbers are used in food processing, energy storage, cooling systems, or to make salted water clean to drink... Very interesting topic, and my next work will be about falling films on airplane cockpit glasses : how it appears when it is raining, and how it can frost and form a layer of ice. 
&gt; There are classes of problems than you can't solve with loops and you can solve with recursion. No there aren't. Any recursion can be converted to iteration, and vice versa. They may differ in efficiency, ease of writing, simplicity, lines of code, difficulty to maintain, etc, but they will be functionally identical.
You're talking about tail call optimization, which is a minuscule subset of all recursion. There's a reason why fans of functional languages with tail call optimization keep using the same old examples over and over again: it's simply not a common pattern. You can, with great difficulty, re-write most recursion into tail calls, but if you're going to do that, you could re-write it as iteration for probably a quarter of the effort. Yes, it might be "nice" if Python optimized tail calls, but that would lead to crippled tracebacks if they raised an exception. Over all, the benefit seems tiny, the cost significant. 
&gt; The best advice about recursion for beginners is to avoid it. The **best** advice about recursion for beginners is to **learn how it works** and when it is better than iteration, not to have superstition against it.
&gt; pretty much the same thing but faster with a loop For simple recursion, sure, but there are other recursion functions that are not simple (non-primitive recursion) that **cannot** be implemented iteratively. [Ackermann's function](https://en.wikipedia.org/wiki/Ackermann_function) is a simple example. In addition, there are a lot of things you want to do with a computer that *can* be written iteratively but are much simpler when written recursively, such as walking a binary tree. One way to iteratively walk a binary tree is to use the [Schorre-Waite algorithm](https://xlinux.nist.gov/dads/HTML/SchorrWaiteGraphMarking.html), but the recursive solution is much easier to write and usually isn't overly expensive. The takeaway is that recursion is a powerful tool if used properly. When faced with a situation where you can use recursion or iteration try the recursive solution first, because it's usually easier to get that right initially (once you are familiar with recursion, of course!). Write your test cases that ensure your program is working correctly, and then test your program for speed. If your program is too slow, examine the performance, line by line if necessary, to find out where it is slow. Guessing where you are slow is difficult when you have any sort of real-life amount of code. Then make it faster in those areas, using the test cases to ensure correct execution.
**Ackermann function** In computability theory, the Ackermann function, named after Wilhelm Ackermann, is one of the simplest and earliest-discovered examples of a total computable function that is not primitive recursive. All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive. After Ackermann's publication of his function (which had three nonnegative integer arguments), many authors modified it to suit various purposes, so that today "the Ackermann function" may refer to any of numerous variants of the original function. One common version, the two-argument Ackermann–Péter function, is defined as follows for nonnegative integers m and n: A ( m , n ) = { n + 1 if m = 0 A ( m − 1 , 1 ) if m &gt; 0 and n = 0 A ( m − 1 , A ( m , n − 1 ) ) if m &gt; 0 and n &gt; 0. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Please see the folder titled “example”, and the files within titled “example.*”
English only?
First, IANAL... be prepared to see that caveat a lot. Second, there are *always* legal issues with using someone else's code in your own. At absolute minimum the issue is ensuring that you have been granted a license to use their code in your product, and then ensuring that you adhere to the terms of that license in doing so. So, since Microsoft doesn't release all of its code under a single license, the answer in your particular case is a great big "that depends", cause you're going to have to find the license they're released under, and your description of where they're being sourced from is a bit ambiguous. If they're incidentally ending up in your code because they're coming from within a Python package that is itself appropriately licensed (ie it says you're free to use the code in your product), then the odds are you're free and clear. After all, all PyInstaller is doing is taking the core Python interpreter and that dependency and putting them into a zip archive with an appropriate header. If they're not coming from within those packages (ie you've somehow got PyInstaller pulling in Windows subsystem *.dll files), then it's up to you to find out if those files are licensed appropriately to your use.
It depends on the license conditions of the DLLs you got from Microsoft, and also on the licenses of the Python packages you used. E.g. although you can use a GPLed package in a commercial application, you can't combine it with any proprietary code (which DLLs from Microsoft almost certainly are). If all the open source packages you use have BSD-style licenses, and the license with the DLLs allows redistribution, then you're probably OK. If you want to be sure, pull together the details and find an IP lawyer to check it. 
What's a GA and what properties does the one in Matlab have?
No please see the part where I said "example on MAIN README" 
We have support for several languages, check the list here: http://snips-nlu.readthedocs.io/en/latest/languages.html
Noooo, please, this post won't be turning into political nightmare *pray.png*
Is there any docs that help developers add support for their own language?
To understand recursion you must to understand recursion.
Not at the moment, but that is one of our current focuses. This is required both internally at Snips and externally for the community.
&gt; cannot be implemented iteratively Another one who didn't get it. **Yes they can**, just not with fixed length for loops. While loops with arbitrary conditions or even just GOTOs are perfectly sufficient to implement non-primitive recursive functions. It may not be pretty, you may need to explicitly manage a stack, but it's completely possible.
To sum up many comments here already, it's a different tool in your toolbox, simple as that: learn how and when to use it. Another thing to point out is don't worry about performance until performance actually becomes a problem. 
Хорошо :)
Not being a Perl user I never knew this existed, so I had to look it up: system(): runs command and returns command's exit status backticks: runs command and returns the command's output 
Not sure who's the one not getting it. Your link points to a solution that simulates a stack. I wouldn't call that a simple iterative solution: might as well just use the recursive stack. And for Ackermann, recursive or iterative, the value blows up so fast that both solutions are useless. Anyway, the OP's original point was "why recursion?". I think the discussion here has shown that there are cases where you don't want to write a complicated iterative solution when a much simpler recursive solution should be your first port of call. Walking a binary tree comes to mind. Later, when running your tests, you might decide to change from a recursive solution to an iterative one. But often there is **no need**.
There's a difference between possible and practical. You wrote "… (non-primitive recursion) that **cannot** be implemented iteratively" (emphasis yours). That is false and, as I've already mentioned to someone else, it is is one of the most important facts in computer science ([Church-Turing thesis](https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis)) that recursive and iterative programming are equally powerful. 
**Church–Turing thesis** In computability theory, the Church–Turing thesis (also known as computability thesis, the Turing–Church thesis, the Church–Turing conjecture, Church's thesis, Church's conjecture, and Turing's thesis) is a hypothesis about the nature of computable functions. It states that a function on the natural numbers is computable by a human being following an algorithm, ignoring resource limitations, if and only if it is computable by a Turing machine. The thesis is named after American mathematician Alonzo Church and the British mathematician Alan Turing. Before the precise definition of computable function, mathematicians often used the informal term effectively calculable to describe functions that are computable by paper-and-pencil methods. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Avoid != superstition The best advice about recursion for intermediates is to learn how it works and when it is better than iteration FTFY
I try to avoid dogshit, does that make me superstitious about dogshit?
If I use Python I should limit myself to Python only documentation tools?
For those cases inv shouldn't be even possible. Semidefinite matrices are by definition not invertible.
You have chosen your own fate. Just install linux then `apt-get install` stuff or use whatever package manager you want or whatever. These pedestrian concerns are more likely the result of more global issues in your environment.
I have 1 SSD on my win 10 laptop and it's full of janky ass VST installs and sample libraries that will make all of the music projects i've made over the past year unusable when i reinstall things. It's just how things work. So i can't really afford to fuck up a had drive partition. And i know i can install linux on VM ware but i'll reiterate. I have one SSD on a laptop that is full of my music files. 
Yeah, the thesis is more of a look at the bigger picture. I could have phrased that better.
With two year's gap, your only hope is to test everything on both systems. Stop accepting new contributions that are Py2-only, put in the hard work to make all the existing stuff work on both Python 2 and Python 3 (and this will be both technical and community outreach work), and you'll be in a reasonable place. Use [python-modernize](https://python-modernize.readthedocs.io/en/latest/index.html) instead of 2to3 - it's much better about keeping code working on Python 2, and handles a somewhat wider range of issues. You can't really do this for 'just the diff' - you'll have to modernise up front, then you can eg. fail a CI job if `python-modernise` creates any changes (and display the git diff to show what needs fixing). This is probably not the news you were hoping for, but that's what it is :/
This looks so impressive. I can't wait to start tinkering with this! I'm going to try building a chatbot that can help track my day to day expenses through a conversational interface.
Which version of pycharm are you using?
Thanks for the comment there buddy.
xD
My goodness. Great usage of operator overloading in both libraries.
Try invalidating caches https://imgur.com/a/CXYFD otherwise go into preferences -&gt; editor -&gt; code inspections -&gt; python -&gt; code compatibility
What's wrong with python -m pdb path/to/script in a she'll? May not be as convenient but it'll work.
Not sure what you're trying to imply, but I never had those problems on windows so I'll just assume that you're just another one of those FLOSS skids. I use both GNU OS and Windows and pretty much everything there is the same, installing via apt-get install doesn't change anything if you're stupid and can't use your computer properly. Instead of giving biased advice, actually suggest how to fix a problem.
Are you sure your Python interpreter is in your PATH variable of environmental variables? Have you tried running a bare python interpreter? `cmd.exe`, then `python`. Do you really need the IDE? You could just install clean python, then use something like sublime3 to write your code until you actually figure out what's wrong with your IDE.
Those quoting the Church-Turing thesis as some sort of evidence should also realise that it's unproven (that's why it's called a thesis), and it says that recursion can be replaced by iteration *and unlimited storage*, so it may not apply in the real world. I personally think it's important in Mathematics and Computer Science, but quoting the Church-Turing thesis is missing the point of /r/learnpython.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
Some people are scared of CLI, others just never tried it.
So in my opinion there is only self-learning, so good on you for taking the next steps. Teachers and professors can’t make the thoughts in your head, you have to do that for yourself. So keep trying and the most important thing I’ve learned is that you need to give yourself a ton of leeway. It took me a long, long time, well into my adulthood to let the imposter syndrome pass on by. Whenever I didn’t understand something, my first thought was, “well I must be an idiot.” You’re not; something’s just take time. I say the mantra in my head, “you’ll get it eventually.” I remember late teens to early 20s as the hardest time in my life. You trying to figure more and more stuff out and it’s really tough. Tough for many different reasons, but it’s tough for a lot of people. Don’t let Instagram and Facebook tell you otherwise. There is not life after programming, there is life while programming if that’s in your future. You have to make social choices and realizing what your preferences are takes time. That’s what college is good for. You realize that there is a wolrld out there that isn’t just the one you were born into. When you see the choices, then you will discover what you actually like. That’s probably hard to see while in high school. Don’t give up on yourself: ever. Learn and grow. Change things up if it’s not working for you. It gets better. Write you own future (as best you can). 
Yeah, I know about cli fear, and was just offering *a* solution that would get a debugger up and running rather than getting bogged down trying to solve some issue in a separate program. 
https://www.reddit.com/r/MachineLearning/comments/5fekv2/d_using_a_cnn_to_extract_text_from_a_pdf_file/
What a *darn* shame.. *** ^^Darn ^^Counter: ^^481601 ^^| ^^DM ^^me ^^with: ^^'*blacklist-me*' ^^to ^^be ^^*ignored*
No. I think they would've considered me a person that doesnt tan leather, and therefore has no need to be collecting dogshit. Overall you are right, beginners should ideally learn everything about everything. But considering many beginners will be discovering functions and loops for the first time, telling them they should also understand recursion is a tad unrealistic. More of an intermediate subject. There's goes your superstition! Now unless you can demonstrate why it is so vital a beginner understands recursion before they understand other basic concepts I propose it is you who is the superstitious one. Isnt 'cargo cult' the using of code you dont understand? Thats the very opposite of what I propose. I'm saying get the basics down first before you give yourself an aneurysm trying to grasp recursion. Ok I wasnt explicit, I thought the reader could gather the implication by reading between the lines. I guess not. Yes I removed the comment. Is that a problem? I thought it prudent to discuss it further following your misinterpretation.
Yep, I misunderstood who I was replying to and then clarified a bit more later :)
Hot take: 80% of all people using MySQL or psql don't have enough data to justify it and should be using sqlite instead. 
`from subprocess import run` since Python 3.5
Didn't have to do that. Being new to Python's async paradigm, I didn't realise that you can't use any async keywords outside of a function. Silly me ¯\\\_(ツ)_/¯ Thanks for your help though :)
I'm on version 2017.2.4, but I've found the issue (editing the solution into the OP)
The issue with sqlite is concurrent reads and writes rather than data size though. MVCC made it much better, but a single writer is still blocking every reader. And you need a broker if you want multiple applications to use sqlite over a network, and then you've got to implement your own services related to that (replication, load-balancing, …). These are perfectly valid reasons to pick postgres (or mysql I guess).
There is a need for that limit. The C stack will blow up eventually. Python has a limit so you get a proper exception rather than a segment fault. 
problems I could think of - task is not run. You may check whether the task was run in Task Scheduler. - user privilege problem. run as user have no access to target file. Try run as administrator. Use full path to target file. - PATH problem. python.exe may not be found and thus not run at all. Try specify full path to exe file and the script file. You may add logging and exception handling in your script to debug the problem.
Thanks! tried it and that seems to work
+1 for org-mode, you can even write a [scientific publication](https://gitlab.inria.fr/fheinric/paper-simgrid-energy) with it. You simply mix some pieces of Latex with the classical org-mode stuff. (disclaimer: I am one of the authors of this paper)
Thanks for the reply. I did check and see that it did actually run. I also upgraded it to run as administrator. I bet adding the full path would do it as you suggested but haven't tried it yet 
Vim!
I’m Ukrainian. Can confirm (Yeah, we are bandits too) ¯\\\_(ツ)\_/¯
Are you explicitly executing the python executable with your script as an argument? That eliminates any issues with paths to the interpreter and/or file type association.
&gt; But considering many beginners will be discovering functions and loops for the first time, telling them they should also understand recursion is a tad unrealistic. More of an intermediate subject. I'm not saying that you need to learn recursion on your first day programming. But its not a hard concept to grasp (although sometimes it is tricky to get the details right). You know how functions can call another function? def spam(): return eggs() Right, well they can call themselves as well. Now you understand 90% of recursion. (It's the other 90% which is tricky.) The basic concept of recursion is not difficult to grasp, people make [memes and jokes about it](http://xahlee.info/math/i/recursion_yesterday_reading_todays_paper.jpg). You want to teach recursion, here is a simple recursive call: def fraction_to_string(numerator, denominator): if numerator &gt;= denominator: whole, numerator = divmod(numerator, denominator) frac_string = fraction_to_string(numerator, denominator) return "%d + %s" % (whole, frac_string) else: return "%d / %d" % (numerator, denominator) I wouldn't necessarily use *precisely* that code in real code, but I have used that general technique. And as a learning exercise, something like this works nicely as a gentle introduction to recursion because there's only a single recursive call. Then you move on to the (inefficient but pedagogical) factorial and Fibonacci examples, and then onto actual useful things like traversing a tree. &gt; Now unless you can demonstrate why it is so vital a beginner understands recursion before they understand other basic concepts I propose it is you who is the superstitious one. Say what? First off, I never said they had to learn recursion before anything in particular, merely that they should learn it. And secondly, before they understand *which* basic concepts? What do you call a basic concept? I certainly don't think people need to learn recursion before they've learned to write functions, that would be absurd, but you probably should learn recursion long before dealing with the complexity of asynchronous programming or threads, for example. &gt; Isnt 'cargo cult' the using of code you dont understand? Thats the very opposite of what I propose. I'm saying get the basics down first before you give yourself an aneurysm trying to grasp recursion. Recursion will hardly give you an aneurysm. Recursion *is* one of the basics. &gt; Yes I removed the comment. Is that a problem? What a strange thing to do. You ashamed of it? 
Can agree with everything but "discipline". I never push myself if I don't want to. The only exception is CS assignments. I still learned a lot more on my own than in CS in general, when it comes to things that I am interested in (procedural generation, not saying that I didn't learn anything in CS course), and I do it whenever I want, it doesn't do any good, you just waste time doing what you don't want to do. And if everything that you try to do related to programming makes you feel bored and lazy, maybe it's simply not for you.
That's very nice of you to explain. Er... thankyou? I think it would have been better suited as a reply to OP tho. I was merely making the point that relatively speaking it should fall lower down the list of things to learn as a beginner. &gt;What a strange thing to do. You ashamed of it? I think social media is generally an unhealthy way to go about interpersonal interactions, it fosters certain egocentric behaviours. Therefore my account is in a state of fluctuation, some of my comments exist in a temporal dimension. They are out there in the ether, if you know where to look, but by removing my ties I relinquish any control over them. Think of it like a git commit. Now that's strange! Relatively speaking removing a comment isn't that strange. I think I figured you out tho, your problem is relational. You like to drill down and make tiny details important while ignoring the bigger picture.
Well... yes. But Sphinx and ReStructuredText aren't Python-only; they're for general-purpose documentation. 
&gt;are used pretty much everywhere except in python-land But... you're *in* Python-land. And in Windows-land you use giant GUI programs that cost $600 and export in CHM format. https://www.helpandmanual.com/order.html https://www.helpndoc.com/store
Not really.... http://ericholscher.com/blog/2016/mar/15/dont-use-markdown-for-technical-docs/
i had the same problem, then i switch my opencv version in requirements.txt to opencv-python==3.2.0.8 and it solve the problem, but i don't know why.
Whats with people keep wanting to make discord bots recently? Strikes me as suspicious, people with 0 experience all of a sudden want to write a very specific program. If you've got 0 experience, do some tutorials, read a book, quit clogging our Internets with your inability to google. Those industrious few might even try reading the sidebar!
I stated the reason in my post... the game i play is rather popular. I’ve been watching videos on youtube for hours but cant find what i need. i would love to learn, but dont know what it even is that i need to learn. thanks for your non-help 
Discord is very popular
youre non-welcome (try posting to /r/learnpython )
I gathered that much. But why?
Sphinx advocates in this thread don’t seem to get that there is a difference between *technical documentation* and *writing technical documents*. When you are writing books or scientific documents, you generally write a codebase, then *write about* the code rather than document the code itself. The proportion of prose to code is pretty high in those cases, which makes Sphinx unfit for the job.
Hm, why what? If it's "why are so many total newbies wanting to make discord bots", then it's probably that they use Discord a lot, see how many bots there are, want some certain functionality on their own server, and figure it wouldn't be too hard to make their own bot for it. So they ask for direction here
Okay, you lost me. I literally spelled out the reward for you: they get their own bot that does a thing they want it to. And re sheer number of requests, are you not getting just how big Discord is...?
Preference is a big reason
Hi, That's an awesome article and tool you've built. We've built something similar - mock json as a service: https://fakejson.com No installation, no configuration ready to be used immediately. Check us out!
Now we're getting closer to the truth.... but what makes you think I'm not already automated?
So ``subprocess.check_output`` would be the Python equivalent
Maybe your time would be better spent with, you know, your gf? Just a suggestion. 
What do you want to learn about the messages?
&gt;although you can use a GPLed package in a commercial application, you can't combine it with any proprietary code (which DLLs from Microsoft almost certainly are). * http://www.gnu.org/licenses/gpl-faq.html#FSWithNFLibs * http://www.gnu.org/licenses/gpl-faq.html#SystemLibraryException
With IPython Notebooks for examples, very nice!
What's the purpose when RMarkdown can handle python code block ? And why not using pweave, Python equivalent of Sweave/knitr ?
relevant: https://xkcd.com/1425/
Why would a non-Python user use a Python based documentation tool? See how stupid you sound?
You definitely don't want to be working with a PDF for this... should have kept the originals
nice
Yeah, the issue is they auto-delete after a while if you text enough. I thought they were saved, but nope.
To have a fun project to work on.
Nothing, really. Just see some graphs.
&gt; Care to back that up with a source? My understanding is that modern processors share an FPU among the cores. Think about it, what you are saying makes no logical sense. Why would anyone buy a multi-core CPU for data processing if it only had one FPU? Look up the performance metrics for NumExpr and Numba as a function of the number of threads. Look up MPI performance statistics. &gt; What are you referring to by Numpy's internals? The source code. It's on Github. https://github.com/numpy/numpy If you found a difference between different backends, perhaps it was because one was compiled with AVX2 instructions, and the other SSE2/4? Did you compile both libraries on your own machine?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I would [check this out](https://macroplant.com/iexplorer/tutorials/how-to-transfer-and-backup-sms-and-imessages) so that you have the ability to export in easier to read formats like txt and csv, then the rest of your project would be much easier. Take it from me, working with PDFs is often an enormous headache. 
&gt;Why would a non-Python user use a Python based documentation tool? &gt; &gt;See how stupid you sound? Sigh... they'd use it because they don't have their own documentation tool. In the Python world, ReStructuredText is everywhere. Sphinx is everywhere. Sphinx can be extended with Python. Sphinx integrates with Jupyter notebook, etc. Trying to use something else is like trying to get Swift to run on Android... it's simply a lot more work to get to the same place. Python has an interconnected ecosystem of tools. Leveraging this creates synergy... e.g. the same ReStructuredText you use in Jupyter can be used in Sphinx, turned into a blog with Nikola, edited in PyCharm, etc. There's nothing to gain by trying to shoehorn R's tools into Python. We have our own tools already and they work fine. 
[Heatmap with barplot](https://stackoverflow.com/questions/39409866/correlation-heatmap/48278285#48278285)
You could generalise your function to accept a second point that is the centre of rotation, rather than simply the origin, e.g. import math def rotate2d(point, centre, degrees): rountTo = 15 x, y = point cx, cy = centre th = (degrees * math.pi)/180 a = (x - cx) * math.cos(th) - (y - cy) * math.sin(th) b = (y - cy) * math.cos(th) + (x - cx) * math.sin(th) newX = round(a + cx, rountTo) newY = round(b + cy, rountTo) return (newX, newY) print( rotate2d( (1,0), (1,1), 180) ) &gt;&gt;&gt; (1,0, 2.0) Note the math library includes a definition of pi. Also I have assumed that a positive value for theta produces an anti-clockwise rotation. 
im learning recursion so i wna ask wht would it output as i write a recursive function but didn't finish writing it yet
It's cheaper than a movie, and there's free coffee.
It might be fun to sort the words used by frequency and make a word cloud: https://github.com/amueller/word_cloud
&gt; There are certain algorithms which could be expressed via recursion but not via loops, or at least not without going insane. Unless I remember my old CS wrong, I'm pretty sure any recursive algorithm can be expressed iteratively. Like, there's a formal proof for it. But as you point out yourself: it might be less pretty.
Why not?
Yeah I figured I was just being a dick. Are they saved as images or text or what?
Yeah, it's pretty trivial to do the dumb way, if you want ;) You can just declare your own stack and use that through your iterations. The issue is that it's harder to express and (if I had to wager) probably less efficient. A language will probably have dealing with the call stack pretty well optimized. 
https://xkcd.com/523/
Always love it when bugfixes have a bit of a story and end up having a rather basic solution that just requires a shit load of digging. Reminded me of this gem: https://www.zerotier.com/blog/2017-05-05-theleak.shtml , in case of you want some more core language horror story combined with a look into a speckled history.
Use tesseract to convert the PDFs into a text corpus, use nltk or whatever, then inform her you replaced her with a chatbot :P
Haha the best. It's great: there's a xkcd for everything.
&gt; I think it would have been better suited as a reply to OP tho. Why? I was responding to *you* because of *your* comment to me. Did you forget that you replied to me? &gt; I was merely making the point that relatively speaking it should fall lower down the list of things to learn as a beginner. No, you were making the point that beginners ought to "avoid it". I disagreed, you removed the evidence of what you said by deleting the post, responded to me, and now we're having a conversation where you have backed off from your original position (was: beginners ought to avoid recursion completely; now: beginners can learn it, but not as a high priority). See, conversations are good, we can gain insight into the subject under discussion, maybe learn a few things, even change our minds and moderate our initial thoughts into something more reasonable, and nobody ought to feel bad about it. Or we could just call each other fag and say we banged each other's mom last night, if you prefer, I'm good either way. &gt; I think I figured you out tho, your problem is relational. Oh, well, aren't you the clever one. "I guess I was a bit extreme in my earlier comment, I'll distract everyone by making personal comments about someone I've never met and know nothing about, using my deep insight into human psychology to diagnose his emotional problems on the basis of a couple of interactions over the internet." With insight like that, you ought to write a book and go on Oprah. You'll probably make a million. 
No, what I meant is that a second of encoded video is not just a succession of 30 (or 23.xxx) images. You have a temporal compression too, which means that you first have to decode the video before you can access all images
&gt;Why? Because you explained recursion to me. It was OP that asked. I'm fine thx. &gt;you removed the evidence of what you said by deleting the post Did I though? You quoted me. I stand by what I said. I removed it as a means to commit to it. Its still out there, but I don't have to deal with people misinterpreting it. If you can manage to find it there's a handy link about recursion as a reward. Now it's deleted it cannot be edited. It's set in stone. I think we have different ideas about deleted comments. &gt;you have backed off from your original position Nope. &gt;beginners ought to avoid recursion completely Didnt say that &gt;beginners can learn it, but not as a high priority Or that. I wouldnt state what beginners *can* do because we'd be here all day. I love it! Your parting statement is a what you imagine I might be thinking, and then a criticism of *my* insight. You don't see me waxing lyrical over your thought process do you? I pointed out an isolated pattern in your behaviour in an attempt to bridge a gap of misunderstanding. At this point it is clear to me we agree, and we are heading into banter territory. That's fine too, but there's no need to soil ourselves with innuendo's. I think we can do better than that.
You could just do print ("string var", intvar) 
like rohaq said you can't combine a str and an int var, like how irl you can't do hyskska + 3, because what would that even mean 
Don’t post images of text!
Ok I won’t but why ? Is that the rules or something?
Probably an issue of when you copied the code it changed from spaces to tabs. Go through and make everything consistent 4 spaces for indent.
that's not combining them. It's providing them both as arguments to the `print()` function, and it works just fine. &gt;&gt;&gt; print('a', 1) a 1 
Haha okay, I got so stressed I was like wow, my confidence in my python ability? Gone 😂 
Nike
so i got all of that working and did the majority of the rest of the code myself but i'm now struggling with calling a second function from within another function (btw i'm a complete noob a scripting so this is probably something really obvious to everyone else essentially i need to call the function "displayConsumption" from within the "consumption" function https://gyazo.com/12091f9436d89f2a0e31121b3a2f560d 
Hi, I'm a bot that links Gyazo images directly to save bandwidth. Direct link: https://i.gyazo.com/12091f9436d89f2a0e31121b3a2f560d.png Imgur mirror: https://i.imgur.com/wb8mxh1.png ^^[Sourcev2](https://github.com/Ptomerty/GyazoBot) ^^| ^^[Why?](https://github.com/Ptomerty/GyazoBot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/u/derpherp128) ^^| ^^[leavemealone](https://np.reddit.com/message/compose/?to=Gyazo_Bot&amp;subject=ignoreme&amp;message=ignoreme)
That cryptic error means you misspelled `__init__`. It has **2** underscores before and after. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Do not post imags or video of your code; copy and paste the code and error text. Also, include which version of python and what OS you are using. 
Cool read, thanks~
in displayConsumption change print consumption to print(consumption(var1,var2,var3,var4) get rid of the consumption = bit
Hi, I'm a bot that links Gyazo images directly to save bandwidth. Direct link: https://i.gyazo.com/12091f9436d89f2a0e31121b3a2f560d.png Imgur mirror: https://i.imgur.com/BOjoMkR.png ^^[Sourcev2](https://github.com/Ptomerty/GyazoBot) ^^| ^^[Why?](https://github.com/Ptomerty/GyazoBot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/u/derpherp128) ^^| ^^[leavemealone](https://np.reddit.com/message/compose/?to=Gyazo_Bot&amp;subject=ignoreme&amp;message=ignoreme)
&gt; g of sns THank you but I didn't ask for sns heatmap, definitely there is something that sns can't do for me so that I decided to use pd styler.
You need to actually call it (i.e. put brackets after its name, and maybe some arguments between the brackets). Also, /r/learnpython.
It'd be much more helpful to check your project into version control. Open source projects are free on Github. That being said, I agree with the person below. It's probably just something to do with your line beginnings. A quick google search of the error returned this: https://stackoverflow.com/questions/492387/indentationerror-unindent-does-not-match-any-outer-indentation-level
Dammit I just lost some bets. I was sure Guido was going to cave to all the Linux distros and extend it another 5 years. 
/r/learnpython Also is it LWDCookieJar or LWP? 
&gt; which library should I use? Pillow, which is imported as `PIL`. It's very easy. Matplotlib would be much harder. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Well not sure exactly from your explanation what you want to do but let me offer 2 options: 1) APPDATA["AppName"] will return "start" which is why it throws that exception. If you want to create a list of app names from the csv then you should replace "start" for an empty list. 2) If AppName is meant to be the name on each row of the csv then you shouldn't use append, you should use APPDATA["AppName"] = row ["appname"] Hope this helps
I like this one: https://github.com/jakevdp/PythonDataScienceHandbook
Forget regex, use the python `max` function. longest_word = max(dictionary, key=len)
thanks dude, i really appreciate you taking the time to reply
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Downgrade pipenv to 11.0.2.
Check out flask if lightweight I'd your major requirement.It also has support for sqlalchemy [here](http://flask-sqlalchemy.pocoo.org/2.3/)
But it isn't async... is there a way to make flask non-blocking?
good job
I think that gnix server does that part
Here's my code for writing books in RST. I have written about 8 books using it. https://github.com/mattharrison/rst2nitrile
OK, look, here's Wikipedia take on concurrency: https://en.wikipedia.org/wiki/Concurrent_computing it talks about overlapping time periods. Of course, Wikipedia isn't the authority on this subject, but this should give you a hint that your interpretation of this word is different from how many other people knowledgeable about the subject interpret it. To give you more context, where things are different from your understanding: if you read papers on Transactional Memory Model (this is the formalism for concurrency preferred in some languages, s.a. Haskell, Clojure). The manuals for those languages use "concurrency" to mean execution of multiple segments of code at the same time. What happened is that over time people dealing with this subject used this word without giving it very precise definition. But it seems like at some point, people who were more interested in Communicating Processes tended to use the word the way you are using it, and people who were more into threads and conditional variable or Transactional Memory used the word to mean what the former meant when they write "parallelism". You just happened to land in one camp, without the knowledge of this history and know clue that there is another camp and how they go about these things. This is how you, unquestionably adopted this word to mean something that it only means in the context you happened to be in, but not for the wider audience.
**Concurrent computing** Concurrent computing is a form of computing in which several computations are executed during overlapping time periods—concurrently—instead of sequentially (one completing before the next starts). This is a property of a system—this may be an individual program, a computer, or a network—and there is a separate execution point or "thread of control" for each computation ("process"). A concurrent system is one where a computation can advance without waiting for all other computations to complete. As a programming paradigm, concurrent computing is a form of modular programming, namely factoring an overall computation into subcomputations that may be executed concurrently. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
If all you need is an HTTP API (which is what people mean 99% of the time when they say "REST API"), you may also want to look into the [Falcon framework](https://falconframework.org/).
What makes you think I don't? I've been programming in Python before Twisted, so, I've seen Twisted struggling with this, then I saw Tornado struggling with this. They were all bad, and I don't see `asyncio` as any kind of improvement on top of what those two did. But, Twisted and Tornado were at least justified in failing in that they coldn't change the language's runtime, they were set up to fail from the get go, and it was admirable that they managed to get as far as they did in the face of imminent failure. Python core developers have every tool necessary to solve concurrency / parallelism, but they chose to import a failed patching effort instead of fixing the problem in principle. Why? God only knows, but I think it is a combination of lack of experience, fear of changing big parts of the program (the interpreter), lack of formal knowledge, community process that make it look like it is OK to import the failed attempts from Twisted / Tornado. Perhaps, even community insisted on `asyncio` being done the way it is simple because they were used to Twisted / Tornado and didn't know any better.
Seems like the reason it took ”so long” had a lot to do with how comfortable and able the developer felt themselves to be. Maybe a more supportive environment, in a proactive way, would have seen this problem getting fixed quicker. Maybe it’s just because I’m more on the pull camp when it comes to task management, but I feel that there should be a ”lessons learned” opportunity when a task falls through the cracks in this manner, especially when it’s considered critical in some respects. 
Next post: &gt;\&gt;Hey guise how 2 hax reddit pls??
You just make me feel like writing a bot that replies to your every post and repeats this thing to you over and over again until you start hating the fact that you ever said this. Because I don't know how to deal with spam, besides getting more spam.
Not as mature as flask, but [sanic](https://github.com/channelcat/sanic) is an async alternative. Mind you, putting your service behind something like nginx will help mitigate the need for client facing async though.
Check out flask or sanic, but Django itself is not heavy. In fact it can be quite light weight and give you have limited backend experience, it will likely make setup a lot easier for you anyway. I'm surprised you're instantly throwing out Django, again given you have limited experience, because you should not go into a decision making process like that. Also sqlalchemy is not a database, it's an ORM to deal with a database, but you'll still have to choose a database anyway. I'd recommend postgres. If you go with Django, it can deal with the db itself rather than needing SQL Alchemy as an ORM. You could also do direct SQL statements but given you are trying to do a lot at once, an ORM like djangos would help. Also check out firebase as a backend. They provide a few different ways to wire up a backend and it can be faster and easier than hosting the backend yourself.
That's called having more than one thread...?
Wow! Maybe I should take look in Ruby as well.
I didn't even know Python was around in 1992.
Yup. Python is older than Java.
I would go with matplotlib. Your example image has mathematics in it, and matplotlib supports rendering LaTeX. Also, anyone doing scientific things should be at least somewhat familiar with it, so learning it could pay off for future projects as well.
Firstly, this is more of a question for /r/learnpython . It's important to understand exactly what `dict.items()` does - it gives you a iterator of tuple pairs containing the key and value for each item in your dictionary: &gt;&gt;&gt; a = {'month': 'march', 'year': '2018'} &gt;&gt;&gt; list(a.items()) dict_items([('month', 'march'), ('year', '2018')]) The reason your first example works is because `b` has the same tuple that `a` has. Both have the tuple `('month', 'march')`: &gt;&gt;&gt; a = {'month': 'march', 'year': '2018'} &gt;&gt;&gt; b = {'month': 'march'} &gt;&gt;&gt; a.items() dict_items([('month', 'march'), ('year', '2018')]) &gt;&gt;&gt; b.items() dict_items([('month', 'march')]) Now look at your example of lists: &gt;&gt;&gt; c = {'months': ['march', 'april']} &gt;&gt;&gt; d = {'months': ['march']} &gt;&gt;&gt; c.items() dict_items([('months', ['march', 'april'])]) &gt;&gt;&gt; d.items() dict_items([('months', ['march'])]) Python only checks for equality on the top-level when you use = and &lt;= . It doesn't check for equality lower down. It sees `('months', ['march'])` and `('months', ['march', 'april'])` and says that they aren't equal to each other, because they aren't. Because of this, if you do `d.items() &lt;= c.items()`, it will return `False`.
You can write an async rest API directly with aiohttp. Sanic is also pretty cool. Flask and Django can be monkey patched with gevent if you want to go that route since they're both really popular with good documentation. Just put nginx in front of it and you're good to go. There are others but I would start with these.
&gt; We all hate the GIL and the limitations it brings. But until we can retain its benefits (and there are benefits), non-multiprocess parallelism isn't going to be a thing in CPython. Who are "we"? Is it you? What benefits are you talking about? Non-multiprocess parallelism exists in Python regardless of whether there is a global interpreter lock or not. CPython standardizes its C API. Using it, you can write truly parallel / concurrent programs, which will be run by Python interpreter. It is inconvenient, but absolutely possible. &gt; Other than you can't use async with older versions, because it doesn't exist there, what incompatibilities exist? Wait, so you just agreed with me, but pretended that you didn't? :) I'm not sure what can possibly be worse than an incompatibility on a syntax level. It is impossible to work around in any way. &gt; Because async iteration and async context managers are dependent on coroutines. Yes it's a shame that you can't use them with the wonderful toolkit we have but they also serve a different purpose than their sync counterparts. Different how? I don't see a difference. And, in fact, a lot of other frameworks which implement the same functionality don't see a difference (`lprarallel` in Common Lisp, `pmap` in Clojure). There's even a Python library: `aitertools`, which, contrary to your beliefs, does treat async iterators as if they were the same as synchronous iterators. Why is iterator a bad way to deal with streams? Why would asynchronous iterator be any different in this respect? On speed benefits: I just write in C, when I need speed. I've given up trying to optimize Python code for speed long time ago. Since then, Python benchmarks have only gotten worse. :) But, this isn't the point. The point is that the purpose of introducing asynchronous I/O is to make your program work faster, but outside of few very specific situations, this particular implementation is so slow, that it doesn't make sense to use it. &gt; Mixing I/O and logic... What are you even talking about? You've went so far on a tangent of your own thoughts that you've lost me... I was saying that it is impossible to write a good library that uses `asyncio`, or one that doesn't. This is because library should be prepared for whatever the user code will throw at it, and in the context of `asyncio` it is no longer possible: you cannot defend your data-structures with mutexes because you don't know what kind of mutex to use. You cannot protect your global variables, because you don't know how things will be initialized. You must release your library knowing that there is a defect that will affect % of your users. &gt; You can, you just to adapt the interface of the async code to the sync's expectations. The important point that your forgot to mention is that it is possible only some times. That was also what I wrote in my initial comment to the OP: if you have a library that uses `asyncio` without using `unsync` and another one that uses `unsync` - you have the same problem, possibly even worse due to having to handle two separate strategies instead of one. &gt; But the issue is that it's supposed to be hard to get out of async land because keeping your code in async land gives you more benefits than sporadically dropping in and out. Oh, so, in your mind, whoever designed this crappy library is trying to teach me a lesson? And I have to suffer this nonsense for didactic purposes? Very interesting idea... not.
Machine learning by Andrew Ng is the place to start 
Im not sure, but I remember seeing some kind of "bitarray" on numpy which is supposed to be performant
For dealing with really large numbers you should use the [GMP](https://gmplib.org), and if you want to stick to python [gmpy](https://pypi.python.org/pypi/gmpy/) offer some bindings. Just remember that the GIL is a thing, hopefully inter process messages won't become your bottleneck.
&gt;trying to fathom hyper-optimized C++ template origami Ah brings back memories of c++
It's the oldest scripting language
I never thought about it like that.... do you mean in combination with uwsgi? Could you please elaborate because I feel I'm missing out on something.... If you have 4 workers and they are waiting for a DB, how will nginx help?
Just use Flask+gevent. The async/await ecosystem is a sorry mess right now.
That's not really a good description of what SQL Alchemy library is. Object-relational mapping is only one thing it does (and that's a kind of a questionably useful part, I'd advise against using that). Most of what this library does is about generalizing database-related operations, providing Pythonic interface for the common ones, like transactions, cursors, prepared statements etc. #To OP: Now, a word of caution: if you are looking for asynchronous as in written using `asyncio` library, or Twisted or Tornado, then you should be aware of the fact that unless a library which manages access to database is also asynchronous in that very sense, it will not work together. So, using `aiohttp` with SQL Alchemy is not really a feasible option. But really, you have to come with more concrete requirements, like what is the projected number of requests you are going to serve, what's the projected time those requests will take to execute, what physical resources will you be willing to throw at this task. Who knows, maybe if you want a very speedy server with a minimal memory / CPU footprint, then Python isn't going to give you the answer. After all, Python isn't known for its speed, and sucks at parallel computing... 
No, people from all walks of life smoke weed and drink alcohol and calling me a Chad just makes you sound insecure about participating in either activity.
You need to read up on how to call functions properly - Look at how you've defined your `displayConsumption` function: It wants `litresPurchased`, and `kmTravelled` when you call it. Now look at how you've called it inside the `consumption` function; something is missing.
&gt;/ignore beautiful syntax \- Java developers ca 1995
Nice one 😂😂
Sure, but my point more was that sqlalchemy itself is not the database, And they will still need a database to hold their data. And that's a good point that sqlalchemy itself is not async. In fact I'm not sure I know of a mature project along the lines of it that has async for its db interactions. I haven't looked at djangos in a while but afaik it wasn't either. 
Python isn't even a scripting language in the traditional sense. 
I was more just talking about the load balancing aspect of nginx, and its caching mechanisms. Depending on how much they were expecting a single server to do, those can help by, as you said, having multiple workers. If they're all waiting for a database and can't respond to the client, at the very least nginx can queue the requests and distribute them at a later point. Versus the flask/python server itself getting bombarded with requests. 
I guess it's machine learning? It takes a series of criteria from forms both people fill out and then creates a score for the match based on this.
I don’t know about match.com but Tindr, and it’s spin off Bumble (Whitney Wolfe was a marketer for them until she left due to sexual harassment...but that’s another story), hint in their naming of their programs that their matching programs work like chess games. So Tindr’s system according to news articles is called an ELO system. In chess when two people play a game of chess each player has score representing their rank. The winner gets some points when they win a match while the loser loses points. If the players are equally matched the gain and loss are both relatively moderate and if a grandmaster whips up on a newbie there is little change (because that’s what we’d expect). However, if a low ranked player beats a high ranked player there is big movement in scores. I don’t know for sure that this is how it works (because outside of the company who can?) but popular press articles suggest it. Simply observing the application it appears that each swipe is the equivalent to a “game” and that each user has an internal ELO score. It appears to me based on past usage that the decks of users are stacked so that the most desireable users (I.e. the ones with the highest ELO scores) tend to come first (they are on the top of the deck) probably as a way to keep people swiping. I know this is not exactly what you asked but it’s the same domain and something like this would be easy to implement in python. 
Well, you could simply create a form with questions which you weigh as you like. Then you calculate the similarities/differences by giving positive/negative scores depending on if the answers match.
Perl is a few years older, and various Unix shells even older than that (sh and csh both date to the seventies).
LMFAO 
Thanks！
On a side note, impressive that version control was already done that rigorously back in the day -- given that Python was just 1 year old in 1992. 
It's not machine learning. They've just build a model that takes attributes of two people and computes a score. I doubt the model they've build is data driven; I suspect they've used dating 'experts' to inform the model, so its not machine learning. 
Oh, that's a bummer. Would it be feasible to make a similar algorithm that did? I'm not interested in making a dating app but rather the general type of algorithm, if that makes sense 
This might be a good starting point: [Stable Marriage Problem](https://en.m.wikipedia.org/wiki/Stable_marriage_problem) 
Non-Mobile link: https://en.wikipedia.org/wiki/Stable_marriage_problem *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^158489
**Stable marriage problem** In mathematics, economics, and computer science, the stable marriage problem (also stable matching problem or SMP) is the problem of finding a stable matching between two equally sized sets of elements given an ordering of preferences for each element. A matching is a mapping from the elements of one set to the elements of the other set. A matching is not stable if: In other words, a matching is stable when there does not exist any match (A, B) by which both A and B would be individually better off than they are with the element to which they are currently matched. The stable marriage problem, assuming heterosexual pairings, has been stated as follows: Given n men and n women, where each person has ranked all members of the opposite sex in order of preference, marry the men and women together such that there are no two people of opposite sex who would both rather have each other than their current partners. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Yeah totally, but the difficulty I see is in data collection. If you have thousands of couples who filled in extensive personality surveys (of the type that match, POF, eHarmony etc do), and then have them rate aspects of their relationship, you could, theoretically build a predictive model. However, there are lots of problems with collecting data in that way - who would rate their relationship as unsatisfactory? You're only collecting data from currently successful relationships, not failed ones, or soon to be failed ones. And collecting that data is likely to be very expensive. 
Ok, your requirement is a bit unclear. This place where you would like to cut it, it it always at the first dip or is it some other location? I'm assuming your signal is real, are you cutting the signal at any other spot than the sampling frequency over 2, and if so why?
Docs get revamped? Oh, good to know indeed!
Sound like it's just a [norm](https://en.wikipedia.org/wiki/Norm_(mathematics)). Read up on norms and [nearest neighbors](https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm).
If I understand, you want to search the curve until you find a local minimum? I can't think of any simpler way of doing that than simply walking through the sample points and checking the direction of the curve at that point. In pseudocode, it's basically `while(next_sample &lt; this_sample) add_to_saved(this_sample)`.
but in the "Frequency Response" plot, as you can notice, there's a point that comes before the one highlighted that might stop that while loop. DO you know if there is a function in python that gives me the smallest value of an array? (sorry if the question is really vague, at the moment I'm expecting an RC curve but I don't know what are the other possible waves I might have to work with)
Regarding your first question, yes, it's always the first dip. My issue is that there is a point before this dip that is sort of a local minimum. I didn't get the second question
Ah, I didn't notice that. I believe there is a built in min function, and if not you could use reduce. The other thing to think about though is that the min might not be the same each cycle. Since most real-world sources will have onset noise, you probably want to ignore the first few samples in most cases. 
So the second question: Assuming the signal is real, then your frequency spectrum will be mirrored around FS/2 where FS is your sampling frequency. So any frequency components present in your signal larger than FS/2 wil alias (will be mixed down relative to FS/2 into the frequency spectrum below FS/2. Usually you would design your sampler so that it sampling frequency FS is a little more than 2 times the largest frequency you are interested in. I'll get to your original problem in a separate post. 
Thank you for replying with great details! Is the combination of celery and flask a complicated process to write code? Like I said, I am fairly new to this field and I yet have to learn quite a bit. Thanks
I think the easiest way to improve performance is threading it. Find the first layer of child nodes where the number of nodes &gt;= os.cpu_count() an delegate each node to it's own worker. It should be trivial to implement and you should see a pretty large performance boost immediately. If it's taking 1000ms to complete now it should be pretty close to 250ms to complete on a computer with 4 logical cores. Though that's if you feel like rolling your own solution. It feels like binary tree enumeration is a problem that has already been solved and you might find some preexisting libraries that already do what you're looking for.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [miguelgrinberg/flask-celery-example/.../**README.md** (master → 9d3a35b)](https://github.com/miguelgrinberg/flask-celery-example/blob/9d3a35b89416dd6c3bdef2913033229e6985eb71/README.md) ---- 
Yessir, I took that detail into consideration when designing the acquisition system.
If you want to capture the response in a more general way, you need to know your sampling frequency and the number of samples you are taking. Running a DFT with N points will yield a series of points representing the frequency response at each of K frequency "bins". The bins will be spaced at fsample/N intervals. As the system designer, it is on you to make sure that your signal can be captured at the sampling frequency: in general, you must sample at least twice as fast as the highest frequency you want to observe. You should verify what the Python modules you are using do, but matlab-like libraries will typically give you the two-sided frequency response. If you only care about positive frequency, you would only use half of the DFT results.
You can probably calculate the location of that first dip if you know the behavior of your signal. Are you stimulating the circuit with a square wave? That dip is probably the first null of the sinc^2 function (when you take a square wave to the frequency domain it results in a sinc^2).
Find the peaks of the curve https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.signal.find_peaks_cwt.html. Then just take the first peak. 
try here https://www.reddit.com/r/Python/comments/75jklc/rpython_official_job_board/ 
Yes. Can you tell me if there is much of a difference between using FFT or DFT. I'm going to be honest and say that, when I was searching, I found the two options, but since my teacher asked about the FFT, I didn't think too much about using the DFT
Yeah! 20+ year old code and the author is available for comment! Apparently mircales do happen. Or maybe the open source community is a happier place than the industry.
Thank you
It's likely that the library you're using is using the DFT, it is highly optimized if the number of points used is a power of 2. What I was getting at is that if the second dip is an alias from your sampling frequency, you may only have one dip, and in turn only one global minimum. Is that possible with your circuit? Either way, I don't think you'll be able to do better than walking the array and finding the minimum. There isn't a way I know of to get fft results only up to a point, if you cut it short you introduce spurious frequencies. There's a trade-off between the length of the time series and the accuracy of the resultant frequency.
Haven't seen this method before. Looks interesting. If I'm not mistaken wavelet transforms are quite computationally expensive so it may not be the best from that perspective. It should be good for the OP in this instance though. 
Rexx is the oldest model language with an eval() capability - middle 80’s
&gt; Please no Django as we are trying to remain lightweight as possible That doesn't make sense. Huge websites are built with django. Using django will not make your app run slow. All these frameworks (django, flask, pyramid...) exist and are famous because they are all good, and can be used to build the same things. This diversity creates endless meaningless discussion about which one is better than the other, but it's nonsense. If one of those had shit performance, or was shit in some usecases, no one would use it. Are you absolutely positive you need the code to be async ? Spawning more workers on your gunicorn or whatever is not good enough for you ?
I’ve written a thing with it. Feel free to ask about it.
That's pretty sexy
I doubt they are using ML in their match algorithms, which is what we're talking about. If there's evidence to the contrary, I haven't seen any.
I apologize if I offended you, but I said no Django because it requires more files and more boilerplate to maintain. I'm looking for something easier to write in such as flask or whatever. We are building a social media where posts have comments and I thought it would be great if they are done async. 
As a beginner, I feel like falcon might be too hard for me to catch as my deadline is in 3 weeks. Should I just build it in flask for the sake of saving time? Can you guide me to some good resources that use falcon that goes over building rest api with jwt auth and whatever?
If you want to also talk to it, you can use our assistant builder on snips.ai and share it with the community!
Good bot!
Try sending "password" to that email.
I think it comes from a misconception that you can’t write production code in python. Therefore companies won’t employ python developers. 
Yes, asolutely.
Great, thanks for the comprehensive answer!
What is localhost and what kind of server you have? You can't just send image into nothingness and make it appear, there has to be a server up and running that would accept the request and the bytes of the image. Also, depending on what you want to send, you might need to use stream instead of trying to send entire file at once.
Swiped left? -k * n point, swiped right? +k * (1 - n) points. k is some steady value, say 1, n is modifier, which is well, modifies how much their value is influenced, to give everyone a chance, and not push the "more blessed" ones into infinite score. n could be clamp(`score / average score of entire userbase` * sign(swipe), 0, 1), where swipe is just a -k or +k based on the action. I don't know if I did my math properly, but the idea is something like: &gt;The lower you are, the more swipes to the left bring you back up, but the higher you are, the more swipes to the left bring you back down.
Cool. How does this help your studies?
cool; I've been meaning to figure out python http nonsense for a while now, maybe this'll be a starting point. also, why is the thumbnail a pinball machine?
I make this tool to crawl all internal url's from an website.. basically this get all html tags and your attributes from url, check if is internal, valid if is not duplicate and do this again recursively
It's my github profile pic ;D
Disregard urllib, `requests` is life.
A loot of things. From python scripting, dict's, libraries, POO and function.. to recursion, logic, http architecture. And i spent the night leaning into this script to be honest.
That isn't quite true in Python as the GIL enforces that only one thread at a time can actually execute the Python code even if they are on separate cores. Also keep in mind that bad usage of threading can even slow down the program or more commonly just make it break in unexpected ways. 
Looking forward to it. Python GUI ecosystem is a mess... TKinter docs are way too old to be reliable/useful. 
It might, and Cython might also help, and there are other solutions. But sometimes none of that helps or sucks in other ways. 
I'll keep that in mind if there's anything I need it for. Thank you for the contribution. :) Yeah, I'm not too keen on the anti-clockwise rotation, so I put a bit of code at the beginning of my rotation function that inverts the degrees of rotation to effectively make a positive value for the degrees produce a clockwise rotation.
So mostly as a project to study the language? Cool, been thinking about doing the same. I thought originally you were using it to not get distracted, which confused me.
Super nice, thanks!
This is really bad and stupid. Run bitcoin yourself, maintain a list of addresses that have non-zero balance. Then you dont have to do those ridiculous api queries.
Good job! If you want to continue to refactor or build upon this, here are a few things I've noticed: - Try using `urllib` and `urlparse`(`urllib.urlparse` in Python3) instead of relying on regular expressions. These utilities will cover the edge cases and won't keep you up at night trying to find a bug that originates from an incorrect assumption in a regex. - You have a lot of behavior that can be refactored into either functions or methods. When you start having many nested loops, that's a sign that you need to modularize your code. It will make reasoning about it easier, especially in 3 months when you forget about your code's intricacies. If another person looks at your code, they will hate you less if they can understand it quickly. - To build upon the above, `__init__()` is usually used for initializing an object's state. There is a lot of behavior that could be moved to methods. - To further build upon the above, you might want to consider a `Crawler.crawl()` type of API, where `crawl` returns a list of URLs instead of relying on `__init__()` to print them to stdout. That way, if you want to build an application on top of this library, you have an easily programmatic way to pass around the URLs. - Python has a philosophy of "It's better to ask for forgiveness than to ask for permission." An example of putting this ideal into practice is to ask if key exists in a dictionary, instead of wrapping up an attribute loopkup in a `try/except` block. You can simplify and speed up your program by getting rid of the `try` block on line 40 and replacing it with `if extract[tag] in htmltag:` Keep up the good work :) 
Ok, data driven wasn't the term I was looking for. I was trying to say that the model/function that generates the scores probably wasn't derived from data (because where would they have gotten it?), and therefore isn't machine learning.
But how do you determine matches? Are similar people matched? Different people matched? Or similarity in certain areas (political leaning, desire to have children) and different in others (submissive/dominant, talker/listener) and how do you determine those things without either expert knowledge, or a tonne of data?
Over the past weeks I have started implementing basic machine learning algorithms in plain Python (Python 3.6). I created the repository to prepare for technical interviews and review my knowledge on algorithms such as k-means, k-nn, logistic regression, neural networks, etc. Also, I wanted to create a knowledge base of easy-to-understand implementations of these algorithms together with the most important theoretical explanations. Some of you might find these implementations helpful when starting to learn about machine learning in Python or preparing for technical interviews. I am still working on the repository, so more algorithms will follow over the next months. In case you have a favourite algorithm that should be included or feedback, let me know!
thank you for the tips. I will use it as I perfect this project :D
Have you looked at Scrapy?
Other than a coding exercise there is no point to this. See also this website with all private keys. https://lbc.cryptoguru.org/
I really don’t get why we need this. Can’t pip just be updated ?
I think both Plutus and cryptoguru do the same thing, But I think Plutus is meant to be more light-weight. I read somewhere that it is capable of running on a IoT device or raspberry pi. Also it is written in Python, so it could also run behind a flask webpage.
Then what was it derived from? I'm not sure whether you don't know how machine learning works or whatever, but data isn't the only factor here...
scikit-learn has probably the best API I've come across.
So, are you going to post this twice a day forever, now?
a lot of ruby syntax is much more perl-inspired than python (for better or for worse, I guess it depends on what you think about perl + smalltalk). but there are specific domains that python is much better in (scientific computing, machine learning, etc), specific domains ruby is better in (replacing bash as a systems automation language), and lots of places where it's about the same (webdev, json apis, etc)
I’ve been wondering this myself. I use Quick Base which endorses Zapier for workflow automation, but Zapier is pretty limited. I have a bunch of Python scripts that I want to run based on a trigger, but I don’t know how to set that stuff up. From what I’ve gathered I would need to set up a script to listen on a websocket with a library like Twisted which could then handle events, but I’m a total noob to all this.
My PhD examiners seemed to think I get how it works. Those dating matching algorithms are hand derived by 'experts' - or at least they used to be. If you had a massive dataset of personality and appearance attributes and relationship outcomes, you could probably build a predictive model to do the matching, but I imagine it would suck - but such a dataset would be incredibly expensive (and impractical, bordering on impossible) to collect and let's be honest, why would eHarmony et al. spend money to collect that data when their snake oil algorithm is making them plenty of money.
Requests has a good design, but I feel like it's a bit over-hyped. Imho, it only looks so good because urllib2 was so clunky.
[path.py](https://pypi.python.org/pypi/path.py)
I'm trying to learn Python, to make a website back end out of it. Is there a w3schools type thingy for python? Much thanks. Many grats.
Imho you don't look stupid only because there's more stupid people.
I starting collecting together various algorithms to efficiently compute operations on sliding windows (e.g. sum/max/variance) - here's that collection so far packaged into an easy-to-use Python module. Here are a few [examples](https://github.com/ajcr/rolling/blob/master/doc/recipes.md) of how to solve various problems using the library. They're useful algorithms to know for job interviews, too! Feedback is welcome, as are [suggestions](https://github.com/ajcr/rolling/issues) for other rolling algorithms to implement.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [ajcr/rolling/.../**recipes.md** (master → 5b94a5c)](https://github.com/ajcr/rolling/blob/5b94a5ccc8b8c51f08a074aeb77de6c2200e9746/doc/recipes.md) ---- 
You should try hooking it up into the `threading` library so you could launch multiple crawlers at once ;)
OK, we're talking at cross purposes. I'm not talking about the swiping apps. eHarmony and match use proprietary algorithms to pick your matches based on answers to questions. So you're right, the swiping apps have a very simple machine learning based solution - it's a standard recommender system. It still wont work well because the dataset will be insanely sparse and noisy, but as an algorithm its straightforward. As for the 'personal score' you have, I have no idea what you're referring to. 
Python is a simple language with rich library support, making it a good general purpose language, but libraries like NumPy, SciKit, Pandas, etc. especially make it a good choice for data science, image processing, and machine learning.
I was saying that because when I used requests, it never occurred to me that it had an API that was noticeably better designed or more intuitive compared to other libs I was using at that time (I rarely work with web stuff in Python) -- that was before I used urllib/urllib2, and I only later learned that requests was basically aiming to provide a redesigned interface for these. If I had to list some of my own candidates, I would go with PyTorch and scikit-learn 
I ran away from programming because of C; it's fiddly, clunky and fuck curly braces. I came back to programming ten years later because of Python; it's closer to human language, simple and beautiful but still very powerful.
Just a recommendation - there is a new useful html parsing lib: https://github.com/kennethreitz/requests-html
Don't see the point of that since pathlib was added to the standard library.
Are you looking for something to use or you want to build something? If you're looking for something to use, head over to github and checkout alexapi. It's an alexa client written in I believe in python.
Note here: I am curious but I have no idea about Machine Learning. Is linear regression related to machine learning in any fashion? Seems to me like math used for extrapolation. Can this repository be used for actual stuff, meaning not for the sake of implementing the functions. I am making my own Jarvis at home, and in order to make it any least bit like an AI, I doubt I can do this without machine learning. 
Great tips! One of the most annoying things about programming is it's never "done". Much like writing a novel, you can always go back and fix things and make them cleaner. Props to OP for releasing something to the wild (it's scary to open your trench coat and show your code) and good tips from /u/move_machine 
Good tooling can really help with PEP8 https://www.jetbrains.com/pycharm/
Currently workimg on a bot for amazon-ebay, I am just a junior. Is it possible i could get into more than one project at a time? (Sorry if this is not the place but i am kinda lost on how can i develop myself any further) If someone have a bunch of free time and can explain to me a bit or even my dream to find a mentor i would be glad(super happy if someone takes me seriously)! 
I would be interested in deep Q learning and a genetic algorithm
pathlib Path doesn't inherit from string making its use less convenient, and has not all the functionality available in path.py. path.py has also the minor advantage to be compatible to python 2.7 and almost every python 3 version. (minor because, I know, py2 is end life). 
i have learned something about reddit's interpretation of github today. and the superior library for making sweet snek love to teh interwebs
[removed]
I'll add some advice of my own: - Try to have a requirements.txt file so that others can easily run your scripts/packages. - You can usually achieve that by using a `virtualenv` and `pip freeze` For instance, to reproduce your build I, after I had created a virtualenv with pyenv $ pyenv virtualenv testing $ pyenv activate testing I had to do the following: $ pip install requests $ pip install lxml $ pip install BeautifulSoup4 And then I could successfully run your script. To automate this process you use $ pip freeze &gt; requirements.txt beautifulsoup4==4.6.0 certifi==2018.1.18 chardet==3.0.4 idna==2.6 lxml==4.1.1 requests==2.18.4 urllib3==1.22 and then all you have people have to do is: $ pip install -r requirements.txt ----- Doing your own thing is great and you'll learn a lot but if you want to look for established libraries for reference or productivity I can't recommend scrapy enough. If you need help, just ask. Besides the important refactoring tips (make sure to extract all those literals so that you can modify them through outside sources), you could try using a logging library as opposed to just printing because, eventually, it'll get too overwhelming to follow. Good luck!
More than parroting, it essentially come from my experience when I was "so cool, a stdlib implementation for dealing with path!" and that after a trial I had difficulties to stick with its limitations. Moreover, I wasn't aware of the pep519 : thanks for the info, I will certainly give pathlib a second try. 
I recommends (BeautifulSoup)[https://www.crummy.com/software/BeautifulSoup/]
Django, while having a lot of design quirks (the static file setup, the mono-settings.py, some weird ORM shenanegan), has actually a very good core design. The way it allows to compose pluggable apps, the way it devides urls, endpoints (called views), and templates, and make all that plays together, is quit good for a now not so young anymore software. flask has an interesting API, and it's worth learning it for the decorator based idea. But the way it handles composability and uses implicit objects for inputs and outputs is bad design IMO. requests has a nice API, and don't listen other commenters saying it's just comparing to previous solution. Because try the competitors in Javascript or PHP and you'll see requests is quite well made. pendulum has a pretty well made API for date and times. It's a nice example because it's VERY hard to make anything around time management. Sqlalchemy is a very good exemple of a good BUT complex API. It solves a very complex problem, and correctly. And because of that, it's more complex than it's competitors (django's orm or peewee are easier to grok). Look at it only once you are a bit experienced because it makes sense only if you understand the challenge of it. ww is an fun beast. It's a half finished lib, but it show you how you can create a smooth api to solves the same things that the stdlib does, but in a better way. pathlib (or it's ancestor path.py), in it's version 3.6, will teach you operator overriding done right, the process of adding a new protocol with a dunder method (__fspath__) and helper methods (read_byte, read_text and so on). marshmallow is pushing to the extrem the class based declarative configuration style. You can see with it the good, and the bad. Mostly good because the lib is fantastic, but no API is perfect, and classes have limitations. faker is simple and it does the job well. And because it's simple, the api is, so you can look at it to understand that an API doesn't have to be complicated to be good. Tools can then leverage this basic api to do something more fancy (ex: factoryboy). The logging API of Python is another worth study case. On one hand it's verbose, has a terrible pep8 violating style and bad default configuration values. On the other hand onces you understand how it works, you can see there is not a single useless thing it it. It's a very complete library, with no singular design error. Actually, a lot of libs try to be the requests of logs, but nobody won because in the end, logging ends up always better. pytest is yet another content, not in the design itself, but dbecause it's magic done right, and you won't see a lot of those in computing. Usually, magic is a bad idea and well against the python philosophy. The hashlib, json and uuid libs in the stdlib are simple, well documented and straigthforward. You usually don't mention them because they solve a simple problem and do it without fuzz. But dig a little and you'll see a lot of details: byte vs string, custom encoding, factory objects, etc. phonenumbers is fun, because it seems to solve a simple problem, and the more you read the doc, the more you realize it was actually a freaking hard problem. Now another interesting question would be: what are the successful library with a BAD API, and why.
Is it on PyPI? It looks beautiful!
The Swiss Army knife of programming languages.
Look into the `any` or `all` functions. Something like: if all(x not in i.text for x in excludes): ...
I didn't even know there was an 'all' generator. Thanks for the response but: You don't have to be a fucking dick about it. This is why I hate posting code on forums, to many autistic fucks.
Thank you! 'All' works great. Not sure how I never came across it before? Wierd..
Saves this- just finished writing a network tool myself. Great work!!!!! A web crawler is on my list of projects- always gathering Intel, and this is going in my archive. Greatly appreciate the contribution!!! :D
This looks awesome. How much did you have to customize views/delegates by hand?
That's where you'd start
Terrible documentation, though, IMHO.
I played around with Django one weekend and was shocked by how user friendly it is. Like I had a typo somewhere and it told me it thought I mad a typo and said I should correct it.
EDIT: I tried and it still outputs things from the excludes list, almost as in I didn't even put it in the program...
EDIT: Ran the script with the all function and it still outputs sentences with strings from the excludes list. I didn't even know there was an 'all' generator. Thanks for the response but: You don't have to be a D*ck
That's part of the reasons it succeded. You have better tools for templating (jinja), the orm (sqlalchemy), the routing (werkzeug), and over all anything that django does. But django is really well integrated, which make created a big project __correctly__ (in oppostion to flask which will make it easy to shoot yourself in the foot) way easier than with other tools. Well, except for the the CBV. They are terrible to grasp for any beginer.
lxml has always worked for me but you might look at alternatives for this and other libraries in [awesome python](https://github.com/vinta/awesome-python)
I'll leave the source code over here, to be more easily found: https://github.com/deviantfero/wpgtk **part 1 (bad audio) how to install:** https://www.youtube.com/watch?v=jmY5NEPI4RM **part 2 how to use advanced features:** https://www.youtube.com/watch?v=QXpMMP8fT0o If you have any questions I'll be happy to answer them in the comments in this thread! Enjoy. 
The millions (billions?) of lines of python2 code that are running in systems today will need maintenance for many decades to come, so we still need to understand the differences between 2 and 3. With luck, python 2 will become the COBOL of the mid-to-late 2000s!
autopep8 is easier for new devs to do proper formatting. I recommend it to all my NCG and interns. https://pypi.python.org/pypi/autopep8
Are those tabs? Ewwwwww.
What's the point of sub? Why don't you just return the match? def getfirstsentence(bigtext): re.match(r'(.*?\w{1,}\.)\s', bigtext).group(1) 
But... that literally defeats the entire point of a cheat sheet...
Probably two ways of doing the same thing...?
I love django design structure and the funny thing is I don't even use django! Scrapy's design structure is heavily inspired by django and it's by far the best scraping framework I've used, especially once you get the hang of general structure and some quirks Twisted has.
I used to really like Requests but if you need to extend it or hack on it, it turns out to be quite painful as it's quite implicit and has a lot of pointless abstractions that just makes it difficult to extend. 
Culture books in the examples. Great choice.
LOL 
You are going to have problems with this package: https://www.getlektor.com/
I'm surprised no one has mentioned numpy. Most things in numpy just work without any thought on your part. Want to do a trig function? np.sin, etc. Want to concatonate or anything like that? np.concatonate. Slicing, views vs copies, etc are all beautifully done as well. The specialty things -- fft, linalg, etc, are segregated. It is very well thought out, high performance, and stable. A certain amount of global config magic exists and even something akin to a runtime, but you are blissfully unaware unless you are doing something complicated. And it imports extremely quickly despite its immense size, vs e.g. Pandas importing quite slowly.
&gt; I was just saying that i'm partially intoxicated The fact that you make bad choices doesn't mean others owe you anything. No one is going to congratulate you for being irresponsible and then "trying" when many of us are responsible. &gt; especially for a beginner when the installation fails and I was not in the best mindset to be figuring it out on my own Again. No one owes you anything. &gt; Even after my 2nd and 3rd year CS major flatmates look a look at my installation it still doesn't work in the console Then they're not really good at figuring things out. You're asking questions in a really bad way and you're being an asshole about it. Sober up and read this: [How To Ask Questions The Smart Way](http://www.catb.org/esr/faqs/smart-questions.html) &gt; I also think you you stop trying to be an asshole too buddy. I think I don't give a fuck and I think you're yet another kid who needs to grow up and learn how things work but, hey... you have time. 
I've merged a setup.py someone was kind enough to write, but I'm getting "the only explanation for this is an aberration in space-time" bugs when I switch module paths. If you want to take a shot at it, it's in the master branch. Otherwise, it's a commit or two away.
Linear Regression doesn't exactly strike me as being particularly "machine learning-y" but I'm not an ML expert. Linear Regression is pretty cool though, it's basically a measurement of "how much of the change in y is due to the change in x." It's a pretty useful tool.
While the code for the delegates is not quite that... voluminous, I will admit it did take a fair bit of hit and trial. It is my understanding that making GUI elements look a certain way in code always is. If by views you mean the models running underneath the widgets, the most important thing to remember is what `data()` is trying to do. After that, it's not that much of a task. The view widgets themselves have a bunch of custom functions depending on the content you're viewing, but are otherwise standard Qt widgets in terms of appearance.
It seems to be the thing I need, thank you.
Thanks, that's quite an illuminating reading.
triple matrix product DFT gives only user requested frequency bin outputs. Downside is n^3 time complexity vs nlogn for FFT, but if the "frequency ROI" is small it is much faster.
Programming should be fun, simple, accessible, and free from the ego of old users who resist positive change. That's python!
In the broad sense, it is. You can think of ML as a generalisation of LR for many classes of classification problems. 
Sweet, thanks for the Python/Qt example!
Relevant - https://stackoverflow.com/questions/21225464/fast-ping-sweep-in-python
Yassssss!
You need first to convert it with nbconverter
I will put that on my list, thanks for the feedback!
&gt; flask has an interesting API, and it's worth learning it for the decorator based idea. But the way it handles composability and uses implicit objects for inputs and outputs is bad design IMO. There's no implicit output object. That said, I really like Flask's ambient request object as it makes a lot of things really easy to do that would be much harder in other frameworks. The biggest is creating your own thread local globals that wrap up common actions and stick them in a place that anyone can access. [FlaskBB uses these](https://github.com/sh4nks/flaskbb/blob/master/flaskbb/forum/locals.py) so we can avoid doing the same song and dance when we need to look up what post, topic, forum or category someone is currently viewing. It also enables tools like Flask-WTF to add autoprocessing and Flask-SQLAlchemy to hang life cycle hooks off of. There's also way more to flask than just decorators. Blueprints are a pretty great idea. Flask's implementation of class based views is pretty great. It's also a great example of building a library primarily by wrapping other libraries into a cohesive whole.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [sh4nks/flaskbb/.../**locals.py** (master → 07c7aec)](https://github.com/sh4nks/flaskbb/blob/07c7aecd5877df177d4433ca8d6031c5581cd8f7/flaskbb/forum/locals.py) ---- 
yeah, you might want to pick a different name...
I was wondering if there is something with a flask-ier api. Like setting the bucket name in the config.py file and then a simple api that manages both uploading and retrieving files from/to s3.
Thanks for the reply but how do I do that? I've installed nbconvert but the files still open in the editor.
I want to open .ipynb files in ipython console in Spyder instead of the editor. Previously i used PyCharm, where you can open them in jupyter notebooks.
* It subclasses str, which is handy because lots of functions that take paths expect a string. * It exposes more functionality like rmtree and "remove_p" - remove file if exists.
An easy to learn, easy to read language that allows you to get a lot of work done in not a lot of code, with great documentation and mature libraries. Biggest pro: great syntax + just enough cool tricks , biggest con: not the most performant 
Why are you substituting if you want to extract?
Just to do it the way I did it in PyCharm where you can open the jupyter notebook right in the editor pane, but, okay, i think I'll just use the jupyter nb in the browser. Thanks, mate.
My goal is to delete, not extract. 
You have a text and you want a specific part of it, that is extraction. In this case you implemented this by removing stuff.
First shalt thou take out the Holy Pin, then shalt thou count to three, no more, no less. Three shall be the number thou shalt count, and the number of the counting shall be three - Book of Armaments, 2:9 - 2:21.
sqlite
Yes, but it seems to assume -- probably as a feature, though I don't know the motivation -- that if you're running the command inside a directory that already contains a requirements.txt, or whose parent (or grandparent) contains a requirements.txt. that you're trying to create a project that uses those requirements as its starting point. Try cd'ing into a directory that doesn't have such a file within or above it and try again.
Not sure what you're using text files for but it is quite simple in Python to create/append text files using (http://www.pythonforbeginners.com/files/reading-and-writing-files-in-python)[open()].
What distro is that?
My OCD loves indentation. Curly braces are ugly and waste more time than they should.
One additional button click is apparently waste of too much time.
Suggest you ask on [r/learnpython](http://www.reddit.com/r/learnpython?utm_source=reddit&amp;utm_medium=usertext&amp;utm_name=Python&amp;utm_content=t5_2qh0y) When you do, explain what platform you're on (Windows? Mac? Linux?), what version of Python you're running, and what you mean by "downloaded the module" (did you simply download something called matplotlib, or did you actually install it in a way that allows Python to use it?) 
""" A tuple is a sequence of immutable Python objects. Tuples are sequences, just like lists. The differences between tuples and lists are, the tuples cannot be changed unlike lists and tuples use parentheses, whereas lists use square brackets. """ From [HERE](https://www.tutorialspoint.com/python/python_tuples.htm).
I'm just looking at the current source on GitHub, if you're using an earlier release it may be different, but as it stands it comes down to **pipenv.utils.find_requirements**, which, assuming you're in /home/you/project, you'd expect to search: /home/you/project/requirements.txt /home/you/requirements.txt /home/requirements.txt The way it's currently written you can only get that message printed out if **os.path.isfile** returns True one one of those paths.
Flask, requests, pillow, discord.py
Sorry For the confusion. I'm on Windows 10, and an using python 3.6.4. When I say I downloaded it, I mean I downloaded a file from https://pypi.python.org/pypi/matplotlib. I'm not sure how else to download it to make sure python can use it. 
/r/learnpython 
What didn't work for you with ElementTree? It is not the most convenient but unless you got crazy data it should be able to pull whatever you need. Else I'd go for `lxml`? Also as some other comment suggests I'd write a wrapper that return some more pythonic data from an XML object, like an iterator that returns like dicts or named tuples.
It's arch!
Is it easy to install for a beginner user? How advanced is the customisation on it how advanced is the customisation on it? What distribution of Linux does it play well with? I have Linux Mint. 
thanks a LOT
This week I just released https://pepy.tech In this page you can view the download stats from all the packages available in PyPI 😊
[removed]
Can you give some examples of what it's not excluding? It's easier when looking at the input and output.
A few general comments. I agree that `any` or `all` are the most idiomatic ways to minimise the nested `if` statements. I also noticed that your two `for` loops both use `i` as the iteration variable which must surely be a bug. The following code ... for link in links: url = link could be expressed as: for url in links: I think, if I've understood your function correctly, the `x 
It's really easy to install, just do `pip3 installl wpgtk` (if you already have `python3-pip` package installed), it plays wall with any distro, but I recommend you watch the videos to give you an idea of what you're getting into, the point is that it should be simple and accessible for begginers too, I also include a set of default templates for `wpgtk` so that you can begin from there.
A few general comments. I agree that `any` or `all` are the most idiomatic ways to minimise the nested `if` statements. I also noticed that your two `for` loops both use `i` as the iteration variable which must surely be a bug. The following code ... for link in links: url = link could be expressed as: for url in links: I think, if I've understood your function correctly, that the `x` variable is unecessary; i.e., you can re-write your code as: while True: .... # lots of code except ConnectionError as e: Logger(errors[0], log, e) break # &lt;-- this is sufficient to get you out of the loop
Some more info on how to get started: https://pygobject.readthedocs.io/en/latest/getting_started.html and API docs: https://lazka.github.io/pgi-docs/ We are a bit late to the party, as pycairo had to be revived first and we were using autotools before :)
Just pip install matplotlib and you’ll be good! Your important should work after that. 
Maybe misunderstanding your post but here's an attempt: def some_func(a, b, c) if abs(a-b) &lt; 1 or abs(a-c) &lt; 1: return True else: if abs(a -b) &gt; 2 and abs(a - c) &gt; 2: return True return False 
Maybe misunderstanding your post but here's an attempt: def some_func(a, b, c) if abs(a-b) &lt; 1 or abs(a-c) &lt; 1: return True else: if abs(a -b) &gt; 2 and abs(a - c) &gt; 2: return True return False 
This should work. def funcName(a, b, c): if (abs(b - a) &lt;= 1 and abs(c - a) &gt;= 2) or (abs(c - a) &lt;= 1 and abs(b - a) &gt;= 2): return True else: return False print(funcName(1, 2, 3)) Apoligies if the formatting is messed up. I wrote this on my phone. 
I think there's no default in my distribution, you can definetly install another window manager or desktop environment on your Ubuntu without the need to re-install your whole system though, In this particular post/videos I'm using the i3 window manager.
This is wonderful. I know someone to whom this repo will be very useful. Thanks for posting.
Anti-ad-blocking is done server-side, usually. If the client doesn't download the ad files (because they are blocked by the ad-blocker), the useful part of the page will not be served. You should give your scraper the ability to find the ad files and download them, in the first place. There's a chance this isn't enough.
Machine Learning is any data-driven algorithm, therefore it is. Also, linear regression can be generalized to Gaussian processes, ridge regression, LASSO and similar models. I.e. if you view it as a probabilistic model, this is the basis for many algorithms in the area of ML.
If you want to create native code with Python that can be called externally and used to bridge to other languages, you may want to look into Cython instead.
Put it in a `for` loop with a try/except block. In the except (which should catch as specific an exception as you care about), increment a counter. 
Learning is all about extrapolating. It is using the observations we have to build a model to predict future events. For example, speech recognition. Jarvis can try to tell what you are saying by putting a sample of your voice through a model that is trained to map voice samples to words. Each inference through the model is a guess, but one based on a lot of prior evidence. It will have to do the same for guessing the meaning of the phrase you have spoken. All of this learning a model and making inferences from it is all math and it's all extrapolation. Linear regression is just one of many methods within the umbrella of machine learning, but they all have the same basic properties. The new hotness of deep learning in neural networks is mostly just a matter of scale. At the end of the day, we are still using gradient descent to optimize the coefficients of a model to minimize the prediction error between the model's predictions and the observations that we are training on.
A solution would be to execute the Javascript. There's only one simple way to do that from Python, as far as I'm aware - use a web browser. [Selenium](http://selenium-python.readthedocs.io) provides bindings for controlling Safari, Edge, Firefox and Chrome from Python. Assuming you're using *requests*, change your `requests.get` to `driver.get`, and `response.text` to `driver.page_source`, and you'll get your HTML after all the javascript has executed.
You're right, of course. It's done. Now to see how long I can go without "Forgot to increment version number" commit messages.
There are actually 2 views in the main window. A QListView (in Icon mode) and QTableView that are on top of each other using a stacked layout. They both run off the same QStandardItemModel using 2 separate QSortFilterProxyModels. You can get a QTableView to display images, but it won't look anything like this. The text is displayed on a QTextBrowser. It inherits from QTextEdit so a lot of the rich text display functionality is just a matter of reading the relevant documentation. And that's what I'll stress. Qt documentation is great. PyQt, not so much. It eventually becomes a matter of translating the relevant c++ to your use case.
Just a low rent way they think they're being slick by subverting any potential SPAM sniffer.
Potentially, yes. But the way I see it they'll either learn something from this or end up failing their class anyway. 
So what's my alternative ? Would an FTP server be more feasible for this purpose ?
Yeah, that's what I meant. Thanks!
Tuple is an sequence of immutable object which cannot be changed. But I would like you to try something. After printing L1 and L2 using list try id(L1) and id(L2) you will see that both l1 and l2 pointing to same memory location. Do same after printing tuples you will find different memory location. As as you add an object to tuple it made a deep copy of tuple and added 5 to it. So l1 has only 4 objects while l2 has 5
So if I'm following that correctly, the GObject libraries you use would still need to be installed by other means, e.g. apt? Does the version of PyGObject need to match up with the versions of any of the system parts underlying it?
The guy asked a question. Am I to not help someone based on assumptions?
pyalchemy
&gt; Nuikta &gt; Nauikta You mean [Nuitka](http://nuitka.net/) (not to confuse with [Nootka](https://www.youtube.com/watch?v=LbmYA5rYOVc)).
And here is the code https://github.com/spmallick/learnopencv/tree/master/ImageAlignment-FeatureBased
I didn't even know git was around in 1992.
OP here. I've made this tutorial for those looking to integrate React in Django, with DRF. I would love to hear your feedback. Cheers Valentino
Open source? I’d love to contribute!
This is a link to Twitter that in turn links to an ad for a class. Spam. 
in the near future I plan on making the code open in some way, or to add contributors to the private repo. there will likely be an open version for people to see on github that contrasts with the prod version. 
I have also worked on a project like this before, and would be interested in contributing and could probably up cycle some of the stuff I have already. 
What would be the right way to install this into a virtualenv? 
It is not clear to me what your question is. /r/learnpython is probably a better place for you to post, with a more clear question.
Awesome! The way I'm trying to do this is to have each service "containerized" (not in the docker sense of the word) where each service is a folder containing it's own views.py, urls.py, model etc. Almost like plugins. I have it set up this way right now and it works great (launching new services takes about 5 minutes of work between postgres and python), I just need to figure out a good way to make it dynamic enough so that users could upload their own stuff and everything would work fluidly. It's definitely possible, but it will be a challenge. 
I've been programming in Python for ~7 years now. I would love for someone to post a 0-to-100 guide and some great example projects. The barrier to entry is very awkward, even if the results speak for themselves.
Can I ask how long you’ve been doing Django or learning it? I’m new myself and would like to know how long it’ll take before I can do stuff like this 
&gt; So if I'm following that correctly, the GObject libraries you use would still need to be installed by other means, e.g. apt? Yes &gt; Does the version of PyGObject need to match up with the versions of any of the system parts underlying it? It should work with Ubuntu 16.04+ atm
Ok cool. For a moment I thought you just started recently with not much programming experience and I was like man am I not getting this? I just started learning Django in January so I’ve got ways to go. User login, log outs, security issues, model forms, etc, just a whole lot of confusing stuff so far 
I like it, makes me want to get back to work on my ncurses based reader but unfortunately Windows support is a nightmare due to lack of a resize key event :(
You will get used to checking it. Helps if you have the version number stored only in **one** place and have everything else pull it from there. [In my case](https://github.com/iheanyi/bandcamp-dl/blob/master/setup.py) I only have the version number in the `setup.py` and pull it from there then it gets added to the `__init__.py` on build from which everything else gets it.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [iheanyi/bandcamp-dl/.../**setup.py** (master → 243e537)](https://github.com/iheanyi/bandcamp-dl/blob/243e53768410bd4051002b9e30e7366328b9ad03/setup.py) ---- 
OP here. I've made this tutorial for those looking to integrate React in Django, with DRF. I would love to hear your feedback. Cheers Valentino
The GUI story for Python would be very different if installing a library were actually as simple as `pip install gtk` (or `qt`, `wxwidgets`, etc...) on all platforms.
once you get comfortable with the basics, you'll realize you can manipulate your project/site structure to do a bunch of cool stuff. 
Same for Windows?
I think your math on the number of free-tier Lambda calls is off. 400,000 GB-sec are free. You're using 128MB (1/8 GB) and 100ms (1/10 sec) per call. 400,000 / 1/8 / 1/10 = 32,000,000, not 32,000. Those 10,000 keep-warm calls aren't really even worth calling out in this context.
(This is an open question, and not critisism) Why did you choose to use React as frontend? 
What are you using as the source data? 
Rather than additional code, it would be cleaner to modify the rotation expressions themselves to make the direction of rotation clockwise: a = (x - cx) * math.cos(th) + (y - cy) * math.sin(th) b = (y - cy) * math.cos(th) - (x - cx) * math.sin(th)
There is. But “forever” actually means the latest couple hundred pages of text messages. 
Ready to help too!
various sources. the philly data will come from OpenDataPhilly, the NJ data mostly comes from the NJDEP site. For the static data (govt boundaries and stuff like that), I upload it to postgres with either ogr or QGIS. For the data that updates a lot, like the [Philly Crime service](http://geoplatter.com/services/philadelphia/crime_inct/), I will have scripts that run daily to update it. The crime data gets updated by [this script](https://github.com/cfh294/OpenDataPhillyTools/blob/master/PublicSafety/inct2pg.py) that I wrote a while ago for a different project. Each service's info page gives you a link to the original source.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [cfh294/OpenDataPhillyTools/.../**inct2pg.py** (master → be45a15)](https://github.com/cfh294/OpenDataPhillyTools/blob/be45a15951a34cef357338abad6f53f20d19d4d4/PublicSafety/inct2pg.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dvl9mkw.)
[For Hire] Hello, I am a Python freelancher form the Netherlands. I am a fast learning and motivated developer and speak Dutch and English fluently. Send me an reply if you are interested in working with me. 
&gt; And that's what I'll stress. Qt documentation is great. PyQt, not so much. It eventually becomes a matter of translating the relevant c++ to your use case. yup... that was a frustration I had w/ my own pyqt app, eventually I stopped trying to find pyqt documentation/examples and just sought after qt examples and converted the code myself to pyqt compatible.... luckily that conversion isn't generally too difficult.
(disclaimer: I've never made a discord bot) Use a dictionary API to see if Eric words return as verbs then save the verbs to a json to check before polling the API the next time. You can find lists of verbs to download online to get a simple list started, and remove any verbs not ending in "er". Just my first thought, hope it helps.
I love flask and just started using react about a week ago so I know I had to check this out! This looks pretty cool I like the feel of it. Here is some feed back for the code (this should probable just be a pull request but o well). &amp;nbsp; `overwatchGameScraper.py` I would probable use f-strings or format for `URL` `URL = f'{DOMAIN}/gamer/{GAMERTAG}/videos'`. `clips` I would make a set from the start, don't know if it matters though `clips = set()` `clips.add(VIDEO)` `return list(clips)`. `a` should probable just be named `vidcards` and for the loop I would use enumerate to get the index. `for i, vidcard in enumerate(vidcards)`. &amp;nbsp; `app.py` Again f-strings or format. Use flask's `jsonify` function so the `/video2/&lt;gamertag&gt;` route can simply be `return jsonify(pullOverwatchVideo(gamertag))` Isnt `.iteritems()` only for python2 I though it's `.items()` now? &amp;nbsp; `index.js` Each component really should be it's now file imo. Use `let` or `const`, the rule I believe is always use `const` unless you have an actual reason to use `let`. Use template literals, same thing as python's f-string or format. For example `fetch(/overwatch/${config.platform}/${config.gamertag})` It has to be wrapped with backticks (\`). You can set up a proxy so that when you hit your api all you have to do is `fetch(/overwatch/.../...)`. In package.json add `"proxy": "http://localhost"`. Why do you pass `e` to your functions when you aren't using the event for anything? Anywhere were are you using alot of props or states can you assign them to variables right at the top of render. In body class for example could be `const {stats, loading, videoIndex, videoClass, gamemode, gamemodeIndex} = this.state;`. So now you don't have to put this.state everywhere. I'm pretty new to using map so what does `return true` at the end in your map do? Last why is `APP` put into a variable cant you just return right there? &amp;nbsp; I don't mean to sound overly critical or anything. I hope this helps you out a little.
I'd have to agree. In my experience Packt books are almost always inferior to O'Reilly books in terms of content and editing.
Thanks. I was going to fallback on Selenium but sometimes,it seems that ajax, jscript requests can be intercepted.
https://praw.readthedocs.io/
Did you forget to post a link to the notebook? 
We'll probably look into providing wheels for Python3.5+ on Windows.
This is by far the best introduction/tutorial on the subject. Thank you very much. You've earned a subscriber.
Possibly a working directory issue. Try to change working directory with os.cwd()
PRAW is cool and I'm actually going to use it in the next stages. Now I've webscraped a list of subreddit names, I can give them to PRAW to pull data down for each one :) Do you know of a way to get the subreddit names using PRAW?
Thanks for the 2 upvotes &lt;3
Why is that hard and why do you want a library for that? It's like 5 lines of code. I've done `1 THRU 10 BY 2 EXCEPT 5, 15, 20 THRU 23`, which is way easier/less ambiguous than `1,THRU,10,BY,2,EXCEPT,5,15,20,THRU,23`. obviously the answer is `[1, 3, 7, 9, 10, 15, 20, 21, 22, 23]`. It's still only like 50 lines.
I work mainly with React so it's been a natural choice.
Thank you!
It's moving that way. PyQt5, pyglet and pygame are all pip installable (though the pygame wheels still have some bugs that aren't there if you build it from source yourself).
Idk why you're getting downvoted. You're right.
Well, not a good answer to your question, but `monster? I barely know 'er` would be hilarious to me
You know it's gonna be good when you see `"" % variable`.
Can you do a review of my code?
PM me :)
pipenv == pyenv + pyenv-virtualenv + pip-tools, the difference is also that i am using pyenv/pyenv-virtualenv/pip-tools 6 months ago in some ec2 instances in production. pip-tools has been making reproducible my builds, in dev, staging and prod environment, for almost 8 months ago.
but its a link to his github account...
Falcon looks very good, good blog to test it out
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
This seems better suited for /r/learnprogramming since this isn't really specific to python
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Try this :) for subreddit in reddit.subreddits.popular(limit=1000): print(subreddit)
Ooh nice, didn't get round to that part of the docs obviously! Webscraping was still fun but thanks for the tip :)
What are the names of the files in the directory where this file lives?
Hmm, must have changed, it used to link to a video on sourceforge.
dis.py
Oh, that solved it. Looks like that's a filename sued by pyshark. Duh. Thanks.
Well heck, I was not aware PyQt5 is pip installable. Last I checked, it had a package but still required system packages.
Yeah, a library or module you're using is trying to import the dis module from the standard library. Instead, it's importing your dis module which obviously doesn't have the contents it's looking for, thus the error you're seeing. Try renaming your dis file and see if things work.
No, self learning from the internet, I saw it in a text book, the text book was just a sample one to it did not have answer sheet. 
Are you using the `json` module to process this data? Can you show your code and be more specific about the error?
I mean the script I'm writing it in is in python and the discord API is written in Python. I tried over in /r/learnpython and the response was pretty much "that's too tough" so I figured maybe just /r/Python would be a good place to ask. I'll definitely check over there also though. 
And if I did that, it would be way way way easier. I could basically just take dad bot, change some regex and the phrase and boom done. 
Based on some googling, I tried doing this... py=json.loads('''raw data''') Error: json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1) I'll edit with the link for where I got this method from...
Well, I think it's actually a javascript object data now that I think about it. The data is coming from inside a script tag in an html page.
Awesome, i will take a look on it tomorrow, thanks for sharing 
I have something like 2 years experience with Django and was planning to use this model for a new project I'm starting. How difficult do you think it'll be to learn react? I don't have that much experience on the frontend side
+1 for weasyprint. We've been using it in production for 2 years without issues. You can't just pip install it though, as it has some non-python dependencies.
Ah. JSON and JavaScript objects have different restrictions in what is considered valid. 
Is rust required to install? I made a new 3.6 environment and I get: ModuleNotFoundError: No module named 'setuptools_rust'. After installing setuptools-rust I then get: error: Can not find Rust compiler ---------------------------------------- Failed building wheel for snips-nlu-utils I see nothing in your installations instructions about that. All they say is make a new environment and pip install snips-nlu
Nice! I've been away from Django (my love) for too long and have been wanting to do something with Django and React. I need to read this.
New issue if still available. I just renamed it but got an unrelated error, may have to post a new post: Exception ignored in: &lt;bound method BaseEventLoop.__del__ of &lt;_UnixSelectorEventLoop running=False closed=True debug=False&gt;&gt; Traceback (most recent call last): File "/usr/lib/python3.5/asyncio/base_events.py", line 510, in __del__ File "/usr/lib/python3.5/asyncio/unix_events.py", line 65, in close File "/usr/lib/python3.5/asyncio/unix_events.py", line 146, in remove_signal_handler File "/usr/lib/python3.5/signal.py", line 47, in signal TypeError: signal handler must be signal.SIG_IGN, signal.SIG_DFL, or a callable object 
this would be useful for the bill of materials I get sent by customers.
Sorry for taking so long to reply back. I don't know how exactly the python to exe compilers work, but I think adding it to your setup.py as well would be the safest thing to do. 
Bluehole recently released the documentation for their PUBG developer API https://developer.playbattlegrounds.com/docs/en/introduction.html They haven't delivered any early access yet, so i'm building the wrapper "blindly". I need people to help me building this project and turning it into their community SDK for Python :-)
i'm exited for this project! good luck!
Thank you for the time to write all of that, and to respond. I've had only a handful of interviews and they all seem to go well and then the next week I get the classic "we've gone with someone whose experiences better fit our role" and I just can't help but feel this way because it's like I get that companies want people with experience but how am I supposed to get any professional experience if literally no one is willing to actually train? Even Junior Roles I apply for say "3-5 years experience" and I'm aware that's more of a wish list but I just feel like no one is willing to teach and help me get professional experience so how do I go about getting that professional level of experience not in a job? Not trying to sulk or pout or complain I'm legitimately just curious as to how I get this experience to start my career.
If you already have a defined schema in the form of an XSD file that you can reference, there's a few libraries out there that can auto-generate code to parse those XMLs. https://pypi.python.org/pypi/generateDS achieves something similar
https://imgur.com/a/Pt7Oh ^^^That is what ends up getting scraped and I need it not to be in there yet it accompanies every article despite my exclusions, I am gettting very frustrated. I have tried the generator functions and loops in various different ways all with False results, should I just clean up the data in another function after it gets scraped?
https://caremad.io/posts/2013/07/setup-vs-requirement/
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/FpsByWg.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Yes. Even if you feel no moral duty to not enable cheating, do you really want more posts like this on this forum?
Not sure why it was downvoted.
Beets plus Foobar2000 was the greatest thing to happen to my music organization. Fantastic metadata handling, folder organization, configured for my use cases. Everyone who cares about maintaining a wrap all music library should use beets. 
In `setup.py` you put the packages that your package depends on: perhaps requests, perhaps psychopg, etc. The packages should have little to no version pinning, only exception being if there is a minimum version of a package you require. The reason for no pinning is pip can only install one version of a package, so if you say you pin `requests==1.10` then you might interfere with other packages. Then, in `requirements.txt` you put the packages that you need for the development of your package: coverage, better-apidoc, etc. You don't want Then, at the bottom of the `requirements.txt` you put `-e .`. This way, you aren't double listing requirements and people who want to develop on the package just do `pip install -r requirements.txt` to get both dev time requirements and run time requirements.
Just getting into python, what is a wrapper?
Basically a package that handles something for you, usually wrappers make your life easier when manipulating data from a specific source.
I know what you're feeling! Hope that you can learn something from it. :-)
A bit of advice: def subscribe(self, cmd: type, handler: CommandHandler): if cmd in self._commands: from commandbus import CommandAlreadyExistException raise CommandAlreadyExistException self._commands[cmd] = handler That import in the middle of the method doesn't belong there, it should go at the top of the file. In the odd case this causes a circular import you need to break something out into a new module. You should also [check out my implementation](https://gist.github.com/justanr/5be68b74339d380d4d2e) :p
&gt; There's no implicit output object. You can store anything it "g" and it will leave the current local function, and will be available as an input in the next function. &gt; it makes a lot of things really easy to do that would be much harder in other frameworks. It also make unit testing harder, give you the impression you can share something accross your whole project (but wsgi servers will spaw several processes so you can't). It forces you to deal with this crazy app context. Also it make composability harder. &gt; FlaskBB uses these so we can avoid doing the same song and dance when we need to look up what post, topic, forum or category someone is currently viewing. &gt; It also enables tools like Flask-WTF to add autoprocessing and Flask-SQLAlchemy to hang life cycle hooks off of. With a better API, you could just user regular function. No need for this shenanigan. &gt; Blueprints are a pretty great idea. Blueprints are a hack to work around the lack of reusability in the original flask api based on the central app object which is a terrible, terrible idea. A project should be a tree of configurable apps you plug to each others that communicate throutgh events. If you need so make a simple api, just make a factory that produce the initial app so that it feels like using a central app for beginers.
Contracts. Use them.
Don't do this. You're setting yourself up for a huge liability doing something like this. Get a contract drawn up by a lawyer, and use the law to ensure that you get paid.
What you are proposing is a terrible idea. You WILL be sued. You are intentionally introducing a security vulnerability. The fact that you can't figure out how to do it on your own suggests of you do manage to make it work, it'll have bugs in it that could expose your client to even larger vulnerabilities. You need to grow up and deal with this like a professional. No one will hire a developer that codes back doors into their systems in order to extort them.
Please do. Any Pull Request is more than welcome.
`await` means “let’s go do something else while this other thing is working... we’ll pick up where we left off when it’s done”. In that respect, yes, your function is waiting before moving to the next line. However, your program isn’t waiting: it’s going off to do whatever else it needs to do.
Dude this will almost certainly get you sued. Definitely do not do this. Instead, keep one portion of the work incomplete until payment, but be very upfront about that fact, that you will deliver upon payment of the contract. Also, always get some money up front when you don't absolutely trust the other party. There are professional and non-scummy ways of doing what you suggest. This will just give you a bad reputation in an industry that is MUCH smaller than you may believe.
&gt; You can store anything it "g" and it will leave the current local function, and will be available as an input in the next function. That's hardly the same as an implicit output object. It's meant to be a global catchall for applications. Your application loads it up with information at the beginning of the request, and helpers read from it. When I read "implicit output object" I think "Oh, they mean where the response goes." &gt; It also make unit testing harder, give you the impression you can share something accross your whole project (but wsgi servers will spaw several processes so you can't). So this is purely my opinion coming into play here, but your HTTP layer (Flask, Django, etc) isn't something that should be unit tested. It's an integration point and it should be integration tested. By that I mean you start up the application in a controlled context, run some part of it and then make assertions. In this context, LocalProxy is just fine since it'll be churned up by the regular application flow. Your logic shouldn't be living in your controllers anyways, so you shouldn't need to deal with the LocalProxy when testing it. &gt; It forces you to deal with this crazy app context. Also it make composability harder. How is composability harder? I've not found it harder at all. In fact, it's more liberating to not have to contort my code into odd calling structures because I can intelligently use a LocalProxy instead. &gt; Blueprints are a hack to work around the lack of reusability in the original flask api based on the central app object which is a terrible, terrible idea. The implementation of Blueprints is hacky yes, but the overall idea of them is pretty great. At the very least, I think they're a pretty great idea. An object you can toss routes on and then later register that object into your application, that's a thumbs up from me. It also allows applications with plugin architectures to integrate routes from plugins a bit earlier. &gt; A project should be a tree of configurable apps you plug to each others that communicate throutgh events. If you need so make a simple api, just make a factory that produce the initial app so that it feels like using a central app for beginers. That's one way to architect an application but it's not the only way. There's also nothing stopping you from structuring a Flask project like this -- it even comes with support for blinker out of the box. In my opinion, Flask gets more right than it gets wrong. But that's me.
You don't need a pre-existing library. Python has the tools to do this already built-in.
I've always found including a `requirements-dev.txt` works best for my projects. Then the actual distribution doesn't end up with dev dependencies being lugged around with it where a hapless user could `pip install myawesomepackage[dev]` and install a bunch of junk they don't need.
I’ll be following your respiratory closely, this is awesome seeing python in a known game!
Looks like you're on windows. a quick Google of your vague description led to this: https://stackoverflow.com/questions/24627525/fatal-error-in-launcher-unable-to-create-process-using-c-program-files-x86/25812942#25812942 Depending in your goal I might recommend using Anaconda on windows and Pipenv on anything else. 
It's very good advice. I learned on my own, now I basically built a career from it. About 12 years ago while starting college I thought, "hey, Python seems like an up and coming language. This will be the language I try to learn as best I can. Hopefully there'll be jobs by the time I graduate." Paid off so damn well. Learned python, linux and security, and now it's my career, just like I gambled on. I just picked it on a whim, decided that I needed to know one language at least really well, and it worked out. Being self-taught really works out. You pretty much have to be to get your first job in it, so there's no avoiding being self-taught in a language. You have to use it far more than college will make you. You have to read more on it than college will. Comp Sci is a math degree for the most part, so you're really not learning skills you'll use everyday, even if it's very helpful to know. You really have to learn the development stuff on your own and go as far as you can. It's probably the most lucrative investment I've made, and it didn't cost a thing. Learning this stuff is free these days, so take advantage as much as you can. The main thing separating you and someone else from getting a job in software is the time investment. Be the type that actually sits down and tries to do it when they could be watching netflix. Not many people have the motivation to do that, and that choice can really pay off.
Hello there, i don't know if this is the right place to ask but i wanna know if i should start learning python on windows or go directly to Linux, and if this is the case, what's the best distro for programming? I've asked in a different sub_reddits but nobody's replying. Thanks for the help. 
return is blocking. await is not.
Keep a file that's the code that will launch the app and have it happen there. That being said, if you're distributing the .py files you're hosed anyways. Sure you could distribute it with a pyd file for the launcher and add a hash for the app to start, but again, you're gonna spend more time obfuscating the code than writing it. If you need to demo the code works before you're paid, then setup a place you control to demo it. Ask for payment. Deliver code. If you already don't trust that you're gonna get paid, you have bigger issues that won't be sorted out with a contract or a dead man's switch. 
The problem is the "extract relevant things" step - the relevant things could include e.g. imports, which are not in the diff range. Style errors are localised, but language version is not :-/
I can't believe edx is not on that list. outrageous. 
Python is pretty much Python everywhere but I'd recommend you use a *nix environment and that means the MacOS or some Linux OS (e.g. Debian, Ubuntu, Mint). 
you owe it to yourself to check out postgraphile. combine that with ogr_fdw and you could expand your scope.
Are you working for a Lawyer? I have worked with many consultants and when they tell a horror story about not being paid - the client was a Lawyer. To them - they can change their mind after the work was done and they haggle because they can represent themselves. The problem is Python is plain text. It would be easy for someone to find the switch. Try this: Add code that will degrade performance over 30 days in some subtle fashion. This way when they call you for help, you can ask for a check to be ready for your un-paid amount. Then you show up with a 'patch'. Or put something up for sale on ebay. Encrypt the URL to your posting and have the code check each day. If the item exists, the code runs fine. Put this in a list of .. 8 URL's that the code checks 'looking for updates'. Or have it check your Github repo for a .confg file among other things for updates. This will allow you 'update' the code later if you want. 
this is great, thank you
Hmm... "Adept-Dev".... "my first programming language".... yep, checks out.
Have they said what kinds of things will be accessible via the API? Is this for in-game data or just stats and stuff?
I'll help out when I can.
Jelly 
This seems awesome! Do you think it is worth it to buy the certificate? Or should I just audit the course?
Its worth buying it, small price to support a good community - plus problems are kinda of hard, reward for hard work type of thing
Trying to create my first program in Python... and my first program period. Having trouble figuring out the most basic of things and feeling like an idiot. Good times.
I did the same thing when i was self studying to get a job in data science. building algos from scratch, after building comfort with the concepts, is what i recommend everyone that asks what to work on. well done.
I suppose it can't be realized if tge site doesn't have any filters. However, most filters work on JS and you have to cope with it with libraries like Qt5 with its WebKit.
You are thoroughly undervaluing a CS degree. 
No. The difference is the “let’s go do something else”. `await` leaves the function before the wait finishes so if you had a single main function that called a dozen functions that used `await` inside then the main function could return before any of the functions that it called.
I don't mean to restart an old war, but how do you believe a CS degree helps?
I'm a self taught programmer with a call degree. I know way more than any of the non-cs people who learned dev skills in school instead. Algorithms are super handy, knowing how a computer does things is super handy. I've been able to fix things that other people have looked at for years and not understood because I knew the limitations of the hardware. My cs degree was super hardcore though, C's 101 was taught in assembly, and the majority of classes were math, not cs.
Where's Debian?
That's awesome you were able to use the QStandardItemModel! 
How is this related to python?
Ok, I understand. I am coming from the other side - working mainly with Django, and some homegrown javascripts + graph.js + jquery and I havn't seen the need for any of the javascript libraries. However that stems from competence as I am not very good at javascripts.
Of course it is. The only thing that limits you are yourself. If you find the time, do more stuff if you really want that.
Lazy
I have been working in developing a program for teaching how to build automation software for research labs. It is basic, but it shows everything that should be in a researchers toolbox to improve their coding https://github.com/PFTL/SimpleDaq/
There is nothing interactive in this blog post besides the scroll bars of the code boxes. How do you want to show what the code is capable of and what the interactivity looks like when the viewer of the page cant
What is your OS? You have troubles compiling some utils written in rust. We have compiled them for MacOS &gt;= 10.11 and Linux x86_64 so you're not supposed to need Rust for these OS. Please let me know if you're one of these OS. If you are not on these OS you will need Rust installed and the latest version of the `setuptools_rust` python package. 
How would you integrate server-side-rendering for the mini-react-apps?
It's definitely starting to make sense. Thanks to your help. So to create an ugly example, if we had a main function that ends with await, and in the middle of that first function a second function that is the same- function with it, ends with await. The third function (poorly named function two in my image) ends with return. The way this is set up, is there any reason I should even be using these over return? Picture is an extremely simplified version of the script, the functions are in different in files in actuality https://i.imgur.com/WnuoixS.png
Whoops even my indentation is wrong. Hopefully the core question is still clear enough 
Just started learning programming besides my regular job - language is python. I am 27. Am I too old to become a developer? Most of the developer my age have more than 7 to 10 years more experience. I really enjoy typing code.
🙃
Never hurts to be overly confident my friend. Set your goals and expectations high, only accept the best. 
I became a dev in my 30s. So no, it's definitely not too late. 
Thanks for your answer. Do you work as developer? How did you land your first job? I think as developer you always get compared by your years in developing. 
No, never too late to start, I started in help desk when I was 23 or 24, started python maybe when I was around 26 or 27. I am now a DevOps Engineer.
Only thing I've ever seen catch people is trying to print Unicode on windows causes issues, or messing up file paths. (Iirc there was a bug with pip where it would try to print Unicode which was pretty bothersome)
Could you provide a link to your github?
Create a virtual environment, update setuptools in that environment, then install your package.
So, check if it's not in database, if it's not, add it? You download entire page when scraping anyway.
Damn. Totally didn't think of that. This will prove harder than we originally thought. So maybe we'll have to just run 2to3 and see if it produces ANY output. if the output is in the diff range, leave a line comment on the pull request. if not, just let them know that there are some issues with the code. and they'll have to run 2to3 to fix it or something.
Why scrape when they have an API?
I have a degree in computer engineering and I don't think most programmers need a degree. A web developer who writes javascript and css all day doesn't need to know anything about Computer Science.
yeah all depends on your field.
also did this course, it was instrumental for me understanding programming better. it doesnt scratch the surface of a cs degree, but it sets a solid foundation
Hold on this may have finally just fallen into place. Because this particular event loop is listening for inputs, the await function is allowing it to go ahead and get back to listening instead of waiting for the various tasks involved in responding to the input are finished? Whereas return would leave it busy waiting and unable to listen for additional inputs during that time? 
It's the foundation you build on. Lot of what I've studied has been of marginal use when considering direct applications, but of incredible use when you consider the way I think as a direct consequence.
thank you. This means that I can only run my projects in this environment, right ? Does this environment persist after reboots of the OS ?
The second course is “not currently available” - don’t know why edx does that when the course material is already there.
..and a way to avoid list comprehensions is sometimes map, that leads to evili monsters: list(chain(*map(lambda (x, y): range(x, y+1), map(lambda x: map(int, x.split('-')) + [int(x.split('-')[0]), ] * (2 - len(x.split('-'))), s.split(',')))))
Why don't you start with a bot for Reddit? I made one and it was nice. Also, small scripts to automate things you do on your OS, such as a program that will backup all the images it finds under /Users/my_user_name/ into an external drive. And do you know [Selenium](https://docs.seleniumhq.org/)? I played a little with it to create some automation to perform tests on web applications. These are all very simple projects you can try to make in order to get to know Python better. Maybe they won't be portfolio material at first, but to me they were a great start on the language.
How about a Korean one?
Here's a non-tech reason - it helps in passing HR filters. In many companies, HR don't understand the job - that's why we see "10 years experience required" for a tech that started just 3 years back. Degrees and certs help in ensuring that HR will at least consider the CV.
Just get a unix terminal for windows if that's what you have. Ubuntu is freely available from windows store on windows 10, would recommend that. 
Why bother with a virtualenv inside docker? Why not just install everything system-wide in the image? If you do that, then the questions you're asking don't even present themselves. 
\&gt; doesnt scratch the surface of a cs degree, I'm sure it does just that
where did you go to school ?
FROM python:3
This
I wanted to build "portable" "everything include" runtime. And have the image small. Not have git installed in the final stage. Not have a compiler installed in the final stage. I find having those installed in my production containers an anti-pattern. 
I do, as Lead Data Engineer at my company (I've been at it for a while now). First job I got was as a web analyst, doing basic JS, I had done mainly python but picked up JS on codeacademy when the application required basic JS knowledge as well, but I went for jobs that had a programming test in the application process, to show that I could program. I also got an internship earlier while between study by writing a short proof of programming program which was aimed at their FT devs. I do now have a degree (a couple actually), but got my first couple of inroads without them. tl;dr I went for jobs that made you display the ability to program at first, now I've got a work history, I get them the normal way.
To have an image even smaller, try to reduce number of RUN statements.
Thanks! The idea of the bot sounds amazing. Also, playing and improving my OS seems like a lot of fun. 
Get information about [matches](https://developer.playbattlegrounds.com/docs/en/matches.html) | Information | Type | |-----------------|---------| | createdAt | string($dateTime) | |duration | integer | | rosters| [...] | |rounds |{...}| |assets |[...]| |spectators |{...}| |stats |{...}| |gameMode |string| |patchVersion |string| |titleId |string| |shardId |string | |tags | {...}| Rooster Objects, Participants Objects and Asset objects all have their own fields which can be accessed
Thanks a lot! The idea of the bot seems amazing. Furthermore, improving my OS seems also like a lot of fun!
**Participant object** *Participant objects represent each player in the context of a match. Each participant will have a single player relationship which can be used to locate the player's aggregated liftime stats. Participant objects are only meaningful within the context of a match and are not exposed as a standalone resource.* Information | Type ------------|------------ id | string (Participant ID) stats | {... (description: Stats particular to participants) ...} actor | string sharedId | string (Platform-region shard) Currently not very many details on exactly *what* can be extracted using this tool other than some vague concept of "stats"
The information is currently very vague. I hope that they at some point add the following information to each player * Time of death * Location of death (I want a heatmap of where people die!) * Complete movement log
better pin the minor version, or you can get unexpected upgrades when rebuilding: FROM python:3.6 even better (MUCH smaller image, less disk usage and attack surface): FROM: python:3.6-alpine3.7 
Why alternative? Both are options which work if properly configured. Google how to configure your webserver to accept uploads, check logs. Or use FTP. Whatever you want to do. 
I know. However sometimes an extra layer makes your build cleaner by factoring out the static parts into the first layer and the dynamic parts in the second layer. That way you can keep re-using the first layer across multiple deployments.
Finished a 2 month project. The script goes through certain YouTube channels and looks what type of ads they are displaying, I used monkeyrunner and adb.
Check out http://exercism.io
There are a ton of regulatory hurdles to storing medical data. If you’re at the point where you can’t decide between Django and Flask, you don’t know enough about compliance to do this without being sued to death. Do another project first and find someone who knows HIPAA etc to help you with this next year. 
You just don't need venv when using docker. There is too much feature overlap you end up doing work twice. Also, change the order of your docker commands. You want thinks that will likely not change soon to be at the top, like environment variable. You want your pip install and code copy over to be near the bottom. This means code changes don't require rebuilding every stage, even the environment commands. My order is usually * Setup container * Copy code * Pip install requirements * Setup entry point 
We dont use alpine as it was more than 2x slower for our workload: https://superuser.com/questions/1219609/why-is-the-alpine-docker-image-over-50-slower-than-the-ubuntu-image
&gt;However sometimes an extra layer makes your build cleaner by factoring out the static parts into the first layer and the dynamic parts in the second layer. That way you can keep re-using the first layer across multiple deployments. You need to restructure your run command to better achieve this. 
Lol @ Alpine. My images maybe lost 50mb and added several grey hairs. Not worth it IMO, too many libs still need glibc. 
You're right about the env vars. However stage2 is so quick that I honestly didn't care about that ;) But it would be a good tweak. Uninstalling feels dirty. But I do see it as a good solution. Doesn't this leave me with layers of uninstalls upon layers of installs whereas with my solution we only have te layers we need?
I'd say [diveintopython](http://www.diveintopython3.net/), it assumes you already know how to code but want to learn python. &gt;this is such an easy language Yeah right. It's not the languages that are easy or hard, it's the problems that you try to solve that will be hard. The language is just a way to put the problem into words, a tool to express a solution. &gt;I want to leave a good expression when we are going to learn it You'll leave a good impression by being humble, hardworking and helpful to your peers. If you just want to be good to brag about how much you already know compared to them, teachers will notice that and it will be detrimental to you.
&gt; Also your cute use I want to identify app1 in `ps -ef` on the VM. PS. Thanks for callling it "cute" :P
&gt;You're right about the env vars. However stage2 is so quick that I honestly didn't care about that ;) That doesn't make it a good excuse to ignore good practice _and_ worry about antipatterns elsewhere. Consider someone looking at your docker file as a template. If that template uses good practices it makes it a good template. &gt;Uninstalling feels dirty. But I do see it as a good solution. It isn't though. While it will/can remove some attack vectors, you really don't end up shrinking all that much. &gt;Doesn't this leave me with layers of uninstalls upon layers of installs whereas with my solution we only have te layers we need? Yes, but since a layer is only a change set the layer is small and the resulting image can be a little lighter. I didn't find this to be worth while though. 
I do agree on the ENV vars btw. I'm going to change my Dockerfiles ;)
cool thanks
&gt;I've seen that Flask is more lightweight and fast than Django The speed part is not true, they have about the same speed. About the lightweight part... It depends on what you mean by lightweight. You can do a decent-sized project with django by installing only one library : django. On the other hand, if you go with flask, you will have to install a lot of libraries (sqlalchemy, flask-login...). The main difference, I think, is that with flask, you add modules as you need them, so your project contains only libraries that you need. But if you have no idea what you are doing, your project will have a crappy architecture. Django kind of forces you to do things his (good for most projects) way. Really, there's no simple answer to your question. Both will do the job well, you cannot go wrong with either. Fiddle with both for a couple hours and then pick one.
I am curious. Do you use any tools to help manage your requirements-Dev.txt file? I recently became familiar with https://github.com/jazzband/pip-tools https://github.com/naiquevin/pipdeptree
Yeah, option 1 and 2 are similar. And I would avoid both if there is a lot of content for SEO purposes. I still don't trust SPA for SEO.
Never tried SSR to be honest.
Show how it abstracts details in favor of the problem you want to solve. Example : you don't iterate over an iteration variable, you iterate directly over your data structure, using enumerate if needed. Other examples : the fibonacci code on the sidebar, or `1 &lt; a &lt; 10` Itertools module. Maybe requests ? The fact that even if python by itself is slow, you delegate the heavy lifting to compiled libraries (sorting algorithms, scipy stack...) The whitespace thing
Windows doesn't have the same support. So many Python packages just won't install or won't have the same support. Work on what you're deploying on, which most of the time is Linux.
I think both is great. It's a matter of your style. Do some small projects using each library is my advice. I'm start with Django, switched to Flask after 2 month and having a lot of fun. Now, I happy back to Django.
Just out of curiosity, what do you use this for?
&gt; I'll need to access this information stored on the database and add more information like the **patient information**, disease via some back-office on the web.
I'd say, if you already got a bunch of programming experience, you'll should take a look into the python docs. You can skip everything that seems obvious to you and can take a deeper look into whats not
flask is the better option in my opinion, because of the modularity. But django is obviously the better choice if you are lazy.
you need database so Django wins the battle :)
Their API provides limited data right now. 
While useful, I can personally attest to how awful working with daqmx devices from python can be. Not only do you have an expensive, fairly limited device, but you have to install one 1g of drivers to use it or deploy it. They are also know to misbehave, requiring a reboot to get the connection responding again. The API is also very much C oriented. That's fine, for C developers I guess, but for python devs it's incredibly frustrating. The PyDAQmx library could definitely use some love, but it's also pretty hard to accomplish since testing the API for accidental bugs is difficult without a lot of expensive hardware available. I'd be willing to work on it, but there isn't any way I would have access to enough hardware to make sure it's solid enough for production use. If there are any NI engineers reading this, I'd be happy to talk about the possibility of getting access to all that hardware, though. I know the DIO API pretty well, but have never had the use for the AIO or other parts of the API. Would be fun and useful to learn though. 
My company now uses docker almost entirely, and I’ve found that some images have Python 2.6 while others have 2.7. I’ve been using 3.6 locally, and relying on future + other packages to make my code compatible. Going this route to simply move to 3.6 entirely seems like a good option. Thanks!
Yes. Yes, but you will need to reactivate it.
I just need disease and movement data, nothing else. I’m working with the university, so i’ll have permision.
Reading various articles about Python because I am a beginner.
But on flask there is sqlalchemy no?
Here is a pretty good explanation (although a it dated now) why it’s still a good idea: https://hynek.me/articles/virtualenv-lives/
.agg('sum') into .values will probably do it but
OP is a notorious Reddit spammer, he has created over 100+ accounts to spam his affiliate / referral links, he links to Twitter which contains an Humble (or Amazon or GameStop) affiliate link.
It really depends on the situation in which you are. If you are working in a lab, and you need to perform routine experiments, there are no problems with the size of the drivers you need. Moreover, even if the documentation is oriented to C, it is relatively easy to translate into Python and that is what was done at PyDAQmx. I agree, debugging and testing applications for expensive hardware is a tough task that few people can afford. Collectively, however, it can be done.
Whichever one you enjoy working with more. It doesn't matter what we think. The one that fits your development style better is going to be the one you'll flourish in. Use both, and make up your mind. It shouldn't take more than a day or two to know.
It’s a small project, so I think that there aren’t so many decisions
json.loads(data.replace(" ' ", ' " ')) (Whitout spaces)
A remote GUI node based editor for designing systems in distributed containers, using PyQt5 and ZMQ - this has been a personal goal for well over 15 years!
just remember to keep your security intentions high. you want to have your applications secure. always.
Ik work here https://www.transceptor.technology/oversight
It doesn't make sense to use virtualenv within a docker container. A docker container is supposed to encapsulate a single component of your system, i.e. a wsgi application. Ultimately, virtualenv has to exist because of the way Python's import system works (searching through dirs on PYTHONPATH, PATH, and the current working directory). It exists because there is no way to have different versions of the same library accessible from the same interpreter. Thus, you can't install everything to your system-wide Python, because different projects may depend on un-like versions of the same library. All virtualenv really does is edit your PYTHONPATH so Python searches different directories during import. That shouldn't be necessary in a docker container. If it is -- if you have multiple Python applications running in the same container with conflicting dependencies, you're doing something wrong.
In your example, it’s fine to use `return` in `functionTwo` since it’s not doing anything asynchronous but you need to use `await` In `route_msg` because `client.send_message` is asynchronous. If you use `return` instead of `await` the code won’t automatically block. The asynchronous function is returning something that can be waited on, like a future, but you need to tell Python to actually wait on it.
Imo you should copy `requirements.txt` first, then `pip install`, remove build libs, and then copy the rest of the code. You don't change the reqs that often as a code.
I have had the same problem with my distributed script. You should definitely try to include the paths to your library in the setup.py file. If this does not work, try to isolate your python environment and manually install [simpleaudio](https://github.com/hamiltron/py-simple-audio) to your project (do not use pip install, but the setup.py install method of simpleaudio) after a few tweaks used with my python environment it worked for me. I hope this can help you.
I think you'd best look into using a logarithmic scale for your vertical axis. 
&gt; If you are working in a lab, and you need to perform routine experiments, there are no problems with the size of the drivers you need. We used to use DAQmx devices both in our lab and in manufacturing, but we've moved to a custom-built uC instead because it's cheaper and easier to get set up, particularly in mfg sites in other countries where we have less control over the IT situation. Installing those drivers isn't the biggest barrier, but spending an hour installing just that driver, then another 30 minutes installing the NI-VISA driver, and another couple hours installing various other pieces of software, it's just tiresome. Now we use a solution where the driver is &lt;1MB and installs in seconds. We weren't using a whole lot of the capabilities of the NI devices, so this made sense for our particular application. &gt; Moreover, even if the documentation is oriented to C, it is relatively easy to translate into Python and that is what was done at PyDAQmx. It's not the documentation that I have problems with, but rather the style of the API. Things like t = nidaq.Task() t.CreateAIVoltageChan("Dev1/ai0", None, nidaq.DAQmx_Val_Diff, 0, 10, nidaq.DAQmx_Val_Volts, None) t.CfgSampClkTiming("", 1000, nidaq.DAQmx_Val_Rising, nidaq.DAQmx_Val_FiniteSamps, 5000) t.StartTask() data = np.zeros((5000,), dtype=np.float64) read = nidaq.int32() t.ReadAnalogF64(5000, 5, nidaq.DAQmx_Val_GroupByChannel, data, len(data), nidaq.byref(read), None) I don't know what any of those arguments are, you're having to pass around a lot of values that could be enums instead, and in general the API is not very readable. Instead, this could be something like with nidaq.Task() as t: channel = nidaq.Channel( physical_channel="Dev1/ai0", name=None, terminal_config=nidaq.TerminalConfig.Diff, min_val=0, max_val=10, units=nidaq.Units.Volts, ) t.create_ai_voltage_channel(channel) sample_clock_config = nidaq.SampleClockTimingConfig( source="", rate=1000, active_edge=nidaq.ActiveEdge.Rising, sample_mode=nidaq.SampleMode.FiniteSamples, samples_per_channel=5000, ) t.configure_sample_clock_timing(sample_clock_config) t.start() data = t.read_analog_f64( samples_per_channel=5000, timeout=5, fill_mode=nidaq.FillMode.GroupByChannel, ) While this is significantly more code, most of the extra vertical space is simply a stylistic issue, it could potentially be written as with Task() as t: channel = Channel("Dev1/ai0", None, TerminalConfig.Diff, 0, 10, Units.Volts) t.create_ai_voltage(channel) sample_clock_config = SampleClockTimingConfig("", 1000, ActiveEdge.Rising, SampleMode.FiniteSamples, 5000) t.configure_sample_clock_timing(sample_clock_config) t.start() data = t.read_analog_f64(5000, 5, FillMode.GroupByChannel) Which comes out to about the same number of lines of code, but is still much more pythonic. It uses returns, it uses a context manager for cleanly closing tasks (I've found that `.StopTask()` and `ClearTask()` are useful for ensuring all handles get released). It allows you to create channels and configurations separately from the task, and potentially reusing those values in multiple tasks. You don't have to worry about pointers, or strange quirks of the C API like the last parameter to `ReadAnalogF64` that must be passed as None. Basically, the API could be made much more readable and usable, which leads to more maintainable code in the long run.
Finally a post that isn't "rah rah python!!11" or "I spent 10 minutes writing a 50 line script to do some obvious thing, here's my github".
Hmm...if the hospital is in the EU, and the data is personally identifiable (which it certainly sounds like it would be), you're going to run into serious data protection issues that are going to dwarf any consideration of your web framework. 
By patient information, I mean a random ID, disease and age.
The person will not be identificable. I just need a random ID, disease and age. 
I didn't mean it in a bad way, and it made me think about better solutions. 
I'm sure there are other tricks too. That's one that as we are growing our knowledge base in our company we pass around because there is a lot of template sharing. We are also trying to get better at having base docker images maintained by sysadmins so they can patch the os if need be. 
Good point, I'll have to double-check my own files to see if I am doing that. I can't remember off the top of my head. Thank you! 
The 2018 Stack Overflow survey was just published. They said just under 25% of the professional developers didn't have a degree. I'm not saying they're useless, but having one is no longer required.
What python version were you using?
Now try finding the debug symbols. And get gdb to load the python macros ... It's no fun. Ubuntu's python works great without any fiddling, and it's compiled with PGO.
As even more of a noob, how can a package handle something? More specifically, what is it handling, and why?
You might try using buildout: http://www.buildout.org/en/latest/getting-started.html#python-development-projects
This looks like a very powerful tool. Any chance this could be integrated with [PyFilesystem](https://github.com/pyfilesystem/pyfilesystem2). That way it could work with files on S3 / FTP / SSH etc.
So you'll know their illness, their age, and their rough location in the hospital at specific times. That, my friend, is personal data under the GDPR and needs to be handled as such. 
I was surprised to see the `multiprocessing` and `multiprocessing.dummy` modules weren't mentioned, thats what I've always used. Is that because gevent and asyncio are known to be much faster? 
Very cool idea, thank you. I guess you can use something like sshfs / curlftpfs as a workaround but PyFilesystem would be even nicer.
I think you should note that SSL (https) offers weaker privacy protections compared with ssh. Do you check and maintian the known_hosts file? Do you abort connections to hosts with known_hosts conflicts? 
a [super awesome alarm clock](https://github.com/fgebhart/smart_alarm) using a raspberry pi with rgb leds, text-to-speech, 3d printed case, alphanumeric display and a webapp to control it via a browser and wifi - all programmed in PYTHON! ...actually I [need some help](https://www.reddit.com/r/Python/comments/8454xn/need_help_in_project_planning_iot_raspberry_pi/) in planing the project! All ideas appreciated! 
Amazing
Welp, guess I know what I'm doing today. Thanks for this info!
The example I used in the article is about sending simultaneously a lot of HTTP requests. These IO operations don't require a lot of CPU power and therefore cannot really take an advantage of multiple CPUs. Although `multiprocessing` can be used it would be an overkill **in this particular case**.
&gt; You just don't need venv when using docker. Except when you do. If you have `pip` packages that install custom scripts in the `bin` or `scripts` directory then they can get confused with module-as-a-string imports. `huey` and `gunicorn` would not work without a virtualenv in my service.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/raspberry_pi] [x-post from r\/Python: looking for advice in rpi project planning](https://www.reddit.com/r/raspberry_pi/comments/845gxn/xpost_from_rpython_looking_for_advice_in_rpi/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
 FROM oblique/archlinux-pacaur RUN pacman --noconfirm -Syy python *bleeding edge zoom zoom*
&gt; In my case, there was a ~40% speed increase compared to sequential processing. Once a code runs in parallel, the difference in speed performance between the parallel methods is very low. But they didn't actually present the total processing time for all of the methods - I assume all of the parallel methods were about 17 seconds? (Compared to the sequential baseline of 29 seconds.) And how were the threaded frameworks configured? How many threads were they told to use (or just the default?), how many threads can they use, and what kind of parallel hardware did they run on? This blog post presents the decision as one-dimensional; it claims all parallelization methods are the same, so the only dimension to choose on is memory efficiency. But I'm skeptical that all parallelization methods are the same, and the experimental design gives me no information on that front.
Woah, such news. It's not like, you know, C# is better for bigger projects, mainly on windows, sometimes used on linux if someone can be arsed to use Mono, meanwhile Python can be used for projects that need a backend (flask, Django), no matter OS (whereas ASP.NET on anything else than windows would probably be pain, correct me if I'm wrong), mobile applications (on pretty much all platforms), desktop applications, and well, quick prototypes or automation of stuff in projects that aren't part of the resulting project. Anyway, I use both, what's the point of this?
how about this one to replace the second? https://www.edx.org/course/python-for-data-science
This was posted a while ago, though I think it is really cool and worth a repost. If you check out his site, he also has some other tools for dewarping, etc. I've played a bit with both and they were pretty good but not as good as some of the scanner apps on my iPhone (I wanted a desktop version of them)
pyinstaller? you can also try to compile your script with portaudio inside it with cython.
1. yes. 2. yes. 3. you said you need only one "website" that I'll assume being one page, no. 4. your imagination. Also you don't need to run everything all at once, run it once in a while, alarm clock can get away with sleeping for intervals doing literally nothing. Sleep for like 5 mins every time, `if time + 5mins &gt; than time it should ring`, sleep for the `alarm_time - time`. Of course, that will work only if you don't want to change it, if you need that, use multithreading, main thread accepts changes, and controls other threads, which are the ones sleeping and waiting for the right time, so the another alarm thread gets killed if it's time gets changed and it's reset.
Hi author here. I'm a non native english speaker so I always appreciate comments on how to improve my writing. This a quick tip I wanted to share. I struggled with this a little bit the other day and the solution was very obvious and trivial once it came to me. I wanted to share it with my fellow python developers.
You can read its README in GitHub.
about time. 
Look online for free python books and once you learn the syntax and some built in functions youll be way ahead.
Been working on and off on a WWI air combat sim/Roguelike since January. I've been enjoying not having to code for $$$ for almost 7 months now as my tree service gig is keeping me fit and taking care of my needs - which means that I can pour that much extra TLC in learning such an elegant language.
To be fair, you do need to consider a fair amount of survey bias with these type of surveys. I have no doubt of the popularity of both languages, but I would argue this may not be the best metric to use to weigh its actual popularity among developers. Edit. spelling. =/
But HTML is more popular than both! Time to switch to HTML! /s 
I would argue "mainly on windows" and "almost always on windows" are synonymous. Regardless, .NET Core exists... there are dozens of us!
The course has been (presumably) updated; try: **[Introduction to Computational Thinking 6-00-2x-6](https://www.edx.org/course/introduction-computational-thinking-data-mitx-6-00-2x-6)**
I believe you would be better with something like this: While True and Counter &lt; thresh: try: Thing False except: counter += 1 
Now need to update https://pythonclock.org/ 
You don't need to spell out the different enum values: ``` json.dumps(list(pet.PetType)) ```
.NET core runs quite well everywhere, and iirc [ASP.NET](https://ASP.NET) runs on that, yes?
I doubt any c# developer has to tremble in dear really. They are both very competent languages. The more the merrier imho.
It allows you to use research as a legitimate interest, but it doesn't exempt you from all provisions, particularly around security, in fact health records are considered sensitive personal data and carry additional compliance requirements. If you lose a load of medical data, you're going to need a better defence than "I was using it for research"
I would also recommend it, but not for a total-beginner. If he doesn't know knowledge about Linux, then he must manage that before going on with python which seems very unnecessary. Start with python on whatever OS you are on, then when you know it in a couple of months, jump over to a other OS and try it there.
I'm building an API using DjangoRestFramework, which is kind of how I live my life these days. That and tons and tons and tons of code review.
&gt; ge to install the python My applications remain in docker so far
I like your solution. I didn't know about most of the commandline options you're using with pip
So why are you working so hard to make the directories of your applications self contained? 
Ah, I am trying it out on Windows before throwing it on a raspberry pi. 
The way this is going, I'm sure by next week it'll be... "Python surpasses Katy Perry is popularity...." Python is really on a meteoric rise!
The other statistics in this article are also pretty interesting
great, thanks - would be nice if they added a 'has been replaced by' link on updated courses. It even has the same instructors.
I mean .NET Core is literally the fourth most popular framework in this survey 
C# is much more mobile friendly than python is
[there are two sides of the coin](https://insights.stackoverflow.com/survey/2018/#top-paying-technologies)
Yes, quite easily.
thank you. I'll look into it. 
Does anyone think that the popularity of python for AI development influenced this bump? (asking as a noob) 
It solves the problem to not implement the Command Bus in each project. Briefly the Command Bus accepts Command object and delegates it to Command Handler.
Great. I am wondering which tools he used to draw object diagrams. It looks neat. 
3.5.3
I think Python's extensive, excellent, industry-standard machine learning and compute libraries will really push adoption of the language to new heights as ML rapidly becomes more mainstream.
Html5 + css3 already is 
nvm. apparently that warning was because the function was returning some NaN values due to dividing by zero. it was a problem with my function and it has been fixed
Well it says that you have an invalid value hiding somewhere in your dataframe, iterate over the dataframe, print the index and apply your function, you should find it easily
What's the point of what? Surveys? 
Doesn't "more popular" pretty directly translate to "low demand"?
&gt; Doesn't this leave me with layers of uninstalls upon layers of installs whereas with my solution we only have te layers we need? You could combine the build libs install, pip install, and build libs uninstall into one run command to eliminate the extra layers
found it! thanks! i have another question about doing something with this dataframe. i'll just add a question here rather than make a new thread if you could please take a look.
Have you looked at [distroless](https://github.com/GoogleCloudPlatform/distroless)? A lot of these problems go away if you don't even think of the OS as being a part of the build.
I got a lot out of this! Thanks!
Post it on r/learnpython for starts !
ok thanks
Would have been fun to make it April Fools Day just for kicks.
Never said that you attacked anything.
In yo face! You're next, Bash/Shell!
Thanks for the reply. What about `multiprocessing.dummy` though? While the vanilla flavor `multiprocessing` module parallelizes processes, `multiprocessing.dummy` uses threads instead, ideal for IO.
If line is "Rump Rumplestill" then line[0] is "R" and line[1] is "u". You're doing `if line[0] in line[1]:`, which is saying `if "R" in "u"` and that's of course not true.
Well Python is a subclass of her, so that makes sense.
No the answer is True guys when I run it on python
Depends on what you need. Flask is basically just the http part, and you have to plug in everything else yourself. Django is http, template, database, session, admin pages, user authentication and verification, +++ if you don't need that, then flask is excellent. If you do need that, and no reason to have some specific choice for the components (like sqlalchemy or jinja) then Django will have all that for you and will save you a lot of time
Plan: Patch Python 2 so that the time functions can't return 2020-01-01? Can't kill me on that date if that date never comes.
worked on my first command line tool ever, learned so much about git, argparse, os module. Check it out, I WOULD APPRECIATE helping me to improve my code. https://github.com/iYassr/SpaceReleaser 
Imma actually get on that now. I'll probably post to my forum page if I succeed 
I guess I don't understand the point of a Command Bus?
u/Underyx, you've received `0.000025 BCH ($0.02663125 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
I thought OP said they wanted to try 3 times, not try until it had failed 3 times. Might be wrong though.
Because I can
Oh no! I'm not the author, /u/ku3o is, please direct your appreciation towards him (: (Find him in this thread a few comments above.)
Thanks for the article. /u/tippr 50 bits
u/ku3o, you've received `0.00005 BCH ($0.0528325 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
guess you can keep my 2 cents ;) thanks for sharing
I know just the replacement.... http://xon.sh/
No, quite the opposite. Are you suggesting it's harder for a Java or C++ user to find a job than a Lua or Smalltalk user?
Cool! Then give a talk at the next PyCon called "From GIL to HTML".
This is better suited at /r/learnpython 
This is better suited at /r/learnpython 
Im surprised, I thought it would have been more popular a long while ago!
Time to start a company that builds Python 2.8. Whose with me? ;)
This is better suited at /r/learnpython 
First, I'd suggest removing Trusted_Connection, or remove the UID and PWD variables. A trusted connection is one *without* a user-id or password. It wouldn't surprise me if that was the issue. If not, I would post this as an issue to the pyodbc project. A Microsoft employee monitors it for SQL Server questions and is extremely knowledgable and helpful. As a side note, I've not seen "ODBC Driver 11". Are you sure that is correct? With v11, I used "SQL Server Native Client 11.0"(https://www.connectionstrings.com/sql-server-native-client-11-0-odbc-driver). I've seen "ODBC Driver 13", but I haven't seen that with version 11.
Did you read the article I linked?
I'll go back and use Python 2.5 if needed.
Sort your array by game id, and then delete every other row?
This post is better suited for /r/learnpython or /r/learnprogramming 
I wrote a python interpreter with mud and sticks, but it's raining here in California, so the rain washed it away and now I have to start all over. :'(
That's all ready been tried, but nobody can call it Python 2.8 as the PSF holds the rights to the Python name.
Better headline: &gt; Newly self-identified "developers" are more likely to prefer Python"
Piethon?
Pythom
We got it now
Would you suggest converting the XML into json? I've thought about doing that for a few reasons. One - it is natively 'supported' with DynamoDB, which is where this data will be persisted.
This is really cool. I don't know anything about image processing (is that what this is called?) but I recently wrote a script to change my hues lightbulb different colors to match the "dominant" color on my monitor, so it would match when I'm playing video games. It was really cool. Might use some of these techniques to improve it.
I'm surprised to hear it's happened only just now. Python is awesome. No other language has antigravity. 
You're very safe learning Python - (almost) no matter what you want to do with programming in the future. Django is going nowhere - no one will argue that it is in the top 5 of web development frameworks (if not number 1).
This is a great and very detailed article! Helped me to understand the concepts behind the blockchain technology
2p8on
Be careful admitting that publicly! They'll come for you, like they did me.
See brython. Although I think that transpiles to javascript rather than interprets in javascript.
[it already has!](https://trends.google.com/trends/explore?q=Katy%20Perry,Python)
This week I started uni and they're making us use Python 2. I miss Python 3
This post is better suited for /r/learnpython 
You make a very fair point! I guess it's just a reflex from the "apt-get update &amp;&amp; .. &amp;&amp; rm -rf /var/lib/apt/lists/*" habit (having it all in a single RUN command works as expected); and stupidity maybe... you know, not having thought through it! I'll have to run some tests, but I guess I will probably end up changing to something like your solution instead! Thanks! (/u/obeleh maybe you should follow that route too!)
Right, but that's comparing only one half of the idea of "supply and demand". If you are equally perficient at two languages, one more popular than the other, but both have an equally large number of job openings, you are more likely to be chosen for the less popular language. Depending on how you define popular I guess. 
Just for the symmetry I would have preferred 2020-02-02.
Holy shit, great article!
What are you trying to say? 
Hi efmccurdy, Thanks for your comment. I did not take any privacy protections into account as I wrote this little piece of project. The main reason I write it because ssh protocol does not work well for connecting to and operating on oversea vps sometimes. AS you know the network environment in China is very different from other parts of the world. ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()) I think this line takes care of dealing the known_hosts file. But I am not sure what will happen if there are known_hosts conflicts. Maybe I will check it later.
Not at all. I know it's not a common path but industry 4.0 and factory automation is a really interesting field. C# and python together is the holy grail. Python for all you different machine coms, easy ad hoc http server for your cameras and ERP to talk and log your results as needed elsewhere. C# interface when you need some kind of operator interaction in a Windows controlled environment. And it's not too bad at some system integration too. 
Python surpasses C# in popularity among regular StackOverflow users.
Who the hell writes in C#? I’ve literally never met anyone who does. My shops been Python and Javascript for 3 years. We never looked back!
fun fact: so is powerpoint 
I'm curious about this. I've written a few c# programs to interface with power supplies, cameras, bcrs, DAQs, and PLCs. It's easy to interface with a server. This is all possible because those devices have c# libraries that made it easy to write code for. I don't think anything I used had python libraries. One power supply uses standard serial connection, and I had to write my own API to make it easy to integrate into new programs. I don't think the others had this option. 
If only the standard library wasn't so huge, inconsistent, often shoddy...
Better headline: KODeKarnage slaty its not Rust
import antigravity
I've probably put the same effort into both c# and python but... * c# felt and still feels like riding a slow and bulky jalopy * python feels like a magic carpet straight to wizard land Takes me forever to accomplish the same thing in c# which I can whip out in python in no time so I've pretty much dropped it, no reason for me to go there again unless my hand is forced.
i think he was trying to say django is not going anywhere...
What's wrong with the Python stdlib?
Monty
I heard from this one guy on the internet that it's huge, inconsistent, and often shoddy.
I'm jealous. Wasted alot of time on a Mech E degree and now I am spending my nights learning python hoping there's something out there for me to find.
What part of it is confusing? There's tons of reasons for creating machine learning algorithms and TensorFlow bundles it in a fairly accessible API for Python developers. Many BA's are now learning Python due to it's rising use in "data science" work, so it's kinda natural to want machine learning to go along with it
I'm surprised that Bash is so high on the list... For that matter I'm surprised Javascript is so high on the list. Javascript lovers strike me as those who've known nothing else. 
What is the confusing to me is why do we need to implement any ML model within the TF model.
&gt; both have an equally large number of job openings That's a large and inaccurate assumption, I think.
If you install any package, even in a docker container, you can break the operating system. It therefore absolutely makes sense to use a virtual environment in a container. 
What is an example of a package that "breaks" the OS where it's necessary to install it within a virtual environment inside the container to prevent the container from breaking?
Your comment is very confusing. For example: "Django is going nowhere" could mean "Django is faltering" or "Django is going to be popular for a long time." Then you use another possible double-negative in "no one will argue" etc.
So, is the advantage of the TensorFlow is that it utilizes both CPU and GPU whereas conventional ML algorithms just use CPU?
I commonly do mine like this: """ connection = pyodbc.connect( r'DRIVER={ODBC Driver 13 for SQL Server};' r'SERVER=server_name;' r'DATABASE=db_name;' r'Trusted_Connection=yes;' ) """ Take out the password and userid and see if it uses your domain login. Or take out trusted connection and add back user and password.
Almost everyone who has ever published a commercial windows desktop application NOT written in C++
I think we spotted a python 2 user.
Machine learning algorithms are just a part of tensorflow, so kinda.
Django as the number one web framework? I doubt that. 
It's a rather vague question. What part of tensorflow is causing confusion? It allows for a framework to implement ML algorithms in an efficient and flexible manner. There are several tensor and graph optimizations built in to better map a user tensor graph or flow to the underlying machine, whether it be GPU or CPU. It supports many common math and ML operations and data structures as well which make it easier to develop. Finally it also supports multiple languages so you can create your ML models in python and use them easily in other languages as well. 
I hope you enjoy!
No, and your comment makes even less sense to me. The most "inconsistent" bits I can think of are in Python 2, like "StringIO" being capitalized.
##r/learnpython --------------------------------------------- ^(For mobile and non-RES users) ^| [^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| ^(-1 to Remove) ^| [^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/6xrtxg/ignore_list/)
Just so you know, there's a law in the US called COPPA that basically says "you can't knowingly collect information from kids under 13". So in order to protect themselves, most websites have a rule against kids making accounts. Reddit is one of those websites, and I'm sure YouTube is as well. I know of a couple good young people on Reddit that have had their accounts removed because they were underage. BUT, if you get your parents involved and have them take "ownership" of the account (if you haven't already), you'll be in the clear. Unfortunately it means having your parents involved, but it's better than getting your account removed. 
Well if its any consolidation my life sucks in a lot of other ways.
I released a new version of [arepl](https://marketplace.visualstudio.com/items?itemName=almenon.arepl). But If you've been reading this threads you are probably sick of me talking about that. In other news, I've been contributing to [wolf](https://marketplace.visualstudio.com/items?itemName=traBpUkciP.wolf). It shows you the values of your python variables inline so you can see your values as you program! I thought wolf was a cool idea so I added python 3.5 support :)
Yeah I really dig both. I miss list comprehensions when I'm using C# \(tho linq aint bad\) but the often faster execution speed \(from e.g. JIT compilation and no GIL\) and static typing is very much appreciated.
Django is opinionated, monolithic, and poorly-written, legacy code lurks just beneath the surface. If your app is going to require anything remotely advanced, custom, has complex data models, or if you have your own strong opinions on how you want to do things, stay away from Django. It will fight you every step of the way. Check out Pyramid and SQLAlchemy.
Why I love, love Python: SQLAlchemy + Pandas - &gt; .read_sql and .to_sql I mean come on, can life be any simpler?
What's your experience with both? Can you expand more? I've got no real python experience, so I can't make a fair comparison. I know c# can be a little bulky at times as well. I've never really found anything in C# that was difficult to do by any measure, however. I've also been pretty much exclusive to c# for the past 10 years though and a large portion of it is likely acclimation
That's literally my job. I build websites on ASP.NET MVC, and it's actually really popular. There's no shortage of work 
Literally EVERY web developer uses it!
Do I just tell me parents to say that this is their account, or do they have to do something else? Thank you for giving me this info. My youtube account is under my moms name. But do I still have to delete my account? Please let me know, eather way , I just do not want to get my account deleted.
Please reply
You should be able to run a single copy of your flask app and configure apache to spawn it using mod_wsgi. Be sure to look at bottle, and nginx; they might be even lighter weight.
Is your email address for your accounts under your mom's email? If it is you'll probably be OK. The stipulation of COPPA is that a website can't collect *personal* information of anyone under 13. That, if I'm reading this correctly, means that your email address (if you have one) would count as personal information. I'll do a bit more poking around the internet and see what I can find to make sure you stay in the clear.
Thank you so much! This is under my mom's e-mail address.
 if(langA.qty_openings == langB.qty_openings &amp;&amp; me.proficiency(langA) == me.proficiency(langB)): if(langA.popularity &gt; langB.popularity): print("I should be searching for", langB, " jobs!") 
It looks like Reddit might be particularly strict about this. From the privacy policy: &gt;Although we welcome users from all walks of life, Reddit is not intended or directed at individuals under the age of 13. Therefore, individuals under the age of 13 may not create an account or otherwise access or use the Services. "otherwise access or use the Services". Seems a little overkill, doesn't it? So Reddit might end up banning you anyway. I wonder if it means that if I let someone like you make a post on my account if I'd be risking my account? That's really really strict. Bummer. But that's OK, you don't need Reddit to make videos anyway. But from what I can tell, Google is way more forgiving, so they probably won't care about your Youtube videos. ;) At the end of the day, I guess it goes back to "be careful what you post online". If you don't say you're under 13 or post info that might tip them off that you're under 13, no one would be able to tell. Be all sneaky-like. And hey, you'll only have to deal with it for a couple more years.
Thank you. :) Atleast my youtube channel is still here. Is there a way to edit links that you post on reddit?
No you can't edit submissions, only comments. You can always delete the post and make a new one, though.
I haven't dealt with TensorFlow at all, is it a library that benefits from a deep math background (I'm guessing yes)
One of the open issues is "pip should work out of the box". So I guess if you don't mind not being able to install packages....
Thank you.
How do you pronounce that? "Zonsh"?
this
Or, C# devs have answered every C# question under the sun and don't need Stack Overflow like us lowly Python users.
Didn't take the berkeley one so I don't know :)
Yes.
&gt; Doesn't "more popular" pretty directly translate to "low demand"? What you should have said is "more popular" translates to "high supply".
&gt; Do you see any signs of spillover to web development? Yes, I think we'll see both more ML used in web development (we're seeing that already), and I'd imagine that the more people that know a language the more people will use it for a variety of purposes rather than just the specific purpose that they initially learnt it for. &gt; would love for it to remain my focus even as I casually pick up JS in the future A programming language is in some ways like a spoken language, it's a set of words, structures, rules, etc. to convey meaning. But knowing how to speak English, for example, doesn't make you an award-winning novelist. And that's how I see programming in many ways.. it's not about the language so much as it's about the "story". Once you've learnt some different types of languages, learning similar ones comes very quickly to the point that it's almost trivial. It's also a lot more about learning the libraries, frameworks, and toolsets than the languages themselves. I first learnt Python using it embedded in Blender. But now using it in Django it is a wildly different thing, with loads to learn, even though I know the core Python language pretty well now. I know web development very well though, so Django is easy for me to learn as so many of its concepts are familiar to me but from different languages, frameworks, etc. On top of Python and JavaScript (essential for web development) I would also recommend one day learning a strongly typed compiled language like Java or C# (or C++ if you want to learn about unmanaged languages). This is the other "primary" type of language commonly used, and if you're making a career of this it's important to know how they work and understand why you would choose to use one for a project. With all that knowledge you could very quickly pick-up almost any common programming language. I would also highly recommend, if you aren't already, to learn about source control now. The source control software "Git" would be the best place to start these days. It's the number one thing that we had to teach new graduates how to use before they could do anything at all for us, knowing it is essential. Plus it's really useful for you personally.. you can keep a nice log of your development, you can roll-back changes, trivially backup your code externally, deploy and share your code easily, and much more.
Please checkout /r/learnpython
Python has great support for web development, it's just that other languages really excel there so it's hard to compete. Django, Flask, Falcon, and Pyramid are all very good frameworks, and there are some big sites that are built on Python. But every frontend developer knows Javascript, and the Node.js ecosystem is extremely strong. PHP is a pretty bad language, but there are some fantastic PHP web frameworks (Laravel) and others that have been around forever and just have a ton of people that have built their careers around them (Cake). Similarly, I prefer Python to Ruby, but there were a lot of sites built on Ruby On Rails in the last 10+ years and it's hard to overcome that. Basically, if you know Python and want to build a website or REST webservice, there are great tools out there (you will still want to learn Javascript for anything frontend). But if your primary focus is web development, you will probably end up picking up another language.
I get paid to work with both c# and python and the tooling in c# is leagues ahead of python. You cannot get a better full dev env than VS. And since I’m already on VS I can just put ptvs on and never bother with a second ide.
I happen to use c# along with python for some semi-automated manufacturing activities. I use c# for all the GUI and Windows-oriented work, and python for the automation. I tried a number of different things before this and love the current combination.
Dude explicit is better than implicit. No subtle joking about Python's stdlib's Easter eggs. ;)
Well, I love both languages
Well yeah, if you lose the data then there's always going to be a shitstorm. 
Hi. :) 
im working on something i call 'mediaslave'. it is a imageserver with resizing, conversion and some image operations accessible via url params like cdn.yourproject.com/i/mvJkBEcmxMHYLsHAiHxhEJ/mySuperSeoImageName.jpg?fit=160x100&amp;grayscale&amp;colorize=0,0,0|255,255,0 
&gt; ip enterprise. And since I’m already on VS I can just put ptvs on and never bother with a second ide. yes but there's a huge price tag associated with that also open source editors are getting everything, inspection, lint, snippets, etc.
I'm enjoying the hell out of dotnet core. Python will probably always be my preferred language but C# has things Python can't do or do easily - linq, expression types, reified generics, extension types, etc. And the things I find myself missing in C# I miss are either specialized (metaclasses, decorators), have close approximates (fields -&gt; descriptors, using -&gt; with) or being worked out (async using, async IEnumerable). 
New MVC applications theough VS come with the option of scaffolding a user system. I usually write my own, since it's maybe 20 minutes of work to write up a user system with group/role support. I use entity Framework for DB stuff, which handles the full crud layer, and that's pretty much as simple as clicking install in the nuget package manager. 
I learned C# back in the day, as a backup option. I've kept up with it, and it's not a bad little language. "Java without a lot of Java's mistakes" is a good -- and accurate -- description I've seen a few times. Also the .NET platform itself is kinda cool. And I've fiddled a bit with F# as an alternative language to explore it, and it's nice. Really does feel like OCaml with a better set of standard libraries.
I think u/lambdaq was referring to the poster you replied to. Because I agree, Python 3 stdlib is great. Python 2 is huge, inconsistent and often shoddy.
People are using Pandas + Bokeh for data viz. Bokeh can ouput JS and even has a Bokeh server
&gt; opinionated Yeah, kind of. But, it's a batteries-included framework, so it's going to be a bit opinionated by its very nature. Not too bad, though. &gt; monolithic Explain what you mean by this. &gt; bloated How so? It's a batteries-included framework, so a lot is included, but there's not much in the way of bloat. &gt; obtuse You lost me here. What do you mean? &gt; legacy code Well, it's 15+ years old, actively developed, and maintains a decent backwards-compatibility with major updates. What's your gripe? &gt; remotely advanced, custom, has complex data models OK, you've got my attention. What're some examples of remotely advanced or custom, and/or complex data models you've been unable to construct using Django? &gt; It will fight you every step of the way. How so?
Maybe inthe lightweight webapp world. Plotly's Dash looks promising.
I know this is the idea, but I still haven't quiet understand how would does one deploy and scale in a prod environment over aws and docker.. any posts you would suggest for understanding this part?
This might be a violation of the Facebook Platform Policy (16.3.b for instance). Just FYI
It is also #1 in most wanted!
More or less. Like in many other languages. 
It's $500. A lot for a hobbyist. But very little for a company or a consultant. 
go read the policy, you can message people but must have opt out procedure and they must agree to it. https://developers.facebook.com/policy#messengerplatform however, this is spam and I would report you if you did this.
Visual studio community is free, even for small companies i believe.
I’ll second the VSCode recommendation. You can pretty easily run your scripts in the editor. 
FYI, Code is not based on Atom
How couldn't you be charm by this snake
yeah, you are right, I should not mock request object:) I can just use data=dict(blabla) to transfer the expected values, no need to mock @impossiblelandscape
Assembly goes before Objective-C 🤓🤔🤔
I do.
thanks for your reply, I decided not to mock the request object, but pass the expected data to the post method.
Thanks. This is actually a paid service to alert users to new music releases so they would have fully opted-in. Just thinking of using Messenger as an alternative alert channel alongside email and SMS.