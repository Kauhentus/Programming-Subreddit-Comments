If you have a case where you need change something before return the value, for example add some number to the return, you have to change every line where you access directly to the attribute. You need to learn software design to understand why is important getters and setters.
fix the cursor 
Press insert on your Keyboard
Start with [posting some code](http://recycledrobot.co.uk/words/?reddit-code) then explaining what's wrong. 
 Thanks 
However Python is strongly typed and JS isn't, which is the source of many woes
I'm not sure what is not clear here. I'm personally working on a workshop to persuade my colleagues learn and use Python instead of MATLAB. To this end efficiency is an important factor. There is not argue that vanilla Python being an interpreted, high level and dynamically typed language is not intrinsically fast (computationally not develop wise). However, being a very intuitive and easy language it has a great potential to be used in scientific, engineering and educational applications. Hence, it is highly demanded to increase efficiency as much as possible. Pypy, Pythran, Cython, Nuitka, Numba, PyOpenCL, Numpy … are all attempts to achieve that goal.
Well, that is actually one of the main reasons why people use (ana)conda... to create multiple environments that are isolated from one another. Yes, it is a 'waste' of space in a sense, but what you get back is the ability to e.g. install version 1.3 of numpy for project A and (in a different environment) install version 1.1 of numpy for project B. Without (ana)conda (or virtual environments) your projects will be 'coupled' to each other because they all have to use the same version of a package/library. Which quickly becomes a major pain when you work on multiple projects... And pain is a waste in my book ;)
IT is a huge subject. I would start by defining the mandate of your IT department, then do a ground up review of policies and procedures to ensure they align to that mandate. This will still only impact your organization. once you have IT working well in your company you will need to start writing books and giving seminars and training to get industry wide adoption. Note; If you are not asking about how to fix IT, you may want to add detail to your post. 
Oh yeah, and that as well. I love that feature in Matlab
Holy ! The content was way more aggressive than I expected, they must really be hurting for market share ... it seems desperate.
 Bs
Definitely further than I am in six months.. 
Use pyqt with qt designer or creator. You can easily create a beautiful gui without it getting too complicated. It is even easier than Tkinter imo. With tkinter you are mostly out of luck in terms of aesthetics.
Wtf people even dare replying 
I understand. So just tell them that! Numpy is a fast Python library written in C, and I think Matlab matrix operations are written in Java. At the end of the day, if speed is of primary importance, compiled languages will always be better. Python has plenty of advantages over Matlab: it's free, it has a larger community, it has more libraries in many domains, etc. It also has a lot of great tools in C or other low level languages, but so does Matlab
Of course I will mention other advantages. Almost half of the workshop will also be dedicated to Numpy. I'm doing some research though to understand the main reasons people believe MATLAB is faster and how we can resolve those issues.
`def windows(app_name):` `"""` `Retrieves the title of application by through 'subprocess' from Windows.` `Params:` `app_name (string) -- name of the application to be taken the title` `ex. --&gt; spotify` `--&gt; filezilla` `--&gt; putty` `--&gt; atom` `*For this spotiLyric app:` `- app_name parameter must be equal to "spotify"` `- Retrieves the current playing song name from Spotify.` `"""` `# was used tasklist and cmd for retrieve running apps.` `windows = subprocess.Popen("cmd /k tasklist /FI \"IMAGENAME eq " \` `+ app_name.capitalize() + ".exe\" /FI \"STATUS eq RUNNING\" /FO list /V |find \"Window\"",` `stdout=subprocess.PIPE).communicate()` `title = str(a).split(": ")[1].split("\\r")[0]` `return title`
 def windows(self, app_name): """ Retrieves the title of application by through 'subprocess' from Windows. Params: app_name (string) -- name of the application to be taken the title ex. --&gt; spotify --&gt; filezilla --&gt; putty --&gt; atom *For this spotiLyric app: - app_name parameter must be equal to "spotify" - Retrieves the current playing song name from Spotify. """ # was used tasklist and cmd for retrieve running apps. windows = subprocess.Popen("cmd /k tasklist /FI \"IMAGENAME eq " \ + app_name.capitalize() + ".exe\" /FI \"STATUS eq RUNNING\" /FO list /V |find \"Window\"", stdout=subprocess.PIPE).communicate() title = str(a).split(": ")[1].split("\\r")[0] return title &amp;#x200B;
Def get_gud(x): If (x) == (x): Return "practice more, nobody likes a cheater" Else: Return "being a noob is a choice" 
Here's your problem: if again == "n" or "N": That's how you'd say that in English, but not in Python. You want: if again == "n" or again == "N": A shorter way to say the same thing would be: if again in ["n", "N"]: or: if again.upper() == "N": 
Solving [Advent of Code](https://adventofcode.com/) in Python. Highly recommend trying!
Thanks for replying. I will look into it.
Someone said: All benchmarks are wrong. It's firstly notoriously difficult to go from microbenchmarks to real code, and secondly what you mean by 'real' code is going to vary hugely by domain. For the NASA link, it's very hard to see what they are actually doing, but it does look like the classic mistake of comparing 'raw' python rather than numpy - this is just guessing from the tiny snippet under 'array copy'. More generally, I think the fundamental question is wrong - you already know that MATLAB and Python+scientific stack can do raw numerical operations with similar performance, and that this is 'fast enough'. This is doubly true if you are talking about interactive computing - who cares if your total calculation takes 0.1s or 0.2s, a human operator won't notice the difference even though it's double the time (and to be clear with the python scientific stack we are talking about these kinds of timings). So the question is: knowing that performance is a toss-up, why would you choose Python? I think there are tons of great reasons to use Python. For teaching I particularly appreciate its approach to creating functions and modules compared to MATLAB - Python makes it easier than MATLAB to break code into reusable parts and helps people really understand the logic of the program
You need to fix the multiple conditions in the `repeat` function: def repeat(): again = input("Roll again? (Y/N)") if again == "y" or again == "Y": roll() return again .... Alternatively, you could use a `lower()` method on the `again` variable, and just test that with: if again == "y" 
Thanks for replying. I think it makes sense. So, they don't create symlinks so that the "external dependency" won't get upgraded unexpectedly? Someone told me to create a different environment for every python project I create. Currently, I am just doing very basic projects to learn python. Should I create a separate environment for them too?
Can i import both Tkinter and qt designer? Or will it give me some form of Syntax error?
I've written a lot of numerical codes in Python, Fortran, and C. I think that the choice to default to element operations on arrays was the right one. This is especially true when numpy provides a proper matrix type. Not every 2D group of numbers should follow matrix semantics. In fact, I'm irritated while working Matlab code that I must constantly assert elemental array operations, as they occur more-frequently in practice than the matrix operations do.
 I forgot how to write cursor so I wrote it and hope that somebody will understand 
As someone with mostly backend Python experience that has struggled with JS, can you explain to me what those woes are? I have also dreamed of a world where the web runs on python
thank you for your advice, i knew the fix was a simple one but i cant believe it was THAT simple :)
will do, i will now work on cleaning up the code and adding some error handling too. thank you
I’m no expert but I would think start learning everything you can about Linux, socket security, tcp, ssh, http and database security. Start with Django user api authentication to get you’re feet wet. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
&gt; Using the zipapp module, it is possible to create self-contained Python programs, which can be distributed to end users who only need to have a suitable version of Python installed on their system. The key to doing this is to bundle all of the application’s dependencies into the archive, along with the application code. https://docs.python.org/3/library/zipapp.html#creating-standalone-applications-with-zipapp
Why not make this more Pythonic? Instead of `get_attr`, implement `__getattr__`, so that instead of: db.get_attr('p1', 'x') one could write: db['p1'].x or: point = db['p1'] print(point.x, point.y)
In order to get a nice looking GUI, I would recommend * spending time on polishing your windows * use color * add images * use custom button images * removing titlebar helps some windows Custom buttons in particular can make an interface look nice. tkinter, with some time spent on polish, solid design practices can look pretty good.
I didn't claim that it is designed perfectly. I am just saying that there is a reason for the design that is not the same as Matlab. Your students (mine too) complain because that is not what they are used to. That does not necessarily mean it is bad design. Matlab design is also horrific but widely used so nobody cares. Same applies here. &gt; because a numerical code has to be read by folks that either have never programmed before, or are used to the common Matlab-Fortran combination Yes this is something I will never agree. They have to have the proper training. Matlab won't save anyone. Anybody can understand Fortran and content with it has no right to complain about the multiplication sign in Python. 
First: r/learnpython would've been the right subreddit choice. Second: besides what has already been answered you might want to do the "repeat" question in a loop instead of recursively calling the functions over and over again. Right now your program would do something like this: `roll() &gt; repeat() &gt; roll() &gt; repeat() &gt; roll() ...` without ever returning (unless someone enteres "N". Of course for this small programm it doesn't really matter, but you might want to do something like this instead: repeating = True while repeating: roll() repeating = repeat() And then have your `repeat()` return `True` or `False` whether you want it to repeat or not. 
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
You can import but you cannot use them both. Either you go with tkinter or you go with pyqt + qt designer.
I've did a lot of Python at my internship this summer. I have also watched a ton of Raymond Hettinger's talks on YouTube, and those really helped me understand how to think like a Python programmer.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Are you looking to get into cyber security professionally?
Allright... Thanks alot 😇
openvas :) 
Wow, you really are a PUBG player!
That bullshit excuse is probably older than you are. It's what bad players say to explain why they're losing. Instead of calling everyone a hacker you should work on your own skill. Yes, hackers exist, but not everyone you run into is hacking.
Thanks for the lead! I'll give it a twirl.
How do I evaluate the propriety of pyInstaller for my situation? It seems like fussing around with a pip virtualenv is exactly what I want to avoid ... it's a cost all the other developers and maintainers of the build machines would have to bear.
Whats R code again?
I was expecting more interesting libraries then listed: request, scapi, yara and nmap.
Glade3 is about as easy as it gets. I find it better than the others because of the wysiwyg interface.
The problem is that you are finding the first index of an open parenthesis, and the first index of a close parenthesis, when you actually want to find the last open parenthesis before the first close parenthesis. Start with the first close parenthesis and work backwards.
good bot
Thank you, magnificentbop, for voting on pythonHelperBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
A few sorting algorithms are a good idea--selection sort, quicksort, and mergesort come to mind. Also, class syntax if you covered OO design.
[What is R?](https://www.r-project.org/about.html)
This programming language starts with a letter.
C
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
You can learn a fair bit by reading CVEs on topics that interest you. That is, actual reported vulnerabilities that tripped people up. For example, here is CVE-2007-0404 a code execution vulnerability in Django from 2017, that was fixed here: https://github.com/django/django/commit/518d406e53 
Like c-offescript?
I have Octave installed on my home computers and even on my work laptop for when I do not feel like VPNing to the license server. It is acceptable at best. You can do basic stuff on it but it quickly becomes clear that it has its own quirks. And, it's missing a lot of functionality that is in Matlab. Also, it *can* be **really slow**. Especially for bad code! I was helping my sister and was trying to demonstrate a simple case of the immense speedup between vector opperations and loops. On both my Octave and her Matlab install, the vectorized was way faster than loops, but her loops were still 100x faster than mine (and my computer is faster!). My educated guess is that Matlab applies a JIT to loops, etc while Octave does not.
sí
One thing I found interesting (and I may have some details off so I am sure I will be corrected) is that Matlab can be much faster for signal processing than SciPy. That is because Matlab uses FFTW while SciPy can't due to the license issues. I think there is a way to monkey patch FFTW so it is on par, but I haven't looked into it too much. 
Thanks for the response! The server is already in a production multiclient environment, so that's not really possible. But that's good to know
This I didn't know, thanks! I'm going to try to download the package manually and install using this method!
You have written : `X(y == 0,1)` which should be `X[y==0,1]`
It would be much easier for us to help you if you posted code instead of a blurry, reflection-covered screenshot.
Advent of code. But have start using my script to get IMG from some subreddits that I like to backup. Working very well so far.
I don't think I know enough about it to say for sure but I'm definitely interested in having a look around. It seems like a really interesting area of computer science to me
This is a really great idea thanks, I'll have a look at PR's around security
Have you tried print screen?
Agreed. Listing requests is a bit odd. Great library and certainly useful in this context but could have been swapped for something more specific like: * https://github.com/vulnersCom/api * https://github.com/pyca/cryptography * https://github.com/zaproxy/zap-api-python * https://github.com/Cisco-Talos/Decept * https://github.com/nabla-c0d3/sslyze * https://github.com/RhinoSecurityLabs/SleuthQL * https://github.com/frida/frida-python 
it should be line 34
thank you for your input, im going to try messing about with this in my code and see what i can learn.
Build something that uses all of those items you've studied. Programming is the same as learning a foreign spoken language. If you don't use it everyday and in everyway, you're never going to be able speak it as close to a national citizen of that country. 
—&gt; r/learnpython 
https://docs.anaconda.com/anaconda/packages/pkg-docs/
So let me get this straight, some dev wrote a PEP for a new symbol that is specifically for matrix multiplication that base python doesn't use, that numpy does, that was written by a numpy core dev, and it's not for numpy?
Sigh
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
What are the reasons for switching? What can matlab not do?
Well... You are breaking reddit guidelines, and not even trying to hide it, great job! Good luck with your internship at udemy marketing! :\^)
Kind of surprised by some of these. Take the Matlab sqrt or a matrix problem - the execution time seems to increase sublinearly in the size of the matrix, resulting in a time 20x faster than python. They must be using a fundamentally different algorithm I suppose? What could be making the difference?
Giving you the pleasure of using Free and Open Source software
I'm also curious if they had Python installed with the Intel MKL - would explain the difference in some matrix operations.
Replace X(...) with X[...]
You may have problem with english fam! :) After you have read the below carefully you may apologize. Based on advertising policy I'm not in violation of any rules. https://www.redditinc.com/policies/content-policy https://www.reddithelp.com/en/categories/advertising/policy-guidelines/reddit-advertising-policy
I don't understand what you're intending me to do with this. I don't see cvxpy on these lists even, which only gives me more questions, because I already successfully installed cvxpy 0.4.
Dear Compiler,
Indeed, it's to avoid package in environment_A get upgraded 'by accident' (aka unexpectedly) because you upgrade the package in environment_B. The safe way is indeed to create a different environment for every project you do. At a minimum it instills the discipline in you ;) This discipline also helps you to keep the 'package clutter' (and possible package dependency conflicts) per environment to a minimum. E.g. I typically create a new environment and only (conda) install those packages in it that I need for that project. In most cases setting up a new environment goes quite fast as conda also store downloaded packages in a local cache. In other words, when you conda install a certain version of a package in an environment, conda will first check in it's (local) cache if that version is already in it. If it is, it will not download that package version again, but install from cache. Only when the package version is not found in the local cache, conda will download it to install it (and store a copy in it's cache for future use). 
Are you going to be doing the data analysis on the device? Is it a large dataset?
Spiffy
You are in violation of the rules of the Python subreddit. 
Can you please link it? I dont see rules or faq that prohibits my activity 
developer and testers need to have access to code and unit tests. It makes little sense to give them an exe. The only person that should receive something made by pyinstaller is the end user, and that again depends on the situation. If it's a simple script, then ok. If it's a more complex application, some other conditions may apply and you might not be able to ship a self-contained exe. 
First of all, the apply function is good but should not be used if it can be avoided. It is essentially a loop over data. It is slower than a list comprehension and much slower than a vectorized operation. For example, in your case using the .str[] accessor to split into two columns would be better . It won't matter much on small data, but it's good to get into the access. Second to your actual question, ReverseLabels was seemingly generated from another data frame in a way that doesnt make it clear to pandas that it is a distinct data frame and not simply a reference. You can add an explicit .copy() to fix this. Also ensure ReverseLabels is generated with the .Loc or .iloc syntax 
This is what's called "a bullshit question". There are a number of potential factors here * loop unrolling * local temporaries * exponentiation algorithm * multiplication algorithm And many, many more. It's ridiculous to compare any non-trivial (one binary op) action across language runtimes, because the implementation of the langauge itself matters. If we were going off of CPU architectures and clock cycles of equivalently operating instructions, sure. It's also ridiculous to care about abstract O(n^(2)) routines. One must think "we will use these numbers, somehow, and we must be storing them somehow then, even if just temporarily". If we assume both subtraction and squaring is constant time (which is a safe assumption), generating these numbers this way is ridiculous. Thinking with matrices, because the upper end of i and j are the same, generate this matrix is A where A == A^T. Thus accessing some pair &lt;i, j&gt; would be equal to accessing &lt;j, i&gt; i-1, j-1, for any i and any j. Then further notice that acessing some &lt;i, j&gt; is equivalent to accessing &lt;i-1, j-1&gt; recursively until either i or j is equal to 0. Thus for any pair of &lt;i, j&gt; one can access the value (i-j)^2 by accessing &lt;0, max(i, j) - min(i, j)&gt;, or in other words, &lt;0, |i-j|&gt;. Thus you only need to generate a single vector of of (i-j)^2 pairs. Further optimize by realizing this vector is the series of perfect squares. Thus only a single loop is needed for generation and access is constant time. Changing whatever O(n^(2)) routine this is to O(n).
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
It doesn’t answers your question directly, but still. Use double leading underscore to make an argument positional-only: `def func(__x, __y):`. Use asterisk before arguments to make them keyword-only: `def func(*, x, y=None, z):`.
Not insightful.
Use /r/learnpython for python-learning-related issues. Use enclosing triple backticks or four spaces in front of each line to format code. Use `os.path.join` instead of concatenating with `os.sep`. Use `with open(filepath) as f: contents = f.read()` to read the contents of files. 
I guess I'm a little confused about your advice. This script doesn't have unit tests. It's just a build script ... it's not a integration system, or something like that. I don't see how supplying a self-contained executable denies them access to the source code. Since they're in the source tree we're building, along with the build scripts source code, it's right there if they want it. On the other hand, setting up a build machine shouldn't involve installing python, pipping in a bunch of dependencies, then managing a virtualenv ... all just to cut a build. Something self-contained is very appealing. The simpler the instructions are to enlist and make a build, the better.
This will be the answer on every question about my code!
To further clarify, you are using X as a list (X[...]) in the first parameter to plot.scatter, but then calling like a function (X(...)) in the second parameter. The error "object is not callable" indicates that the second form is incorrect.
This is my second account! Thank you !!!
I'm not an expert either, but I did found my school's hacking team. I agree with this as a starting point. The reason I decided to do back end Dev work instead of pen testing was because I realized that most hacking comes down to learning every little thing about what you're trying to hack. If you want some hands on experience, try Googling "natas bandit ctf practice". I'm on mobile so I'm too lazy to get the link right now. 
Hmmmmm... this is my opinion. I like to have all parameters as key arguments, because it is easier to understand code that way. Obviously when I have a trivial function, or when the parameters order is obvious from the function name I don't do it. Now if you wrote a function with positional parameters, then that is the intended way of using that function, and not as key arguments. As a mantainer you should focus on supporting those users that are using your functions correctly. If someone is using positional arguments as key arguments is their responsability to fix their code... in some way it is similar to private methods. You know that Python does not have private methods, but there is a widely accepted and unwritten law that methods starting with underscore are private, and you use them under your own risk... This answer got bigger than expected... so if you want to skip all that, read this: it is their responsability, not yours.
If someone is learning python with the goal of working in x field, wouldn't it be advantage to understand how to optimize the simple task they're testing on a small sample as if it were for a larger one?
Nope, it's basically all in one, big, happy namespace.
Wonderful that the jupyter notebooks are available
1: /r/learnpython 2: learn to read reddit sidebars 3: learn to use reddit's search tool
This is a great read.
Sure, but this problem could be easily extended to a problem that's more difficult to optimize. If we had a bunch of random integers that we needed to find their difference squared, this problem would be a valid test case for optimizing it. 
https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes
**Sieve of Eratosthenes** In mathematics, the sieve of Eratosthenes is a simple, ancient algorithm for finding all prime numbers up to any given limit. It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2. The multiples of a given prime are generated as a sequence of numbers starting from that prime, with constant difference between them that is equal to that prime. This is the sieve's key distinction from using trial division to sequentially test each candidate number for divisibility by each prime.The earliest known reference to the sieve (Ancient Greek: κόσκινον Ἐρατοσθένους, kóskinon Eratosthénous) is in Nicomachus of Gerasa's Introduction to Arithmetic, which describes it and attributes it to Eratosthenes of Cyrene, a Greek mathematician. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
&gt; As an API maintainer, are you expect never to change argument names on your positional arguments? I'd say yes. In an API that is meant to be used by people who aren't involved in maintaining its internals, your parameter names should be chosen to be meaningful to those outside users. Even in languages that allow positional-only arguments, you should be choosing names that will promote understanding of any auto-generated documentation that you generate. If you originally chose names that were good from that caller-oriented perspective, it shouldn't be a significant burden to keep those names in place as long as the caller-visible semantics of the function stay the same.
just stick in a random string gen or date time combo. 
If it's a matter of random integers, then those random integers should be used. Generating random integers itself is a performance penalty. Even if the numbers are random, if you have the same sequence of random numbers that you are picking i and j out of it's still a matrix of squares where A == A^T, and all my points hold bar it being a sequence of perfect squares. Caring about complete abstractions of pure generation are useless. Time is better spent analyzing the problem as a whole, optimizing the algorithm, then comparing the solution generation in both languages.
Well, using git pull --rebase is also usefull. You mentionad that many graphical tools use pull and do not allow to use fetch... so if we are going to talk about tool issues, I must say that Emacs+magit it's what works best for me. If you are an Emacs user, or your IDE does not support git, then give magit a try...
A more complete option for memory profiling is Valgrind. Personally I think it's likely better in that it's just a very complete toolkit for finding any sort of memory issue in a Python extension. The memleax README has a +/- on how it compares versus Valgrind. Perhaps memleax might be interesting in situations where you have multiple processes on different nodes interacting in real-time, and you can't abide the slowdown of Valgrind. Here's a Valgrind suppression file that I've updated to suppress warnings from the memory arena introduced in Python 3.6: https://github.com/pydata/numexpr/blob/numexpr-3.0/valgrind-python.supp
&gt; We found the problem in numpy and numba. The leak was ultimately caused by how we were using these libraries So this title is bullshit clickbait.
This is something I'm looking into. I'm aware Python able to compile large amounts of data but does it suffer under live changes? Is there anything I should be looking out for on this front before I commit? 
I feel your pain. Literally the only thing virus scanners are good for is covering corporate arses and screwing people who try to get actual work done. :(
The three-day-late answer to your question is that conda doesn't use "real" Python, but they made themselves a "vendorized" version that's often behind CPython in terms of features and support. Plus, it only has second-rate support for community packages like wheels. It makes for an overall offputting experience for people who need to care about the niceties of their environments and security fixes. It's great for people whose use cases center more on predictability of results from the past with minimal opportunity for manual errors, which is why it's ideal for scientists looking for reproducability. It's just not a real solution for, say, an IT company with clients fighting to maintain HIPAA and PCI compliance.
&gt; If we're talking raw speed for common mathematical operations on arrays/matrices, Matlab will pretty much always win out against python. Do you have examples? In my tests they were pretty similar. For example adding two arrays and fft were pretty close (MATLAB was a tiny bit faster for adding, scipy a tiny bit faster for fft). &gt; Their interpreter is JIT compiled so pure cpython can't come close to Matlab when you're writing loops. Again, do you have any examples? In my tests for simple loops they were again pretty equal. Sometimes MATLAB was faster, sometimes python was faster, but they were within a few ms of each other. For example something like this: ``` a=0; for i=1:100000 a=a*1; end ``` vs. ``` a=0. for i in range(100000): a=a*1. ``` MATLAB was about 23 ms while Python was about 19 ms.
If you reserve an infix operator in the language *everyone* gets affected by it. Not just numpy people. NumPy is not the only numerical package. There are hundreds of specific packages if you actually bother to check. That's why it was so difficult to convince the Python devs. That's why a NumPy dev and other nonNumpy contributors spent ridiculous amount of time and effort to make things happen. That's why people take it for granted. That's why people confuse a generic programming language which is also used say for web framework or Instagram with a tiny focus of matlab and its arcane syntax. That's why no matlab does not set the stage for syntax. That's why. 
For android yes I use kivy for example. For what I know kivy work on iOS too but I haven't never try.
&gt; It is a shame numpy came with the multiply operation having the wrong meaning; its legacy is bad for future adaptation and good for Matlab sales. So it is fair to show those legacy problems. It depends on your use-case. For at least 99.9% of the code I see, elementwise multiplication is what people use, both in MATLAB and Python. And MATLAB's use of `*` for matrix multiplication is a source of endless bugs. People use `*` when they are multiplying a vector or matrix by a scalar, then they switch it to a variable and forget to change to `.*`, and their code silently does the complete wrong thing. I always go through and change every instance of `*` to `.*` in MATLAB code unless it is explicitly doing a matrix multiplication in order to avoid people getting bitten by this in the future. I suppose some people may use matrix multiplication more than elementwise multiplication, but that doesn't make numpy's decision the "wrong" one. They had to choose one or the other, and they chose differently than MATLAB for what I think are good (although certainly debatable) reasons. 
No, you don't change every line. You use a property instead. You convert class Point: def __init__(self): self.x = 0 to class Point: def __init__(self): self._x = 0 @property def x(self): return self._x @x.setter def x(self, value): self._x = value When you use a property, the interface stays exactly the same. Calling code accesses what looks to be like an attribute, but in actual fact it is a method. **This** is the way to have control over you interface in Python, **not** getters and setters. You let calling code access public attributes directly and then, if you need control of the attribute later on, you use a property. 
This is how I got into Python initially. I needed MPI for my PhD thesis, and the university wasn't about to shell out a license for every one of the cores on our cluster, so I needed an alternative.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Also check out coconut: http://coconut-lang.org/
There's some rule about changing API that says no matter how edge case you think it is, someone somewhere is depending on it. The implication of this is that someone is treating your implementation as a specification.
Working example?
&gt; If you reserve an infix operator in the language everyone gets affected by it. Right, but that's exactly what happened. &gt; There are hundreds of specific packages if you actually bother to check. That what? That are affected by adding a symbol like `@` that they didn't have before? I mean, they can use it now to mean something besides matrix multiplication, so it benefits them in a positive way (even if it's a bit confusing), but I don't see how it negatively affects them. We can argue about the generality of `__matmult__`, but that's what was chosen, presumably because it was meant for matrix multiplication and numpy, but not core Python implements it. Regarding `@`, that's just a symbol, so it's kind of meaningless. &gt; That's why people confuse a generic programming language which is also used say for web framework or Instagram with a tiny focus of matlab and its arcane syntax. `@` is not a symbol in Matlab. Matlab uses `*`, which numpy could use (and does use in the matrix class, which is limited to 2D) for matrix multiplication. Matlab uses `.*` for it's element-wise multiplication, which Python does not have. The numpy have chosen to deprecate matrix for array because they got their `@` symbol. Scientific computation in Python is not a "tiny" subset. &gt; That's why no matlab does not set the stage for syntax. That's why. I don't follow. The PEP was approved because matrix multiplication in numpy was poor. People complained that a single package like numpy shouldn't drive Python features, which Guido disagreed with given the popularity of Python and numpy in the scientific community. It had nothing to do with copying Matlab syntax and it didn't. If anything, it's backwards as `*` in the Matlab vs. numpy array mean very different things.
I took one at a Catholic high school in 1992. Not sure as my kids haven't gotten to high school yet but I assume that with the rise of STEM schools there is no shortage of development classes.
Javascript
What do you mean does it suffer under live changes? You need to be more specific about the life cycle of your application and how it works. If all of the data is entered and then processed, fine. If data is continuously updated, then your analysis would have to be continually run, or at the least done in batch. It sounds to me like you need a more robust system for data storage and analysis what an android device can provide. Have you looked into setting up a server for the app to communicate with? 
Just for python PyCharm, else I recommend install Atom
From what I've read, you will only be able to build for IOs on a Mac.
While up to interpretation, i think this classifies as spam. This is prohibited content, as you can read from the [content policy](https://www.redditinc.com/policies/content-policy). The link to the advertising policy is referring to the "Reddit Advertising Platform" which you can read in the very first line. You are not using the advertising platform, but posting as a regular user. [This could be considered spam.](https://www.reddithelp.com/en/categories/rules-reporting/account-and-community-restrictions/what-constitutes-spam-am-i-spammer) You seem to be new on reddit. I would suggest that you try the advertising platform (It will greatly increase the audience reach). The reason i responded with a passive aggressive comment was simply to reflect your own behavior. English is not my mother language, but i hope i still got my point across "fam". 
I would say so. 
I wonder how it might be interpret, as many manager will jump on the idea of no bug fixing if it isn't urgent/can be recover by the end user. while we know (at least I know) that un-maintained code will rust and rot in a matter of months. &amp;#x200B; I do beleive that good enough is \_good enough\_ but there is difference between unhandled error and incorrect edge case.
Besides a better algorithm, like the Sieve mentioned below, here are some hints. * Do not compute **math.sqrt(num)** for each iteration. Compute it once. Or use **i * i &lt;= num** 
No `PYTHONMALLOC=malloc`?
My post is does not fit the spam category. Nice to see people not being moderators contribute by being judge and jury trying to interpret rules. Although thanks for the advertising link. 
Does it use any new features of python 3 or have dependencies that require python 3? I don't think logging changed much, if at all, between python 2 and 3. Is there any reason why loguru couldn't support python&gt;=2.7 ?
I suggest the following: 1. don't merge, use only rebase. note it is difficult to combine both merge and rebase, so change your config to use rebase on pull 2. commit in baby steps. wraps each logical change in different commit. use \`git add -p\` to select the chunks you want to commit together 3. rebase every day. there should not be any problem to fetch new code. in case there is see #4. 4. If you encounter conflicts too often, you project architecture is wrong. it probably one of the following: 1. Technical, your project mixes modules so 2 developers working on different issues change same module. 2. More technical, you have one stop shop, causing each change to be \_also\_ on this spot. 3. Management, too many developer works on the same module. nothing good can get out of this, find a way to change it. 5. If the same conflict comes again and again, you've done something wrong. check it out, conflict should be resolved, not endured. I see conflict once in 1-2 months, and it almost always trivial. it is possible. &amp;#x200B; BTW, r/git
I would not say it's brute force. It's a way to save the information you need that the site only distribute by html today.
FYI: Mike Bayer, the author of this post, is also the author of SQLAlchemy.
 --- Try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Reminds me of an assignment I had in a compsci 100 level course...
&gt;roblem in numpy and numba. The lea Wow. Really? No - actually, it is a frank discussion on what we had to do, and how we did it. If you consider that we just told the world that an application wasn't working properly and that we had to learn a lot, and this is how we solved our problem there is nothing "click bait" about it. We actually thought that some people would benefit from our pain.
A sieve method would be much faster, but if you want to stick with this method, there are a couple things that would make it easier to read/more "Pythonic": 1) Instead of a while loop, try: for i in range(l): 2) For your loop where you check if i is (am?) prime, try a for/else loop: for n in range(2, i, 2): if i % n == 0: break else: # i is prime
He'd probably prefer the title be "Fixing a Tough Memory Leak in Our Python Application"
My personal experience has found that there is more data available through companies api’s then on their website. 
Another benefit is that the length of the range is end - start, instead of end - start + 1 if the end were included.
For me it has been very good. I have also use pipenv but I prefer poetry, for me it is simpler and more elegant.
As you said yourself, only the moderators can judge if it's spam! Not even you! The moderation Team needs all the help they can get. It is therefore up to the community to use the "report" button when applicable. Since they do it for free, we can't really ask for them to go through all stuff on new. But a post with 0 upvotes, at least 2 users classifying it as spam, and some reports may make them look over the content, and give their judgement. 
It is indeed. Thanks
Has anyone else used Valgrind? What is your experience?
Kivy and Toga are probably your best options. I have heard that PyQt also has support for mobile, but tutorials for that are pretty scarce.
I did not know that python had properties, With that, everything is arranged
What are you even trying to quote? You jumped to "memory leak in Python". Lets avoid the fact that what most people understand with that is an actual memory leak in the Python interpreter, and go on to the main issue: It's not a memory leak if you're not using your tools correctly. A memory leak is when you've allocated memory, usually on the heap, and for whatever reason it's not being deallocated. Now in langauges like Python, where every object gets pushed onto the heap and gets deallocated by a garbage collector that works on refcounts, the only way that this can occur is a dangling reference, usually this would be a circular reference. It is *impossible* to have a "memory leak" without this circumstance. I have no idea what you guys actually did wrong, because you didn't give enough information. But this isn't a memory leak, non-exhausted generators can not leak memory, they are evaluated on demand and do not contain strong references to the underlying iterator. The post itself admits "we found issues in numpy and numba. But we were using these libraries wrong". By this wonderful thing human beings have called logic, if you are using it *wrong*, then the problem is you expected a different action. Even if this was indeed a memory leak in numpy or numba, you can't claim "these libraries have a memory leak, because we used them wrong". I can, technically if I want to, interpret any Python object in memory as a null terminated ascii string via some manipulation of ctypes if I wanted to. Is this a valid way of doing things? Fuck the hell no. There are a million different things that can go wrong because this was not a valid operation. It makes no sense. I can't say "I found an invalid read in Python!" Because while yes the action itself may be an invalid read, it was caused by a larger action that itself was bullshit. If you are told "Given X and Y, output X and Y, else, undefined behavior" by numpy, *you* are in the wrong for expecting something by forcing something else inside X or Y or the argument capacity.
Yup. But I'd further prefer the title "We had a problem X, which caused a memory leak due to undefined behavior. We fixed X!".
IronPython might work for you use case, although I don't know if it works with Raspberry Pis - http://ironpython.net/ I personally like using wxPython for my GUIs and I know it works on Raspberry Pis, although you may need to build it yourself - https://wiki.wxpython.org/BuildWxPythonOnRaspberryPi However I have never used wxPython with a Windows dll, although I would assume you would be using something like PyWin32 or ctypes anyway.
aha great ! so webscraping is not that thing to get data. I was kind of right...
It’s an interesting career choice but tends to vary greatly from a purely theoretical or research standpoint. Just a bit to keep in mind, I suppose. If you are interested in web application pen testing topics, OWASP is a good place to start. My only advice is if you are going to perform any scanning or exploitation testing, keep it on your own local network or have explicit signed permission beforehand.
O(n) vs O(1) memory consumption 🤤
Definitely a +1 from me but I haven't it tried it for a custom build steps yet. (E.g. C extensions and bindings)
I have not paid much attention to the 3.6-only features I have used, probably not many. As Loguru re-implement logging mechanism from scratch, how much the standard `logging` module changed between 2 and 3 does not matter much. I will make Loguru compatible with 3.5. I could make it compatible with 3.4 too, but as 3.4 end-of-life is [scheduled in 4 months](https://devguide.python.org/#branchstatus), it's not worth it. Not supporting older versions allows to use "recent" Python features in the code base of Loguru. Making Loguru compatible with 2.7 would probably require more work. Loguru is not intended to replace logging of already well structured program. Its primary use is for newly created programs. And modern softwares use Python 3, not Python 2, so there is no point in supporting 2.7.
There's lots of resources, including free ones, on /r/learnpython/wiki.
/r/learnpython and read the sidebar.
Pycharm is great, but to be honest nearly *anything* is better than IDLE. 
Poetry is my preferred dependency manager. I also like it because it makes publishing to PyPI so much simpler.
/r/learnpython and read the sidebar
Matlab docs are so much better than numpy and scipy. Especially scipy, some of that is just horrendous
There are people actually using idle? And for four fucking years at that?
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I really like vscode. Idle does the job if you’re just scripting. I tried using atom but had an awful time configuring with virtual environments. The only issue I have with pycharms is it uses a lot of cpu power and at the time of my trial was way too advanced for me. 
In Python, generally you don't get memory leaks because the garbage collection is quite good. However, some c-based libraries require manual cleanup, and it's not always obvious and/or the dev doesn't read the whole page of the docs where that will occur.
It's fabulous for my single-programmer usage. Seems like a great tool even at scale.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I spent several days trying to get a tiny portion of pycharm's basic functionality into vim and it was an utter nightmare.
something like Flask, Reahl, Django, etc.
Seriously? In 4 years it never came to your mind that there were better setups?
Nice to see how eager you are ☺️ do you contribute in any other way? Or just nitpicking post ?
The word you are looking for is "literal". The only way to make your own is by modifying the source code for the python interpreter you are using. You can find tutorials on how to do that if you want, but that would mean your python code would only run on your modified interpreter. 
I’m torn as I actually like PyDev but I hate Eclipse. What I hate about Eclipse that eventually every installation I’ve used eventually stops working. This includes Linux installs from nothing but repos. In any event I can’t imagine anybody seriously using Idle for 4 years. That is madness. 
That's what I did. But with a random hashtag from a list. 
Here a working example for the curious [https://github.com/delijati/memleak](https://github.com/delijati/memleak). Thanks @tayloed for the post :)
/r/learnpython
I tried pycharm but so many of the differences from vim ended up driving me back. Autocomplete in particular seemed to get in the way more than help, that and remote editing was a pain no matter what editor I tried (atom and vscode) 
Norton and McAfee are the fucking viruses.
You should almost never loop in Matlab. Vectorizing operations gives a ridiculous speed increase.
They do use numpy. From their source file their code for problem 2 is: #!/usr/bin/env python import datetime as dt from numpy import * import sys if len(sys.argv) &lt; 1: print 'Usage:' print ' ./copyMatrix.py dim' print 'Please specify matrix dimensions' sys.exit() dim = int(sys.argv[1]) # Copy with loop #---------------- A = random.rand(dim,dim,3) begTime = dt.datetime.now() for i in range(dim): for j in range(dim): A[i,j,0] = A[i,j,1] A[i,j,2] = A[i,j,0] A[i,j,1] = A[i,j,2] endTime = dt.datetime.now() diffTime = endTime - begTime print 'Time for copy with loops: ', diffTime.total_seconds(),'s' print # Vectorized Copy #---------------- A = random.rand(dim,dim,3) begTime = dt.datetime.now() A[:,:,0] = A[:,:,1] A[:,:,2] = A[:,:,0] A[:,:,1] = A[:,:,2] endTime = dt.datetime.now() diffTime = endTime - begTime print 'Time for vectorized copy: ', diffTime.total_seconds(),'s' print &amp;#x200B;
matlab is extremely fast to run and develop if you are working with matrices and the built in math intrinsics.
PyDev is good, but you noticed he wrote PyCharm? It is even better. :)
Matlab is written in C, C++, and Java (and makes use of blas libraries that use Fortran). The matrix operations are done on an architectural level and are quite a bit faster on average than numpy's. I'd assume the matrix operations are written in C and C++ and the IDE is Java (plus wherever graphing is).
You can absolutely look at their code. Its in a tar file at the bottom of the post. They use numpy, but you can always look through their code and contact them with improvements.
Me too. Good luck.
Thats not the point. The point is they gave incorrect input. At that point all bets are off. It's not a memory leak, its a "we made a fucksy wucksie".
Yeah I noticed but somebody that has used Idle for 4 years needs to know that there are options. Lots of options really depending upon where Python is taking you. The Spyder IDE is an example of a Python IDE focused on a specific niche. I’m actually a bit surprised that somebody would have used idle for 4 years. Since I don’t engage in much “professional” programming these days I actually have played around with a number of IDEs recently. Anybody doing Any sort of development should check them out. By the way I appreciate IDEs that handle other languages and file types easily. For some they may not need that capability but I end up working with all sorts of files so being too focused as an IDE is bad from my perspective. 
&gt; (and makes use of blas libraries that use Fortran) BLAS does scipy. Numpy uses LAPACK. It's basically the same. &gt; The matrix operations are done on an architectural level and are quite a bit faster on average than numpy's. They do what numba does, which you can use.
Are you referring to numpy or core python? If it's core python, the answer is you didn't vectorize your code.
Ctrl+B for the win
Check out IdeaVim, it's for us master race folks.
I use terminal + file.py (ubuntu) LMAO
Why is it there are still people who refuse to use IDEs? Like it's, I dunno, cheating or some bullshit like that? "Real coders don't need syntax highlighting or intellisense." The fuck?
True I use windows notepad. 
Occasionally it trips up and I need to restart. But overall, it's really great.
Lol I ninja edited the "nearly" in there because I knew some smartass was going to make this comment. 
vscode &gt; pycharm
Coming from someone who has used both, PyCharm is a lot more full-featured out of the box. Yes, VSCode can be customized to work like an IDE but it doesn't have the same debugging features PyCharm does.
Yes and no. Depends on what you are collecting and what they provide. Also something to consider is terms of service. You are held to higher standard if you are using api or login into a service. 
Plotly is really cool
Well, it's what I started with, and it worked well enough!
It did come to my mind, but Python only came into the picture occasionally. For small scripts IDLE felt pretty sufficient. I was a sysadmin and mostly doing non-python stuff in vim. 
for the first few years i didn’t know IDE’s where an option, but now i love them of course 
I have roughly the same experience. I've tried PyCharm out over the years (I have a license for it, even) but I always just come back to Vim. One day I'll open Vim without thinking, to edit something quickly, and I just forget about PyCharm.
Fair enough.. I love pycharm but for everyday scripting I use vim + ipython and I don’t regret anything. To get python code completion in vim look for Jedi-vim, or ncm2+languageclient combo for multi-purpose completions 
I can't answer for other people who don't use IDEs, but my reasoning was that IDE's felt huge, bloated, and needlessly complex for most of what I was doing (small system scripts). My only IDE experience was Visual Studio and Android Studio. Even relatively simple seeming tasks like telling Visual Studio that I am coding in straight C, not C++, (it was surprisingly complicated to do) felt like a big hassle compared to just jumping out of vim and typing gcc filename.c. What convinced me to want to use a real IDE was going into the #python irc on freenode and learning that no one uses IDLE, haha. I also still use DrRacket when I program in Racket, which is sort of the Racket world equivalent of IDLE. Maybe I should look into a good Lisp IDE as well.
I usually program at a terminal prompt over SSH, on a number of different hosts. So unless it's console-based it's not much use to me. 
VSCode and Atom all day :)
i wouldve assumed visual studio would use up more resources than pycharm, it vscode really that good, or is pycharm just getting bad?
Vim, or something Vi-like, is on most systems people work on regularly, so knowing how to work in that environment is useful. And because they're optimized to the nines, they feel very responsive and snappy. Sublime Text worked great, but VSCode with VIM mode has been a really good sweet-spot in terms of very fast editor w/ good plugin system. Syntax highlighting is nice, esp. with a good color scheme, but I couldn't care less about Intellisense features. If I'm using a library, then I'm either experienced enough to know what I want to do or I have the documentation open so I can make sure I understand the nuance of what I'm trying to do with the library. I just don't find something popping up to suggest autocompletions that valuable.
I'd rather use emacs
Too bad their 3rd class product miles behind pycharm
Pycharm supports deploying code to remote systems and debugging on there.
Pycharm isn’t bad, just overpowered. All its features cause it to slow down, whereas by contrast something like VSCode or Atom is much quicker. 
Jesus Christ this is somehow the highest-effort and lowest-effort shitpost at the same time.
I do too when i'm working with flask, i don't know why, but i can't get it to work on my main Windows pc
Notepad++ is my jam 
Exactly the same experience. I think the whole *integrated* part of IDE just doesn't work with me. Tmux to multiplex the terminal: one panel is the editor (vim), another panel is the testing framework, another panel for git. To me it just makes sense to use seperate tools for seperate jobs. 
Damn, I gotta try it out. I'm using VSCode with Python plugins and I hate it. I have so many copy and paste errors and configuring the environment on VS Code is an absolute nightmare.
Is it illegal to not use api?
I think the whole *integrated* part of IDE just doesn't click with me. Tmux to multiplex the terminal: one panel is the editor (vim), another panel is the testing framework, another panel for git. To me it just makes sense to use seperate tools for seperate jobs. Knowing what each and every tool does is important to me. And being able to swap, for example, a testing framework or networking framework for another one without waiting for the IDE support or plugin is an example of a practical upside to my preferred method of working.
Not sure what you have against Vim, but it has syntax highlighting and autocomplete. It gets even more powerful with plugins.
You know PyCharm and Android Studio are both based on IntelliJ, right?:p
JS is weakly typed, which means values don't have a single defined type, and will implicitly cast between types to make things work out. For example, `'3' == 3` and `'5' - 1 == 4` - strings with only digits will act like numbers when you do number-like things on them. The problem is when different types have different semantics for the same operators, and JS has to choose, because it will be inconsistent with at least one of them. For example, number + number adds numerically, and string + string concatenates; for string + number, do you coerce the string to a number and add numerically, or coerce the number to a string and concatenate? (JS concatenates, which is inconsistent with the rules of adding numbers, e.g. `'1' + 1 == '11' == 11`.) Python is strongly-typed, and avoids these problems by erroring in any ambiguous situation. This ensures you get what you ask for by making you ask for the behavior you want (by calling str or int/float).
TBH, Microsoft world is far better. It has better search and replace, better environment in general and you can add sick word arts to your source code.
PyCharm's functionality is off the hook, but I keep running back to Visual Studio Code for the speed.
I still prefer VIM. What do you like about pycharm?
I'm still debating between pycharm and vscode. 
I too use a hammer and chisel to write.
Yeah
I like Pyscripter. https://sourceforge.net/projects/pyscripter/
Since you already have a class going, you might want to see what you can do with numexpr or maybe z3py? Starting places perhaps.
Was in your spot but my tools ended up becoming useful for the entire team so requests were raised to get exceptions and packaged approved. Try to convince your manager imo.
This, pretty much. A terminal has more customization options available to you than any IDE ever will, with support for any language you want.
I've used Atom for a couple of years and admittedly just figured out it's "project" structure. Is that what you mean by "virtual environments?". 
FOR KARMA!!!!
What else is a memory leak?
Exactly what I was gonna say. Notepad++ is a great lightweight solution for quick and dirty edits. I love pycharm but it's overhead is too much to justify unless I'm having long sessions without running anything, given my work computer has 8 gigs of ram
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Well I guess, but companies tend to distribute APIs (e.g. YouTube, off the top of my head) so users dont overload their servers with scripts. I believe you get a timeout if you ping their servers too many times? 
Vscode is run on an optimized version of electron. It barely skips any power on my laptop either, yet I get 0 lag even when opening up large files. Pycharm is just heavier software that does the same thing.
Virtual environments are used to sandbox libraries between projects so you can have different versions installed for different projects
Fast machine and RAM is worth it for my time.
You're still missing the point. If they were using the libraries in valid, documented ways, and a memory leak occured, then there is a memory leak to fix, either because of their specifc input or an issue with the underlying library or virtual machine. This is what the title and first few lines lead people to believe, however they admit they were using the libraries incorrectly. Once you use what you claim is causing an issue incorrectly, all bets are off.
I've used it when tinkering with implementing custom dtypes here ([glacial-progress PR here](https://github.com/RobotLocomotion/drake/pull/9997)), and used these [cobbled together instructions](https://gist.github.com/EricCousineau-TRI/ce79d3265bb72934267e24ddc8c623bc) (missing a direct link to suppressions, though), and actually did find some memory leaks - I think it was [this PR](https://github.com/numpy/numpy/pull/10898) that it helped me debug. On the whole, would recommend, but only after doing simple execution tracing using the `trace` module to try and eliminate easy possibilities.
&gt; Vim and IDLE Why would you use anything besides Vim?
Emacs with elpy FTW. Haven't found a better environment yet.
Oh my god. For real. There's hardly any learning curve too. I just discovered PyCharm last week and it's been life changing. 
yeah, i was going to come here to say, "now wait until you try vscode with flake8 as your linter. you'll never write such pretty, perfect, code."
Yep, its not even anything against pycharm but I cut my teeth using vi and vi only (cause government systems, no package install w/o a CR and Cab Approval) so its what I got used to. The times I tried it out I spent more time searching how to accomplish something that I know how to do in vim already and that just kind of makes it hard to get into the rhythm of actually working instead of reading about working.
This really depends on the task for me. Small to even medium sized things, I use sublime text + a few plugins. One a project gets bigger than I can keep in my head all at once, it’s time to put the time into setting up a PyCharm projects and taking advantage of all the tools it has. For an awful lot of stuff the overhead isn’t really worth it. 
It also has syntax highlighting. Every time I type def it underlines it in red. 
I used it from 2010 until 2018, honestly. 
What is IDLE? I just use Spyder
I just left vscode. So sick of being told to install pylint. 
I guess it depends how paranoid you are about having a system that works identically to production. Possibly it could be that with pymalloc, the OS won't know if you're writing from the wrong memory, because it already allocated a big arena to play in. I have not tested that case though to see if it makes a difference for Valgrind. 
Another example is for unittesting and checking GC refs and all that. Most likely an advanced topic, so probably nothing to worry about for now.
lol I can just picture you using the debugger for the first time. You probably shit your pants lol. You were basically using a Swiss Army knife to chop down a tree and started using a chainsaw. 
You can enable barebones vim in pycharm with the plugin IDEAVim
Honestly? I don't trust people who implement their own malloc (the OpenSSL thing comes to mind). I've never yet seen a justification for *why* it causes valgrind errors. Normally, all a allocation-reuse layer should do is *hide* errors.
Give me 3 legit reasons why
I'll second this, it's only a matter of time before any eclipse project needs a hard wipe and a fresh install.
PyCharm has a lot of cool features, and it sees far more active development time than Eclipse/PyDev these days (my favorite editor for a *long* time). But it still suffers from the same problem it always has, though it's much better now than it used to be -- for large codebases and projects, the interface tends to bog down and chug a lot.
PyCharm is great. What I use is: Atom + terminal plugin running IPython or fish. I remember the days of writing .py files in TextEdit and then running them with the Terminal.
Once you get the workflow it becomes soo good [UNIX as an IDE](https://sanctum.geek.nz/arabesque/unix-as-ide-introduction/)
My company has `"editor.formatOnSave": true` with Black installed. It ends so many pointless arguments about formatting.
I think visual studio code is just as good as pycharm
i've been meaning to try black, but i come of the ops side of devops, so vscode and flake8 are part learning exercise for me as well.
is there anything about this that actually helps JS for frontend applications? ive never really understood how JS got so far ahead of python on the web. is it just a head start thing? because it does seem far less intelligible as a language.
Yeah, I used PyDev/Eclipse for a *long* time. I would try out PyCharm about once every year but it was just *so* slow compared to PyDev. It still kind of suffers from that now, but it's way better than it was 5 years ago. But I get what you're saying about PyDev. If you tried to upgrade *anything*, it would break your whole setup. And whenever a new Eclipse came out, you basically had to redo your whole setup from scratch again. That being said, I've had a lot of different environments and installation setups and I was able to get PyDev to work with them all, with auto-complete, debuggers, testing, environment managers, testing environments, etc. I use PyCharm now just because the speed is reasonable now and the PyDev/Eclipse/LiClipse development roadmap hasn't looked too certain for the past few years. Kinda makes me want to check back in on PyDev and try it out again...
Still around and we'll get you up to speed.
I jumped from pycharm to atom. Like all the control it gave
Same boat, just started using PyCharm. She’s beautiful
I would but I couldn't get pyinstaller working so unless the entire team have python it wouldn't quite work. It'd be an uphill battle and I'm still quite new to the company so it's difficult. Appreciate your suggestion though, thanks!
Exactly the same setup in mine too apart from debugging. `pdb` can only do so much. 
matlab is a good environment but a terrible language
Welp, my computer sucks so I'm stuck with IDLE.
You can also enable VIM mode which is really awesome. You get all of the benefits of VI without needing to switch constantly between which terminal is doing what. I used to do it that way but I found myself organizing code with longer files instead of separating them into logical areas because of the switching I had to do between them.
I know about python virtual environments, I thought this was about some feature specific to Atom. I certainly have used venvs with Atom and never had an issue.
Did a lot of scrolling, didn't see any emacs nerd rants. I'm proud of you guys.
Real programmers use Microsoft paint and run the resulting image file though an ocr to generate the actually code files.
I tried Pycharm after IDLE and was excited about it at first but I couldn't deal with how it was always freezing and finally checked out VS Code and after watching a tutorial, changing some of the settings/appearance, fell in love with it. 
The window was made with tkinter. [https://user-images.githubusercontent.com/13696193/49773023-65b24300-fcbd-11e8-8922-85dba502d4d7.jpg](https://user-images.githubusercontent.com/13696193/49773023-65b24300-fcbd-11e8-8922-85dba502d4d7.jpg) Or you can have a flat interface too which seems to be popular. The point is that you have quite a bit of control of the style even with tkinter. &amp;#x200B;
Well i ended up making a webapp out of the scripts with flask and put it in a centralized machine everyone could access. 
I just bspwm + tmux + zsh + vim to get a good workflow. Pycharm is a good IDE though, I just have a specific flow.
Normally a vim guy. but PyCharm has its uses. For a machine learning project I was doing in school, pytorch was adding some variables to the computation graph that shouldn't have been there. Auto-differentiation bugs like that are an absolute nightmare to track down. At some point, print statements become a living hell, and having the variable introspection and ability to set breakpoints won the day.
I like knowing exactly where my virtual environments are and when they're active. PyCharm tries to obfuscate too many important things from the user in the pursuit of "streamlining."
But you were using vim. What does IDLE even give you at that point?
Although it's not as convenient, you can do that with pdb (usually by dropping an `import pdb; pdb.set_trace()` in your code).
Aaaaaah, that's a good idea. Let me give that a whirl, thanks for the insight!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I like VSCode, but Atom's performance drove me insane.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Intergrated dependency environment
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
You joke [but...](https://ms-paint-i.de/)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I tried to remove it myself aparently I can't do that. I relized it was in the wrong place pretty quick. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
FFS, I shoulda known somebody would have already created that lol.
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Haha it's funny you mention, that is actually what inspired me to switch. I was in irc.freenode.net #python explaining and issue and someone asked me what my debugger said. I said I was on IDLE, and everyone was like, yeah, no one here uses IDLE. They recommended PyCharm and, mind blown haha.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Most of the projects I work on are rather small thank heavens haha
PyCharm is so complicated though... 
This is awesome! However, your Github README still lacks clear documentation (which I would guess you're in the middle of expanding on). If I may ask -- are you one of the web devs behind PCPartPicker? 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Np. Good luck mate.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Python own IDE, it comes with the installation in windows, linux you have to install it.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
That’s the reason i move on to PyCharm. I use it in my desktop, in my “scripts server” i use vim. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Wait until you try Jupyter ... 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Yeah I think I need to get over my way out of date prejudice against Microsoft and give Visual Studio Code a try one of these days. 
What kind of control did it give?
Well...at least you could hop on vim with some Python plugins!
And Pycharm doesn't seem clunky? I hate running it in a VM. Why not use VS Code?
I think that if you don't think vim is fundamentally a superior way to write code (leaving aside debugging I guess) then you don't really know vim.
Yes, but where will obtain your self of smug from now? Better buy a Tesla, quick!
Damn, I like VS Code myself. Definitely not as good as Pycharm, but great for quick scripts and editing existing code.
I just started trying to get into python (mainly for adminstration/data analysis) Tried pycharm but I really like the simplicity of vscode.
Yeah that's because we are in the Twelfth and Final Editor Age when the Church of Emacs loses her heart to corporate whoredom and the mindless, degenerate masses supplicate as one homogenous, spiritless, Nodejs fueled swamp before the number of the beast: VI VI VI. Nah, honestly I really want to learn Emacs because of SLIME, and as a Lisper I hear nonstop about how great SLIME is. Idk. 
If you happen to be a student, look up Jetbrains Students, you can use all their paid products for free while you're a student.
You can even get vim in PyCharm!
There it is
it has a vim mode!
I am about to join a coding bootcamp for deportees/returnees here in Mexico. Pretty excited! I don't know if that would count in the eyes of Jetbrains Students though.
Atom ftw 
Not at all, it loads instantly and everything runs like lightning on my system. I'm on OS X writing code for OS X and Linux. 
It's so cluttered compared to vim. I run i3wm with *zero* borders and titlebars, that's how minimal I am.
I disagree. There are very legitimate use cases for simple function calls. A good example is printing the length of a list in a loop. print(f'iteration {i}, list size {len(x)}') It is readable and you don't have to give up fstrings or define a new variable.
It seems really simple! I mean, I guess compared to IDLE or vim yeah. But compared to writing Android apps in Android Studio it feels like kindergarten, haha
you will probably have to figure out venv or pyenv at somepoint anyway. It's not that hard.
&gt;Better buy a Tesla, quick! Sadly, switching editors has not yet boosted my income by an order of magnitude. Do I get a free Tesla if I learn to code in ed?
omg yes so triggered. I will try PyCharm tonight.
Well, you have an unique case. IntelliJ would look really out of place in your environment.
Haha honestly I can't even figure out how to edit text in Emacs. And I've tried. 
Yeah I've got the plugin, it's great!
Okay, lot's of people have mentioned Atom thus far. My attention is caught: What's great about Atom?
the first hit is always free.
Pycharm is life. Welcome to the club!! We are glad to have you haha.
I'll take the time to learn it! Everyone keeps praising it so clearly they're understanding something I'm not. 
The title is "Fixing a tough memory leak in python," which seems an accurate description of what to expect when you read the article. Your comment is: "So this title is bullshit clickbait." Now you are debating it with a stranger on the internet and changing your own premise to include the first few lines of the article.. Have you forgotten the golden rule: Don't play yourself? I don't see the clickbait. If I wanted to fix a tough memory leak in Python, I could use this article as a starting point. It has code examples of what to do in case I encounter the problem in the title. The title lacks hot girls in my area, programmerhumor memes, any sort of numbering (6 ways to fix tough memory leaks in python!!!!!1). It's debatable that you're even technically correct. Even if you are, your comment is a hundred times more clickbait than their title. Even if you are, posting an article admitting that your company's code had a bug and detailing how you fixed it is an admirable, desirable thing that the community should always appreciate, even if they've outleveled your particular bug on their first day of computer science class. So please, in the future, take 10 seconds before you post to think if it's worth your time to do so.
Running Pycharm in a VM isn't ideal and it's not really designed for that. At work I run Pycharm on my host (Windows) and it can handle multiple Linux VMs running in Vagrant just fine. Pycharm has bulitin Vagrant support, which makes managing that setup pretty easy.
I mean, it's probably better to use IDLE when you get started than burn a lot of time trying to pick the subjectively best editor.
YES! Every time I type anything it says “please install pylint”! It’s more annoying than windows wanting you to use Microsoft edge as a default browser....
Yeah, VSCode has always been a happy medium for me when it comes to editors. 
I'm a bit late and I know we are supposed to be suggesting GPU python solutions, but would it be possible to just look at the sizes of the files to determine if it has information? As I suspected with the two examples there is a bit of difference between sizes, but I don't know if it applies to the whole dataset. [Image sizes](https://imgur.com/ASKPvrE)
Btw, If that's just the end of a print statement we're looking at you don't need \n. Should work fine without 
I really like Sublime for fast lightweight stuff. Pycharm is heavy duty. VScode is halfway inbetween. In descending order of features: Project management and debugging: Pycharm Debugging: vscode Lightweight, versatile editor: Sublime
Thanks for suggestions now I'm using Pycharm with anaconda 
I really enjoy poetry, but be aware that it's support for private pypi repositories is spotty at best, but that seems to be worked on.
If my machine were more powerful I’d drop VSC for PyCharm in a heartbeat. No question.
I think it was just a head start too. If you consider that it will keep on going for as long as possible without erroring (a la PHP) as a benefit, then that, but otherwise no as far as I can tell.
 You may also load the ui file within the app: &amp;#x200B; from PyQt5 import uic self.ui = uic.loadUi("untitled.ui", self)
I like IDLE. It's simple and clean, just me and my code.
So many get turned off by Vim it's a damn shame. [Thoughtbot just made their course about Vim free.](https://thoughtbot.com/upcase/onramp-to-vim) I'd encourage people to check it out. There's also some great Vim plugins for Python that makes things even easier. 
I feel like you actually believe this. And that makes me sad for you 
Most days I’m like that .. only every once in a while the glitz pulls me
For stress testing, check out locust.io
The title is clickbait. It is completely inaccurate. The story describes something completely different. &gt; Even if you are, posting an article admitting that your company's code had a bug and detailing how you fixed it is an admirable, desirable thing that the community should always appreciate, even if they've outleveled your particular bug on their first day of computer science class. No. Because they overstated the kind of bug they had. It is not admirable to make oneself seem more important with nothing but lies. It is worth my time to point out complete bullshit. My comments were at +20 until whatever company this is caught on, replied, and with how quickly I went into the negatives out of nowhere, I can only assume they decided to brigade me down, in the same way that they brigaded themselves up to 100 points and no comments at that time.
IntelliJ, as in, auto completion? VIM has plugins for that. I find IDE's to be cluttered and *unreliable*. Even crashing once a month is enough to put me off. VIM has never - ever crashed on me. And I can seamlessly work remotely. I also use the power features of VIM, in particular, s and g; combine them with regex to make large edits. Yes, newer IDE's can do that with symbol based search/replace, but that's unreliable as well. I admit a large part of it is how much time you're able to invest, and whether you would gain any satisfaction from using VIM at a high level. Normal people don't have the time and they have better things to do than becoming proficient in the best editor ever created ¯\\_(ツ)_\/¯
Can you try to disable lint?
Debugger? Build configurations? I guess I'm biased because I use pycharm for work and we have an enormous code base with thousands of unit tests and 20+ GUIs. The ability to launch anything with the click of a button, built in VCS, auto complete, auto import... Configuring any other editor for all that would blow. 
I use pycharm too, its great. I set up sublime text to highlight python code using plugins, it works really great also, haven't moved entirely to it yet but if I can get it just right I probably will
I like vim, but vim is fundamentally different from an IDE. You can't compare a text editor to a fully featured environment with all the tools a few clicks or keyboard shortcuts away from the fingertips. /u/seisvelas, if you like vim, try the IDEAVim plugin for jetbrains IDEs.
Get used to the debugger ASAP. Productivity 10x once you realize you can pause code, evaluate things mid-run, make changes to variables etc and keep running. If you are sysadmin and can drop $90/year pro is worth it - remote development tools mean you can develop from pycharm on a remote linux vm - it also has full remote debugging which feels like black magic. 
IntelliJ isn't auto completion. It's an umbrella term for the Jetbrains IDE feature set.
Once you go vim you never go back
Ah. What are your top 3 favorite features of it?
Great! I've not been using the framework recently, but I think this shell script is used for the same purpose in the Anki project. Indeed, many tips of PyQt5 can be found in the project. See: https://github.com/dae/anki/blob/master/tools/build_ui.sh
But after 4 years of using vim, wouldn't you be good enough for it to be faster than PyCharm?
true dat 
I'm not talking about the features. The UI design would look out of place in a riced minimal environment like yours.
I was a sysadmin, but I had to return to Mexico. I'm really, really poor now, haha
I'm a bit new to programming in Python and I primarily use Jupyter. However, it crashes a lot and keeps creating new cells when I just want to run one main cell. How do Pycharm and Vim compare to this?
Use `ipdb`! It's `pdb` but you get the ipython repl
Too many knobs. 
 if vim_competence &gt;= moderate : assert developer_prefers_vim 
try a variant like `ipdb` or `bpdb`, they go a nice long way.
I’ve used pycharm. It can do some things really well but it will never replace nvim/tmux config for me. 
[removed]
&gt;Honestly? I don't trust people who implement their own malloc (the OpenSSL thing comes to mind). I worked for many years in a group that was forced (for antiquated reasons that already at that time were no longer valid) to use memory arenas. At the beginning they look like a great solution, but I have personally found they are the beginning of the end of your codebase, and that it sways the "speed vs memory" scale massively towards memory consumption. Reading that Python uses them does not instill confidence.
can you explain this software to me? it's a joke right? writing code then saving it as an image, only to convert it back to text and compile it? 
At least with Python 3.6 you can just set the environment variable and forget about it ... unfortunately, I'm stuck on 3.5 for a few months.
I use pycharm mostly these days (other than vim) but I have precommit hooks that run flake8 for me.
How would that work just creating a ui object? Do you still get all the layout imported into the script without having it all typed in the same file?
Nice! I'm not surprised someone else had the same idea. I'm not very fluent with bash scripting though so I went with what I know.
I mean it's a joke in that obviously no one would actually use this to do a legitimate project, and that it's intentionally funny. But it isn't a joke in the sense that it doesn't work. It's fully functioning, in the sense that you can write code and execute it. 
These engineers were so preoccupied with whether or not they could, they didn’t stop to think if they should.
How about `youtube-dl`?
That's how I feel after going from Pycharm to Visual Studio Code with extensions
I'm the opposite. I have plenty of power, but dropped pycharm like a hot potato when I discovered VS Code 
I love Vim, but as stated by others, unless you add a ton of Vim plugins to try to mimic the behaviour of an IDE, I feel it's too hard to use when you work on big projects. I've only recently started using PyCharm sporadically when working on bigger, unfamiliar codebases, and it feels more productive. With all that said, if you like Vim, I would recommend checking out [Kakoune](http://kakoune.org/). It's a text editor that is heavily inspired by Vim, but with a different approach in its "grammar": You make selection(s), then place an action on this selection (in Vim, it's the contrary and it's very confusing sometimes because you can't see the selection you're going to apply your action to).
&gt;user readable dashboard Maybe Grafana?
WSL + Sublime, anyone?
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
[Foursquare](https://developer.foursquare.com/docs/api/venues/search) might work for you. 
Yeah I've used pdb before. Command line debugging can sometimes be a real pain though.
As a noob I am glad to have seen this post. I started with pycharm and was thinking about other options. I think I will stick with it. 
PhantomJS is deprecated, use puppeteer You should compare the actual solution: https://github.com/HDE/arsenic And you should look at subinterpreters over multiprocessing
Wtf
yah same here. I tried Atom, VSCode, Brackets and went back to Notepad++. I managed to port over my VSCode dark theme to NPP. (There is also solarized by default, but I found it too blue).
Wordpad.exe master race 
And Alembic (the SQLA migration tool), and before that, the Mako template engine. Mike's a helluva dev - SQLAlchemy is very sophisticated. The more enterprise architecture books I read (Fowler, etc) the more I'm like "oh yeah that's in the SQLAlchemy, I get why it's there now". :-)
This is because it uses TkInter and *nix distributions do not assume you have TCL/Tk installed when you install python.
I had to use IntelliJ at a big company once to work on a springboot on maven application. I developed PTSD from it. I noticed that PyCharm takes forever to reindex when you switch venvs under "project interpreter".
Lol
Ok. My rate is $150/hr.
How does VScode compare to PyCharm? I want to like Atom, but it’s way to CPU/RAM heavy as soon as you install any plugins (and I like to overinstall because I enjoy dabbling and experimenting in many languages).
Yesssss atom for quick edits and VScode for developing. Although pycharm is great for running flask based apps and make it easy to run the app and edit code as you go
I like pycharm if only for not being constantly told that I don't have pylint installed. God dammit VScode I have pylint installed!
Yelp has an api. Pretty simple project if you use that. 
You can always enable vi mode in pycharm and have the benefits of vi keys for text manipulation etc with the fantastic debugging/deployment config of pycharm. 
vscode is awesome on osx, it has nothing to do with Windows. it's basically a better Atom. 
Pycharm has a vim emulator if you're into that kinda thing
Dunno why you were downvoted for this. The remote deployment/debug is a lifesaver. I fought with scp, rsync et Al. for ages before finally getting everything to work as I wanted with pychar.. Now I can auto sync files to my devserver, start it and attach debugging to the process and subprocesses. It's heaven.
Any good documentation?
For me it happened after trying Pycharm’s docker / vagrant integration + the remote debugger. No going back after that. But I still do elixir programming in nvim.
agreed. Except I would maybe say IDLE is better than nano/pico 
Huh. TIL. thanks.
I took an easier approach for me. I just add all the files of my project to a .bat file in windows like [this](https://image.prntscr.com/image/XiVie0MrTYewuTqsfgcN1g.png). Each time I make a GUI change I just double click this file and everything updates. This way I only have to type the name of an UI file once.
How does Komodo Edit compare to PyChar.? I used to use it a *long* time ago when I was learning Python 3.3 on Windows but haven't touched it in ages...
Once upon a time they were really important, but then execution safety increased across the board and now these companies survive on FUD. A computer with active scanning is objectively safer than one without, but I don't think you can measure the difference in real-life scenarios. Source: Used to work for Symantec.
Simple and clean is the way that you’re making me feel tonight. 
Wow sounds pretty sweet. Just make sure you introduce it as PizzA PI (Pizza Pie).
How do you debug code with VIM?
But, the post shows, you might actually go forward... to PyCharm. Lol
Hey Connor I just pmed you!
Reeee. Try visual studio code.
What can the debugger do? How easy is it to use? What's the advantage of using it?
Unlike an IDE which will often integrate a debugger you usually don't debug with a text editor. While writing code in a text editor I like to debug with pdb.
Of Pycharm? I'll bite. 1) Top of its class debugger. I am in ipdb every single day, but the graphical debugger of Pycharm is just a joy to work with. 2) Fast linting and faster type suggestions. Very helpful on large projects. 3) Built-in Docker support (for the Professional version). 4), because I want to: Django and Flask server debugging. So much easier than using the default options. 5), because I can: Autocomplete everything and the suggestions engine is damn good. 6), because it's the reason we're having this conversation: it's the best IDE you can get for Python. Vim is not an IDE, it's a text editor. With plugins, you can make it pretend to be an IDE, but it will never be as good as the real thing.
Try Atom
Wait till you try Visual Studio Code
I love black, but wish it defauted to the 79/80 character "standard". I know it can be changed, but even when you tell it to use 79 chars it still will over run that whenever it feels like it's smarter than me. Having to add linting macros to get it to leave those occasional lines alone just feels like it's defeating the purpose.
Real programmers use M-x butterfly
There is nothing inherently wrong with it. Why are you so amazed?
Someone updated a bunch of my job's "common commands" on our wiki with something they updated from Word and converted everything to smartquotes. Man that took me a while to find.
It's fast as long as you only stick with the default build. As soon as you start adding plugins it starts to keel over, and god help you if you have to open any files that are larger than about 1mb. I developed full-time on Atom for about a year; it can be done and it can be a mostly enjoyable experience. That being said, Pycharm is definitely where I ended up.
Is this a college project!?
Fuck you 
If you are coming from vim to pycharm I strongly recommend ideavim plugin
pudb can do that inside your terminal :3 its rough but it works well IMO
Nice, thank you for your reply. I'm sure I would use Pycharm if I was actually a Python professional.
Even Fortran can run with 0-based loops.
OP, use this guy. He's cheaper than the rest of us.
why would anyone run a cross-platform IDE in a VM?
Well, they kind of have to be when their language doesn't have optional arguments and they have to use strings to fake optional arguments.
You guys are joking right?
&gt; Debugging: vscode do what? how is vscode's debugger better than pycharm's?
Yeah...a license to use multiprocessing. Total BS. Multiprocessing is not hard to add to a code assuming it's a multiprocess-able algorithm.
So Android Studio should be extremely similar to PyCharm I think is what he’s saying. It wouldn’t make sense to think one is clunky and the other isn’t 
Ideavim is terrible. It's easier to turn vim into an ide than turn an ide into vim. 
Welcome to 2011
In other news, fuck the Tea Party!
I don't know what is Anaconda, now I do a research how it works👍🏻
Yeah I understood their implication. To me it seems plausible that two things can be based on the same things, yet end up quite different. A considerable amount of OS X is based on NetBSD, yet I'd say that using one or the other today is a pretty different experience. Now obviously Android Studio and PyCharm aren't *as* different as NetBSD and OS X, but they're still pretty different.
Already installed and loving it!
Why would you use a year old text editor with minimal/no useful features beyond vim plugins. Over vim which certainly has more features in base and plugins not available in Kakoune and will definitely be around next year. 
bUt iTs MiCro$hiT /s nah, I've got a lot of friends who use it. I don't know why it icks me out, but I should probably get over it. 
I would ask over in /r/learnpython 
I don't quite have an answer, but if i understand your question correctly another way might be creating custom __dunder__ functions for a Var class. That way you can control what every operator (like + - * / etc) does. What it looks like printed out (__str__) and many other things (e.g. making your custom literal iterable) 
This will only work for a package without dependencies, which is almost never the case... Python's package managers simply don't have a way to install groups of packages. If you wanted to go down that route, you could use your version of `pypi.org` server, which you'd run locally and configure `pip` to use that server to install packages. But this sounds like a huge overkill in terms of engineering effort.
What is "multiclient" in this context and how it prevents from uploading your virtual environment to it?
It's so basic. Though I never really tried it for a longer time (opened it once, played around a bit and never cared to try it again as VS Code seemed to be worlds ahead)
The three main issues I see are that (a) every process does exactly the same thing, (b) you join each process before starting the next one, so you're never actually running anything in parallel, and (c) your variable names are useless. 
Check out the IdeaVIM plugin!
We could break down and compare each feature and pycharm would just have more features. &amp;#x200B; Take the debugger for instance it's much better in pycharm than in vscode or atom. Remote debugging through docker container, ssh you name it and the experience is easy and simple. Anything vscode or atom do it's at a lesser version than what PyCharm delivers. The only thing you can honestly say is that vscode and atom load slightly faster. They do less so that makes sense. 1. Find feature is much easier and cleaner to use and makes more sense. 2. Git support in pycharm is by far the best way to use git period. 3. Renaming variables is far more supported across way more languages with the line of products IntelliJ provides. 4. Remote debugging as explained above. 5. Amazing direct database integration with anything.
I have also used the xdebug protocol successfully with php, node and python using the [vdebug plugin](https://github.com/vim-vdebug/vdebug) for vim.
Is that the name of an IDE for Python? Never heard of it. :P
Honestly it's not different than how far ahead say something like IDA pro is. When people don't like pycharm they just hate it. VScode and atom are great if you can't use Pycharm. It's really just not fair to compare them.
personally i cant stand vscode / pycharm because its feels like overkill - there are too many visual distractions. i like the somewhat minimal feel of atom/spyder/jupyter
I think a lot of people see pycharm and other IDEs as unnessecary, they've got their workflow figured out through trial and error with vim/emacs/whatever and just don't see the point in making the effort to switch. I tried to stick to a vim only workflow in my new job to fit in with what the seniors we're doing but honestly, I'm much faster and produce better code when I have a wide range of stuff to rely on that you get with pycharm.
It's not a direct answer to your question, but I would definitely look at memoization in this type of problem. &amp;#x200B; Right now you're recomputing the path from i -&gt; 1 countless times as you walk upwards towards 1 million. For example in the toy problem of i=13 the path to 1 is: 13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1. What happens here when i=40? Should we recompute the path to 1 or could we look it up somewhere?
I had tried VS code, it's fucking sucks. It's true that it works good but you can't do anything. I recommend to install Atom because you can install a lot of plugin made by the community.
Don't get confused by VS code with VS studio. Vs code is much much better. Personally I'm never gonna switch them anysoon. It's got every features that I find useful. 
Nice article mate!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Welcome back to the present!
not being a masochist
Also, I need a numeric derivative... not a symbolic. The lmpv scipy function does not support symbolic inputs (tried sympy diff) and I need that as part of my derivative. I did write out the associated legendre originally, but I ran into issues with trying to take the derivate of the summation to infinity portion of it . Tplquad does not support complex numbers so that's not an option for my integration. Also, chose to put this here instead of r/learnpython because the scope of my question is not really about learning, but rather optimizing I suppose. 
Well for starters, you can get rid of all of this... n = 1 m = 1 l = 2 val = (2*n+1)/4*pi val2 = fac((n-m)) val3 = fac(n+1) val4 = val2/val3 val5 = sqrt(val*val4) i = complex((1j)**0.5) Simplify your code first. You don't need to compute a factorial that is a constant. Also, there's this: `i = (1 + 1j) / sqrt(2)` Next, what is the slow part? Did you profile it? Next, is you should be posting in /r/learnpython
Everyone, Give this man an Award, he is a genius. That solved my entire problem actually. Thanks man, No GPU is required when we got brains.
HILLDAWG 2016!!! Oh wait..no. The future fucking sucks. At least we've still got PyCharm.
For me other than what you said pycharm and intellij in general have the best refactoring I've seen. Plus for django they have so many extras like orm support, template support etc.
Try out spacemacs in evil mode, if you already have some familiarity with vim.
That looks promising. Thanks.
Because it’s a superior editor and some people con do wonders with it after years of using it? (Myself close to 15y)
Can you elaborate on what it does better? 
It’s universally present. It’s well understood. With a couple of commands (or mappings) can replace/insert/delete and it has an awesome plugin system for almost anything you can think of (from file exploring to linting, from auto completion to git integration) And it uses almost no memory (especially neovim with all the old code removed). Trust me, a decent vim user it’s a lot more productive then you think ;) 
Here I wrote one in python deployed as a micro service with chalice and did a simple front end in react https://dj7w8gg0u0e4d.cloudfront.net
It is especially enjoyable once you provide type information.
This is a more reasonable example.
Yes yes yes. Flake8 linting on VSCode has formed most of my good habits in Python. Might have to try Black and auto-formatting, but I feel I spamsave too often. :p
The original android studio was eclipse. Eclipse is a lot of things and clunky is definitely one of them.
It's useful to have the interactive interpreter. I've not used idle for more than five minutes or so but isn't it a mix of editor and prompt? I use ptpython a lot when trying stuff out. It has multiline input with either vim or emacs editing. 
If you switch from VIM to something else you are not using it properly.
Yeah the popup message even asks if you want to disable linting. The only reason to continually get the popup is if you don't do anything about it.
I hate to be the buzzkill, but stop relying on your IDEs. The edge master can kick your ass no matter what weapon he uses. Why? Because the weapon at hand is merely an expression of his martial prowess instead of the other way around. So too must the wizard be the master of this language no matter the medium of programming.
The 79 char line length is the one part of PEP8 I refuse to follow. I set it to 120. It's not the 80s anymore and unnecessary wrapping hurts readability. 
Vim modes are never good. I tried using the one in Atom, and it was missing crucial features like `q` and `:g`. Also, it mixed the default clipboard with `+` so pasting code from another window while managing your code was unnesesairly hard. Those modes only have 90% of Vim's features, and once you have muscle memory for those commands using them is like riding a bicycle that can't be steered to turn. 
I guess GM API offers to filter the businesses ...
I don't see the reason for Atom's existence anymore. I uninstalled it after seeing how much better VS Code was. And they both use Electron!
&gt; Why would you use a year old text editor with minimal/no useful features beyond vim plugins. Good question that is (at least partially) answered on the [official website](http://kakoune.org/why-kakoune/why-kakoune.html). &gt; Over vim which certainly has more features in base and plugins not available in Kakoune I'm a bit allergic to plugins to be honest. You start adding some, then some more, then you have no idea what's going on and it becomes very hard to maintain. &gt; and will definitely be around next year. So will Kakoune: it's the beauty of libre softwares :)
I think there is a misunderstanding in your discussion with /u/Michaelmrose. He was talking about why using Kakoune when you have Vim :)
True! I hadn’t had my morning coffee yet :( 
I don't think vim and IDLE constitutes over reliance on IDEs, haha
What constitutes properly in your mind? Your comment reads like the first half of a No True Scotsman fallacy.
Why not? 
Dunno... I still with Emacs
You can't turn vim into an IDE. People has been trying to do that for a long and so far everyone failed.
pdb. can you be more specific?
I'm in! ;)
I use all those things, I just use the tool directly instead of having it integrated with an editor. Knowing what each and every tool does is important to me. And being able to swap, for example, a testing framework or networking framework for another one without waiting for the IDE support or someone developing a plugin is an example of a practical upside to my preferred method of working. Another argument is that in my work I do not solely write python code, and the setup I use is flexible enough to develop in a variety of languages without major changes. It's essentially your whole operating system working together to form your development environment. 
VS Code is transitioning from good to bad. It as a good text editor with interesting capabilities and now it's (still) a good text editor bloated with extras I don't care and need. Plus, it's getting slower by the month. 
Not sure if these are available in vim, but visualization is a big one- drilling down many layers of json in a second and viewing all your variables and their contents at once, automatic error and syntax checking, finding usages/finding source. Having all this and everything you mentioned makes it hard to just use a text editor. Productivity is way higher, gives you less busy work if anything
I have been using the IDLE, tried the Wing IDE but some of the keys didn't preform the same function (eg TAB which did nothing). Ever since that expirence I've been using the IDLE, if Pycharm is as good as you say, then I would happily switch over.
Vim is more than just a text editor though, it's a framework around a text editor. Plugins can turn it into pretty much anything. [Vim python-mode](https://github.com/python-mode/python-mode) turns it into a full IDE. You have linting, refactoring tools, code completion, go-to-definition functionality. Personally I use vim to develop and pudb for my debugger, cprofiler and line_profiler for profiling. Add common terminal programs like grep, sed, awk and find and add extra tools like ag/silversearcher and you've that's more than enough to center your workflow around it. I've been doing python development for about 8 years professionally and it's been vim the whole time. It's been great. I've tried using IDEs with vi modes and honestly it just doesn't make me feel comfortable and I always find features they're missing, like maybe macros or yanking to "&lt;character&gt; or something. I've never done better outside of vim. Doesn't matter if you use notepad in the end if you're most comfortable writing code there, and have some other debugger, profiler and linting you can use. For beginners I always suggest something like pycharm, but for those that seem interested in vim I point to vim python-mode while mentioning it's going to mean learning something else on top of python. But really I would never feel comfortable with anything else now.
vim + python-mode and just use pdb or pudb for debugging and you're good.
Where my sublime people at
That is very far from an IDE.
&gt; I love Vim, but as stated by others, unless you add a ton of Vim plugins to try to mimic the behaviour of an IDE, I feel it's too hard to use when you work on big projects. [It's already all packaged together actually](https://github.com/python-mode/python-mode) It's pretty damn easy to use Vim as a python IDE these days. No more scrounging for random plugins.
If you don't have administrator rights, it means there is a sysadmin at your work place. It's their job to make your essential tools work. Instead of posting to Reddit, you should send an email to a unit responsible for system administration and anti-virus software configuration. If unsure, ask your direct supervisor.
When exploring jsons I use a seperate tool: jq. When finding, for example, a function declaration i grep recursively. It's essentially your whole operating system working together to form your development environment.
I've worked with Qt for years (on the C++ side, haven't touched PyQt yet). Basically the .ui files are just xml files that describe your layout. You can create .ui files using QtDesigner and then import them into your code. In my opinion if you're doing any heavy GUI work with Qt you should be using Qt Designer (and the .ui files). Creating Qt layouts and widgets programmatically/manually is not fun. It's much easier to create your GUIs in QtDesigner and then import them into your code with a loadUi() or setupUi() statement. From the [PyQt5 Designer docs](http://pyqt.sourceforge.net/Docs/PyQt5/designer.html): &gt; Qt Designer uses XML .ui files to store designs and does not generate any code itself. Qt includes the uic utility that generates the C++ code that creates the user interface. Qt also includes the QUiLoader class that allows an application to load a .ui file and to create the corresponding user interface dynamically. &gt; PyQt5 does not wrap the QUiLoader class but instead includes the uic Python module. Like QUiLoader this module can load .ui files to create a user interface dynamically. Like the uic utility it can also generate the Python code that will create the user interface. PyQt5’s pyuic5 utility is a command line interface to the uic module. Both are described in detail in the following sections. https://likegeeks.com/pyqt5-tutorial/ has a better tutorial on how to actually setup and use QtDesigner in your python code.
Some of the reasons to use IDLE- - Beginner - Making tutorials for beginners - Python not a primary language
It comes back with a vengeance if you try to keep editors side-by-side, though. Which, at least for me, is most of the time.
You usually don't debug in Vim. You use tools such as `pdb` or `pudb`. [Unix as IDE](https://sanctum.geek.nz/arabesque/series/unix-as-ide/).
Found this out the hard way when I tried to run an app made by my prof. That was a long 3 hours troubleshooting and trying to install stuff 
You hit upon exactly what I was feeling with Eclipse. Even what you might consider to be a minor update would crash the installation. Sometimes it would break and you wouldn’t know why. All and all it creates this love/hate relationship that is very frustrating. 
Use dataclasses or attrs library: [https://github.com/ericvsmith/dataclasses](https://github.com/ericvsmith/dataclasses) \- PEP-557 or [https://github.com/python-attrs/attrs](https://github.com/python-attrs/attrs)
Yep! This will happen on any platform, Windows, MacOS or Linux. It is kinda sad too because there is a lot about Eclipse too like. I keep installing it but have gone very careful not to break it. Currently running on Linux and trying to leave all changes up to the package manager. That has failed me before but seems to be the most reliable way to run Ecliose. 
Not sure what screen you're using but on my 1080p monitor I can have 2 panels open side by side even with 120 chars. On my 2k monitor I can have 3 panels. I guess it would be more limiting on a laptop though.
While I like pycharm's thoroughness in linting, autocomplete, and test suite integration, I find that their stack trace and breakpoints nearly unusable. Compared to Wing 101, the stack trace makes absolutely no sense. Breakpoints in both are pretty simple, but the usefulness is extremely diminished in pycharm, and I found that my habits were nearly identical to atom+lint and autocomplete plugins+terminal because of this. The hard drive space and resource usage just no longer made sense when I found that out.
I believe this happens because of virtual environments.
I use Notepad++. Mostly for Python, Java, JS, C/C++
Can anyone compare Sublime Text to PyCharm for data science?
1080p, with a file sidebar and minimaps, 80 character gives me just enough of a margin to be comfortable. But yeah, if I had to, I could scrape enough space for 120 character — I'd lowkey hate you for forcing me to do that, though. On a laptop — which sometimes happens — it would be absolutely terrible. 
It is true, this is why dependency managers were created. The risk is mitigated with Anaconda because the base installation already install a lot of packages out of the box.
*raises hand
VS Code is also open sourced so not traditionally a Microsoft product. And it’s free. Give it a shot, I loved it far more than pycharm 
I'm not sure I fully understand the technical aspects, but I get the overall idea. Python is so broadly used that it's only natural people with different requirements will prioritize different things. I'm clearly the target audience of conda. You've given me quite a bit of material to google. Thanks a lot for taking the time! 
This is a problem which is a lot more suitable for the [Pool](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.pool) multiprocessing class. What you seem to be doing is just creating 500 instances of the same calculation (main), where each process does the full task. With the pool class you can pass in an iterable, in this case range(1000000), and also a function which each worker in the pool will perform. I suggest you try it out yourself, but if you get stuck I did implement a quick solution for you [here](https://hastebin.com/arehoqiyab.py). Good luck!
And it works very well... I use it from day one.
&gt; I think that if you don't think vim is fundamentally a superior way to write code (leaving aside debugging I guess) then you don't really know vim. vim purists make me bananas. It's a text editor. You aren't taking dictation. The hard part of coding is thinking, not typing. Using vim to write code and wearing that as a badge of honor makes you sound like you belong to a cult. 
[Skulpt](http://www.skulpt.org/) is pretty cool too. If only there was an official wasm port of Python...
Interesting. I know `_` was a way to mentioned something is 'private', but I didn't know about `__`. Cheers!
Programming is art confirmed.
On my specific case - I had a method that took JSON string as argument.. So the parameter name was `json`. However, some people proffered working on `dict`. So I could either create a new method that accept `dict`, telling them - "Hi, it's your problem, please `load` the dict into JSON when calling my method - or change my inner code to also be able to handle `dict`. I choose the 3rd options for user experience. As argument name 'json' didn't make sense anymore, I had to change it. So, what can you do with changes like so?
So you say I shouldn't be changing variables names? Consider this example: I had a method that took JSON string as argument.. So the parameter name was json. However, some people proffered working on dict. So I could either create a new method that accept dict, telling them - "Hi, it's your problem, please load the dict into JSON when calling my method - or change my inner code to also be able to handle dict. I choose the 3rd options for user experience. As argument name 'json' didn't make sense anymore, I had to change it.
PyCharm is the best IDE out there by far. Here are some of my favourite features: * Cmd+w will highlight whatever is in context and if you keep pressing it will keep going to parents until the whole thing is highlighted, be it Python, CSS, HTML or JS. For example, if your cursor is on the word inside HTML code, the first press will highlight the word, the second will highlight everything between opening and closing tags and then it'll highlight everything between parent tags and so on. It's just awesome. * To follow the code with Cmd+b is insanely good. It's an awesome way to look into internals of pip installed packages. * It know what you have in your env and it'll warn you if a package isn't there. * Option+Enter for imports is a feature worth the licence. * It knows Django template syntax and it can auto complete tags. I think Jinja and other frameworks are supported. * Jump To feature is great * Multiple cursors Sublime styles come in handy. I think it's Cmd+click * It can use a remote interpreter. Handy when you're running Vagrant in a VM etc. * Best formatting there is with Cmd+L. Formats anything. * You can run as many terminals as you want in it, one for shell, another for git etc. * The VCS tools are great. The merge tool especially. Fuck vmdiff! Those are some of my favourite features and I only scratched the surface. But yeah, I doubt you'll ever go back. P.S. Almost forgot double Shift. It'll change your life. &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
Yep, exactly. Plus I don't need anything more than syntax highlighting, sometimes I'll go "ugh I wish vim had refactoring tools like PyCharm" and open PyCharm, but I get tired of not knowing all the shortcuts after a while and switch back again.
If you programming in more languages than python you should try new version of Visual Code, it has changed a little bit. It handle many languages, fully customised, I’m using it for python, .net core, js.
Why not just use Jupyter Lab?
Is it bad I do this for all my python programming? 
Seems a lot of things are not `pipenv` issues but very specific edge cases. I'm working with pipenv without any hassle.
/r/algotrading /r/Pyfinance /r/algotradingcrypto 
4... years.... What took you so long?
He meant that vscode is one step above sublime in IDE like features (it supports debugging), but that the IDE features are not as good as in pycharm. So it's halfway between sublime and pycharm.
Hi all, Recently I've been trying to classify certain sounds, but it's been difficult for me as I have no experience working with audio analysis algorithms and most of the existing libraries are quite complex in that regard. My main aim with this library is to provide a simple alternative to allow people to dive in quickly. That said, this is my first python library, and I'm not even really sure what the demand is, so I'm looking for any feedback. You can find the library on github [here](https://github.com/98mprice/pyAudioClassification). It's still very much a work in progress though. Thanks guys
IDLE you are fu... kidding me 
Thanks but I'm sticking with Vscode
I would check out GitHub for some examples or even just adapt some existing code. If you already have most of the maths skills then yeh jump straight in head first with NumPy, pandas, scikits, etc ... but my guess is that will be a tad overwhelming if you don't really know much about ML or any of the maths.. esp. *on top of* learning a whole new language from coming from only knowing JS. There's also a few existing JS crypto trading platforms out there. They are obv. going to be limited by the JS eco-system itself lacking serious math and ML libraries, but there's plenty for you to learn about the basics of implementing a trading algorithm ... and some of them have done a pretty good job of creating a useable framework with plugins and the whole bit. https://github.com/askmike/gekko That ones node.js ... there's a pretty big eco-system built around it with lots of users. There's even a few simple implementations of ML and exciting stuff like that floating around GitHub as plugins for you to tinker with (though honestly most of them are ~~kind of~~ a complete mess). If you are trying to build a bot to implement some trading strategy that you've already figured out though, that's the route I would take first. Maybe down the road you learn python ... then learn how to use Numpy ... and then add in some ML libraries. Though the quickest route to implementing that crack strategy you've figured out is going to be implementing it through Gekko or a what-ever. If you really want to jump in head first with python I would do the same thing. Find an existing trading platform and start there ... you'll save time ... and it'll be a whole lot easier to pick up all of the concepts with working examples.
You almost made me spit out my coffee. haha :D
Ah. Thanks for mentioning `better_exceptions`. I'll check it out. Unfortunately only having one logger is pretty much a no-go for me. But for small projects this might be fine.
Because while I am at work or out and about, I have a single VM I can RDP into. Also, all of my files are in one place I can access with that Windows install. Why not? 
That's true, I hadn't gotten into Android dev back then so I forgot about that.
Well i don't have too many options. I have tried it as a docker as well, but it's essentially the same thing.
Usually, make a new method and mark the old one as deprecated. I don't know exactly your workplace works but in most places if you break people's code without a really good reason, you get fired. 
i still don't understand the need for a virtual machine. why not just install it natively on the machine you connect remotely to?
Lol 
Thanks for the reply. I'm already doing this, allowing me to add 9x^2 and 3x into an expression. It was just if I was able to stop having to put Var("3x") for every new variable and could instead put $3x 
Definitely no dirty ways of doing it to work with all interpreters?
I started from pycharm and moved to VIM XD
but VScode is a code editor, not really an IDE, you will need to install all the extensions alone. Instead on a IDE you already have all the extensions (even if you don't need them), and because of that is faster and more bloated than a code editor.
I don't understand why write this when you have good sources about versioning and manage git repositories. One example: [https://nvie.com/posts/a-successful-git-branching-model/](https://nvie.com/posts/a-successful-git-branching-model/)
&gt; It's useful to have the interactive interpreter. So have it in another terminal emulator tab.
I prefer to do it manually, but this is a good work. There are many people not aware of this!
And VIM mode in PyCharm is actually fairly tolerable, I can even map my custom &lt;esc&gt; sequence.
PyCharm really is the only good JetBrains IDE. IntelliJ is fine, not as great as it's hyped. When they make something better than Visual Studio, that's when I'll notice their other IDEs. Honestly my only reason for liking PyCharm mainly is the way it just works, and helps me through PEP8 rules.
It’s basically just a text editor (like notepad++) but u can download and install packages for it that can do almost anything. It has native github support, works for pretty much any language, and if there’s something u don’t like u can change it, and if there’s something u want u can add it.
The machine I connect remotely to is a Windows VM. I don't have windows on bare metal at my house aside from a laptop. 
Evil mode?
Yep, this was going to be my reply as well. I don't think any Euler problems require parallelization. They are all about using a little thinking to turn a giant problem into a merely large one.
I went back ... one of my major little niggles was with vim mode in pycharm ( or any of the jetbrains suite ) pressing Y during visual mode doesn’t copy to the system clipboard, so you have to remember to press command-c instead . The static analysis in pycharm esp. with type hints is nice tho ...
Good article. Many of us must work with MS tech like Active Directory, MS SQL Server, Server O/S and I'm glad to see MS getting on board and giving us some hope for a better future. I wish projects like IronPython--and the DLR--received more support.
That's something I really like about VScode compared to something like PyCharm, since I'm not always writing Python code. Sometimes I have to switch between Python, HTML, JS, CSS, JSON, a Powershell script, a Markdown document, and so on.
Linting is good tho ...
When you are doing your kron products, why not just raise each element of pairN to its power first? Instead of five calls new=np.kron(old, pair5), make a single call with pair=[x**5 for x in pair5]. Also, you might benefit from caching results in your helper functions, or equivalently, replacing them by lookup tables. See decorators as caches on Google. This problem would also benefit from a keen look at sensitivity: do you need the fidelity that you are computing here? Does the accuracy of your result suffer if you reduce the granularity of your time series?
God, I need to do this, but I'm just so lazy, so I just keep typing it out everytime.
I like a lot of features in pycharm but I can never get past how slow it is.
Well yeah. So install pylint or flake or one of the other linters!
r/learnpython r/datascience
Learning python: I read a bit for half a year, then spent pretty much all my summer holiday (6weeks) programming and reading daily. I'd say if you have no experience in programming you can get fairly proficcient in a year. As for data science: You'll want to learn Pandas and numpy/the scipy stack - never worked with pandas so no idea how long it'll take
I would rather implement a new object by inheriting from keras.layers.Sequential and making new methods for your file-based preprocessing, training and prediction.
Pretty much
I think r/learnpython is better for this
Nice thank you, I didn’t know that
You don't need `echo ""`, `echo` is enough.
If you are working in some STEM field but have no programming experience, it'll probably take you a couple months to feel comfortable in Python. If you are working in some STEM field but do have programming experience, change that to a couple days.
Why would you want that?
You don't have to get over anything, keep using what you like. Haters gonna hate.
Yes, you're right. That's a better approach, thank you.
They also give out free licenses for Open Source projects and students.
Ah, I was confused about what you were referring to initially. I think I just copied that script from the plugin site for that terminal plugin, but you're right though.
Been off work sick yesterday and today. But when im back tomorrow, ill be continuing with a project our team is doing to create a portal and app for purchasing telecommunication related products and services. Sounds like ill be busy on the API side.
So true. I don't get how ipython isn't the default repl.
The machine I connect to is a hypervisor, I don't know how much better I can explain this man haha. 
That's how it works in pycharm 
Visual studio ftw.
Does Windows actually not work with 8 gb or something? I have more than 8 in my machine but i know developers in tech with 8 gig macbooks and they run intellij just fine.
I came in from web development so it was pretty easy to pick up from my perspective. I'd say it took me about 7 months to feel confident. Now I love this language and always find new/old things to do with it. Throwaway scripts mainly but some stick around as good tools. https://learnxinyminutes.com/docs/python3/ is really good.
the ui is quite subjective. feature-wise, komodo has less features and isnt as well supported
It really isn't, unless you're talking about Visual Studio for Mac. Visual Studio, the original for Windows, is still the absolute best IDE out there and have been for years. VS Code looks very nice and when people demo it I am VERY impressed, but I can't figure out how to use it. It's very confusing to me every time I attempt to use it myself. 
what benefit do you get from using a virtual machine?
It depends on your work environment. if you're not a professional software engineer and you're writing code to support mathematicians or something, you can get away with idle. but if you went into a software developers environment, they would be like "it doesnt have this feature/it's slow/your productivity is too low" and you'd get converted into more industry standard tools.
My concern with PyCharm has always been getting myself too reliant on a mostly Python focused IDE. Although im primarily a Python dev at work, I still need to do a bit of Javascript, Vue, React, Go etc from time to time. I find that using something that is inherently meant to be more cross language is a safer bet. It's easy to get up and running with a new language when you're using a an editor (not an IDE) where you can simply add a couple plugins and you're good to go with any language. I speak under correction, but that's my reason for not using PyCharm even though the majority of what I do at work is Python focused.
&gt; I guess I'm a little confused about your advice. This script doesn't have unit tests. It's just a build script ... it's not a integration system, or something like that. &gt; Then developers _are_ end users in this case. They are not developers. Developers are people who develop on whatever entity you are shipping. End users are whoever uses the final product. We are confusing role vs employment. I am talking about roles, you are talking about employment. &gt; On the other hand, setting up a build machine shouldn't involve installing python It definitely does, _if_ it's a build machine _and_ your software is python based. but not for this utility. To your specific circumstance, pyinstaller is ok. But again, as I said, pyinstaller is not always the solution. 
And in Pycharm Professional you have [all of that](https://www.jetbrains.com/pycharm/whatsnew/#v2018-3-web) in only one program, but I think is the same in VScode using extensions, you are not going to change between programs.
What am I looking at here.
Watch the DDG logo in the upper left corner. Also, not sure if it will work on mobile, I am on a desktop. 
I see it.
I actually am using QtDesigner. I'm using this script to shorten the amount of time it takes me use the pyuic utility is all. So I'm assuming that if I import the UI files then it does the same thing except I won't see all of the actual backend code that is used to generate the ui in my script? If so then I kind if prefer to use the pyuic utility so I can scroll around to reference the Python code that was used to generate the ui. I'm still fairly new to Qt so this helps. Maybe after I'm done with the program i can move all my event handling code into it's own script and just import the ui file then?
I'm just noticing that I might have found it more amusing than the entire rest of the world
Then use pycharm; either you instruct vscode to recognize the return statement and go to parent indent level or remove the autoindent feature and struggle every time you have to indent manually
Like [these](http://endless.horse) moments?
Me being lazy is the whole reason I thought to make this script! Haha
Well I have two Dell Poweredge servers and a smaller NUC that comprise my home network. Aside from that, I have a laptop and my trading computer which runs Linux. It is just so much easier to have a Windows VM to RDP into from anywhere, allow access to only certain files for security issues, and have only one random port forwarded to that VM. When I am on my home network, PyCharm runs beautifully on the VM, depending on where I am, such as work, the connection quality is proportional to the quality of the user experience. I should note that I have PyCharm on my laptop and as a docker container, but the Windows VM is the easiest to access securely while on the road or at work (I am an engineer, not IT, so I can't exactly load up a VPN client without drawing the ire of management).
I like that. I need to revise my script to where it looks for everything in my working directory with a .ui extension and then uses this algorithm to convert them. That way I can just run it once inside my working directory and it'll go through and convert all of them at once instead if me doing it one at a time. I can be even lazier now!
Scrolling on IDLE doesn't even work on Mac, plus the tab formatting is really inconvenient.
how do I actually parallelize then?
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I typewrite my code, fax the sheets over to Staples, and scan them on to a cd for me. Used to use floppy disks instead of cds, but they were inefficient. 
You can pip install from files/git repos as well! 
God damn it, I was probably scrolling for 20 seconds before I noticed!
I thought about trying pycharm but eww, that's disgusting
It would be something like this processes = [multiprocessing.Process(...) for ... in ...] for p in processes: p.fork() for p in processes: p.join() However, you should not be doing this, really. I'm just pointing it out for completeness. You should check out the answers of /u/Ventez or /u/fiLLL.
Nice find
This is rad man, best of luck with the library. What's the range of sounds it can classify?
Why would anyone run a cross-platform IDE in a browser?
How did you get that apple
It's like the MS Office Assistant all over. "It looks like you're trying to write Python code. Do you want to see linter warning all over the place?"
Thanks man, I appreciate it. I've tested it with animal/object sound clips, human speech clips and music genres so far, but theoretically it should be able to classify whatever sounds you feed it
Thanks, it was totally out of the blue and it felt nice cause I never find stuff like this. 
ahh ok just checking. The site seemed very serious, so i had to ask.
It's from a cool plugin called [neofetch](https://github.com/dylanaraps/neofetch)
Now install ideavim, you get vim control freedom and all the goodies of the IDE, it's magic
Why is ideavim terrible? Vim + python mode + pdb is not an IDE. The Pycharm debugger is far more extensive, and Pycharm has more tools than just a debugger. It has built in test coverage tools, documentation lookup and building, deployment chains and more.
Keyword here is plugins. I can shove plugins into anything and make it do anything. There is value in things already being there. Also Python mode is not a full IDE. There's more to an IDE then language scoped niceties. I don't know what you're referring to in terms of macros, but you can always solve those issues in my experience. But also in my experience the majority of people are turned off by vim due to "strange" behavior in comparison to other text editors.
Crashes on OS X lol
How can I instruct vscode to do that? 
Wait until you find Jupyter. 
Plus one for Jupyter. Zeppelin is also nice. Sublime is a great text editor, but for DS you typically want to be able to iterate more quickly, which Jupyter would allow you to do with ease. 
&gt; Visual Studio ... is still the absolute best IDE out there and have been for years. There's a lot of people who would argue that point. I only fire it up when I absolutely have to, I prefer JetBrains' IDEs by far when they're an option.
_Checks calendar...yup, fall semester is about to wrap up..._
https://kivy.org/#home I started from here.
Learn the keyboard shortcuts for Jupyter and you can probably stem that problem. Pycharm is a full IDE and vim is a text editor, so neither have cells in the way Jupyter does. 
Here are my little contributions to your code! (You should definitely open a GitHub/Gitlab account, it's easier for people to review your code and for you to get more feedback!) I will remove your comments and put mine! `from urllib.request import urlopen` `import datetime` `import time` `def now():` `return datetime.datetime.now(); # You don't need \`;\` here` `def scrape():` `int_flag = ''` `AQI = ''` `AQI_loc = site_string.find('Air Quality Index (AQI)&lt;br&gt;')` `AQI_loc += site_string[AQI_loc:].find('height=')` `AQI_loc += site_string[AQI_loc:].find('&gt;')` `while type(int_flag) is not int:` `try:` `int_flag = int(site_string[AQI_loc])` `except: # You should define a better exception to catch here and do something with it` `AQI_loc += 1` `while type(int_flag) is int:` `try:` `int_flag = int(site_string[AQI_loc])` `AQI += site_string[AQI_loc]` `AQI_loc += 1` `except: # You should define a better exception to catch here and do something with it` `break` `print(now())` `print("The AQI is " + AQI + '.')` `""" You should use Context Manager as my correction bellow` `record_AQI = open('scraped_AQIs.csv', 'a')` `record_AQI.write(str(now()) + ',' + AQI + '\n')` `record_AQI.close()` `"""` `with open('scraped_AQIs.csv', 'a') as record_AQI:` `record_AQI.write(str(now()) + ',' + AQI + '\n')` `""" This isn't needed, that's the default behavior of python's function, an empty return at the end` `return;` `"""` `# You should run this as a CRON instead of checking the time inside an infinite loop` `while True:` `AQI_url = "https://www.airnow.gov/index.cfm?action=airnow.local_city&amp;cityid=18"` `site = urlopen(AQI_url)` `site_string = str(site.read())` `if site_string.find('Air Quality Index (AQI)&lt;br&gt;') != -1:` `scrape()` `else:` `print(str(now()))` `print("Data Not Available: No data written to file.")` `while True:` `if now().minute == 50:` `time.sleep(60)` `break` `else:` `time.sleep(58)` &amp;#x200B;
Saw it in Firefox, but not in Chrome.
&gt;I've tried using IDEs with vi modes and honestly it just doesn't make me feel comfortable and I always find features they're missing, like maybe macros or yanking to "&lt;character&gt; or something. The VI modes in IntelliJ Idea, Visual Studio Code, and Visual Studio all support these things. Hell, even the VI mode for the overleaf online LaTeX editor supports these things. 
I would seriously consider that if I didn't have to pay for it, unfortunately. 
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
&gt; VS code It also supports [vim emulation](https://marketplace.visualstudio.com/items?itemName=vscodevim.vim) if you still miss using a modal interface. That said, their implementation still has a couple rough edges that need polishing.
I used to consult at a place where the sys admins where mildly tyrannical and all the testing and production machines ran Solaris (almost nothing works well on Solaris. We couldn't even install basic javascript tooling). However, there was one type of "server" that the sys admins had no control over: the Mac Mini's connected to each teams' dashboard TV's. The result was that essentially every team started running all kinds of servers and databases on their dashboards and used them to get work done faster. Good times.
The problem with this discussion is that very few people know both sides of it. People working professionally with Visual Studio or IntelliJ Idea or PyCharm know the fine points of the IDE and can't imagine how one would do those things with VIM extensions. Other people spent hundreds of hours tweaking their VIM workflow and can't imagine a single application being able to replicate what they can do easily. I have done both, and believe that for some languages, you can get a pretty decent environment in VIM. But for something like Java or C#, where dedicated IDEs exist that are used by millions of professional developers, you don't really stand a chance. Which is evidenced by the fact that no-one in Java or C# shops uses VIM. Of course, if you are programming in Go or Rust or Scheme or something, then go nuts, your modified VIM will be just as good as some adapted mode in Eclipse or whatever. Regarding Python, I'm pretty sure both ways work fine. I think, however, that discoverability counts, and it's much easier clicking around an IDE and finding a feature than having to look for some obscure VIM plugin. So for beginners to intermediates at the very least, IDEs win.
What's the problem with IDLE? I tend to keep IDLE and Vim up, testing stuff in IDLE as needed. The only problems I've come across are some things with subprocess, but it's rare enough that I just write it into an actual file and execute it when I need to use subprocess and run into problems with IDLE.
I do need to compute that! The final product is original function\*operator\*original function/original function\*original function. So I could get rid of a constant if I was JUST taking a derivative, but I am not. &amp;#x200B; Also, I commented on why I did not post this in r/learnpython. This is a general issue with triple integrals on almost every library package. I was hoping that someone had a solution or it would be seen by someone on here who could find one. 
&gt; You can't compare a text editor to a fully featured environment with all the tools a few clicks or keyboard shortcuts away from the fingertips. May I introduce you to my good friend Emacs ...
&gt; Behind a firewall with a proxy (already had to sidestep this on pip due to SSL issues) You should be able to grab the root certificate that your company's firewall is using and add it to your OS's certificate store. Or you can set the `REQUESTS_CA_BUNDLE` environment variable to point to a certificate bundle that includes that certificate. Or you can use the [pip configuration file](https://pip.pypa.io/en/stable/user_guide/#config-file) and set `trusted-host` to the relevant hosts. e.g. mine used to have this before I set up the certificates: trusted-host = pypi.org pypi.python.org files.pythonhosted.org
works on mobile!
maybe it's because you didn't explain what exactly the video is showing, I have a few questions: - is it predicting the right labels? - why did you showed a video in which there is a stack trace? - What kind of features do you extract? - Did you build the model yourself or just used Keras on top of it? - How many training patterns are you using? how many for testing? 
worked in duckduckgo app on mobile, nice find
Continuing to learn python! I only started a month ago and it's the furthest I've got with any coding language. Just begun learning about classes and signed up to an edx course. Also doing bits on edabit. Maybe learning some tkinter if I have time too. 
I've done both for a very long time and I think the problem is mostly the the "vim can be best for everything" crowd. Here someone seriously claims that vim can be turned into an IDE, which if you've used a proper IDE just sounds silly. The only time vim can compare with an IDE is when the IDE is very basic. But then it's not so much turning vim into an IDE rather than the IDE you compare to is lacking.
That’s hilarious
A simple way can be to consider options as if they're strings of 19 characters and then use levenshtein distance to group them. Otherwise you can use a number of clustering or classifying algorithms in scikit-learn. 
Apply is an absolutely atrocious method to use and should be avoided at all costs. You can simply your expression to \`s = ReverseLabels\['InputLabel'\]; s.str\[1\] + s.str\[0\]\` &amp;#x200B; You are getting the warning likely because the ReverseLabels dataframe was formed from some subset selection of another dataframe. It was not an
Oh interesting. Well, I'm on firefox so there you go. 
Thank you! I never find stuff like this, so it feels good.
Ah cool! Good to hear it!
How does making libraries work and at what point can we use it
I’m taking a predictive analytics examination for the Society of Actuaries. The material is intended for R but I am learning the corresponding Python machine learning packages as well. Gradient Boosting Machines, Random Forests, SVMs are just a few of the topics. Applicable to insurance as well as handicapping sports. 
Eh, I can do side-by-side just fine in ouch arm and VSCode... AFAICR you can split windows. 
Google it 
Been working on my toy language project, Akilang, using Python and LLVM: [https://github.com/syegulalp/Akilang](https://github.com/syegulalp/Akilang) The whole thing's basically an experiment to see how much of a language, and to what degree of success, I can implement by way of those tools. Python gets big props for being easy to develop in, if not with the fastest runtime. But most of the real heavy lifting is done in LLVM anyway, so the real roadblock right now is my understanding (or lack thereof) of language implementation. Progress on tangible things has been slow the last couple of months, as I've been rethinking and refactoring a bunch of internals to the compiler. Most recently I expanded the test suite to ensure the examples bundled with the compiler also compile without issues. If you're on Windows, you can pull and try out Akilang right now, with some demos (e.g., Conway's Game Of Life). I also have a "Robots"/"Chase" game demo, now playable. (Plans are on the table for supporting Linux; I'm just trying to focus on one problem at a time right now.) There's also a short demo movie (slightly dated now): [https://www.youtube.com/watch?v=9vZ4oFCFOl8](https://www.youtube.com/watch?v=9vZ4oFCFOl8)
Well, the "vim can be best of everything, but I've never used an IDE seriously so I have no comparison" crowd, yeah.
One of the best things about pycharm / intellij is how easy it is to customize the settings. The autocomplete is easily customized or turned off.
Thanks for advice. Not sure if gekko is that great. Feedback is not great but I am going to check that, definitely.
You use break points set at whatever line of code you want to test and the debugger will run the script and stop at each of the break points. From there, you can view the state of all variables/objects in your code to see exactly what's what. Similarly, in the console window, there's a button on the right side (I believe an image of glasses) that lists the values of your variables, their types, descendants, etc. If they're function types, it will have a drop down of all of the commands that can be called on the function and what their values would be. I didn't explain this very well, but make sure to study what the debugger can do. It will save you hours of time rather than just manually printing out the types/values/states of objects manually in your script. 
With binary data, you can create a co-occurence matrix by multiplying your current matrix by the transpose of itself. You can do this in pandas with \`df @ df.T\`. From here you can use the \`stack\` method to put all the counts in a single column. This will contain duplicate counts for all combinations (widget 15, 10 will appear as widget 10,15). Remove these duplicates. You can now find the widgets that have that have a configuration that meet your criterion.
Ah, thank you for the kind words. Hope the cow sound didn't scare you :) For the rest of the questions: - why did you showed a video in which there is a stack trace? My bad, I forgot to put a '/' in the path and it showed an error. I was too lazy to redo it though, since the feature extraction &amp; training process took quite a while (they're sped up in the video) - What kind of features do you extract? Spectrograms, specifically 1D MFCC vectors - Did you build the model yourself or just used Keras on top of it? Forgive me if I misunderstood the question, but I used Keras to build the model structure. I'm not sure what using Keras on top of it means.. - How many training patterns are you using? how many for testing? I'm not sure what this is referring to. Sorry! The training and testing data depends on the input
Well you can use it now just by installing it via pypi As for making a library, I suggest [this](https://packaging.python.org/) really good guide :)
Yeah, IDLE is good for quick scripts you want to write that aren't too complex, but necessary for some reason (I use it for code drills). IDLE is very light-weight compared to Pycharm, which is quite memory intensive, which makes sense given the breadth of features available. But for projects with mutiple files/inheritances, an IDE like PyCharm is a godsend 
Keyoard shortcut: Shift+tab.
Oh I have absolutely no clue, probably open a PR or issue to the repo hosting the python plugin that should take care of it. But I reckon the best strategy would be to just hit backspace no?
After reading the thread I decided to give it another go for the heck of it, hopefully I can find a way to make :s in vim-mode push to the remote server, because that is much easier than the current Alt+Shift+Q. That and switching between Remote Host and editor window itself are my current goal to make be a bit more fluid.
If there is one thing I know for sure it’s that my personal development environment is vastly superior to everyone else’s. 
I am moving the opposite direction. I do a large portion of my development on Linux where I use a tiling window manager. I have 75% of the screen for vim, with the remaining 25 with 2 or 3 vertically stacked windows (one with python file.py, one with git, and sometimes one with an interactive terminal)
A Database project. I'm about to implement a record company simulation with sqlite3 and python3 for a class project :D
PyCharm has more advanced features, but it's based on java so it's heavy as far as cpu/memory. Vscode is lighter and fills 90% of needs. 
🙌
I don’t see it in Safari
:python_logo:
r/unixporn is leaking
&gt;Safari Well there's your issue. Someone said it didn't work in Chrome for them so it might be a Firefox thing.
trying to figure out the best way to create a web framework around \[Transcrypt\]([http://transcrypt.org](http://transcrypt.org)) and learning CSS and Jquery while I do so.
are you using SQLAlchemy? Orator ORM? (my 2 favorites). Well PyDAL is also very good.
You can start with my FOSS Python bot /r/surgetraderbot
Yes, true. 
 backspace works also 
No, sqlite3. I'm on learning the SQL part yet, in a week I'll be working on implementing the actual data and the next week will be creating a ui. (Maybe a cli, maybe using pySimpleGui)
i don't many more ways i can ask you why it is in a virtual machine, so i give up
Making my way through Automate the Boring Stuff. My programming background is almost entirely in SQL, and this trip into Python has been fun so far, and I found out that VS can do that ALT + SHIFT to select multiple rows, which is honestly just my favorite thing.
Finally got my PIR sensors and esp2866 board in the mail and am gonna be using micropython for the first time! First time venturing into hardware hacking and was so happy to find micropython while reading up on the software side of things. I haven't used C/C++ in any meaningful capacity so being able to bypass that learning curve will make the project so much easier. Huge thanks to the micropython devs!
Sort by...controversy. Just gonna sit back and enjoy watching this happen.
[Code](https://pastebin.com/5m3ev5Z0) for the application.
Not like you showed it, $ isn't even an operator in python. Tell us about your project. Would `3@x` work instead of $3x? You could make an object x and use the matmul operation to make and return a new object. 
Yeah I can see is difficult for you to understand networking and server basics. 
How'd the music genre go? I've been looking for an off the shelf solution to organize my music library. It's about 20k of video game music, which tends to be pretty diverse. I want something that could bin them in a few general categories.
I wanna know too. This is basically my workflow on most days. 
* Since you're changing caller-visible behavior by supporting a wider variety of types, it wouldn't be strictly wrong to change a caller-visible name at the same time. * If you wanted to rename a parameter in a backward-compatible way, it's also reasonable to have parameters that are synonyms. If your old code was def spam(a, b, json): # do stuff your new version might be def spam(a, b, custom=None, *, json=None): if custom is none and json is not None: custom = json # do stuff
Your model is tested (cow sample) on the same data it is trained on. How does it perform on different recording of a cow?
And instead of providing an alternative you just keep asking the same question over and over, which shows you're just trying to be a dick and act like you know something more or a better way to do something but have some type of power complex so please do just give up.
Tried Chrome &amp;#x200B; Tried Firefox &amp;#x200B; OSX Mojave, desktop version of both, does not do anything :(
Thanks, I used a similar method but ran the trusted param reach time with pip using a batch file. Wasn't aware of a pip config though, should look into it.
Oh, really? Which one is it the same as? I found test.wav by searching on google for a cow sound effect, and I just assumed it was different to those in the dataset. Thanks for the heads up
Strange. I'm on Arch (btw) and Firefox, it worked the first time. Others have reported it not working on Chrome and another said it didn't work on Safari.
&gt; Why is ideavim terrible? It's not Vim. It only supports the small cross section of Vim features that the author managed to implement. Modal editing and keybindings isn't the only reason I use Vim.
Too bad for those running NoScript…
[removed]
No you may not. Take your 3lb tub of cheese puffs and get out of here.
Because I need to run underlying code on Linux, but don't want to take a desktop home with me? 
I also hate every time I open it there's an update x_x 
Nope, I saw it in a chromium browser.
This is strange. There are so many people in here saying it didn't work on whatever random browser and they never line up. Maybe it's an OS thing? I'm on Arch and it works for me in both Firefox and Chrome.
&gt; Forgive me if I misunderstood the question, but I used Keras to build the model structure. I'm not sure what using Keras on top of it means.. I meant that you can use Keras to build neural networks or go low level and build different models by using Tensorflow directly (it seems that you used Keras) &gt; How many training patterns are you using? how many for testing? When building machine learning models you train your model with some data, in your case audios that have a label, for example "cow". Then you have your test data, that are unlabeled audios. You have to use your model to predict that label and see if the model is working fine by measuring for example, accuracy. In my question I was asking how many audios are you using to train the model
Which is evidenced by the fact that no-one in Java or C# shops uses VIM. I wouldn't count on nobody being an accurate count. Also would venture to guess that at least part of it is Java being a terrible language used by terrible programmers to write terrible software that good developers get stuck navigating. 
\&gt; VIM is always better. And when it isn't, the language and the software written in it sucks anyways. And anyone who thinks differently is a terrible developer. Good argument, mate!
Trying to implement a choropleth map. Anyone knows a good library where I could just use a dataframe that contains a bunch of longtitude and latitude of each area? 
Classifying music genre is a lot more difficult than sounds, but I think doable. I’m not a music expert but it purely depends on how genres are classified from us humans (beat speed for example and other stuff) 
&gt; Do I get a free Tesla if I learn to code in ed? Learn emacs and grow your beard out, you'll be rollin' in it shortly.
Ah, I see, thank you. But the amount of audio files depends entirely on the input- the training happens as part of the library. It's not just using a pre-trained model.
Yeah, I want something based on function rather than arbitrary labels. Really, I just want my fast paced music separated from my calm gentle music.
what does the @ in 'df @ df.T' mean?
Well, seems you know exactly what you're talking about. Don't know what I'm doing here...
/r/learnpython. Also, look into the `random` module.
How is the performance compared to Tabula? 
This is called Reddit. It is a meme engine. 
If you get stuck in your comfort zone and don't feel you are improving try something different, for example you've been doing web development but you can now try game programming, cryptography, data science or artificial intelligence or whatever you think would be interesting. Grinding is the best and usually only way to reach perfection but it's super boring and if you don't need uber specialization it's much more fun to wander everywhere. TLDR Just do whatever makes you happy and never stop having fun.
Well how you'd probably have to do this is create 2 training sets -- one with fast music and the other with slow music. I'd do at least a thousand examples of each. From there you just train a network to recognize each, then depending on how confident the network is on it's classification of a song it has never seen before (&gt; or &lt; 50%), it could automatically move the music files to a "slow" and "fast" folder.
I have written my implementation of A\* pathfinding algorithm, if anyone wants to play it or look at the code here is a link to my [repository](https://github.com/kubapilch/A-pathfinding). 
&gt; but it seems to focus primarily on dependency management for libraries. I don't know where this got started, but it's just not true. poetry author on Twitter (https://twitter.com/SDisPater/status/1061286058367860738) &gt; Poetry sees them as Python projects, not applications or libraries. If you ultimately need to package your project for distribution it has you covered but this is completely optional. And I have yet to find a workflow supported by pipenv that is not supported by Poetry. And some discussion on the PyPA issue tracker https://github.com/pypa/python-packaging-user-guide/issues/506 --- I have personally really enjoyed using poetry. Being able to create a new project, add dependencies and publish to PyPI with the same tool was really nice. Of course the `poetry.lock` file is automatically generated whenever your dependencies change, so you deploy your application with it too. Using setup.py and twine I had to manually modify files and call esoteric commands (`python setup.py sdist bdist_wheel` or `twine upload`). Using poetry what I wanted to do mapped directly to the tool's API -- `init`, `add`, `publish` -- so I could focus more on programming and less on packaging.
I explicitly did not say that. Try again. 
You are teaching a university class and want to use something that you know every python installation would have regardless of OS. &amp;#x200B;
For college students, I prefer the simplicity of IDLE for intro CS students. If you show them something complicated with a billion buttons and tabs on the GUI, half the students will shit their pants and run out of the classroom. &amp;#x200B; &amp;#x200B;
It's not windows.
Works on Firefox for iOS. 
Look great my question vis how did u make the .exe?
Read the data file in. Create a list from it. Use `random.sample(list, number)` to select the number of entries from the list. Sample will return a list that has no repeats.
Check this repo: https://github.com/faif/python-patterns
[Programming for Computations](https://hplgit.github.io/prog4comp/index.html) may be of some help. It is written in Python 2.7. However, it really goes through the logic of creating reproducible numerical routines, so you should be able to translate the ideas to 3.6/7 with little trouble. 
Whoa, looks cool! Hope I can try it soon on my vacations! 
You shouldn't be storing plain text passwords in the database. If you remake this in Django, as you said your next step would be, this comes for free (if you use django's User model). However if you don't, you should use some key derivation function to store your password, like [this one](https://passlib.readthedocs.io/en/stable/lib/passlib.hash.pbkdf2_digest.html). You don't need to understand all the technical details of **how** it works, just understand **what** it does and never, ever store plain text passwords anywhere.
Awesome! Thank you
That's not what the function is doing! I calculate the spherical wave function for each of of the different atoms with adjust to their phi depending on the position. The reason they are in pairs is because that means those cannot be tensored together (no atoms can occupy the same position). The order absolutely matters which is why I can't make a single call. The biggest issue is actually with the integral and derivative functions though, not the wave function. Here's a full explanation on how this works: Basically I have a wave function (psi\_pos) that is made up of wave functions of each of the different atoms in the molecule. The wave functions for these atoms are spherical harmonic, but with some adjustments to their polar coordinate (phi) depending on their position/spin state. The wave functions need to be calculated (by spherical\_harmonic) and then the tensor needs to be taken. The reason why there is 62 iterations of np.kron is because the ORDER of the tensor product is super important. No atoms can occupy the same position at the same time so the order reflects the different variations of positions each of the 6 atoms can have (tensor products are not communicative). Then after the tensor is taken, the slater determinate is given by adding up those tensors products. The next thing is getting the hamiltonian. Which is coded by Hpsi and calls to the two partial derivative functions. This calculates my hamiltonian of the wave function (psi\_pos). After I have the hamiltonian I need to multiply it by the wave function once more (this is done by phpsi). I also have to multiply the wave function by itself (psipsi). Lastly, I have to take the integral of phpsi and psi psi and divide them by each other to get my eigenvalues. The issue I am having is with the integral function freezing up at the integral for function for phpsi. This is because phpsi calls to hpsi which calls to the two derivative functions that call to the wave function. So basically it has to calculate the wave function a bijillion times as well as the derivatives a bijillion times and the Hamiltonians a bijillion times for each of the little bjillion parts it is trying to integrate. SUPER not efficient. I tried to numerically take the derivative and just plug that into the hamiltonian (instead of creating a function that it calls to) using sympy, but since my spherical harmonic contains a scipy associated legendre function, it does not allow for symbolic inputs and I can't get the derivative of it. I tried to write out the analytical function for the associated legendre (rather than using the built in scipy one) but that has a summation to infinity in it that can't be derived either by sympy. &amp;#x200B; &amp;#x200B; The triple integral is calculating that derivative per every single point it is sampling rather than calculating it once and plugging in values to it. Because of the associated legendre's incompatibility with symbolic inputs, I can't just calculate the derivative myself and feed it a singular input to plug in values to. Also, because of sympy's inability to differentiate a summation to infinity, I can't do the same. &amp;#x200B; I cannot even begin to understand why sympy would not allow for a symbolic derivative of a summation to infinity. I can do that by hand, but the point is to make a code for it. Also, scipy being incompatible with symbolic inputs is similarly as incomprehensible to me. There needs to be some serious adjustments to these libraries because this is just inefficient 
Still new to this. I'm just saying to split job into 2 parts. The second part to make something user readable
I'm not sure I follow how a co-occurrence matrix will work. Consider 2 widgets, A and B. Both A and B have all 19 settings set to False, then won't the result of the matrix multiplication be 0?
Notepad++ works on non-windows?
Yep!
What is the primary application-layer protocol browsers use to communicate with machines that serve web-content? Name me a web framework that ISN'T an HTTP API framework. My point is, the title isn't misleading. Your assertion otherwise isn't just absurdly pedantic, it's wrong.
Really, the most efficient way for my code to run would be to calculate psi\*hpsi, and psi\*psi symbolically. I would define the symbolic output as some variable in the global environment and use lambda within the integrate function to make that variable into a new function. That function would go into the quad so it would just just calling to that ONE lambda function. However, I can't do this because these libraries are SO wack. 
😂 oh hell. Thanks. Too funny 
I'm not sure if we're thinking of the same thing, but I believe SQLAlchemy implements this pattern. Your database models should be "thin" - not much more than only the column definitions. And then you have service/manager classes that actually do all the querying / CRUD / business logic for the models. You pass those managers around everywhere and work with them, instead of working with the model classes directly as you would with an active record ORM. Here's an [example ModelManager base class](https://github.com/briancappello/sqlalchemy-unchained/blob/master/sqlalchemy_unchained/model_manager.py#L41) that I use in my projects
Fraking awesome
There are things that they don't support though. E.g., the VS Code plugin doesn't support `:g`, or tab-completion in ex mode. Most of them also don't support vim plugins.
&gt; I do need to compute that! No you don't. For example... val = (2*n+1)/4*pi val = 1/pi val2 = fac((n-m)) val2 = fac(0) val2 = 1 That's what I mean. Continue down and simplify terms.
Works qutebrowser arch!
Check out micro.
&gt; Name me a web framework that ISN'T an HTTP API framework. an HTTP API framework is a low-level interface to the web ... oops I used the word web. I guess that makes an HTTP API framework a web framework? Depends on your definition. I would say that an HTTP API is a RESTful API to a datastore. [Nagare](http://www.nagare.org/doc/description) states explicitly that, by default, there is no explicit URL routing / mapping and no manual management of the HTTP request / response cycles and no REST by default (though it is possible). 
wine?
&gt;Code &gt; &gt; for the application. blocked here at work. Please use github or gitlab or similar repository. &amp;#x200B;
[Security! For the love of god, no security is better than a false sense of security!](https://www.youtube.com/watch?v=8ZtInClXe1Q)
I use IDLE a LOT. I write mostly small data or shell scripts and then play with the interactive shell. That said, when I'm actually developing anything I go straight to PyCharm.
I've actually implemented a web application in Python that was calling R's `forecast` package, and it worked better than what I could find on the Python side at the time. It was used in production for 2 years. We did have some worries about the setup indeed, but one Ansible script later we realized it's pretty simple…
Weird. I can see it on Chrome.
Location: **Remote** ( GMT-7 or GMT+1) Job Role: Backend developer ( **Jr** or **Mid** ) &amp;#x200B; # [Hiring / Question]: Hi, fellow redditors, when looking to hire a developer what are the top 3 things you're most concerned about which heavily impact your decision when it comes to remote workers? &amp;#x200B; * Does the country where they are located a deal breaker? * If you're hesitant to hire a remote candidate, what's the one thing he/she can do to make it easy for you? * What's the biggest deal breaker for you about hiring overseas developers for remote work? We are building a remote job board that focuses on making it easy for **US** and **EU** startups to hire remote developers, so your view on the above question really matter in order to develop the right product for you. 
I'll save you some time. All of the replies so far are one of these: 1. Check out the Vim plugin for PyCharm 2. FOUR YEARS? How did you not know there were better options? 3. I prefer Visual Studio Code / Atom / whatever 4. PyCharm is great!
Haha what's your environment? I think it's more about finding an environment that feels right for me, rather than one that is *the best*. 
It seems to be really random and doesn't line up for anybody. I just don't know.
Well, I've never heard of qutebrowser and it seems pretty obscure. At this point there's no pattern and I think it's just random per user. 
I should have specified I wanted to implement this pattern under a Clean Architecture, which means I need to separate the logic from any external resource or tool such as ORM's or any other framework. Anyways, thanks for your response, I am looking at your mapping solution since I will need it in the next steps. 
If one is to say W which attempts it's hardest to give the best of both worlds between X(Pycharm) and (V)im, is bad, simply because X!=V, thats a fallacy. X was never intended to be V. Of course it isn't fully compatible-- only Vim itself would be. For those who gain benefit from the more complex features of Vim (which I personally have over my career found little use for, nobody gets paid based on some combination of lines of code written and lines per minute), then sure, use Vim instead. However I gain more benefit from having every possible workspace, deployment setup, project structure analysis, and debugging and testing tool under the sun in one nice program, so I use a full IDE. In my case, that IDE usually ends up being a Jetbrains product, because I find Eclipse clunky and their shortcuts nonsensical, Visual Studio nice and while I am also offered it free through my company their costs personally abhor me, plus it's windows only, Netbeans just plain weird and outdated, and anything else I need to shove in so many non-language-support-plugins that it becomes Frankenstein's Cthulu. 
I used pyinstaller. It had some problems with packages but update fixed it.
The problem is that you presume to understand the reason why people use Vim, and that IdeaVim is all they need to stop using Vim. Every time someone says "I'd rather use Vim", someone else says "USE IDEAVIM ITS GREAT!". It's not. In fact, it's a fragile husk of what Vim is. That's why it's terrible
Location: **Remote** ( GMT-7 or GMT+1) Job Role: Backend developer ( **Jr** or **Mid** ) &amp;#x200B; # [Hiring / Question]: Hi, fellow redditors, when looking to hire a developer what are the top 3 things you're most concerned about which heavily impact your decision when it comes to remote workers? &amp;#x200B; * Does the country where they are located a deal breaker? * If you're hesitant to hire a remote candidate, what's the one thing he/she can do to make it easy for you? * What's the biggest deal breaker for you about hiring overseas developers for remote work? &amp;#x200B; We are building a remote job board that focuses on making it easy for **US, CANADA** and **EU** startups to hire remote developers, so your view on the above question really matter in order to develop the right product for you. &amp;#x200B; u/dingmaotu, u/weez09, u/chrome9k, u/PyDevMan, u/MaximusDanz, u/PythonRecruiter-SF, u/Kitware_Inc, u/bsmaniotto, u/pivotandedge, u/him_tyagi, u/python_django, u/deimos, u/icemunky, u/chazvincent, u/hvono, u/masasin
I will do as you say. I should have thought about it.
You are disgusting, the IDEA family of products do a great job
I don't mean to sound callous, but A.) this is definitely not the subreddit for this, try r/learnpython, and B.) I've not used VSCode in awhile, but I'd imagine there's editor settings you just need to play around with.
I don't know, I feel like with VSCode there's no giant overhead (none actually) to quickly write a small script (as opposed to VS for example) so I don't see a reason to use a more lightweight IDE like IDLE.
not saying they're bad but manually indenting every line? miss me with that
You missed OPs point. He wants to move back in scope *only when* it calls for it. In this case, he used a return statement. No more code can be called at the indent level of the return statement, so the expected thing would be to for the cursor to return to the indent level of the previous scope.
What to search in Google 
Oh damn, I see, sorry. That indeed does make sense; though I'd wager that I'd always hit shift+tab anyway and be one scope too far out.
Been working on a command line script to quickly add events to my Google Calendar because I hate using their UI: https://github.com/stefanpf/py2gc As a beginner (just started learning Python about 5 weeks ago) I'm super stoked that it runs and does what I want it to do. But now I'm realizing that it maybe wasn't the greatest design decision to have two copies of the main module across my two bin files. So the next step will be to refactor the code to keep the code in the bin files to the bare minimum. And maybe add a verbose mode while I'm at it so users don't have to read all the status print statements unless they want to.
I've been using products with smart indent (as opposed to auto indent) so long that I have the opposite problem. 
i thought the alternative was clear: run it natively
Working on an online 1v1 game of Bingo (the Indian version, the 5 × 5 matrix). Hosted it on pythonanywhere http://www.bingoproject.pythonanywhere.com/app/register. Just started, so nothing more than registration, login and reset password functionality. I am planning on using sockets and channel for this game, since it requires real time updates. But I heard pythonanywhere doesn't support them as of yet. Any ideas where I can deploy it so that it works?
You could try this but I don’t know if it supports audio: https://asciinema.org/
Could you explain the difference (structurally) of an application vs. a library (aside from having a main method)? I think that answers things (works fine for both as they are not different). Now if you are talking about a web application it might be different depending on the framework used.
Works fine in Lynx, too.
WoW q(❂‿❂)p 
Welcome to the club. （ \^\_\^）o自自o（\^\_\^ ） 
Wha - how? Just how?
I see it in Chrome as well!
On a related note, add some of the practices around safe account management. I know that this is just a demo, but for example, it's usually recommended that passwords have a minimum length of 8 characters.
I would use something like "VSCode tabs", "VSCode hard tabs", "VSCode Auto tabs", etc
Niiice, another thing to put in next version, thanks :-D
I am aware. I was responding to the question "Why would you use anything besides Vim?"
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I would be interested by your use case of multiple loggers. &amp;#x200B; While developing Loguru, I looked how applications was making use of multiple loggers, and I tried to provide workarounds despite the "only one logger" design. Most of what I saw can be solved by a proper usage of the \`bind()\` method and \`filter\` attribute. &amp;#x200B; You can actually have multiple loggers, just do \`logger = logger.bind(name="something")\`. Then, the \`name\` value will appear in the \`extra\` dict of each recorded message. So, you can use it to \`filter\` messages in your sink.
So much more than that my fiend. So much more.
Something that made me more comfortable in my own programmer skin was realizing a long time ago that geniuses still have struggles, get frustrated, feel inadequate, forget, learn, and make mistakes. The difference is, a genius keeps going, keeps leaning, admits to - and learns from mistakes. Failure is an opportunity to be used, not feared. All that hard work and frustration is not for nothing if you keep going when things get hard. Even geniuses start at nothing.
I also like this tweet from one of the creators of Django: &gt;I can only write Django apps while closely consulting the documentation, \_much of which I wrote!\_ &gt; &gt;Consulting docs/google/etc isn't a failure; it's literally what professional software development actually looks like. [https://twitter.com/jacobian/status/988515858887491584](https://twitter.com/jacobian/status/988515858887491584)
Instead of your own log-in system integrate with Active Directory so people can use their mail/Windows passwords. Next step from there is implementing Single-Sign-On, so users don't have to sign in at all anymore
Got recently hired by a local government for GIS and I'm writing a script to rebuild one of their road files, because OH GOD. My employer maintains two separate road files: one for 911 and general purpose, and one for maintenance tracking, assigning work and reporting what they're doing to other entities. The general-purpose roads are good, but that layer doesn't have critical information, and the roads are broken down in different places. The maintenance roads layer is just terribly stitched together from a couple different sources, no connection with the main road layer, segments are missing or misnamed or have weird eldritch geometries. So I'm chucking it into a dumpster and using a non-geographic data and the general-purpose roads' geometry to build a new road layer from scratch. I have to do a LOT of data QA and checking first, though. So I've written a list of questions I need to answer (how many roads don't match in this way? How many roads are reversed in their geometry, so they're starting at the end?) and I'm writing a script with a section to answer each question in order. As I do QA, I'll keep running it to track my progress reducing problems and make sure no new ones are cropping up. Then later this month/early next year, I'll be running the main script to generate the roads and see how they turn out.
depending on the level of overkill you want, [argon2](https://pypi.org/project/argon2_cffi/) is a really kickass hashing algorithm.
&gt; The hard part of coding is thinking, not typing Absolutely. And you want your brain to be as disassociated as possible from the typing. That's exactly what vim (and maybe emacs I don't know) allows you to do. The decisions of editing, moving around and typing are substantially pushed to your fingers, so you can actually express what is in your brain with as little friction as possible. Not using that capability, and forcing yourself to actually think about typing more than you have to seems crazy to me, making things much harder than they need to be. 
I'm pretty sure I read at some point that somebody asked him to rank his Python knowledge on a scale of 1-10 and he said 8.
FWIW it works in Edge (W10M).
Made a web interface for my local music library that lets me sync it with Spotify and add music with basically no effort. It helped me get much more familiar with Flask, which is a library I've really come to love. The whole thing is basically just a million REST api calls duct taped together and stuffed in a closet. Just the way I like it.
You're responding to me pointing out the fallacy...with the same exact fallacy?
I call help() on my own API all the time. God bless docstrings.
i keeble you're not op but why not run the linux version?
You're asking why people have a problem with IdeaVim. Naturally, every single person with an inclination to respond to you will be in the group you misunderstand. Anyone that complains about IdeaVim will have this exact problem. So no, I'm not.
Somewhat related: I'm not sure how worried you are about attacks, but you'll want to make sure your messages for incorrect or missing usernames and passwords are somewhat vague. If somebody trying to break in knows they have a working username, and just the password needs work, that cuts their work in half. If, however, they're trying and keep getting an error like "Please check your username and password and try again," they won't know which is correct.
He is my favourite, what an awesome guy.
Laptop = Windows VM = Linux Pycharm installed on both. Some of the things I work on are linux-only, so for those I use Pycharm in the VM. I could do the the automatic deployment &amp; remote debugging (I use that frequently right now), but that can be slow at times. I've also connected to hard servers in our lab via XServer tunnels (or VNC), but that's also slow. So doing things on a Linux VM is the least disruptive to workflow, especially when network connectivity isn't the best. 
Does that not count as something besides vim? 
Writing a piece of code to extract some results from a series of curves. I was expected to do this by hand but there are \~5000 of these curves so it seems like the perfect kind of project to automate. &amp;#x200B; Currently I have managed to get it to work with the test data but as soon as I set it loose on the entire set it starts detecting noise in the data rather than the feature I am looking for. &amp;#x200B; Looks like it is back to the drawing board to have a rethink. &amp;#x200B; Ideally I would like to make this robust enough to publicly share but it is definitely a long way from that.
Right? Good luck figuring out how to deploy your app that's been rotting in your GitHub for two years without even minimal documentation.
Don’t be so sure about that objective advantage. With the scanning capability comes the increased attack surface because of that hugely complex piece of software running with every imaginable permission, including the ability to download and execute arbitrary code from the web. Add to that the less than stellar software security/quality track record of the antivirus vendors and you end up with at least a major question mark instead of a clear advantage.
Wow, that's really neat. I'll definitely use that next time I need to do a screencap of terminal, thanks for the link!
This is also important for senior devs: don't solve your juniors problems if it is a documented thing. Instead teach how to find things for themselves, how to read documentation and find what you need. Fish, fishing rod, yadiyada.
Not super insane, but I was quite literally looking up re.split() for the same purpose when I started procrastinating and decided to browse r/python when I saw this.
Did you know you can pass strings to Fraction and it'll parse them? TIL. 
I once wrote an extremely simple bytecode language and assembled of sorts. It was technically just enough to be Turing complete, but still couldn’t do much past basic operations and output text one character at a time. I had a hard time making sure it worked properly on more complicated code because I sucked st my own “language.” It was one of my more interesting programming experiences.
oh i see what you're saying. sorry, I was not clear. I will be varying those. I just put one for now
I would wager that Bjarne would probably say 3 if asked to rate his knowledge of C++.
Working on a pretty simple [irc api](http://github.com/avahe-kellenberger/prestige_irc) for learning purposes, and putting together the docs on the GitHub wiki. Would love feedback on the API; trying to make it as simple as possible, to use.
Perhaps discussing the viability of an AI that predicts stock market prices?
Take a look at GeoPandas. If that won’t do it, you’ll need Cartopy.
Oh no, I was actually just about to try setting up python plugins for vim. Is it really that bad?
I just finished converting a Yahtzee script that ran in the console window to run with Tkinter. It took me about 24 hours but it's done and now I can play yahtzee with myself whenever I want.
I have a python module with maybe for functions. I call help every time
&gt; Does that not count as something besides vim? No. You already use a terminal emulator to run Vim. It's part of the regular Linux environment, along with the shell and various command line utils.
Don’t use a .cmd file—set up your application as a package with https://setuptools.readthedocs.io/en/latest/setuptools.html and use the entry_points argument. This will allow you to do `py2gc` from the command line without having two different files—note that you’ll need that code in a `__main__` file. Also take a look at Click, which is a friendly wrapper around argparse.
If you *just* want python, there's a plugin called python-mode, which may do you well. The problem is I also need JS and rust and a few other things, so I wanted to set up stuff which was as language-agnostic as possible (like using language servers for autocompletion), which I think would then clash with python-mode, I think.
That sounds more complicated than just creating a new logger and attaching a handler to it: logger = logging.getLogger('logger') logger.addHandler(file_handler) audit_logger = logging.getLogger('audit') audit_logger.addHandler(audit_file_handler)
I would wager that I will segfault if you asked me.
I'm currently developing a Qt application (using PyQt), and [this](http://doc.qt.io/qt-5/classes.html) is pretty much my homepage. Qt has thousands of classes, each containing 5 to 100 methods. Of course, I probably only use about 30 of all these classes, but still, there's so much I'm not going to even try to remember how to use them. It also helps that Qt's documentation and architecture are really, really good.
http://lmgtfy.com/?q=python+jpeg+array
I'm not misunderstanding your group. You want Vim. IdeaVim isn't vim. So in response to "IdeaVim is great", you say it sucks. I'm saying that doesn't make sense, because you are comparing apples and oranges. Saying IdeaVim is great doesn't mean it is a replacement for Vim. It means it has a decent chunk of the basic functionality that will make the transition from Vim to Jetbrains projects smoother and easier. 
Does it still do that? It might be worth it to actually, you know, run it under gdb to idolate the exact moment of the crash
I guess we're going to have to agree to disagree on this one. Unless you've only been using Vim for a few months, I don't see how it helps anybody at all.
I've run it in an Ubuntu VM without problems. What's your CPU/GPU/Ram/Virtualization software?
You are right, assuming \`file\_handler\` and \`audit\_file\_handler\` doesn't require too much boilerplate to be created and formatted, Loguru can't beat the simplicity of the standard logging here. Thanks for the example. ;)
So many useful comments, thank you all. I will have something new to learn for a long time.
&gt;Well, it turns out that when you use i and j as a loop variable, Matlab will just silently overwrite their value as the complex root. That is some demented shit
Issue is resolved now. It seems request didn't do so well with the long prefix: base_url.split(':')[0], # this will be `https://pr-5fdb8ad6.dev.dporganizer.com` When I changed it to just be "http://" or "https://" it worked as expected.
A little bit of context: we do a lot of analysis on cryptos (both for our Data Science courses and for personal trading strategies). I've been using these APIs here and there for some time now. When I got started it was really difficult to find a unified/curated list, so I just went ahead and compiled it with some examples (obviously written in Python). I hope it helps :)
Sure, unfortunately I often have no control over the environment and IDLE is part of the default install of Python as well.
You'll be reading a RGB image, which is red-green-blue. You'll want to convert that to HSV, hue-saturation-value color space. You can find formulas for that on wikipedia or elsewhere. 
That's only thing I miss from IDLE. A good place to ask such questions is stackoverflow.com with the vscode tag.
&gt; Also, scipy being incompatible with symbolic inputs is similarly as incomprehensible to me. There needs to be some serious adjustments to these libraries because this is just inefficient No. It is inefficient to use symbolic inputs.
Lol
I can barely remember stuff I wrote a year ago, nevermind 28 years ago hahaha. That and Python has gotten so much bigger than him that he's had to step down as BDFL.
I used Python in Processing to create a program that generates unique bugs every time it runs. This generative artwork was printed and displayed at Code Kitchen's Creatures group art show in November 2018. The source code for these can be found on my GitHub: https://github.com/aaronpenne/generative_art/tree/master/buggies
Glad to hear the issue is fixed! Thanks for updating me :)
I've always had a preference for the O'Reilly books. There are a lot of Python books in that line. Take a look at Programming Python if you are already based in the necessary logic. Good luck!
This literally gave me so much confidence
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
It's not that there is problems, just seems kind of clunky.
I needed this right now. 😂
"Username not found". From a security point of view, never do that. For an attacker, just knowing that an username exists in the DB could be a very useful information. 
I see. Makes sense, thanks!
Yes it uses wine. Even the snap version has an embedded version of wine in it. 
this hit close to home
The progression on this conversation was amazing. Just wanted to confirm that you aren't the person being an ass.
I very recently started on creating any size Rubik's cube, and an algorithm that would scramble it randomly and then solve it, but I have no idea what to start with or where to start.
thank you. i didn't think i was being outrageous, but i was starting to wonder, so it's nice to have some validation 
I feel personally attacked. 
Go to a PyCon, join the sprints.
To be fair, it has become way more difficult to shoot yourself in the foot with modern C++. And you would be surprised how clean and concise C++ can be nowadays!
Qt documentation is I think one of the best documented frameworks anywhere.
What is "clunky"? Because you reference a VM, I assumed either actual problems or speed.
Meanwhile the folks at r/Hacking supposedly can write any complex regex on the fly, and say that any barely decent programmer must know how to write regexes about as fluently as they can write English. Yeah right.
Also for PySide2: https://doc-snapshots.qt.io/qtforpython/index.html Sometimes you will still want to look at the C++ docs though.
Sounds like python would be overkill, if it's something a few Excel macros / functions can handle.
I always like to read \[this interview\]([http://www.dodgycoder.net/2012/09/q-with-nine-great-programmers.html](http://www.dodgycoder.net/2012/09/q-with-nine-great-programmers.html)) his responses are so lateral and succinct that I can't help laughing. \&gt; **Q 2: What do you think is the most important skill every programmer should posses?** \&gt; GvR: Your questions are rather general and hard to answer. :-) I guess being able to cook an egg for breakfast is invaluable. 
Continuing writing a program that examines a block of accounts to find evidence if they are all run by the same person, and I want to see if I can make it statistically believable rather than just anecdotally reasonable. A large portion of this is going to be used directly with the python helper bot, and is just easier to develop when it's outside of the spaghetti code that has become the bot. I'm looking forward to getting to the visualization portion of this side project, but first I need to figure out what kind of database I want to use/build. 
if your career goals is management why would you take a python course?
So the prompt should be different?
Trying to learn beautiful soup and web scraping this week.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
If username is unknown or password is wrong should provide the same response. Something like "invalid username/password". 
Bit of a beginner here, so was very cool to see how it all worked and pulled stuff from the various websites! Only question I have is how you managed to make the icons on the map move? When I run it, I only see a 'screenshot' of when I run the code
This just means that he's also a human that makes mistake just like us. Keep moving forward!!!
Eh I just run it in terminal 
Why are they using floats? Let me tell you this... in Delphi, a datetime type is stored as **a float**. No one knows why. Until 2010 you could get floating point errors doing time calculations! Obviously nothing is timezone aware either. 
A person could say "if your career plan is urban planning, why take a python course?" The answer to that would be because python is used heavily in gis which most planners need to know at least a bit of. I'm asking if procurement/ purchasing etc. have any components where python usefulness is readily apparent. 
Ok, I'll check those out. Thanks! 
Much of the time I spent using Qt was spent in the documentation. I went from zero knowledge of how to create a UI in Python to a functioning UI in about 2 weeks. Was it garbage? Of course. Did it work? Of course.
Not 100% sure, but might be due to [broadcasting](https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html).
Hahahahahah
Please message me 
Wow!
Man I do the same thing all the time. I feel like I know other people's libraries much better than my own
It depends on how numpy/scipy is compiled. If it is compiled with MKL support, which Anaconda is, then it is about the same speed as MATLAB. If you install FFTW and use that for scipy (technically money patching but it is literally just one very simple line of code) then it is considerably *faster* than Matlab.
I am a member of SciPy team and I still don't recognize any of your claims. But anyways if you say so.
I used this but for some reason the auto complete was super slow on my setup when trying to auto complete PySide2 modules. Like we're talking up to 10 seconds to get the company drop-down menu to pop up. Finally had enough and tried pycharm after a colleague recommended it and it auto completes in an instant. It's probably something in my emacs config messing things up, but I can't be bothered to start over again. That shit took a lot of time to set up the way I want it. I do miss my shortcuts though. :(
He's a real gift to the world. 
The best ones are libraries/packages that do exactly what you want, but whose entire "documentation" are just vague comments in their spaghetti-code
OK. I'm still confused on what you were trying to say. &gt; There are hundreds of specific packages if you actually bother to check. What does that even mean? That's a fragment. I don't doubt that you're a smart person. I also don't understand what this means. &gt; @ and __matmul__ are also not NumPy but Python. It's a statement with no explanation. It was not a core dev's idea to add that. It was highly influenced by numpy and scipy. It is a Python thing now, but that's not the genesis of it, and if that's what you mean, that's sounds like an irrelevant point.
PyCharm has an amazing JS, CSS, HTML and JS frameworks support out of the box. And there are plugins for lots of other things, such as SQL, hgignore, Bash scripting etc.
In no particular order: * /u/itsthejoker's 1 * pipenv (and hopefully soon poetry) support * built in doc viewer * built in code coverage analysis * built in deployment system * Django/Flask/other web framework support.
I can write a Lisp interpreter. I suck at Lisp.
I've looked around a fair bit, and it's indeed hard. You might want to check librosa among others. Also, it's super greedy (for my old mbp at least) and it's not clear what predictive value a mfcc or timbre analysis has. [ismir ](https://www.ismir.net/) has a lot of super interesting papers on the matter &gt;How'd the music genre go? I've been looking for an off the shelf solution to organize my music library. It's about 20k of video game music, which tends to be pretty diverse. I want something that could bin them in a few general categories. &gt;How'd the music genre go? I've been looking for an off the shelf solution to organize my music library. It's about 20k of video game music, which tends to be pretty diverse. I want something that could bin them in a few general categories. 
Today, on accident while doing a LeetCode problem, I discovered that the Python 'or' keyword can be used in place of a try-catch statement for the assignment I was doing
Guido van Rossum? &amp;#x200B; Pfft... &amp;#x200B; Sounds like an amateur
Only in this subreddit would talking negatively about static typing get downvoted. 
I worked with a statically typed language for decades. Static typing was like the Gordian Knot, and in 2012 I discovered that dynamic typing is like Alexander untying the knot by slicing it in half. All the complexity and being a slave to the compiler goes away in one stroke. 
In what statically typed language aren't you using generics, casting, interfaces, etc. to get around the fact that you're using static typing?
You mean for the once or twice a year that I need a regular expression? 
I use generics and interfaces, but those aren't getting *around* the typing, they're the point. Casting i generally never have to do though. Jobs that casting does in C and Java etc are better done by using stronger abstractions. 
My amazing code (I spent more time trying to screen record than I did on the code. OBS did not like the turtle window...): import turtle import time &amp;#x200B; \##tom \##ang \##ora \##jon \##t1 \##t2 \##t3 \##t4 \##t5 \##t6 \##t7 \##t8 &amp;#x200B; speed = 10 width = 5 &amp;#x200B; tom = turtle.Turtle() tom.shape("turtle") tom.color("red") tom.speed(speed) &amp;#x200B; ang = turtle.Turtle() ang.shape("turtle") ang.color("orange") ang.speed(speed) &amp;#x200B; ora = turtle.Turtle() ora.shape("turtle") ora.color("#E7F123") ora.speed(speed) &amp;#x200B; jon = turtle.Turtle() jon.shape("turtle") jon.color("#CCEE0E") jon.speed(speed) &amp;#x200B; t1 = turtle.Turtle() t1.shape("turtle") t1.color("#63A618") t1.speed(speed) &amp;#x200B; t2= turtle.Turtle() t2.shape("turtle") t2.color("green") t2.speed(speed) &amp;#x200B; t3= turtle.Turtle() t3.shape("turtle") t3.color("#11E7A6") t3.speed(speed) &amp;#x200B; t4= turtle.Turtle() t4.shape("turtle") t4.color("#11DAE7") t4.speed(speed) &amp;#x200B; t5= turtle.Turtle() t5.shape("turtle") t5.color("blue") t5.speed(speed) &amp;#x200B; t6= turtle.Turtle() t6.shape("turtle") t6.color("#7810DA") t6.speed(speed) &amp;#x200B; t7= turtle.Turtle() t7.shape("turtle") t7.color("purple") t7.speed(speed) &amp;#x200B; t8= turtle.Turtle() t8.shape("turtle") t8.color("#F123A3") t8.speed(speed) &amp;#x200B; tom.width(width) ang.width(width) ora.width(width) jon.width(width) t1.width(width) t2.width(width) t3.width(width) t4.width(width) t5.width(width) t6.width(width) t7.width(width) t8.width(width) &amp;#x200B; &amp;#x200B; window = turtle.Screen() &amp;#x200B; ang.left(30) ora.left(60) jon.left(90) t1.left(120) t2.left(150) t3.left(180) t4.left(210) t5.left(240) t6.left(270) t7.left(300) t8.left(330) &amp;#x200B; time.sleep(2) &amp;#x200B; forward = 100 &amp;#x200B; tom.penup() ang.penup() ora.penup() jon.penup() t1.penup() t2.penup() t3.penup() t4.penup() t5.penup() t6.penup() t7.penup() t8.penup() &amp;#x200B; tom.forward(forward) ang.forward(forward) ora.forward(forward) jon.forward(forward) t1.forward(forward) t2.forward(forward) t3.forward(forward) t4.forward(forward) t5.forward(forward) t6.forward(forward) t7.forward(forward) t8.forward(forward) &amp;#x200B; tom.pendown() ang.pendown() ora.pendown() jon.pendown() t1.pendown() t2.pendown() t3.pendown() t4.pendown() t5.pendown() t6.pendown() t7.pendown() t8.pendown() &amp;#x200B; forward = 170 turn = 165 &amp;#x200B; for i in range (0,24): tom.forward(forward) ang.forward(forward) ora.forward(forward) jon.forward(forward) t1.forward(forward) t2.forward(forward) t3.forward(forward) t4.forward(forward) t5.forward(forward) t6.forward(forward) t7.forward(forward) t8.forward(forward) ang.right(turn) tom.right(turn) ora.right(turn) jon.right(turn) t1.right(turn) t2.right(turn) t3.right(turn) t4.right(turn) t5.right(turn) t6.right(turn) t7.right(turn) t8.right(turn) &amp;#x200B; tom.forward(forward) ang.forward(forward) ora.forward(forward) jon.forward(forward) t1.forward(forward) t2.forward(forward) t3.forward(forward) t4.forward(forward) t5.forward(forward) t6.forward(forward) t7.forward(forward) t8.forward(forward) &amp;#x200B; window.exitonclick()
Simple, as you go to DockerHub to see if someone created a container for it. Or you go to Ansible Galaxy and look for a matching role. &amp;#x200B; To be honest. Most of my projects now have a [DEVELOPMENT](https://DEVELOPMENT.ms).md and [INSTALL.md](https://INSTALL.md) to explain a lot of the magic as I'm done hacking and refactoring my projects.
I think chalice is the easiest way to deploy Python to AWS Lambda, e.g. see [https://realpython.com/aws-chalice-serverless-python/](https://realpython.com/aws-chalice-serverless-python/)
I'd do that but at my workplace they don't like docstrings and writting documentation on top of code :(