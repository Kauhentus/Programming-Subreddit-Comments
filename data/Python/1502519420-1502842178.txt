The odds are good you'll be writing code that will be deployed on Linux in production. You should use the closest environment to that to minimize library incompatibility and weird things that can crop up. If you use a Mac, chances are you'll use Homebrew or macports, which install standard unixy packages in really messed up locations. Packages may also be installed with different options than they will be on prod, leading to unexpected failures and duplicated work (you have to set up the environment twice, once to make it work on the mac, and once to make it work on prod). "it works on my Mac" doesn't really mean squat if you're deploying in a different environment. Lots of devs love their Macs even though they're a garbage fire for developing software that deploys to Linux. My suggestion, backed by years of experience, is to use whatever host OS you want and do your work in a VM running the exact same Linux distribution you'll be deploying to. Same version and everything. Run your config management playbooks on it so you always match prod. Windows has VMWare Player (free), Mac has VMWare Fusion ($80).
Yes, exactly.
I'm not familiar with Tornado so I am not sure.
Using open cv to detect lane lines live on video feed!!
I had a similar question in my mind a couple of years ago... and ended up looking at the source code of Python, specifically the implementation of the long object / class. https://github.com/python/cpython/blob/3.6/Objects/longobject.c Another interesting thing... python uses Karatsuba multiplication when multiplying very large numbers. Usual multiplication runs in n^2, while Karatsuba multipilcation runs in about n^1.6 ... n^2 vs n^1.6 might not look too different but, when multiplying 2 thousand digit numbers, Karatsuba is 15x (1000^0.4) faster than naive multiplication. For 100 digit numbers, its 6x faster. https://en.wikipedia.org/wiki/Karatsuba_algorithm 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [python/cpython/.../**longobject.c** (3.6 → f2d769d)](https://github.com/python/cpython/blob/f2d769d539279f01a6589dd3a0d5865dd00e13b0/Objects/longobject.c) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dliexds.)^.
Don't use aircrack-ng. Use scapy in python to send deauth's. It is a better learning experience and you can thank me later.
Tornado has its own [context mechanism](http://www.tornadoweb.org/en/stable/stack_context.html). I'm looking forward to having a standard solution!
By the way, how long did it take you to finish the book? I'm going over it at the moment.
In your opinion, how hard is scientific computing compared to web development? Both seem really cool to me but would like to hear your opinion
Good bot
Thank you Andior for voting on WikiTextBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Thanks!
Behind the meme
I think /u/WaterGuy12 would enjoy this. --- *I am bot, and this action was performed automatically.* ^^^^[Confused?](https://www.reddit.com/r/me_irl/comments/6qij1u/meirl/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=frontpage)
This looks really cool. It's late for me now but I'll try testing it soon. I don't know that you'll end up needing any help, but I'm interested in contributing if anything comes up.
That is so strange! I've been on holiday and was whiling away on this project in the evenings: https://gitlab.com/WilliamMayor/tempting HTML templates in Python code. I was trying to make it easy to extend templates. In particular I wanted breadcrumbs to be something easy to create. I also liked the idea of having the full power of Python in my templates. I haven't done as much work on the DOM tree as you have. I had in mind to replicate some kind of CSS selector find function. I'm sure there's an XML library that would help with that. I have started to work on integrating form data and form validation. I've always found wtforms to be surprising to use, I wanted something that maybe had less automagic but also with less "huh? Why did that happen?" In the future I was thinking of being able to run HTML checkers over the code. Validators, accessibility checks, best practise checks, etc. Want to collaborate?
[removed]
[removed]
&gt; Why is this guy not ever banned for spamming? Please stop whining. 
Hey, Grey here, one of the authors of Dependabot. I added Python support a couple of days ago and would love some feedback. Currently, it'll just parse your `requirements.txt` file and update any pinned dependencies to the latest version (in separate PRs). In future, it'll support Pipfiles (if/when they land) and pip's new resolver (when it's released, hopefully in pip 10). Pipfile and Pip resolver links, for anyone curious: - https://github.com/pypa/pipfile - https://github.com/pypa/pip/issues/988#issuecomment-308969728
Hey, thanks! This is a beta version, as I have tested it making simple sites so the more people try to use it with more and more complex structure the better, that's is big help! I have a TODO list [here](https://github.com/Hrabal/TemPy/blob/master/CONTRIBUTING.md), main goals right now are implementing some proper exception handling, Python2 compatibility, writing tests (and examples/documentation also) and start thinking about overriding math operators.. If you see something you'd like to work on, please do! :)
Wouldn't exceptions be suitable for that, especially StopIteration?
Is the course free? I can't find anything in the article...
Please stop spamming your shitty website?
lxml has the etree.Elementmaker API for that purpose. http://lxml.de/api/lxml.builder.ElementMaker-class.html
Very strange!, Mine is a holiday project too, heheh. Basic idea is to have, as you said, the power of Python when building html (and not python syntax in some html file). And another goal is to navigate and manipulate the 'not yet existing' DOM with apis similar to jQuery (I find it very useable). Next big goals for me would be to make a css style extractor (so you use python style dicts, adds them to single elements and the extractor builds a versioned css file), forms objects (that you can navigate with the same api of the other tags but with extra form wtforms-like commodity) and sure the CSS selector method (started to look on this one and yes there are xml libs that help but it seems kinda hard to integrate them in my tree composition.. I'm looking for a css selector decomposer to use and filter myself tags). I'm also willing to keep up performance, less or better than common tmeplate systems, for it's not good to use a tool that slows down your code by a 2/3x factor. Collaboration? Sure!
Is it like Context in Golang? It seems like python guys are copying everything and can't come up with anything original.
I've used it in the past, and yes it's the same basic functionality, but with a rather different approach. With ElementMaker you build a tree starting from the content and then you navigate and (maybe?) add extra tags. With TemPy you make templates, inject the content later and then manipulate the DOM with a jQuery-like API. But yes, I re-inventend big part of the wheel :)
&gt; Do you really need to post every minor change? 0.7.8 is a major release. I highly recommend to update. :) 
I think /u/WaterGuy12 would enjoy this. --- *I am bot, and this action was performed automatically.* ^^^^[Confused?](https://www.reddit.com/r/me_irl/comments/6qij1u/meirl/?utm_content=comments&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=frontpage)
I don't see why you would declare `table_name` and `write_table_name` and then use string formatting to form the query. Seems a bit pointless, just use the names in the query.
1. I would suggest implementing a form of caching mecanism for all thoses sql queries. 2. did you consider implementing OAuth2 authentication instead of password login?
You should be able to set up your editor to auto switch on projects with tabs. There's been a few greenfield projects I've jumped on that have them and I never had any issue
Post your code as a snippet
I'd recommend against beautifulsoup and instead suggest lxml.html. BS was great when it was the only option but its api is... odd.
I'd offer [#python](http://webchat.freenode.net/?channels=%23python) on freenode as well. Generally better if you have a question you need answering (or problems with specific code) rather than generic stuff. The group there are _very_ skilled with Python and can generally handle anything you throw their way. You will need a freenode account to access the channel though, easy enough to sign up for.
I added a gist to my original post :)
Beginner here! Why is it recommended to use spaces instead of tabs? I googled and the only reason I could come across was "Because pep-8 says so". I assume there's a better reason than that though? :P 
Hi, ``'(http://some-url.com, )'`` suggests you've got a 1-item tuple. Could you try ``your_url_variable[0]`` at the relevant location? BTW, I suggest posting questions on r/learnpython
Cool. Yeah, the problem is the comma on the end of the line. That's telling Python it's a tuple which explains what you're seeing. 
More importantly, providing a standard way to access it whether generators etc. *or* threads
Ah stupid me. I am doing quite a bit of JS lately and was in the mindset of using an object literal instead of a python class. Thanks for pointing out the mistake :)
Bad bot
Thank you Andior for voting on \_\_WaterGuy12. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
What's the advantage of this compared to e.g. opencv?
Two reasons. Spaces are displayed the same everywhere, and tabs are not. And tabs are usually much larger than 4 spaces, so they're less respectful of your limited horizontal space.
OpenCV is a library for computer vision whereas this package is designed to generate beautiful images out of text which can be used to program some Instagram post photos or news image placeholders for social medias
I've done more web dev than scientific programming, so I'd say web dev is easier -- I'm biased, though. What I will say is that it sometimes seems like scientific can be more interesting.
What do you mean by "object-oriented" here? If you just want class based views, [Flask has those](http://flask.pocoo.org/docs/0.12/views/).
Exactly what I wanted. Have been using flask for years, never seen this before. Thanks. 
OSX doesn't exist anymore
I'm talking about IBM PC compatible
random.sample in the stdlib may help you there. No need for a shuffle per se.
Is being original a goal then?
Braces are `{} `. What you have there are parentheses `() `. 
Oh, right. I am not a native speaker - thanks for correcting my mistake.
I know what opencv is meant for. I am referring to the add text to figure (also know as watermark) that can be done in opencv. What's the benefit of this compared to the already existing method(s)?
That reads a lot like the dynamically-scoped variables you can find in Lisps or Smalltalk (ish) except more ad-hoc. Also seems odd that execution contexts *replace* one another entirely by default, that seems inconvenient. Even more so given Python 3 finally brought us ChainMap in the stdlib.
Pass the actual context around in a reader monad and don't override operators if you need external context
I've been using Airflow now for half a year and I have the same sentiment. It's indeed made for static workflows and for that I like it better than competitors such Oozie &amp; Azkaban. I've never used Luigi though. My main gripes with Airflow is that it's mental model is not really straightforward (it took me a while to understand how everything works) and that the code base isn't super solid. Luckily, because it's all written in Python it's not too hard to find why things work the way they do. 
that was obvious with your last comment. Now you're just beating the dead horse.
[removed]
making your own GUI is a complete waste of time. There are at least 2 ready-made solutions out there. The open-source PHPMyAdmin (which means it was written in PHP, not that you can only use PHP. You can use Python with PHPMyAdmin) There is also the official MySQL Workbench. It can do everything you want and a lot more. It's also free.
Wow great!! We can learn together, If you are still learning. I am very new to python and in-fact to programming in general. would really appreciate some help in understanding the course
Would it be best to use scapy in linux or windows? Is there any limitations with windows that would not make it a viable option?
Ugh, it depends on a lot of things, primarily how much time you can put in and how fast you get the hang of it. You can read it in two days, even one ( go over the basics, which is half the book ), but to fully comprehend it and exercise, if you put in an hour a day I'd say about a month, but it will vary a lot person to person. It took me about two weeks. 
I'd rather not run php on my system because it takes up resources. I have MySQL workbench installed and used it to set up my database, but I was looking to create a minimal manager to easily insert queries using a simple gui and manage them.. as well as a little viewer to display rows on 2 other scripts i have. Just extremely basic UI's. I've used PHPMyAdmin a lot in the past as I've done about 6 years of web dev
Changing the name of new versions doesn't change the name of versions people already have
What about monkey patching B?
It's almost as if ideas and concepts don't exist in a void and instead are shared between communities and improvements can be shared back to the originators. 
Good bot. Bad github design decision. 
Thank you selementar for voting on GitHubPermalinkBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
I've been working on a [script](https://github.com/totallyquiche/python-github-portfolio) using [PyGithub](https://github.com/PyGithub/PyGithub) that spits out a simple HTML website based on my Github profile and uploads it to my FTP server.
OSX/macOS are alright, I find lack of a first class package manager is the biggest issue and there are other annoyances (openssl being pinned to an old version with no recourse to upgrade it, for example). That said, I'd take osx over windows simply because *my workflow* (terminal + tmux + vim) works on it easier than windows. However, you pay out the nose for OEM hardware and you're getting less bang for your buck. I have a cheapass ideapad that I got twoish years ago for like $300. It's served me pretty well, but I'm making the jump back to a desktop since 4gb and an i3 aren't serving my needs any more. I ended up ordering a tower from zareason for like 1k. I definitely overpaid for the convenience (16gb + i5, on board graphics) but having all Linux compat hardware is important to me and supporting a Linux oriented business is as well. 
Monkey-patching would be about as bad as thread-local stack context except without the "thread-local" and "stack", i.e. just a context singleton. Having them as methods and subclassing might be relevant, but if there's ever a need to call D several times with different parameters for B from some other method E on the same class, it becomes a non-option. And generally, it still seems worse than `**kwargs` or `context=None` all the way. I suppose the thread-local context-stack would be about the same behaviour as `context=None` all the way through those methods, but with less code overhead and easier compatibility with other libraries (e.g. some context might need to be passed to an object's `__str__` called from `logging`).
I did the Android Developer in Udacity and it was pretty good. But you really want to do CS? Programming is just one discipline of CS. If you just want to learn Python, there are better/faster options. One I know of is https://training.talkpython.fm/ , but you could search here for more options.
I need to reread this carefully because it might solve one of our problem with twisted based software. I ended adding a special parameter named "ctx" as first parameter to any service function call (a service is a function that might be called from almost anywhere). This holds some random data, removing the need to add more "kwargs" to all function calls each time a new data is inserted. There are also getter/setter to garentee integrity, but this still requires to add one parameter to every function. It also holds logging mecanism (default logging is not enough since I need to be able to group all log from a given call and not only from a given module (remember, a service might be called several times at the same time, for exemple a service that perform a long request to a remote server) need to rererereread this pep to see if it fits my meeds
Dont know but i love python. 
Really. THIS IS AMAZING! Everyone should see the examples page. https://github.com/gboeing/osmnx-examples/find/master?q=
Later than optimal, but better than never. Things like https://github.com/dabeaz/curio/blob/master/curio/local.py already started cropping up, so it's a hope of avoiding the [mess](https://stackoverflow.com/a/32656521) that happened in js.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [dabeaz/curio/.../**local.py** (master → 67fdbf7)](https://github.com/dabeaz/curio/blob/67fdbf721be8046855684aa114f92b8d2fedcad6/curio/local.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dliqyai.)^.
So you downvote my submission and my reply because I don't want to run a PHP server on my machine because it takes up too many resources? I was asking if anyone knew of something simple I could work with to create a basic mysql client as part of my python application. Making my own GUI isn't a waste of time if it's what I want to do and if it's educational. 
Is python2 support really a good idea for a new project? There aren't many environments that don't support python3 nowadays.
I see no point in "reinventing the wheel", so to speak. You're looking for a minimal RDBMS management software. What is the point in wasting your time doing something that MySQL Workbench can already do? Do you want to be able to easily do some basic db management tasks from the web? or on mobile? Honestly, if you're going to use this MySQL GUI from your workstation, then there literally isn't any purpose in creating this. Now, on the other hand, if there's more to the story, then we're getting somewhere. For example, if you want to give a website's admins the ability to do these things from an administrative login system, then that makes sense, in which case you are basically creating a python version of PHPMyAdmin. If there's not more to the story, then you're literally wasting your time. Doing something that is already done by an existing industry-standard software package (speaking of MySQL Workbench here) is a newb mistake. I don't think you're a newb, so there must be more to the story than what you're said.
Are you familiar with the pyquery library?
I would make a little flask app. All those Python UI tools look dated (thinking of to). Should be"easy" to build something to view, update, etc tables. 
If you don't want to fucking help people then why TF are you on this subreddit? I was asking if anyone knew of a GUI widget that did such thing because it would be part of a much larger application i'm working on. I want to integrate the two because they relate together. That's not a waste of time to say that I don't want to run a php server and a 3rd party mysql client in PHP. 
If you read my whole comment, I clearly focused on MySQL Workbench. PHPMyAdmin is an OPTION. And IMO, it isn't even the best option. You would know that I consider MySQL Workbench to be the industry standard (default) RDBMS management software for MySQL if you actually read my whole comment. If you aren't going to read my entire response, then why are you even looking for help? I'm helping by preventing someone from wasting their time. Next time, you should include the contextual information. Your initial comment and context were those of a newb who didn't understand fucking anything. I made it clear that I believe you aren't a newb, and I have faith in you. I made it clear that i KNEW there was more to the story. If you're going to be an ass who can't bother to think through common sense and read my comments, then don't look for help.
I see what you're saying. I'm trying to avoid running a web server for a couple reasons. One being that I don't want to run a server on this machine and I also wanted a GUI widget for managing 3 tables because it's part of a larger application I'm working on. I wanted to tie the two together. I installed [QT Designer](http://projects.skylogic.ca/blog/wp-content/uploads/2015/05/QtDesigner-addBtn.png) which doesn't seem too outdated. I just need to learn how to use a GUI with Python and MySQL :x It doesn't hurt to ask here if someone knows of a UI widget that can do it so I figured i'd ask lol. I'm trying to make this user friendly and tie in the mysql manager to the larger application. Thanks anyways
If you read my comment, you would know what I'm trying to do but you don't. I'm looking for a widget that can manage 3 tables. It's part of a larger application i'm working on. I haven't gone into details, but it serves a user-purpose. I'm working on something that other people can use, and i'd rather not have in my setup tutorial a link to a php server and phpmyadmin. I'm trying to make a user-friendly GUI that can do it. Even if i had the slightest idea of a GUI to manage mysql tables, i can take it from there and change it and program it better. I know python. 
Thanks for sharing! +1 for creating your own solution when you couldn't find one to satisfy your needs.
it doesn't hurt to ask if anyone knows and just because I don't want to use third party tools, for the sake of integrating it with my application, I shouldn't have to be treated like crap
&gt; i'm working on. I haven't gone into details, **THAT'S** your problem. You want help, but you didn't communicate a VERY IMPORTANT detail. Your initial comments were those of someone who didn't know what they were doing. If there was no more contextual detail to this project, i'd say you were a newb. As-is, your only problem is that **you failed to communicate the project specifications and requirements.** Don't be an ass because you can't communicate effectively. This stupid-ass argument isn't my fault. You need to learn to communicate. You will never reach your potential as a developer if you can't effectively communicate the project specifications and requirements, because the project requirements are a PREREQUISITE to being able to properly design a software system. It's always the first or second step in the software design process, long before you even use UML or write code. Take care of your shit properly and this won't happen in the future.
ok dude you downvote every one of my comments im done talking to you, you're being a prick. I was asking for help not your bs attitude. By the way, I did web development for 6 years professionally. I've also been programming in Python for a while. I also served in the military and law enforcement. Pretty sure I know how to communicate. You're being a tool
I made it pretty clear that PHPMyAdmin wasn't the main 'solution' I was proposing. Based on your initial comments, my main proposal was MySQL Workbench. The fact that you got that wrong is your fault because you haven't been reading my comments and listening to me.
&gt; I'm trying to avoid running a web server for a couple reasons if you're trying to avoid running a web server, then MySQL Workbench is the solution for you. You can give users access to different resources in the database based on database user permissions. You can even limit access to certain columns or rows in any table. If you know what you're doing with MySQL, you can provide a powerful and flexible system for database management. Also, MySQL Workbench can do everything you need, because it is the official db management software for MySQL. edit: you can also do all of the above permissions stuff with remote users. You can create different permissions and login requirements for remote users. I'm pretty sure MySQL has the ability to ensure the remote database connection is secure through SSL or something like that. Also, If the people managing your database are too newb to use MySQL workbench properly, they're too newb to manage a database.
I am currently on the 10th app and have taken a few classes with coding so I can try to help if your have some questions! 
I use MySQL workbench. What's the other reason I mentioned? Did you read that part?
I'm creating a user friendly application. I'm not asking people in my setup tutorial to install mysql workbench to manage 3 tables worth of data
Yes I am, pm me
I'd be down!
Could someone please show a realistic use of the trailing comma for making a tuple? I'm starting to wonder why it isn't a syntax error or, at least, pylint error yet.
I'm making a non developer user friendly application thats not about managing a database. It's about managing 3 off topic tables in a database. It won't be called a 'database' and 'tables'. The information is relevant to the application. I wanted it done in GUI form.
Phpmyadmin/XAMPP or HeidiSQL
&gt; I'm not asking people in my setup tutorial to install mysql workbench to manage 3 tables worth of data then we have a difference of opinion. Either way, if you want to enable them to manage the database properly, the GUI needs to be extensive and powerful. If they are the DBA for this data, eventually either you will need to create a software package to rival MySQL Workbench or they will reach scenarios where they will need a tool such as MySQL Workbench. Even if they aren't the DBA for this data, they need a powerful application. This is the kind of issue i'm talking about when it comes to 'reinventing the wheel'. Either you are doing something that has already been done, or your users will occasionally need the MySQL Workbench to properly manage the database.
I appreciate the help but that's not what I was looking for. I keep getting answers i'm not looking for. I just deleted this submission. I know how to manage mysql tables but I'm working on an application and i'm trying to make a non-developer user-friendly GUI that can manage 3 tables in a DB of information that isn't called 'tables' or 'database'. It's part of a much larger application I'm working on. I was curious to see if there were any python devs that had experience making GUI's in Python and knew how to view, insert, modify, and delete rows in a GUI form. I've used a ton of MySQL clients because I've done advanced web development for about 6 years, but this is a more Python related question. :| frustrated, but thanks anyways
If you are creating an application designed for regular users (not SQL experts) to manage MySQL tables, then we have very different ideas as to who should be managing such data and why. Good luck to you on your project, but I really hope you reconsider your attitude on SQL database management. And also whatever you call it, if they're managing the data in a SQL database, calling it something else doesn't change the fact that they need skill with SQL and DBA.
Python is a very powerful and flexible language -- you can do a lot with it. I think the suggestions at the end of your course were pretty good: start learning Django, PyGame, or Pandas (depending on what you want to do).
either way, you sure as hell don't know Database Administration.
That just shows how little about development you actually know. There are millions of user non-developer friendly applications that use databases without calling it as such.. Apps for teachers that keep track of students/grades, apps for medical professionals to keep track of medical information, apps for electrical/cable/internet companies that keep track of their users, and so forth. So no, you're wrong about this &gt; if they're managing the data in a SQL database, calling it something else doesn't change the fact that they need skill with SQL and DBA.
Dude i've built social networks from the ground up. You don't know shit about wtf I know.
No. It's paid.
Aw, I paid $15 for it
ok, so answer this: Which normal form are each of the tables in your database in and why?
in which case you should have called it an API
I'm starting the training from today.. if you use some team communication service like slack or ryver I can send n invite to u.. we can make a small group n study together.. Please PM ur email address I'll send you the invite
I'm really surprised that most are just telling him to use Mac or Linux. I've never had problems using Python on Windows. Compiling can be a little painful but most library's binaries can be obtained anyways
Nice to know that... Just a bit curious, is it interesting?? What is the difficulty level ?? 
Nice, after trying [Pablo](https://pablo.buffer.com/) I was thinking of doing this as part of automating tweets for blog articles, thanks very much for sharing.
Rude
Which social networks would those be? Maybe I know them.
Alternatively, use wget: https://stackoverflow.com/questions/4602153/how-do-i-use-wget-to-download-all-images-into-a-single-folder
I would say that it's pretty interesting. I learned about a lot of different libraries and packages in python and got to build some really cool things with them. The class isn't difficult because there really aren't many tests of your skills. Much of the class is spent copying and understanding his code rather than making it yourself. This class does have some introductory lectures explaining the basics though (I did skip them because I had taken a class on that part before) so there is a warm-up portion of the class. I would also recommend codecademy if you want to test your ability to code basic things yourself rather than just copying Ardit's code.
New version: (supporting multiple lines) https://pypi.org/project/outfancy/#history
Their CS212 is a really good intro to slightly more advanced Python.
Okay, I'm actually insanely proud of myself because I've actually utilized python for a real world problem. This is... like absurdly basic beginner stuff, but even so... I'd made a post on reddit a little while back with a list of games in my backlog, looking for feedback on which games are most worth completing. The list was full of notes from me in Parentheses. I hadn't actually made a list for myself on my computer yet, and cringed at the idea of going through that list and getting rid of all those stupid parentheticals... So I made a little regular expression instead. Probably took about as much time to write since I'm still getting comfortable with the syntax... but way more interesting to write a few lines in my IDE than to go through highlighting everything and deleting it over and over again... 
Why all the extra parens? "Html()(...)" seems redundant compared to "html(....)"
Good bot
I'd recommend, if possible, to bite the cost and just get a Mac. They're not expensive for what you get, you just can't buy stuff in the low end. You can get a used Mac too if you have to. 
I would recommend the simpler option: web scraping amazon for making comparisons on price. And perhaps monitoring the price decrease/increase/sales every day? For the plant project i would just recommend a raspberry pi setup, there are a variety of sensors out there that can be attached.
I wanted separate places to define tag attributes (__init__) and content (__call__). Also, making the tags callable seemed a good way to add things one Inside another 
I grappled with the same exact situation and was actually able to figure this one out! Right off the bat I'll let you know that the caveat is that you have to know how many tasks you want to run in parallel at definition time, not runtime. I use a Variable to control this so that it's a simple config change in the UI if I ever need to scale the number of parallel tasks. The trick is to make use of the XCOM system and wrap all your Python functions so that they pull a certain key from a previous task's XCOM. I abstracted this into an operator that we'll call `UseTaskXCOMOperator` that works exactly like the `PythonOperator`, but takes an extra `from_task` parameter that references the task to pull from, and a `key` parameter that references the XCOM key to use (defaults to `return_value`). Say you want to pull a bunch of rows from a database and chunk them up into n parts for parallel processing. I'd architect a parallized solution with the following tasks: * query your database and push the result to this task's XCOM * pull result from ^ and split it into n lists, each a chunk for a task to operate on, and push each chunk to this task's XCOM with a unique key ([0..n] as strings) * create n `UseTaskXCOMOperator`s, each with a different key, to pull their own chunk from ^, operate on it, and return the result * gather the results from all n `UseTaskXCOMOperator`s into a single flattened iterable Since you know n at definition time, your DAG would look something like: PARALLEL_TASKS = Variable.get('PARALLEL_TASKS', deserialize_json=True) dag = DAG('parallelism-test-dag') # SomeQueryOperator pushes its result into the task's XCOM query = SomeQueryOperator(task_id='query-a-database', params=whatever) chunk = UseTaskXCOMOperator(task_id='chunk-rows', func=some_iterable_chunker, pull_from=query) dag &gt;&gt; query &gt;&gt; chunk for i in range(PARALLEL_TASKS): key = str(i) transform = UseTaskXCOMOperator(task_id=f'transform-row-chunk-{i}', func=some_transformation_function, pull_from=chunk, key=key) chunk &gt;&gt; transform The actual `UseTaskXCOMOperator` is a bit more powerful than what I've described, capable of pulling values from multiple tasks, pull from inference through upstream dependencies, transparently pulling from tasks in subdags, missing key error handling, and some other fun logic. After writing this I was really able to turn my DAGs into a powerfully dynamic data pipeline rather than a cron script with a nice UI. That said I really wish I could throw data on a queue and have an arbitrary number of workers pull from it until it's exhausted. Especially when dealing with files you'll need an appropriate chunking algorithm to get roughly equivalent overall filesizes, otherwise you'll have a wide variance in your tasks that could result in missing SLAs.
Well, at work I am forced ti use py27... I use py3 at home but I'm not updated on how much py3 in production 
i was thinking to use arduino and 2-3 different sensors as for minor and am broke atm too, but i can improve that for major project. Is the idea good? i have to give a written report to teachers next week.
You can use python's basehttpserver, and serve a simple webpage on your computer/raspi. Create a simple html page(s) with buttons/actions you wish to do. Then you will need either a raspberry pi or an arduino to interface with the electrical side. So, when you receive a specific request you can map them to specific actions on the microcontroller. On the arduino, you have a sketch that listens to the serial input for specific strings - say "on" and "off" and performs the actions accordingly. You can easily test this by opening the serial monitor and typing the strings manually. On your web page, you can have the buttons that can send some data - string (this can be either get or post). You have functions/scripts on the server that respond to this request. Based on the data sent, the various actions can be achieved - turning the lights on and off. Since you are using a servo, separate the power supply. That is, don't power the servo from the logic board (arduino or raspi). This will do fine for testing, but in practice, servo draws more current under load. This won't bode well for the logic board. As you can see, you can learn a lot on this simple project. If you are looking for pointers, shoot me a message. I'll be glad to help. 
I've been meaning to do something like this after porting WTForms to PHP got my OO HTML bug going. Do you have a Slack or anything set up for contributor communication? I do QA for my day job so doing some dev and off-time testing would be a nice change of pace
Thanks for the reply! I'll start here and certainly shoot you a message if I hit a roadblock.
I am in 
Ah. Then I'd recommend putting at least one attribute in the first example in the readme. I think it's nicer to explicitly have a kwarg "children" but I see whee you're coming from. 
Yes the idea came from looking at pyquey, then I wanted to do something with the jQuery building API in it.
Yeah I need to make better examples in the readme for sure! I tought about adding children in kwargs, but seemed more readable do add a couple parentesis. 
If you want to learn basic python, i think this course is good https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-11 cs: https://www.edx.org/course/introduction-computer-science-harvardx-cs50x
Take a look at OpenCV.
&gt; Package management (yum or apt) and pip . Writing basic Python code on a Mac is ok but once you have to stop compiling package you start to think "why does it have to be this way? I'm not following: mac has pip and brew. Most of python stuff is there.
Thanks, I'm glad you found it informative!
Hey so the explanation for this is that when we run the line: yesterday_games = game_section.findAll('',{'class','teams'}) It returns a comma delimited list, where each member of the list has the data for one mlb game from the day before. To find out the opponent we iterate through this list and when we find a 'winner' or 'loser' tag that is the 'Blue Jays' then we know that the other team mentioned in that list entry is their opponent. By scanning the list one game at a time, we are isolating pairs of teams that played each other.
Poor instructor is just trying to make a living teaching and everyone is just ripping his course.
I love you
It covers python 2 or python 3?
It covers python 3
Please PM your email id, will send you invite 
Oh i already know a little python 2 so don't know if it will work for me.
The best part of this course is, you'll get to develop real life applications. If you have already done some cool projects then I think no need to join.. 
Yeah i like that part haven't done much projects with python but i dont know if id like to transition from python2 to python3
Nice approach. I would like to see an example in a larger and more complex setup. For example, how would I decouple the booking logic from the notification logic with two seperate apps.
I think it is a pretty good idea and you should work on it..it would require both technical and software knowledge and would be very exciting too :)
Can't hurt to learn both
why wouldn't you?
Well..... yes, it does have pip at this point and brew can be added. I've been using OS X since the first release and Apple has been slow to adopt a complete Python solution. Honestly I forgot pip was there. Somehow, at least to me, Linux seems to be more "Python developer friendly" than OS X but that said OS X is still my most used OS, in fact I'm trying this on a Macmini7,1 connected to my HDTV in my living room. 
&gt; did you consider implementing OAuth2 authentication instead of password login? I didn't. Since this was a personal blog script which is meant only for one user, I didn't bother much with the login mechanism. Do you think it's a must?
thanks :) i hope teachers like it too and everything goes as am planning
It works better in Linux just because Linux has the drivers to put cards in monitor mode.
Do whatever you truly want to do man. There are countless arduous sensors I just looked up for soil moisture. I was just saying if you don't have that much money you could do a project that's purely software. Good luck though man!
I've only ever played with it a little, but this might help. https://magic.io/blog/asyncpg-1m-rows-from-postgres-to-python/
What to you mean by the actual query takes about 5 seconds ?
First thing to do would be to get an ras-pi and a servo and get those to work together. No matter what that'll be step one 
Oh, yeah, just perpetuate the problem.... Alternatively, you could learn Python 3 so we, as a whole, can move the fuck away from Python 2.7.
Would you recommend it to someone who's done a few webapps in python but never any other kind of projects in python?
&gt; i dont know if id like to transition from python2 to python3 That's a bit like saying "I don't know if I'd like to transition from Early Modern English to Modern English. I like the word 'thou'." Python 2 is *obsolete*, you really have no choice *but* to learn and use Python 3.
I'm actually querying from Amazon Redshift (a postgresql-like db) and when I log into the dashboard the amount of time for the query to complete is about 5 seconds (I assume this means the amount of time it takes until all of the data is transferred and the connection has terminated).
No I haven't set up anything yet, I'll do for shure
I am no expert in this.. but i think python 2 and 3 are similar, just with a few changes. instead of paying for the course, you can go for the free option.. someone share a torrent link in this thread that might help. If you are planning to join please let me know, i'll invite you to our small learning team.
They are very similar but python 3 is objectively better 
What you assume is likely to be wrong. From a database point of view the time used to transmit the data is not relevant. The database dashboard is here to detect bottleneck on the The dashboard is most likely give the time that the database retrieve the value from the database not the time the data is transferred. The bottleneck you have is likely to be the network, because 3gb in 5 seconds means 0.5gb/s network speed which is a lot.
JSX coming to a python near you
Its just for $10 by using coupon code. [View here](http://gainfromhere.com/online-courses/)
This is basically dynamic scope right?
thanks
I'm curious, are you not interested in Django?
I would be interested in joining a study group
PM ur email id, i'll send u invite
The irony of a free tutorials site ripping off a paid site, only to block you if you don't allow them to make money via ads....
`functools.partial` is what you want.
Take a look at [Requests](http://docs.python-requests.org/en/master/)
They are reuploading, removing the title so that you don't know it was from pydata, and then enabling ads on there. Even if the license allowed it, I would think that is morally incorrect.
Yev from Backblaze here -&gt; Hi! You could take a look at some of our integrators. We have a lot of "simple" solution integrated that can help folks (like me) who aren't keep on DIY :)
We can make a group on any app, so we can communicate and learn from each other. Like we can make group chat in iMessages, or kik, or .... . Any on IN, reply
Tabs are arbitrary and spaces are explicit. The indentation of a tab is dependent on the editor and the language. So your language could consider a tab as 8 spaces, whereas your editor is set to see tabs as 4 spaces. Worse, someone else's editor could have it set to 3 spaces. Since whitespace controls language flow in Python, you don't know what you're getting unless you are the only person working on it. Spaces on the other hand are explicit. A single space for you is a single space for everyone. Most editors can be set to insert 4 spaces when you hit the tab key, so you can still work with the convenience of hitting a single tab key, but get the better experience of using spaces
Fantastic project!
we have made a team on slack. please PM ur email id, I'll send u invite
From your example: def multiple(x): def _inner(y, z): return x*y*z return _inner `multiple` is a function which takes one value `x` and returns another function which takes two values `y` and `z`. times20 = multiple(4, 5) # won't work times40 = multiple(2)(4, 5) # does work The [pytoolz](https://toolz.readthedocs.io/en/latest/index.html) package has a `curry` function decorator which is pretty useful.
Your best option is to use redshift's unload function to export your data to s3 and then do the manipulation. Extracting data through queries in python is painfully slow because all data is going through the leader node and all 3gb need to be converted to python data types which is becoming your bottle neck. Dependent on your data manipulation needs either try to use sql or create python udfs in redshift. Both will be a magnitude faster. 
Well that was good of you.
Oh dear god.
Hey everyone! I am excited about all the positive interest in this course. We can move forward in organizing to start studying together and taking the classes. We have good team strength and I've sent invites to all, if you haven't received one send your email in private message. Step 1: Send me your email address and I'll invite you to the Slack group. Please write an introduction message in the slack group so we get to know each other. Name, age, location, personal interests Step 2: Enroll into https://www.udemy.com/the-python-mega-course or download the course from https://www.freetutorials.us/the-python-mega-course-build-10-real-world-applications-udemy-free-download/ as suggested by aswathm78 for free Step 4: Complete all the session and lectures one by one. You should complete the orientation by yourself. This first session is basic setup and installation later it will get more and more difficult and interesting. Feel free to post in slack if any help required and share the tricks and tips if you find one. Happy learning “Let’s do some python” *** Disclaimer *** I am not associated with Udemy, slack or any other website and want to be clear that I am only doing this because I think it will be more enjoyable to do this process with other people. You are responsible for your learning experience and paying for the certificates during the period of time. 
Thanks worked perfectly.
Did you type() it?
That isn't valid python syntax so I must assume that it's the pretty printed form of something. Since you have a debugger, inspect the type while it's running
Wanted to try this, but it looks like I can't add to a repo I'm a manager at with a different organization, only to MY repos? If I'm mistaken, I apologize and would love to know what I did wrong. 
Ack, yeah, that's an issue on the GitHub side - you need to be a GitHub admin of the repo. We can't change it on our side - sorry! :-(
It isn't that difficult: In Google Cloud, section Compute Engine, you create a new VM instance, where you choose the Linux distribution. You then specify disk size, RAM, CPU etc, and in a few minutes, the Virtual machine is ready. Then you just move the project there as if you would move it to any other linux machine. If you choose Ubuntu 16.04 LTS for example, both python 2 and 3 are already preinstalled. So you just install what you want, and for example if you use git, you just clone the repository on that target machine in Google Cloud.
I also just bought the course, pm me! 
Pm ur email id 
If people keep supporting python2 in new projects if gives people more of a reason not to upgrade.
Thanks for the response! I'm not experienced in Linux I work on an mac. Can I use things like pip on a VM? I mean once I set the thing up does it "feel" like a normal machine from the command line? The biggest thing I worry about it that some version of a package I use won't match their version and I'll have to do a major refactoring. I use one function in statsmodels that was just added so this sort of issue could actually cause a big problem on the data science side.
Is this free
Very nice! Exactly what I was looking for
Those topics are awesome! I think what would be cool would be a modern python flask/jinja2/bootstrap development tutorial. The ones that are currently on youtube are like 1-2 years old, and from what I've been doing for work, there's so much potential for quick prototyping utilizing these frameworks to visualize programs and applications. I.e. I have an API server that spits out a jinja2 bootstrap template, and I can go on the endpoint to test out various APIs that I've written. This would definitely be a cool project for beginners or new working python developers! Others I think would be cool is how to port one python project to another (virtualenv, wheel, docker), or how to create APIs using django/flask. New backend developers would probably enjoy a how-to-get-started creating your own backends for front-end devs. 
This sort of looks like HOCON. https://github.com/chimpler/pyhocon 
In UBo, just click the local rule block box for www.freetutorials.us and the javascript goes away. I don't encourage using this site, but I do encourage not giving them ad revenue if you should happen to pay it a visit.
Thanks for the feedback! Django/Flask are frameworks I"m not too familiar with, but I've been meaning to take a more indepth look at them. 
Either keep trying or look up the answer and learn. You CAN learn by examples and others' code. In fact, that is how you are going to learn the majority of the time. Are you asking if you should quit programming? If so, do you even enjoy it? If you don't enjoy programming then why are you pursuing it? Check out /r/learnprogramming next time for questions like this though. Good luck.
When I was starting out with Cython the tutorials on Youtube weren't super useful. Sentdex made a basic one but it really didn't go very far. So I went ahead and learned through reading lots of documentation. Learning Cython itself isn't hard but setting it up on Windows if you aren't familar with creating modules with distutils is annoying. 
Should you quit? I don't think so. I tried to learn python 10 years ago and I got demotivated because I couldn't figure something out and I quit. Honestly, I quit a lot of things back then and I regret a lot of them. About 4 years ago I had a problem that I could solve with programming so I went back and struggled through the things I didn't get and now I'm spending almost all of my time on projects (and school for computer engineering) that I truly care about and that A) make me money and B) help the people I care about. So if you find programming interesting is say don't quit and keep trying. Secondly, looking at a solution isn't cheating. Code doesn't happen in a bubble, we learn from other people and use and adopt the styles of code that we've read. So if you're stuck than I think that it's fine to look at the solution that someone else has come up with because then you can take a step back and think about their design choices and decide if you would have done it the same way or differently. Lastly, /r/learnpython is a great resource if you really don't want to look at a solution. And there are always resources to help you when you're stuck whether it's when you're learning or otherwise. Happy learning!
A quick way to get a GUI-like text input is to use a tiny web server: https://stackoverflow.com/questions/12277933/send-data-from-a-textbox-into-flask and an example backend that queries a DB: https://stackoverflow.com/questions/38550263/flask-python-mysql-using-where-clause-in-a-select-query-with-variable-from N.B. that answer needs this sql parameter fix: query_string = "SELECT * FROM p_shahr WHERE os = '%s'" cursor.execute(query_string, (username,)) 
Personally, I would like to see more on GUI programming. Though there are a lot of basic or introductory videos, I would like to see videos that cover advanced PySide and wxPython.
This isn't YAML, but it's sorta similar. If you are just looking for a nice human readable format to serialize to it might fit the bill.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hey, I'll do it. Wanna create a subreddit? 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Be aware, if you're going to post text as images, [screen reader](http://enwp.org/screen_reader) users like me won't be able to read your text. Please provide alt text on your images, or write the text in your posts so we can see it!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
an SNMP program for manage certain customers routers via SNMP, connected to a SQL Database which save all IP Address of management and their customer ID, using PySNMP... If you need the code for your applications let me know, it uses Get and Set commands which are handy,
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Not too abnormal with 10Gbe and 40Gbe, accounting for TCP and Ethernet frame overhead you can easily do 1GB/sec over 10Gbe.
Even if it wasn't better. Py2 is supposed to be dead... 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I looked at the answer and, if it helps as a hint, the author uses multiple functions to solve the problem (also the answer the author gives seems really lengthy; it could probably just be shorter if the "print" was brute-forced by stringing together a bunch of "+", " -", "|", and "\n"). If you get frustrated again, maybe look at a different book. The author hits recursion, then the return statement, then iteration... which seems kinda out of order and might (by itself) have made me quit.
Cython! Thanks I will look into this. 
Or we could just pay the poor guy who put together the content the $15 or so he's asking, and not provide any clicks to content thieves.
Use which python3 To verify tue location of the binary on your system. Then use #!/use/bin/python3 Or the path to python on your system. 
Thx
You can also add `alias python='python3' ` to your .bash_aliases file. If you do this also remember to alias pip to pip3.
I suggest just using: #!/usr/bin/env python3. So your script will work regardless of where your distro (or virtual environment) is setup.
Cool. One worry: particularly with the text-over-image option, you're giving people a convenient tool to create unreadable images. And history strongly suggests that they will do so, in great numbers. I therefore suggest that the default be white text with a black outline (or perhaps that could be the default if an image background is specified). Now, it appears that your package does not support outlined text. [Here's a relevant StackOverflow](https://stackoverflow.com/questions/41556771/is-there-a-way-to-outline-text-with-a-dark-line-in-pil) for doing it with PIL. Regardless, nice work.
Thanks for your reply! I really appreciate it When testing different color palettes I saw that sometimes text became unreadable. I added possibility to add shadow to text, so that it would be easier to read. The problem is that there is no way of generation true shadow in PIL and I used info in the link you provided to generate shadow, basically my shadow was outline with constant stroke width of 1px. I didn't think about just sticking with outline and dropping shadow support, but you are right. This "meme text" is definitely more readable. I will change shadow to outline and provide better examples in README. Thank you
Thank you for pointing out possible troubles! I will think about how to make images more text friendly for screen reader users
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Well I currently can do that with pyup with no issues... 
`ls -l $(which python)` tells you which version of Python the `python` command on your `$PATH` symlinks to. 
There are many requirements to consider (discuss with the client). From the top of my head: * Availability / monitoring / software and data backups * Supported throughput (load on application) * Deployment of new versions (how this should be done, can have downtime?) + rollback. You need procedures here. Should the deployment and configuration be automated (usually yes)? * Costs: (1) of the infrastructure (2) development / maintenance * Configuration - how do you configure your app? Especially important if you have several environments: prod/staging/qa/dev. You might conclude that your software must run on more than one VM (for availability or deployments). In this case managing a directory is not a good option, should use external storage. You should consider "Serverless" because it solves many problems you would otherwise might need to solve yourself. The downside is adaptation of your code. See https://cloud.google.com/serverless/ I would still suggest bringing systems engineer consultant (sometimes incorrectly called "devops") for a day or two to help at least with overview and requirements and kick start.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
&gt; The biggest thing I worry about it that some version of a package This might help: https://pip.readthedocs.io/en/1.1/requirements.html 
i see it for $195.... damn
 #!/usr/bin/env python3 solves this problem without having to hardcode the correct path in your script.
How long did you try? This is not easy.
That doesn't help with hashbangs
A good two hours last night 
Hey thanks for the reply :) Ya I've thought of bringing on an eng. It's tough since that money would almost certainly come out of my pocket. I'm a DS at my day job and while I'm a decent programmer the time investment to learn all of this might outweigh the costs of hiring someone for a few weeks. Serverless sounds way simpler though. What's the downside of it? Just not having control over the exact hardware you're running? I just need the most basic setup possible. For context I'm running the whole project on a low-end MBP now without too much issue. I think at scale I'd need maybe 5x the power. Downtime isn't really a problem since I only run one job at the end of each day. Missing a day isn't catastrophic and most of the data is replicable from the other api (googleads). We only store it to avoid the daily traffic limits. The file directory is basically a proxy database and I know I'm going to outgrow it immanently. The amount of data we're managing would be on the order of a few gigabytes at scale so I've been cutting corners to focus on the ML side. That said navigating the directory and joining csv's is pretty archaic haha don't judge me... Anything you'd recommend as a DB that plays nice with the cloud? 
You would recomend CodeAcademy even though they're still on Python 2? 
Probably, but op did not say that he has 10Gbe between the pyhon program and the database. By the way he did not say too much helpful to help him in the op.
Working on a python script to reconcile millions of accounting transactions vs bank using pandas.
we have a team on slack, please send ur email id, will invite u as well
Looks like you've already have this sorted out, and I don't want to add too much more complexity, but I'd really recommend getting the hang of virtual environments through the venv module. Makes choosing your version and installing packages a lot simpler, and in the end makes your code easier to deploy or distribute. An alternative for managing packages is a Python distribution like Anaconda or Canopy. They can be pretty fantastic for scientific computing, but makes code a bit harder to deploy and isolate from the distribution, I find.
No its not free, you can try downloading the torrent if you can. that is free but if you want to do it from udemy, u'll be charged
I made the slack channel: tempy-dev.slack.com PM me you mail and I'll add you.
please pm ur email id, i'll invite u
we have a team on slack. please pm ur email id, i'll invite u as well
It does not prevent SQL injection, in fact, if that variable was ever supplied by the user then it could enable SQL injection. 
Programming basic data structures is a good exercise in programming! Here's my unsolicited criticism: 0. The biggest issue is that with a queue, enqueuing and dequeuing should be fast. Your `dequeue` is fast (O(1)) but `enqueue` is O(n). 1. `get_next/set_next` is not very pythonic. Just use `.next` instead. 2. `Node.__init__` has a default value for `data`. This seems sorta silly. 3. `Queue.__init__` takes a Node as an argument. There's really no need to do this, and it breaks encapsulation - the caller should not presume to know what a Node is. 4. `dequeue` prints on failure. That's great if you're calling right from the REPL but stinks when you're calling the function from another function and need to know whether it succeeded. Return a value or throw an error instead. Same for `is_empty`. 5. `.size()` is not very pythonic. Implement `__len__` instead and get the size of a queue with `len(my_queue)`. 6. `print_queue` is very misleadingly named - it doesn't print anything! I would instead implement `__iter__` which would make `list(my_queue)` work to get all values in a list.
I have been on vacation for the past week and I can't believe I'm actually excited to go back so I can program. 3 days before I left for vacation, I was watching some mr. Robot and decided I needed to practice some coding. When I was looking up error handling for python, google decided that I was worthy of getting an invite to their foobar challenge. For those that haven't heard of it, it's a series of programming challenges put out by google. Is apparently super selective and not well known but people get it randomly by looking up certain terms related to python and there's no way in without an invite. Tbh I'm kinda sad that they wasted it on an amateur programmer like me but if I'm good enough to get an invite, I'm good enough to try my best lol 
What's Bagels?
`which python` is enough to tell you the path.
just PMed you. excited about joining in a study group. have been looking for sth like this for a long time 
Python is cool and beginner-friendly. Find a good web app idea and start coding, you'll learn fast and better than doing stupid and "hello world" tutorials. Stack overflow is your friend. Just my 2 cents.
I'd suggest "Automate the Boring Stuff with Python" and remember Google is your best friend! 
Just sent u the invitation, plz join
Try PyCharm. Also, try /r/learnpython.
They are taking over! Takeover bot: Yes but free ice cream for everyone! Me: shrugs...
Pycharm is awesome but resource intensive. VScode is nice and lightweight 
Not if it's a link, it's not. It will tell you the link, not the target. It's like listing the shortcut rather than the shortcut's target. Linux tends to use symlinks quite liberally to make it easier to manage different versions of programs. 
Thanks I just did it
I'd suggest looking at the wiki link on [r/learnpython](https://www.reddit.com/r/learnpython).
&gt; Do you think it's a must? Absolutely! OAuth2 framework is recommended over HTTP form authentication and is more secure. You can still enforce single user-mode logins with frameworks like libauthkit. 
This answer on [stack overflow](https://stackoverflow.com/questions/43339162/how-to-convert-jupyter-notebook-to-wordpress-suitable-html) shows that Wordpress has some support, but Blogger?
The advantage to this method is that it will call the first version of python3 found on the user's PATH - so you don't need to know where python is installed. This will usually work as desired regardless of how the system is set up.
I've always been a fan of the environment shebang: ``` #!/usr/bin/env python2 #!/usr/bin/env python3 ```
[This](http://communicrossings.com/html/js/pfb.htm) is Bagels. However, I have realized that it is way harder than I initially thought. I may or may not continue this.
~~Ahah. I read and understood what was happening and the same embedding mechanism works with Blogger.~~ Unfortunately Github gists do not show Bokeh plots so there embedding in Blogger (or Wordpress), does not work either. All is **not** well :-(
Yeah, that's because they're using GitHub's OAuth model, rather than the new apps setup. We went with apps because it allows you to give fine-grained permissions over which repos you're giving access to (with OAuth it's "all private repos" rather than "this specific repo"). Still useful feedback - thanks!
Not sure about Stack Overflow, it can be a good place to look up information but as for asking actual questions, I think it's up there on the list for one of the worst places to ask questions in.
If you're trying to find out whether it's `/usr/bin/python` or `/usr/local/bin/python`, that's not really relevant.
Try Geany
**Senior Python Developer** - **Israel** Handling bleeding edge python 3.6 code with latest celery, sqlalchemy, tensorflow, pandas and more, we proud ourselves of using the latest and greatest of what the community has to offer. Working with some of the smartest and most experienced entrepreneurs in the Israeli tech industry. Operating in an industry that craves for tech solutions to business requirements. * Super short dev cycles, your code, in production, ain't a better feeling. * Deployment on AWS. * Running python on our own hardware as well. * Some knowledge in machine learning required. Read about us and PM me, fell free to ask questions in comments as well. http://www.fooddive.com/news/grocery--analytics-company-appcard-acquires-loyalty-program-prologic/449141/ http://www.geektime.com/2016/02/25/appcard-raises-20m-series-b-to-revolutionize-customer-loyalty/ [Hebrew1](http://www.calcalist.co.il/articles/0,7340,L-3718995,00.html) [Hebrew2](http://www.calcalist.co.il/internet/articles/0,7340,L-3682026,00.html) some more job description [here](https://appcard.com/careers/) but I think the description above is a better portrayal of the position. 
Async and await coverage seems to be lacking still. It would be nice to have some good coverage of generators, generator chaining, and async workflows. There are some on there but none that are really broken down into beginner friendly terms with real world examples. With the landscape moving rapidly to async everything I think that would be helpful for a lot of people migrating to that model from classic threading/multiprocessing.
Pandas has a function read_clipboard. It may be a bit overkill, but you can inspect the source to see how they deal with that. https://github.com/pandas-dev/pandas/blob/v0.20.3/pandas/io/clipboard/clipboards.py
Gotcha. Well, as long as I'm giving feedback, I use pip-sync in most of my projects, which defines an in file and an output file which revolves the compiled requirements. It would be great if you could take limitations set in the in file into consideration when suggesting the updates. 
Um, Pandas is just using the code from pyperclip.
In what way does **pyperclip** not provide this feature? import pyperclip v = pyperclip.paste() Should put the current contents of the clipboard in **v**. **Edit**: we have no idea what OS you're using or what you've tried. **Edit Edit**: also, this should be on [r/learnpython](https://www.reddit.com/r/learnpython).
 import collections class Queue(object): def __init__(self): self._queue = collections.deque() def __len__(self): return len(self._queue): def put(self, data): self._queue.append(data) def get(self): return self._queue.popleft()
PyCharm (and JetBrains IDEs in general) are among the best I've ever used 
&gt; I need a good IDE Ha, you certainly are a Java developer. You don't need an IDE for python. Just use any text editor, and any terminal.
Ill second vs vscode. Nice and light.
GitHub doesn't directly but can't you link to an automatically generated nbviewer page?
Try codeacademy: https://www.codecademy.com
But then the question becomes where to put that page.
I’d take Visual Studio over any JetBrains IDE any day, though. Personal preference, really :P
Definitely personal preference! I don't mind VS, but I had to use it for a full year on the shittiest laptop ever so it left a bad taste in my mouth On my beastly home rig, the resource use isn't a problem, though
Ah yeah, true. It will kill any kind-of-ok laptop and below. But the syntax highlighting... Intellisense... Package management... *drewl*
Can't really compete with intellisense, that's for damn sure 
So... did you actually contact a lawyer about that or are you just making assumptions? Because having specific support for outlets that are primarily piracy may allow for the same argument that your tool, which is clearly just for linux distros, is also for piracy.
Searching a site is not illegal.
Well, that depends a lot on where you are and what's on that site.
Helpful new guy interpreter here: hashbangs = shebangs = crunchbangs = #! For scripts in many languages if you put one of these lines at the top and change the file to executable (see chmod command)-- in many cases you can call the script and the OS will just fire up the right bits and bobs to make your script run. ( "./myscript.py" can be the same as "python myscript.py" )
Have you tried looking into first what is a pipeline in continous integration? I recommend reading up on ConcourseCI https://concourse.ci/pipeline-mechanics.html . As that gives you the basic understanding of what your pipeline should be even if you don't use the product. That being said at work we use artifactory pypi repositories to host our releases and on top of that we use versioneer to handle our versioning when we do sdists. It is also important to consider source code branching strategies. Here is a good starter one https://www.atlassian.com/agile/branching which may or may not suit your needs.
 +/u/compilebot python3 def make_grid(rows, cols, box_size): row_text = "+" + "+".join([box_size * "-"] * cols) + "+\n" filler_row_text = "|" + "|".join([box_size * " "] * cols) + "|\n" full_filler = filler_row_text * box_size return row_text + row_text.join([full_filler]*rows) + row_text print(make_grid(rows=10, cols=10, box_size=3))
I would like to see some code reviews. It would be great if it covered topics beyond simple linting issues. Bader does this in a few of his videos but doesn't go beyond very basic issues an ide would pick up. If the review sometimes went off topic and followed a funfunfunction style video - but Python focused instead of the Java stack, that would be great too. :)
Quick thoughts: 1. config file search should respect $XDG_CONFIG_DIR, not just assume it's default. 2. temp directory creation should use **tempfile.gettempdir** and **tempfile.mkdtmp** ... it should also build the directory if it's not present (didn't see that anywhere), and delete the entire directory recursively, not just its contents. 3. why set **home** a second time on a Windows? 4. you should sys.exit(non_zero) on error states 5. you've got options that are mutually exclusive, that's what **argparse.ArgumentParser.add_mutually_exclusive_group** is for. 6. you're using **print** calls for what is really debug information; **print** outputs to **sys.stdout** by default, but a well-behaved POSIX command line tool outputs mainly to **sys.stderr** and only results you might want to pipe to **sys.stdout**; consider **logging**?
Dear u/aphoenix , I did not post to r/learnpython because programming paradigms are not suited for newly pythonistas or it is "how can I..." It was mostly survey type of question at least, designed to open a discussion about comparison about difference between zen of python and Programming paradigms since most of users take them as equal. The theme about Programming paradigms is high level topic since those paradigms are mostly related to complex software problems not some console Program or student assigment. Therefore I would like for you to reconsider, and please return topic where it should be. Best regards. Danilo. 
**Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
If it's Ubuntu you probably have python and python3 executables. Python is python 2 python3 is python 3. Same with pip. /usr/bin/python is probably a link to /usr/local/bin/python. There probably are not separate executables in each location. You may have /usr/bin/python3 and /usr/local/bin/python3 as well. (This is assuming Ubuntu. Not sure how other distros handle it)
Sucks that Autodesk is still using 2.7 for all its products. I asked them when 3 was coming and they responded a few years ago with 'no one is asking for it.' To which I just pointed at myself. I thought it was funny. But alas - still waiting. 
You give the python file execute permission with chmod +x then you just call the file name like this ./python_file_name.py
Example: !book Learn python the hard way
torrent files are not illegal.
 1. Learn Python The Hard Way by Zed Shaw. (3.91/5 *) [Link](https://www.goodreads.com/book/show/8341335-learn-python-the-hard-way?from_search=true&amp;ac=1) &gt;This simple book is meant to give you a first start in programming. The title says it is the hard way to learn to writecode but it’s actually not. It’s the “hard” way only in that it’s the way people used to teach things. In this book youwill do something incredibly simple that all programmers actually do to learn a language: 1. Go through each exercise. 2. Type in each sample exactly. 3. Make it run.That’s it. This will be very difficult at first, but stick with it. If you go through this book, and do each exercise for1-2 hours a night, then you’ll have a good foundation for moving on to another book. You might not really learn“programming” from this book, but you will learn the foundation skills you need to start learning the language.This book’s job is to teach you the three most basic essential skills that a beginning programmer needs to know:Reading And Writing, Attention To Detail, Spotting Differences. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Example2: !author Guido Van Rossum
 1. Guido Van Rossum by Jesse Russell. (0.00/5 *) [Link](https://www.goodreads.com/book/show/16455052-guido-van-rossum?from_search=true&amp;ac=1) 2. The Python Tutorial (2.7.5) by Guido van Rossum. (3.71/5 *) [Link](https://www.goodreads.com/book/show/19074231-the-python-tutorial?from_search=true&amp;ac=1) 3. An Introduction to Python by Guido van Rossum. (3.55/5 *) [Link](https://www.goodreads.com/book/show/475667.An_Introduction_to_Python?from_search=true&amp;ac=1) 4. The Python Language Reference Manual by Guido van Rossum. (3.36/5 *) [Link](https://www.goodreads.com/book/show/475671.The_Python_Language_Reference_Manual?from_search=true&amp;ac=1) 5. Using Python 2.6: And Installing Modules (Python Documentation Manual Part 3) by Guido van Rossum Guido van Rossum. (0.00/5 *) [Link](https://www.goodreads.com/book/show/10152513-using-python-2-6?from_search=true&amp;ac=1) *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Hmm, are you interfacing with the website or building the game in python first and then going from there?
I'd be interested. 
No one said they were. You made a blanket statement that "searching a site is not illegal" and this is factually untrue in many jurisdictions. For instance, if nothing has changed in recent years, I believe the DMCA still makes it illegal to in any way transmit or receive a copy of DeCSS; scraping a site that hosted a copy of it in its HTML would still be illegal, even if you didn't know it was there (it it was in a comment that was never rendered). In less progressive regimes just attempting to access a site that is vaguely anti-the-generalissimo can get you disappeared, re-educated, or politely but very insistently asked to step in front of an ack-ack gun. Laws are stupidly pedantic things, written specifically so that they can be construed as widely as possible by those in power. *Right now* you might find that whatever laws criminalize your behavior aren't enforced, this doesn't mean they won't be.
True enough, I was falling asleep while I wrote this.
Somewhere on here: http://www.vfxplatform.com (on mobile can't find exactly where) they mentioned targeting Python 3 for 2019. So far, in my own research, Autodesk products typically appear to follow this table. Would be surprised if then or shortly after we see a change. 
I'd strongly encourage you to look at the other answers. There are better ways to do it.
I am pretty new to Python, but I don't see a need for an IDE for this language. Everything can be done easily from the command line and any text editor. I have been using [Atom](https://atom.io/) and really like it.
I am a fan of [Learn Python the Hard Way](https://learnpythonthehardway.org/)
Nice! Good job! Noticed you're putting comments into a database. Using that for anything?
There is a lack of real-world / a-day-in-the-life-of type videos on YouTube that I think would be really interesting to watch. As a self-taught beginner, I would love someone working on a project exactly like they would normally, but talking through what they are doing and why.
Ned Batchelder Blog https://nedbatchelder.com/blog/ He is sharing not only a general python news, but also problems he is facing and the way he solve 
This is a really cool idea! Make a post if you decide to do this -- I would be interested in reading about how you did it and what challenges you ran into.
&gt; are you interfacing with the website I'm not sure what that means but I am not related to the website whatsoever, it just happened to have the rules of Bagels on it I am just making a Python script and running it in my CMD 
Yes. It is to avoid the bot responding more than once to the same comment. I also store the time it was replied to, because if it gets used a lot I might want to do some analytics on the usage.
The command prompt will close as soon as the bat file finishes executing unless the script has a line telling it not to. Have you tested to see if you can paste the expected content from your clipboard after the script runs?
I know this is considered best practice buti have never found any benefit. I know it is supposed to be mostly symbolic links but it is pretty slow over my horrible connections. ( Travel non stop to very remote places)
Thanks for pointing this out -- I didn't realize there was even a plan. Just read through the list -- indicates that it is 'planned for 2019' which likely means Maya/max v20.
Is your bot using a stream? Or it runs on a schedule?
There is no change to the clipboard. Do you see anything wrong with what I typed? Like am I supposed to have MyPythonScript in both .py and .bat?
Using keras and a synthetic data generation model we developed to train and classify Hot Subdwarf B acoustic mode pulsators (pulsating stars).
It runs in a AWS EC2 instance (free tier) with a crontab job. * * * * * cd ~/BookBot/ &amp;&amp; ~/.virtualenvs/bookbot/bin/python bot.py &gt; output.txt 
Ha - well I think we're just assuming that's the plan for Autodesk based on trends, but unless we're really on the inside we'll never know for sure!
I like this idea much better than using the templating the html tags. I did proposed this idea to another project but it didn't fit into it. I think we should be using the power of python to create the html form not the other way around. I wanted to create a similar project where I would build the html form into python. I have very good knowledge of html and jquery so I can test the code or contribute to it. I have knowledge of Web mapping that could be added to it if there is interest. Very good work. I know of some of the gotchas with representation in different browsers just like jquery. Very good work. I can see a purpose to use this project to create my idea for a weather Web site on the Internet. 
I thought doing the codecademy class was very helpful despite it using python 2. The only real issue I've run into with switching to python 3 is that I have to put parentheses around my print statements. 
A lot of the apps that he does in this class are web based, so if you've already made some web apps in python you may want to try a different course. 
Eh...that's really not *that* much if you are brand new to programming, really. First, you don't know all the options you have, meaning you don't know various ways to get things done. You have a very limited toolkit. Second, you're not used to thinking in this very procedural way, breaking things into pieces and then putting them together effectively. Last, what you think of as two "good" hours may have been two distracted or going around in circles hours. What was your approach or thought process?
thanks mate :) yeah i will make a post if i work ahead on it
From one bot author to another, nice job! Some minor comments after a quick skim of your code: I would have avoided using permalinks to refer to comments. If I remember correctly from [my own project](https://github.com/purrcat259/sockbot), is that comments have their own unique ID - which would use up less space in the DB and make queries faster. Even sounds like a good opportunity for some side money - maybe add links to the books on amazon / other services, together with a disclaimer that the links are affiliate links. 
I'm also a beginner so I'm not too sure if I'm even using the correct terms TBH. But essentially what I meant was are you playing bagels using a website or are you building the game in python first, and then creating a script to play the game? But that does seem like a somewhat complicated project due to the fact that you're essentially designing AI. It's very hard to get a computer to guess something correctly consistently even if it seems like common sense to you. Or rather, making a computer do anything that seems like common sense is really hard lol
Wait, do you use both? Or are you just listing both for posterity?
_Wait, do you use both?_ _Or are you just listing both_ _For posterity?_ &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^- ^thevoiceless ------------------------------ ^^I'm ^^a ^^bot ^^made ^^by ^^/u/Eight1911. ^^I ^^detect ^^haiku.
Does your script rely on a module that is not available outside of your virtualenv? Add a new line to your .bat file: pause This will prevent the CMD window from closing automatically so you can see any errors that are being returned.
Hmm! Thank you! I will need to see how to change the permalink to unique ID without disrupting the service (making it comment again on everything). And about the side money, that's a great idea, I'll think about it, but only if the bot gets some use.
You only use one.
Find something fun you want to program and do it!
Dan Bader: https://dbader.org/blog/ Looks like he takes some time thinking about how to best explain some subject. Well worth checking his posts and tricks.
I think that leaves the coordinates in the list, so you'd be stuck doing 4 linear remove operations.
Doug Hellmann's Python Module of the Week series is legendary: https://doughellmann.com/blog/
I'm actually learning the ins and outs of CNN, so I can start implementing it via Tensor Flow. I'm currently going through a book (forgot the title) as well as using the official Tensorflow site. Going to experiment CNN with some stock charts. 
Interesting to see his name dropped. I've been checking out his scheduler library on Github. Will definitely have to read this.
!book gAme oF THronES
1. A Game of Thrones (A Song of Ice and Fire, #1) by George R.R. Martin. (4.45/5 *) [Link](https://www.goodreads.com/book/show/13496.A_Game_of_Thrones?from_search=true&amp;ac=1) &gt;Summers span decades. Winter can last a lifetime. And the struggle for the Iron Throne has begun.As Warden of the north, Lord Eddard Stark counts it a curse when King Robert bestows on him the office of the Hand. His honour weighs him down at court where a true man does what he will, not what he must … and a dead enemy is a thing of beauty.The old gods have no power in the south, Stark’s family is split and there is treachery at court. Worse, the vengeance-mad heir of the deposed Dragon King has grown to maturity in exile in the Free Cities. He claims the Iron Throne. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot EDIT: Keep trying to break it, I appreciate it :D 
Well theres always Armin Ronacher (flask guy): http://lucumr.pocoo.org/
Good bot
listing for completeness, obviously only one at a time.
Ah, right. I am just making a script that guesses the number. I have already made a little script that acts as the other 'player'. And yeah, it is indeed pretty hard to come up with a solid algorithm, at least for me.
A link to the repo is infinitely better than a video. Notebooks support markdown, use that instead of terse comments that are difficult to understand. 
Jeff Kunpp: [jeffknupp.com](https://jeffknupp.com/) He has so many awesome articles about some fundamental concepts of python. They help a lot!
My preferred solution would have been a `separate(iterable, separator)` function that returns an iterator like map, and a `join(iterable)` function that turns an iterable of strings into a string (like sum but performant). So `",".join(seq)` becomes `join(separate(seq,","))` and `"".join(seq)` becomes `join(seq)`.
First and foremost, this **really** should be on /r/learnpython Second, are you calling the function? Add: printTable(tableData) to the bottom
Not to one up you but.... from queue import Queue DONE!
!book Lots of Other Stuff Cat Owners Should Know
 1. Games You Can Play With Your Pussy: And Lots of Other Stuff Cat Owners Should Know by Ira Alterman. (4.06/5 *) [Link](https://www.goodreads.com/book/show/803418.Games_You_Can_Play_With_Your_Pussy?from_search=true&amp;ac=1) &gt;Games You Can Play With Your Pussy and lots of other stuff cat owners should know. Hilarious, humorous book that will leave every cat-lover rolling with laughter. Includes Naming Your Pussy, How to Feed Your Pussy, Sleeping with Your Pussy, Disciplining Your Pussy, How to Handle A Hot Pussy and lots more. Very entertaining but it helps to have a somewhat perverted sense of humor. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
!book 2BR02B
 1. 2BR02B by Kurt Vonnegut Jr.. (3.93/5 *) [Link](https://www.goodreads.com/book/show/5048174-2br02b?from_search=true&amp;ac=1) &gt;2BR02B is a satiric short story that imagines life &amp; death in a future world where aging has been “cured” &amp; population control is mandated and administered by the government. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
!author 673126
 1. How to Make Money in Your Spare Time by 673126. (3.88/5 *) [Link](https://www.goodreads.com/book/show/22355529-how-to-make-money-in-your-spare-time?from_search=true&amp;ac=1) 2. How to Be a Drug Dealer by 673126. (5.00/5 *) [Link](https://www.goodreads.com/book/show/26466882-how-to-be-a-drug-dealer?from_search=true&amp;ac=1) *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
!book Images You Should Not Masturbate To
!book Why is Mommy Moaning (to test Berenstein vs. Berenstain hypothesis)
Your solution works, so I wouldn't worry too much about it! After all, premature optimisation is always a bad idea.
If it can't find any book, it won't reply. Do you think maybe a "book not found" reply would be better?
I do. I was debating whether or not to post an "I think I broke it" post. 
!book How to Live with a Huge Penis 
I first learnt about descriptors and metaclasses at the SF Python talks. I looked up the people who made the talks and found some of their presentations on their blogs. Some other stuff there that is great as well. http://www.jesshamrick.com/category/programming/ http://simeonfranklin.com/blog/
 1. How to Live with a Huge Penis: Advice, Meditations, and Wisdom for Men Who Have Too Much by Richard Jacob. (3.81/5 *) [Link](https://www.goodreads.com/book/show/6324742-how-to-live-with-a-huge-penis?from_search=true&amp;ac=1) &gt;Is Bigger Really Better? Here at last is the first self-help book for men with Oversized Male Genitalia (OMG), a genetic birth defect that grows the penis to absurd proportions. Every year, thousands of men are diagnosed with OMG. Sadly, most are banished to the fringes of society, victims of their own freakish length and girth. How to Live with a Huge Penis brings them an inspiring message of tolerance and hope—along with helpful information on • Unzipping: Coming Out to Your Friends and Family • Sharing Your Pain: Sexual Intercourse with a Huge Penis • Big Blessings: Unexpected Advantages of a Huge Penis • and much, much more Complete with prayers, poetry, a daily affirmations journal, and thoughtful quotations from leading self-help experts, How to Live with a Huge Penis will inspire men of all shapes and sizes. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
It looks like JSON with missing commas.
 1. Images You Should Not Masturbate To by Graham Johnson. (3.84/5 *) [Link](https://www.goodreads.com/book/show/9219816-images-you-should-not-masturbate-to?from_search=true&amp;ac=1) &gt;Better than a cold shower-and a lot funnier. Choking the chicken, spanking the monkey, airing the orchid-whatever you call it, none of the images in this book will encourage the gentle art of self-pleasure. This deceptively simple and strangely addictive book presents a laugh-out-loud collection of random pictures virtually guaranteed to dampen the urge of even the strongest libido. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
!book fool's assasin
Yes, so the summoner knows the bot tried. I'd also add a "no description" blurb on the bug you just fixed when the book is found but there is no summary on file. 
Ok, I'll do it tomorrow as I got to go now!
 1. Fool's Assassin (The Fitz and the Fool, #1) by Robin Hobb. (4.35/5 *) [Link](https://www.goodreads.com/book/show/19288321-fool-s-assassin?from_search=true&amp;ac=1) &gt;Tom Badgerlock has been living peaceably in the manor house at Withywoods with his beloved wife Molly these many years, the estate a reward to his family for loyal service to the crown.But behind the facade of respectable middle-age lies a turbulent and violent past. For Tom Badgerlock is actually FitzChivalry Farseer, bastard scion of the Farseer line, convicted user of Beast-magic, and assassin. A man who has risked much for his king and lost more…On a shelf in his den sits a triptych carved in memory stone of a man, a wolf and a fool. Once, these three were inseparable friends: Fitz, Nighteyes and the Fool. But one is long dead, and one long-missing.Then one Winterfest night a messenger arrives to seek out Fitz, but mysteriously disappears, leaving nothing but a blood-trail. What was the message? Who was the sender? And what has happened to the messenger?Suddenly Fitz's violent old life erupts into the peace of his new world, and nothing and no one is safe. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Good bot. Looks like you're doing substring matches, what if there is more than one? !book the rise
 1. The Sun Also Rises by Ernest Hemingway. (3.83/5 *) [Link](https://www.goodreads.com/book/show/3876.The_Sun_Also_Rises?from_search=true&amp;ac=1) &gt;The quintessential novel of the Lost Generation, The Sun Also Rises is one of Ernest Hemingway's masterpieces and a classic example of his spare but powerful writing style. A poignant look at the disillusionment and angst of the post-World War I generation, the novel introduces two of Hemingway's most unforgettable characters: Jake Barnes and Lady Brett Ashley. The story follows the flamboyant Brett and the hapless Jake as they journey from the wild nightlife of 1920s Paris to the brutal bullfighting rings of Spain with a motley group of expatriates. It is an age of moral bankruptcy, spiritual dissolution, unrealized love, and vanishing illusions. First published in 1926, The Sun Also Rises helped to establish Hemingway as one of the greatest writers of the twentieth century. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
I don't think there is "best" one, but here is a collection: https://nedbatchelder.com/blog/ https://blogs.msdn.microsoft.com/pythonengineering/ https://pymotw.com/3/ https://dbader.org/blog/tags/python http://jakevdp.github.io http://matthewrocklin.com/blog/ https://snarky.ca https://sebastianraschka.com/blog/index.html https://morepypy.blogspot.com/?m=1 http://inventwithpython.com/blog/ http://www.pgbovine.net/writings.htm http://pbpython.com BDFL blog (he is more on Twitter): http://neopythonic.blogspot.com/?m=1 https://julien.danjou.info http://lucumr.pocoo.org/ http://eli.thegreenplace.net/ http://www.asmeurer.com/blog/ https://planet.scipy.org http://planetpython.org 
I'm not gonna lie, I didn't have a clear thought process going into the exercise. I didn't even really know where to start really, and I was having trouble determining which functions were being called on from another function and so forth. I can probably make the grid through multiple functions that print their own thing without being called on from another function. However, I can't find a way to print the grid under a function which executes all the other functions. That might have been confusing to understand, I don't know how to explain it very well.
thank you!!
I actually use goodread's search algorithm, just apend the query to https://www.goodreads.com/search?q= and crawl the results. The bot choses the most popular result.
Thank you for your reply. I certainly agree they are important and apply regardless of what language one is writing in. I am quite well versed in git and can merge, filter, and rebase with the best of them (perhaps even better than most). versioneer looks like a great tool. I will certainly look for ways to make it part of my workflows. What I am more interested in is how these workflows interact uniquely with Python. For example, there is a standard requirements.txt file common to python packages. This file would certainly be part of a git repo, but how does it fit in with large project workflows which are tracking various branches and commits across of the internal packages it makes use of? The submodule feature of git can track what version of another package it is dependent upon. Do you use the submodule feature for this purpose or do you use the package dependency features of python (pip?) to do this? Do you use a virtual python environment (virtualenv, virtualenvwrapper, ???) for your development as Mr. Bengfort suggests in his article? You mentioned artifactory (seems to be the "big" commercial competitor of devpi and nexus). Does such a tool play any part in an environment where developers might need to both use and modify the package? Here is perhaps an example of what not to do: (So, what would you do to fix it?) ----- As a project gets large, it will likely involve several python packages, with interdependencies between them, and each having their own git repository. One can imagine the directory structure getting quite complicated as submodules (various packages belonging to the larger project) are placed in a 'mods' directory of the main project. The main project may also be providing some common python code that various project packages may want to take advantage of, but importing that common code may not be easy because relative imports don't seem to work as well as they should, so they simply use sys.path.append to add that common code directory to the the path so modules can be imported easily. ----- 
Okay, but OP explicitly *doesn't want to be handed a solution*.
Replacing all instances of comment.permalink() with commet.id will make it use comment ids instead of permalinks. You could make a script that changes all the current permalinks to ids in the database.
Yes, I'll try something like that
i know, i just wanted to write one to enlarge my micro e-penis
Thank you!
Alright i'll give you some steps 1. Figure out how to print the tops and bottoms. For example for 2 columns with each box 1 wide it would look like: `+-+-+`. For two columns 2 wide it will be `+--+--+` 2. Figure out how to make the space rows that have the up and down part. It will look like this for 2 cols 1 wide `| | |` 3. Figure out how to put those pieces together to make boxes Also this: (not needed but helpful) https://docs.python.org/3/library/stdtypes.html#str.join
No I didn't contact any lawyer yet. But, a torrent client is used to download all illegal contents. Yet a client itself is completely legal. Following similar approach, torrench is simply a command-line tool to search torrents from already existing websites. Yes, it does allow searching a few grey-shaded sites, but its an option, that user needs to enable herself to use. Using those websites is user's decision (means user is completely aware what she is doing). Also I have explicitly mentioned those website's illegalities, and its consequences in project's documentation.
Note: I just want to state that these are just ideologies I picked up over time and they may or may not be right. So please take all of this with a grain of salt. Alright lets see if I digested this right, also you asked a lot of questions so I will just work with whats below: A. How do these workflows interact uniquely with Python? Answer: Before I answer this question, I want to make sure that we are talking about the workflows I referenced in the atlassian article ie; git-workflow, feature branch, fork based, etc. That being said there are plenty of others and I only mentioned those because they are widely known. Now going to your question I do not see them uniquely tied to the language in question however it actually helps to have a branching strategy in place to produce better and stable releases. When I code in python I try to make it as "black-box" as I can such that if I want others to reuse my code I can share it by producing a release and tag it in git so that it can be versioned. This allows me as a developer to be able to debug issues in my code on a given release product. B. How does a python requirements.txt file fit in with large project workflows? Answer: Good question, might I suggest first that all stakeholders of said project understand first that intended use of it (https://packaging.python.org/discussions/install-requires-vs-requirements/#install-requires-vs-requirements-files) before trying to leverage it. I hope the above reference gives you a better picture. C. Do you use git submodule feature for tracking what version of another package it is dependent upon or or do you use the package dependency features of python (pip)? Answer: This is also a good question however there is no one size fits all answer to it. My answer will be it depends on the situation and what exactly you are trying to tie in together. For example you are working on writing python bindings for xyz software that requires code written in C++. In this case it might make sense to use a git submodule to tie in that code however if it were some other lets say python based code, then it might make sense to create a distribution of that code and set it as a requirement in your requirements.txt file. D. Do you use a virtual python environment (virtualenv, virtualenvwrapper, ???) for your development as Mr. Bengfort suggests in his article? Answer: Yes, I use virtualenv. The reason why I use it is to validate that I can: 1. Ensure installs are always working. 2. I don't pollute the global/local python site-packages. E. Does such a tool(Artifactory) play any part in an environment where developers might need to both use and modify the package? Answer: I'm not understanding this question however what I can understand is that yes developers would configure it to be able to pull down your project distribution dependencies. Now in the event that there is no latest distribution yet due to some regression introduced to that component, you could certainly just clone the repo and install it manually. 
Gonna follow up here on your last part about what would you fix about this hypothetical situation. 1. First big red flag I see is scale/size of project. If it becomes to big/monolithic it will be hard to maintain. Ask yourself is there a way I can break this up into modular chunks such that they can be easily maintained? 2. Is the code built such that I can easily swap it out with an alternative. Were standard design patterns put into use? How about standard data structures versus in house ones? 3. Are we reinventing the wheel? If yes how? Perhaps we can modify a pre-existing product by forking it or even suggesting the community that develops it to build it for you?
Thanks! Any testing/usage is very welcome! Keep in mind that I'm still in a beta version, I just fixed some bugs and I bet I'll fix more in the next days, so please be sure to use the latest commit. Also, I'm planning to make some widgets (like tables, login forms etc.. my first try here: [branch widgets](https://github.com/Hrabal/TemPy/blob/widgets/tempy/widgets.py)) if you have suggestions on what widget could be useful and what API/features they should have, they are very welcome too! Do you think web mapping can be added as a widget too?
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [Hrabal/TemPy/.../**f8fd8ad5172689b330ad18660b8c21bdaf30b078.py** (widgets → f8fd8ad)](https://github.com/Hrabal/TemPy/blob/f8fd8ad5172689b330ad18660b8c21bdaf30b078/tempy/f8fd8ad5172689b330ad18660b8c21bdaf30b078.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dlkhx7k.)^.
Thanks a lot. Here.. 1. I actually though of keeping config file in $HOME/.config directory (Since that's what I use). 2. It initially does build the directory if its not present. Also, if user deletes the directory, it will be created again when required. Can you please tell more about why entire directory should be deleted? 3. You mean setting home= ~\\.torrench and ~\\.config? Its because when I had set a common home for both linux and windows (~/.torrench), due to forward slash, the directory was not created. So I had to set home as (~\\.torrench). 4. Noted. 5. Noted. I'll see into it. 6. Most of the output displayed were actually intended to be displayed on screen. What output are we talking about exactly? 
!book bOrn A cRimE
 1. Born a Crime: Stories From a South African Childhood by Trevor Noah. (4.49/5 *) [Link](https://www.goodreads.com/book/show/29780253-born-a-crime?from_search=true&amp;ac=1) &gt;The compelling, inspiring, and comically sublime story of one man's coming-of-age, set during the twilight of apartheid and the tumultuous days of freedom that followed. Trevor Noah's unlikely path from apartheid South Africa to the desk of The Daily Show began with a criminal act: his birth. Trevor was born to a white Swiss father and a black Xhosa mother at a time when such a union was punishable by five years in prison. Living proof of his parents' indiscretion, Trevor was kept mostly indoors for the earliest years of his life, bound by the extreme and often absurd measures his mother took to hide him from a government that could, at any moment, steal him away. Finally liberated by the end of South Africa's tyrannical white rule, Trevor and his mother set forth on a grand adventure, living openly and freely and embracing the opportunities won by a centuries-long struggle. Born a Crime is the story of a mischievous young boy who grows into a restless young man as he struggles to find himself in a world where he was never supposed to exist. It is also the story of that young man's relationship with his fearless, rebellious, and fervently religious mother: his teammate, a woman determined to save her son from the cycle of poverty, violence, and abuse that would ultimately threaten her own life.The eighteen personal essays collected here are by turns hilarious, dramatic, and deeply affecting. Whether subsisting on caterpillars for dinner during hard times, being thrown from a moving car during an attempted kidnapping, or just trying to survive the life-and-death pitfalls of dating in high school, Trevor illuminates his curious world with an incisive wit and unflinching honesty. His stories weave together to form a moving and searingly funny portrait of a boy making his way through a damaged world in a dangerous time, armed only with a keen sense of humor and a mother's unconventional, unconditional love. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Creating a Program that can take a word or PDF document downloaded from confluence that has tables in it and converting it to a csv file that will be fed into another powershell script to automatically create DNS entries
If you find anyone that isn't on Planet Python already, they should probably be on Planet Python ...
Thank you for your reply again. I don't expect you to have all of the answers...I am just looking for a discussion to help me think through the issues and to learn - this will necessarily involve me being a bit rambly. A: When I am referring to workflows, I am not referring to any specific to git. Think of "workflows" in more of a [DevOps](https://en.wikipedia.org/wiki/DevOps) way. The version control system used could just as easily be Mercurial or even CVS (do not use CVS). However, assume git. The environment I am interested in is a large internal project with many developers each working on their own package and each package has its own repo. However, the workflows in this environment could have a lot in common with the public workflows where a developer is working with several third-party pypi packages each of which generally has their own repo. B: I will read through that article on packaging and the requirements.txt file. C: In general, it will all be pure python. D &amp; E: So, in my case of a large project consisting of a large number of pure python packages, it may make the most sense to establish a virtual python environment specifically for the project in which each package is installed and can import normally (i.e. do not use sys.path.append) from the others. As each package evolves, there will be branches, tags, etc. One way to manage the dependencies between them would be to use git submodules to track what specific commit one package depends upon. However, this does not seem to fit the situation described and the recommendation seems to be to use the python requirements.txt standard, in which I believe one can point to a specific commit in a git repo. What I am not certain about is how Artifactory interacts with git in this scenario. Artifactory would seem to be more for the case where one has a "final" version of a package and not where one is working with a package with regular commits that need to be pulled. Or, for the package with regular commits that need to be pulled, would the author of that package be regularly releasing a build of it to Artifactory for the other developers to install? 
**DevOps** DevOps (a clipped compound of "development" and "operations") is a software development and delivery process that emphasizes communication and collaboration between product management, software development, and operations professionals. It supports this by automating and monitoring the process of software integration, testing, deployment, and infrastructure changes by establishing a culture and environment where building, testing, and releasing software can happen rapidly, frequently, and more reliably. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
!book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book !book learn python the hard way
 1. Learn Python The Hard Way by Zed Shaw. (3.91/5 *) [Link](https://www.goodreads.com/book/show/8341335-learn-python-the-hard-way?from_search=true&amp;ac=1) &gt;This simple book is meant to give you a first start in programming. The title says it is the hard way to learn to writecode but it’s actually not. It’s the “hard” way only in that it’s the way people used to teach things. In this book youwill do something incredibly simple that all programmers actually do to learn a language: 1. Go through each exercise. 2. Type in each sample exactly. 3. Make it run.That’s it. This will be very difficult at first, but stick with it. If you go through this book, and do each exercise for1-2 hours a night, then you’ll have a good foundation for moving on to another book. You might not really learn“programming” from this book, but you will learn the foundation skills you need to start learning the language.This book’s job is to teach you the three most basic essential skills that a beginning programmer needs to know:Reading And Writing, Attention To Detail, Spotting Differences. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
This is where your Continuous Integration(CI) pipeline comes into play and the infamous nightly/stable releases. You would have to define what the given subcomponent pipeline should look like and treat it as a given subproduct. Now when you try to assemble all the parts together that is also considered a product and to manage those dependancies you would work on defining a manifest. 
Thanks man.
why not just post to the website he has but ask for an email address? I guess I gotta create a junk-emailaddress and find out myself...
Tell that to popcorn time.
does it run Commodore-64 games?
Of course, one shouldn't do this but it's fine as an exercise. 
1. You use $HOME/.config because that's the fallback default for `XDG_CONFIG_DIR` in the [XDG directory specification](https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html). A well-behaved application will respect that environment variable, if it is set, i.e.: cfg = os.environ.get("XDG_CONFIG_DIR", os.expanduser(os.path.join("~", ".config"))) 2. If you're using the temp area as an actual persistent cache -- i.e. the files will be re-used in some way in the future -- then much as above you should use: cache = os.environ.get("XDG_CACHE_DIR", os.expanduser(os.path.join("~", ".cache"))) ... but if it's just a temp dir where you dump something to process it in some way, then discard, you should really just create it in the system temp directory with a unique name and delete it on exit, which is what those two functions I mentioned above help you do. Deleting the directory recursively ensures you delete the folder and everything in it, which may not just be files ... **shutil.rmtree** is very good for that. 3. See those bits in the examples for 2 and 3 where I use **os.path.join**? That's there to help you build cross-platform paths. 6. All the major operating systems run a normal interactive user-space process with three streams connected to it, 2 for output (stderr and stdout) and 1 for input (stdin). Both of the first two print to screen, but you can pipe them to separate locations, which is extremely helpful in scripting. The best practice is to print / log the results of your program -- say the list of files found -- to stdout, and everything like debugging information, progress, errors, etc to stderr. The Python **print** statement can be directed to either, but by default it goes to stdout. The **logging** module defaults to stderr, but also gives you much more, in terms of formatting options, logging levels, file logging, etc., and could be a better option.
collections
No, that's not possible at all with this program, because you need it to emulate the real hardware for that. My program is just pretending to be a C-64 on the surface but is something else entirely. It is not meant to simulate a real machine. I recommend Vice if you want this however, that is a very good emulator that can run almost all C-64 software *edit* clarified a little better
Thanks for the feedback. This is something I'm definitely looking into as I'm finishing up Threading. There's a few frameworks I'm looking into. 
I like dealing with concrete examples whenever I can. So, let's say there are two packages: A &amp; B. A will import B. There are two ways I can think of to handle this situation...a bad one and what I think might be a good one based on our conversation. The bad one would be: A adds B as a submodule and pulls down changes as needed as the author of B makes them. The good one would be: A and B are two entirely distinct repo. A sets up its requirements.txt file to specify the dependency on B. As the author of B makes changes, a nightly release is generated for the package and the version incremented. This release of B is then sent to artifactory. When A checks Artifactory for any updates, it will see one and grab it. In this case, let's say that A is tracking a particular branch of B called "ForABranch". Now, let's throw in package C which also has a dependency on B and needs to track branch "ForCBranch" of B. Would Artifactory have two variants of B? Would you see two packages...one called B-ForABranch and another called B-ForCBranch? 
Requests, BeautifulSoup, Selenium
Projects over certs every day of the week.
I mostly see Django job offers, not much of other frameworks
!book middlemarch
 1. Middlemarch by George Eliot. (3.93/5 *) [Link](https://www.goodreads.com/book/show/19089.Middlemarch?from_search=true&amp;ac=1) &gt;'We believe in her as in a woman we might providentially meet some fine day when we should find ourselves doubting of the immortality of the soul'wrote Henry James of Dorothea Brooke, who shares with the young doctor Tertius Lydgate not only a central role in Middlemarch but also a fervent conviction that life should be heroic.By the time the novel appeared to tremendous popular and critical acclaim in 1871-2, George Eliot was recognized as England's finest living novelist. It was her ambition to create a world and portray a whole community--tradespeople, middle classes, country gentry--in the rising provincial town of Middlemarch, circa 1830. Vast and crowded, rich in narrative irony and suspense, Middlemarch is richer still in character, in its sense of how individual destinies are shaped by and shape the community, and in the great art that enlarges the reader's sympathy and imagination. It is truly, as Virginia Woolf famously remarked, 'one of the few English novels written for grown-up people'. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
!book \\'exec(1/0)
 1. The Hunger Games (The Hunger Games, #1) by Suzanne Collins. (4.34/5 *) [Link](https://www.goodreads.com/book/show/2767052-the-hunger-games?from_search=true&amp;ac=1) &gt;Winning will make you famous. Losing means certain death.The nation of Panem, formed from a post-apocalyptic North America, is a country that consists of a wealthy Capitol region surrounded by 12 poorer districts. Early in its history, a rebellion led by a 13th district against the Capitol resulted in its destruction and the creation of an annual televised event known as the Hunger Games. In punishment, and as a reminder of the power and grace of the Capitol, each district must yield one boy and one girl between the ages of 12 and 18 through a lottery system to participate in the games. The 'tributes' are chosen during the annual Reaping and are forced to fight to the death, leaving only one survivor to claim victory.When 16-year-old Katniss's young sister, Prim, is selected as District 12's female representative, Katniss volunteers to take her place. She and her male counterpart Peeta, are pitted against bigger, stronger representatives, some of whom have trained for this their whole lives. , she sees it as a death sentence. But Katniss has been close to death before. For her, survival is second nature. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Find broken links in a DB which contains millions of notes for a high tech company.
[Anaconda](https://packagecontrol.io/packages/Anaconda)
eh, scientist here. matplotlib/numpy/scipy/pandas bokeh/seaborn/theano~tensorflow itertools/functools/toolz dask.distributed/datreant Very special mention to path.py !
Really special mention to jupyter and stuff.
!book pihkal
 1. Pihkal: A Chemical Love Story by Alexander Shulgin. (4.35/5 *) [Link](https://www.goodreads.com/book/show/886113.Pihkal?from_search=true&amp;ac=1) &gt;phen-ethyl-amine \fen-'eth-al-a-,men\ n. [phenyl fr. F. phène, fr. Gk. phainein, to show (from its occurrence in illuminating gas)+ ethyl ( + yl) + amine fr. NL ammonia] 1: A naturally occurring compound found in both the animal and plant kingdoms. It is an endogenous component of the human brain. 2: Any of a series of compounds containing the phenethylamine skeleton, and modified by chemical constituents at appropriate positions in the molecule. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Can't any hardware be simulated in hardware? Should be possible? Am I missing something?
I don't understand your question. What I meant is that to be able to run c-64 games on an emulator, this emulator must simulate the actual hardware of the c-64 and this is not what my program is doing. 
Quite the list there!
Why not use the `requests` module (from pip) instead of `urllib.request`?
i'm working in a project to create a hitBtc trader bot with python 3. I started building class to acess site data with they api. I'm will be glad with any feedback. I'm new to python. My code is on : https://github.com/jmarcolan/HitBTC_Api
Install the new version of the full scipy package.
!book 🎄
Just adding on if your name i.e. Users/name has two words or a space your program won't run.
As much as I prefer terminal development, I will always respect the learning curve that I slowly climbed to where I am now. If OP hasn't already already blasted through the terminal learning curve then I will always suggest a jetbrains IDE or Visual Studio.
Lets take Artifactory out of the picture and instead replace it with what it actually is a private pypi repository. Now if Both A &amp; C both have a dependancy on B however C need B prime to work then A would have to take B prime as well. What you are referring to is most likely a feature that is being develop in B but not yet released.
Totally understandable. That lack of a clear thought process is a common feeling in programming, and it probably never leaves *entirely*--the trick is to just reduce how long it lingers before you get a plan together and get down to work. One way to do that is to write it out in pseudo-code first. Kind of just in English. Then you rewrite it in working Python. &gt; However, I can't find a way to print the grid under a function which executes all the other functions. To do that in general, you "call" the functions from within the bigger function, like this: def main_function(): #this block defines the main function do_first_thing() do_second_thing() do_third_thing() main_function() #this calls the main function, which will call all the others. And, of course, you have to define those other functions also. 
Or you can just click the 'x' in the top right corner. 
Atom 😂
This or add --upgrade
[Jupyter link] (https://nbviewer.jupyter.org/github/austin-taylor/code-vault/blob/master/python_expert_notebook.ipynb) 
Ok, before you clarified your statement it made it sound like you were saying that a commodore emulator was not possible. I understand now though what you were trying to say
Thank you! I'll repost with the jupyter link... 
Hopefully you find it useful. 
Are you going to being using sensors on a real plant? That sounds pretty cool. 
!book \n shogun
 1. Termeni Japonezi: Karate-D, Judo, Zanpakut, Origami, N, Biwa, Kid, Aikid, Bonsai, Shogun, Haiku, Seppuku, Kempo, Shinigami, Katana, Sh by Source Wikipedia. (0.00/5 *) [Link](https://www.goodreads.com/book/show/13345551-termeni-japonezi?from_search=true&amp;ac=1) &gt;Surs: Wikipedia. Pagini: 64. Capitolele: Karate-d, Judo, Zanpakut, Origami, N, Biwa, Kid, Aikid, Bonsai, Shogun, Haiku, Seppuku, Kempo, Shinigami, Katana, Sh, Kabuki, Gagaku, Soroban, Shakuhachi, Sent, Jidaimono, Sushi, Kend, Shotokan, Tsunami, Sake, Osechi, Minka, Shamisen, Yaoi, Ume, Wasabi, Ukiyo-e, K d, Kaih gy, Sakura, Tatami, Kaizen, Butoh, Hanami, Ninja, Fundoshi, Bud, Washi, Kami, Nihonga, Yukata, Shish setsu, Senry, Tabi, Renga, Kemari, Waka, Seiza, Jujutsu, Tanka, Kamikakushi, Dodoitsu, Agura, D shu, Wabiru, Maiko, Koto, Takamagahara, Kaibun, Bunraku, Kirisute gomen, Ronin, Gigai, Naruko, Ujigami. Extras: Un zanpakut (, zanpakut ? lit. sabie t ietoare de suflete) este o sabie magic fictiv ce apare in anime-ul i seria manga Bleach, manuit de cei cu puteri de shinigami. Arta manuirii unui zanpakut se nume te zanjutsu. In adaptarea din limba englez de la Viz, ele sunt denumite Soul Slayers (Spintec toare de Suflete). Cele mai multe zanpakut arat ca o sabie katana normal, cu mici diferen e intre ele precum se a teapt intre sabii diferite. Totu i, fiecare zanpakut este imbinat cu un spirit con tient unic, care ii da sabiei puterea de a trimite un plus in lumea de apoi, de a purifica hollows, si de a- i transforma propria form intr-una mai elaborat i mai puternic . Pentru a facilita aceste sarcini, zanpakut au abiliti i unice care se aseaman cu caracteristicile proprietarului. Spiritul unui zanpakut este o parte din sufletul proprietarului s u, i cel mai adesea imp rt e te acelea i tras turi de personalitate. In acela i timp, ins, ei sunt i independen i, i astfel pot fi considera i partenerul unui shinigami in lupt . Deoarece sunt o parte din sufletul propietarului, un zanpakut nu poate fi inlocuit, de i se va regenera incet in cazul in care este rupt. Odat ce un shinigami ca tig mai mult putere, zanpakut -ul lor i i poate schimba forma, ceea ce permite fiin ei din interior s se manifeste cu un grad mai mare in lume... *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
There's a blog by Adrian Rosebrock called [PyImageSearch] (http://www.pyimagesearch.com/) that's dedicated to computer vision and machine learning with python. I've learned how to do some really awesome stuff there.
Wow i really like this guys dunder str/repr video so far. Thanks for sharing!
!book !book
The notebooks are an adjunct to the videos (not video). That's why the comments are terse. I wanted people to follow along using the notebooks =)
As a developer you need run programs in a way that lets you see any errors or problems. That usually means running them in a terminal emulator so that error messages are visible if the program crashes. For example, try typing `python your_program_name.py` in the cmd window. 
Not sure what you mean. I can access his blog/articles without entering any email address
You're probably better off at r/learnpython. That said, definitely start out with the concurrent.futures module. Specifically, the ProcessPoolExecutor class. https://docs.python.org/3.5/library/concurrent.futures.html
For computer vision: https://pyimagesearch.com.
So it's a commodore 64 basic interpreter, not an emulator?
Flask, Django, requests, os, SqLite, asyncio, socket...
Pycharm
Can I use the community edition with Django?
Consider if it was a separate branch of B that C needed to track and that A need to track a different branch of B. Perhaps a concrete situation would be the B is being forked. It does seem the solution here is separate pypi packages.
Ready Player One !book
I'm not sure, my company pays for the pro version. You used to be able to get a free student license, you should see if they still do that.
This is a bit of an extreme case but if it were to happen I would question why the fork and continued use of the componet. I would not go and continue to use a product that has its development split like that unless it would get trickled back up to the parent repo. And only then would I consume it.
Do you use slack, gitter or some other chat/room technology, or even Alexa? You could look to create a chat-bot that allows you to interact with your devops scripts, getting status, launching jobs, etc. in a channel or verbally.
IRC is great for asking this kind of questions.
yes i have, soil moisture and temperature sensors now. suggest some related sensors which i can use to plot graph.
The best for computer vision and ML in python. 
You require either OAuth2 or an API Key. Anyone with the API Key can update the sheet, so is effectively anonymous. Using `google-api-python-client`: from apiclient import discovery service = discovery.build('sheets', 'v4', developerKey='&lt;apikey&gt;')` sheet = service.spreadsheets().get(spreadsheetId='&lt;sheetid&gt;').execute()
as someone learning python imports and the... atrocities that occur in them is so damn confusing. and everyone seems to think it's a good place for complex magic. no thank you
if you're using requests, responses is a great package for testing code.
Web: Django, Flask Data science (not frameworks): Pandas, Jupyter, NumPy
Mine was doing that same crap, so I stopped using codecademy and went to automate the boring stuff with python. The book is great, the videos are on YouTube. There are other tutorials out there, udemy has paid stuff, I have taken other courses through them and I like the format. Depends if you want to spend the money or not. Tip on udemy, there are sales all the damn time, wait for the course you want to be $10 because it really is just a matter of days or weeks. 
we're processing rather large JSON payloads with lambda/marshmallow. I'm curious to see how this compares. Will drop it in tomorrow and test
Yeah, the voluntary users act as natural beta testers before the hard rollout. Sounds legit to me. Also allows other developer/IT types who might be affected an opportunity to work out the kinks before they affect your team, or before everyone inevitably comes to ask you about the new mandatory thing because you're always the guy that knows what's up.
Im fighting through it right not but its a pain. Funny you mentioned automate the boring stuff. Its actually pulled up in another tab right now. Thats how close I am to quitting codecademy. It sucks though because I like the course and I am at 47 percent right now. Thanks for the suggestions
Thanks for the solution :) It was a great learning experience . 
1. Noted. Will be fixed in next release. 2. As for torrench, the temp directory is used to store custom HTML files, which stores TPB torrent description. The user may or may not re-use those files later on. So should I move those files to be stored in .cache directory? Cause I don't think system's /tmp/ is the right one for this, as /tmp/ is emptied automatically on boot (right?). ~/.cache seems the right one then. 3. About logging. Noted. I'll see what I can do about it :) Thanks :)
thank you
That's basically where I stopped. It was too buggy and in some cases I was spending more time on trying to bypass the buggy mess than the actual excercise. Switched to ATBSWP and started from scratch. 
How do I start programming on there ? You should make make ease of use a priority too.
From the looks of it, your system is executing user provided code? If so, how are you sandboxing it?
I'm 19 turning 20 this year and I used to think like this when I was 16. Sure, nowadays there is definitely no need to have a degree to get a decent job in comp-sci. I thought to myself, heck what could I possibly learn from college that I don't already know. When I looked at the syllabus everything looked very familiar and I felt like there was no need for me to be in college. I joined college anyways due to pressure from my family. Boy was I wrong. In college programming languages are only part of a set of tools that are used to get into development. It's hard to explain. As much as I want to I'm not going to deny the value of getting formal education. It's not the degree itself that matters, but what I learn from it. I wouldn't care If never actually passed because I know I got my money's worth. I'm still a huge believer in learning things throughout your life. Heck I got my first job even before I started college. But midway through I realized there's a lot more that I don't know that I know.
It depends on what you want to do. If you just want to jump in, you can click on any of the links on the front page and it will take you to some premade modules. If you want to create something new, you have to make an account and create a new system from the account view. I'm working on a tutorial right now - maybe I should fast track that if it isn't easy enough to jump into it.
itertools, functools and collections. 
Essentially, I'm currently maintaining a list of blacklisted actions and preventing importing when the code is generated. Other than that, I have been more focused on adding features than security, since I'm still regularly wiping out the database anyway and I'm not too worried about what happens if my AWS instance crashes. Hopefully I understood your question correctly - let me know if that wasn't the answer you were looking for.
That's cool! Does it read the game files somehow?
Okay I registered. I still don't know how this is useful. Is this a site like Codecademy ? I feel this is entirely different, but I'm not sure.
Doesn't that still leave you vulnerable encoding based bypasses in the style of [JSF**k](https://en.wikipedia.org/wiki/JSFuck) and [Swearjure](http://hypirion.com/musings/swearjure)? EDIT: Combined with all the usual Python metaprogramming tricks like editing [`sys.modules`](https://docs.python.org/2/library/sys.html#sys.modules) or hijacking method dispatch.
I guess, but I'm not sure what anyone would gain from it. This isn't production software and there isn't any user data to steal- it's just a proof of concept that I'm fielding to test out before building the real thing. 
It is different from Codeacademy in that it allows for dynamic and crowdsourced code, as opposed to pre-written challenges. If you're approaching this from a learning perspective, I'd suggest checking out one of the prewritten functions. For example, [in this module](http://www.code-iota.io/systemview/anthrod/fb285e5d7f1864434d5c367cb643ed24/), if you click on the doubleEveryOtherNumber() function, you'll see a function description, and a text box to enter code. If the code is right, then all of the tests on the right should light up green when you click "Run Tests". The idea is that these aren't prewritten exercises - they're part of real Python code that is generated through the community.
So like HackerRank ? They do this too and users can make their own challenges. It feels like you would be their competitors.
can you define your use case a bit more? why compiled for example? Is that just a means to help you distribute? there are package formats you can make and entry points can be an option, etc.
I made my very first reddit bot. It was the coolest thing that I've ever done. But I need some creative juice to make something better.
I'd like to add a nsfw, french ressource: http://sametmax.com
 x = 'test' output_string = '' for val in x.lower(): output_string += 'regional_indicator_{}'.format(val) You can add the conditionals in the loop. 
If the user is *likely* to use those files again, and re-obtaining or re-building those files again is *costly*, then you should think of it as a cache. If the user *might* re-use them, but re-obtaining or re-building is *cheap*, then think of it as temp. Either say document the hell out of it, as the user probably wants to know to exclude it from home directory backups, and may want to periodically clean up. Also these days users rarely do a full reboot, so even the temp directory is usually around for quite a long time. But, if you're using temp, remember that multiple users can often access that area, which means that using a fixed directory name would mean setting permissions on it for everyone to read and write, which might save two users time on a common search, but also leaks user A's search history to user B. The **tempfile** functions create directories and files that only the current user can read, but also build unique names each time they're called to avoid conflicts. What you'd normally do to have a semi-persistent cache is create a unique named directory per user (i.e. by hashing the username and pretending it with your app's name or something like that) that sits in the temp area, but which is owned and readable only by the user.
I have been thinking of it more as an open collaboration tool in the vein of jsfiddle than as a competitive environment, although it could be used that way I suppose. HackerRank was one of the sites I looked at before developing this as it was the closest thing I could find to this functionality, but I think that my goals are outside the scope of their market. This project is meant more for crowdsourcingand organizing huge bases of code - the fact that solving unit tests can be gameified is just a side effect of that IMO.
I see. I wish you the best of luck then. Hopefully you won't need it. ^_^
I can’t see where you are updating CurrentSong based on the button clicked. I think that’s what you’re missing
I will add the R*-Tree within the next couple of days and will post an update :)
The current song is not important for the button it is just for next and other stuff (will add it later tough). If you look closely I use a different command then song I use song_with_num and there is current song not needed.
Anyway thanks for the feedback!
Okay I see that now. But those buttons are still not setting `NumInRange` to tell `Song_With_Num` which song it’s supposed to play.
Well I added NumInRange = i right or is that completely wrong? If so do you have a fix?
So the issue here is subtle and has to do with variable capture. By the time you call SongWithNum, NumInRange will already change. One solution is to give SongWithNum a parameter and use ~~`clicked.connect(lambda: self.Song_With_Num(i))`~~ Edit: oops I was [wrong](https://stackoverflow.com/questions/233673/lexical-closures-in-python) about how this works. Instead, `clicked.connect(lambda i=i: self.Song_With_Num(i))` Edit again: here’s an even [better explanation](https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result) from the Python FAQ.
I will try it soon, but thanks!
I've read some really good stuff at http://eli.thegreenplace.net/ especially about metaclasses
i recommend ccs64 instead, which runs all c64 software.
Cool, really looking forward to your results. I've done a similar benchmark a while ago and for our use-case the R*-tree was the clear winner. If your numbers are disagreeing with mine, I'm definitely going to re-evaluate my own experiment!
threading (single process) and multiprocessing are not the same. the api's are very similar and they support similar primitives but there are a few differences in what they do.
I think https://www.fullstackpython.com. You can learn whatever you want.
Yes you will use pip (or pip3 if you work with python3). Console commands on Mac and Linux VM should be identical in the most part.
STX Next Blog: https://stxnext.com/blog/ There is a lot of articles about Python like "The most popular Python scientific libraries" or "A Beginner's Introduction to Python Frameworks".You can find there informations for beginners but also for advanced Python users. Moreover, if you're interested in business there are a lot of additional posts from this area. Experts are creating the content so you can be sure that there are confirmed informations :)
yes,do this. Use your RSS/Atom reader to point to the Planet Python news aggregator feed on all things Python. Saves you a ton of time bookmarking various sites
It is not really about frameworks but about experience and domain knowledge. You can be great at python but have no idea about a specific field like data-science, web applications or machine learning.
No. A cert "just" for a language is kinda useless, so nobody with a speck of brain takes them serious. Learning a language is kinda easy, but it doesn't say how competent you are at work, whether you "get things done". So either get a big certificate, like a proper school-degree, or build a portfolio of finished work, so people can check your competence for themself. Best is of course to have both. But creating some proper projects for display is actually faster, and cheaper. So maybe start there.
Thanks , it looks nice .
Understood. However, I want to think about the best way to handle the situation and it does seem the solution would be to attach the branch name to the package.
[Practical Business Python](http://pbpython.com/) - Chris Moffitt. Just because he's trying to introduce the real world problem on where to apply Python.
Graham Dumpleton http://blog.dscpl.com.au/ Al Sweigart http://inventwithpython.com/blog/ S.Lott-Software Architect http://slott-softwarearchitect.blogspot.co.uk/ Steve Dower | Musings and Mutterings http://stevedower.id.au/blog/ Stupid Python Ideas http://stupidpythonideas.blogspot.co.uk/
Good primer on something that trips up a lot of people.
It's never about what people have to gain - it's about people fucking with you because they have nothing better to do. 
The stdlib as it saves me using pip install xyz. http://www.grantjenks.com/docs/sortedcontainers/
Oh please -U will do :-)
Wrote a crap-tier script to automate wargame dice rolling. How many dice, how many faces, and what your hit/wound/whatever is. I'm pretty sure there's a much more elegant way to do this but not bad for not having touched Python in nearly ten years. import random def rollDice(): dice = input ("Number of dice:") sides = input ("Number of sides:") threshold = input ("Threshold:") total = 0 passing_rolls = 0 for x in range(dice): result = random.randint(1, sides) total = total + result if result &gt;= threshold: passing_rolls += 1 print result else: pass print ("Passing Rolls:"), passing_rolls print ("Total:"), total a = 'a' while a == 'a': rollDice()
If you're used to Eclipse you might as well use the PyDev extension.
No, the Python code goes in the .py file, the windows commands in the .bat file. However I'd not bother with the .bat file. Just open a cmd window, go the the folder with your script and type MyPythonScript and it should just run.
I have been having issues with it. No longer going to use it.
_I have been having_ _Issues with it. No longer_ _Going to use it._ &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^- ^ColoradoEngineer ------------------------------ ^^I'm ^^a ^^bot ^^made ^^by ^^/u/Eight1911. ^^I ^^detect ^^haiku.
Have a degree in IT, just looking at expanding out. The getting stuff done isn't too bad, I do a little scripting at work. Thanks for the feedback.
Nowadays that there are around 600 million individuals on Instagram, it comes as no surprise that people and businesses are working hard to build an active account on Instagram with a huge amount of followers. When you want a very large number of followers, what can you do? Of course you have the option to try out the well-known methods such as following people, properly use of hash tags, keep posting every day, establish attractive content, using filters and so on. However, the point is that all these tricks are quite time consuming, besides there is no guarantee to achieve what you are looking for. But you have an easier way to get more followers and likes in your Instagram account. Instagram Bots are the tools which enable you to automate all your Instagram activities. The basic idea is that it just does the same thing that you would do manually; however, it performs it within a short period. It means you set a robot to work on your Instagram account. The robot starts to like, follow, comment and send direct messages instead of you at the maximum rate that Instagram permits. These engagements will lead to more exposure of your account and it will eventually bring you lots of followers. Now, don’t you think it as an easier way than manual methods for getting more followers and likes on Instagram? https://instazood.com/is one of the most popular Instagram bots which has proved its value to more than 10000 happy subscribers. For gaining huge number of followers and likes within short period of time, there is no better option than this cloud-based software because it can work at an amazing speed. Whether it is your personal profile or your business profile, you don’t need to stay online and be active all the time on the Instagram platform. https://instazood.com/runs 24/7 while you are living your life and brings you followers, likes and comments. 
No I wouldn't risk the wrath of Blizzard. It's just a simple command line thing. 
https://www.cheatography.com/davechild/cheat-sheets/python/ This one was pinned to my wall for a while. 
OP, when I click on the link I'm taken to a game and not a collection of Python blogs. Bait and switch?
For windows, take a look at the "runas" command
Quick Google search, found [this StackoverFlow](https://stackoverflow.com/questions/16578597/how-to-executes-cmd-command-using-python-on-win-7-with-admin). Is this what you are looking for?
This is what I'm trying to do. The instructions says to create the .bat file, link the path in the environment variables and run the .bat file in the run window. I will try the cmd window like you said. I tried yesterday and it gave me an error no 2 file not found. But I will try again when I get home from work today. Thanks.
thanks, that helped!
&gt; If anyone knows how to backreference to a capture group, and follow that reference by a digit, please let me know! To match a back-reference like `\1' followed by a known digit, I would use a non-capture group: r'(?:\1)1\.' or a class: r'\1[1]\.' 
Trying to build a website using flask.
If you need to do memory management, why use python? A lower level language would seem more appropriate EDIT: Grammar was not serene 
Just play the game and figure out what you do to win step by step, then go from there. For example: 1. Random guess 2. If fermi change 2 numbers (remembering the original numbers) 3. If still fermi then remove those original 2 from guessable numbers, otherwise remove the unchanged number and replace one of the original two So on and so forth
Yes, but it does emulate the text-mode c-64 screen display. I should probably have put the word emulator in quotes I suppose
Thanks! This works fine in the regular expression, but not inside a replacement string for re.sub, though.
It sounds more like an interpreter than an emulator, but these terms are just conventions. It's cool either way. Not trying to belittle your accomplishment.
I would second Dan Bader.
And I remember when people thought stuff like Pirate Bay (or Demonoid (or Suprnova (or even Kazaa for crying out loud))) were perfectly fine because of Reasons Right now, you have the equivalent of that splash screen abandonware sites used to have that was never based in legality or fact. Or the text file people put in their shares on DC++. And considering that it looks like you are putting this under your real name as part of a github portfolio (and submitted to the pypi index), you may want to tread carefully.
I don't think it's too far fetched of an idea that people could find this useful. If anything it announces that Python, like all other languages, operates within the realm of computing with restrictions. In this context, these restrictions can be understood using the 'sys.getsizeof' function. This is a doorway of thought for people who haven't been trained to program with a lower level language and potentially enables any number of those people to do greater things with any language of their choosing. 
i'm seconding that
Python 2 or Python 3 have `\g&lt;number&gt;` in the replacement string. https://docs.python.org/3/library/re.html &gt; In string-type repl arguments, in addition to the character escapes and backreferences described above, \g&lt;name&gt; will use the substring matched by the group named name, as defined by the (?P&lt;name&gt;...) syntax. \g&lt;number&gt; uses the corresponding group number; \g&lt;2&gt; is therefore equivalent to \2, but isn’t ambiguous in a replacement such as \g&lt;2&gt;0. \20 would be interpreted as a reference to group 20, not a reference to group 2 followed by the literal character '0'. The backreference \g&lt;0&gt; substitutes in the entire substring matched by the RE. 
Yeah, I understand. By all means, there are plans for implementing these things, but I'm not sure it is worth it for a site with less than 5 active users. Maybe when we hit the big 10 user milestone, haha.
yeah, memory sharing and the need for pipes being some of the majors. still looking for a simple tutorial 
Thanks! Your comments are greatly appreciated. I am going to start working on making it more usable, it is just hard since I built the thing so having new users throw out first impressions helps me a lot.
Sure, but you only need 1 of those 5 users to be a dick.
**[Ned Batchelder's blog](https://nedbatchelder.com/blog/)** Reasons - 1. Ned is one of the core Python contributors. He maintains coverage.py. He regularly talks about it in his blog. 2. Ned is one of the best teachers I have ever seen. The way he explains things is awesome. Just take a look at his stack overflow answers, his blog, or PyCon talks he has delivered, and you will come to know why. 3. He is one of the crucial parts of largest Python Django Open source projects - [edX](https://www.edx.org/). In his blog, he also writes about his technical challenges faced at edX. 4. Pure nerd fun! He has good taste of T-shirts. He likes to create 3D programming arts. And he writes about it in his blog. :) 
I had a similar issue. I work on both a linux and a windows machine and needed to test my Flask server. But windows doesn't have curl. Here's a super simple request script for py3 import urllib.request req = urllib.request.Request('{query}') with urllib.request.urlopen(req) as resp: print(resp.read())
Yep, same issues here. Lost code because of this during one of my projects. I reported the issue however.
nit: you should compare python lists with `std::vector` (an array list, 24 bytes on 64bit), not `std::list` (a linked-list).
If you're mainly doing this to deploy NumPy to Lambda, I wrote a blog post on how to do that quickly w/ the Serverless Framework --&gt; https://serverless.com/blog/serverless-python-packaging/.
Out of curiosity, what would be advantage of writing the algorithm all the way in C and building a Python extension module as opposed to writing a core subroutine and helper functions in Cython, or even numba? I know this was more of a learning experience than anything else, but based on your experience, is there any reason to take this much more advanced, low-level approach?
Knowing the python language, application of it, and github isn't enough to get a job? What else is there?
Any chance someone changed your AMPQ [version recently](https://github.com/celery/py-amqp/issues/145)?
https://realpython.com is awesome, they have quality Python content that is relevant and useful. Most of their blogs are project driven, and you can always find the completed project on github. Many of their blogs include testing, something missing in many blogs. They often go from start to deploy.
I would recommend reaching out to a professor teaching a course you might be interested in, and asking to audit the course. Your concerns are valid, and hopefully after auditing a few courses you'll find an answer for yourself.
interested to join do i need the paid version to go along wtih you guys.
!getbook war and peace
!getauthor Tolkien
We recently [updated](https://www.codecademy.com/blog/important-changes-to-codecademy-courses) our Python course and migrated over to a new interface, and a few users like you have unearthed a few bugs related to that migration. Resetting the exercise has worked for many users! If you have problems or questions you can ask the Codecademy community on our [forums](https://discuss.codecademy.com) or reach out to support [directly](https://help.codecademy.com/hc/en-us/requests/new).
Would be nice to have seen some techniques or pattern examples for converting more pythonic allocations in to more efficient ones.
I would say your specific example of notifications is more of utility. Check out [django-herald](https://github.com/worthwhile/django-herald) for an awesome API for handling notifications. But to give you a more complex example, you could have a `CreateInvoiceService` which takes `booking` as an argument which creates an invoice given a `Booking` instance. You could call that service inside the `process` method of `CreateBookingService`. If you want to contribute some example application code to the [repo](https://github.com/mixxorz/django-service-objects) that'd be great.
Hmm, the blurb is a tiny bit clickbatey. &gt; What Does It Take to Be An Expert At Python This one cool trick that the python community doesn't want you to know about will make you a leet coder.
We usually use pastebin or gist to send code snippets. This is quite unusual.
 1. War and Peace by Leo Tolstoy. (4.10/5 *) [Link](https://www.goodreads.com/book/show/656.War_and_Peace?from_search=true&amp;ac=1) &gt;Tolstoy's epic masterpiece intertwines the lives of private and public individuals during the time of the Napoleonic wars and the French invasion of Russia. The fortunes of the Rostovs and the Bolkonskys, of Pierre, Natasha, and Andrei, are intimately connected with the national history that is played out in parallel with their lives. Balls and soirees alternate with councils of war and the machinations of statesmen and generals, scenes of violent battles with everyday human passions in a work whose extraordinary imaginative power has never been surpassed. &gt;The prodigious cast of characters, seem to act and move as if connected by threads of destiny as the novel relentlessly questions ideas of free will, fate, and providence. Yet Tolstoy's portrayal of marital relations and scenes of domesticity is as truthful and poignant as the grand themes that underlie them. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
 [J.R.R. Tolkien](https://www.goodreads.com/author/show/656983.J_R_R_Tolkien) &gt;John Ronald Reuel Tolkien, CBE, was an English writer, poet, WWI veteran (a First Lieutenant in the Lancashire Fusiliers, British Army), philologist, and university professor, best known as the author of the high fantasy classic works The Hobbit and The Lord of the Rings. &gt; &gt;Tolkien was Rawlinson and Bosworth Professor of Anglo-Saxon at Oxford from 1925 to 1945, and Merton Professor of English language and literature from 1945 to 1959. He was a close friend of C.S. Lewis. &gt; &gt;Christopher Tolkien published a series of works based on his father's extensive notes and unpublished manuscripts, including The Silmarillion. These, together with The Hobbit and The Lord of the Rings, form a connected body of tales, poems, fictional histories, invented languages, and literary essays about an imagined world called Arda, and Middle-earth within it. Between 1951 and 1955, Tolkien applied the word "legendarium" to the larger part of these writings. &gt; &gt;While many other authors had published works of fantasy before Tolkien, the great success of The Hobbit and The Lord of the Rings led directly to a popular resurgence of the genre. This has caused Tolkien to be popularly identified as the "father" of modern fantasy literature—or more precisely, high fantasy. Tolkien's writings have inspired many other works of fantasy and have had a lasting effect on the entire field. &gt; &gt;In 2008, The Times ranked him sixth on a list of "The 50 greatest British writers since 1945". Forbes ranked him the 5th top-earning dead celebrity in 2009. &gt; &gt;**Religious influences** &gt;J.R.R. Tolkien, was born in South Africa in 1892, but his family moved to Britain when he was about 3 years old. When Tolkien was 8 years old, his mother converted to Catholicism, and he remained a Catholic throughout his life. In his last interview, two years before his death, he unhesitatingly testified, “I’m a devout Roman Catholic.” &gt; &gt;Tolkien married his childhood sweetheart, Edith, and they had four children. He wrote them letters each year as if from Santa Claus, and a selection of these was published in 1976 as The Father Christmas Letters. One of Tolkien’s sons became a Catholic priest. Tolkien was an advisor for the translation of the Jerusalem Bible. &gt; &gt;Tolkien once described The Lord of the Rings to his friend Robert Murray, an English Jesuit priest, as "a fundamentally religious and Catholic work, unconsciously so at first, but consciously in the revision." There are many theological themes underlying the narrative including the battle of good versus evil, the triumph of humility over pride, and the activity of grace. In addition the saga includes themes which incorporate death and immortality, mercy and pity, resurrection, salvation, repentance, self-sacrifice, free will, justice, fellowship, authority and healing. In addition The Lord's Prayer "And lead us not into temptation, but deliver us from evil" was reportedly present in Tolkien's mind as he described Frodo's struggles against the power of the "One Ring.'' 1. The Hobbit by J.R.R. Tolkien. (4.25/5 *) [Link](https://www.goodreads.com/book/show/5907.The_Hobbit&amp;ac=1) 2. The Fellowship of the Ring (The Lord of the Rings, #1) by J.R.R. Tolkien. (4.34/5 *) [Link](https://www.goodreads.com/book/show/34.The_Fellowship_of_the_Ring&amp;ac=1) 3. The Two Towers (The Lord of the Rings, #2) by J.R.R. Tolkien. (4.42/5 *) [Link](https://www.goodreads.com/book/show/15241.The_Two_Towers&amp;ac=1) 4. The Return of the King (The Lord of the Rings, #3) by J.R.R. Tolkien. (4.51/5 *) [Link](https://www.goodreads.com/book/show/18512.The_Return_of_the_King&amp;ac=1) 5. The Lord of the Rings (The Lord of the Rings, #1-3) by J.R.R. Tolkien. (4.47/5 *) [Link](https://www.goodreads.com/book/show/33.The_Lord_of_the_Rings&amp;ac=1) *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
!getbook A Game of Thrones
 1. A Game of Thrones (A Song of Ice and Fire, #1) by George R.R. Martin. (4.45/5 *) [Link](https://www.goodreads.com/book/show/13496.A_Game_of_Thrones?from_search=true&amp;ac=1) &gt;Summers span decades. Winter can last a lifetime. And the struggle for the Iron Throne has begun. &gt; &gt;As Warden of the north, Lord Eddard Stark counts it a curse when King Robert bestows on him the office of the Hand. His honour weighs him down at court where a true man does what he will, not what he must … and a dead enemy is a thing of beauty. &gt; &gt;The old gods have no power in the south, Stark’s family is split and there is treachery at court. Worse, the vengeance-mad heir of the deposed Dragon King has grown to maturity in exile in the Free Cities. He claims the Iron Throne. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
I was after maximum speed. Based on some quick researche I found that using C should give you the most speed. A second thing for me was learning how to write extension modules in C and re-learning C as I forgot or never knew a lot about it. I never tried Cython or numba. I was looking at some numpy implementations of K-means algorithm but didn't want to install complete numpy with all the requirements (a big pain in the backside to install on windows without anaconda). Why to write C extension? You get to know how Python works internally. To get a feeling that in the end you are working with physical memmory, storage, ... . You see how basic Python operations could be implemented in C (list.append() is a good example) and why they take so much code to implement. Then you start to appreciate Python even more, it's simple and intuitive. Perhaps because of all that knowledge you can write better Python code. C is amaizing because it gives solid understang and solid grounds on which to build, if you learn it. This would be my "Why to write C extension?".
See [here](https://discuss.codecademy.com/t/i-may-have-caused-a-problem-with-my-exercise-and-i-dont-know-what-to-do/201984/13) for the fix recommended (and working for) most users.
Correct https://docs.python.org/3/faq/design.html#how-are-lists-implemented std::list is more like https://docs.python.org/2/library/collections.html#collections.deque
Yes I figured, but I do not have a account on those. So ehh? It works.
Why not? I use python because I can get my job done faster and better than in C. If I'm working on a large data set I'd rather use python and pay attention to memory usage than C where it would take way longer to write the code and I would STILL have to worry about memory usage.
Thanks for the input! I was already thinking of doing it somewhat like this, and you just made it more plausible this is the way to go! 
This is in PyPy. Bigger challenge is in regular Python as demonstrated by Larry Hastings in his Gilectomy project. The Gil in regular Python is there to provide a global lock to various resources; In a nutshell, removing it would mean that you now have to account for each lock in the Python subsystem that will now need to be handled manually resulting in the interpreter being stupendously slower.
Use numpy
The question is backwards. Programmers usually don't write a program because they want to deal with memory management; they deal with memory management because they want to write a program. So it's better to ask: If you use Python, why do you need to do memory management? Sure, a lower level language would be more appropriate if your main concern was shuffling bytes into a pretty pattern within your address space. But when it isn't your main concern, that doesn't automatically mean you can completely ignore memory management. Python lets you throw your hands in the air and let the GC take the wheel when you're writing simple scripts. When you're building a non-trivial application, it still makes sense to know about slots, reference counts, weak references, etc. Garbage collection by itself can only help out so much; it's not magic.
Any suggestions what I could do about it? I was suggested about having the config file and making user interact with it. And I think it worked out fine. What else can I do, if you could suggest something? 
Bare minimum: Stop advertising Pirate Bay and the like. And potentially get rid of the "Find the mirror that the US hasn't blocked yet" feature Aside from that: Becomes a much harder problem (which is good for your portfolio...), but make a generic one where users can provide a few "simple" bits that will make it work on any site (off the top of my head: URL, what to send to do a search, and how to parse the results and find a download link on the appropriate page). But honestly, I would recommend just not doing stuff like this in your name. Potentially makes you a liability for future companies on the off chance this takes off ("Microsoft hired that warez dude"). And regardless, you are making it REALLY easy for folk to send you letters. Especially because you are bypassing the ad revenue which will probably piss off PB and the like too.
I don't have any experience doing something like that in Python, but it should be pretty easy with javascript.
1. Hear hear. I will update this post. 2. That's one issue I have been thinking for some time now, but still unable to figure it out. Every website share different html code.. and scrapping a website highly depends on a tag, and especially a tag having custom values. 3. Noted. I'll remove real-name from everywhere I have it now. (Just wondering how effective would it be .. since git's past commits will have my name in it :S) Update: I have updated the post. Suggestions?
Can someone tell me something about this course? I've read opinions on Udemy and I've been back and forth. As for what I am aiming for - I have no problem with coding(mainly Python), I know the basic concepts of Machine Learning (I've had one course at university and I got hooked, I've been learning on my own since then), however my "statistics level" is far from what I would like it to be (I don't have problems with math in general, quite opposite in fact, I just haven't "been in touch" with statistics since highschool). So probably the machine learning part (with good statistic background) is probably what I am aiming for (althugh it is always nice to get more familiar with ML libraries). Also I have already lined up Jose Portilla ML course (I am currently finishing his course for Data Analysis and Visualization), so considering all of this, is THIS course worth it?
IPython and qtconsole. So much better than the vanilla REPL.
wouldn't Python have to go from interpreted to compiled to make removing the GIL beneficial, specifically for the reason you mention? 
I recently finished a project [static_variables](https://github.com/mitalashok/static_variables) that works by dynamically changing a functions bytecode (So CPython only) It's main feature is static variables: from static_variables import resolve_static @resolve_static(static_variables={'counter': -1}) def f(): counter += 1 return counter f() # 0 f() # 1 f() # 2 Another feature is empty set literal notation: @resolve_static(empty_set_literals=True) def f(): my_set = {} # Not a dictionary! return my_set And static objects (Constant references) @resolve_static def f(a=None): ls = static([]) if a is not None: ls.append(a) return ls f() # [] f(1) # [1] f(2) # [1, 2] It has really helped me learn a lot about how the internal workings of CPython work. Some of what I learnt when making this: * Bytecode (What a Python module is compiled into) is a sequence of pairs of bytes, which are the [opcode](https://github.com/python/cpython/blob/master/Lib/opcode.py) with an argument. The meaning of the opcodes and arguments can be found [here](https://docs.python.org/3/library/dis.html#python-bytecode-instructions). * The bytecode interpreter is stack based * Python closures are based on a type called [`cell`](https://docs.python.org/3/c-api/cell.html) (Which is absent from [`types`](https://docs.python.org/3/library/types.html)). * The interpreter is very quick to segfault if you touch it's bytecode incorrectly (e.g., not knowing that zero argument opcodes need a dummy `0` argument)
I'm terrible with classes but I think your problem is that the var1 variable isn't a global so you have to pass it. What I would do is inside of your class, change test(self) to var1 = test(self) Then change def foo() to def foo(var1) And in the class have foo(var1). That should then pass the output of test into foo. Sorry I'm on my phone so the explaination might not be great
One option would be to upload your program itself to GitHub or any other source, and then upload your data to a file store like Dropbox or MEGA. Sure, you're going to get rate limited eventually, but by the time you get there, you'll probably want some sort of infrastructure around your project anyway.
Ah, the good ole one-two self knockout. 1. Link to documentation in blog post 2. Prove that you didn't actually read it yourself :-) Thanks! I will update the post accordingly.
The issue isn't the interpreter being slower, but a lot more complex to debug. There would be subsystem locks and a lock order to track. In addition it may break assumptions made in C extensions. Finally I think there was a serious but only now averted risk of breaking the Python community and language at version 3. I can understand developer aversion to something that could be another socially fractious change even if technically beneficial. 
Hmmm. I definitely tried a variation of that but I didn't have the var1=test(self) so that is definitely something I will try. God only knows because I hacked and slashed it to pieces so many times. I think I tried: var1='' test(self): do stuff to get var1 foo(var1): sql + var1 test_case(): test() foo(var1) I'm not at work anymore but it's definitely something I will try in the morning. Thanks :) Even more gratitude heading your way if it works!
To put it bluntly: you seem like you are still a kid. Stop asking reddit for legal advice and either talk to an expert or don't touch it with a ten foot pole. In a lot of ways, contributing to "warez" is like working in porn. Fundamentally there is nothing wrong with it, but you get a stigma either because of people's moral/PR sensibilities or just concerns over you not knowing how to work in a "normal" environment (just take a look at stuff like Azureus-&gt;Vuze or even Pirate Bay for how predatory stuff can be). If that is the route you want to go, awesome, just understand that it makes your github profile less useful as it goes from being a universal good (how good varies) to actually being a bad for some future employers.
Depends on the field of software development where you wanna apply
I mean if I were to narrow it down I'd say mobile app development (given that that's the local market it seems). Should I spend some time narrowing down what really interests me specifically? 
yes please narrow it down, because there are so many directions you could develop your skills in. For example if you want to do mobile dev, then you need different skills then when you want to do embedded dev
At work, I inherited a script that processes a multi-gigabyte XML file and creates some CSVs. Doing this with C would be a huge PITA, but you can't run it in Python without some awareness of memory management.
Got it. Thanks! 
Have you done any speed tests to see if it truly is faster than Cython or numba? Or, maybe versus the scikit-learn KMeans model for reference? In my experience, a well-thought out Cython/Numba solution usually performs with ~5-10% of a quick Fortran routine - and often beats them if you start to do anything with Openmp/threading. But great write-up by the way; super informative!
There is a difference though where you can have a choice of running pypy with the GIL removed or not. For example many people run stackless python but its not forced upon you.
The primary reason it exists is to support the reference counter. There *are* interpreted languages out there that do not use reference counting and thus have no GIL. And given that the GIL means no multithreading in Python, removing it actually enables people to write multithreaded programs in Python where they cannot do so now.
No results found. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Perhaps you meant self.somevar.x
No results found. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Might be obvious but gzip/xzip before uploading. Depending on the redundancy you'll gain 50%... Also Google drive and Dropbox is what many people are using even for free plans. GitHub file releases allow you to attach files as well.
To access class member variables in Python you need to tell it which class you are refering to. If you are outside of methods you are doing it like: instance_name.variable_name. Inside of methods we do the same. But to refer to the same class we have to use 'self'. So simply, your code should look like self.somevar.x If you dont have it, you are trying to refer to regular variable defined globally or inside of the function, not in class
&gt; The primary reason [the GIL] exists is to support the reference counter Hm, reference counters in multithreaded programs (C++ std::shared_ptr, Linux kernel, etc.) are usually updated using atomic instructions, what prevents Python from doing the same? Or could you expand on what exactly the problem is?
To access class member variables in Python you need to tell it which class you are refering to. If you are outside of methods you are doing it like: instance_name.variable_name. Inside of methods we do the same. But to refer to the same class we have to use 'self'. So simply, your code should look like self.somevar.x If you dont have it, you are trying to refer to regular variable defined globally or inside of the function, not in class
The issue is that Python chose to go GIL early, instead of going with atomic instructions. After all, it was easier to write data structures to support a GIL than worry about concurrency. It was an early architectural decision made because Python started as a hobbyist project, and we've become stuck with it as the language grew.
Yeah I zipped it and it shrunk quite a bit
For $10 I don't think you could go wrong.
Ah, got it -- python scoping is very different than Java...
&gt; **Wouldn't subinterpreters be a better idea?** &gt; Python is a very mutable language - there are tons of mutable state and basic objects (classes, functions,...) that are compile-time in other language but runtime and fully mutable in Python. In the end, sharing things between subinterpreters would be restricted to basic immutable data structures, which defeats the point. Subinterpreters suffers from the same problems as multiprocessing with no additional benefits. It is my understanding that IronPython in particular partially solved this problem by compiling Python classes into .NET classes for example, then recompiling whenever someone actually went and did something like added a method to a class. The crucial thing about this approach is that under the assumption that such modifications are rare and/or mostly happen during startup (which makes it especially suitable for a tracing JIT like PyPy), this allows us to sidestep the fundamental problem of synchronization: that there can't be a completely unsynchronized "fast path" because to know that we can take the fast path or if some other thread took the fast path and we need to wait for it to finish, we need synchronization. This is because this approach doesn't require threads to do synchronization themselves: whenever a thread does something that requires resync, it asks the OS to force stop all other threads, possibly manually let them advance to a "safe point" or what it was called in the .NET land, then recompile everything relevant, patch the runtime state of other threads and start them again. But otherwise we are always on a fast path with zero synchronization, yay! In case of PyPy, again, this could be as simple as force-switching those other threads back to interpreted mode (which they are already able to do), then selectively purging compiled code caches. And also again, if we assume that most of the monkeypatching etc happens during startup, this wouldn't affect performance negatively because PyPy doesn't JIT much of the code during startup. /u/fijal, you wrote that, what do you think?
&gt; It was an early architectural decision made because Python started as a hobbyist project Python started as a sysadmin program to replace programs like basic and awk. It was written as his hobby. The fact that it had a GIL was was not because it was developed as a hobby, but because concurrency wasn't a focus. It was started in 1989 after all, well before multicore processors become popular.
Thanks for creating pillow-simd! I am presently making an application (with Windows) where I require fast resize and im.paste and am greatly interested in this thing. What kind of python should I use? I tried Conda, but installing pillow-simd seems to require some dependency, for which builds aren't available. Is there any option available that will have pillow-simd working on windows without having to build and compile a lot of stuff myself?
But you can absolutely write multithreaded programs in Python, you just can't have two threads executing in parallel. You can also write programs with parallel execution, you just have to use `import multiprocessing` instead of `import threading`.
The fact is that the concurrency and parallelism story of python is severely lacking. Thos are not what I would call ideal in 2017. 
Good luck with all that.
Concurrency has actually come a long way since Python 3.4, with asyncio. Whether or not you like the implementations, or disagree with the tradeoffs that were made, it's simply not accurate to say that it's not possible to write concurrent or parallel Python code. You just have to know what the caveats are, and what makes which import the right one for what you want to accomplish. At that level, it's no different from doing the same things in other languages. The things you have to pay attention to may not be the same, but you always have additional things to pay attention to when working with multiple threads/processes, no matter what language you use.
I'm not sure the locks would have to be handled "manually", no? Given the overhead of the interpreter, the overhead of acquiring and releasing locks should be quite small. But yeah, killing the GIL isn't going to make Python faster. It's going to allow it to be more concurrent.
There's not a whole lot of easy options here. I think the best place to start would be PyQtGraph. The documentation is not that great, and I'd wager that unless you already have an idea of Qt works you'll spend most of your time figuring what the heck is going on. On the other hand, I guess you could always try going straight to Qt. Good luck with that though.
Inspecting the page, it looks like all pages are DIVs, with class="pc pc6 w3 ha opened". Why not give beautifulsoup a shot?
I write multithreaded python code all the time. Overstating things isn't helpful
Thank you, i'll start by giving bs a shot then, but isn't used just for pulling out text/code/images? Are you suggesting i use bs for taking screenshots too? Sorry if my questions may sound completely dumb, i'm a complete python newbie. 
Even that is overstating it. You can't have two threads executing *python byte code* in parallel. But you can absolutely have one thread execute python byte code while fifty other threads do other things like execute native C code. Often that difference doesn't matter, but there are definitely places where it does.
Well, you'd use BS4 to grab the text/whatever you want from the pages, then you'd have to use something else to output to the format of your choice. Quick and dirty, you could just save those chunks to files, then use caliber to assemble into an epub. http://web.stanford.edu/~zlotnick/TextAsData/Web_Scraping_with_Beautiful_Soup.html 
You could use setuptools entry points.
A traditional song is sampled in 44 kHz, so you'll get 44000 (most commonly 44100) data points per second. 1024 of those you will use as chunks for your FFT. So you only need to update after your gui after 1024 samples. Maybe a spectogram might be more of use for what you want to see because in those 43FPS change fast.
Oh nice option you gave me there, i've seen that i can downloae the html page and open it locally, so this plus Calibre might prally be enough i guess. However the BS4 option might also allow me to learn tons of stuff. Thanks. 
Nice edit lol, thanks for the link. I fucking love internet people are so kind here. 
We could debate the "true" origin of Python but that woman's comment still stands, it was an architectural decision made early on that, in retrospect, might not have been the greatest idea for performance. There's also an argument for it being a good idea. If you believe that Python is simple and if you need performance go use a lower level language, then you might think the GIL is a good idea. Personally I'm in the later group; Python is great because it's so "pythonic" and if I really want to write a performant multithreaded app I'll probably use a thread safe language.
I still recommend posting there; this is still at it's core, **absolutely** related to learning programming. However, I've just reallowed this here.
By the time they figure this out the community will have moved past Python to Swift, Rust or something else. Not that have anything against Python, it is the the only language I use largely these days. It is just the reality that If you need a more powerful solution it might be a good idea to choose something else rather than to try to make python good at something it was never designed to be good at.
&gt; I still recommend posting there; this is still at it's core, absolutely related to learning programming. Thank you, and i am sorry if message i just sent appeared pushy or inappropriate of any kind. Would you be so kind to elaborate further on your opinion ? 
&gt; I can understand developer aversion to something that could be another socially fractious change even if technically beneficial. Rational people would recognize that the transition to Python 3 was really required for the long term success of Python. The question one has to ask is elimination of the Gil a requirement for Pythons long term success? I would have to say no because eventually intend of a scripting language you end up with something that is mix mash of technologies and focus. Further it is pretty obvious that new technologies in programming languages, like seen in Rust, Swift and other new comers, make for a better place to do advanced new development. Frankly that doesn't diminish Python one bit.
&gt; A traditional song is sampled in 44 kHz, so you'll get 44000 (most commonly 44100) data points per second. 1024 of those you will use as chunks for your FFT. So you only need to update after your gui after 1024 samples. Which is exactly what I said. 43 FPS shouldn't be too much of an issue, but not all of the plotting APIs are equipped to handle large refreshes. I've already made spectrogram programs that convert a song into an image file, but I want to make a real time graph this time instead
Get good at some frameworks. I see Django and Flask seems to be very popular these days. Pandas /Numpy/Matplotlib/Scikit-learn for Data Science. It depends what you are interested in. Get familiar with different frameworks so you understand what is possible with Python. Good Luck. 
&gt; And given that the GIL means no multithreading in Python, removing it actually enables people to write multithreaded programs in Python where they cannot do so now. While true to an extent, is it really in Pythons best interest to try to compete with the more advanced systems programming languages. I'd say no because it misses the whole point of python, for me anyways. Pythons greatness is in its ease of use and strength as a scripting language. It would make about as much sense as trying to turn C++ into a scripting language (you don't see ROOT and its suite of tools catching on in the community). Cling/CINT might work for the ROOT community but does it make sense in the wider world of programming? Probably not because you don't see the tech taking off. Python needs to work on becoming a better scripting language not a systems programming language. 
There is not a right answer here but in short: choose what you best may like. Python can be very versatile and used in different topics. If you like web applications, check Flask, Django and SQLAlchemy. If you like interacting with distributed systems and other infrastructure components, check any of your cloud providers API Python clients and you can help the Devops community. Python is most used in data science/machine learning too and frameworks like SciPy, numPy, Pandas, etc do the job pretty well (also well payed). Hope I helped you! Cheers
Check out the job postings of jobs that you would like to get, try to get the bigger picture of what companies are looking for when filling in positions that you would like to get. Write down what libraries they mention or what other specific things they want.
Dude i noticed something while inspecting the page, it's written : &lt;!-- Created by pdf2htmlEX (https://github.com/coolwanglu/pdf2htmlex) --&gt; So i guess the books were PDFs and then were converted to HTML. There might probably a way to reverse this process i guess no?
I found this link in the source code : https://reader.cyberlibris.com/api/js/book/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1MDI3NDc4MzcsImRhdGEiOnsibGFuZyI6ImZyIiwiZG9jaWQiOiI4ODgzMjg1NSIsInVpZCI6Ijg2MkEyMjU5LTgyNUUtNDMyNi1BNzY1LTRFRTlFQUJDM0Q5OCIsInVzZXJpZCI6IjU5ODAxNzU1MyIsImlwYXV0aCI6MCwiaWlkIjoiNTMwIiwiaG9zdCI6Ind3dy5zY2hvbGFydm94LmNvbSIsInNpdGVpZCI6IjIiLCJyZW1vdGVpcCI6IjMxLjM3LjIzNy4zMSIsImJvdXF1ZXRzIjoiIiwic2lkIjoiMTI3NDVvbHJlbTk2cjd1cG9ycDNraTFyNDAiLCJzaWciOiJhNWM1ZDFmZDcxNTBkZGYyODcxOGFjZjhjMzY2ZmViNTcwNDBmNTZmIn0sImV4cCI6MTUwMjc1MTQzNywidG9rZW5pZCI6IkY1UENTWmM0ckVJblkyem50cU1sUTdia251eUo1Vk1MUFI2R2VycFNGa1U9XG4ifQ.mYZZ0Grx8C7UBTxRYG38kjj4prXqnp4x4_Y-5Y48890 It's where the book is hosted. 
Id recommend learning about the bits that sound boring at the start, but you learn to love when have them and there taken away. Things like writing good test suits with good coverage. (pytest) This lets you refactor your code again and again to try different features or methods. Combine this with good version control so you can try things and fail, revert, learn, and try again. (git) Learn the benefits of a good linter, and how to use them. Things like ale in vim, or diving into all the advanced settings in your ide. Make the errors stand out, forcing you to write to standard, or if you don't like a part of pep8, then learn to disable the feature. Learn about development life cycles. Things like waterfall and agile. Then look at open sourcing some of your code, or contributing to other projects. Reading other peoples code is probably the best way to learn. Understanding why they did what they did, and think what you'd do differently. Trying your solution and seeing if it is actually better, and then realising there way is awesome but needs better documentation, or pushing your solution to them is how everyone can improve. And saying you contribute to other peoples projects shows you can work in a team, and generally open source coding standards are far better then professional ones, so don't be put off. 
There is a question in the blog that caught my curiosity &gt; Neither .Net, nor Java put locks around every mutable access. Why the hell PyPy should? What's the reason PyPy needs locks?
As other people have stated, django and flask for web development. Beyond that though, not necessarily "frameworks", but I think there are some modules that you should know relatively well before job hunting. For example, no matter what field you are in, I find myself to be constantly munging data, often CSV, as it can be exported from spreadsheets. You should be able to pretty quickly deal with file I/O, CSV parsing, JSON parsing, etc. I also find time calculation and manipulation to be surprisingly complex and commonly required, so having a good understanding of working with datetime objects, timezone objects, timedeltas, etc. would also be helpful.
Well the transition to Py3 was necessary, but it could have handled a lot better. It's possible Python with stagnate if it doesn't remove its GIL and if other scripting languages find a way to remove theirs.
Reality is a load of use cases don't need "this" to be figured out. In cases where we, as in the python community, have needed to care there are good options: bindings to C (which sidesteps the GIL), cython, pypy, or we can throw some money at the problem (e.g. more hardware). All relatively inexpensive relative to engineering time. Disclaimer: I wasn't the down vote.
I second what others are saying, if you want the GIL removed it's best to look at PyPy.
Yeah - and multiprocessing can be used for many common use cases.
The Global Interpreter Lock is a vital bulwark against the petty, the pedantic and the self-righteous! If such people don't have the GIL to whine about (something which many probably aren't even affected by), they will move onto some other aspect of the language. Do we really want that noise transferred onto something else? Something more important, perhaps? SAVE THE GIL!!!
Atomics are not free: they introduce a small but measurable performance penalty. This is why Rust has *two* kinds of reference-counted smart pointers: `Rc` (single-thread use only) and `Arc` (atomically reference-counted pointer).
Well, they did that at their end through software, it doesn't mean you'll have access to to that PDF. There are tools around for going from HTML to PDF, but you'll likely never get the original.
I made that edit within like less than 5 minutes, didn't think it would go noticed.
I also think that they're having some type of security to not let peopme be able to convert from HTML to PDF. I used HTML to PDF tools all i get is a 1 blank page PDF. When i important the html page with the folder to calibre it stays stuck in the importation process. Also i noticed that when i open the HTML page locally without internet i get blank pages after the first 4 pages. Very weird. 
I'm very alert.
Python can't compete with C/C++ and nor should it, but what about Java, Scala or C#?
The Gilectomy looked at that. It was ~40% slowdown on single threads, iirc. This was deemed unacceptable and abandoned.
To my knowledge "async" does not mean "concurrent" or "parallel". You could write an "async" function that simply contains an infinite loop and it will still block the entire interpreter from continuing. So not concurrent or parallel... 
Scipy i.e. numpy, pandas, matplotlib, scikit-learn, skimage
Thanks! I didnt think of doing it like that. That had other issues but I was able to remove 5 lines
There are Python interpreters which run on the same virtual machines as those languages, and they don't have GILs. The GIL is in CPython and PyPy, not in the language itself.
Because people can't be trusted to write concurrent code safely.
Larry discusses this in his [latest update](https://www.youtube.com/watch?v=pLqv11ScGsQ). Atomic incr/decr was 18x slower than cpython with GIL.
I know. I'm talking standalone compete with them.
Honestly I feel this is where the "ease" of python has shot itself in the foot. There are somethings that are just not trivial and require more than just some basic programming knowledge (ie: understanding how your host OS actually works). Python added the threading and multiprocess modules but their interfaces are not exactly trivial and you don't automatically get "parallel" processing with them. Perl has lock-less threads http://perldoc.perl.org/perlthrtut.html but they are mostly discouraged as a perl compiled with the built in threading support actually runs slower than without it. In perl the defacto way to get concurrent processing is to just call fork() (which ironically on windows fork() is emulated by using the threads module). For what ever reason the python community has shunned the use of a raw call to fork(). Its simple and easy, and immediately gets you a new process to do what ever with. 
Here's how you implement a *context manager*: class Context(object): def __enter__(self): # do stuff when entering the with block def __exit__(self, type, value, traceback): # do stuff when exiting the with block snark aside, go to /r/learnpython and 1) explain what you're trying to do, 2) explain what you have tried so far, and 3) explain what happens but you think shouldn't.
First of all, it would help to get the stack trace from python or at least an ORA-### error to help. This should tell if it's a query syntax issue or not. My guess is that it has something to do with the query formatting between your code and oracle. Are you concatenating the string to get your query? You'll want to use a bind variable instead. sql = "select value from table where ref = :1" c.execute(sql, (var1,)) Not only does this run more efficiently on Oracle, but it should also prevent sql injections.
I imagine [PyQtGraph](http://www.pyqtgraph.org/) is your best bet. I haven't really used it, but I know of it when I was looking into something similar
I'm always tell people that there are three different aspects to "scalability" 1. How many concurrent users can you handle 2. How much data can you handle 3. How complicated of a problem can you handle Now, throwing more hardware at a problem mostly handles the first two but people rarely consider how much language design will affect the third. As an ex-Smalltalk programmer , one thing I really like about Python is that it's simplicity and consistency leads to being able to build solutions to very complicated problem spaces in a clean and understandable fashion 
I'd recommend looking at Pluggy instead of going straight to entry points. It's a little complex to wrap your head around but less than entry points itself
&gt; Honestly I feel this is where the "ease" of python has shot itself in the foot. Maybe but the world needs an easy to use programming language because so much out there doesn't require hard core programming. I'm simply not convinced that Python extending itself in some of these ways is even in its best interests. As I've noted more modern languages are coming onto the scene that are arguably far better choices. 
&gt; Python can't compete with C/C++ and nor should it, but what about Java, Scala or C#? Good question! Do we really want Python to become the huge language that Java is. Frankly you have a better chance of writing once and running everywhere with Python these days. I believe in part that is due to avoiding trying to do everything within the language.
Yeah but PyQtGraph is rather old fashioned. I wish the plots were better looking to be honest. 
You defined `somevar` as a class variable, so you want `foo.somevar` most likely. `self.somevar` will work, but will have surprising behavior if you ever define an instance variable also called `somevar`. Style note: your class names should be capitalized, so `Foo` instead of `foo`.
&gt; Well the transition to Py3 was necessary, but it could have handled a lot better. I don't buy this the negative reaction that Python 3 got in the Python community was completely unjustified. C++ has gone through far more radical changes and you don't see people whining about that or actively undermining progress. Could it be the Python community has to many self entitled people in its fold? &gt; It's possible Python with stagnate if it doesn't remove its GIL and if other scripting languages find a way to remove theirs. I truly believe that all technology has a limited life span where it fills a niche. How long Pythons niche will remain relevant is unknown but it is a certainty that newer technology will eventually replace it in many of the sub niches it occupies. Frankly I see Apples Swift as one of those languages that may eventually have a mindshare like Python. Swift has the right combination of features to eventually be widely used. 
Maybe you can use [qwebview](https://pythonspot.com/en/pyqt5-browser/) and [plotly](https://plot.ly/python/)? Not sure if this will work with webgl plots though, which you might need depending on the amount of data you are ploting.
In most cases, you also want the `__enter__` method to `return self`
I've never really cared about down votes. It is like saying you don't have a real argument to express in English. In any event I can see Python hanging around a lot longer than many believe in its current state. Sort of like the COBOL of scripting languages. I'm actually surprised at the number of people that think Python will die quickly, it is going to be around for a long time. At some point though technology moves on and you end up in. apposition where you can't rationally retro fit a language to keep up. The short history of computing is literally loaded with language examples that bloomed and then faded some completely from the domain. In any event what strikes me here is that people think that removing the GIL will magically solve all of Pythons problems and make it competitive well into the future. Frankly if a programmer thinks GIL has to be removed to allow him to use Python in the way he wants then the wrong language technology was chosen. It can be likened to trying to do 3D graphics in intercepted BASIC. 
&gt; and you don't automatically get "parallel" processing with them. Funny, I used the Pool from multiprocessing in a project this weekend and I got parallel processing automatically. &gt; For what ever reason the python community has shunned the use of a &gt;raw call to fork(). Its simple and easy, and immediately gets you a new &gt;process to do what ever with. When we have high-level multiprocessing functions, why would we do that? What about queues and message passing and all the other features the multiprocessing module provides?
&gt; C++ has gone through far more radical changes and you don't see people whining about that or actively undermining progress. C++ has changed a lot, but by and large if it compiled in C++03, it compiled in C++11 too. They go very far out of their way not to break that principle; and I can't think of a construct off the top of my head which works in 03 and not 11 (or 14, etc). Maybe there are some, but they aren't nearly as prominent as breaking changes in Py3
I never said "async" == "concurrency". Asyncio also provides constructs for coroutines and futures, which do, though. These are mentioned with a very clearly named heading on the [main doc page for asyncio](https://docs.python.org/3/library/asyncio-dev.html#concurrency-and-multithreading). I feel like you didn't bother to comprehend what my comment actually said before you decided to respond. 
 Trying to start something from scratch is very difficult, as you don't know where to start. How to start. You follow tutorials, but doesn't really give you direction after that. Find yourself a project you like, that happens to be written in python. I happened to like home automation, and Home Assistant is written in python... Get it up and running.. Modify it in some way you want/need.. Plugin's, maybe something in the core, etc. Let the devs know you're a beginner who's actually trying to do something, and they'll most likely help out.
Myself having not used either for multithreading, does .NET and Java trust the developer for safety?
They put locks on every mutable object instead, which has been ruled out for Python because it makes non-threaded code much slower (i.e. you pay the cost for the locks regardless of it they are actually protecting anything). That is why this proposal for PyPy would likely result in either two different runtimes or two very different modes of operation. Making both linear scripts (which is what most webapps today are, so this isn't just command line tools) and concurrent code fast at the same time is the holy grail that compiler devs have been chasing for decades.
* Build web scrapers and web crawlers ( aka data mining ) *decrapify that data and do something interesting with it ( aka data science ) *build a website that displays that data in interesting ways *set up and deploy your own linux VM and use it as a server *install postgres and use it as your data store * build the same website with flask and django * create a REST api * use the api to build a simple mobile app that displays that data
Great! Tell me how that works out for you
"automate the boring stuff with python" the book has a bunch of awesome projects for beginners. Just scroll to the end of each lesson and there are projects
Ok, that's a really good idea. Thanks.
The overhead is per object. Almost all data structures in Python are mutable, you're talking about taking one lock for the whole system and spreading it throughout EVERYTHING. The overhead they've shown in research papers and projects like Gilectomy were ~40%. It's untenable. Pythons already as concurrent as it needs to be. Removing the Gil won't help you on IO bound work which is what most work done in Python is. Web services, crawlers, parsers, sys admin code, etc, all IO Bound concurrency. If you need real OS threads for some bullet proof code, python probably isn't the right tool anyways as you can't optimize your memory organization anyways. 
matplotlib is fine as long as you use it right. You just need to reuse the objects. https://stackoverflow.com/questions/8955869/why-is-plotting-with-matplotlib-so-slow/8956211#8956211 
&gt; It was started in 1989 after all, well before multicore processors become popular. What stopped them to remove it in Python 3? They had a massive opportunity to fix things correctly with Python 3 but what we got with Python 3 was half baked language. Please save "but unicode !!1" comments. I don't have time for that. I like the language but some decisions have been made very poorly. 
https://github.com/mattharrison/Tiny-Python-3.6-Notebook (Disclaimer - I'm the author.)
The GIL is like the the belly button to the Universe. Don't mess with it.
I am glad I could help. I think that simmilar thing appears in Java, with 'this.' instead, but I am not sure if Java won't deduce it if you miss it. 
build a scraper to grab finance data, and then plot it
&gt; but it could have handled a lot better. Exactly. It's still an ordeal to port to 3 (when your codebase is at the millions of LOC level). Python 2.8 should have been started years ago as an official bridge to Python 3.X. If the story instead was "Python 2.8 runs Python 3.X code .. just not nearly as well as Python 3.X" Then nearly everyone would have jumped ship by now.
this is just running: rabbitmq-server start /usr/lib/rabbitmq/bin/rabbitmq-server: 51: /usr/lib/rabbitmq/bin/rabbitmq-server: cannot create /var/lib/rabbitmq/mnesia/rabbit@Unknown.pid: Permission denied Failed to write pid file: /var/lib/rabbitmq/mnesia/rabbit@Unknown.pid Only root or rabbitmq should run rabbitmq-server This is with: sudo rabbitmq-server start ERROR: node with name "rabbit" already running on "Unknown"
While multiprocessing does push work in to multiple processes which can all run in parallel it's has huge drawbacks to what is more traditionally referred to when people talk about parallelism. Meaning with multiprocessing you do not get for free: 1. each task getting access to the same memory. 2. the main task seeing updates to that memory as the subtasks work. Instead you have the main python thread having to bundle up parts of memory into pickles and push them through sockets to to the new waiting interpreters who will then push their results back through pickles to the waiting main thread. It works well but it only helps in a subset of use cases. 
If you're just starting out and have no idea what to built, just think up the dumbest shit and give it a go. I'm currently working on a twitterbot that'll tell you if it's raining right now where you are, and then swear at you for not just looking out of the window. 
Check this out: https://technet.microsoft.com/en-us/library/bb490994.aspx
You're missing my point - if we assume we're doing subinterpreters (that is the interpreters are independent of each other) it's a very difficult problem to make sure you can share *anything* regardless of performance. Getting semantics right where you can e.g. put stuff in __dict__ of class and is seen properly by another thread, but there are no other things shared is very hard. In short - how do you propose to split the "global" data e.g. classes vs "local" data - there is no good distinction in python and things like pickle refer by e.g. name which lead to all kinds of funky bugs. If you can answer that question, then yes, subinterpreters sound like a good idea
It might a good idea to familiarize yourself with some database. From what I have seen, the most commonly used is Oracle's MySQL. There are others but this one is considered as good one to deploy bigger services. You definitely should know the basics and perhaps design a database or two by yourself but you should remember that Django is smart and it will create the ENTIRE database based on models that you create inside your application, so there is no need to write queries by hand. Django will take care of it and you should only supervise it's changes to database. Because of this, you technically don't need to know any database language syntax, but I would highly recommend it, so that you are able to supervise what Django is doing to your Database. Moreover if you learn how to write queries by hand you will for sure understand how it works.
I tried using the bind variables. Doesn't work. I tried pretty much every variation of binding variables too. There was quite a few I found. I think it throws out an error about the query not being long enough or something. I'll double check it when I get back to work. It only looks concatenated in the example for ease of understanding. 
That's because you don't have a huge legacy python 2.x code base to deal with, and a huge amount of infrastructure that is designed around python 2.x. There's so few reasons for us to move to python 3.x. We all know that some things are definitely better in 3, but better enough to go into a ton of technical debt to switch everything over? Every few months when the question is brought up, the answer is no. Our shop may not be your shop, but if I had to guess, there's a lot of heavy python users out there that are in the exact same boat we are in. If you want people to move, you have to make it painless. Moving to python 3.x sure as fuck isn't painless.
1. Read the sidebar -&gt; /r/learnpython 2. https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world
I think the reason C++ can change with less resistance is that people have faith in their C++ compiler. If something breaks, you probably know it at compile time. On the other hand, trying to run Python code after a breaking language change does not give you a tidy list of things to fix, and it’s hard to feel secure that your code is totally fixed. Of course, this is a non-issue because we all have perfect test coverage, right?...
I always believed that subinterpreter à la tcl is a wonderful idea. I agree, from performance point of view it brings pretty nothing from performance point of view comparing to multiprocessing. (Actually I don't really know why I found them wonderful it's probably a wrong feeling). There is one big point where it would be a big win comparing to multiprocesssing, which appeared to have use case in stackoverflow, it is when you have to pass readonly datastructure and you can't bear serialization cost.
Using **top** or **htop**, is the Rabbit MQ process actually running? Or is it a zombie (ie crashed but the process didn't die)? You may need to kill and restart it.
&gt; The overhead they've shown in research papers and projects like Gilectomy were ~40%. It's untenable. I'll have to look at those papers, but I would presume that assumes a particular approach to managing not having a GIL. Having limited shared objects between threads (which is common) mitigate a lot of the need for that overhead. &gt; Web services, crawlers, parsers, sys admin code, etc, all IO Bound concurrency. That'd be more compelling if I hadn't seen, built, used multi-process implementations of pretty much all of those (though I can't think of a multiprocess parser), I'm not sure that's borne out in reality. Nevermind all the SciPy stuff. We're running on machines with four cores if they have one, and often sixteen or more. Seems like there might be uses cases for this... &gt; If you need real OS threads for some bullet proof code, python probably isn't the right tool anyways as you can't optimize your memory organization anyways. Yeah, SciPy would seem to suggest otherwise.
This is terrible advice. A true beginner cannot just "start coding". You need to install python to start etc. 
okay
thank you very much. i'll give it a try.
No. The GIL protects interpreter data structures. That it also happens to make user land code safe which should not be is an unfortunate side-effect. 
I'm currently working on a lib and I wonder what (if any) are the best practices for that scenario. Should I call `logging.getLogger` and let the default user logging take effect? Should I limit log usage to debug levels? 
Edit: Apparently reddit used markdown so The Bold words should instead be with double underscore on both sides. If i understod the question correctly: For larger projects i'd learn how to use Blueprints. But for Simple login and dynamic Update of pages, with mongoDB: from flask import Flask from pymongo import MongoClient import json app = Flask(__name__) users_collection = MongoClient("localhost", 27017)["user_db"]["users"] //Example of Posting a Request @app.route("/login", methods=["POST"]) def login(): if users_collection.find_one(user): return 200 else: return 401 //Example of getting users @app.route("/login", methods=["GET"]) def get_users(): users = users_collection.find() return json.dumps(\ map(lambda user: {\ "username": user.username,\ "password": user.password\ }, users)) if __name__ == "__main__": app.run(debug=True) For JS i'd use axios to manage requests, it'll per default use json to wrap The data "which The Flask app expects in this example" example: users = axios.get("/users") will return a "promise" of The users to come. If you wish to call a function on The users after The promise, use "then" users.then(res =&gt; {stuff..}) And then you can do whatever you want with The data. example with react and bootstrap: import React from "react" import render from "react-dom" import Bootstrap from "react-bootstrap" class Users extends React.Component { constructor(props) { super(props) this.state = {users: props.users} } componentWillRecieveProps(props) { this.setState({users: props.users}) } render() { &lt;Bootstrap.ListGroup&gt; {this.state.users.map((user,index)=&gt; { return ( &lt;Bootstrap.ListItem key={index}&gt; {user} &lt;\Bootstrap.ListItem&gt; ) })} &lt;/Bootstrap.ListGroup&gt; } } axios.get("/users").then(res=&gt;render(&lt;Users users={res.data}\&gt;, document.getElementById("list"))) This react Component renders a list of all users into The Element with id list This might all have be confusing, but hopefully it helped somehow! i've written it all on My Phoebe so please have some oversight with syntax errors! 
Does popcorn time still exist?
Wasn't kat shut down? Edit: looks like it is up again. I will look up the how and why later.
I think the more accurate comparison is the Visual Basic 6 to VB.NET which led to probably millions of people looking at their internal apps, and rather the port to VB.NET they rebuilt them as webapps. That amazing moment when [Microsoft lost the API war](https://www.joelonsoftware.com/2004/06/13/how-microsoft-lost-the-api-war/). Python 3.0 was a stillborn release and a big mistake that set a bad precedent - lots of people tried it out and found everything broken. The next few releases weren't much better. Not until 3.4 did we have a serious production quality release. It took until 3.5 for the core developers to notice people wanted to write source files than ran in 2 and 3 and add the proper changes to support this in the form of %-formatting for bytes and the Unicode literal prefix. I don't think the a coincidence that this was precisely when Py3 found its stride, and all of the major packages were off the wall of shame. Backward compatibility may be an entitlement but it's a rational one. I look at this way - the cost to the core developers to preserve compatibility is incremental - informally, O(1). The cost to the community to absorb compatibility breakage is analogous to O(N).
If it's a tiny lib don't log anything
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
Unfortunately, it is a bit more difficult than that since sharing large pieces of data between processes efficiently is tricky.
Yes but it's also because rust can prevent Rc from being used across threads
Maybe it's just my programmatic mistakes but I've had tons of trouble getting all threads running in a Python gui program with blocking operations, I ended up resorting to multiprocessing Doing the same thing in c# worked, hell in c# I ended up doing ping so often on multiple threads it caused runaway memory increase
Makes sense. And if it isn't? 
Unless it's mobile web apps. Then there's a big market.
Probably best not to log anything just let the parent app do it
I would think that successful natural language processors wouldn't just be given away for free. Instead they're available as API and you generally pay per so many thousand requests.
No. That's my point. 
Employers want you to hit the ground running. You're expected to know how to explain your coding decisions in a professional manner. Your need to know what best practices are both written and unwritten. You'll need to know how to complete projects with other programmers. A good grounding in meta programming and pseudo code will keep you bridge the knowledge gaps. And when I comes to Python jobs which are usually data centric, you'll need a college level understanding of mathematics and statistics. Source: me. Employer of multi discipline Dev team for over twenty years.
This is great. Thanks. Can't understand some of the code, I haven't learnt about mongodb but will look into it.
Good question! I've not faced this personally in my travels but I've found this post which seemed to be fairly decent at explaining a solution: http://pythonsweetness.tumblr.com/post/67394619015/use-of-logging-package-from-within-a-library I'll spend some time tonight when I get home researching and hopefully expand upon this within the article!
I am having a hard time understanding how "don't log anything" can be a good practice. I would suggest to take a look at [the Hitchhiker’s guide](http://docs.python-guide.org/en/latest/writing/logging/) about logging. It recommends attaching a `NullHandler` to the root logger of your library. In this way, you can use logs while developing, but they will not bother the user of your library, unless he has explicitly requested it.
Well I added it but now it crashes, this is the error: "TypeError: Song_With_Num() takes exactly 1 argument (2 given)". Further more shouldn't I change the NumInRange to I in Song_With_Num? Thnx for the python faq but after a while I could not follow it anymore, this is still my real first python project and the fact that English is not my first language doesn't really help with Al the complicated words in the faq either. But I appreciate your help and hope you now a fix for this because the lambda is out of my league for at least a while. Edit: I fixed the crashing by adding the I to the arguments required of Song_With_Num and I added the update of the current song but it loads the first song of the page now. Here is the new code https://docs.google.com/document/d/1bXJFsyBERpUdvxLCsRxZe3cLOsgXg8IUjPIblMP5t5s/edit?usp=drivesdk
Thanks for that link, very useful stuff! It also made me realize that I missed a section in the official logging how to EXACTLY for this: https://docs.python.org/2/howto/logging.html#configuring-logging-for-a-library 
Sorry but it didn't work. It just treats var1 as part of the sql statement and not what is contained within var1. Thanks though :) Keeping this code though!
You should understand the basics of data normalisation, it's important for creating the correct model structure. Using an ORM you don't **need** to know how to write SQL queries, but understanding roughly what is happening behind the scenes helps avoid writing inefficient code that negatively impacts due to database issues.
Right! I tried it as you suggested and it executes the SQL but doesn't return any results because it's just using ref=var1 rather than the value that's assigned to it. Thanks though :)
Good One..
My answer should be, yes, have a general idea what are and how DB's work. Something general and low level. I don't see a point for understanding DB fully as a backend developer, unless you want to go full stack or apply for a higher level position from the start. E.g. in the codebase I work on currently there's almost no custom SQL (maybe 2 or 3 examples). Most of the optimisation is done either by proper design of queries created through ORM or by understanding queries DB gets and optimizing tables for those queries. This gives you "maybe" slightly less performant code (abstract problem assuming your code isn't a binary, but a server in a mesh of services) that's readable. 
right and that can be remediated to an extent with shared memory. Sharing immutable (or well defined in terms of memory) C structures is not hard. It's the structured data that's hard to share and cannot really be attacked without a GIL
Make a bot that scrapes twitter for CS:GO skin giveaways. That's how I started with python.
Awesome. Learnt it today.
Why did I not ever think of this one...thanks :)
Short and sweet, everything to the point. Good one indeed
Thanks..
Thank You!!
I tried using kill -9 but it didn't do anything. The htop shows that it isn't running. Using anything is giving me the node ERROR.
If a solution would be enable to share immutable things beside raw memory in python via share memory it would be a big win. Do you have some idea how it could be done in pypy or even better in cpython ?
Hmm, afraid there's too many variables. Your original error seems to have come up as an open issue earlier this year with newer versions of ampq itself. But now you seem to have somehow ended up with an orphaned PID file, if the process isn't actually running but the PID check only looks for the presence of the PID file. You might need to sudo kill the process if I shows present in any way, blow away the PID if it still exists, then hard reboot and try again.
If I understand your requirements and you need to interact with a SOAP web service then [suds](https://pypi.python.org/pypi/suds) is a great module for that. 
Do you have the source code? Could really use that script.
There's some good tutorials on YouTube that will walk you through setting up virtual environment, flask, sql, html templates, bootstrap etc. Pick the one you enjoy the most.
&gt; I want to be a back-end developer. So, I'm going to learn Django You might want to do a little more research as to what a back end developer does. I knew way more about basics like DB before I got around to picking and sticking with a framework.
For the umpteenth time a lot of code from Python 3 was backported, first to 2.6 and then to 2.7. How much work do you think that took the Python core developers? Python 2.8 was never going to happen as the Python core developers would not have done the work. Simples.
Python is all ready compiled. Do you actually mean that it would have to go from dynamically typed to statically typed, or what?
If it's that simple why don't you do the work?
suds isn't maintained anymore. We've been using [zeep](https://pypi.python.org/pypi/zeep) at work. Bonus: it has asyncio support, even if it is a bit rudimentary. 
&gt; I'm actually surprised at the number of people that think Python will die quickly, it is going to be around for a long time. Given the number of people who haven't yet moved their million LOC projects from Python 2 to 3 I must agree, especially as they are hardly likely to be able to afford the manpower to port their code to a language that is less efficient in terms of manpower.
Hey. I was trying to use zeep. How do I send a XML with zeep? Kinda can't find it in their documentation
You provide a wsdl, and after it's loaded, you can use the services defined in it like `client.services.ThingToCall({"someArg": "value", "otherArg": 4})` You can also use XML elements, but I haven't found a need for that in our code yet
Thanks for the reply. I'm more or less a novice in programming. If I send the data as array does the server format it back to xml? The company we work with told us explicit that we have to use xml.
Zeep handles transforming between xml and Python. I recommend reading the documentation for the project as it's very useful 
I've read the documentation, but it doesn't say anything about storing data in client.services. It says &gt; service is a ServiceProxy object. It will check if there &gt; is an operation with the name `X` defined in the binding &gt; and if that is the case it will return an OperationProxy
When you say "all", do you mean "all, all" as in "break Ubuntu all", or just "all" the ones I installed?
[Friture](http://friture.org/) is written in Python and does the exact same thing. It uses Qt and OpenGL. 
They have Google Cloud SQL, so you dump your sqlite DB and import it to your Google Cloud SQL instance. Apparently it's just a Google-managed abstraction of either MySQL or PostgreSQL, so you might be able to directly import with a tool like [this one](http://pgloader.io).
Has anyone successfully added a login page to a Dash app? My understanding is that flask components can be added, but also read that in order for a Dash app to have a login function, it needs to be hosted through Plotly.
Most of SciPy is in C and C can use HW Threads. If your C Extension call is a blocking operation the C Extension can release the Gil, use OS threads, complete the computation, and return. This is how CUDA/OpenCL implementations of algorithms in Python are implemented. Python is just a glue language, the best glue language, but it's job is to architect systems, frame works, interconnects, and hand off the work to optimized code or external processes. Not everything has to have every feature and Python has plenty of concurrency with a combination of asyncio (letting threads sleep when waiting) and C extensions (real threading, especially with C++17 concurrency implementations). 
It didn't work, python script need to sniff packets. Run using teststand #!/bin/sh runas /user:localhost \administrator c:\python123.py
You don't need an account. I'm not telling you this to make you feel bad; you are not able to see how many people don't even bother to click the link because of it being google doc. You would probably get more responses if you use the conventional way of communicating code snippets. So take it how you want it. Have a great day :)
I've had a good experience with codecov so far. I initially went for it because I liked the UI better.
at a high level, writing stuff to a file in `/run/shm` works pretty well.
Thank you for this. I got the book at your suggestion. I'm about half way through it now and it has helped me vastly, especially with the structure and usage of classes in my code. It's taken me tens of hours just to understand what and why the 'self' parameter is used. I feel like it's all finally starting to make sense to me. 
Python Cookbook by David Beazly Python Essential Reference by David Beazly Think Python by Allen Downey Fluent Python by Luciano Ramalho Just a note , watch the videos available on Youtube by these authors.
*parsing* natural language is already hard, but you can start by looking at NLTK (http://www.nltk.org/) Now, actually *interpreting* what it means is on a whole different level. I think you have to constrain your domain A LOT to even have a chance
You picked the wrong tool for the job if removing the gil would improve your project. People who need concurrent threads use tools that aren't Python and Python users don't need concurrent threads (otherwise they wouldn't be using Python). "Removing the gil" is like adding towing capacity to a Prius or sports tires to a F150. It's a waste of time because you're going after the wrong market entirely.
&gt; Pythons greatness is in its ease of use and strength as a scripting language. That has absolutely nothing to do with the GIL. The GIL is there to make CPython source code easy to grasp, without getting into the headaches of locking and other unclear nastiness introduced with multithreading. You **could** argue that Python code *today* assumes a GIL. Therefore any attempt to remove the GIL would have to be backwards compatible and would therefore not hinder Python's easiness (unless CPython makes another major version bump indicating breaking changes). Allowing true multi-core concurrency in CPython would lead knowledgeable developers to write far more efficient code than now.
Learn python the hard way is also a decent book for beginners.
Are you implying that numpy somehow doesn't suffer from the memory inefficiencies this article talks about?
You can generally convert a lot of Python 2 to Python 3 quite easily if you know both. I don't believe a lot of Flask has changed (although I haven't used it) This could be something: https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-now-with-python-3-support
Try https://blog.miguelgrinberg.com. His Mega Flask tutorial is currently Python3 friendly (3.4) and he's working on updating all to Python3.6. There's also a kickstarter pre-order where you can buy his work as video or ebook.
Learning Django before I go on holiday with the hopes to possibly create some interesting things without the Internet. If that fails I'll fall back onto PyQt or try the new Godot Engine alpha with Python scripting support (although I'll likely use GDScript if I do make a full game right now) Biggest problem right now is not having any ideas that are realistically doable for me in a short time frame (a week or so). The timeframe is basically the point I get bored and give up :(
I could help in testing when I start building my website for the first time. I am not sure how I will build it. I have a few ideas for widgets that could be useful like tables with colour coded rows and pagination, for database tables, tabbed windows, etc. I have seen other projects on the Web for displaying Web widgets. I like the idea that you can pass properties to the class widgets without having to worry about coding html. That part should be automated like you did. As for Web mapping I was using either openlayers or leaflet which are great projects. 
&gt; fairly well known feature of Ruby Sorry, I thought this was Python. I didn't realise that being an expert in Ruby was a prerequisite.
Thanks for the explanation.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I’m not really sure why I’m replying to this, but again: you don’t need to be an “expert” in Ruby to know about one of its most popular warts, and again, this is a joke. Most people in the Python or Ruby communities have some notion of each other’s languages given the whole “Python vs. Ruby” thing. I have no idea why you’re being so needlessly negative about a joke you just didn’t happen to find funny.
Thank you, i will check it.
Thank you
I've had extensive experience with SOAP libraries and while Zeep is actually quite good, you can also use tools like SoapUI to generate example requests and send those to a SOAP server as normal requests. This is noticably faster. The other way around offering SOAP services and creating valid SOAP/WDSL files from Python is extremly painful... Maybe other posters have ideas how to improve that. 
Write python versions of some of the stuff you do in Excel or whatever tool you use. Learn about regular python and what is different when python is used for finance (no floats etc). Also learn using IPython notebooks. Write a trading bot. There are a few sites where you can get historical data to train on, like https://www.quantopian.com/ Or just do stupid shit, like messing with Pillow image library and draw crazy pictures, maybe based on real data.
Since you're having a computer do it, the easiest thing to do is: 1. Generate a list of all possible answers 2. Make an initial guess 3. Figure out which entries on the list would give the same answer that you just got 4. Guess one of those 5. Repeat Then you can add on smarter thinking, such as picking a guess that has the best chance of removing the most number of possible guesses. See Knuth's Five-Guess algorithm for mastermind to learn more about that.
There was a pretty good and light to read explanation on entry_points here a while ago: http://amir.rachum.com/blog/2017/07/28/python-entry-points/ I use entry points for a while now to allow users to write packages that extend the functionality of an instrumentation control framework with additional instruments. Works like a charm and allows me to keep the core package very small and almost free of updates now that its functionality has mostly settled.
This is pretty basic and doesn't address *why* someone would want to use a tuple instead of a list. The key advantage is immutability. You know if you pass or return a tuple, it cannot be modified (and the "hack" they talk about at the bottom makes a copy essentially). Also, any tutorial on tuples, really should also address named tuples which are great for combining the advantages of a dict (names) with those of a tuple (immutable)
Still working on getting better in understanding Python. Sometimes I feel like I'm just not smart enough for the language :-). Planning to make an app to track all bits my personal life (how much I sport, how much I consum, how much I play read, how much I sleep, etc.)
Doing some courses that I downloaded and hopefully starting a machine learning course soon just need to prepare myself for it hoping to complete them before I get home from holiday because games will draw me in
excellent, didn't know we could do such things with python
Yes, your libraries are stored on your operating system, not the IDE itself.
Thanks I was thinking that I just wanted to make sure.
What is the deal with the Udemy course advertisements disguised as Medium posts? I know you're not Al Sweigart, and I do not think this form of marketing represents what Sweigart would want. Are these just simply referral links where you get a cut or something? I always figured they were just course authors trying to squeeze out all the views they could get, but now I am not sure anymore. If anyone actually wants to support the author, rather than spam, you can visit the official [automate the boring stuff](https://automatetheboringstuff.com/) and, if you want the video course from Udemy, check out his [referral link](https://www.udemy.com/automate/?couponCode=FOR_LIKE_10_BUCKS) from his home page, which is cheaper than this advertisement is.
[PyCharm](https://www.jetbrains.com/pycharm/) is very popular and very powerful. There is a free and a paid version, but the free version is sufficient for most tasks. The main complaint you'll see about PyCharm is that it uses too many resources (CPU and memory), but if you have a relatively recent computer it should run fine. Edit: PyCharm calls on Python when it needs to actually run your programs, so as long as you choose the correct Python interpreter within PyCharm, it will see all your libraries.
the problems is that you can't write python objects to `/run/shm`
you think that is a good starting point?
Well I am on holiday at the moment so I got a shitty laptop but it will run fine when I get home.
Coding your own 3D graphics from scratch is pretty damn tough, even for a simple set of textured surfaces. A lot of very clever linear algebra involved. See if you can figure out how DOOM (1993) managed to simulate 3D would be a good start. Also, Python is definitely not the best language for this. You're going to need a pretty decent rig and excellent code to make anything look good.
They are both garbage, real coders code in notepad. 
That's not helpful at all.
I have only used Pycharm and have tried to switch to VS Code one or twice and found it too difficult. I would suggest sticking to PyCharm.
Since you have programming background, I would check out: Effective Python: 59 Specific Ways to Write Better Python (Effective Software Development Series)
Try TDD for Python book. It's available free for reading online. It's good step by stem project with everything you need like Python, Django, Git, testing, deployment, tasks automation etc. http://www.obeythetestinggoat.com/pages/book.html#toc 
Yep, no bullshit and beating around the bush. I wish more guides would've been like that
VS Code lacks some features that Pycharm has. You should check which features your coders are using. Note that Pycharm is mostly just IntelliJ (from the same company) + the python plugin. So using multiple languages isn't really an issue with their tools. The base intelliJ product is the core for all of their language IDEs. Just install the language plugin.
I'd recommend trying out a basic editor like Geany or something. It's nice when you can always use the same editor for every language. 
Hey, I realize this is an old post, but I realize the amount of work that went into the original book, and I wanted to thank you for open sourcing it.
I've always thought of tuples as a heterogeneous collection where order not only matters but is semantically important. e.g. with Flask you can return a tuple of body, status, headers. You can't return status, headers, body and have it treated the same (though, `body, headers` is also valid but only because flask special cases it) namedtuple (and it's typed brother) make this more obvious by giving names to indexes. 
Learning Spanish
I ended up buying his book to support him. It explains the basic concepts well and he was kind enough to provide a free version on-line. 
lol. notepad is for wimps. real coders use emacs. and they code in hex. 
Sorry. I meant to mention adding it to the parameters as well, but you seem to have figured that out. If you add a print statement to `Song_With_Num`, what happens? Are i, songPerPage, PageNum what you expect them to be?
I'll check it shortly, again thnx for the feedback back!
Correct. They are in pure C.
Definitely ask your devs! I personally hate VS, and if management pushed it on me I'd be pretty pissed. 
In a lot of cases it's not any more tricky than sharing data safely between threads, though, and that problem isn't unique to Python. It takes a little forethought and planning, but that's really no different from solving any other non-trivial problem.
Thanks I will try it out at some point.
Minor correction: Unicode literal prefix was returned in 3.3. I would also say that 3.3 was the first release supported by major frameworks.
I like PyCharm, but if you outfit SublimeText with the right plugins, it can be quite powerful. The nice thing about SublimeText is its performance: the thing is wickedly fast always -- and you can extend it in Python.
I just launched what I posted about in last week's thread - a Python package for the Pardot API! Pardot is a marketing automation platform from Salesforce. There was already a Python package out there called PyPardot, but it was for an outdated version of the API and the author is no longer maintaining it. So I have updated the package for the latest version of the Pardot API and added new features made possible by the latest API update. I still need to test all the features and there's probably lots of other areas for improvement, but I'm feeling pumped and proud of my work so far. I have learned so much already, I only started working in Python a few weeks ago. If you're interested, you can find it on [GitHub](https://github.com/mneedham91/PyPardot4) and [PyPi](https://pypi.python.org/pypi/PyPardot4).
In my experience, college programming classes are pretty basic. It may be fun to see two ways to solve the same problems. It should not be difficult. That being said, After the classes, I would pick a language and get good at it before picking up a second. I learned that the hard way. 
As a side note. If you are a part-time programmer, I highly suggest sticking with a single language for as long as possible. I learned that the hard way. Switching between languages when it is not your near-full-time job decreases efficiency. At least it did for me. 
Thanks for the advice! I work in finance, so it's definitely something I'm looking to grow on the side long term. Did you self teach or did you go through classes? I was considering going through a coding boot camp after the fact and focusing most of my efforts on Java. 
I believe that a hypothetical Python 2.8 would have further hampered the transition to Python 3 and divided the community even more. If another major 2.x was released and supported all the new features from Python 3 without forcing new Python 3 constraints (like knowing when a string is a string and when bytes are bytes), it would have enabled everyone to just keep using Python 2, and adoption of Python 3 may have still been where it was 6 years ago. Some people advocated for a Python 2.x with deprecation warnings thrown around everything that wasn't allowed in Python 3. But deprecation warnings are frequently ignored. If, however, it forced those constraints on the developers... Well, that would have been Python 3. Selfishly, I would have loved a Python 2.8 that was at feature parity with Python 3, just because I would have loved to run all the code written for Python 2 (like a lot of the Machine learning stuff that still, for some reason, continues to be written for Python 2, mostly because of Google and Facebook) with all the features of Python 3. But I understand why the core developers wanted to force the change.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I will try it out as well at some point
When I added the print function it just prints the first song of the page and it prints "False". This is what I added print(self.Song[I + self.song_per_page * self.PageNum]) and print(I)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Unity + C# is the way to go for 3D. I think it still makes sense to learn some python, which will ease you into programming. Later you can move on to C# which is more complex. Try using python to make some basic 2D games with pygame, a web app with flask, or just a simple command line application.
I got into Python a few months after graduating from a pretty Java-focused university. When you are new to programming, it's easier to mix up elements from the various languages you've learned or are learning. Perhaps we learn to properly compartmentalize languages later in our careers? In my case, I ended up writing some Python code that looked a whole lot like Java code, including the classes. Over time, I've gotten used to writing more idiomatic Python code and now I barely even write classes in Python anymore. There's only one ~~bad~~ good habit from Java that I've never been able to shake: camelCasing.
In a sense that post is trying to answer precisely that question :-) If we are indeed, then it should pick up no publicity (which is not true) nor commercial interest (which we'll find out). Let markets decide!
Oh blech. `i` should be an int, not a bool, so that’s not good. The framework is probably trying to be too clever and passing some arguments besides i. Incidentally, the reason this still plays the first song on the page is because in Python, False == 0. Humor me and try `.connect(functools.partial(self.Song_With_Num,i))` instead of the lambda as a way to pass in the value of i. 
Emacs ...
The zen is self contradictory on purpose. You can't follow it strictly. 
This is a problem and you have a chance to help it not be a problem. For one thing, if you are unequipped to evaluate these tools, then you are not the one who should be evaluating them. This is your CTOs job. Secondly, and far more importantly, if a CTO ever came and told me what editor I was allowed to use, I'd laugh in his face and walk out the door. This would not be a place that knows how to support developers and it would clearly demonstrate their lack of understanding and ability to manage development. I'm sure the excuse will be something really ridiculous like 'IT wants to control what gets installed and it's easier if ...' bullshit but that is ITs problem and shouldn't become the developers problem. IT is there to provide the necessary conditions to get shit done, not prohibit work because of their lack of experience. 
Not quite though. Each block in a Python deque is 64 entries long. And also there's a std::deque too. 
lol. emacs and hex? I scribe 1s and 0s straight to a platter with a magnetic needle. And I'm old enough that I didn't even have 0s when I started out.
I think you're over reacting. While I agree that the devs know best what tools to use, in the real world licenses cost money, and there's a ROI for every investment. The CTO didn't try forcing anyone to use a specific tool, he inquired if using VScode would be a valid tool to use (which is a high quality tool that many devs prefer to use anyway) 
Great post. It illustrate the basic, most used commonly used functions for working with pictures. This should give a novice a great start with PIL. 
!getbook Effective Python 59 Sorry for plugin my bot, but this is the perfect scenario! 
Oh that's an interesting approach! I will check this out for sure!
 1. **Effective Python: 59 Specific Ways to Write Better Python** by Brett Slatkin. (4.18/5 *) [Link](https://www.goodreads.com/book/show/23020812-effective-python?from_search=true&amp;ac=1) &gt;Each item in Slatkin s "Effective Python" teaches a self-contained lesson with its own source code. This makes the book random-access: Items are easy to browse and study in whatever order the reader needs. I will be recommending "Effective Python" to students as an admirably compact source of mainstream advice on a very broad range of topics for the intermediate Python programmer. " Brandon Rhodes, software engineer at Dropbox and chair of PyCon 2016-2017" It s easy to start coding with Python, which is why the language is so popular. However, Python s unique strengths, charms, and expressiveness can be hard to grasp, and there are hidden pitfalls that can easily trip you up. " Effective Python " will help you master a truly Pythonic approach to programming, harnessing Python s full power to write exceptionally robust and well-performing code. Using the concise, scenario-driven style pioneered in Scott Meyers best-selling "Effective C++, " Brett Slatkin brings together 59 Python best practices, tips, and shortcuts, and explains them with realistic code examples. Drawing on years of experience building Python infrastructure at Google, Slatkin uncovers little-known quirks and idioms that powerfully impact code behavior and performance. You ll learn the best way to accomplish key tasks, so you can write code that s easier to understand, maintain, and improve. Key features include &gt;Actionable guidelines for all major areas of Python 3.x and 2.x development, with detailed explanations and examples Best practices for writing functions that clarify intention, promote reuse, and avoid bugs Coverage of how to accurately express behaviors with classes and objects Guidance on how to avoid pitfalls with metaclasses and dynamic attributes More efficient approaches to concurrency and parallelism Better techniques and idioms for using Python s built-in modules Tools and best practices for collaborative development Solutions for debugging, testing, and optimization in order to improve quality and performance " *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Codecov
I started using the Edx courses when I was having issues with code academy. It also has other courses that you can use to advance past just syntax and normal use. 
It says "Name Error: Global name 'functools' is not defined 
import functools, silly
Sorry dude ass I said before new to python didn't know I needed to import it, OMG IT WORKS THNX DUDE!!!! 
Okay thnx, didn't know that so I'll be using that from now on!
Also: heading 1 in pep 8 "A Foolish Consistency is the Hobgoblin of Little Minds"
Yay! I’m glad I could help!
The error is probably raised due to the variable never being created because the first for loop is skipped. Try setting the variable outside of the for loop with a None value and debug from there.
My first observation - if there is no file in the current directory whose name contains `.nessus`, then `mainTree` will never be initialized.
std::deque is very unlike python deque; more like a double-ended array python deque has O(n) lookup time for elements in the center of a large array according to the docs which makes it's performance similar to a linked list
Hey I also want to add a auto play function have you got any idea how to do that? In my text based player I had to manually break a loop before inserting a command because if I didn't do it that way the code would just keep on waiting on a user input but that caused the code to not get to the auto play part. I guess it is possible with a event from pygame but that is again a hole nother level for me. I used pygame.mixer.music.get_busy() and a if statement for that in the text based version.
Good question 
The [Fibonacci Sequence](https://en.wikipedia.org/wiki/Fibonacci_number) is a very common sequence in Math, Computer Science, Engineering, etc. &gt; 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ... Loop 1: Line 4 - starting values a = 0, b = **1** Line 4 - ending values a = 1, b = 1 + 0 = 1 Loop 2: Line 4 - starting values a = 1, b = **1** Line 4 - ending values a = 1, b = 1 + 1 = 2 Loop 3: Line 4 - starting values a = 1, b = **2** Line 4 - ending values a = 2, b = 1 + 2 = 3 This code builds that sequence(1,1,2,3,...), however, since you have `while b &lt; 10:` the sequence will terminate after printing 8 and not make it to 13. *Also for future inquiries, please direct those to /r/learnpython as state in the sidebar.*
It seems to me that have a correct understanding of the logic. What exactly are you confused about for line 4?
I’m almost certain that polling (continuously asking whether the song is done) is not the best way. I see `pygame.mixer.music.set_endevent`, which probably is a better option. Also `pygame.mixer.music.queue` might be another route, if you want to load up a bunch of songs at once to play sequentially
http://www.panda3d.org/ &gt; Panda3D is a game engine, a framework for 3D rendering and game development for Python and C++ programs. Panda3D is Open Source and free for any purpose,
You raise a good point, and I know that I linked to the Python 2 suds module, but for anyone else that may stumbled on this, suds for Python 3 is being maintained: [suds-py3](https://pypi.python.org/pypi/suds-py3). I'll have to take a look at zeep.
I self taught with lots of help from friends and co-workers. After about 20 years in the IT industry, I recently went to school to get a B.S. in computer science. Most of the programming classes were not more advanced than going through a few tutorials. That being said, I had a lot of experience. Never as a full-time programmer, though. My advice to you, take the Java and Python classes. Then, to supplement your career in finance, focus on Python. It is a great multipurpose language for handling data. Nothing wrong with doing whatever you like. However, if you want the most bang for your efforts, stick with python and learn it well. With the rise of data science, I think we are seeing more and more part-time programmers. I'd love to see resources geared toward that group. I believe we have different needs than full-time programmers. Different career arcs. Different amounts of time to really learn something. 
teach me English and i'll teach you Spanish :P
Similar big-O yes, but 64 times more memory efficient and faster access. That's a big difference. 
One more thing. If you stick with one language and learn sound development practices, you will be able to pick up other languages easily later on. 
&gt; Maybe it's just my programmatic mistakes but I've had tons of trouble getting all threads running in a Python gui program with blocking operations, Python has a GIL. That's exactly what that prevents. You can make very advanced GUIs that nicely handle multithreading such that it's imperceptible that you only have 1 thread. &gt; I ended up resorting to multiprocessing Interesting idea. I'd never thought of that. What are you doing with your multiprocessing/threading?
+1 for geany
This is just opinion, but I think it is easier to learn a language with braces, semicolons, static typing, etc. before jumping into Python. If you are only ever going to use Python it's fine, but having a base understanding of the syntactical differences will make it much easier to pick up other languages in the future and help you appreciate Python's syntax even more.
Beyond PyCharm or text editors. If you're working with scientific python, [Spyder](https://pythonhosted.org/spyder/) is pretty well liked. [Ninja](http://ninja-ide.org/) is another IDE. Though don't really know much about it lol
http://pycoders.com
IMHO management shouldn't force developers what tools to use, especially when the tools are free. I've had periods when in a python team of 3, the 3 of us used different environments (emacs, pycharm, and notepad++). I'd say that pycharm is by far the most liked and friendly, and effective (I was the notepad++ guy). But my 2 cents are that in a functional team this shouldn't matter (except for when you argue at lunch), and for sure the choice should be personal.
Act like you know absolutely nothing about what you are trying to do. With that, read what you posted and see how many things people would have to guess to help you. The only fact you provided was the development IDE, which has nothing to do with command line vs GUI vs web output. Please provide enough detail that those responding will at least have a chance of making it someone relevant to what you are doing.
Sorry I'm messing 2 separate things up In the first I had to use multiprocessing with my gui app because I was using a hardware library that would occasionally freeze on device connection established and the second one if was trying save a serial device to a log file on a background thread, somehow despite my efforts it hogged basically all the time not letting the main thread run
also, try /r/learnpython instead for questions. More likely to get a meaningful response over there
VS Code and PyCharm CE are free though. There is no reason for corporate to dictate which tools you use if the developers are all following the same standards and the cost is free. If I want PyCharm Pro, I can just walk into my Director's office and ask for the credit card. We do license Visual Studio, and the Director can tell me to use that or the CE edition of PyCharm if he doesn't want to pay for a PyCharm Pro license. Forcing tools upon your devs (when there are viable alternatives that do not affect the outcome of a project) is a good way to tank retention.
Thanks for the referral link- $10 is a steal for an online course. 
Thanks man. Cool will. definitely check it ou!t. Chillly bro 😎 python gaming!?!
Yes
Check out Pillow, a fork of PIL with bug fixes and python3 support https://python-pillow.org/
So numpi is a library (or a framework depending on your use of terms). You still use whatever underlying pythons interpreter. I can still write list comprehensions and use numpi. According to the article, one of the causes of memory inefficiencies is use of collection generator syntax. So from what I read, by simply using numpi you still can fall victim to memory inefficiencies when using pythonic idioms, and that was my concern: are there known techniques for eliminating these sorts efficiencies due to writing idiomatic python?
&gt;While multiprocessing does push work in to multiple processes which &gt;can all run in parallel it's has huge drawbacks to what is more &gt;traditionally referred to when people talk about parallelism. That's because people learned a very low-level model of parallelism with another language because that's all their language offered. They then react to Python's different model negatively - much the same way some developers have a negative reaction to significant white space simply because it's not what they're used to. &gt;Meaning with multiprocessing you do not get for free: 1. each task &gt;getting access to the same memory. In exchange, you get spared the horror show of attempting to debug race conditions and all the other problems that can come with shared memory and locking and needing to ensure that everything is thread-safe. This seems by design and in line with Python's nature of being powerful but simple. &gt;It works well but it only helps in a subset of use cases. That subset, IMHO, would form the majority of use cases. The multiprocessing module does have features to share memory (e.g. Value and Array) when necessary. 
As a programmer who isn't interested in low level stuff, I'd love it if I could easily disable the GIL to use all 8 cores using shared memory without pickling everything under the hood. That would make my concurrent code go way faster. I'd just have to use locks, easy. So for me there's a lot of value in removing the GIL (even if it's a non default setting for python) I know about all the other options but I'd love it if it was just a feature of normal python or pypy. 
I guess Spyder is the one for me as I am looking to go into machine learning.
... or vim :)
[removed]
If your objects are not picklable, or if they are large, you need to go beyond what is available in the multiprocessing module. If you are aware of anything that makes this kind of thing easier, then I'm all ears. I tend to run into this problem regularly and having a good solution would be nice.
I used both and in fact there's difference between both. My first option is pycharm. My degree of knowledge is higher than with visual code and after some testing I came to the fact that the way pycharm works it's better for my needs but you need to think about your needs. I used both versions of pycharm, the Community Edition and the Enterprise Edition. I don't need the Enterprise because I'm not using a fat framework. I checked visual code a couple of times in the last few months. I like it but I don't like it more than I like the way pycharm works. I do program microservices and APIs with flask, so, in fact the only things I need are the debugger and the language helper. Both things are available in the two IDEs, so, as I said, it's more important to test the interface yourself and check which one is better for you, which one adapts better to your needs, than the technical specifications in this exact case because both are quite similar. Another important point of view is what others have already said in this forum: the most important thing is you to check with your development team their needs, likes and dislikes. In this exact being both free tools I don't see any reasons to forcedly use one or the other.
i don't know whether it's right, but i think Gimp is written in Python. At least you can open a Python Shell in Gimp and manipulate your image with it
Ok, thanks, I founded another way, if you want to check a little bit I would be very grateful https://github.com/neriphy
I made a reddit bot about books, then made it into a discord bot. I've got a few more ideas about bots that I'd like to implement. Check it out: !getbook learn python the hard way
 1. **Learn Python The Hard Way** by Zed Shaw. (3.91/5 *) [Link](https://www.goodreads.com/book/show/8341335-learn-python-the-hard-way?from_search=true&amp;ac=1) &gt;This simple book is meant to give you a first start in programming. &gt; &gt;The title says it is the hard way to learn to write &gt;code but it’s actually not. It’s the “hard” way only in that it’s the way people used to teach things. In this book you &gt;will do something incredibly simple that all programmers actually do to learn a language: &gt; &gt; 1. Go through each exercise. &gt; 2. Type in each sample exactly. &gt; 3. Make it run. &gt; &gt;That’s it. This will be very difficult at first, but stick with it. If you go through this book, and do each exercise for &gt;1-2 hours a night, then you’ll have a good foundation for moving on to another book. You might not really learn &gt;“programming” from this book, but you will learn the foundation skills you need to start learning the language. &gt;This book’s job is to teach you the three most basic essential skills that a beginning programmer needs to know: &gt;Reading And Writing, Attention To Detail, Spotting Differences. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/BookBot 
Have you messed with conda's settings? I tried the same twice just now and it works just fine. I'm on OSX running conda 4.3.7 if that matters.
I agree, and i personally see it as guidance... but there is a talk about "pythonic" way. What is your opinion on that? Is pythonic way similar or tied to zen of python in your opinion ?
Amen to that brotha :D 
I'm gonna start on kaggle and work on the titanic competition, as well as blog about it! Follow along if you're interested: https://datascienceseal.wordpress.com/
&gt; I don't need the Enterprise because I'm not using a fat framework. Do you mean PyCharm Professional? It also supports Flask. There are a lot of great features built in to the Professional edition (not just Django support) that your comment seems to be glossing over. https://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html 
Come on over to r/learnpython. Post your code - either in pastebin or the like, or if it's small, directly into the post (but remember to indent it all by an extra 4 spaces - see formatting help).
Oh ok thanks
I have a interview for network automation developer! Python is the language and I just learned it two months ago!
Teaching a friend some Python by helping him analyze TEM micrographs to figure out the magnetic distribution of a sample. (First time I do anything like that, but it was fun to figure out.) Turns out we managed to replicate the functionality of a $10,000 piece of software that his lab used (it might do more, but apparently they didn't touch that part). He's going back to his country soon, so we might continue after that, but we're trying to automate the entire pipeline. On my side, I'm planning on doing some bioinformatics and machine learning courses, as well as the 10 apps course that was posted the other day. And maybe teach another couple of people.
Making a raspberry pi simple network tester for vlans. Not great at python but the project is great learning.
This is how I feel. Also didn't help when my python won't do what the tutorial in YouTube said it should.
What have you got so far? Post you code, and we'll see how we can help you.
If you want to convert it there's a module for that: https://docs.python.org/3.0/library/2to3.html never used it but other things like it exist. 
There are a number of tutorials - 1. [Flaskr](https://github.com/mjhea0/flaskr-tdd) - Intro to Flask + Test Driven Development (TDD) 1. [Flask by Example](https://realpython.com/blog/python/flask-by-example-part-1-project-setup/) - 8 part series 1. [Real Python](https://realpython.com/) - Real Python teaches programming and web development through hands-on, interesting examples that are useful and fun. 
Yeah had to install this to make this work with Python 3. pip is way cool BTW... talk about easy... &gt;pip install Pillow
Whoops. That was the one I was looking for 
Usage is one aspect. I use coveralls just because I found the magic block of code that made my stuff work. Codecov didn't work for me. Just pick the one you like, but get one.
This is awesome!! Thanks for this. Totally saving this post. One day I'll have free time to buckle down and learn more about image processing with python. Thanks for this. 
Unless you really want to make your own game engine using OpenGl i recommend looking into Godot.
&gt; We do license Visual Studio Visual Studio != Visual Studio Code
Because flask is old and broken use sanic
I was just providing a little detail of my work environment, I am well aware of the differences. If we didn't license Visual Studio there would be no reason for him to say no to a PyCharm license. Although, our Director will buy any one of his developers pretty much anything we ask for. I generally use emacs, but I am familiar with VS Code. I use Visual Studio when working with C# and Azure projects.
Well, there is also OpenCV.
Thanks. I'll try this out in a little while. I pieced the thing together using os.system() and running the curl command. This will be helpful! 
Yep... this. As indicated by your error messages, your are running on the windows platform. This is a complete mess for SSL on python, which you can read up on with some googling. My understanding is that Python doesn't have the ability to play nicely with Microsoft's credential manager (for good reasons I can't recall) and therefore your python install will have it's own CRT files (sometimes multiples) around. For some applications you can determine if they are referencing urllib2 or certifi, locate where that module is handling Certs, export your Cert (probably employer provided, and you are inside a firewall?), and use openssl to package a new cert into the same name, same location. I get mixed results, depending on the stack. Use a virtualenv, for sure. There is [PEP-476](https://www.python.org/dev/peps/pep-0476/) which addresses just this problem at the standard library level. I'm sure I've not gotten all of the above perfectly correct, but that's my understanding. Sometimes (Google Earth Engine API) I can get in to the actual calls to urllib2 and change the attributes of that call to turn of verify. Your mileage may vary. Perhaps someone more knowledgeable than I can chime in. More reading: [Pretty much the same problem, some 'debug'/hack hints and good discussion](https://github.com/ContinuumIO/anaconda-issues/issues/494) [Another discussion from the RHEL folks](https://access.redhat.com/articles/2039753) Good Luck, and forgive my ignorance.
Years ago, I made one of those 'church sign generators' in PHP, using the GD library. With PIL(Pillow, likely) I'm thinking I'll be able to do the same with python. \#score