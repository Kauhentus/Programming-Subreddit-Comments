OP, please increase the `max-width` attribute of your `div.post` style - the fixed-width stuff is unreadable at that width!
Yes.
I would recommend starting with flask, much easier to get started with, check my Github profile https://github.com/Leo-G for apps I have built with flask, feel free to fork and check them out to understand flask better
Try nuitka. It converts python code to C and compiles it.
Actually it becomes *more* of an issue as you scale up, and there's no reason not to use Flask for large deployments. What is "too big" for Flask? And I really don't think this is subjective - it's just the simple observation that Django *does* more than Flask out of the box. It then, by necessity, will be bigger and more complex. And that's not a negative for Django. There's absolutely nothing wrong with that *if* you need to use the feature set of Django. If you don't then it most certainly is a waste. And the flip side is true of course - some people stumble around blindly trying to replicate a set of features that already exists in Django. If you are doing this, then it's probably worth asking why? Probably not worth it. But maybe it is - maybe you need the feature set of Django but don't want the implementation Django is using or aren't keen on some Django way of doing something. That too might be a case where you'd pick Flask, but again it should probably be after some long and hard thought. I've used both. I'll definitely reach for Flask over Django, hands down, when building APIs for example. If I need a full featured, monolithic site, I'll definitely look to Django. Right tool for the job, and all.
Ahh, ok. Gotcha. Yeah Python is hardly cryptic compared to Bash or Perl. I was talking in comparison to Java. 
I envy you - it's the opposite for me, I have so many ideas, and need to work on MicroPython core instead (for example, because of Kickstarter obligations). Anyway, random suggestions: try to make series of simple, but useful smart home projects. If you're on a heavier side, it would be cool to add tracing JIT support ;-). 
The official documentation is the right place to start. It includes tutorials: http://docs.micropython.org/en/latest/esp8266/esp8266/tutorial/index.html There're many 3rd-party tutorials too (which aren't replacement for the official docs). For example, Adafruit tutorials are getting high praise, links can be found at http://forum.micropython.org/viewtopic.php?f=2&amp;t=2278
I don't think exposing an aiohttp.web server directly to the public web would be a good idea. Same as with other python servers, you would want to have something like nginx in front to handle slow clients for example. Also, if you are going to serve static assets, nginx would handle those better.
I find it interesting how, at least in Python, a performance measurement also gives a good idea of implementation complexity as well. 
A very nice write up! btw stackoverflow lied to you, you don't really need a debug build of Python, I know that for sure because I've used Python extensions for GDB just fine with a standard build. Of course it helps to not have "variable optimized out" and weird jumps around the code, but it's mostly irrelevant if you're primarily interested in what happens on the python side of things, and if the alternative is recompiling the whole thing and waiting a couple of hours to reproduce the bug, it's not worth it at all. Also, I think that when you install `python-debuginfo`, it's supposed to put a special magic file called `python-dbg` or something (which is actually just a renamed libpython.py) right by the python executable which would make gdb load the extension automatically, but apparently it relies on the kind of black magick that only works when planets are in conjunction so being a dabbling astronomer at best I always had to patch sys.path like you did.
It's almost a worse version with less tooling support. Seriously, I invigorated the IRkernel project (R for Jupyter Notebooks) because I didn't like knitr. BUT I see one important advantage of stitch: you can use it with multiple kernels (languages) in one document.
I've been talking in the pyqt irc channel and also looking around the pyqt mailing list, and it seems this might be a bug in pyqt where it's missing some libraries. https://www.riverbankcomputing.com/pipermail/pyqt/2016-September/038044.html Could you tell me what your setup is and how you installed pyqt? I'm wondering why it's working for you.
I have updated the project and it works for both Python 3 and 2 now :)
Jupyter Notebooks require you to run the kernel and do things within the browser, interactively. The saved file is a JSON file that is pretty much unreadable if you're working from a text editor. I would say the main appeal is for people who don't need interactivity, e.g. you're executing code in another shell, and you need all the comforts of your text editor. I'm writing a lot of visualization lessons in Python and this makes it much easier for me to organize the files and grep them. I think there's more flexibility in output formats, such as PDF, DOC, and Markdown. I like Jupyter Notebook but maintaining the files is a bit cumbersome and I don't really need the interactivity...and keyboard navigation in the browser is limited.
Can just anyone post to medium.com?
 float(input("What is the temperature in Fahrenheit?")) 
Thanks man
/u/snogo You know that this demo is bullshit, right? The time difference isn't the use of the GPU ... the time difference is the use of numpy sum vs. an xrange based iterative sum. 
Can you also explain about rounding numbers to 2 decimals? I know that you have to do: %.2f but idk what the percentage is doing there
Uh oh! Thanks for the screenshot. The CSS for that board was pretty tricky. Can I ask what browser you're using?
I agree, gimboland. I just kept the default settings of my Ghost theme. I will definitely look at it for my next blog post!
This is sort of a nonsense arguement. Following this reasoning, if ordered dicts were 10x as slow, and in 99% of the cases you didn't need the ordering, but 1% of the time it would be useful, you'd choose to do make it ordered. I'm assuming that's not what you actually mean, because it's absurd. So, obviously, the decision has to be a balance between the performance benefits and costs. The explicit reason the python devs don't want to make this part of the sepc quickly is because in their opinion unordered look up performance is much more important than ordering. While I'm not a core python dev, I have spent some time looking through the source code, and I'm inclined to agree. I also tend to think they know what they're doing. They're only even considering it because it's costless right now, and *even so* they're hesitant to make the change. That should really give you a sense of where they think the balance lies.
We will not do your bloody homework /r/learnpython
Thank you for working on it! 
here's a site that describes the python string formatting syntax: https://pyformat.info/ honestly, asking homework questions here is a dick move.
I've never used it, but I will definitely take a look. Thanks for your suggestion!
The book covers Linux primarily (which should also work with OSX). I think the issue is that printed books are at the 5% rate, while e-books are a separate item, which get charged at the 20% rate :( You can search for "E-books" in the [EU VAT chart](http://ec.europa.eu/taxation_customs/sites/taxation/files/resources/documents/taxation/vat/how_vat_works/rates/vat_rates_en.pdf). We're currently working on the printed version, but I don't know what the final price for that will be.
That is nice, thank you for that, I may consider going that workflow. Actually I think I'll do Jupyter now because it's been a very long time since I've done matplotlib so I'd better do things interactively. I think I have tried that nbconvert route some time ago and then decided against it because the guides I'm writing are part of a site, and the knitr/stich workflow allows you to add YAML metadata to each file (e.g. title, description, etc.). Minor thing I know, but such are the logistics.
You can always just implement some interpolation algorithm yourself. It shouldn't be too hard.
Hm. Then why does continuum sell NumbaPro? Just for support, or...?
Generally pyinstaller does a pretty good job of figuring out which modules you need and packaging them by itself. If it does miss something, you can simply add the requirement to the spec file. You can also add non-python package dependencies to the spec file, so if you need a configuration file, or a binary, you can add those in there as well.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Typo in title :(
Ahhh Stockfish. I love all projects with Stockfish +1 :) I once made a Twitch Plays Chess where people could vote and my bot would read the Twitch IRC Chat and every few seconds the votes would be aggregated and the majority vote would be played against Stockfish. Even at Stockfish's lowest level, humans were no competition :-) Unfortunately, demand for this was very low :(
ok thanks
Awesome :D
Another bug: https://sc-cdn.scaleengine.net/i/fbe6eeec310b8bc5b3c74bd4a0e42930.png
It is a joke on a common horror movie trope: http://tvtropes.org/pmwiki/pmwiki.php/Main/TheCallsAreComingFromInsideTheHouse
What hardware are you running MicroPython on? I currently use an Arduino uno for a project, and would like to replace it with micropython+ hardware. Preferably &lt;$10 in cost. Any suggestions?
 It was my first time using Stockfish and I have yet to come close to beating it lol. That's an awesome idea! I would love to make this 2-player or but yeah there just isn't enough demand to justify the time and server cost. 
monetization
Can't run a python script, but installed Kali. .. Makes sense.
This is actually really nice. I'm not a postgres pro, so just the autocomplete is worth it. The pygments themes are cool too though.
Thanks for the reply, I'll give what you mentioned a try! I changed positions within my company and somehow ended up working with scripts despite not having any cs background or experience, so I'm just trying to wrap my mind around all of this. Thanks again! Edit: I just looked up Haversine and realized it's a formula for finding the distance between GPS points. I forgot to mention in my post that I'm fine using just the distance between latitude or longitude. I don't need help finding the distance between the points. I need to figure out how to make an iteration that stops plotting if the distance from (n - (n-1)) is greater than a certain number.
I'm not happy with they way they presented it at all, but I think deceptive is a bit harsh. They've shown how it is in serial, then they showed how it is in parallel. It's a contrived example. I've never used this library but I've done a lot of GPU based parallelization in C++ and no matter how fast a CPU based operation will be, for problems that are parallelizable, it's orders of magnitude difference.
It would be a problem to change it if the new way was 10x slower yes. But only because of backwards compatibility. That's why it's a nobrainer now to require it because now it's faster and better. If there is some magical 10x faster dict invented (which is pretty damn improbable!) then that can be a SuperFastDict class and that's mostly fine because of the old performance wasn't a problem then the invention of a faster one doesn't make the old slower. 
Awesome video!
Can you post your models? It would make it a lot easier to think about different ways to approach the problem. Of the top of my head it looks like you can throw away (i.e. filter before annotate) everything not created today. Similarly by reordering your filters (so calculate then filter) you are annotating a progressively smaller queryset each time. Do you have index's set on the relevant fields (looks like created_at and the ip field of your session model)? Did you ask postgres to evaluate the query? Where is it suggesting you need to focus the effort on?
Click on it, it's a video. Very pretty product.
A great talk. I too hate getting pep 8ed.
Anyone know of many audio projects using this? I'm designing a portable synth/sequence and tossing up between a Teensy (awesome audio support) and perhaps a Micropython board of some type. My main concern is timing. Midi sequencing has to be rock solid.
requests and beautifulsoup are meant to fetch web pages and parse doms, but they don't actually execute any scripts or really emulate a browser. The generic formula for simulating filling out a form and submitting it via beautifulsoup and requests would be to do the following steps : -Fetch the page that contains your form using requests (with a session started by requests to ease the persistence of cookies). -load the page DOM(the text of the response from requests) in to beautifulsoup -find your form element using beautifulsoup. either parse the destination of the form data from the attributes on the form or (if the site is more difficult), find where the submit functionality is implemented in the javascript to determine where to post your data -parse the input fields in your form for the fields you'll need to have in your request -form an object that contains those data fields and whatever you want that input to be -make a new request with the requests session you started, passing the parameters and values that you parsed from your form as the data payload for your request. Personally, I try to figure out by using the dev console in your browser of choice what request and payload is being sent when the form is submitted by hand so that I don't have to programatically parse out that information. No need to parse the form for all the data if I know my next call will be a POST request to somesite.com with the data {search: "text here"}. 
If you're just doing polynomials there's numpy.polyfit Developing a downhill simplex algorithm shouldn't be too hard.
I didn't, I looked into Twilio but didn't want to spend any money on such a dumb project. So I used smtplib to log into a gmail account and then built a bot that would lookup a number's SMS gateway and scrape the info from a website that allows you like 10 lookups a day. Worked pretty well tbh. It didn't always get the right gateway but hey, it was free. I guess the next step was having it connect to a different proxy or something to do the lookups.
Another benefit to using the file system is that it can be sped up with RAID tricks and extra controllers, etc.
semi related note: For sqlite, inserting bulk data goes much quicker if you do it as a single transaction. Before your inserts, do a "BEGIN TRANSACTION" and then make sure to commit after you're done. You can do some googling for sqlite best practices and speed, and even check out r/sqlite, but the performance of sqlite can really be either fantastic or terrible depending on how well you write your queries. 
What kind of analysis do you need to run on these files? SQLite can be very fast and has a small footprint as far as databases go, so if you created a database model such that you could look up which files have certain traits you're looking for, then you could store the location and/or ID of the text file on an SQLite database and keep properties about the data in the database for quick lookup. you would then be able to query the database for the location of the files of interest and then load them from the directory as you need to pass them to your external program. This is a bit of a hybrid solution between using exclusively the filesystem for organization and using exclusively a database for organization, and should still keep your database footprint relatively small by not storing the contents of each file in the database 
Are you referring to the "individual gzip-text files in subdirectories" approach or HDF5, or both?
That's half the problem. I have no idea where "python -m pip install openpyxl" is installing things. I've never used pip before and I don't know any other way to install this specific library.
Feel free to hangout over on /r/learnpython, but I'm not sure how well this will go over here. 
No tests. Nope
Oops shit. Thanks.
I landed my first developer job by data wrangling with Scrapy. Companies spend a lot of time getting data, cleaning it, and then repackaging it for resale. It's a good way to get familiar with the web in general from the user's side.
Thanks for the input, I have used .replace() for building the URLs, also I'm going through PEP8 and apparently there's a lot of formatting I need to do, as I have really messed up with the variable names. select([stdin], [] ,[] ,10) Is a timed input. If there is no input till 10 seconds, it just moves on. This is used when my program isn't able to fetch the song metadata and asks the user whether they want to manually enter it. After 10 seconds it just sets the default album name,etc. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [Non-transitive dice in Python • \/r\/Python](https://np.reddit.com/r/programming/comments/53xrjp/nontransitive_dice_in_python_rpython/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Agreed. The *example* is a bit stupid, since (as ponted out already) a simple numpy addition is faster. The fact that you can offload stuff to the GPU by simple numba wrappers is still really exciting. I just wish they could have chosen a slightly more interesting example.
I thought he said "val" instead of "eval" and couldn't figure out what he meant.
Your best bet would be IFTTT script. Tried myself a few options (pushbullet was second-best, but its unavailable in my country). Still IFTTT gives the most flexible solution - notifications, emails, other actions, integrations are almost limitless. Install IFTTT app on your phone and create a suitable action. Mine looks as simple like this for example: MacBook-Pro-3:Docker devy$ cat ~/notify.sh curl https://maker.ifttt.com/trigger/terminaljobdone/with/key/&lt;yoursecretkey&gt; i use it to append to docker build command and get notified when build completes. The same way you can send it via requests or urllib 
I watch this talk every once in a while when i feel like I'm missing the gorilla. It's worth watching just for the presentation alone. Raymond Hettinger is great!
import openpyxl; print(openpyxl.file)
Thanks! I managed to send a massage from my python script to the pushbullet app on my iphone! But this app doesn't show notifications for some reason. At least I can manually check the chat for some pushes. 
This is very useful! Thank you !
On top of skulpt, I built [KLIPSE](github.com/viebel/klipse) that embeds interactive python code snippets. See a demo here: http://blog.klipse.tech/python/2016/09/22/python-reverse-polish-evaluator.html
The [notebook is here in Github](https://github.com/perone/spark-als-intro/blob/master/spark-als-intro.ipynb) if someone is interested.
Thank you! I was about to ask here 'What is he talking about when he says 'val'? Right at the end (49:00)' :DD
It's been a while since i've done QT, but i don't think you actually told your Q widget where the QTableView should show up. you'll probably want to do something like described [here](http://doc.qt.io/qt-4.8/qwidget.html#setLayout). e.g. self.__layout = QVBoxLayout() self.__layout.addWidget(self.view) self.setLayout(self.__layout) Or you could try: self.setCentralWidget(self.view) Also, theres no reason you can't define app inside of your if __name__ == '__main__' If this doesn't help print out the return of self.model.select() it should return True if it successfully gathered the table from your db, and False if it failed. Best of luck!
In my previous project, I used Flask and implemented authentication via tokens with itsdangerous (Serializer class). But I remember looking at JWT and trying to figure out the best option out there for Flask. Thanks for sharing! I will definitely try it in my upcoming projects. 
I don't think this talk is for people who just started to program, but for those of us looking to improve our skills
I'm not sure if you watched the video or not, but it doesn't sound pedantic (to me at least) and the lecturer is quite aware of the limitations and role of pep 8. Raymond Hettinger talks about the benefits of writing good *and* clean code. There are numerous ways to solve a problem, but there are better ways than others, especially if you're working in a team. I really recommend giving this video a shot! 
You're welcome! :)
It would be great if there was a download link somewhere. The linux-64 link still points to 2.0.10 for Christ's sake.
Sorry I didn't realize it was in the wrong forum, I know how to convert hex to int I meant that I am not sure how I can use FindWindow to use a hex or int instead of a string.
Depends on if you're doing obvious cleanup that everyone sane would agree is helpful (this had mixed tabs and spaces, these were inconsistently written dict literals in the same file, this can be simplified into a simple list comprehension, this function wasn't documented, etc.) or whether you're doing more stylistic choice stuff (this was over 80 lines, this new docstring format is totally the best, use .format() instead of %s everywhere, etc.) One is a good way to get acquainted with a bunch of code and is basically just a side effect of a competent engineer reading code, and one is someone trying to force his preferences on a group.
You should probably watch the video before posting a comment about the video that makes you look like an idiot. He makes this exact point- that's why it's called **BEYOND PEP8**. Here: [direct timestamp](https://www.youtube.com/watch?v=wf-BqAjZb8M&amp;feature=youtu.be&amp;t=1480).
Inline formatting is the same as CSS, you are using CSS values and just applying them to html tags directly. Honestly, inline styles should rarely be used if ever. They are a bad idea all around. I dont see why you cant just import your stylesheets? I dont see why a webapp wouldnt work with css.... Python flask web developer here with 5 years experience
I'd really like to help you with this project. I was taking a look at the issues. I left a comment on one of them so far.
Change for the sake of change. Especially if it's not just a few "mistakes" in following PEP8 but they have an internal consistent style. It's basically saying "You know what? Your entire coding style is wrong. Do it *my way*". It's best to at least know the people and see if they have a *reason* for doing their formatting that way rather than just saying "plz do it this way thx". Also, a more technical reason, often `git blame` is used to see who last edited something. Useful to see why a change was made. If you do formatting fixes, guess who basically every line will indicate it's author being? Best to do small actual fixes that matter in code (Spelling changes in string literals or adding small features / bugfixes) to get yourself used to their workflow, then maybe start an issue asking for ideas on a future coding style that all code should follow. Though if they already have a style guide, just follow that. They've probably already gone over it.
Because... 1. Somebody needs to take time to review the code, which takes time and prevents them from working on new features and bug fixes, which are all more mission critical things. Granted, this is just a part of the job description if you decide to maintain an open-source project, but it is worth keeping in mind. 2. Lots of code formatting changes will increase the chances that developers with pending pull requests will need to rebase their branch, which generates churn, requires everybody to retest their code, opens up the possibility of bugs accidentally slipping in, etc... 3. If the changes are dramatic enough, you'll require other developers to have to re-learn parts of how the codebase works. Of course, this isn't a hugely terrible thing, but it's worth asking if the long-term benefits of the cleanup actually do outweigh the momentary negatives you incur.
I will just copy a part of a response I just made: The reason behind the decision to use classes and docstrings is that it brings features otherwise hard to implement, like inheritance, and avoid changing function signatures each time you add or remove arguments and options. Also, and I know this is obviously biased, I think it's more readable than having to pile up decorators. But again, I know others might not agree with this statement. The example might seem like a lot for such a simple command but when you start having a lot of arguments and options it doesn't seem like it.
&gt; like inheritance But what would that reasonably give you? &gt; avoid changing function signatures Eh? If the command signature changes the code should change. &gt; pile up decorators One line is a lot less than the 4-5 you use to achieve the same thing
Yes. 
&gt; But what would that reasonably give you? Sharing logic among commands and add you're own methods to a subclass of Command. &gt; Eh? If the command signature changes the code should change. What I meant is the a Command in Cleo only has one point of entry the `handle()` method and you get the argument with `self.argument('name')` so if you add another argument or option you just change the code inside the method not the signature of the method. &gt; One line is a lot less than the 4-5 you use to achieve the same thing And with you example, how do you declare the argument description to display an help message to the user? How do you make the difference between an argument and an option? How do you specify that an argument accept a list of values?
&gt;And with your example, how do you declare the argument description to display an help message to the user? Same as every other library, in the parameters @argument("help") def stub(): pass &gt;How do you make the difference between an argument and an option? Different decorators or a parameter &gt;How do you specify that an argument accept a list of values? Again, have you ever heard of parameter?
So basically, the example becomes: @command() @argument('name', help='Who do you want to greet?') @option('yell', 'y', help='If set, the task will yell in uppercase letters') def greet(name, yell=False): # Some code And that's what I meant by piling up decorators.
Good Stuff
Well that's cleaner for me, docstrings should be exactly that, documentation and not part of the code
Not the place to be advertising tutorial sites. Besides, everything you have listed in your package can be readily found for free online. Also it's pretty misleading to imply that walking through a few tutorials is going to give someone the foundation to land a 6 figure job as a developer.
Ah, thanks, I'll try there. I thought people here knew more about this kind of stuff since learnpython is more for homework and problems.
When I installed anaconda, I didn't have to set an environment. The Python path variable was set, and from an IDE I just imported my packages directly. If you start a Python REPL and import the packages, it shows up that they aren't available? Edit: If you created an environment, did you activate it and then import the packages?
Yeah sorry that's an error thanks a lot for taking the time to complete it :)
Yeah there was an error with the first couple of links 
Yes, I have it activated and imported the whole numpy, scipy, pandas and more packages in the environment.
Is GitLab integrated to PyCharm? My difficulties is managing conclicts between versions in my computer and the ones in the repo, not enough git expertise...
I've looked a bit at pytest and Django's fixtures and here is a tentative answer: pytest uses the term "fixture" in a more general way; my framework deals with database fixtures specifically, i.e., and specifically with database fixtures in the context of testing. My framework looks similar to Django's framework for data fixtures, but we handle the question of foreign key relationships in different ways. Also, mine is not specific to any underlying ORM, as theirs seems to be.
You've made the right choice. I say this as someone who wasted years dawdling over my choice of "modern" computer language for web apps - 20 years after getting my degree in CS. I haven't regretted Python - it has the broadest applicability, and the widest user and resource base. A *terrific* intro to Python is the [Coursera/Rice course](https://www.coursera.org/learn/interactive-python-1). A new iteration begins this week - I highly recommend it. Not just great instruction, but really enjoyable. I also highly recommend the book *Think Python* - it's a very readable overview, that can serve as a reference as well. Lots of well-thought out exercises for learning.
http://praw.readthedocs.io/en/stable/pages/call_and_response_bot.html
As a `plumbum` fanboy, I can't resist posting a direct comparison. EDIT: The [short version](http://hastebin.com/vuxajesiyo.py), colorized. The demo from `cleo`: file 1: from cleo import Command class GreetCommand(Command): """ Greets someone demo:greet {name? : Who do you want to greet?} {--y|yell : If set, the task will yell in uppercase letters} """ def handle(self): name = self.argument('name') if name: text = 'Hello %s' % name else: text = 'Hello' if self.option('yell'): text = text.upper() self.line(text) file 2: #!/usr/bin/env python from greet_command import GreetCommand from cleo import Application application = Application() application.add(GreetCommand()) if __name__ == '__main__': application.run() running it: ./application.py demo:greet John And here's a similar-syntax equivalent with `plumbum`: #!/usr/bin/env python3 from plumbum.cli import Application, SwitchAttr, Flag class GreetCommand(Application): """ Greets someone """ name = SwitchAttr(['name'], help="Who do you want to greet?") yell = Flag(['y', 'yell'], help="If set, the task will yell in uppercase letters") def main(self): if self.name: text = 'Hello %s' % self.name else: text = 'Hello' if self.yell: text = text.upper() print(text) if __name__ == '__main__': GreetCommand.run() running it: ./application.py --name John `cleo` colored output: self.line('&lt;fg=green&gt;foo&lt;/&gt;') `plumbum` colored output: from plumbum.colors import green print(green | 'foo') And you can make `Application`s subcommands [by decorating them](https://plumbum.readthedocs.io/en/latest/cli.html#sub-commands).
:) how do I do that? There isn't a part of the two commands as far as I can tell where i can specify where to install: -python get-pip.py (python script to install pip if it isn't part of your python package) -python -m pip install openpyxl
Right, that's my question as well. I didn't design the app, I just have to work with it. :-( Is there a way to apply the CSS values to the tags within the HTML code? It doesn't like when I put the CSS in the head. (like you normally would?) 
yeah, agreed on the /r/learpython
"(Is my progress bar advancing properly? Are the right number of choices displayed to the user?)" -- these are more questions we would concern *you* with. If I would use this library I would never really want to test anything of the CLI. I do not like decorators either, so in that sense it might be better...
For the majority of business use cases I've seen, Python would typically be better suited than SQL for process automation, moving data around, and using cool data science libraries for fun and profit; but SQL will generally be much better suited for asking and answering lots of tabular questions against a known structured dataset. You mention already using Excel, so in my opinion you might consider prioritizing a bit of SQL first: most run-of-the-mill business questions (from both your job and your app) will involve set-based queries and operations, which is specifically what database systems are designed and optimized for. Of course you can also do those things in various fun and interesting ways in Python; however: 1) SQL is a general business skillset valuable almost everywhere 2) Learning how to get e.g. Pandas to do the same things SQL does is a tougher learning curve; 3) If you already understand SQL, you'll find that data management APIs in various Python packages often mirror SQL anyway. Because I see SQLite mentioned several times, I'd also add that while SQLite is an incredibly fantastic niche resource for development and small-scale apps, it (purposely) doesn't have a lot of features that make general-purpose databases powerful. Learn on SQL Server, MariaDB, or MySQL...don't learn on SQLite. Good luck! 
As the sidebar states, this is more for news and announcements than asking for help. It's most of the same people on both subreddits, but when people are on /r/learnpython, they're actually looking to help someone.
The raw files in folders will likely benefit more than HDF5 would.
What I meant is that you might display things based on conditions and you might want to check if everything happens as expected by verifying what is being shown to the user.
But... but docopt!
Why would an argument be noted like an option (`--name John`)?
If you want to accept credit cards, [Stripe](https://stripe.com/) is the way to go. PayPal is absolutely terrible, and that's _before_ someone inevitably reports you and you get into a year long dispute over a $.25 chargeback that costs you more than shipping a custom made cake with "FUCK YOU VERY MUCH" written on top to PayPal headquarters. Also, Stripe has a fully documented, officially supported [Python wrapper for their API](https://stripe.com/docs/api/python).
http://begins.readthedocs.io : less boilerplate, and still uses docstrings smartly
I've jumped around a lot of cli libs, even wrote a couple of my own, and while each has their pros and cons I decided to stick with argparse. It's REALLY not hard to write out the argparse boilerplate. It's a one time thing, it's in the stdlib, anyone can read and use it, it's got all the features you need... I don't understand why people are so afraid to use the standard library version when it's this full featured. In fact, I ended up writing my own library to generate the boilerplate and it removed pretty much all of the tediousness of it. But for the most part, I'll just write it out because it takes like 10 seconds. The decorator syntax is "neat", but that's not enough IMO to add a new dependency. Adding decorators and classes and all that come with the pretense of being "extendable" through inheritance and other stuff, but honestly when are you going to inherit from some parent command line interface library? How often have you ran into a problem where you're like "oh I need all the same options as the parent except slightly different behavior for this one command"? How often does it make your set of scripts easier to maintain? Why do people avoid just writing the damn arguments out? If you really have a lot of repetition, just import a function which declares the arguments for you and returns a parser which you can modify yourself. It's not like you can't abstract out parts of it.
That said, I've had issues working with the Stripe SDK because it's very reliant on globals and class methods. It's usable as long as you never need to inject custom code into it then you're left monkey patching. There is a global - default_http_client, I think - that you can set to gain some modicum of control. 
Very cool! But a shame it does not support Python 3 :(
I would add suport for cleo commands in Python Manage Project. http://github.com/rochacbruno/manage
Look into [os.walk](https://docs.python.org/3/library/os.html#os.walk).
Seems a bit too magic IMO. Docstrings shouldn't really be for this, exposing them to code is a bit of a mistake. (Or, rather, code assuming they exist is a mistake) Also, it breaks under double optimisation, since that discards docstrings. If something described as an optimisation step breaks your program, *maybe* you're doing something wrong.
This is a little experiment that I played with a few weeks ago. This was part of a larger project, but I thought I would strip this out as its own package and share it with /r/python.
Can you elaborate with an example on how it would be too complicated to be piped? 
You can probably do something to that effect with `zip`, a list comprehension and probably `join`. Got to /r/learnpython 
 #!/usr/bin/env python # -*- coding: utf-8 -*- # file: csv_dump.py import csv filename = 'output.csv' with open(filename, 'w') as csv_filedescriptor: csv_writer = csv.writer(csv_filedescriptor) for a_entry, b_entry in zip(a, b): csv_writer.write_row([a_entry] + b_entry) $ python csv_dump.py 
Thanks I'll try that out tomorrow morning and lookup what zip does in more depth
* "Always use a def statement instead of an assignment statement that binds a lambda expression directly to an identifier" - PEP8 * You import `ctx_stack` in `jwt_manager`, but don't use it anywhere I may have more ideas later... will edit with further investigation.
I'll get both of those fixed up tomorrow. Thanks for the feedback!!
I see. That looks useful. So I can combine Azure's cloud storage with some domain name service like www.namecheap.com and host my own fully-controlled LAMP server, for example?
All of this stuff is very helpful. I just started an Udemy course I feel a little overwhelmed by the total amount of resources out there. I have tons of ideas and manual work that can be automated, so at least that is something I don't have to worry about (motivation). I am just worried if I am on the right path haha.
I'll have a stab at a more general solution mainly so someone can tell me a better way. Not using arrays because I don't see the need. a = ['A', 'B', 'C'] b = [[1., 0.],[ 0., 0.],[ 0., 0.]] output = [] for x in range(len(b)): output.append([a[x],b[x][0],b[x][1]]) &gt;&gt;&gt; output [['A', 1.0, 0.0], ['B', 0.0, 0.0], ['C', 0.0, 0.0]] Edit: From there you can turn the list into a CSV how you choose; I like via Pandas: import pandas as pd pd.DataFrame(output).to_csv("output.csv", index=False)
Ad.
By 'more general' I meant code you could use it in any situation where you wanted to merge two lists, not just where you were trying to create a CSV. But now that I look at the other solution, I could have been 'more general' with this: output = [] for a_entry, b_entry in zip(a,b): output.append([a_entry] + b_entry)
Definitely oldschool, but when it ain't broke...
Just to expand on this for OP: There are an estimated 2 million paid python programmers in the world, but the number of users is staggering: something on the order of hundreds of millions. The python data science community is probably comparable in size to the entire R community, but is only a tiny slice of the much larger python community. 
The correctness of displaying things must be tested by the library I use to display things. I only have to care about the correctness of data I pass to this library.
[removed]
it is nice. However, the undo function don't work well for set. For example myset = Set() with Transaction() as t1: myset.add('a') with Transaction() as t2: myset.add('a') t2.undo() #if I read correctly your code myset is now empty The list lack of the `__setitem__` also I think a better interface would something like: c=Context() with c.transaction(): c.mylist= c.List( ['a','b','c'] ) c.var ='b' with c.transaction(): c.mylist.append('a') c.undo() 
Huh, I thought the python community in general pushes Python 3 instead of LPTHW since it still generally works with Python 2.
*tl;dr* 1. Want to learn Python 2. Learn Python 3. Use Python 4. Use Python 5. Use Python
Had to go back and listen to that bit again. I thought the whole time he was criticizing the guy for disliking vowels... `eval` makes much more sense.
Quite a bit of /u/jaypeedevlin submissions are to dataquest.io. Wonder if they own the site.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Gnu awk. About no one uses it to the quarter of its potential
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I hate the implied idea that you can learn it the wrong way... just use it, work at it, polish your knowledge, discover more stuff and under the hood shit... its not something like a house build at terrible foundation, nothing like that...
What import future? *uses python 3*
Cool. Path handling seems good -- not that different from the builtin pathlib, but worth using if you're already depending on plumbum. &gt; choose, ask, prompt, Progress Yeah, I should probably use those more &gt; command running Yes, that's the context that I've always heard of plumbum in, and already use it for. Given that I've investigated various option parsers, I was somewhat surprised that something I already use has this totally different area of optparsing functionality that I've never seen promoted anywhere. 
&gt; I think the issue is that printed books are at the 5% rate, while e-books are a separate item, which get charged at the 20% rate :( Godamnit! :( Oh well I'll buy the printed version when it comes out especially if you'll have it on some sort of free worldwide delivery store like book depository. I don't know what country I will be in then. 
Interesting. Thanks. I will search about it.
&gt; LPTHW WDIM?
That article doesn't really explain why click provides a worse experience than argparse it just seems like a moan about how the author doesn't like click. What can you do with argparse that you can't implement with click?
Post the full output. Also, /r/learnpython.
oh yeah, thanks.
Means "disgusting" in Danish.
Pretty much, it preserves whatever data structure you feed in so if you feed in a generator you'll get a generator out. I'll add a case for iterators now actually! Getting an iterator back from map is fantastic when you want to iterate over the result but if you want to check membership of an element in a set or look up a key in a dict or pass on the result to something else then it leads to boilerplate as you bundle it back up before passing it on.
1. you can run benchmark.py in the project, it cost about 5x time compare with load same json data use json in stdlib. 2. https://github.com/guyskk/validater/blob/master/readme-en.md
Try /r/learnpython. Also, I think you'll like [this](https://pyvisa.readthedocs.io/en/stable/).
Thank you! 
Thanks for the reply! Doing so now!
Braintree is so hassle free and accepts most card types plus paypal.
&gt; Can I land a job with Python as my only language? Yes, you can. Will you? Depends on the employer. &gt; How long will it take me to be decently employable if I study for 2-3 hours daily? It depends on your study curriculum and your personal ability at knowledge uptake and amalgamation. To revisit this question and answer more deeply: &gt; Can I land a job with Python as my only language? If all you know is python by syntax, probably not. If you learn python syntax and the fundamentals of writing reusable, modular code, Object oriented design principles (SOLID) and other syntax agnostic concepts, then you can be very employable. (learn to use git, learn how to write good tests for your code) &gt; Python seems to be the most versatil and easy to learn. Look at Ruby. *(Hides from the rest of /r/python)*
thank you, I search validatr in google and found many libs, but luckily not found in pypi. I am considering change it's name, validatr is good, but how about ivalidator, the 'i' means 'Isomorph-JSON-Schema'? or any other suggestions?
No asyncio?
What podcasts do you listen to?
&gt; it's almost impossible to become good at one language without at least getting basic amounts of skills in another Thats a good point, additionally, if OP doesn't know how to use Linux a lot of the open source world is closed off to him/her.
Are you familiar with the builtin Python methods 'all' and 'any'? If you rename your arg to 'match_all' so it does not collide with the builtin 'all', I think you can replace your cryptic code with: match_fn = all if match_all else any return match_fn(term in description for term in terms) 
&gt; college level education about subjects as Math and Statictics surely you must have touched R or MATLAB
&gt; there are so many cool stuff happening on the JS front that I wish became true on python. Take what you have learned from it and release some libs for python!
Sounds about right, actually. I will definitely look into it for my next big project!
https://docs.python.org/3/library/traceback.html#traceback.print_tb
If you like smart use of docstrings, you may also be interested in http://defopt.readthedocs.io/
I would agree with this if callbacks weren't actually useful. If you want to check multiple sockets, for example, you need to have a daemon thread to check each them, or you need to be blocking. In Javascript it's a callback. 
What are you missing in python compared to js?
https://elpy.readthedocs.io/en/latest/index.html ElPy is really good if you use emacs. Also emacs.
I'm not concerned with doing it in pure python, I was actually considering crazy options like running a Jetty daemon that drops input-files into a folder and watches for output-files and just have a bunch of separate python jobs running under supervisord. I figured there has to be a better solution though
Have an async server (for python you can use tornado or twisted) that puts requests into message queue, and a bunch of python workers that process messages and generate responses.
No one really does it that way anymore. You should be using either [asyncio](https://docs.python.org/3/library/asyncio.html) (in Python 3), or [gevent](http://www.gevent.org/) (my preference). There are plenty of other options as well, but those are the most popular.
I don't know, but asyncio is in the picture
BECAUSE THEY CAN´T HANDLE ME. I'M TOO REAL. No idea. Bored teenager probably.
like im gonna do anything valuable with it
Thank you, I will ask them as well as look into the react-redux start kit you linked me. :)
Check out code academy 
I assume when you say you have "an array", you did something like from numpy import array This is **_BAD_**. Perhaps the only nice thing about this construct is it is more "matlab-like" but it also eliminates many of the beautiful things that Python brings to the table over matlab (notably, namespaces). Now, `array` can mean anything! Contrast this to something like import numpy as np # np being a pretty standard shortcut and then c = np.array(...) Now, anyone else reading your code know exactly what you mean by `array` and you do not have to worry (as much?) about name collisions. Finally, this really should be in /r/learnpython
I'm thinking of putting a pdb in the TypeError class of python, maybe try to print the traceback from there. Only problem is, I can't find the class. Atom's search is failing me.
They're providing an alternative way to write them, not suggesting they aren't useful. The alternative is a new language feature as of 3.5, `async` and `await` keywords (previously these were "@coroutine" and "yield from", with a few caveats I won't get into): async def do_thing(): res = await other_thing() # do stuff with res, including calling other async things Basically instead of the nested callback hell, you pretty much just have fairly normal looking (e.g. Synchronous looking) code, but in reality it's evented- but still allows the standard constructs like catching exceptions.
Thank you for your response! Yes, I'm aware that learning syntax won't get me into a position yet. Is more a long term plan.
I'll try that option, thanks. Didn't even know it existed.
Thanks
If you have access to a BBG terminal, you can use the built in Python API without using Excel as a medium. This also allows live ticking data, override requests, etc. It's much more powerful.
I'm really expecting tumble weeds here... 
With Stripe I can apply a 2.5% to the order and redirect that percentage to my paypal account? Like Ebay.
I think [Stripe Connect](https://stripe.com/connect) does what you're looking for, then.
To be honest the only thing I found interesting in this post is [markovify](https://github.com/jsvine/markovify).
I think the main problem is that these are solutions that work well for Javascript but not necessarily for Python. Just look at the article, JS solution to callback hell is nice both functionally and semantically (promise x, then A, then B, then C, catch E). Promises is not just a way of doing asynchronous calls. It is a way of "decomplecting"\* the execution order of several asynchronous and synchronous commands from the actual commands. The result is code that spells out in one place exactly what are you going to do and in what order instead of hiding that logic all over the place (which leads to callback hell). But then when it comes to Python things gets weird. Maybe because the author of the article didn't completely understand exactly what Promises are for or maybe because Python libraries and language isn't there yet. Just look at what he wrote: * With Deferred, he's basically adding callbacks to an object. I don't know if there is a difference between Promises and Deferred but the syntax of Deferred seems to imply there is no guaranteed order in callback resolution; while promises syntax (then) correctly imply that one thing resolves after the other. To make things even more confusing, the chained vs not chained examples will be two different things on promises while, he claims, will be the same on deferred. * Nesting in python: He needs to go into all sorts of performance considerations and workarounds for something that should be straightforward. I should be able to use nested lambdas if that helps me describe my problem easily. That's a very elegant way of describing cascades of things that execute one after the other. Promises enhances that with several tools. * asyncio: that seem to be solving the problem of having to wait for something before resuming... but in a way that once again buries execution order and data flow all over the place. I'm guessing that using asyncio to rewrite a program that presented a callback hell problem will result in a program that presents an asyncio hell problem. Of course, doing a straight port of the Promises API to python is straightforward (a quick google returns at least [one project](https://pypi.python.org/pypi/promise)). I'll have to test that lib. But people doesn't seem to be using this yet, maybe because it is new or maybe because doing this in python introduces other sets of problems that weren't there on js (e.g. not as powerful if you have to avoid making use of nested lambdas because of language limitations). And this is only Promises. My point then is that while Javascript community seems to be constantly finding solutions to all sorts of problems (promises is just one) and inventing new frameworks, tools, etc; python community seems to be playing catching up by porting solutions that work on other languages instead of finding solutions that work on python and extend python philosophy (which is one of python's strengths). \* Watch Simple made Easy talk if you don't know what I mean with decomplecting
If you experience callback hell in Python, you might be doing it wrong
Here's an example of a relatively small library with excellent documentation: http://docs.h5py.org/en/latest/
Hey feel free! I have a bit of time every now and again to poke around, (though I'm still getting used to my new Linux setup) and should get around to fixing that in the next day or so.
When it comes to simple things I miss things like object (or dict) destructuring, property shorthand, private scopes, the equivalent to chrome inspector for debugging. As for libraries, I wish we had the python equivalent of ImmutableJ, redux, rx. And I say "the python equivalent", meaning elegant pythonic libraries and not just straight API ports of those. Another thing is, and I know this may not be fair, writing UI. Javascript was written with HTML in mind and it is its main use, so it is understandable that while we have something as amazing as React, Bootstrap, etc on JS we have to settle with tkinter or one of the different bindings. Those are amazingly potent (I mean, QT is mature and powerful) but not as simple and with results as good looking as writing a UI in React. And I'm aware it is not a fair comparison.
... There's no Python 4 or 5 yet. EDIT: lol
There's no Python 6 either, and yet here we are...
Your xlwings link is broken.
Check your flair...
Oh wow, wrote my comment on mobile and I'd totally forgotten about my own flair. Haha.
You could use the opencv project which can be found on github.com. This can be used in conjunction with python to process images!
[Your are missing out](http://imgur.com/a/40R09#kBIz1GY) 
I have a Python cron job in a VPS, that I intend to replace by https://www.pythonanywhere.com/. Not sure if you could run a service like yours there. There's also a list of free hosting for Python in the Python Wiki. https://wiki.python.org/moin/FreeHosts Hope that helps
It'll get you started. Learn SQL, and then Git. That's phase 2.
+1 for heroku
Take a look at WinPython: https://winpython.github.io
First you want a web app. For simple and quick things I suggest reading about the Flask framework. Then for hosting it, if it is only for the hackaton you could host it in your machine. If you want to make it work for "all the world" then I suggest either heroku or pythonanywhere. Hope this helps.
What's the difference between this and just: def do_thing(): res = other_thing() # do stuff with res You have to wait anyway.
Main one for me is proper function expressions (not lambda)
You may want to take a look at [Django's documentation](https://docs.djangoproject.com/en/1.10/).
I do use select. You still need to periodically check with that. 
Thank you for the concise explanation. It makes sense. Are there any guides about best practices or how to know where `await` would be useful?
So, as scripts go, the proof is in the pudding, if it works, it works. However, there are things that maybe could use some extra thought. #1. This code isn't Pythonic, your variables aren't well named so reading through it takes quite a bit of mental gymnastics that you could get around by following Python naming conventions (no camel case, and name for clarity not to be terse. Dvar only makes sense to you, no one else is going to know what that means later. Yourself included in 3 months. #2. The idea of storing your failure logs in a file works but if you add any fail over servers to your email system you're now dealing with multiple temp files and if anything ever happens in one like a corrupted file or a write cursor hanging your whole system comes to a halt. You also can't remotely monitor the state if anything happens (as it always will) you'll have to check each file individually. #3. If your script hangs for any reason it may keep a write lock on that file and your whole system is kaput.
You have to be working in `asyncio` (a python standard library module). * [Official Docs](https://docs.python.org/3/library/asyncio-dev.html) * [Medium Post](https://medium.com/@nhumrich/asynchronous-python-45df84b82434#.d8rgxhmxu) I am sure there are more, but as it's still fairly new the resources are still being developed.
You'll get a lot more help at /r/learnpython. I did that course a long time ago... I don't remember it all that well. What do you think is "inaccurate"? 
&gt; What do you think is "inaccurate"? Not accurate :P
I do plan on deleting it on failure or completion. The file isn't actually necessary as I could just pass the message right to the sendemail.exe. I more or less put it in as a sanity check for while I was testing. I will remove the pass and address the exception ( or lack there of) on Monday. Thanks!
Twisted's been around since 2001. Python's had a lot of these "new" things you're seeing in JavaScript for a long time. You just weren't paying attention yet.
To do what?
lol you trying to cop some supreme? 
lol no already have a script for that 
Being about 50/50 on my time spent between Python and JavaScript, my largest discovery is that I have to really appreciate their fundamental differences. The moment I start trying to be Pythonic in JS or use JS idioms in Python, I'm doomed and have to remind myself they're not to be coded the same.
Until now I had never even thought of the concept of callback hell in Python. The language is fundamentally different. You don't have a queue, so you have to work to get async, it's not out of the box. You basically have to put in effort to get callback hell. And I wonder if you're right: is the author fighting to make Python behave like JS with asyncio that callback hell can become thing?
Wow yeah and on the official Twilio blog with your tutorial copied, almost the entire beginning. Good job, I prefer yours anyway.
Author here. Let's say you send the following text messages: * I am going to the store * I am going to the store * I am going to the concert * I am going to the office * I am very tall Next time you type "I am", the auto-suggest on your phone's keyboard says "there's an 80% chance the next word they type is 'going.' I'll stick that one in the middle." When making sentences, Markov chains use a "corpus" of text -- say, the selected works of an author -- to make a probabilistic model of what word (n + 1) will be based on words (1..n). Then it rolls the dice. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
You can also look at PySide if PyQt license is a problem.
All the scheduling is built into the python standard library asyncio event loops. When you do an `await`, it's very similar to a `yield`. The function pauses, and the library schedules the function to resume at that point later. It takes less time to process something that involves network i/o, because multiple things can (for example) download at the same time, and code can run in the thread while stuff is being downloaded in the background.
Asyncio isn't a dependency, it's part of the standard library.
Use Kivy.org. You will get satisfied.
OK, thank you.
- Deferreds have a well documented order of execution https://twistedmatrix.com/documents/current/core/howto/defer.html - Note that most pythonista's only now start using async libraries in pythin. It has been around a long time and it's only now with language support that it's more intuitive to write async code. The reason I wrote this article is because I needed to define some problems for a later article. Pysnmp also is quite old and it supports several async libraries. However it often uses functions that are declared in a [nested manner](https://github.com/etingof/pysnmp/blob/002bb632e888e90577c87111f99674be153f79d0/pysnmp/hlapi/twisted/cmdgen.py#L337) This style has lead to quite a few memory problems. I address it in [this post](http://transceptor.technology/blog//migrating-pysnmp/)
This is from the final exam of the MongoDB university M101P course, the latest one of which finished last week. I basically went through the same mental process as him. But I didn't blog about it.
Thanks for the writeup; enjoyed it immensely.
the concept is interesting but I'm all but sure it apply to a duck typing language such as python
I can configure fresh install of PyCharm in 5 minutes and be productive. For Vim and Emacs it is more like years. I've spent quite some time tweaking my .vimrc and .vim/. I weep for the time I've lost in doing that. What a waste of effort!
&gt; However there is a big butt here Can't touch this
In the time you asked it here you could have certainly just tried and find out the answer is no.
Pros of gitlab: * Has CI built in, so you can easily build/test/deploy your code automatically on merge and successful test passing * You can group related projects together * better control over what other contributors can do * It's open source (at least the core is), and you can self host if that makes sense for your needs * It's always getting better * similar to github, you can tag issues in commits (e.g. "Fixes #42: ...") and the issues are closed on merge The cons: * It is often sluggish, at least this week, so there were periods of 15-20m where it was hard to push code or load the UI * There is a lot it does, so the UI isn't the most straight forward
Thanks for this submission!
I use a self hosted gitlab, this way I have full control of my data and I can control the availability of the service. I don't use many fancy features. Reliable and easy to use git hosting is my key requirement. Experience has been great so far.
Can you clarify what you mean by bitbucket's interface with pycharm is down? I was pulling and pushing to my bitbucket repo from pycharm yesterday without issue...
I moved my workplace to using a self hosted install of gitlab. I think it's great. I like the interface more than bitbucket and the team that is building it is very responsive to feedback and suggestions. 
Gitlab functionality would take some 7 or 8 different atlassian products to cover, with a pretty hefty total price tag. Some of the equivalent atlassian features (e.g. Pipelines) are not even out of beta yet and the different products are not so well integrated. I really like gitlab. It's not perfect but it's a great package with batteries included. You can use gitlab.com, self-host either locally or in the cloud. 
Markov chains produce some great results. I've had a Markov bot in an irc channel dedicated to feeding it random conversation for a couple years whenever anyone that knows about it feels like talking to a bot, and it says some surprisingly coherent things. It writes chat lines to a text file, I'll upload that so people can use it (the bots name is [Chester](https://github.com/hawkfalcon/Chester), and the nonsensical words were substitutions for peoples usernames so they didn't get pinged, unfortunately it doesn't have any of its responses but you can see how that might cause repetition issues early on in its development): https://ptpb.pw/V6lp.brain
I there a way to set up PyCharm to work better for science ... get closer to the RStudio layout and functionality: run iteratively, see plots, see dataframes ..
How would you use the BDH formula without paying that 2k? My point is, the premise of the article starts with requiring a terminal, so why not use the better tool given that constraint? Also I think it's more than 2k now. Mine is close to 5 I think
It's a really fun library, it's the core of what powers /r/SubredditSimulator bots iirc
It's interface with PyCharm is down? Huh? Learn how to use git. That'll help you way more than switching to somewhere that has a working PyCharm integration. 
Thanks :)
I make adjustments to my .vimrc as necessary, but https://bitbucket.org/six0h/dotfiles is a fairly stable representation, with many comments. I have one single config file for vim instead of menu upon menu of useless settings in pycharm. Im not sure how you can make the argument that configuring vim is more difficult than pycharm, that doesn't make much sense to me. You can go ahead and install vundle, copy my dotfiles, open vim and run :PluginInstall, youre done. You have autocomplete, syntax checking, goto anywhere, ctrl+p fuzzy file search, plus so much more.
I have the same error as you and tried your suggestion of copying over libs/dlls from msvc2015 build, but I'm still getting the same error. Do you know exactly what you copied over?
To a degree, I get what you're saying. Though, it seems like JS is actively TRYING to be more like Python in it's syntax and style at least. Look at ES6 import statements for example.
It depends. With CPython I believe it needs to be compiled for the specific OS.
I used dependency walker (http://www.dependencywalker.com/) on the dll that was giving me the error (qtquickcontrols2plugin.dll) which told me it was missing Qt5QuickTemplates2.dll and Qt5QuickControls2.dll. But since I'm lazy, I just copied over everything from Qt's bin directory to the the following directories in the python virtualenv. lib/site-packages/pyqt5/qt/bin/ lib/site-packages/pyqt5/qt/qml/qtquick/controls.2/ I'm sure that wasn't necessary and it probably only needed a couple dlls, but I haven't gotten around to making a new virtualenv to see exactly what's needed.
I myself have collected and tweaked my .vimrc over the course on 10 years (surely with a number of rewrites along the way). I also have a neat dot files git repo etc. But in recent years I have come to number of conclusions: 1) In the age of ephemeral VMs in various cloud infrastructures (with a varying lockdown level from internet) your custom dotfiles repo just does not make sense, simply because you just don't copy/clone your dotfiles to each and every *nix system you access. 2) The funny thing with dotfiles is you just don't stop tweaking them. They are never ready. They keep sucking your time. 3) Learn to live with defaults. 4) Pair programming: when you walk to a colleague and he is using his tweaked .vimrc or vice-versa. Very productive indeed.
What are the alternatives? IMO it's slightly better than a plain telnet console like in `remote-pdb` and doesn't require extra dependencies like `WinPDB` (which is abandoned long ago and does not support Python 3). And it's not tied to any IDE/editor.
Sorry to say this and I am probably going to get downvoted, but your code style is really hard to read and seems to break all the rules of PEP8: * no blank lines between functions and variable declarations, all I see is a wall of text making it really painful to read for other developers * no whitespace between anything, e.g. arithmetic operators, everything is compressed, once again making this hard to read for other developers * use of tab characters is a big no-no in Python, we don't use tabs in Python (maybe in Go, but in Python we use 4 spaces, try not going against the grain by using tabs) * severe lack of indentation for some of the code, particularly the top, it's all flush with the gutter * Some functions start with a capital like "Useattack" (should be use_attack because in Python functions use snake case). Because this function starts with a capital it looks like a class name to seasoned Python developers, you should use snake case for function names in Python, camel case in class names but also starting them with a capital if it is a class name. * As others already suggested this code can be way more readable with some refactoring, maybe some use of OO (though don't call it "character" like suggested, call your class "Character" as I mentioned earlier class name should start with a capital)
I know this won't apply to most people, but for anyone looking to self-host GitLab, it's really easy if you have a full VM you can dedicate to it (or a container, but it needs a one-line patch to run). The omnibus package takes like 20 minutes to setup (base system, no CI, etc.), as long as you don't have anything else running in that VM. Updates are just an `apt-get update &amp;&amp; apt-get install gitlab-ce`.
How does this compare to https://github.com/Kozea/wdb?
Alternative is a proper IDE. These things help to get stuff done faster. And man.. I do not mean to be a dick but using a web page for a GUI of application is like using a rock to beat in a nail.
&gt;using a web page for a GUI of application is like using a rock to beat in a nail. So not a fan of most of the web these days? They are after all gui for applications.
Wish this was python 3
&gt; Alternative is a proper IDE. These things help to get stuff done faster Sometimes a "proper IDE" will not be able to debug the program you're developping. (if the program uses standard streams, for example) &gt; using a web page for a GUI of application is like using a rock to beat in a nail. I agree that it's not the best support, `rpudb` (remote `pudb`) is a nice alternative that can be used in a terminal, with a similar interface.
Have you tried to develop a native application recently? Its a mess of cross platform incompatibility and silly amounts of dependencies. Web applications on the other hand are mostly platform independent even across mobile. 
I'm glad I don't have to run a gmail application on my computer and store all that email locally and worry about migrating between environments. Web based apps are a godsend for anyone who owns more than one device.
At that point what's the difference except that you have a hundred ide deployments to administer rather than one Web based version.
What do you need the plugin to do? Because from what I understand, ever since bitbucket moved to git you don't need the plugin anymore: I just select git as the vcs type when I'm setting up a project and it's all good (tried with versions 2016.1 and 2016.2).
This is the most spammy sounding title. I went to the "comments" page and RES showed the image so it was fine, but I wouldn't have clicked the main link
"Cubr is a project I completed in three weeks at the end of my introductory computer science class at CMU" - oh really, genius? 
People use NoSQL because they do not want to deal with indexes. When they go to NoSQL they discover they need indexes, and then that it would be cool if they had compound indexes to make query on relational documents. 3 years laters NoSQL users when they become experts still spit on relational database not realizing that they reinvented poorly for an higher cost RDBMS. Hail to the NoKing.
okay I did this. It didn't work. I get an error.
Good points. I think OP should have posted in /r/LearnPython. Cool idea though, /u/IHeartGrantGustin.
What makes this Windows only?
@OP: If you want NON blocking input (i.e. realtime), here's how you port this to *nix. http://stackoverflow.com/a/2409034/774340 If your game is blocking, and your issue is just unbuffered input (i.e. don't have to press RETURN), you have no excuse :-)
It's utterly impossible to answer without seeing the code. And this belongs in /r/learnpython .
Where is your code...
Any patterns you think you see are false. Watch this: https://www.youtube.com/watch?v=9rIy0xY99a0
I've used GitLab CE, free and opensource. I think it has better UI and UE than BitBucket. The greatest thing is that, it has built-in CI, you can host them with just some docker commands. The cons is that, GitLab is main written in Ruby, would take more memory than BitBucket. (Not confirmed, but should be)
no
As for the API, don't walk through it verbatim, but if there are high-level concepts that are characteristic of the API, they are worth a few words or a diagram. Then a brief demo, or at least a few slides of sample code and output. I recently gave a lightning talk on pyparsing using Jupyter notebook (http://www.ptmcg.com/files/EoPC_pyparsing.ipynb), I think using a notebook is a great platform for this kind of intro/tutorial.
I took this course in 2015. For the term project, you are given three weeks to create a program that demonstrates programming skill - other than that, students are given complete freedom. Those final three weeks are often spent doing nothing but working on this term project, and it's usually the case that other classes are ignored while a student pours their all into a project. It's a time-consuming, but *very* good course - by the end of it, many if not most students have developed the necessary skills to master an api for computer vision and implement an algorithm for solving a rubik's cube. Students tend to create things that they care about, and they often get internships by showing off these term projects. [This](https://www.youtube.com/watch?v=mPYeTJd8klQ) was voted the best term project in my year. [This](https://www.youtube.com/watch?v=YswqpIpcPTM) was by a friend of mine. If you told a CMU student that you made a computer vision rubik's cube solver for your 15-112 term project, it wouldn't be terribly remarkable or pretentious - you might even get teased for a lack of originality. [Here](https://www.cs.cmu.edu/~112/) is the course website. There are tutorials, homework problems, and a term project gallery as well as links to past semester term projects.
Cool project! About the colors... does it really matter that the algorithm knows the exact color? I think all that matters is to be able to discern the colors.
I have tried to develop node application recently. It is a unspeakable mess. That is why I stick to native applications. Just use right tool for the job. This could be pyqt-based. It would be like easy mode of cross-platform.
Those IDEs are bad Python IDEs. Again... Right tool for the job.
HesRightYaKnow.jpg
&gt; can't wait to see how this repo evolves Just to keep you updated: The first official release [is on pypi][1]. Not many/consequential, added features yet. I've been focussing on the documentation for now which needed some love ;) [1]: https://pypi.python.org/pypi/puresnmp
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/sysadmin] [Pure Python SNMP Client Library (puresnmp) v1.0.0 • \/r\/Python](https://np.reddit.com/r/sysadmin/comments/54efz0/pure_python_snmp_client_library_puresnmp_v100/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Please define "my Python34 file".
Not really my forte but can you get additional data by using either of the following command line options. * -b : issue warnings about str(bytes_instance), str(bytearray_instance) and comparing bytes/bytearray with str. (-bb: issue errors) * -i : inspect interactively after running script
The great things that you can do with it, and everything that isn't documented enough :)
Thank you very much, this has indeed a number of items I didn't think of yet!
Fair point! Deleted and re-posted.. And this time I've actually linked to the website, as originally intended, not the bloody image file! (As cool as the image was..) Thanks for pointing out the spaminess - trying to find a balance between functional titles and something that creates a bit of "intrigue".
[SQLAlchemy](http://docs.sqlalchemy.org/en/latest/) docs are pretty good too.
&gt; People use NoSQL because they do not want to deal with indexes Is that really the case? I get the impression that lots of people try NoSQL because it's new(er) and cool, but they give no thought to how it fits with their data schema or access patterns. Web developers using ORMs are particularly guilty of this. Then they find it just doesn't do what they want, and blame NoSQL for this, as opposed to their decision to use it. Contrast this with my current situation, where our production application needs a large rewrite of the data layer, as we realised that NoSQL would be much better for swathes of our application than MySQL. Live and learn I guess... 
but why?
Not totally sure why this comment has been down-voted...? It is a shame that the number of female core-developers is so low. I know that Guido has made this a priority and I hope it improves in the future.
Write a cryptocurrency trading bot. 
[I propose a new logo.](http://cliparts.co/cliparts/kTM/gMA/kTMgMApTj.jpg)
And be lucky 
Allow me to link you [here](https://nxtforum.org/index.php?topic=10334.msg224684#msg224684), there may be dev jobs available. [Code examples.](https://nxtforum.org/index.php?topic=11795.msg224090#msg224090)
https://github.com/wallacezone/little-dungeon/blob/master/little-dungeon.py#L95-L98 yikes! good story line!
Pros: * in Ubuntu/Mint repositories, so you can `apt-get install ninja-ide` and be on your way. * Attractive looking dark theme. * Freedom-loving ninjas: GPLv3, uses open art. Cons: * IDE crashes if you run a file that produces an error. * Crashes when opening files that import wx. Must be a QT rivalry thing. I got it to crash a half dozen times in two different ways just trying to get something I've written in python to open in this IDE. I hope they make progress, but it kinda crashed and burned for me.
Option 1 or Option 2?
It was not, in fact, "a safe thing". A safe thing would be to build an Ubuntu package of the version of OpenCV you need and install it through the package manager, not let `sudo make install` shit all over your system. Is there a reason you're not using the version from the Ubuntu repos?
Oops. Misunderstood you there. I first tried that option and it gives me the same result/error.
Yeah, because you already have the one you built in your system messing things up. I'm not even sure if there's a good way to remove it, as `cmake` doesn't provide a good way to uninstall things. Do you still have the build directory at least?
Yep. Still there.
Then open a terminal in that directory and run `make DESTDIR=install_prefix install`. That should create a directory called `install_prefix` inside your source directory. Look into that directory and remove all the files it has created in there from your system root. So, if there's an `install_prefix/usr/local/lib/libopencv.so`, you remove `/usr/local/lib/libopencv.so` (just not all of `/usr`, please).
&gt; would it be enough to just use getch and print out characters to the terminal? I doubt it. What do you mean by "simple command line text editor"? Do you mean something like sed, vi, emacs, or [ed](https://www.gnu.org/fun/jokes/ed-msg.html), the one true editor? 
It's outdated. The current version of OpenCV is 3.1.0, and you can only get it by compiling it yourself.
&gt; IDE crashes if you run a file that produces an error. do they even fork()
Yeah, something of the sort. So, some example code: import getch, sys while True: char = getch.getch() if char == '\t': # Do stuff... if char in ['\r', '\n']: # Do stuff else: sys.stdout.write(char) sys.stdout.flush() Obviously, that is a simplified example and is quite ugly, but would it be efficient enough? And, of-course, if I wanted to add more features such as syntax highlighting, I'd probably have to clear and reprint constantly...
Thanks for this. I was thinking about text adventures and choose your own adventure style stories and how to accomplish them with python. 
but why dont i use + instead of * because under what circumstances will i want to match zero foo. doesnt zero or more mean all?
First of all, this is an /r/learnpython question. Next, what exactly are you trying to do? Just divide a value by two? Post your code.
Is this a replacement for iDLE? IDLE is kind of bad and needs some fixing.
&gt; If my Python install is borked how do I run the IDE to figure something out? One would hope this IDE uses its own venv, so that wouldn't happen.
1) Use a venv? 2) Use an editor or the terminal. 3) How did it break if you don't `sudo pip` or edit `sys.path`? 4) if you have a native code C ide and your system C library is broken, how do you run your IDE to figure it out? If the JVM is broken, how do you run a java IDE to figure that out? (Answer: Install another JVM) But seriously, how often do you encounter a broken python interpreter that you didn't break yourself?
If this is the same issue I ran into when I was first starting out, you're running into a problem with ints and floats. Try this. X = 3 print(X * 0.5) Y = 5 print(Y / 2.0) Python is magical and will take care of the type conversion for you. All you have to do is add the decimal point. 
If they use something like pyinstaller, they'll have their own Python distribution bundled.
&gt; 2) What editor or IDE do you use, that's a static binary? It's normal to dynamically link to the system library. ```gcc -static``` &gt; 3) If you have some philosophical objection to a venv, just install a new python interpreter. I use venvs excessively. It still doesn't make it a tool to solve all your woes.
What about https://s-media-cache-ak0.pinimg.com/originals/a1/98/24/a19824eb376a00929d98f5cc6d5534f9.jpg instead?
http://pythonhosted.org/spyder/ edit: needing to be cross-platform should go without saying
If I have to worry about what language my IDE is coded in, it's a bad IDE, IMO. Vim could be coded in black magic and rainbow farts for all I care, it's still great for writing python code. Now if you could figure out how to replace vimscript with Python, then I might be interested. Edit: alright, fine. Vim isn't an IDE, if you make it one it's just a DE and some languages are inherently shitty. My point is that I don't think knowing the language it's implemented in matters because I'm not going to be changing the source code unless something terribly wrong has happened.
Vi =float(input('Enter the initial velocity\n')) t =float(input('Enter the time\n')) a =float(input('Enter the acceleration\n')) halfa = a/2 d = (Vi*t)+halfa*t**2 print ('The distance is', d,'d') 
using halfa didn't work for me
Those dots allow you to easily see spaces, they are not very intrusive and you can turn them off with `Preferences - Editor - Configuration - Show Tabs and Spaces`
It just has whitespace turned on. I turn it on in all my editors, so I know if that's 4 spaces or a tab.
Always glad to help. 
I've literally used https://en.m.wikipedia.org/wiki/Spyder_(software) for about an hour, but it seemed promising.
because pycharm can do everything spyder can plus everything it can't. and jetbrains makes IDEs for other languages so interfaces and shortcuts are the same, making switching projects less of a hassle. do you like spyder more than pycharm? edit: I elaborate [here](https://www.reddit.com/r/Python/comments/54eqei/a_python_ide_written_in_python/d82bd1c)
is it FOSS?
Same ecosystem /shrug
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Purpose built libraries for scraping usually have code to handle this, IE: http://doc.scrapy.org/en/latest/topics/downloader-middleware.html#module-scrapy.downloadermiddlewares.robotstxt
It might just be your wording but I think you may have a misunderstanding as to what robots.txt does. It would only dictate which paths are OK to crawl and which are not - it would not dictate how often is considered polite. How often were you planning on hitting these pages? As another commenter said, you might be trying to be _too_ polite and this might be overkill.
You can get $500 in two weeks flipping burgers!!! As for trying to do something Python related I'm going to suggest that you might have a hard time finding a programming job in that time frame with your skills set. You might want to revert to technical writing because honestly your English is passable. This especially if you can translate from native to English. I see this as viable considering your skills set but I'm not sure how you would find a gig in less than two weeks time. In the end I find your post strange. I mean really, you leave people with the impression you are an adult so why the question in the first place when the obvious answer is get a job. What is the deadline all about, are you expecting big burly men to come around in two weeks to collect? 
Was already a developer in Java, but made an exporter for Blender in Python. Then moved to Django for an intranet app, and some tools in games development shop.
Modern and up to date? What are you talking about? I just want something that's easy and works. Like `apt-get`. But if you insist in talking about "modern", you should realise that `aptitude` is more "modern" than `apt`.
Vim is not an IDE, to be fair. Sure, with plugins and stuff you can turn it into one, but it's a text editor. Bram would slap your fingers for saying that :P To be honest I'm kind of nitpicking.
That's not the part of the stack trace that's relevant. The most recent call is last, in `adapters.py`. And the actual error is due to something related to SSL not finding a file that it's looking for, which has nothing to do with PRAW per se. You need to find out what file it's looking for. 
Here, I converted this from C# to Python. Decent distribution of random numbers using a bytearray filled from os.urandom. import os import math import struct def GetRandomInt(MaxInt): bitcount = 0 inputint = MaxInt # Lowest number of bits needed to represent MaxInt while(inputint != 0): bitcount += 1 inputint = math.floor((inputint / 2.0)) # Nearest even number greater than MaxInt y = MaxInt + 2 if MaxInt % 2 == 0 else MaxInt + 1 modulusvalue = (math.ceil((y / 2.0)) * 2) x = MaxInt + 1 while(x &gt; MaxInt): randomBytes = bytearray(os.urandom(bitcount)) # Struct requires at least 4 bytes to unpack a bytearray if len(randomBytes) &lt; 4: prependamount = 4 - len(randomBytes) zerovaluedarray = bytearray(b"\x00" * prependamount) randomBytes[:0] = zerovaluedarray tmp = struct.unpack_from("&gt;i", randomBytes)[0] # Make sure X is a positive integer x = tmp if tmp &gt; 0 else tmp * -1 x = x % modulusvalue return x if __name__ == "__main__": EventList = ["EventOne", "EventOne", "EventTwo", "EventThree", "EventFour"] # Lists are zero indexed, subtract one to account for that. MaxIndex = len(EventList) - 1 index = GetRandomInt(MaxIndex) print("Random number: {0}".format(index)) print("Random event: {0}".format(EventList[index])) I honestly don't remember *why* this algorithm works, I just know that it works fairly well. While I'm here, I should note that there are string operations that'll help get rid of your case sensitivity and trailing space issues. Check out upper(), lower(), and title(). Also take a look at rstrip(), lstrip(), and plain old strip(). For the love of all that is holy, get in the habit of running strip() on all user input. It will save you and your users so many headaches down the line.
Thanks a lot! Will try to implement this. 
The script runs fine using python. The only thing I've found is adding this string: r.config._ssl_url = None but I get the same error
[Visual Studio Code](https://code.visualstudio.com/Download) is cross-platform. 
That's exactly what I said. You can make it behave like an IDE with plugins, but Vim is still not an IDE.
I use Atom to write C++ and it's too slow and freezes up, so much for Node.js being fast. I plan to switch to something written in C++ soon because it definitely does matter how fast your editor does simple things like starting up and saving a text(.cpp) file. 
Look at Atom if you want something that doesn't steal your usage data. 
I've also tried pyinstaller but I get other missing libs error. How can I correctly import every lib for the build?
That's nonsense. For one, I think it's just a point of pride for this project. Also, it's great to know that it isn't Java.
It's not a Python library that's missing, because you would result in some kind of `ImportError`. It's (probably) a data file. As I already said, my guess is that it's the CA certificates bundle, which `requests` bundles so that it can do proper SSL verification. But it could be something else. You shouldn't guess what the problem is, you should use Process Monitor to see exactly what's going on and what file it's looking for and failing to find. 
What does it do that other Python IDEs don't?
Sorry, not that I know of. If you see a term project that you like, you'll have to track down the student's info in order to see more of their work. The creator of hermit hosted his project on his [github](https://github.com/LingDong-/Hermit) and released the link in the comment section of his video, so perhaps many others did the same and added repository links in the youtube descriptions or comments. Does that help?
Yeah but this is dope and way more fitting.
seconding /u/jsalsman, what can charm do that spyder cannot?
Hi there, I've taken this course and I'm afraid it cannot be taken online. However the course [website](https://www.cs.cmu.edu/~112/) has notes and homework exercises - they're not video lectures but they're still very good. Also, there are links to older versions of the site for previous years, so if you want more practice or maybe want to see a different explanation of a topic, you can check a previous version. The course does not teach you to use specialized computer vision libraries or anything though, the OP learned that on his own.
It's for idiots because it works better? Yeah, you're welcome to install software that works worse if you need the self-esteem boost.
This is a good idea and it will definitely help me improve. I could implement it with classes and objects to learn OOP in Python.
Nice! That's remarkably similar to the plan I had when I was your age. For the most part, I was able to stick to it fairly well. Only deviation I had to take is somewhere along the lines I picked up web development in order to make ends meet. I picked up Python when I was a junior in high school, ended up landing a few good jobs with that. Picked up C/++ a while back for work. Only recently picked up C#, turns out .NET is amazing. The move from Python to C# is fairly natural, the move to C/++ is brutal. You don't get any kind of hand holding with such a low-level language. Anyway, I graduated in 2010, and I've been pretty happy with the direction I picked so far. I hope you see the same kind of results. Good luck on your journey!
Well fuck it. How about an ouroboros eating an ouroboros?
isn't atom also opt-out as far as tracking goes?
Could be really useful - particularly if it plays well with asyncio.
I can't speak for PyCharm, though I may have to give that one a shot. But the likes of eclipse or any of that ilk are the most resource hungry IDEs ever built. Unless you run the IDE and basically only the IDE, you're in for a bad time.
I loved Eric and wrote a lot of pyqt code in it. Back in the early 2000s. I now use pycharm commercial and love it even more.
It's kind of amazing that you write C++ but you OBVIOUSLY do not understand that the quality of the code has everything to do with how it performs. Obviously different languages have different ceilings depending on the task being performed, but Atom is not limited by node, just as I am sure your code is not limited by C++. Want me to write you an editor in C++ that is garbage and freezes all the time? I can.
Honestly the only reason to use IDLE, which I actually do fair bit, for this reason, is if you want to open a python ide as soon as possible and spam out some simple code quickly. I used it the other day to do some quick complexity calculations that were beyond my usual suite of calculators and such since I needed itertools, just to get a ballpark idea of what I should be implementing. I wouldn't have even kept the py file if it weren't mandatory to run the script. For anything bigger than that, there's Spyder if you want simple, free, non commercial and lightweight. And pycharm which is free and powerful and probably better for serious, larger projects, but more commercial and may not be free forever, probably not worth worrying about really, but some people are sticklers for that sort of stuff. 
Added to [Python OOP Resources list](https://github.com/metaperl/python-oop/blob/master/README.md)
5 posts ago you were happy with apt-get.
&gt; but under the old pep it seems that it was possible to change the behavior of a program based on the annotations, which is now prohibited unset the new pep. That would have required a PEP to implement. Make a new PEP with new standardized annotations, and go right ahead. That isn't prevented by this PEP. If you're making a custom Python (you're probably not) that does that, I can see how you might be annoyed. If you're not, who cares? If so, make a new PEP.
Ok, I planned to be a software developer and make games as a hobby but web development would also be very helpful. I am guessing that you would recommend it? I can definitely see it being a valuable asset maybe even essential in this day and age. And thanks again for all the help, I really do appreciate it.
nice reply, esp considering the op was pretty clearly shooting their mouth off
Tkinter could help as well. I'm not a huge fan of Packt, but they have a blueprint of one in book called "tkinter GUI application dev blueprints". I actually have the sample code, I might be able to post it on GitHub later. I'll post the link if I get the time. Sorry right now I'm on the mobile app and don't have access to my computer. Good luck and happy hunting! 
thank youuu
get this shit to /r/learnpython
There's a lot of money in web development. And in the area I was in at the time, it was much easier to find a web development position. My experience so far is that web development positions are pretty much everywhere, but other development positions tend to be clustered around metropolitan areas. The front-end web dev positions also seem to have a generally higher pay scale. I've worked with a bunch of developers, all making pretty good money. But the only times I've ever been in a room where everyone was pulling down a 6 figure paycheck, they were all front-end developers. At least in the Midwest, my experience is that good javascript guys are like unicorns, and are rarely ever unemployed. It never hurts to have that skillset in your repertoire. You might even enjoy it. It just wasn't my kind of work. I prefer to work with a different set of technologies, and I always found front-end work to be pretty boring. If you want to check it out, javascript is actually pretty easy to pick up. And if you like it, you'll be able to make games for a much wider audience by building them for a browser. Once you're comfortable enough with Python to start looking into the different libraries and frameworks available, you might want to try your hand at building a little website with Django and javascript in order to get some exposure to it. 
Nice job :) Switch to Python 3 though! 
What is your problem with this super simple algorithm?
Im genuinely not getting it. ive been on this for over 30 mins now. if you dont want to help its fine but pls dont make rash comments
you dumb shithead, the point is your stupid anecdote about game randomness is 1000000% more likely to be a programming error on your part or cognitive bias than some unnoticed deficiency in the MT. i give less than two shits about your crappy crypto implementation - don't go giving noobs bad advice like they need to write a replacement for `random.choice` to make their stupid oregon trail game.
oh btw here's the results from `np.randint` (yes, it uses MT) on your dumb test: `array([ 99932, 100062, 100556, 100307, 99579, 100109, 99718, 99422, 99878, 100437])` looks a bit more evenly distributed than your crap...
you stupid fuck, how do you not get the difference between "not suitable for cryptography" and "produces noticeable patterns"? you're not helping anyone out by feeding a line of shit to some helpless moron.
also: your code is bad and you should feel bad.
Look, this is a question inappropriate even to /r/learnpython as it's so obviously a homework problem ... But if you even attempted to solve this problem you would get some sympathy. As it is, I would suggest you open up ipython or another interactive session and start messing around. You'll get to a working solution sooner or later. Just break the problem into small chunks, such as "How do I ask for user input as a float?", "How do I test how a number is greater than another and do something else if it isn't?" 
I am really sorry to ask another question but the code is confusing me a little bit. For instance how would I make food go down each day and player health decrease if they have a disease so they eventually die? Like if I change the Food under PlayerAttributes how can I decrease it per day, etc.
so where can i get homework help then? its a sunday and my professor wont reply.. i have an assignment due tomorrow
I'm using pydub for handling audio. Quite useful and simple to use.
Engage in a little pseudocode: get x get y total is 0 if x is greater than y stop the program for number in range between x and y total = total + number display total
Don't think this is pythonic. 
The yhat article is a little outdated. Rather than `pandas.io.data` you want `pandas_datareader.data`. Other than that this is great.
You should understand the hostility is not because they don't want to help, but because this is such a beginner problem, helping you would not help you learn the language. raw_input can get you the users input, store that as a variable like. x = raw_input() y = raw_input() Put that in a loop that only breaks if x &lt; y (You can do x = 0 and y= 0 first and do a while x &lt;= y:( Then do a range loop starting with x until y and do you math on each iteration until you have the final answer.
No problem man, I meant it when I said feel free to shoot me any questions you may have ☺ So dictionaries in Python are super powerful once you get used to them. I find it easiest to think about them as containers. You can access the objects in the container by referencing the object's key. So, to interact with food, you'd do something like: PlayerAttributes["food"] -= PlayerAttributes["FoodConsumption"] Python would interpret that as: X = X - Y Where X is the total quantity of food, and Y is the amount of food consumption. I just looked at the dict containing the party member information and noticed that I threw you a bit of a curve ball with the multidimensional dictionary! Sorry about that. Fun fact: The Northern Illinois University compsci program doesn't introduce you to multidimensional arrays and hash tables until your 3rd year. So you're getting a bit of a head start by being exposed to them now. It's just a dict inside of a dict. To interact with the party member information, you'll do something like this: PartyMembers["PartyMember1"]["Health] -= 1 To help you break that down a bit, it might be easier to do something like this until you get used to it. PartyMemberData = PartyMembers["PartyMember1"] print(PartyMemberData["Health"]) 
Yeah, I noticed after I wrote it that it looks like one big blob. I'll do that right now. 
I don't have any books to suggest, but I do have some advice. If you are trying to increase your knowledge of Python then check out the documentation. https://docs.python.org/3/ Read through the standard lib docs. Get more information on the parts that you use frequently. Try out some code in the interactive interpreter. And you'll learn about built in modules even if you don't need it. (Python has SMTP and FTP stuff!) https://docs.python.org/3/library/index.html Read through the data model. It's interesting and informative. https://docs.python.org/3/reference/datamodel.html Google how to write pythonic code Read about the difference between Python and implementations of Python. (Python vs CPython) Look up how data structures are implemented and what they are 'good' and 'bad' at. (This might be a bit advancedish). `deque` can be _much_ better than lists in certain scenarios. Learn about threading and the GIL. Learn how to use the multiprocessing library. For projects, you just need to think of an idea and just do it honestly. Built a simple chat application via sockets. Send it to a friend and chat over it. Build a simple twitter clone using Flask or Django. Jobs will definitely be in Automation or Devops. New frameworks like Flask and Django will be overwhelming but there is no way around it. You just need to start, read tutorials, and google questions.
I'll definitely try sockets out, heard about it and it sounds interesting. In fact, I think I will actually make a chat application with it, thanks for the idea. And the docs.python.org/3/ are something I've referenced before, but I'll read them again, especially the datamodel; I started to learn about special methods before, but it was a bit over my head. Thanks for the info
Smalltalk forever
"A python IDE.. written in Python!" is still [Editra](http://editra.org/), by my standards. Although neither Ninja nor editra are as frequently updated as I'd like.
is there a longer sample somewhere?
Reading books is okay. But the purpose of programming is to CREATE something. You would learn a lot more by building toy projects.
I couldn't believe there were no screenshots. There are none. After some digging (in the git repo README), I found their [youtube channel](https://www.youtube.com/channel/UCPopm5397ozfsS8FOSSOWGQ) with videos of the IDE features, which is kinda like a screenshot. A "moving screenshot", you might call it. Still not a "screenshot" though. Anyway, I use more than one language so I need an editor/IDE that handles **all of them**. 
If given the option, I would tend to gravitate to an IDE code in black magic and rainbow farts. The syntax themes would be incredible, would they not? 
Well, it's easy to test for yourself. There are at least two editors written using Electron and Node.js: Atom and Visual Studio Code. There is one very well known editor written in C++, I believe: Sublime Text. I honestly love Visual Studio Code but I can't deny that Sublime seems to run much faster. It doesn't really matter to me because the computers I use are all i7's with 12GB - 16GB of RAM (well, except one and that's a tablet). If I were going to pick one up solely due to speed though the C++ compiled editor would be the clear winner. 
That's what I'm saying but for many people the speed provided by Node or another dynamic, interpreted language is plenty enough. 
Yes, I'm finding that out. When I learned web-programming nothing really stuck until I made an actual live site. What are some simple toy projects that you could recommend, maybe one that you did yourself when you were starting out? 
Oh, I'm sure lots of people love to fluff up their networks with low value connections. I still think it's a bad idea.
I can't wait until this guy finds out what the "I don't know this person" button does.
it's also a version of python written in python
What kind of web programming have you done? Have you gone into Django or Flask or something else?
As for books, one that I recently picked up and can't put down: Effective Python by Bret Slatkin. https://g.co/kgs/kM9Jvx I'm only a third of the way through it but from what I've read so far I'm happy with it.
Why Dropbox,. There's github, gitlab, bitbucket why Dropbox?
Good question! I'm a complete noob when it comes to where to post them, will drop it on github now. Thanks for the suggestion!
It sounds like you are on windows? Py2exe, or pyinstaller will do this
YesI am on windows. How does it work?
I made this with /u/cloudcrypt. It's a language parser written in python/nltk combined with a healthy dose of shibe. Combine this with plenty of highbrow and lowbrow quotes, and it's pretty fun. Let us know what you guys think!
Its a program you run against the source code of your app and it will pack it in distributable bundle along with a python interpreter and any other dependensies. Both alternatives have lots of options. I suggest you google for "py2exe tutorial".
source!?
Don't worry about it too much. I'm a beginner like you (actually if I have to say I'd say I'm behind you) and needed to do a web project, for one reason or the other I ended up with Python/Django. If you with Flask or Django my advice is look at their subs, find good tutorials and follow them to the end(get the tutorial app working) then do them again but paying attention to what you're doing.
Are people typically okay with you altering their stuff even though it's not in beta? I know it's open source, but I imagine they've thought of everything I could do. Maybe I'm just assuming. Is there a good resource for finding open source projects to work on? (I'm sure there are several.) 
I haven't used spyder in a few years, so this might be out of date, but here goes: - full support for other languages and frameworks(html, js, css, R, django, flask, etc) - integration with auxialliary tools (VCS, remote debuggers, markdown, ansible, various yaml files, CI, pip, virtualenv, deployment tools, etc) - sophisticated and simple searching and navigation throughout an entire project: by class, by definition, by usage, by filename, by text - viewing object structure - live templates (which are shortcuts to generate commonly written code), file templates, and building support for custom file types - multiple types of debuggers and debugger profiles - todo tracker with option to build filters to search for specific types of todos, and will warn you upon commit if lingering todos still exist - excellent linting and intelligent dynamic type checking if proper hinting is done which aides the quick navigation mentioned above - multiple consoles, multiple terminals - shit, i almost forgot the refactoring capabilities - huge plugin eco system for things you don't know you need yet - i just downloaded spyder to see, and code completion doesn't even seem to work - and really, it just seems empty. clicking through the menus makes it obvious that it just can't to replace pycharm. it has its place, but isn't a full-powered IDE. i used to use it for quick prototyping when i thought pycharm was too bloated or sublimetext wasn't bloated enough, but now that I know pycharm much better, there's no reason to use anything else. - plus, when I need to switch to java, c++, or *gasp* php, I know the interface will be 95% the same - oh, and you can sync settings with a central server, so if you install on a fresh machine, it will automatically be configured like you want it with plugins, shortcuts, colors, everything. and i believe this can even be done between languages, so for clion, idea, and phpstorm, These are just off the top of my head with the exception of the autocompletion one. there's probably more, but those are things I know I couldn't live without.
One of the better ways to generate events that happen randomly, but with an average frequency is to use a poisson process. You can extend this to have the timing of events being random and the probability of what event it is being describe by a different distribution. You would do this with a compound poisson process. This allows you fine tune the average frequency of events and the probability that a certain outcome happens when an event does happens.
Good little book. It helped me to understand TDD and good testing techniques, something that should help my career. Time to stump up the cost, I think.
This is impressive, but with such a short sample it's hard to say you didn't just pick the best few seconds. I'm not saying you did, but if you want people to buy it I'd expect a longer sample would make a stronger case. Really nice though. Can you tell us a bit about how it works? 
fluent python,This book was written for practicing Python programmers who want to become proficient in Python 3.
Good advice
aka how to write Python like Java.
&gt; I use Atom to write C++ and it's too slow and freezes up, so much for Node.js being fast. What OS do you use? I noticed a while ago that the windows version of atom is very slow and unstable in comparison to the ubuntu version. But maybe they fixed this.
This I will definitely check out. It seems advanced, but a lot of the chapters are understandable to me from the descriptions. 
I love O'reilly books. I'll check it out. 
Nah. Procedural generation.
/r/learnpython
Of the code? Of the note samples? If its the code Imma post it when I'm back on my computer today.
I already saw this yesterderday and now I can verbalize why I'm sceptical of this IDE. Right now there are around 30-40 different ways to work on python code and then the feature you try to atrract me with is that it's written in python? Why would I care in what language the IDE is written in? Then I look around the website and see that the features under "some features" are all features that every decent IDE has. Contrary to the name imho Ninja is just another IDE.
does the midware track if delay_length in robots.txt is followed? If I read it correctly, it seems to only follow if a page is allowed or not allowed to download, but does not check if delay_length is satisfied. 
For some domains https://foo/, I have a few hundred pages of interests. My concern is the possibility of violating delay_length, gap between hits at server level as far as I understand it, in robots.txt, which is non-standard but exist nontheless. Also some strict admins exist even though they do not put delay_length requirement anywhere. 
Code. Post it to thiefhub please. :)
Thanks. I will look into. Sounds useful.
How can I set that? Do I need to add code to my script?
Thanks.
Can you post your current implementation so it can be looked over?
Maybe someone in future will make game with PyPy in mind (there's also pysdl2_cffi, which is more modern, than pygame(its sdl1), but there's a lot that you need to write from scratch)
That's not a generic class, that's a list. Define an actual class.
Wow, thanks! I'll give this a try.
https://github.com/yhat/rodeo/releases
Just code it to buy low and sell high. Simple!
I really wouldn't rely on delay length being specified at all to be honest. What kind of requests per time period are you planning on?
I would actually give the opposite advice - stay away from IDEs - craft your first few projects using text editors - understand how to craft/run/debug python code - without the IDE getting in the way. There are endless questions asked by beginners why their code only works in their IDE - because many IDEs help too much ... Only start looking at IDEs when you know you can write a working application without one - you may have to relearn some things (like navigating the gui) - but at least you will know why things work the way they do.
Not strictly true. Yes, the videos are monetized but then so are written blogs. I think video is a good way of explaining things. That's why instructional YouTube videos are so popular. 
How so? Dependency injection is a good strategy for managing relationships began objects. 
Dependency injection is a good strategy, but automated "injectors" often aren't. Object references flying left and right without oversight is basically automated chaos.
Robot: What is my purpose? Rick: "You pass butter....oh wait that was the other one, *you* play chords." Robot: Sweet! Rhythm guitarist baby!
If you aren't allowed to install python on the computer, you probably shouldn't try to circumvent company policy. If you can make a business case for why you want/need it you might be able to get permission. That said, you can write the script anywhere you like, and if you use a py2exe tool or something like it you can probably build an executable that doesn't need to be installed *per se*.
My advice is encapsulated in a blog post i wrote last year : http://viewfromthekeyboard.blogspot.co.uk/2015/12/python-weekly-8-i-know-python.html Two other posts to read from my stream : 1) familiarising your self on the bits of the standard library - and testing frameworks - see my blog post http://viewfromthekeyboard.blogspot.co.uk/2015/10/10-things-to-learn-as-python-developer.html 2) Pick a good way to work - and practice : my blog post on Incremental Development : http://viewfromthekeyboard.blogspot.co.uk/2015/10/incremental-development.html I firmly believe that python lends itself to Test Driven Design and Incremental Development
I personally use visual studio code (mac is supported)
If you're looking into Flask I highly recommend Miguel Grinberg's flask mega tutorial to start out with and if you stick with it then his Flask Web Development book is excellent. Tutorials are a great way to get a taste of what a particular module or framework is capable of but the real learning starts when you make your own project. From there you get to dive into documents, view source code, search engines, stackoverflow, and subreddits! Always remember with programming to take big complicated ideas and break them down into smaller, more manageable portions otherwise you're going to feel overwhelmed. Also, don't start with big projects, start small and work your way up. If you're looking for ideas check out github for projects to contribute to or abandoned/incomplete projects. 
Try multiple cursors for a very very quick start. 
With Windows Python you can just copy the install dir from one computer to the other and run it as a portable install like: C:/pathToPython.exe C:/pathToScript.py From the command line. To use pip, you would do the following: C:/pathToPython.exe import pip pip.main(['install', 'PyPackage']) because python and pip won't be on the system path
/r/learnpython
I use the latest Windows. That may well be why. But isn't Node.js cross platform? 
As I said I had performance issues with atom on windows. I don't know if they fixed that now. But on ubuntu atom runs like a charm. &gt; But isn't Node.js cross platform? Maybe some os internals are causing a slow down, I don't know. Usally I prefer ubuntu as coding os. You have a huge variety of powerful terminals/shells, many editors are well integrated and so on. And as a programmer you shouldn't have problems to use extensive console commands ;) Everytime I boot up windows I am just annoyed how laborious some UI designs to customize or change things are. Best example is my old mouse. It has not that many dpi so it seems slow. So on ubuntu I just cranked up the mouse speed and it is fine. Under windows the maximum available speed is still too slow and changes in the regristry are caped to 20 whatever which is too slow. My question is why this hardcoded limit? Just my two cents.
A lot of text editors will setup the run environment for you too, so I don't think they'd escape that by being on an editor. 
I wonder what the original choices were. I can think of a few options that would beat out IDLE and Geany (at least in feature set, maybe not in popularity), but maybe they didn't show up in the poll.
thanks for the improvement, @spidyfan21 ! 
I installed anaconda on a work computer no problem.
Anaconda doesn't require admin rights to be installed, so you can get Python and pip without much rigamarole. (The install goes in [%LOCALAPPDATA%](http://ss64.com/nt/syntax-variables.html) and the directories get appended to the user's PATH.)
Thanks for the reply, but I ended up figuring it out!
&gt;My question is why this hardcoded limit? Short answer, ease of use and safety. Windows is made to be easy for people who are not computer science or info tech literate. It's UI is designed for ease of use not for power and control. Most Linux distros are the opposite they're made to be customizable, powerful, and user controllable on almost every level. The last Linux distro I used was Fedora, and I can't say there was anything I could complain about. I liked it. The reasons I have windows now are twofold: 1. I want to play video games written using DirectX for graphics, audio, etc. which are only made for windows. 2. The OS market is dominated by Windows, mostly due to ease of use and the bandwagon effect and thus if I'm writing non-portable software, targeting Windows assures me that most people can use it. But even so I try to write my code to follow C++'s write once, compile anywhere idiom. 
Vim with jedi-vim, nerd tree, and ctrl-p.
I've got IDLE3 and IDLE3.4 and I've heard I can write--but not run--Python 2.7 in those. I'm getting ready to download the PyDev plugin for Eclipse and I downloaded LiClipse ... will those be good for 2.7? So far, all my work has been using browser-based apps for my Python learning. Oh, and I have Komodo. They've all been sitting there while I learn in other environments but now I'm ready to use them -- which is best? I have them on both Ubuntu and Mac. 
/r/learnpython. Also: Python 3.5.1 (v3.5.1:37a07cee5969, Dec 6 2015, 01:54:25) [MSC v.1900 64 bit (AMD64)] on win32 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; for x in range(10): ... print(x) ... 0 1 2 3 4 5 6 7 8 9
&gt; I want to play video games written using DirectX for graphics, audio, etc. which are only made for windows. I can understand that, for purely this reason I still have windows on my pc. But I have to admit that most of the games I play are cross platform. Roughly 50% of my games in my steam lib running fine under linux. Ok most AAA titles don't, but honestly I am not interested in most of the AAAs released the last years. So in the end I start up windows maybe one or two times in a month. &gt; The OS market is dominated by Windows, mostly due to ease of use and the bandwagon effect and thus if I'm writing non-portable software, targeting Windows assures me that most people can use it. But even so I try to write my code to follow C++'s write once, compile anywhere idiom. This trend is changing slowly. Because of the massive use of smartphones the people tend more to use web applications in general, at least those can ran in any modern browser. But of course company software is a different matter, but there is also a trend in using microservices to avoid platform and even languages barriers. We will see how the trend will go. For now you are right. But Microsoft still need to do alot to defend its current stand. Other OSs are evolving fast. You can't compare many linux distros from 90s and early 2000s to their modern versions anymore. And MacOS which is kind of a *nix but with alot of restrictions is after windows very popular.
thanks, but how would i get it to repeat a word? doing numbers in that order or on a line is fine but im just having problems getting it to repeat a word over and over
This question gets asked once a week on here and /r/learnpython. I'm sure you can find a few posts that are fairly recent. 
thanks a lot that worked! all i was missing was the underscore, typical! Hahaha thanks again! 
thats okay k900 gave me the the method i was trying to find. but thank you for the post and trying to help!!
The underscore is not magic - it's just a variable name. It could have been `x` or `i` or anything like that - `_` is just used by convention to indicate "I don't need that value".
&gt;And MacOS which is kind of a *nix but with alot of restrictions is after windows very popular. But it's not even close to closing Windows' lead. And I don't mind that, I personally have to problem with Windows other than it not having as many compilers and other tools as Linux. An interesting idea that I had was that ISO could come up with a common API that could be exposed by all conforming OSs which would make writing cross platform software in a native, AOT compiled language much easier. Think of it as like an API like OpenGL where the underlying implementation could be anything but the exposed API is the same. &gt;This trend is changing slowly. Because of the massive use of smartphones the people tend more to use web applications in general, at least those can ran in any modern browser. But of course company software is a different matter, but there is also a trend in using microservices to avoid platform and even languages barriers. I believe it. Everything is moving to the "cloud" and being run on servers. But I still think that native applications will always have a place in the world of software. 
Thanks for the info! I didn't know about r/learnpython. I'll check out there. I searched here and couldn't find anything too relevant. I'll dig through again. In the meantime, do you have any SDK/libraries that you think are good reference? 
I agree with you 100%. Miguel Grinberg's posts about Flask are amazing. I've learned a lot thanks to them: http://blog.miguelgrinberg.com/. He touches authentication and everything. No real need to buy a book here.
My favorite is PyCharm. Great PEP8 hints. Debugging. I am having to develop some Python for embedded applications and push and run on remote platforms via SSH is great and a time saver.
!RemindMe 10hours
Four spaces for a code block, back ticks for inline code. In py2, print is primarily a statement, although it can also be used like a function. That is to say, commonly py2 code will say `print 'my string'`. In py3, print is always a function, and its signature is different. Therefore, 2to3 may naively enclose anything in a py2 print statement in brackets to make it look like a function for py3. If you've already included brackets, it might do that anyway. 
I've been trying to learn Rust with what meager free time I have, but I haven't been able to get very far. I think Rust's focus on safety is a really good idea. What do you think is the best resource for learning rust? I've already done the official tutorial.
I only prefer to use vim with apt-get purge
A good point of Rust is its community. I never received harsh comments on my noob questions (that I still do :)), so check /r/rust and the IRC channels for questions. Said, that... there is [this repository](https://github.com/ctjhoa/rust-learning) that aggregate all the resources available, books, courses, videos and so on. But my advice is: if you know the basis (by doing the official tutorials) chose a small project and smash your head on it. The hardest part of Rust, I think, is become confident with the lifetimes and borrows-checker. And there is no best way to learn that than fighting with the compiler for some days. (for instance you can try to convert some python scripts in Rust or implement a random dungeon generator)
I think that's a testament to how horrible search can be on here. I'm having trouble finding the posts too. Like you mentioned, Stripe and Twilio are the obvious ones that are well documented and have everything you want. AWS comes to mind as having a pretty decent CLI. HTTPie is another that has a great CLI.
This isn't really what you're looking foror very useful, but this would fit your description: &gt; print "word\n" * 10
Isn't the emacs equivalent something like pressing both Ctrl keys on your keyboard, plus the right Ctrl key on a friends keyboard - then Y, X, C, R, B, then let go of the 2nd Ctrl key, then G, Z, @(without using Shift) ?
This was really interesting, thanks for sharing. I liked that it wasn't some contrived example, but walked through a simple strategy and evaluated it on real data. Seeing the performance of the ETF and the linked R post on the simple trading strategies with SPY, it makes me interested to see what would happen if applying these to other ETFs and treating them like the stocks you were comparing against the ETF.
You sharing the source anywhere?
That it's really useful, I will update my program to use the api, do I need to download youtube-dl in order to use api ? 
Yes. You should just install it with pip: `pip install youtube-dl`.
this is the full list of the survey : The question was: What is the best environment to write python code ? * PyCharm * Wing IDE * PyDev * Komodo IDE * Eric * IEP * Spyder * KDevelop * Boa Constructor * Liclipse * Visual Studio * PyScripter * Leo * Sublime * Canopy * NinjaIDE * VIM * PTVS * Anaconda * Emacs * Stani's Python Editor * Glueviz * iPython Notebook * Atom * python-IDLE * IDEA intellij * PythonFiddle * Koding * Eclipse * PTK * Bluefish * Geany * NetBeans * gedit * TextMate * pyenv * BPython * ptpython * SharpDevelop * Notepad++ * CodeSkulptor * Brackets * Aptana Studio * DreamPie * wxFormBuilder * ico (Pine composer) * Nano * Codelobster * Rodeo * Miniconda * Spacemacs * Codenvy * Pyzo * Light Table * Dr. Python * Jupyter 
I bet there are many "simple" baseline strategies that any portfolio and trading strategy should be compared against. Additionally, I bet there are much better trading strategies than those based on simple moving averages. One thing that I found extremely interesting though is seeing how any strategy compares when commission is considered. I wrote solutions to my problems and discovered a portfolio that is barely profitable (though not beating the market) can become a LOSS even in monetary terms when commission is included!
And this is just for learning purposes but how can I set my program so it if you were to installed it, it would install all it's dependencies. 
You can declare your dependencies in a `setup.py` file, but in your specific case, youtube-dl requires `ffmpeg` for some operations, which is not a Python package, so it will need to be installed separately somehow. You can build a Windows installer with something like PyInstaller or cx_Freeze, I guess, and on Linux you really want to build distribution-specific packages which will depend on stuff from that distribution's repositories.
yes me too! Something like: apt-get purge apt-get pacman -Syu vim
I've done this on my work computer (and my bosses were totally cool with it).
Me too, with the same result.
I'm watching some of Miguel's posts on flask right now, and I think this will be extremely helpful. His instructions are exactly what I respond too. Thanks!
It's funny you mention returning to the project months later to realize your code sucks, cause that's exactly what I did recently. I looked at some code I did over a year ago, and was surprised at how simple, and ugly, it was, yet I remember being overwhelmed at the time I wrote it. These 'milestones' as a beginner programmer keeps me going; I can't wait till the code I write today will look like crap to the future me. The rabbit-hole... 
A lot of the responses to this thread, as well as others similar to mine, seem to have this is common; build something you want to use instead of just piling on the fundamentals. It's tough because college teaches us to learn bottom-to-top, but much of code, so it seems to me, is very much top-down. 
Depends what you're doing. Pycharm has all the features of webstorm, so if you're a full stack dev using Python/Javascript/HTML/CSS you wouldn't need to switch at all.
Nuitka work fine with the standard lib ... But with other packages like numpy or matplotlib maybe try with other solution
Spyder doesn't do that? I thought it was at some point, but then I had to disable what I thought was a corresponding extension(s) because of spurious keyboard noise glitching.
i posted the list above
Wow, thanks for the comprehensiveness!! I've got to try it. Do you use it for R over R Studio?
fsvo "elegant" - personally, I think using a multiplication operator on an integer and a string seems rather nonsensical... it is the most concise approach though.
How many times a day do you switch development platforms? 
How can IDLE be in that list? And even weirder how can it be above some other real IDE? Personally I use jupyer notebooks for tinkering and testing and atom for completing the code.
Modernize is defined as "A hack on top of 2to3 for modernizing code for hybrid codebases.". I do not wish to have the code run on Py2.
I love Vs code for some front end stuff (I **love** the git integration, probably the best I've used yet). Mind if I ask for a few/list of your recommended Python extensions for it?
Its a mix of both. To solve a complex problem you need to build bottom up and top down. Where it meets in the middle is where the interesting stuff happens. A lot of good software engineering is knowing how to stomp the middle ground with a good gut feel about how easy or not a particular higher level or lower level module will be to create.
code is here: https://www.dropbox.com/s/e1dxtiku6yf9q85/mikezart.py?dl=0 script that does the thing in line 773
May be you are right. I wouldn't consider myself an expert enough to comment which one is the most Pythonic way. Any comments on that? 
Im doing my Bachelors thesis on business data analysis... useful information, thanks!
In da vim.
Actually girls are not too interested in programming.
Glad it's helpful!
I'm guessing the pentatonic scale is playing a role here? Pretty cool.
&gt; my "skills" in Python ...are just skills in Python. You can learn everything there is to learn about a language, but you're still going to be quite limited in what you can do. After all, a language only translates a problem into machine instructions... you still have to learn how the machine works and what else it does. I'd recommend learning more about the code and hardware underneath the Python you'll be writing... about networking, about operating system theory, about your specific operating system (be it Windows, Linux or otherwise), maybe even a little about computer architecture. Also learn the various ways you can use a language to represent a problem: learn about abstract data types, algorithms and design. Python has largely abstracted these away, but it would behoove you to have a passing familiarity of them so you know the difference between good code, quick-and-dirty code, and really, really bad code. IMO these are the basics every programmer should know. They'll help regardless of the problem you're trying to solve, and the tools you use to solve it.
Does rust provide something like flat_map or and_then on Options, Results, etc? It's often easiest to work with monadic types like that using those methods.
This [Python extension](https://marketplace.visualstudio.com/items?itemName=donjayamanne.python) is the one I use. Handles all things Python! One-stop-shop.
https://winpython.github.io/ install to local dir does not need admin rights
Thank you, I appreciate it!
We used to have a strategy that traded every 2 hours with 40 positions. Over about 3 month of trade, the realized CAGR was about 21% before commissions and only 2% after commissions. That's the time when we decided to screw those intraday portfolio strategy as individual investors. (We could've used limit orders instead of market orders to lower the commission by probably 50% but we would be concerned about unfilled limit orders)
yeah they have quite a few good ones: https://doc.rust-lang.org/std/option/enum.Option.html fn and_then&lt;U, F&gt;(self, f: F) -&gt; Option&lt;U&gt; fn or(self, optb: Option&lt;T&gt;) -&gt; Option&lt;T&gt; fn or_else&lt;F&gt;(self, f: F) -&gt; Option&lt;T&gt; fn ok_or_else&lt;E, F&gt;(self, err: F) -&gt; Result&lt;T, E&gt; fn map_or&lt;U, F&gt;(self, default: U, f: F) -&gt; U fn map_or_else&lt;U, D, F&gt;(self, default: D, f: F) -&gt; U and some more I believe. It's hard to know which is best starting out though. The naive approach after reading docs seemed to be pattern matching which is very powerful but certainly a bit more verbose when one of these work. 
Yes. It is a way to simulate the spread.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Have you considered putting this in a Jupyter notebook? I think this post would work great. Also, I work on Azure Notebooks and would love to have this on our site as a library if you are interested.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
for writing automation scripts sublime Text 3 should be plenty ok. Make sure you use a version control thought (git or mercurial)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Pytest.vim
I wish I could... asyncio is only supported in python 3.4 or higher. I created and am currently using this for python 2.7, since lots of ros packaged only support 2.7. 
Preprocessing data into a format acceptable to R is a great use of Python. Also writing functions is easier in Python. Check out the Pandas library for R like functionality.
I used to use Aptana Studio 3 for all my coding, but switched to [Atom](http://atom.io) once development on Aptana stalled. I know Atom isn't Python specific or the best, but there's some nice extensions.
More than that. You also need to take into account the impact you have on the price, driving it up with your longs and down with your shorts. This is less of an issue in super-liquid securities like SPY though.
I mean yeah from an academic standpoint your right. Correct me if wrong but in reality, excluding financial institutions, an individual investor will actually have no impact on price. I understand that technically they do but it's so minor that it could arguably make an individual investors model less reliable/accurate because they would be overestimating costs. 
Thanks. For 1 and 2, how do you start working in these environments? Is any file saved there and run from the command line run within the env parameters? I understand the concept of virtual env, but I can't figure out how to utilize them. Meaning, do I activate it and then run jupyter and save files? Or put a .py file in there and run from the command prompt? 
This is exactly what I needed. Thank you! 
Not sure about bottle but [here's a video from pycon for flask](https://m.youtube.com/watch?v=tdIIJuPh3SI). 
R studio is very similar to spyder, so the same arguments apply if you want to use a jetbrains IDE for R, you need a plugin though: https://ktisha.github.io/TheRPlugin/ It's got a good rundown of the additional features for R
I know very few people who switched from R to Python. Especially for data work there does not seem to that much advantage I went with Python INSTEAD of R as I ditch SAS and I did so for the reasons mentioned by others -- besides being competitive with R on all data work, it's also a general-purpose language, so If I wanted to extend my work and build a web-app to showcase the results -- it'd be easy within Python -- within one project and codebase ... not so with R. I think the reason Python is taking over Data science is exactly for the same reason Data Science took over Statistics. It's better integrated into the rest of the software-development workflow / the computer science majors like it better. It's not a great reason, but that is what I see. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
if it providing some of the Development Environment to the user, then it is on it's way to becoming an IDE - it might not be fully featured, but it is still on the way. I still maintain that the best way of understanding how to 'build, test &amp; run' in your language of choice is to do it manually yourself - ideally via a terminal (and of course build includes change control). Once you know that then you can use icons on an IDE or advanced editor to provide shortcuts.
For a free Windows CI I'd recommend https://ci.appveyor.com/. Its free version is slow as it allows only one VM running concurrently - but you can work around that by installing multiple pythons on a single VM and running all tests in there instead of defining the matrix of pythons.
Agreed, but it's still a good podcast
List seems to be (looking at http://www.oreilly.com/programming/free/20-python-libraries-you-arent-using-but-should.csp): * collections * contextlib * concurrent.futures * logging * sched * flit * colorama * begins * pyqtgraph * pywebview * watchdog * psutil * ptpython * hug * arrow * parsedatetime * boltons * cython * awesome-python
It inherently isn't because it presents the information in the most ineffective way ever... seriously I can't imagine a way that is worse. I'm not going to listen to a podcast of 1 hour and 16 min for a list of 20 names that I could skim through in 5 minutes and have all the relevant information that I need if it was in text form.
Niiiice!!! I've switched to PyCharm for larger project, but Spyder is always there beside it for simple scripts and if I wanna do something quick and dirty. It's simply the best for small to medium stuff
Sorry! Didn't realise it was the wrong thread ;)
Thank you very much!
/r/learnpython has a lot of resources on the wiki.
What would it take to repeat this, and how frequently would the core team want to? If corporate sponsorship or crowd funding could be acquired to do this once or twice a year then we could definitely speed up Python development dramatically. I'm not wanting new features that quickly, but if we could get the gilectomy and other performance improvements completed quickly, and maybe get a sizeable dent made in the number of open bugs to improve stability, a lot of people could benefit from these more focused sessions.
I just did the free course at Codecademy.com. Helped me learn the basic syntax and then go from there with your own projects.
From all the people who can't be bothered to listen for entire hour for 20 names, thanks.
Use Spyder everyday I look forward to checking out the updates this morning.
You can easily build it yourself with Flask or Django or whatever.
No, in Python 2, print is only a statement. `print ("foo")` is actually interpreted correctly because the parenthesis are removed in the AST (it is not even considered as a tuple). It's the same as writing `a = (1)`, `a` would contain an integer (here, 1) and not a tuple or something else. So if the parenthesis are there, 2to3 suppose that it is what you explicitely requested and keeps them.
how does spyder compare to pycharm (free) ?
I just installed it on python 2.7 windows 7 using the recommended command pip install -U spyder and when I double click on the spyder.exe under Script dir it just looks like something loads for a second and then nothing happens. No window or anything comes up.
Try running the script from the command line to see what's going on.
Atom.io + Hydrogen + Jupyter notebook on EC2
I don't work in data science (where I believe Spyder is strong) but for general programming work, Spyder is lacking a lot of features and plugins compared to Pycharm, and Pycharm isn't slow on a good machine. For data scientists, the situation may be different.
But extending your logic those same people will already be aware and have means to follow the progress on this library elsewhere so it really makes posting about it here completely pointless.
I'm interested in graphene, but I don't follow graphql specifically. I am glad this was posted here since it reminds me I should check it out again. Surely the whole point of a general interest group is to be exposed to a variety of different things.
after many discussions, you decided to include almost all the decisions/changes i wanted (and sent PRs for): * XDG support * Qt5 by default if this trend holds up, then there will be a day when you ditch fontawesome for breeze icons as default and `QIcon.fromTheme` ;)
it’s more for interactive work on numpy data structures (e.g. data science) it doesn’t focus on project structure, test integrations, debugging, and more on plotting, displaying and editing array data.
at first the loading might be slow. at least for me. next start up should be faster
hey guys, this is my first time trying spyder. the autocomplete only work on "." or when we press tab only? there is no autocomplete on the fly? where we can select from the dropdown of possible outcome? 
I use sublime text editor. Not an IDE but gets my job done. 
True. But a package can also act like a module if you wish. You can also have setup.py files even if what you are developing is in a single file. 
Threads and async can fit well together but devs must put in the effort. Efficiency depends on many factors such as whether an async alternative can be used and the time of both a threaded and async solution. The key things you'd have to look out for is whether the threads will be managed in the event loop or or outside of it and dead lock prevention. Usually async frameworks have ways of managing threads. Twisted has [``deferToThread``, ``callFromThread``, ``callInThread``](https://twistedmatrix.com/documents/current/core/howto/threading.html), ... Tornado and asyncio have [ThreadPoolExecutor](https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor)
Spyder 3 fails to start when I have Trusted Font mitigation on globally in EMET 5.5. Had to disable to make Spyder work. 
First time I see it and I must say it looks pretty cool. Can you say something regarding the limitations. Would it for instance work in an office with multiple wifi senders (note I have quite limited knowledge of what's going on when I connect to wifi)?
There are 2 wonderful (and free) books out there: http://www.diveintopython.net/ http://www.diveintopython3.net/ Personally, I read both and this really helped me to learn the basics of Python.
what'd be nice is a client/server architecture that could tell me where anyone of my devices is.
YOPLA 0.1 RELEASED, WITH BUILT FOR HUMAN SYNTAX!
It does not actually connect. It only "scans" to find out how good the connection is to each access point. It's the step that happens when you switch on your laptop and the wifi starts scanning for which network/access point to connect to. We get the quality per network. The combination of a network being there (or not) and the quality (signal strength) are the only features we need (given there are usually many many access points around). It works for me not only at home with 7 access points, it also works at a bank with 100+ access points.
That really shouldn't be part of this program though. Do one thing and do it well... and that precisely seem to be what this program is doing :) Really cool OP.
Check out Sandman (2) by Jeff Knupp: https://github.com/jeffknupp/sandman2
The issue is probably quite complex. However, here are my thoughts: 1. Python already works really, really well for most companies that use it. 2. A lot of improvements in Python will only affect a small number of companies each. 3. Sending your triple-figure salaried engineers away for a week to work on Python when they could be working on your project is costly. 4. People are worried about large amounts of breaking changes over a short period of time. I mean, the way they restructured dicts sounds somewhat scary to me considering how much of Python would break if it was done incorrectly. Those are just some educated guesses.
That's what smartphones do. It is why the OS recommends you have wifi on for location services: it can get a rough fix immediately, whereas it takes several seconds to get a GPS fix. The OS keeps a cache of local access points, created by companies like [Skyhook](http://www.skyhookwireless.com/), who drive around cities getting the info.
I get the feeling that if you ran it on every frame of a face in security footage you could get some use out of the average face it built up but it is still essentially guessing what people look like from very little actual information, it wouldn't come close to being evidence at any point. 
The intrepets it part is troublesome to me. Understanding the task at hand will ensure you don't misapply techniques.
Good point. Here's an example of a comparison http://stackoverflow.com/a/39730384/1431778
It's reddit, and there are angry people here
Could you involve machine learning so that the model gets rewarded for profitable months and punished for losing months 
Yes I will be parsing natural language e.g "Hey can X be done tomorrow night" which will then be interpreted by ML program
1. it depends on scipy and numpy, and `pip install whereami` doesn't pull those in. Add them to your dependencies? 2. this: $ whereami Traceback (most recent call last): File "/home/john/src/whereami/env/bin/whereami", line 11, in &lt;module&gt; sys.exit(main()) File "/home/john/src/whereami/env/lib/python3.5/site-packages/whereami/__main__.py", line 9, in main if "predict_proba" == sys.argv[1]: IndexError: list index out of range 3. this: $ whereami predict_proba Traceback (most recent call last): File "/home/john/src/whereami/env/bin/whereami", line 11, in &lt;module&gt; sys.exit(main()) File "/home/john/src/whereami/env/lib/python3.5/site-packages/whereami/__main__.py", line 10, in main predict_proba() File "/home/john/src/whereami/env/lib/python3.5/site-packages/whereami/predict.py", line 9, in predict_proba print({x: y for x, y in zip(lp.clf.classes_, lp.predict_proba(sample())[0])}) AttributeError: 'Pipeline' object has no attribute 'clf' 4. if you resize the terminal while it's learning, you get $ whereami learn desk 20 40%|███████████████████████▏ | 8/20 [00:10&lt;00 45%|██████████████████████████ | 9/20 [00:14&lt;00 50%|████████████████████████████▌ | 10/20 [00:15&lt;00 55%|███████████████████████████████▎ | 11/20 [00:15&lt;00 60%|██████████████████████████████████▏ | 12/20 [00:16&lt;00 65%|█████████████████████████████████████ | 13/20 [00:17&lt;00 70%|███████████████████████████████████████▉ | 14/20 [00:21&lt;00 75%|██████████████████████████████████████████▊ | 15/20 [00:22&lt;00 80%|█████████████████████████████████████████████▌ | 16/20 [00:22&lt;00 85%|████████████████████████████████████████████████▍ | 17/20 [00:23&lt;00 90%|███████████████████████████████████████████████████▎ | 18/20 [00:24&lt;00 95%|██████████████████████████████████████████████████████▏ | 19/20 [00:28&lt;00 100%|█████████████████████████████████████████████████████████| 20/20 [00:29&lt;00:00, 1.57s/it] 
Put this on a raspberry pi on top of a roomba. :D
Thanks for the input! You make a great suggestion. I designed Variable the way I did so that it could stand alone of classes; what you suggest is a nice API, but one that can only work if the variables are members of a class. Rather than removing Variable, I might add something like the mechanism you describe. 
It should be already (at least it is for me on Linux :-)
Any plans/ways to add a method other than polling? It would be neat if as I moved it changed where it thought I was. Could be useful for tying my phone to an internet of things. e.g. turn on lights as I approach a room with the phone. 
You're looking for NLTK. What you want to do is a subfield of computer science called natural language processing - it is extremely tricky! Good luck!
Please open a bug about this in our issue tracker.
Yay, a new subreddit to subscribe too!
You should be able to port it to android
You'll get better help over at /r/learnpython. You should be able to build a pretty simple frontend for this with flask or django like another poster said. 
You'll get more help over at /r/learnpython especially if you tell us more of what you're trying to do. You asking how to avoid use no a huge library, but not telling us what it does for you. 
Also there is a YouTube channel called "Pretty Printed" that has quite a few beginner-friendly tutorials on flask
Well, what have you tried so far?
I like it. I wonder how easy it is to extend. And what a name. Shots fired!
Wow, thankyou everyone, I think that's the first decent thread I've started on Reddit. Also, I've learned about some new tools such as IdleX and Editra. I'm trying to stick with advice I've heard on Python podcasts and websites: don't spend ages researching IDEs, just get coding! Also, if you are going to "IDE-hop", then at least stick with each one for a month of proper usage. 
This library is very easy to extend. You just need to create a text file with the fake data. At this moment we support three locales: en_us, de_de, ru_ru. Also soon will be added fr_fr. Contributions are welcome!
Seemed to be updated several hours ago at least on Windows, too.
Actually, as I've written I believe in the README, it is amazing that vertical spread even seems to be a better discriminator than horizontal spread!
First of all, this should be in /r/learnpython Second of all, you could do this with regex, but that may be too complicated. I do not want to do your (home?)work for you, but the steps would be: * Split the string into words * Go through each subtring and find all words that starts with `$` * Remove `$` * Convert to a float or an int. * Sum over them You can do this in one or two lines with list comprehension 
thank you so much, will try that!
Certainly! It should. Though I still suspect there might be some wrong overfitting. Tomorrow I'll try again in a big organization and see if I can get a reliable 2 meter classification.
I might try it with Kivy later on this week.
Thanks once more! I fixed `predict_proba`. Try `pip install -U --no-cache whereami` and please try again :)
I like your spirit :- )
Wow, that's super interesting. Any theory as to why?
It's all about how much signals are being "blocked". In open/horizontal space, signals are much more similar. That'd be my guess :-)
I added them in the requirements.txt, not sure if it has any effect though.
Thanks! Indeed. I went with the unix philosophy by splitting [access_points](https://github.com/kootenpv/accces_points). It feels right :)
Round tripping like you're suggesting can be tricky sometimes. Do you really need to write the data to csv? Can you just work with the data in memory? What about openpyxl do you find clunky?
Oh, Jesus! Sorry. Link below.
I think this may be a bit ambitious. Natural language processing is one of the hardest problems for computers to solve, even Google struggles. ML on its own isn't the best approach. Are you looking to experiment, or make something functional? It's definitely an interesting field. Manchester University in the UK has a professor who's very talented at this stuff. You should be able to find his courses if you dig around. They aren't recorded but most of their courses have slides and notes available.
Not everyone lives with color quite like you do then. It can be quite distracting when done improperly. Enough green and red, Christmas tree eye bleed. 
I was just destroying his logic. I invite posts like this too but wholeheartedly embrace the criticisms of how it was delivered. 
&gt; How does this compare to Faker? Look here, please: https://github.com/lk-geimfari/church/blob/master/docs/README.md
New discussion here: http://bit.ly/2ddLu4M
haha, sure! i’m not using spyder much these days, but maybe that’ll change with 3.0
Good point. Color used just to use color is bad. But used properly, it can provide good hints.
Screenshot: http://imgur.com/a/QpVNE
It would be great! Thank you!
How do you convert manual tests to automated tests? This episode looks at the differences between manual and automated tests and presents two strategies for converting manual to automated.
Kinda, but not really. It should look it whatever directory it's located in to find python.exe. So, by virtue of where it's located, it should be Python independent-ish, but it's probably not going to work with say Python 2.4. As such, you're effectively tied to the version of Python that IDLE is shipped with.
I am not using it in ros but with ros. The some or all (not sure) ros modules, I am currently using support only python 2.7. So I must use python 2.7 and to support server/client, Im using this framework.
Another way to look at this is that if you're going to colorize your output, then colorama is the way to go since it works well on multiple platforms. Clearly you're right that bad UI design can't be fixed by importing a package.
You might want to have a look at voice recognition grammars. They can be used for things like this. In particular, take a look at [Dragonfly](http://pythonhosted.org/dragonfly/) and some [example scripts](https://github.com/dictation-toolbox/dragonfly-scripts). It's easier to build pre-defined commands than try to parse meaning from arbitrary language, and commands like this work better by voice.
No worries, have fun! 
How does this compare to [fake factory](https://pypi.python.org/pypi/fake-factory)?
It is very nice. You don't realize how awesome Spyder is until you have to deal with Code Blocks, Eclipse, or god forbid Visual Studio. * Auto-relaunching consoles when one is closed makes Spyder much more approachable to newcomers who have never used Python before. * UMR is phenomenal! * Object inspector was more confusing than help I might suggest that you let the fast file switcher allow switching between any files in a project's directory. I dislike having ~100 files open because it slows Spyder down, but I want to be able to get to them without browsing through the folder the files are in. The integration of syntax highlighting from any language may mean that Spyder will get used by those who learn Python first, and want to use other programming languages later. Kudos for that; it is an ever increasing demographic. Most people prefer to compile in a terminal over their IDE anyway and this fits perfectly.
Garbage tip, only applies to people still using python 2.
Great idea! Sadly, it makes me realise my apartment is too small: always picks the same choice (because of very low crossval scores I guess).
"Garbage tip, only applies to most Python projects."
Note your last test, which does an exhaustive search through the generated list. Many people when upgrading from Py2 to Py3 will convert access to dict.keys() to list(dict.keys()) to retain Py2's semantic of returning a list when getting the dict's keys. So this is still of interest even to Py3 users.
It's only a crutch to not accept keys() is a generator now and not a list.
Do you need to add data to existing Excel files, or is creating new files (or sheets within files) enough? The latter will be easier, but either way I'd start with Pandas - fantastic for analysis and the `DataFrame.{to,from}_excel` methods are great.
This seems to have finally fixed the sluggishness I was experiencing before on El Capitan, so very grateful for that! Coming from R and Rstudio, Spyder is absolutely perfect for my work.
Oops thought I was there. Posted in a rush while starting this. Thanks for filling me in. Also, you come off as an asshat.
Only garbage people still use python 2.
I want to call out this conversation: https://github.com/lk-geimfari/church/issues/6 I don't think this is the right way to treat people building software collaboratively. There's no reason to name the library something deliberately provocative - I think his point about harassing language is pretty valid.
What's the minimum it needs to work? I don't suppose 2 sources would be enough, would they?
There is a control language for the device called 'Barix Control Language' and the syntax for that language looks to be BASIC. My understanding of it is that you end up compiling your program in a cob file and uploading it to the device; I'll admit I've had a hard time wrapping my head around it. http://www.barix.com/fileadmin/data/Manuals/BCL__Programmers_Manual_V200.pdf I'll look into the netcat suggestion, as I have not run into this in my travels. Do you think it would be possible to use requests to login to the web interface, it is exactly like logging into a router, by using something like Requests? 
Code review! 1. Any reason to use pickle instead of joblib for the models? I see it in a few places, but [here](https://github.com/kootenpv/whereami/blob/master/whereami/pipeline.py#L43) is one. 2. Doesn't [this](https://github.com/kootenpv/whereami/blob/master/whereami/pipeline.py#L20) train the model on the test data after the first loop? If you look at `sklearn.cross_val_sore` you'll see it [clones the predictor](https://github.com/scikit-learn/scikit-learn/blob/51a765a/sklearn/cross_validation.py#L1430). I think you could get away with just `return np.mean(cross_val_score(pipeline, cv=n))` 3. looks like just `print(dict(zip(...)))` can be used [here](https://github.com/kootenpv/whereami/blob/master/whereami/predict.py#L9) 4. `json.dump` can take a file pointer [here](https://github.com/kootenpv/whereami/blob/master/whereami/learn.py#L13) 5. I don't think `get_model` and `get_pipeline` are good logical distinctions. They both return the same thing, one trained and stored on disk and the other untrained. A model and pipeline deliberately have similar interfaces so you don't have to care which one you're working with. Maybe something like `make_model` and `load_model` would explain what the functions do more. Very cool project! I'm definitely going to be using this with something like [arbtt](http://arbtt.nomeata.de/#what) if the `cross_val_score` doesn't end up being a big deal to the performance. Thanks for citing your sources too!
I think you are right. As the creator of the post (and graphene) I should probably pointed it in the article. Thanks for the constructive feedback!
Fair point. I am stuck on 2 until the powers that be install 3 on some of our machines so I am used to thinking for that. Once they get their act together, I'll get mine and move my codes (I suspect it won't be too bad for me)
run `access_points -n`, how many are there? also try it on several different occassions and more samples, it might still end up working!
IIRC it's longer than a few seconds for GPS to get you down to an exact location. So using wifi location is speeding things up by way more than a few seconds. (I think it may also be used to spare your battery life from turning the GPS on if you're just using functions like "what stores are nearby" that don't require the same level of accuracy as driving navigation.) 
1. I'm not sure, I thought joblib might be an external module. And "because I've always used pickle". But yea, maybe it's a good moment to switch. 2. The fit simply refits the whole model, so actually it starts from scratch. Thus, I don't believe there is any leakage. I'll look into cross_val_score and perhaps the accuracy metric of sklearn, it should indeed be nicer code (and no need for numpy import)! 3. Awesome! Yea, I don't get any chance to refactor anything with you guys pointing out everything :D Thanks! 4. Hah. good point! You could have just pull requested it, even those small ones I'd be happy to include. 5. Very good point. And I'm going to check out arbtt. Thank you very much for the code review, they're great points!
Or you know entire industries that are tied to python 2... Not like the people working there have a choice. Python 2 is still very valid 
https://github.com/lk-geimfari/church/tree/master/docs
I've never seen a concern troll like this do something useful.
This could be nice for finding where reports are coming from. Say for safety reasons.
Looks great. If you enjoyed making a text based game, you may have a lot of fun with Evennia (a MUD engine built in Python) https://github.com/evennia/evennia Let us know how you get on.
`metricsJson_Data["history"][0]["account"]["metrics"]["ratio"]` gives you `{'source': 'userdef', 'curr': 0.34, 'relative_changes': {'30_days': 0.0, '3_days': 0.0, '14_days': 0.0, '7_days': 0.0, '1_days': 0.0, '90_days': 0.0}, 'type': 'NUMERIC'}`, which is a dict. `for entry in that_dict` iterates `entry` over the keys in the dict, not whatever it is you're expecting it to do. Also, /r/learnpython is a better place for such questions.
Post the full code.
I build something similiar recently, never used matplotlib before. I wrote that program for a company of a friend, they have a constant flow of temperature &amp; humidity data flowing in from a sensor, my program will read out the data from their csv files that get updated constantly and redraw the graph everytime new data arrives. [Github Link](https://github.com/Superf1cial/Smaller-Python-projects/blob/master/Graphic.py) Not sure if that something you are looking for but it sounds like that.
&gt; Sure but since the interface is very similar why not join forces with an established project instead of starting from scratch? I will wait for the specific proposals or better a PR. Contribute!
it isn't slander if its true
Smartphones just look at the nearby access point names, they don't take it further and use signal strength like this does.
I didn't followed Nim in details in the last year. However, in short, Nim is garbage collected, Rust is not. Rust compiled files have *zero* runtime, just like C. Nim compiled binaries have something more (the garbage collector, for instance, but also other things). So , I think, Rust is more suitable for the very low-level stuff where you need zero overhead from the language. But Rust is a bit more mature than Nim. Let's see how Nim will evolve in the future. It will be fun. :)
&gt; There's no reason to name the library something deliberately provocative How is this provocative? It's a catchy name which immediately gives you an idea what it does. Do we have to rename Oracle databases and `fortune` too? 
Yeah, I know that :) But I think there is an error in my algorithm because someone in my class can do the same bruteforce in less time.
Nope, creating a new workbook or a new sheet within an existing one is all I need
Cool, thanks! The accuracy drop is not too low (in a business setting, I'd go for the logistic regression one as it's a lot more white box and also gives me a bit more ease-of-mind that I'd not be overfitting), but it makes sense here to go for the best one. Regarding my first question: What you are doing is training the model to take your device (a laptop, say), sit on couch 1, collect 100 samples, sit on couch 2, collect 100 samples, and so on. If you want to predict where I am, I need to be holding the laptop on couch X (X being where I am), right? There have been studies on trying to predict the location of objects based on fluctuations in signal patterns. I know the answer (I know that this is not what you're trying to do here), but at first I thought you had developed a model to predict my location based on these fluctuations, by using one (or theoretically more but one would be enough) base station. To train, I'd sit in couch 1, and the base station would take 100 samples, I'd sit in couch 2, and the base station would sample again. Based on some features (I wouldn't know how to do this) obtained by inspecting fluctuations, you could then use this to predict where I am. However, it might be that the fluctuations caused by my position is enough the influence the quality strenghts you're getting from base stations, so that you're approach would continue to work even if the laptop (the measurer) stays fixed. Basically, my question boils down to: do I have to hold the laptop? If not, that would be very cool given your high accuracy scores...
Definitely check out Pandas then, and if installation seems like a hassle use the Anaconda distribution of Python.
I'm with you. Just "RandomForest" sounds a lot cooler than logistic regression ;) I still had to read a couple of times what you meant, but I think I get it. You think the laptop is in a fixed spot, and whenever I move around, by the way I obstruct the wifi, the station would know where I am. Actually, that's a very cool idea. I think that if we would have a lot of training data and perhaps 4 laptops/stations producing this data continuously, then it might be possible to understand where I am. Obstructions have a very strong effect. But I guess it would all be very dependent on where the access points are. The stations have to be well placed. I think a phone uniquely representing someone might be the easier way.
Maybe the for loop in get_number() never fires, because s[i+1:] is empty? That way, you don't reach the return statement at all 
I wrote a decorator library that makes it easy to profile and compare functions quickly. It just uses timeit underneath. I've started to increase its scope to do a few other things that I find useful, just so I have them all in one place. The library also has a decorator called timer that does pretty much what your code would do www.github.com/lobocv/pyperform
Oh TIL. Is that a new thing? I don't think Android does that. The wifi location is only accurate to 30m or so.
You should use combinatorial optimization and not brute force to solve such a problem. There is a very good Python library for such an approach, i.e. [Pyomo](http://www.pyomo.org/). Check it out.
Ah, okay. First foray to these boards and to me it looked like an error. I'm not learning Python, actually. Had just come across this bug so thought I'd ask about it. import pygame screen = pygame.display.set_mode((800, 600)) pygame.draw.aaline(screen, (0,0,255), (0,0), (800, 600)) is the minimum code to replicate this on OS X. It will result in a black screen as the blue pixels don't fire. running: import pygame screen = pygame.display.set_mode((800, 600)) pygame.draw.line(screen, (0,0,255), (0,0), (800, 600)) will give you a blue line. running: import pygame screen = pygame.display.set_mode((800, 600)) pygame.draw.aaline(screen, (255,255,255), (0,0), (800, 600)) gives a yellow line (again, no blue but R and G are fine).
That's exactly what I mean, yup. The approach you use sounds like this paper: https://www.researchgate.net/publication/220625904_An_Analysis_of_Wi-Fi_Based_Indoor_Positioning_Accuracy Whereas the alternative is more like this: http://news.mit.edu/2013/new-system-uses-low-power-wi-fi-signal-to-track-moving-humans-0628 Would be cool to try if you say obstruction does have a strong effect...
As a side note, you can make those even answer differently by overloading operator equal and hash with different semantics.
Would be interesting to see how different models perform in different situations (e.g., office with dense wifi coverage vs house with sparse wifi coverage). If I am able to carve out some time perhaps I'll start with logistic or SVM then send you a pull request.
Some people are too sensitive.
It's never so simple IRL. I've had good results with cProfile and kcachegrind.
And some too insensitive.
If someone else can run the same algorithm in a shorter amount of time it's because they have a faster computer. If you are intent on using brute force to solve the problem and want to speed up the process you're going to have to throw money at it. 
Print statements are slow. In a loop, it probably matters. Are you allowed to use [itertools](https://docs.python.org/3.6/library/itertools.html)? Even though you are bruteforcing, you don't need to recompute ones you've already done. If I know (A, B) fits into the bag, I don't need to look at (B, A). The magic words to google are "dynamic programming".
It's true.
I knew cell phones use cell tower signals for localization, but I didn't know they also used wifi signals. Interesting.
I will! Sorry.
It should be obvious that searching a list is stupid and slow though, even if it's not obvious that .keys() gives you a list in py2
Quit with your fucking spam. 
If you save as a CSV it's perfectly reasonable to expect the person on the other end to be able to load that. If they can't, then they have no business in this business in the first place.
&gt; Eh, I'm not even religious, but the name makes me take the library less seriously. Signals that the author isn't really serious about the project and/or is 14 years old. So is be less likely to look into using this. I'm not 14 years old and I concern to the project with the utmost seriousness. The name of the library arouses interest in people and they want to contribute! Do you think that Apache concern to the Apache Pig not serious? Maybe you're think that Muslims developers will not use the Apache Pig? This is just a name and it is not necessary to dwell on it. Examples for fun: [1](https://github.com/edankwan/Jesus.js), [2](https://github.com/mojombo/god), [3](https://github.com/anchor/allah), [4](https://github.com/samshadwell/TrumpScript)
I'm subscribed to his mailing list. I can't speak for the book, but I do know he has some great blog posts that cover some advanced topics in-depth. So I would definitely recommend those.
That's very strange. Could you perhaps do some manual samples and see what happens?
Well, try switching location and take another few times 100 samples. Experiment. I'd be surprised if it wouldn't work. If it doesn't work, feel free to send me the data so I could try to figure out what is wrong.
Btw, I think there came many more access points over the years, so I guess that's very beneficial.
`access_points` needs the command `iwlist`, which is in the package `wireless_tools` on Arch. If you're using Arch, maybe try installing this.
Thanks, that looks promising. I think I will go for the nginx option. Do you know any way I could deploy a Flask app with nginx for free? 
You need a shiny, new, expensive router for the non-wall-penetrating experience. https://en.m.wikipedia.org/w/index.php?title=IEEE_802.11ad&amp;redirect=no
The issue in my mind is people lobbying to get terminology changed. [Django came under fire for changing master/slave to leader/follower a few years ago](https://github.com/django/django/pull/2692) when the terminology doesn't matter in the slightest. Calling a fake data library Church, it's just a name, and if you (not YOU you, the issue submitter and also the more general 'you') then pull out the quotes and the links indicating that other people agree that you're being offensive and here's 'all you have to do' because 'I'm sure you care about being nice and respectful to everyone. Now is your time to shine!', well, it's just immensely condescending and ridiculously authoritarian. You wanted to call it out, I wanted to answer to the github issue but the problem with having a single thread for comments is things get blown way out of proportion like in the Django issue. Nobody wants that. Not advocating for the project by the way, just the whole thing of demanding changes to ease squeamishness, it's not necessary.
https://en.wikipedia.org/wiki/Security_Administrator_Tool_for_Analyzing_Networks Satan says hi.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
GTFO. Gracefully transform unevenly-spaced times series data to evenly-spaced representations. I know what GTFO is, do you? ~~sniggers~~
Understandable. Thanks for the nice reply/explanation/support. I appreciate it. It actually felt like more warmth than I deserved, so good on you. Have a great day. 
/r/learnpython
 I just downloaded Spyder but I don't know how to switch to a dark Theme.. I found something about QDarkStyleSheet, but I don't know how to enable it &gt;.&lt; Could someone help me?
Line 7 indentation error. This code does not compile. Perhaps paste from your editor into a gist? Fix your code and post it to /r/learnpython. 
Yeah, sorry I thought I was in /r/learnpython when I posted. My mistake! Probably wouldn't work anyway since your DB locally would have none of the data that it is trying to pull. I can see the data in the database, and print it all out using a for loop. But my loop that is suppose to keep the variables and add them, only runs twice and breaks.. I cannot figure out why.
TLDW: After a brief introduction to some lesser known built-in types (e.g. defaultdict, Counter), he shows how to use these types for typical data processing tasks.
Well you have `for data in get_results[y][4]:` Which is row zero, index 4, which is the string '50'. So you've actually got: `for x in "50"` which will loop over the characters in the string, giving you '5' and '0' and running twice. Which is why you get 2 iterations. Naming your variables meaningful things instead of single letters will prevent this class of bug. When your code isn't formatted it's hard to see the logic, because I can't tell, from broken indentation, where your loops are.
Yeah, Gracefully Transform For Other [libraries], right? ~~snickers~~ The idea is that you're not trapped in traces, you can get your data the fuck out and get on with doing things with it in Pandas or other places if that's your end goal.
Too 70:s for my taste. Don't get me wrong, this is way better than bash and zsh, but I'd like to see a 21:t century shell.
1) /r/learnpython for python questions 2) You're asking about networking, service &amp; OS configuration, not Python 
I've never heard of arangodb but I'm surprised it's not written in go
my textbook tells me to do it like `str2 = str1[:]`, so that's how I did it.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Both added to my 'research' list Thanks
Is Python a good language to learn Deep Learning mechanics and theory? Is there a language better suited to the task? And, that's a big list of courses. Has anyone taken any of them and can anyone give some anecdotal remarks? Thanks. This is an area of moderate interest to me!
Would be interesting to look for this pattern in open source software...
If I'm not mistaken python has immutable strings, so it could safely assign str2 to the same reference as str1, rather than make a copy. Confirmed: str1 = 'string1' str2 = str1 id(str1) =&gt; 4367994048 id(str2) =&gt; 4367994048 so both str1 and str2 refer to the same object in this python snippet.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
ah, yeah, whoops. For strings, shallow copies are just fine.
Ah, I would have needed `id` to test indeed! Though it is pretty difficult to get an issue from this. (we can't str2[0] = 'a')
Agreed, but it's a fundamentals thing, which I would expect a textbook to be concerned about.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I do have home-brew and ran the command that you specified. **==&gt; Summary** **🍺 /usr/local/Cellar/tcl-tk/8.6.6: 2,846 files, 29.2M** Tk.Version still shows as **8.5** in the Pyton interpreter (IDLE) **Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 26 2016, 10:47:25)** **[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin** **Type "help", "copyright", "credits" or "license" for more information.** **&gt;&gt;&gt; import tinter** **&gt;&gt;&gt; tkinter.TkVersion** **8.5** 
What are you confirming? This should always be true, no matter what the type of str1 is. The important thing about strings is that because they are immutable, str2 = str1[:] is equivalent to str2 = str1 and also to str2 = copy.copy(str1). When working with mutable lists, you need to be more careful of course.
It's getting to the point where there are more command line parsers than command line scripts. (But it looks very nice).
Argh appears to have the same usage and functionality. 
Awesome! I was looking for pretty much this exact functionality recently. Will definitely be using it very soon!
&gt; they have no business in this business in the first place. If only that actually removed them from the industry. I routinely deal with a guy that drops random garbage data on me because the files are too big to open in Notepad to see if they are right. Instead he happily sends them along and waits for feedback. Fucking INFURIATING.
I believe your statement, while pragmatically correct, to be false. It is possible to directly poll for (clusters of) key state. E.g. http://stackoverflow.com/questions/3649874/how-to-get-keyboard-state-in-linux - But OP probably shouldn't do this.
Hmm. My first reaction was to ask why pandas with a DatetimeIndex was insufficient, but it's not just unevenly spaced data - it's data which is constant until a contrary observation. So collapsing makes sense, and indexing to a non-observed time can implicitly forward-fill the last value. I'd love to see this integrated with Pandas, actually... maybe something scary with a PeriodIndex would work?
creat [keylogger](https://www.microkeylogger.com)
At work and don't have the time to watch, but will definitely check it out when I get home. Some details? What game? What libraries are you using etc? 
Is the name `church` inspired by this? https://github.com/github/scientist
Is this useful for timeseries that should be interpreted using interpolation rather than staircase? E.g. motion-capture data.
Right here: https://github.com/rkern/line_profiler
It's exactly equivalent to doing `str1 = str2` though 
"Explicit is better than implicit" so I would use looping.
Oh. I actually though I was posting there. My bad. 
No asyncio?
I'm looking for a course witch would help me predict time series. I have monitoring data for 3000 hosts with a wide range of different api's used. I want to start predicting cpu usage or network throughput.
thank you. my google searching on this didn't turn up that bitbucket page. I got a lot of references to and back to a Stackoverflow page, which didn't help. sorry about leaving the flip() out of the minimum code.
He's kind of a god in the Python community, along with Raymond Hettinger. All of his videos are amazing
I thought the reason OP posted was to see if any Redditor would own up to referencing this sub in their problem set. No?
thanks, just tried it out. although i'm not a true "computer scientist" and I only program for fun, i feel much more at home with idle. i can see myself possibly using rodeo next semester for my project but for most of the quick code and delete kind of stuff, i think i'll still be using idle (because it is lightweight and usually reliably fast) {i'm a engineering student}. nonetheless, thanks again.
How does this compare to rapydscript?
I would think slapping str() around your pass to decode() would make it into a string..? &gt;&gt;&gt; print(str(binascii.hexlify(b'a').decode())) 61
This is Python 3
Less brown. And the page has HUGE font size and doesn't respect when I try to shrink it down in the browser.
You can put metadata in the package saying which versions it supports, and it shows in pypi.mot.com. Nowadays most of the times I'm installing a new package is for work, so I already have to carefully consider a lot of things, like which language versions it supports (we use python 2) and how easily it can be installed in windows and linux (we support both).
I always use pip3 to ensure it works with Python 3. It's actually the only pip that I use. Seeing that pip sometimes runs pip for Python 2, I prefer not to take the risk.
The binascii module is optimised towards people doing low-level stuff where you're usually dealing with bytestrings everywhere. The proper way to convert the output to a string is like this: &gt;&gt;&gt; binascii.hexlify(b'a').decode('ascii') '61' It's extremely likely that your system's default encoding is ascii compatible so it won't matter in most cases, but explicit is better than implicit.
I agree with all the points - I was being a bit flippant - see the wink emoticon at the end of my post.
The easiest way is to calculate the mean and plot it separately.
if you need hexlify exclusively for high-level stuff, i suggest the following: import binascii hexlify = lambda binary: binascii.hexlify(binary).decode('ascii') (or, depending on your stylistic preferences, an equivalent def) to give you a hexlify for non-bit-shovers; i'm unaware of any standard-library equivalent.
I try to only `pip install` inside a virtual environment. By default I work with Python 3 so then it's safe to `pip install &lt;something&gt;` all the time. Only if that fails then I downgrade my Python version, which is sad... 
cool tool. I haven't had a strong need for that level of granularity, but I'll keep it in mind for future reference.
Remember to set PIP_REQUIRE_VIRTUALENV=true in your .zshrc
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Your transpiler is fantastic! Being able to use Python instead of JavaScript brings me a tear of joy. Will it be updated for future python versions? (I like f-strings and numeric separators from 3.6)
Needs an online test page where we can experiment to see if it supports a feature we want. Like does it support iterators, dicts, and the functools/itertools/collections modules?
Yep, here's a StackOverflow question demonstrating that by traces originator /u/mstringer: http://stackoverflow.com/questions/25234941/python-regularise-irregular-time-series-with-linear-interpolation/39730384#39730384
/r/learnpython
Thank you :)
check out scikit learn. arima or svr models 
Yes, keeping it up to date is the idea.
I've basically written this exact library before (on the job so proprietary unfortunately). I do a lot of scientific programming so I deal with all sorts of goofy data sets.
You can also try out things at: http://www.transcrypt.org/live/turtle_site/turtle_site.html since it has a console.
**TL;DR** CPython has a global interpreter lock (GIL), so don't expect a speedup on compute heavy tasks.
Wes is working on the 2nd edition right now
pin
[not technically](http://i.imgur.com/eKMic8e.png)
I think you should try to put up something like brython has. https://www.brython.info/tests/editor.html?lang=en
CPython: &gt;&gt;&gt; a = "Hello" &gt;&gt;&gt; b = a[:] &gt;&gt;&gt; a is b True So that shows they are the same object, and not a copy. The 'is' operator checks for identity. &gt;&gt;&gt; a=[1, 2, 3] &gt;&gt;&gt; b=a[:] &gt;&gt;&gt; b [1, 2, 3] &gt;&gt;&gt; b is a False Here b is a different object. So we can see that [:] does NOT copy strings. It just makes a new var pointing to the same string. However, it does copy a list. On CPython the id() function will give the memory address of an object. You will then also see that no copying has taken place. You may want to read the other comments on this post, as they explain why [:] does not actually copy a string (on CPython).
It's on my list of things to do today, I'm going to be doing some work with Selenium and webdriver, so I'll see how that goes. Though, going through some pages on the Wiki, I was able to find this: http://wiki.barix.com/index.php5?title=Channel_Selection I'll have to test it, but I think there may be ways to alter channel selection by using the Common Gateway Interface(CGI); didn't even know this existed. 
May I ask a stupid question? What slides tool he used? 
Yes, probably, you also can see the JavaScript there. By the way, Transcrypt is precompiled to keep it fast and small, so try-out compilation like that should happen on the server. 
Since the first or second generation of iPhone, I think. Though I don't think Apple was first to use it. Wifi signals vary widely as you move around, so it won't be very accurate, unless you are doing detailed mapping like OP is. But it gets you in the ballpark, which is helpful for finding local businesses , or to jumpstart the calculations for GPS, such as predicting which satellites should be visible. Edit: iOS 1.1.3 to 3.1 used Google and Skyhook services, but took it in house in 2010. https://techcrunch.com/2010/07/29/apple-location/
Wow!!! I found the project https://bitbucket.org/zzzeek/sliderepl which written by Michael Bayer. Maybe I can learn from it. Thanks!!
Isn't it great! I discovered it earlier this year and love it. I'm the only one in my research group that uses it. And my data analysis takes a lot less time!
I was working on this one thing where we had all these crazy pivot tables in excel... It was &lt; 100 lines of pandas code to do the same thing faster and better 
From the first paragraph of the documentation: &gt; The [`binascii`](https://docs.python.org/3/library/binascii.html) module contains low-level functions written in C for greater speed that are used by the higher-level modules. For "low-level" stuff, i.e. binary manipulations, it's better to let a higher-level user (e.g. the `base64`, `uu`, and other modules) encode it if they so need. Otherwise it's a waste of time/space.
Since the uroboros is already taken, twist the snake to make a infinity
Bokeh's out of date docs and lack of support are killing me.
&gt; export any object to JSON ...but good luck getting that object back! HAHAHA! Seriously, what is the use case of this?
It's a good case. I always wish it was easier for my data to turn into JSON.
Nice! You should probably also implement a to_json function that could, by lack of objects inheriting of JsonMixin, could still be applied the same logic to in order to get them serializable.
I think it should convert python's None to the json null. 
you may want to actually provide information.
Serializing custom objects to JSON is best done with a modicum of sense, rather than blindly shoving every single attribute through the grinder. If you can't reconstitute the object, it seems pointless, and if you want to serialize arbitrary Python objects, there's already `pickle`.
That works, sure, but when I do stuff like that I feel like I'm fighting the standard library, rather than working with it.
This work?: def hexstring(s): s = s.decode('utf-8') s = binascii.b2a_hex(s) return s.encode('utf-8')
I bought mine back in 2013 (2nd Release) and it's a great resource for Python 2.7. Hopefully a new version comes out soon as it's difficult for a beginner to actively translate from Python 2.7 to 3.x
I don't have useful commentary to add, but I want you to know that someone used it, at least, so thanks for the link.
Functional Programming in Python (2015) Table of contents: **(Avoiding) Flow Control 1** Encapsulation 1 Comprehensions 2 Recursion 5 Eliminating Loops 7 **Callables 11** Named Functions and Lambdas 12 Closures and Callable Instances 13 Methods of Classes 15 Multiple Dispatch 19 **Lazy Evaluation 25** The Iterator Protocol 27 Module: itertools 29 **Higher-Order Functions 33** Utility Higher-Order Functions 35 The operator Module 36 The functools Module 36 Decorators 37 49 pages total
I'm confused. Are you a bot?
How does it work? What else can be an iterable? How does it go through all the keys of the dictionary without a list?
I am not interested in reconstituting the object, would that be case, I would not use JSON indeed, but pickle or one of its variants. When building the JSON, only "real" attributes are considered, methods, descriptors, properties, class attributes etc.. are skipped. In my case, it usually gives me what I want, otherwise I can still write a custom code to export a specific object differently.
The to_json function exists [here](https://github.com/alexprengere/jsonmixin/blob/master/jsonmixin.py#L81). The mixin is just a wrapper around it.
Also: Did you bother trying to google "python fibonacci"? There are a ton of examples online...
Looks handy, thanks! Is there a library like this for working with point processes?
Does anyone actually use this for any projects? Can you really get away with creating an entire front end without dirtying your hands with js? I'm very interested 
Nope. PDF, MOBI, and EPUB
great idea!
Thanks, I'll check them out :)
Did you notice he was running his presentation in a custom interpreter?
site seems to be down. anyone have a mirror?
Thanks! 
No problem. If you need any specific resources just let me know, I've been saving a lot of bookmarks so I might be able to dig something up.
Direct Download Links: * [ePub](http://www.oreilly.com/programming/free/files/functional-programming-python.epub) * [Mobi](http://www.oreilly.com/programming/free/files/functional-programming-python.mobi) * [PDF](http://www.oreilly.com/programming/free/files/functional-programming-python.pdf)
I'm excited to check out this book when I've got a chance! That said, here's a related SO post about ["Why isn't Python very good for functional programming?"](http://stackoverflow.com/a/1017937/3377150)
It should be available in April 2017. However, O'reilly some times will release book pre-prints digitally, and then you get the final version when fully edited.
[seaborn](https://stanford.edu/~mwaskom/software/seaborn/) is a favorite for the types of visualizations you're describing
you guys keep saying CI, what is CI?
Maybe don't post on public forums if you don't want the boss to find out.
I’m not sure what sucks more, networking or interviewing. Networking is a slow and painful death. Interviewing is quick and painful. 
Are you in/near Chicago?
Pyglet or pygame?
Invite only but i got one right after i made the request (think it’s automated). I first heard about them at a General Assembly talk my girlfriend forced me to go. 
[Cocos2d](http://python.cocos2d.org/) is nice (it uses Pyglet internally), but Cocos2d-x (the C++ variant) seems to be a lot more refined. [Kivy](https://kivy.org/) + KivEnt look promising, but I couldn't manage to install KivEnt. Pygame is rather outdated, however, you can still do nice things with it and it has probably one of the biggest communities which is very important when you need help. Personally, I've switched to the [Godot](https://godotengine.org/) engine which has a scripting language that is similar to Python (with differences) and is a lot more advanced than everything you can find for Python.
&gt; Is threatening the right way to manage them? Or it's better to write 3 apps? Threatening is not the right way to solve problems but in this case using threads is fine.
Poachable does something similar. I signed up, wasn’t half bad compared to sending resumes.
So your get a well-formatted serialized representation of your thing with a poorly (randomly?) defined schema. If you are going to export your data to other things, you should probably take the time to mildly spec out what goes where and intentionally include things.
Trolling is the ultimate lack of balls.
Sorry for late answer. It seems the OCC project has little to no comprehensible documentation, but after I sorted it out it turned out perfect for my purpose. Thanks!
Thanks for this. Their email form is broken and does not accept '+' symbols.
For exploring discrete variables, my most common functions are two cython functions I wrote to measure values frequency and herfindahl index.
noice, any big projects using this technique!
According to this page with available python to js transpilers, there is no serious production ready contender to transcrypt: https://github.com/jashkenas/coffeescript/wiki/list-of-languages-that-compile-to-js#python
Then it must have been a misunderstanding on my part. I thought anaconda "replaced" (not literally) the system version of python, so that you would natively be given access to the conda toolset. I thought it did this through virt envs, but I must have been wrong
[Write-up](http://blog.chewxy.com/2016/09/30/how-to-make-money/) [Slides](https://speakerdeck.com/chewxy/how-to-make-money-how-money-is-created-in-the-economy) (this was a talk I gave at Sydney Python)
But you can release the GIL with a C/C++ extension OR with numba.
Hmm but some of the fundamentals aren't quite right. Like tail recursion — that's a pretty big deal for FP, and Python is bad at it by design. Don't get me wrong; I love Python! It's my preferred language, in fact. But because it wasn't built to be functional from the beginning, it will likely never be able to be used as a "good" functional language.
while you're at it,[ heres the link to all free programming ebook by o'reilly](http://www.oreilly.com/programming/free/)
I'm going to need a computer... **edit:** After finding a computer, I [extracted all the direct links.](https://www.reddit.com/r/learnprogramming/comments/556kxj/oreilly_offering_programming_ebooks_for_free/)
I'm there often but not full time. Not looking for a job in that area. 
I registered. Seems good enough to try. We'll see if they deliver. 
Sure, right, I know there's no "correct" definition of what constitutes FP. But if you ask any functional programmer for a list of techniques in their everyday toolbar, I can about guarantee that recursion will be in there. Maybe TCO isn't handled by default in some of them, but Haskell certainly doesn't have a max recursion depth of 1000 (pretty sure that's Python's... on mobile now or I'd double-check). And yeah, I've used that decorator setup before. It's definitely neat, and the fact that things like that are so easy to accomplish is part of why I love Python! But it's fundamentally "unpythonic" — Guido would hate it! To me what makes Python "bad" for functional is that if you were to deliberately write a whole program in functional style, Python would not go out of its way to help you. But I think that's *fine* — because writing purely functional code would be completely unpythonic! So I think the language is perfectly capable of writing some bits in a functional way, but it's [sort of like emulating classes in C with structs](http://stackoverflow.com/a/524060/3377150): possible, but maybe a little painful. (Before this goes any further, I just want to explicitly state that I respect your opinion and I'm not trying to argue; I'm just having a discussion because I enjoy talking about these things!)
didn't read your code but the result of something was none and you didn't check. just assumed it would be some type of object and called a method of that object. but the result is none and doesn't have that method (or attribute) 
Wait, WHAT? I had no idea! I've had an account like that for years. 
Test with bs4, mechanize and selenium or scrapy. 
I routinely use astropy (primarily to read/write FITS files since they absorbed pyfits). That being said, this is probably the most absurd thing I've read in a while. I get that the author is passionate about astropy, but people don't customarily get "recognition" or "paychecks" for contributing to community projects (including ones vastly more important, impactful, and sizable than astropy). Quick, aside from Guido, name one other python core developer. Aside from Linus, name one Linux core developer. Aside from Stallman, name one GCC developer. Btw. Have you seen Stallman's newest superyacht!? It's just the nature of community-contributed open source projects. You contribute because you see value (to yourself and/or your employer) in maintaining the product for your own use, not because of some overt recognition/profit motive. The proposed remedies are also ridiculous. Encouraging code and time contributions from personally vested parties is one thing... but guilting people into paying a professional / institutional fee for using the software? Shaking down the science funding agencies to explicitly dedicate astropy developer FTE's? Give me a break. That's not how any of this works... and where does it end. Astropy is only the teeny tiny tip of a huge jenga tower of community contribution needed for modern scientific computing in astronomy. Is every science project now also obligated to cut a check (or budget dedicated developer FTE's) to python, scipy, numpy, matplotlib, vim, FFTW, openblas/ATLAS, NASA for CFITSIO, Torvalds for Linux, Stallman for GCC, FSF for glibc, etc. etc. etc. If you are an astronomer, you should be contributing code / expertise / time to astropy because your work, research, life passion, (and paycheck!) ultimately depend on its continued functionality. Also because someone is ALREADY paying you to do astronomy, build a telescope, write a data reduction pipeline, etc. Astropy is merely a convenient means to doing YOUR EXISTING JOB and achieving that end. If it is missing an enabling feature for your research application, it's on you and your project to figure out how to make it happen (i.e. contrary to the author's implication, NASA is absolutely 100% correct in limiting development scope to actual explicit flight project requirements... I know for a fact, that astropy already does everything that HST, JWST, and WFIRST engineering can conceivably need) Writing a paper bemoaning a lack of praise, FTE's, and money, in an attempt to get a bunch of your buddies together to collectively shake down academic institutions and tax payers (i.e. science funding agencies) to budget for your general-purpose software pet project development is frankly disgraceful, IMHO!
Several emails were sent to me from people seriously using it, some say 2500+ lines of code, some say 650k of sourcecode, and they were all enthusiastic. Unfortunately these were intranet sites that cannot be publicly linked to. There's also a reaction on stackoverflow from someone using it extensively, sharing his experience. But right now the biggest hurdle is to get more people to try it. There's no big company behind this, so a manager may find it a risky choice. But its open source and it won't go away. The best thing to happen right now is someone using it on a high-profile site. While it's technically sound this is a chicken and egg type problem. I am hoping very much that people will submit links to their work, so it will become evident what the possibilities are. As initiator of the project I can assure you: you can do anything with it that you can do with JS, with roughly equal speed and size. The main thing is that some JS developers are used to little fragments of code all over the page, whereas Transcrypt uses the concept of one (precompiled, stateful) application per page, with as many entrypoints as needed. I expect that it will especially be useful for complicated pages, that behave more like a computer program than like a magazine. I really invite you to give it a serious try and let me know what your experiences are. Its always a bit difficult to advocate a case where you're so deeply involved in but I dare say you won't be disappointed. 
Maybe I'm missing the point but it seems like just using a tuple for the value or even a dict would do this
Clojure has a fancy go to/continue, not TCO
I was wondering, why do you continue to use spaces between name and parentheses in function declarations and calls, when it is a practice discouraged both in Python and JavaScript? Several people have pointed this out and you continue to do it both in Transcrypt source and in the generated JavaScript.
How is this python-related?
Why do you need a class for that? foo = {'key1': ('val1', 'val2'), 'key2': ('val1', 'val2')} If you need to be able to mutate the values, you can use a list instead of a tuple. 
Store tuples. Also /r/learnpython
You do that by setting the socket to non-blocking. Operations that would block instead return immediately with an error (which is translated into an exception.) But you really shouldn't be doing it like that. Instead of trying to call `sock.recv()` and getting EWOULDBLOCK, you should be using something like `select()` which will notify you when the socket becomes readable. 
Maybe pyro? http://pythonhosted.org/Pyro4/intro.html#performance
You'll get a lot more help at /r/learnpython. 
You'll get better advice at /r/learnpython. I suggest starting with their sidebar. 
Not sure I understand the question. Anyway, currently I'm more interested in improving debugging functionality.
Thanks for this. I appreciate the time you took to write it up! My dicts are usually not big enough to make a difference. But I like to learn these things!
Ahah I saw what I wrote. This stupid keyboard on my phone. OMG, it's so funny what I wrote.. 
you're my hero
Thanks for this!
What advantages does this have over requires.io?
awsome thanks for sharing! 49 pages are read within 1-2 hours in the train lol
Also didn't know you could evaluate expressions while indexing. In [14]: s = 'this is a string' In [15]: s[:len(s)//2] Out[15]: 'this is ' EDIT: also pretty sure he mentions your example is an addition to 3.5
The root of the repo is here: https://github.com/sminez/Concepts I'm planning on adding more functional concepts and tools as I get them working. Suggestions are welcome!
Wouldn't mypy break if I start using JS from Transcrypt?
Hi, Transcrypt is offspin of a mixed C++ / Python / JS project with shared code formatting standards. This is an ongoing commercial project that has been running for multiple years, with multiple developers involved. While it was decided that Transcrypt was released into the public domain, it has to keep on par with the rest of the project. However if you contribute libraries or examples to it, they will be left as-is. So it's only the core that follows these mixed standards. Also, for facilities that are visible to the developer USING Transcrypt, like \_\_envir\_\_.executor\_name and \_\_envir\_\_.transpiler\_name, PEP is followed. If you contribute any examples, you're encouraged to follow PEP as well, but feel free to use any coding standard you're familiar with. 
And what about pyrsistent? I believe toolz and pyrsistent are quite fundamental for FP in Python :) I thought both of them were included in your book. Maybe I would add attrs https://attrs.readthedocs.io/en/stable/ Even it is not quite FP but can help o reduce codebase significantly. BTW, your book is great, thank you.
Depends on how you use it. Typechecking will especially pay off at stable, well defined module boundaries that are often also the boundaries between cooperating groups of developers, preventing a lot of confusion and nasty bugs. If you want to use typechecking pervasively, thereby largely bypassing the dynamic typing facilities of Python, the best thing to do is to encapsulate 3rd party JS libaries in a statically typed Python API. In this way you also avoid having to use the unpythonic \_\_new\_\_ to create objects. Another thing, currently also used to satisfy the linter, is to use the \_\_skip\_\_ pragma to insert type definitions for things coming from 'outside' the Python sphere. Perhaps at some point, when TypeScript becomes so popular that most JS libraries come with type info, a type info conversion tool will be added. But the low hanging fruit are the facade's / API's of your Python modules. I've programmed in C++ for many years and I must say I was pleasantly surprised by the impact that even a limited introduction of static typing had on the number of errors caught before the first run. 
Where the hell is the actual link(s), in general terms? From the link below I select a book, and just end up at its review page again. I received a "report" email, but that is where I got the list link from in the first place. What am I overlooking? http://www.oreilly.com/programming/free/?imm_mid=0e20a9&amp;cmp=em-prog-na-na-afterp_triggered_email_programming_resources I don't want a link: I want to understand how to use their website.
This is the right answer. Do all your calculations inside excel with python, no file conversions necessary. https://www.xlwings.org/
In addition to seaborn, [this talk](https://www.youtube.com/watch?v=MKucn8NtVeI) really helped me understand matplotlib much better; useful in the cases where seaborn's structure isn't as flexible as you'd like.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [How-to: find a developer job without your boss finding out](https://np.reddit.com/r/programming/comments/557p6w/howto_find_a_developer_job_without_your_boss/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Move your code in setUp to a new function, move the decorator to your test function, and call the new function as the first line of your test function.
Be weary of recruiters as some of them are kinda scummy and don't necessarily have you or your potential employer's well-being as their priority. Never put your contact information public as they keep calling and emailing you forever once you're in their database. If you need to keep secrecy then definitely be extra weary as they might start calling companies for you, and in this small world you current employer could hear from that.
&gt;Networking is a slow and painful death. Interviewing is quick and painful I genuinely enjoy both. I'm currently very happy where I work at, but I did enjoy the process of finding new jobs.
Then if you use this higher-level interface, you can swap between in-process communication, inter-process comm, TCP, or whatever else.
It can be.
Stop messing about and just copy and paste the entire traceback so we can see it. Line number or no line number, the traceback will almost certainly point you at the right direction to debug this problem. And you should run your script directly from the OS X terminal, just in case this is some side-effect of PyCharm. Open a terminal, and enter `python2.7 path/to/my/script.py`. Does it give you the same traceback lacking line numbers? Okay, then the issue isn't PyCharm. 
That's fine, but you should try it outside of PyCharm altogether, just in case this is a side-effect of the PyCharm environment. Open a terminal (not the PyCharm built-in terminal, but an independent OS X terminal) and run `python2.7 path/to/my/script.py`. As always, copy and paste the ENTIRE traceback, not just the last line. Even if the line numbers are missing, there is likely information you can use to debug this.
Right, that's true but i'm just trying to create various classes so I can learn more about them so I guess the point is to gain a better understanding of magic methods.
Not sure where you are, in the UK I just search Job Serve.
This needs to be higher up
It contains a pointer to the dictionary. It doesn't contain a list.
At this stage, the libraries argument is largely null and void. If a library you like doesn't support Python 3, there will be 5 others of similar quality that will, for the most part.
If your startup is on the verge of folding, they aren't going to fire you. They can't afford to go through the hiring process at crunch time. This is one situation where you don't really need to worry about your boss finding out.
Interviewing is only for getting a job. Networking is useful for other things.
Trolls gonna troll. But I am forced to agree with the sentiment. If the company is folding, it's likely everyone is "secretely" looking for another job, including your boss, I would assume. Why worry about being thrown off a sinking ship?
Is Guido still anti-Functional programming? I remember hearing he was.
&gt; Be weary of recruiters as some of them are kinda scummy and don't necessarily have you or your potential employer's well-being as their priority. This is why you cultivate relationships. Yes, there are a lot of bad "recruiters," but there are also a number of good ones. Find the good ones, and when you do, keep them active in your network. Don't just treat them as a disposable commodity. I have probably at least a dozen good recruiters in my area that I'm on good terms with. Some of them have even become actual friends over the course of things. We keep in touch, go for coffee/lunch/drinks. They talk to me about roles they need to fill that I might know someone for and they also keep me in mind if they find out that I'm getting tired of where I currently am.
happy to hear so... for docs, best to refer to the [OCC doxygen docs](https://www.opencascade.com/doc/occt-6.9.0/refman/html/class_v3d___view.html), also check the [introduction to this lib](https://www.opencascade.com/doc/occt-6.8.0/overview/html/technical_overview.html) and see the [many examples in pythonocc](https://github.com/tpaviot/pythonocc-core/tree/master/examples)
Not quite. You missed a tone of "don't take it for granted", and "share".
This is really freaking interesting. Good job! It is not immediately obvious how and why banks and lending play such a pivotal role in the economy. For instance, when the housing crisis happened and everyone stopped lending money. All the leaders freaked out but it isn't obvious why. This simulation speaks to it. I wish you had more writeup around it and what other insights can be derived from this simple simulation.
&gt; Networking is a slow and painful death. What? People put _way_ too much thought into "networking", like it's some sort of drawn-out process. Networking isn't something you _do_ like interviews or performance reviews, it's something that _happens_ during the course of your career. Here, it's easy: 1. Meet a person. Any person. It doesn't matter who they are as long as they're remotely relevant to your chosen field. If you're doing a job and getting paid for it, this will naturally happen without you having to devote effort to it. 2. Have a brief conversation. About anything. It literally doesn't matter what you talk about, you just have to leave a positive impression. 3. Shift the conversation to be relevant to your respective careers. The other person should now have a good idea what it is you do for a living, and vice versa. Ask questions. People _fucking love_ talking about themselves. 4. Thanks, have a nice day, take care, bye. Exchange contact information if it tickles your fancy. You don't even have to do this, LinkedIn will make it easy for you later. That's it. All there is to it. Just talk to people. Networking isn't about establishing life-long relationships, it's leaving _just enough_ of an impression with another person that you can make contact in a year or two or five and they'll feel positive about having an extended conversation.
pedantic nitpick, you wrote a simple simulation of AN economy. Not THE economy. I was actually hoping to see something telling about the nature of debt and Gross domestic exports, for example. Something that is much very part of "the" economy.
OP is a Python dev looking for a new gig. Don't be a dick.
The hilarious thing is that there's a fib function in the subreddit sidebar to demonstrate code formatting.
As the other reponder says... you're wrong. "Events" are nothing but calls to functions when specific things have been found to have happened, like finding that there are keys in the keyboard buffer. And these things are found in a loop, through polling the message queue or, if possible, the hardware itself. (ignoring interupts, ofc) Don't confuse events with interrupts. It's perfectly okay to poll for keys in the main loop (just not every loop, that's a waste), because in the end this is exactly what happens in an event driven system.
Use affinity to restrict it to one single core to help avoid cache trashing. Does wonders for what I do. Also, as your cpu has two cores, use multiprocessing ... again, use affinity to lock processes to specific cpus. It's on pypi. 
Unfortunately not always. Splunk client lib is an annoying example I recently got bit by. How can they not fix this being a Python shop? Why are they using unittest2 for tests? But the fact remains. 
That's what I did! Probably the easiest solution.
I get what you're going after, but you're totally going about it the wrong way. This shouldn't be a diatribe. This should be a chat with your research advisor about how you need more time to work on software. /u/donkeysalami hits the nail on the head: you're already being paid to work / research, so just carve out time to work on software &amp; contribute that back to the community. If, and only if, you're getting push-back from your advisor, do you gather feedback from the development community. And whatever it is you write should be a bit more of a sales pitch "here is what you get for your contribution" instead of what you have here. There's little difference between contributing software back to the community, and contributing science back to the community. In both cases, you need to carefully craft the information you release. In both cases, others are going to benefit from your work. And in both cases, those benefits may flow back to you / your project. Should be easy to sell. &gt; most scientists have no background in software engineering. But scientists have a background in learning highly technical skills, and they're within a network of highly trained individuals. There's no excuse here. &gt; Asking them to pick up an entirely new skill-set... is totally unreasonable This comes off as entirely pretentious. If you can't take the time to figure out how to do your research, or you don't want to take the time to share with your research community, why bother becoming a researcher? &gt; especially when there are no incentives for doing so. There are. You're just being selfish and/or expecting immediate gratification.
My professor is a C lover because of optimization, in the course I'm taking we are gonna have an introduction to c and python. yesterday I was talking with him and he told me that I could make a machine learning algorythm called K-means and that he wouldn't care about the time it would take processing as long as I implemented that algorythm. So I'm going to try that and then take a look at what you said, thanks!
Why would you ask this hereeee
Yes
Cool! I would also like `*?+` like in the regex sense when using `&gt;&gt;` :) Would that make sense? Also thought you might appreciate this in a strange way: https://github.com/kootenpv/cant
Don't post it on reddit for starters...
&gt; Can I land a job with Python as my only language? Yes. &gt; How long will it take me to be decently employable if I study for 2-3 hours daily? 274 days.
You misunderstood. I was saying when comparing engineering libraries, they tend to support Python 2 better than Python 3 (we're not software developers afterall, we use math to solve problems, so things like packaging and unicode support is not as robust). Since we're in such a niche market, there rarely is an alternative library if at all. I run a 80k lined project (it was 200k+ 3 years ago) and didn't support Python 3 at all until 1 years ago. It's the only library of it's kind. I test on Python 3 and it works, but as I'm better at Python 2 and mainly run Python 2, the library is better at Python 2. I want to use Python 3 and not support a 10 year old version that's easier to introduce bugs into, but it's the market and it's honestly easier.
If you're doing open source work you can always check to see if there are people interested in helping to port the codebase to py3. As a fellow scientist first, software developer second - I know the feeling. 
I've done it within terminal an doesn't return the error, but it doesn't run the script either. I also tried using nosetests to run the script and that command throws the error in terminal. I've added the screenshot of the error from PyCharm [here](http://imgur.com/jaJwnBL). Thanks again for the help!
 Only some of them?
Thanks! Can't looks really interesting :) I showed the pattern matching to my boss today and he was making some similar suggestions, in particular he wanted to be able to have a variable match and arbitrary collection type. I'm already using * in the python *args sense so I'd need to find an alternative for that...any ideas? I'd like to keep the template syntax as small as possible: if your templates get too complicated then this probably isn't the best tool to use anyway! ;)
 Make sure your car|heating|air con|pumping|power|home internet connection is particularly problematic and requires multiple engineer call outs to repair.
&gt; nonlocal I like that (most of the time), but whatever &gt; sensible semantics for list comprehensions I know both and I've never noticed a difference. &gt; more sensible strings without the "narrow/wide" build distinction the what? &gt; @ operator neat, but it's not a big deal &gt; richer standard library by default That's kinda vague. If you're talking statistics, I use numpy, so I don't really care. All my code uses numpy, so whatever. Speaking of which, I'm honestly surprised there isn't a built in plotting module. &gt; fast Decimal implementation I didn't realize there was a change. Not that I've ever used Decimal... &gt; hash randomization Meh &gt; f-strings meh &gt; kwargs that remember the order of keys &gt; faster, more compact dicts Those are Python 3.6 features. Pretty sure you're not using Python 3.6. Also, there is a cost to upgrading every time you switch versions. Python 2.7 removed the evaluation of `1.23456D+07`, which affected me. Shoot, even upgrading from Python 2.7.7 to 2.7.8 broke things in code I've written because they decided to change some subtle things. It's typically quick, but there are large libraries and little incentive at the moment. &gt; a future beyond 2020 Python 2.6, 3.3, and 3.4 are still supported by many projects. Shoot, I occasionally go back to Python 2.3 and do some work and backport some more modern libraries (e.g. pandas). There is a future for many outdated versions of code. Until the package developers stop supporting those versions, there is very little incentive to upgrade.
Instead of trying to make Firefox headless, have you considered using PhantomJS (a true headless browser) with Selenium? Code stays the same, just have to call webdriver.PhantomJS and point it at the PhantomJS executable. 
What happened?
Just a heads up, the model_selection module is now grouping together the functionalities of sklearn.cross_validation, sklearn.grid_search and sklearn.learning_curve
I saw someone post this code on the internet, it works but I couldn't figure out why. The ,2) part seems to make it all work but I don't know why. I need to make a flow chart after I make the code so if I used it I wouldn't know what to write.
It works because you are telling it that the number you are entering is base 2. You can do the same with other bases as well: https://docs.python.org/3/library/functions.html#int 
What do you use Python for? Just curious - am somewhat new to R, still trying to figure out what I need Python for (I don't do a lot with networking and I'm not building web apps). Cleaning with tidyr/dplyr, viz with ggplot2 (and by extension interactive Plotly graphs with one line of code) and then caret/rpart for modeling/machine learning. Speaking of you've got to give dplyr a go - using the pipe operator and chaining commands together make your code infinitely more readable when you inevitably have to go back and decipher your own code in 6 months for one reason or another.
Nice repo! I'm looking to learn more data wrangling with R. You are more than welcome to check out my pandas [cheatsheet](http://nbviewer.jupyter.org/github/pybokeh/jupyter_notebooks/blob/master/pandas/PandasCheatSheet.ipynb). Might also want to check out Chris Albon's site too.
Sweet, thanks. Just curious, how is pyglet on performance?
Just what I was looking for :)
I think this guys blog post will be useful to you http://ozzieliu.com/2016/06/21/scraping-ticket-data-with-stubhub-api/ I really don't think you would want to scrape using selenium or whatever. E: you might not be able to do exactly what you want as they made it difficult to stop scalping but I think you can probably find events and scrape those specifically.
One day, I swear... one day when computers get powerful enough. There is no way I believe to simulate a micro-grounded simulation that includes foreign trade without slowing down a 2013 macbook to a crawl and ipython notebook kernels just crash
Did you have profile your code ? Does the key/value have caracteristics (such as limited set of character (especially not `"`, `,`) ? Does the key are same ordered in all data ? What is the format you insert into postgres (for example what are the INSERT commands) The most likely bottleneck is the insertion into postgres see https://www.postgresql.org/docs/current/static/populate.html The fastest way to add data into postgres is `COPY table FROM '/absolute/path/to/file`
&gt; the what? https://www.python.org/dev/peps/pep-0393/ I'm not really a unicode person, but my understanding is that python used to have a build option that determined the unicode system used internally. You could pick a memory-hungry option which supported the more obscure unicode characters, or a more memory-efficient option which didn't. In 3.3+ the interpreter just switches between the systems as appropriate, so you don't have to worry about it. The other unicode changes in python 3 seem to make things easier too, in my very limited experience. &gt; That's kinda vague. If you're talking statistics, I use numpy, so I don't really care. All my code uses numpy, so whatever. Speaking of which, I'm honestly surprised there isn't a built in plotting module. I don't see why there would be a built-in plotting module. They're necessarily pretty complicated and require different expertise to core python development, and given all the different requirements and tastes, there's probably never going to be a single dominant library like numpy. There have been an awful lot of additions to the standard library since 2.7, but a lot of them have been backported and put on pypi, so it's not necessarily a big deal. &gt; Those are Python 3.6 features. Pretty sure you're not using Python 3.6. Eh. I tend to upgrade whenever there's a shiny new feature I want to use. Obviously that's not an option for everyone. &gt; Until the package developers stop supporting those versions, there is very little incentive to upgrade. For me, the biggest incentive is all the little things that have been cleaned up or simplified. For example, you no longer have to worry about the distinction between classic and new-style classes, `int` and `long`, `pickle` and `cPickle`, `range` and `xrange`, or stuff like surprise integer division or python 2's nonsensical default implementation of `__lt__` (`1&lt;object`, etc.). Also I really like keyword-only arguments.
This is a cool idea. I have two suggestions/comments, if I may: 1) it would be nice to have a view where you see the pandas and data.table syntax side by side. useful for someone who knows one and wants to learn the other 2) it would be nice if the code examples used indenting and spacing for max legibility. for example, this: transactions &lt;- data.table( TransactionID = seq(1, 10), TransactionDate = as.Date(c("2011-06-16", "2012-08-26", "2013-12-30", "2011-05-26", "2014-04-24", "2016-05-08", "2010-08-21", "2013-12-23", "2013-06-06", "2015-04-24")), ProductID = c(3L, 2L, 4L, 4L, 2L, 4L, 2L, 5L, 4L, 4L), UserID = c(3L, 1L, 3L, 3L, 1L, 5L, 1L, 2L, 2L, 3L), Quantity = c(0L, 3L, 0L, 0L, 3L, 4L, 0L, 6L, 0L, 3L) ) could be this: transactions &lt;- data.table( TransactionID = seq(1, 10), TransactionDate = as.Date(c("2011-06-16", "2012-08-26", "2013-12-30", "2011-05-26", "2014-04-24", "2016-05-08", "2010-08-21", "2013-12-23", "2013-06-06", "2015-04-24")), ProductID = c(3L, 2L, 4L, 4L, 2L, 4L, 2L, 5L, 4L, 4L), UserID = c(3L, 1L, 3L, 3L, 1L, 5L, 1L, 2L, 2L, 3L), Quantity = c(0L, 3L, 0L, 0L, 3L, 4L, 0L, 6L, 0L, 3L) )
Hey man, I do data-wrangling with python pretty much every day for work. more than happy to help fill in pandas stuff, if you're still looking for a hand with it.
Something like this should work import matplotlib.pyplot as plt fig, ax = plt.subplots(1) x = [1,2,3,4] y = [34,56,23,78] ax.bar(x, y, color='red', edgecolor='yellow', width=1)
&gt; writing library-quality code is very different from writing scripts for research You're getting wrapped around the axle thinking you can only commit "perfect code" if you're going to commit anything. Lose that mindset already! Submit your best pull request, work with the community to polish that patch, let someone else do better if they can. The community gets some code, and you get the opportunity to learn how to be a better coder in the process. It's a win-win scenario. So what if a n00b takes some time away from a senior contributor? It's that person's choice to shepherd the n00b. Let them make the call, don't take the opportunity away from them. It could well lead to the development of another senior contributor down the road... which is a huge net-positive. &gt; It took me literally years before I became even a half-way competent software engineer. See above with the "perfect code" fallacy. &gt; The problem is that spending 10 more hours cranking out a paper is way better for your career than spending 10 hours hunting down some obscure bugs in some library. Speak for yourself. The coding I did for my research got me a great job before I was even done with academia. If your tenure committee doesn't care about the advancement of technology in your field, consider that you're not giving a good sales pitch about your work, or you may be talking to the wrong committee. &gt; But ~~the facts are~~ my opinion is that it isn't FTFY. You don't get to define every career path at every institution ever.
Why would you do that when Python has a native JSON parser?
&gt; can’t quit, long story Do you mean you can't leave without another job?
He said parsing was slow. If slow, the most likely reason is because it has to ingest the entire thing at once. Breaking the document into 1000 tiny pieces could be much faster than parsing one big document 1000x the size.
Hey you should be making your office do that. Get Back to Teaching!!! Just wait and see how many more little programs you will make to automate your life. Think about your documents you change the date on every year make a python script to do just that. I am honestly thinking of ways you would use python as a non-IT educator and I am struggling. But I give you props for doing it with python. (Powerschool should do that for you)
Curious would it be the same for a step chart?
You're correct, I can leave the processes running on the server. It would probably take 12 hours or so to insert all of it right now. Plus, I get an additional dozen files every day. However, I'd prefer, if possible to figure out how to make this insertion task take less time so that the server mentioned in the OP could also be used for some other analytic tasks related to the data. 
You've got the wrong indentation here: for ipaddr in ips: if ipaddr in occurence: occurence[ipaddr] = occurence[ipaddr] + 1 else: occurence[ipaddr] = 1 The `else` needs to be grouped with the `if`, not the `for`. An `else` that's grouped with a `for` runs after the loop if the loop terminated naturally (without `break`.) A few other tips: - If you want to count things, use `collections.Counter`. But you don't actually need to count the number of occurrences if all you care about is the total number of unique items. - The number of items in a dictionary or set is `len(foo)`; you don't need a loop for that. - You don't need the `[]`s in your regex, nor the non-capture groups. Here's how you might write it taking those into account: from __future__ import print_function import re def count_ip(filename): with open(filename) as infile: return len(set(ip for line in infile for ip in re.findall(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}', line))) print('Number of ips =', count_ip('...')) Edit: oops, `collections` is not needed.
I think the problem is the indentation of the `else` statement near the bottom. It needs to line up with your `if` statement. (for...else is a valid thing to do in Python, but I don't think it's what you meant to do.) Also, looking at your input file, I think your regex might capture a date/time that appears quite frequently: 8.12.11.20060308 Best to add `\b` at the beginning and end to prevent that.
Darn! I knew it was something I just over looked. So essentially the mistake of indenting like that I just set it back to 1 after the loop was done thus making my loop pointless. Thank you so much. If you don't mind think I can pick your brain on how I should go about tackling a few other things I am trying to do that is not part of this function.
Yup you guys are right. The damn else was indented inproperly
Final year of what? High school, elementary school? How much experience do you have? Any experience with eg. pygame/pyglet, re, flask, etc?
&gt; High School Project. I have experience with Flask High School Project. I have experience with Flask
Write something that uses the multithreaded [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html) modules such as a web crawler or tcp scanner.