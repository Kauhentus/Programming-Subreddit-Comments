https://github.com/torfsen/python-systemd-tutorial/blob/master/README.md Create a systemd python daemon that reads the api of whatever you want to use as your command source, sms/email. The service would poll it periodically and then perform an action based on the command.
You mean for HLS?
[PySimpleGUI](http://www.PySimpleGUI.org) is a wrapper for tkinter, Qt (pyside2), WxPython, and Remi (runs in the browser). It presents a single, unified interface for building custom GUIs. The same source code can be executed on Qt and tkinter for example. Or tkinter and a Web interface. Tons of docs, Cookbook, 100+ sample programs will get you going quickly. I've only recently been experimenting with Android (using Termux). I wrote up instructions on using Android with PySimpleGUI that is contained in this [Issue on the GitHub.](https://github.com/PySimpleGUI/PySimpleGUI/issues/1288)
&gt; Please further explain your second sentence: &gt; &gt;It's pretty rare that you encounter a problem that has only been solved in Python. What I mean is that you're likely to find libraries and frameworks for any given problem in any other mature language platform. So it's not like you have to write less code with Python because of good libraries, because libraries that do the same thing likely exist for other languages.
With larger projects I have found automated testing to be essential. Pylint makes it even better. Automating documentation generation is very helpful for maintenance. Gosh.. these are pretty important for large C/C++ projects, too!
I found a thread that stops without resolution [here](https://mail.python.org/pipermail/python-dev/2003-April/035073.html).
Or maybe you need experience at being Linus Torvald?
There's a new, larger edition out this month. I think the old one is good, but I imagine the new one will be way more up to date.
I would guess you're in the minority. Python is used for data science, and any experienced data scientist would have worked with a relational database some time in their career.
I took computer engineering at a top-10 university and in our first three years' programming courses, we weren't taught version control and weren't required to use it for assignments. We were told about it in an optional fourth year software engineering course.
Hi Captain, I work as an Actuary and use python daily so I guess that counts as Insurance Analytics lol. I still consider myself a python newbie,but maybe it would help to hear one of the projects I have worked on that used python, and try to apply it to your project. &amp;#x200B; The company I worked for took on a project to creates rates for a specific make/model Toronto. Problem is we needed to collect data, so the strategy was to scrape data from a car insurance web site which had multiple insurance companies to get an accurate spread. So what I did was using pandas I pulled all the zip codes in Toronto from a website table, and stored them in a list. Now here's were it gets fun, the car insurance quote website was a webform, so I used Selenium to fill the webform out which was connected to a for loop that looped through all of the zip codes. I then outputted all of the values in excel and now we have data to work with.
After the learning and playing with Golang for about a month, I will say type-checking and understanding a functions signature looking at code is really really nice.
exit() may be what youre looking for?
I feel like twilio would be helpful to you
Depends on the changes you want to make. Also, the extremely volatile part isn’t helping, but it depends on what that really means. I mean it’s only 12 pages.
No, because you need to confirm to close it, I would need it to close without any intervention, either the program, or Python IDLE, maybe by forcequitting it, but I don't know how. I've tried getting IDLE's PID, but it doesn't give anything. Here's my code for trying to get the PID. It works for other apps, like Chrome, but not IDLE `process = subprocess.Popen('pgrep` [`IDLE`](https://IDLE.app)`', shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)` `pid, err = process.communicate()` `pid = pid[:7]` `if pid.startswith("b\'"):` `pid = pid[len("b\'"):]` Where pid (the variable) is the PID
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Some of the PS mem leaks are silly. For instance, I had a client with one. I cant recall the exact function but basically SomeFunction() caused a leak while var = SomeFunction() did not. Presumably because PS is not grabbing the pointer and ensuring free() is called against it.
Is the GC part of the python language spec? Or is it part of CPython (and can be ignored by other interpreters, if one so chooses)?
Python programs are revealing as *python something*, try to locate all processes having python in description. Iirc Idle is just a Python script, not a compiled binary. Btw, please do not duplicate the same question in two threads.
What a coincidence, I dug through dozens of job posts last week trying to gather what was the most recurring python skills listed and I ended up writing down Django, Linux, and Unit Testing.
Thanks for the tip, i'll check that. Do you know where I could find some kind of processes list on MacOS ? I also tested, and exit() would actually be perfect if it wasn't asking the "Your program is still running. Do you want to kill it" message Sorry about my two posts, i thought on the first one nobody had seen it since it or i malformulated it since it wasn't getting any replies and it died in new, but apparently, not as much people as i thought post to r/python.
Appending fields, for example " Add the following states to the bodily injury code"
https://gist.github.com/JackhammerYT/4d5ea06cbaf9c158cbab017fbb9a6dd2 there you go
&gt; Do you know where I could find some kind of processes list on MacOS ? I'm afraid not. &gt;I also tested, and exit() would actually be perfect if it wasn't asking the "Your program is still running. Do you want to kill it" message os.kill with sigkill can do the job I think. &gt;Sorry about my two posts, i thought on the first one nobody had seen it since it or i malformulated it since it wasn't getting any replies and it died in new, but apparently, not as much people as i thought post to r/python. Then delete the old one.
What’s a field? Is that just normal text? Would you be opposed to writing a word document and copying and pasting it into the file? Did you want more automation than that? The more you have to automate (find the right position in the file down to the space, format the text perfectly, do fancy word things like add references), the harder you make the problem. Also, you have to ask about the penalty for it being wrong and screwing up the document because as you said, it’s volatile.
&gt;I think knowledge of GIT and basics of SQL are implicit I have such sights to show you...
Thanks ! I'll try os.kill and sigkill tomorrow ! I did delete the other one before writing the apology
This is easily programmable in python
asyncio is just fine, people are just loud and annoying.
This.. is amazing.
Source?
I still prefer regular dictionaries since they are pickleable and have a cleaner `__repr__` for debugging purposes. They aren't that bad to use either. counts = {} for w in text.split(): counts.setdefault(w, counts.get(w, 0) + 1)
Just normal text fields, that is how I am currently solving it now. I have a macro that slices the pages and paste it into a new word doc, and I make the edits in there. Maybe Latex would work? I can standardize the format, the only issue would be having it consistently feed the latex code with the document data.
You could use a mailmerge, depending on how complex the 12 pages are This article might help - [https://pbpython.com/python-word-template.html](https://pbpython.com/python-word-template.html)
I have an Android phone, does that count?
I had to explain to someone the other day that writing a test that directly manipulates the internal state of a class to test a method output is bad, instead of using only the classes defined API through it's methods. It's like "Encapsulation" is a buzzword. It's not even funny how much employers are optimizing for buzzwords, which in turn optimizes employees to know the least about a buzzword.
Telegram bot is usually my goto.
I wanna get Stefan here— we’re number 1!!!!
I can't speak for everyone, but I fuckin love asyncio. Like any tool, there is a time and place to use it. But on those occasions, it's invaluable.
It shows up in instances of double dispatch, which is definitely not an antipattern. I would grant that it can often be a smell.
Ugh when is R going to die
I guess they have never used *select* in C
I’d stay away from explicit latex as outside of whatever it is we used from elevatorlady to use doesn’t support 64 bit word. One option would be to figure out how to write equations and the other would be to use matplotlib to write latex as pictures. They wouldn’t be editable though and I’m not sure if you can number the equation. Python-docx is pretty limited as far as I know, but it’s plenty good if you’re ok with copying and pasting the data. There’s a format file template that you can change, but just copying the text into a new file updates the format. It’ll do headings, basic formatting like bold and italic, figure captions, centering and tables. It’s enough for me, but there are other options.
In place of the `defaultdict` class, one could also do: counts = dict() for word in text.split(): counts[word] = counts.get(word, 0) + 1 Many ways to do the same thing but some are more efficient than others as they're implemented in CPython/C
I used asyncio recently in a small project. It's fine. It does the job, and I'm glad to have async/await vs coroutines and promises. The event loop is a little wonky, and I definitely love how Go does concurrency with channels and wish Python had borrowed that design - but there's nothing wrong with async.
no it cant
Since it doesn't say GNU/Linux it means *only the kernel* and nothing else. RMS Out
Some ppl need to get a life.
I honestly can’t even write anything more than select * from __ Been using python professionally for a number of years now.
What? No, not everyone hates asyncio. There's some quibbles in the design but they exist in literally every single asynchronous / coroutine programming system. &amp;#x200B; It's sure easier to understand that Twisted.
That is definitely concise, and results in less visible code (sort of as this requires an import so actually uses more loc), but the statistics implementation is miles behind in performance. &gt;100x slower using `mean` with using time as a benchmark: ``` In [1]: a = list(range(100)) In [2]: import statistics In [3]: %%timeit ...: m = statistics.mean(a) 61.6 µs ± 882 ns per loop (mean ± std. dev. of 7 runs, 10000 loops each) In [4]: %%timeit ...: m = sum(a) / len(a) 564 ns ± 8.92 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each) ``` ~50x more function calls using `mean`: ``` In [7]: %%prun ...: m = statistics.mean(a) 242 function calls in 0.000 seconds Ordered by: internal time ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 0.000 0.000 statistics.py:105(_sum) 101 0.000 0.000 0.000 0.000 statistics.py:201(_exact_ratio) 1 0.000 0.000 0.000 0.000 {built-in method builtins.exec} 100 0.000 0.000 0.000 0.000 {method 'get' of 'dict' objects} 3 0.000 0.000 0.000 0.000 fractions.py:84(__new__) 1 0.000 0.000 0.000 0.000 statistics.py:291(mean) 2 0.000 0.000 0.000 0.000 statistics.py:159(&lt;genexpr&gt;) 1 0.000 0.000 0.000 0.000 fractions.py:386(reverse) 1 0.000 0.000 0.000 0.000 _weakrefset.py:70(__contains__) 1 0.000 0.000 0.000 0.000 &lt;string&gt;:2(&lt;module&gt;) 1 0.000 0.000 0.000 0.000 statistics.py:233(_convert) 1 0.000 0.000 0.000 0.000 fractions.py:401(_add) 1 0.000 0.000 0.000 0.000 {built-in method builtins.sum} 1 0.000 0.000 0.000 0.000 abc.py:180(__instancecheck__) 2 0.000 0.000 0.000 0.000 {built-in method builtins.isinstance} 1 0.000 0.000 0.000 0.000 {built-in method builtins.sorted} 1 0.000 0.000 0.000 0.000 numbers.py:283(__float__) 3 0.000 0.000 0.000 0.000 fractions.py:274(numerator) 1 0.000 0.000 0.000 0.000 fractions.py:374(forward) 1 0.000 0.000 0.000 0.000 fractions.py:423(_div) 3 0.000 0.000 0.000 0.000 {built-in method __new__ of type object at 0x101c8add8} 1 0.000 0.000 0.000 0.000 {built-in method builtins.issubclass} 3 0.000 0.000 0.000 0.000 {built-in method math.gcd} 1 0.000 0.000 0.000 0.000 {method 'items' of 'dict' objects} 1 0.000 0.000 0.000 0.000 {built-in method builtins.iter} 1 0.000 0.000 0.000 0.000 {built-in method builtins.len} 1 0.000 0.000 0.000 0.000 {method 'disable' of '_lsprof.Profiler' objects} 2 0.000 0.000 0.000 0.000 statistics.py:170(_coerce) 4 0.000 0.000 0.000 0.000 fractions.py:278(denominator) In [8]: %%prun ...: m = sum(a) / len(a) 5 function calls in 0.000 seconds Ordered by: internal time ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 0.000 0.000 {built-in method builtins.exec} 1 0.000 0.000 0.000 0.000 &lt;string&gt;:2(&lt;module&gt;) 1 0.000 0.000 0.000 0.000 {built-in method builtins.len} 1 0.000 0.000 0.000 0.000 {built-in method builtins.sum} 1 0.000 0.000 0.000 0.000 {method 'disable' of '_lsprof.Profiler' objects} ``` Everything has trade offs.
Circular dependencies are a problem in any system. It transcends programming even. Just remember they’re to be avoided at all costs, and will sneak in anyway. You’ll take note when you run into the issue, where if you hadn’t known of the concept before you’d probably just chalk it up to weirdness you solved by bashing on it like a monkey with a femur.
This might work: import os import subprocess subprocess.call(['kill', '-TERM', str(os.getppid())]) However, the obvious question is why you don't run the script directly, instead of through IDLE. Then you could just use sys.exit().
it's definitely a confusing set of tools to setup.
An object leak is just a more complicated memory leak, unless your C is truly shit.
A fairly primitive garbage collector is part of the normative implementation of the Python interpreter (CPython).
I feel bad for people trying to break into the field... because this is the most useless list I have ever seen.
I personally found C# async much easier to deal with and implement but struggled with asynio, not sure if it's me or the ease of use. But that's just my experience :p
Is it because it’s racist
Dunno why you’re being downvoted. Python’s static type checking (with `from __future__ import annotations` in 3.7) is fantastic, and yet you still get the flexibility of dynamic typing when you need it. Python is, by the way, strongly typed (for the haters, not you). Static typing is very nicely opt-in. Weakly-typed (you can’t ever really know what type a reference refers to) is orthogonal to strongly-typed, but dynamic typing is another dimension (in the math sense, not the Beastie Boys sense).
I’ve been working on learning the YouTube APIs and finding ways to streamline a lot of tedious manual processes at our company. I’ve managed to authenticate both via API key and oAuth and written routines that allow us to reorder playlists (which for very long playlists is a real hassle to do manually) and download metadata and stats. Next up is learning how to build a front-end for these various tools (Flask/Django???) and also creating a database for all our shows metadata (over 20,000 videos) to facilitate maintenance and updates. Might do this bit in Mongo to reuse some code I wrote last year, but I’m open to suggestions there as well.
Just because something does not get cleaned up the first time the GC runs, doesn’t mean it won’t ever run if you call the function say 100 times. There are 4+ bins to the garbage collector and objects are attempted to be cleaned up less frequently if they have repeatedly failed to be cleaned up. As long as they eventually get cleaned up though, even if it’s later than you’d like, it’s not a leak. Run the function 10000 times. If your memory increases linearly, it’s a leak.
&gt; Asyncio Keyword is IO. You want to use this when you are awaiting for some other input. You use the await keyword to dictate where the loop can change routines.
&gt;Some ppl need to get ~~a life~~ with the times and switch to Python3. FTFY
Like I said, this is with a client, so I don't know what tests they did explicitly. I was informed there was a memory leak with said script, and a couple of weeks later, this was the fix they found.
While some others need to get a life so they can stop themselves from cursing and using logical fallacies in a technical argument. Let evolution take its course. Those who don’t change with the times chose to stay behind. Cursing and calling them racists is just silly and makes everyone feel uneasy.
Noob Question: Why does many system utilities of unix like os (MacOS and linux) are written in Python 2 instead of Python 3? As both of the os ships with python 2 preinstalled.
There is a Godot Engine port in progress: https://github.com/unknown-horizons/godot-port I really like Python, but believe that more open source games should use proper game engine like Godot. Too many games end up splitting scarce developer between developing game mechanics and a bespoke game engine.
Is "clearing" a task people need to do within your library? If yes, then yes, you should include that method. json({}) is an implementation detail, and end users should not be worrying about how your library is implemented.
/r/woooosh/
Simon says to prefer explicit to implicit. I’d say clear() is explicit.
I wish the many visual effects software packages would update to 3. That's the reason why I still use 2. :(
&gt; IDLE Pretty sure .bat files run from a shell, not IDLE (I only deal with Linux, and I don't see the .bat file linked). Can you run your program from shell, the same way the .bat script does? I bet the library is not in the path the shell uses.
I never in my life thought I'd come across someone who is as enthusiastic about something like asyncio as you seem to be. Now I have a sudden urge to find something I can use it on just because I think I've been missing out.
 import os from signal import SIGTERM os.kill(os.getppid(), SIGTERM)
I think you need to do a little research into NN.
That's the most pants on head retarded comparison I've seen used in recent memory.
Because at the time they were written, only phyton2 existed. You wanna bitch, code it up yourself and push it to github.
`mean` is designed for precision. It is not designed for performance. This is discussed in the [PEP](https://www.python.org/dev/peps/pep-0450/#id51) why the naive implementation is NOT accurate over floats of varying magnitude.
Pretty sure you can't open a PR for OSX.
I don’t know what do you mean by that, but it surely can be typed and this feature is built-in into the language since Python 3.sth. In fact, Some functionalities of dataclasses in 3.7 rely on you using typing.
 3 &gt; 2 = True But seriously, I hate this circle jerk. Whenever I ask someone why 3 is superior to 2, seven times out of ten they respond with, "It has le f-string."
f-string was only introduced in 3.6?
&gt;let evolution take its course. This guys a eugenicist! Get him!
Smh I'd started learning from Learn Python The Hard Way initially. Later discovered it was for Python 2. Still, not a bad source.
I was. But now I’m a usgenicist.
MacOS would be better off if they stopped shipping their horribly broken python 2 nowadays. Not like they support it any longer.
They're college students with nothing better to do
❤️
Thanks, that’s a really nice take on that. Could you point to some more materials about difference between strong/weak and static/dynamic typing?
Am I getting baited?
I know. Been there. I still recall the heated debates between Sinclair Spectrum and Commodore 64 owners. Then you grow up. And one thing you learn that a filthy mouth and underhanded debate tactics help no one at the end.
Amen. Kill Python 2 already. Anyone posting machine learning/tensorflow/etc stuff on github needs to be shot, many times just to be sure. That said, it is getting better. I think enough Python 2 using backwards, lazy irrational bastards have been executed for things to improve. When I first got introduced to Python, I loved it, but then I found the 2 vs 3 compatibility hell. Yes I blame the creators of the language for doing breaking changes to the language, but we need to get past it and that means shooting people who refuse to move on.
Linux is not a single OS. Ubuntu and Arch are examples of Linux based OS's. Arch ships with Python 3 as default and no Python 2 preinstalled.
 I'd just like to interject for a moment. What you're referring to as Linux, is in fact, GNU/Linux, or as I've recently taken to calling it, GNU plus Linux. Linux is not an operating system unto itself, but rather another free component of a fully functioning GNU system made useful by the GNU corelibs, shell utilities and vital system components comprising a full OS as defined by POSIX. Many computer users run a modified version of the GNU system every day, without realizing it. Through a peculiar turn of events, the version of GNU which is widely used today is often called "Linux", and many of its users are not aware that it is basically the GNU system, developed by the GNU Project. There really is a Linux, and these people are using it, but it is just a part of the system they use. Linux is the kernel: the program in the system that allocates the machine's resources to the other programs that you run. The kernel is an essential part of an operating system, but useless by itself; it can only function in the context of a complete operating system. Linux is normally used in combination with the GNU operating system: the whole system is basically GNU with Linux added, or GNU/Linux. All the so-called "Linux" distributions are really distributions of GNU/Linux.
Did you misspell bathed?
I believe Ubuntu 19.04 has python 3 as the default now as well. Bash 5 even!
Not complaining, was just curious if there was any something Python 2 can do that python 3 cannot.
`shakes head at Maya` `glares at 3DS Max`
Do you mind sharing some examples of the software you mention?
Dear Mr neckbeard bot. I intentionally did not refer to Linux as an OS to avoid any RMS discussions. Please ask your master to train you better in choosing your battles.
Arcgis changing to 3 is big deal. ArcGIS Pro only uses Python 3
Are you offering?
I’ll take that as a yes
My specialty is fine sandpaper bath in slightly acidic water.
Bear with me here for a moment--but I think this is what I think of as the "Glassdoor" effect. Named after the job search site, and in particular how it gives stars to companies and ceos based on employees ratings. Essentially there is a selection bias at play because, other than a few heavily gruntled employees, most reviews are going to come from the marketing types, sales people, and other sorts who are outgoing and "peppy" and enjoy adding their thoughtful views on their company's CEO, benefits package, and over all work environment. In the python universe that type of person is probably using requests, scrapy, pillow, beautifulsoup and similar things. (Even the package names seem outgoing and happy.) So they get a lot of good press. asyncio users are the glassdoor equivalent of the legal and accounting department--they get their stuff done and if you ask them if they want to post a review of their company they'd be like "Why?".
While coroutines were made to work in Python 2.5+, IIRC it's still a bit weird compared to what you get in Python 3. Really I don't mind either Python 2 or Python 3. What bothers me is a code base with Python 2 _and_ Python 3 because it only doubles my headaches. I believe there was also some performance upgrades made to Python 3, but at least for most of the stuff I use Python for professionally those are inconsequential
It’s good to be vigilant. Not necessarily good to be a vigilante.
Bad bot. You should identify clearly as a bot and include a link to tell you when you behave badly.
That is exactly the point, but still it is interesting to know.
i mean that python is not statically typed, and it cannot be. type hints are suggestions, not rules. regardless of what you define, you can still pass in anything for a parameter or set any value dataclasses use type hints but only to generate constructors. it does not enforce typing in any way. &gt;&gt;&gt; @dataclass ... class Blah: ... bullshit: str ... ... &gt;&gt;&gt; blah = Blah(1) &gt;&gt;&gt; blah.bullshit 1
I am glad it is of use then :) I actually used learnpython.org as well I really enjoyed his tutorials.
It can do ‘print a’ without brackets. still salty.
when i start to code in python there weren't python3 and now using python2 is my fault? brooo...
[removed]
Thank's for that link. I am surely going to check it out and add it as a edit to this post! Data Science From Scratch is a good book yes. I know of a couple people who said it was of good use for them.
Refer to a response to my response above to learn difference between static/dynamic and weak/strong typing. Gday.
Refer to a response to my response to this post above to learn difference between static/dynamic and weak/strong typing. Gday.
&gt;Save As far as I'm aware Autodesk Maya, The Foundry Mari and Nuke all use Python 2.7. :/
Deserves more upvotes
Yeah its anal cramps
It was what was available at the time and it kept working so no need to change it.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
We use asyncio/aiohttp in almost every production service. There could be some confusions sometimes, but overall, it's great. Also it is very straightforward to write functional tests as you are in a single thread.
I'm working on [https://github.com/malinoff/amqproto](https://github.com/malinoff/amqproto) for a couple of years in my spare time. I've tried to implemented asyncio adapter first, but faced tons of issues mostly connected to error handling and cancellation - which are in a very sorry state. I've tried to implement a trio-like Nursery object for asyncio - [https://github.com/malinoff/aionursery](https://github.com/malinoff/aionursery) \- and failed. It's not possible for it to behave like trio's Nursery without monkey-patching asyncio. So now I stopped working with asyncio adapter completely, and moved towards implementing a trio adapter. A nursery-like object (called TaskGroup) is "planned for 3.8" [https://twitter.com/1st1/status/1041855365745455104](https://twitter.com/1st1/status/1041855365745455104), maybe after 3.8 comes out I'll work on asyncio adapter again. But right now it's barely usable for writing robust programs, unfortunately.
Thanks! This is really good to know and even more motivational. Thanks again
the comment is wrong. python does not have static typing. there's nothing else to say
Which 3? It's not like they are stable or compatible. Deprecation warnings still pop up all the time. At least 2.7 is stable.
Ordinarily, yes, I'd be okay with this. But if you try to do an operation with two variables of incompatible types, Python 2 casts them to the string representation of the type and does the operation as if nothing's the matter. For instance, consider the following: a = 2 b = "hello" print a &lt; b This will print True, because "int" &lt; "str". I understand that Python 3 didn't exist before, but please understand that Python 2 should not exist today. It is a menace to society, and a pall upon everything humanity stands for.
That's everything, isn't it? Was iOS development any different? A car company (for instance) depends on thousands of manufacturers staying in business and providing consistent quality.
Wow that's some real OC right there buddy -- an angry python 3 user about python 2....NEXT
No one gives a fuck. It’s just Linux.
I use python 2.6 at work :) :) :) can you tell how happy I am :) :) :) it’s so much fun!!!! :) :) please:)kill:)me:)
Look, I’m an RMS fanboy. I dig that dude and think he’s right about a great many things. That said, this is wrong now, if it was ever right. Most of my Linux usage is launching a Docker container to boot directly into a daemon, probably even bypassing init and everything else userland. As in, gunicorn or postgres or nginx may literally be the only running process in the container. I use GNU very little in my everyday work. I love GNU. I think it’s made the world - especially my world as a programmer - a nicer place. But when I say I use Linux, I mean that I’m using Linux.
I’ve been learning python 2.7 as python 3 on Codecademycosts money
Next year. This year they're releasing tech previews compiled with python 3.
So aiohttp is used in production?
It has a future.
Thanks you
Only faggots use python 2
Lol, i'd like to see you upgrade massive codebases from python2 to python3.
This is the worst bot in the history of bots.
Yes, we also saw the top post.
In fairness, neither the video nor OP claimed that this showed anything other than the popularity specifically on Stack Overflow.
Yes. Is it surprising? :)
Heh, and to think I was just lamenting yesterday that my team was stuck on Python 3.6 :) ^^^I ^^^think ^^^we're ^^^moving ^^^to ^^^3.7 ^^^soon. ^^^yay!
Ooh nice I just realized you can use [python with godot](https://github.com/touilleMan/godot-python). But I agree a nice modern game engine is better. Hmmm
&gt; It's not like they are stable or compatible. Are you serious? I started on 3.5. Very stable. And any 3.5 code that I wrote still works on 3.6, 3.7, and 3.8 just fine. Python 3.4 has been EOL'd as of a month ago, so yeah... I'd use Python 3.7 or 3.8. &gt; At least 2.7 is stable. And is being EOL'd in less than 8 months. That ship is sinking and will not get any more updates come January 2020.
Because it's racist.
Linux &gt; Hurd. Change my mind.
I can't :( My embedded environment at work only allows Python 2 ;-;
&gt; Whenever I ask someone why 3 is superior to 2 Type Hinting. All day, every day. Makes coding in PyCharm a breeze.
``` if "python2_usage" == "racism": raise NahMateError ```
That’s a really terrible attitude, mate. If you drop it you might sometimes learn sth new.
My target server infrastructure is CentOS 6 and 7. Yes I could install python 3 out of the sclo but sadly this solution really doesn't scale. It is easier to import future and write 2.6 and 2.7 with future module than it is to add python 3 support. One day C8 Will hit and then the great migration will occur.
You revive painful memories
Just out of curiosity, what exactly lead to the monkey-patching need?
What part of 3.7 did you need? (Apart from the street-cred associated with the higher number)
My typical way to choose third party libraries is: keep down the number of dependencies. Any dependency is 1 more thing to worry about on which I have no control. A lot of third party libraries also bring other dependencies in turn, and I check what are these dependencies and why they are required. Sometimes these sub-dependencies are the reason to ditch that library. Do I really need that third party library? How much code does it let me to save? 30 lines? I write 30 lines of code and avoid 1 (or more) dependency. It also happens that, writing those 30 lines, I learn something. Requests is awesome, but for some easy web calls the Python's standard library is fine, and I avoid 1 dependency. For any heavy usage Request is a must, obviously; but using it or not depends on the project I'm working on. &amp;#x200B; My 2c.
I don't understand what posting about machine learning on GitHub has to do with this.
Disappointed. I'd hoped to see more core/soft skills - gathering requirements, engaging with customers, validating your assumptions, basic ability to contribute to a meeting, mentoring others (in more senior roles), etc. These are important things in a developer, as much as ability to explain a list comprehension.
Well, it all started when I was a kid, and I picked up a book about Java...
it literally has the word science, in computer science
not op above but data classes are noteworthy https://docs.python.org/3/whatsnew/3.7.html
Same here. Until the DCC's move to 3 we're kinda stuck in 2
My biggest gripe with is trying to learn something in Python and researching online results in one page has a python 2 example and another has python 3. More so 2 than anything. Its a PITA.
I'm using data classes on 3.6, there is a [backport on pypi](https://pypi.org/project/dataclasses/). The backport is identical to the 3.7 dataclasses, so there's really no need to wait until the team has migrated to 3.7.
F strings are my favourite feature
You're not wrong - some people seriously underestimate the time and money that goes into such upgrades. *But* it's been ten years now since Python 3, these places should have at least started to upgrade their codebases by this point.
This is why docker is good :)
Ubuntu 18.04 too, its just called python3. All the system utilies use that.
dataclasses are pretty sweet.
Great. Thank you.
agreed
Refusing to learn new things in programming is generally your own fault, yes.
I'm occupied with work these days. I'll start hacking at a personal solution to manage my files around my home lab. [GitHub](https://github.com/jgodara/pymycloud)
this i like this
I could imagine some implementations but I've never seen it in popular plotting packages. Any examples?
Being on the latest version of anything isn't always the best idea for large production project. But python 3 is not that young and is much faster. That being said I still use 3.5 for pypi support.
Is there any list of utilities written in Py2? I'd love to take a look and update some tools
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
What's the problem with select? Apart, of course, from the rookie mistake of passing in the number of descriptors as nfds, rather than the highest numbered one.
The performance increase over 3.6 is a nice thing to have.
So, for those of us casuals that only do sporadic things in Python and haven't needed to bother yet on the switch to 3, is there a *canonical* guide on how to *gently* transition to it?
It's confusing to beginners and feels complex and cumbersome for something that's conceptually very simple
I also love it. I use it for everything where things are to be done in parallel.
Nah, that honour goes to common misspelling bot...
I thought f strings were in 3.6?
* It will have support in the future. * Unicode strings by default. As a user of a language with the Cyrillic alphabet, I appreciate this a lot.
Oh you're right! Then I don't know anything that I use in 3.7 lol
[removed]
I only know this because our main nms system uses 3.5 and not having f strings is driving me nuts and making code reuse a huge pain.
To be sure, the difference between 2 and 3 at the level that codecademy teaches are miniscule and mostly syntax differences. There is really no reason to not switch when you move on from codecademy. And it will save you massive headaches in a year or two.
This is precisely the reason I updated my server to run on 3.7. They're so convenient.
I started writing python3 code only 4 years ago, and there are still Python2 code to work with, everyday, lol.
it's not a matter of opinion. it's objectively incorrect. no matter what kind of static analysis you perform on your code, it is no more statically typed than it would be without type hints. they are incredibly useful, but they enforce no type safety. type hints just enhance the linting process all you're doing is listening to the person who agreed with you and dismissing the person who told you that you're mistaken. that's not learning. that's sticking your head in the sand
f-strings are my baby and I love them
I like the common misspelling bot :(
I think you're mostly right - I disagree with you on some level (definitions mostly), but your initial comment was not helpful at all. "no it isn't" is not a comment that indicates you're engaged in a discussion. You could've written the above and explain it better in the beginning. That's why I say your attitude is wrong and hostile. The fact that I point to some comment that introduces new information does not mean that I agree with it completely. But I guess you can psychoanalize me in your free time if you want. I just suggest you drop hostility and let's discuss this stuff politely instead of throwing insults. It would be great if you'd agree to do that!
F strings basically do the same thing as the format function
https://www.djangoproject.com/
I think you should search stackoverflow. I hear they can help with python
It's not [`trio`](https://trio.readthedocs.io/en/latest/), but Asyncio is decent as a language builtin. (and moving to adopt as much of Trio as it backwards-compatibly can, AFAICT)
2020 my friend, only after 2020
About frameworks Django was my first option too
It's impossible to implement cancel scopes. Every single low-level coroutine function has to check for cancellation and explicitly yield the control back to the event loop (if you have a coroutine function that has no \`await\` calls, calling it with \`await\` won't yield control, it will behave like a fully synchronous function). In trio, this is documented here: [https://trio.readthedocs.io/en/latest/design.html#cancel-points-and-schedule-points](https://trio.readthedocs.io/en/latest/design.html#cancel-points-and-schedule-points) There's no common function in asyncio that is being called by all coroutine primitives - therefore there is a need to monkey-patch pretty much everything socket-related, subprocess-related, and sleep, in order to make them check for cancellation.
/u/snaftyroot isn't mostly right. they are entirely right (at least at the time of this posting), and i don't find their OP hostile. it was as short and to the point as yours was. you were just wrong, and that's ok, but you don't seem to be listening. they elaborated, provided information, and an example, but you didn't like it and made personal attacks that have nothing to with the issue at hand the only time they were arguably hostile was saying you're sticking your head in the sand, but it sounded more frustrated than anything. after all you started attacking them first
From the [*What's New in Python 3.0*] article (section ["Porting to Python 3.0"]): &gt; For porting existing Python 2.5 or 2.6 source code to Python 3.0, the best strategy is the &gt; following: &gt; &gt; 0. (Prerequisite:) Start with excellent test coverage. &gt; 1. Port to Python 2.6. This should be no more work than the average port from Python 2.x to &gt; Python 2.(x+1). Make sure all your tests pass. &gt; 2. (Still using 2.6:) Turn on the -3 command line switch. This enables warnings about &gt; features that will be removed (or change) in 3.0. Run your test suite again, and fix code &gt; that you get warnings about until there are no warnings left, and all your tests still &gt; pass. &gt; 3. Run the `2to3` source-to-source translator over your source code tree. (See [*2to3 - &gt; Automated Python 2 to 3 code translation*] for more on this tool.) Run the result of the &gt; translation under Python 3.0. Manually fix up any remaining issues, fixing problems until &gt; all tests pass again. There's also the [*Porting Python 2 Code to Python 3*] HOWTO article. If you're only maintaining a few simple scripts, [`2to3`] will probably do most of the work for you. I can't really confirm that because I got into Python after Python 3 hit. [*What's New in Python 3.0*]: https://docs.python.org/3.0/whatsnew/3.0.html ["Porting to Python 3.0"]: https://docs.python.org/3.0/whatsnew/3.0.html#porting-to-python-3-0 [*2to3 - Automated Python 2 to 3 code translation*]: https://docs.python.org/3.0/library/2to3.html#to3-reference [*Porting Python 2 Code to Python 3*]: https://docs.python.org/3.2/howto/pyporting.html [`2to3`]: https://docs.python.org/3.7/library/2to3.html
Except that it's going to be out of security updates in 2020
No, the you're so hilarious bot is so much worse The misspelling bot is actually helpful (even though the hints often aren't)
Thanks!
You're welcome.
ubuntu and fedora ship wtih python 3
I didn't intentionally attack /u/snaftyroot, but I can understand that some of my comments could have been read as an attack if read in a certain way, so I apalogize. I'm not deaf to the argument and I understand it, I just don't think that they're right, though. Type checking is implemented into Python, there is a static type checking if you want it and it can be executed during execution of a program in main function. Or even anytime you want it to be executed. So it really depends on the definition of type checking and that's exactly what I wrote. &amp;#x200B; Python escapes many definitions in some ways, e.g. there is a dispute between \_\_init\_\_ and \_\_new\_\_ being a constructor in Python, but according in a documentation, neither of them is. But there are definitions to support any of them being a constructor. That's one of many such examples, which prove to me, that having a definitive opinion without realizing you're just holding tightly to a definition in your head is a mistake.
MIT CS is still racist agaisnt dragons.
If you're doing casual things that few people actually depend on, you have even less excuse to stay on 2. Small projects are a lot easier to migrate than big projects.
Building metrics and graphs for theVisibility Web UI for the Waterbear Cloud Orchestration Platform. I'm using Pyramid with Python 3.7 with URL Traversal and a model annotated with zope.schema interfaces, so the web code is pretty tight :)
Anything that uses this: https://www.vfxplatform.com/ Maya is the most well known example. It's 3d modelling software used for movies and game dev.
2.7 is the only version supported by maya :(
How can they then make statements about something they don’t know being relevant or not relevant in a field they neither know?
Very good :-)
Clearly the C64 was better. :-)
Upgrade to Blender?
You'd have the same effect if the x-axis were set statically to show the largest percentage across all time points with the added benefit of getting an appreciation of how things changed over time.
I'm woefully out of date as well, last time I considered updsting to python 3.x was some 7 or 8 years ago - I tried, ran into a bunch of dependencies that lacked support, so never bothered again. This really shouldn't surprise anyone. I can generally pull in C++98 libs into my C++14 based projects. I link to C# 2 libs from my C# 7 projects. I don't need to rewrite squat to start using new versions of most PLs. But Python still lacks 2 &lt;-&gt; 3 interop, so I'm really not surprised to hear that there are folks still using Python 2. And probably will keep using it until they work out all the bugs in automatic upgrade.
You are correct, I hadn't thought of that aspect. On reflection I would probably not bother ranking them in order of popularity over time myself and just keep the languages statically ordered on the y-axis myself (that method at least would work with my suggestion above).
That would probably prompt them to migrate the scripts to 3 or drop support Python support entirely.
MIT students complain about how real-world work? If only I get paid to port py2 to py3 it will be easy talk.
The hints are incredibly arrogant: essentially, just remember how to spell the fucking word
I don’t think it’s wholly serious
In Python 2. *Whoooooosh* does everything need to be spelled out explicitly to the letter to you? Let me guess, you still write in Python 2. We know where you live lol
i do miss the old *print*
No, I've been using python 3 for the last ten years or so, how is that related to my question? Honestly, I'm curious.
First of all – this is ace! I have a question though: &amp;#x200B; I’m doing http-https redirects on a digitalocean droplet using certbot &amp; the Nginx plugin. Is there a better use case for listening on an insecure bind alongside the secure bind plus using middleware redirection as you suggest here? &amp;#x200B; Would you have to reconfigure ssh to use another port? That would be a palava...
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
1. /r/learnpython 2. The `.` operator is for accessing attributes of objects, so `button1.pack` is the attribute named `pack` on the object `button1`.
Easiest way to understand it that you are accessing bits of a larger piece of code. For instance you could be using it in a way where you would import an entire library and only use components of that library you want by using the "libraryname"."method" This is also used when creating classes. For example the class dog may have a few attributes we can get by doing something like Dog.age() which will get you the assigned age of the specific instance of the dog class.
One small tip is never import an entire library lol. Only import the stuff you need and you wont need the . To call pieces of the library
you arent cool unless you still write print statements wrong from time to time. its like pouring one out for the dead homies
Like what? Google likes to show you Python 2 from the official docs.
Haha exactly &gt; Hey, BooBCMBSucks, just a quick heads-up: realy is actually spelled really. You can remember it by two ls. Have a nice day! &gt; You can remember it by two ls youdontsay.gif
Still a beginner but I’m going to try to create a program that pulls data from my bank account and helps me figure out and stay track on budget. It would probably be easier to make a budget in excel but where is the fun in that.
I learnt Python at the terminal and using Notepad++ I enjoyed the no frills approach at the start. Anaconda is great for presenting your work for review as you see code and output together. I have now moved onto Visual Studio code rather than Notepad++ as it seems to help me at this stage. I still use Anaconda when I what to archive a piece of code that I like.
Oh my gosh. Smdh
That's actually not a good tip at all. Namespacing is important, and importing chunks of random modules will just make your code harder to read.
/r/underappreciated
Which is why he asked for a migration guide...?
I think the missing part was "written in Python 2". It's weird but some people publish *brand new* ML stuff using Python 2.7 even these days. I don't see that often to be honest, but every time is a big WTF.
As recently as 2 years ago, I was using Python 1.5 in a production product. Look up the Telit GE-864-PY and share a few tears with me.
You see, the problem with old farts like me who started programming in python 15 years ago is that today there's plenty of excellent material we simply don't have the time to study. So today there are 25 years old who know python better than us. They are still shitty at organising their work though...
Wtf So if you play bad mobile games you're a criminal because booth are bad?
Thanks mardymole. Didn't think of it :) Always new things to learn...
In my previous company, I was not able to use most of the packages like numpy, pandas and had to do a lot of the things using python defaults. I always had to write my own functions to do things already implemented. When I see my past code now I feel the same way you do...
Yes, this also works well. Didn't know that you could use defaults in dictionaries. Thanks.
Can you review what you just said and come back to me? I didn’t understand it and I don’t think anyone else would either
It appears it was intentional: [https://bugs.python.org/issue5337](https://bugs.python.org/issue5337)
It isn't just you, things like C#, Scala, Golang, etc all do a better job with concurrency and Erlang / Elixir has completely spoiled every other language for me when it comes to concurrency. But I guess it is unfair to compare something built entirely around concurrency like Erlang (or even Golang to an extent) to the likes of Python where it was much more "bolted on" as an afterthought.
Yeah, but I imagine ArcMap will still be around for a bit and I assume that will always use Python 2.
Your point? Computing is nothing like any of the sciences. We don’t experiment in the same way, we aren’t tested in the same ways etc. Computer science is closer to engineering then an actual scientific field. Now specialisations of computing are a different story. Machine learning and AI I would consider to be an academic subject (with choice engineering inclusions). But computer science on its own isn’t.
The standard library implementation is a bit unpolished, maybe it's just that.
Thanks, I know where to ask now.
Totally agree with you. I get the sense there’s more Redditors here that just moan about 2/3 and don’t really code much at all— disappointing.
Read the . as an 's in english. Imagine there's a thing called benawen. It has an age. In English it's benawen's age. In python it's benawen.age.
tell him to upgrade his python on his centos 6 server and then we'll talk or tell him to write python 3 code for centos 6 because the mf racist enterprise doesnt update the servers and break things, the maga loving hateful cunts that keep things running..
The good news is that he path from 2.6 to 2.7 is relatively trivial compared to 2.5-2.6!
The only reason we’re using 2.6 is because that’s the system version for the version of Linux our servers are running. I honestly don’t think there is an upgrade path. We also use java 7 :)
Wonderfull! Thanks.
Most folks add multiple versions of python under different binary names when they run into that sort of problem. I.e. the default python binary is just "python", but you also have a different version called "python2.7" I feel for you!
Doesn't OS X still take most of its CLI tools from FreeBSD? I suppose you could submit a patch to that and hope it gets picked up by Apple...
I searched the entire machine for anything named python, i only found python2.6 :’( I will have another look incase I missed it. Livinginhope
You'd probably have to install or compile it yourself. Try like... "yum install python2.7" or something.
No dice, not allowed to :(
It's in my veins!
3.6 supports f-strings.
[Here](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) is a full tutorial on creating a blogging site with flask
Honestly Redhat and corporate structure is more the reason for this kind of thing then anything else.
https://pypi.org/project/jsonschema/ ?
Yup. As a government employee, I am sure that I will be using ArcMap 10.3 for quite a while.
It bugged me even when they had just started doing it. You’d eventually upgrade and they weren’t great at cleanup. I remember having a rediculous amount of Python versions installed back when I used a mac.
https://pypi.org/project/docxtpl/
I’d imagine the python scripts and OS X specific libraries he’s referring to would be Apple owned. No idea what kind of license they would be covered by.
I saw it but didn't give it a deeper look as I won't be checking Json, but just regular dicts/lists. I'll check it out.
&gt; Type Hinting. Initially implemented for Python2 and checked using the same external tool: https://mypy.readthedocs.io/en/latest/faq.html#how-do-i-type-check-my-python-2-code
Not sure you know where you’re at sooooo... Hi welcome to reddit We make a lot of self referencing jokes You may not like this but oh boy wouldn’t you know I don’t care about you small opinion. In other words Ya don’t say...see that’s why 98% of the jokes here work...every inside joke relates to a top post from the past. It’s kinda the whole thing here.
There is a vast fuckup with the concept of "json". json is a serialization format. It is a series of bytes with a specific layout. Unfortunately many different people (especially coming from javascript) a dictionary and its json representation are the same thing (because in javascript they are... well, they aren't, exactly like a python program and its .py they aren't). In python, a dict is a dict. It is then serialised to json (it could be serialized in other ways... pickle, xml, etc), which is a series of bytes. Despite this, plenty of developers keep talking about json and its deserialised form as the same thing.
It's sad that Python3 is being promoted by perpetual newbies, but then again who else would be using it when so many alternatives are available?
Yeah, we already switched ansible to use 3.6, I guess changing the machine image we're using is a better idea. But again, I need to think about developers' pcs as well. And most of our developers need multiple virtualenvs, thus switching will take time. I wish I could automate gui stuff with ansible as well. Then we could setup developer computers extremely fast.
I couldn't agree more. I can say if you work in web development, you see JSON day in and day out and somehow people just expect it everywhere. I would never give up the robust functionalities of dict when it's available to me. And converting something to json just to validate the schema seems pointless. At least that's what I assumed it would be from the name.
It actually works on dictionaries, hence my comment. _HOWEVER_, this library is specifically made to support validation through jsonschema, which is a schema language (serialised in json) to validate json documents (well, their content). So the name is appropriate, just remember that the term "json" is tricky and ambiguous.
I like pydantic because of the use of type annotations.
Its free
Thanks. Looks very interesting. And supports dynamic model creation. I'll check this one out.
[cries in python 2.4]
Awesome, could you pm me the link? It seems to have disappeared.
Me too! We also use C++0x, which is like C++11, but some random features are missing. Which ones? Well try to compile and find out for yourself!
I usually do scientific computing or data analysis for my work as phd, but this week I started learning/part-teaching my dad html, css and python/Django to help my dad get a job and to design a cooking website app thing I have had as an idea for the past 5 or so years.
lol
Yep, but I originally wrote scripts based 3.6 as that is what our tools server was running, then we were forced to support the vendors NMS which has 3.5, so code had to be back ported which was frustrating.
This is the primary decision mechanism for the Python version being used, what's installed on the system.
CentOS/RHEL backports security patches AFAIK.
== is a boolean expression, I learned that in Codecademy. Soon I will understand all the programming jokes and then I will be unstoppable
Because it serves the purpose it was intended for, which is largely around bootstrapping for other system needs. Python 3 offers no significant security enhancements over Python 2 (another major kickstarter for upgrading, especially at the system level).
 if "knows_boolean_expressions" is True: raise UnstoppableError
I use the version as per the packaging and existing codebase and big data etl stack. Migrating well written, stable and functional legacy software does not justify ROI in terms of manpower and expertise required.
Tfw work dictates you use Python 2. I love it and am definitely not depressed at all
&gt;The class is commented as being "experimental", and the interface probably could use improvement [..]. -- &gt;This is very old code, without a mature API. Will take a look at competing recipes to see if this is still the best way of doing this. Both posted in 2009.
[Excellent](https://i.gyazo.com/a0ed55a9fdbf7fe1dd62912f57ac936f.png)
http://pygraphviz.github.io/
RHEL
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Couldn't you wrap that tool in a thin API and run it as a separate process?
Support for older OS's is super obnoxious. And it's not something you can just handwave away, since *customers* use those old OS's... and will demand support for them. Until you EOL support for those OS's, you must still continue to dev &amp; test on them.
The fact that I am too amateurish to understand what you are saying makes me think I could have done it much better. I haven't finished it yet so I am all ears...
it was just irony bro
OP of the top post here. LMAO
So one pattern that's really common when dealing with third party code (any code that doesn't belong to your codebase directly, like dependencies such as your vendors code), is to use the "Adapter" pattern. Basically, for every class/method/function you use in that code, start by writing your own class/method/function around it. All it should do at first is act as a straight passthrough: it takes all the same arguments and simply calls the library code and passes those arguments in and returns the result. What this does is give you total control over how your other code uses the API. Maybe one call in the library ALWAYS takes 4 arguments, but your code always only needs to pass two of them. Your adapter can provide default arguments for the two parameters you don't care about, so now your other code has less to worry about. This also decouples the library from the rest of your code. If, a couple years from now, you change vendors and go with another library that offers similar functionality, you can simply change the code in your adapter classes and don't have to update every single place you use the library in your whole codebase. In your case with the python 3.5 dependency it's a bit trickier. You would essentially need to set up a separate project which has your adapter code around the vendor library, as well as some way to expose your adapter to your 3.6 project. This could be a simple flask API or some other form of IPC (I haven't looked into good python solutions for this recently so I can't give more concrete examples). Now, this might be total overkill or maybe not even feasible/possible depending on how your project works/what it does/how it's deployed/etc. It depends on the individual project. But it's one possible solution that would lead to the rest of your code being able to be run in 3.6.
I've taken it. I personally did not like it. I have a CS major but never did anything with compilers so I thought it would be interesting. While it was interesting, I don't feel like I took as much out of the course as I had hoped. I felt like a week just wasn't enough time for the topic of compilers and some of the details I was hoping to get from the course were glossed over in the interest of time. It's been a couple of years since I've taken this so the format may have changed a bit. That being said, Dave is an awesome guy and an amazing person to learn from. I've taken his compiler course and Advanced Python Mastery course though a previous employer. I can't recommend the Advanced Python Mastery course enough. I took that course probably five or six years ago now and I still have the slide deck handy and reference it from time to time.
Makes sense, hadn’t thought about that aspect. Another possible trade off, haha! Although, if I had data that I needed that level of precision, or had a list large enough that variance calculations would go haywire, I’d most likely need more functionality than a few stats formulas throughout the code, so would throw it into numpy or pandas personally. Vector operations FTW.
RHEL6, I assume, which is still in production-support, and extended-support will add another 5 years at least. Guess you're stuck with Python 2.6, then.
If you are into AI you can try Berkeley’s Pac-Man project. Did it as part of a course at my uni and it was neither difficult or boring. Only problem is that you have to study the algorithms it asks you to write ( breadth first, depth first etc)
But you do see folks running around MIT being racist. [https://www.chronicle.com/article/Professor-Accuses-MIT-of/25468](https://www.chronicle.com/article/Professor-Accuses-MIT-of/25468)
It is, in fact, a terrible source.
You can add a path using sys library
Python 3 is officially supported in 7 and will be the default in 8.
qgis ftw!
Any Python sytemd lib you can recommend?
Same here. Our company is still in the process of transitioning to RHEL 7. My workstation happens to still be RHEL 6. I try to write Python that works on both 2.6 and "3". That basically means I import print and don't use any of the cool "new" features.
I'm forced to use it to because the program bCNC doesn't give me a choice :/
I've been writing Python 3 exclusively for several years, and I still type `print` as a statement at least once a week.
This is exactly what i'm looking for, you are the MAN.
Some of your lines have incorrect numbers of parentheses. Also, pro tip, next time use something like https://gist.github.com to share your code.
from __future__ import annotations
HLS?
There are some modules which don't support 3.x
Try being being a pip maintainer, when one of the MacOS releases comes out, you find out everything's broken for people because someone at Apple had obviously tried installing numpy in the MacOS system python for whatever reason, which included an old version of the `six` package which completely broke pip upgrades, **and then just left everything installed for the final release**. Yes, your MacOS python comes with an uninstallable numpy &amp; associated packages because it's installed globally and has root protections. Those were some fun issues. Oh, and they couldn't be bothered updating OpenSSL for it either which left security holes in any TLS connections you made with it.
Pyenv should let you install everything in userspace. You need git,make and build-essential tough. But well worth it. I have Ubuntu 10.10 with python 3.5 as the oldest.
how do you know? maybe I am the WOMAN. I'm a man ;) We used it quite successfully, but be aware that sometimes it might give odd results (although it's generally because of mistakes in your word document).
This post details how to deploy Apache Spark to a Docker Swarm Cluster on DigitalOcean. Another post refreshed!
My condolences. While I’m not a pip maintainer, OSX upgrades broke my build chains more than once so I can imagine the pain at scale. I don’t really miss it.
I'm trying to create some mathematical function objects to use in a set of tools for scipy I'm planning to make. The idea is basically to wrap python functions in an object with gives them the same functionality (callable) but also stores their parameters and allows them to be added together with just the + operator. I'm new to OOP and overwriting built-in methods so it's a pretty interesting project so far. Not sure if anything like this has already been done or if it's even a useful thing to do by itself. However for my purposes in python I've often wanted to be able to name, save and load "fits" I've made to data without worrying about rewriting anything so this is a way to bundle a function (or multiple functions) along with parameters into an object which can then be imported and plot in two lines. Something like: myfit = load("name") plt.plot(x, myfit(x)) Any feedback (good or bad) or.suggestions for the idea is much appreciated and welcomed
[https://cdn-images-1.medium.com/max/1143/1\*kO5DtT9QhYwsG3rYjh2lQg.jpeg](https://cdn-images-1.medium.com/max/1143/1*kO5DtT9QhYwsG3rYjh2lQg.jpeg)
Well more recently i was looking for stuff on beautifulsoup and i kept finding too many mixed results and it was hard to find something directly. Reading the python docs isn't always intuitive IMO and i usually better understand how something works from others attempts.
Time until Python 2 EOL: 252 days Time since Python 3's release: 3,794 days Time since Apple has included Python3 in macOS, even just as a non-default pre-installed option: T-?¿?¿?¿? ***Thanks, Apple!*** Seriously, I support Macs and it just doesn't make sense to use languages that are not part of the standard build. For my own personal projects I can use 3, but not for most of my work. I'm sure many sysadmins are in the same boat. Ubuntu took a long-ass time to start the transition, as well. I have no idea what's going to happen next year. This is such a piss-poor transition by Apple. It was bad enough *years ago*. At this point it's just ridiculous.
&gt; long ass-time *** ^(Bleep-bloop, I'm a bot. This comment was inspired by )^[xkcd#37](https://xkcd.com/37)
May you explain why you post this here in this sub?
Just skip 3.7, as 3.8 is out this fall
I'm sure there are still some racists hanging out in MIT.
Well that escalated quickly
well, those actually worked on previous ones, but I will try, also, thanks, as i am new in coding :p
so, yeah. I chanced the inner () into \[\] and nothing changed... so yeah, parentheses aren't the problem, but it is also weird as it is showing red on : that isn't different from others.
the 2d4 line has extra ) Also you don't need the space between function name and arguments. print(foo) not print (foo)
??
1.there is no extra ), if you look closely 2. and that space doesn't change anything. both work, it is just a habit. but thanks for the as possible help.
Urllib3 folks using that approach for years. I hope it will be good to requests folks too.
The Networkx library has features for creating and plotting graphs. You can export them to many formats that are also compatible with software such as Gephi. Libraries such as geopy and pyproj are useful for converting earth coordinates to 2D projections if you wished to plot the graph on a map. If you want to get real fancy, using Jupyter Notebooks/Jupyter Lab and something like ipyleaflet, you can plot onto a google-maps style graph in the notebook.
HAHAHA, I FEEL THIS BRO!
High level synthesis.
You are the guy new to programming having advice from the guy who obviously knows what he's talking. Eead his comment again as he's 100% correct and completely solved your issue.
It's the line before 2d6 that is missing a closing parenthesis.
The problem is indeed at the print statement for the 2d4 line. The interpreter does not expect a colon inside parentheses the way that you have it. That line is: print(random.randint(1,4) + (random.randint(1,4)) If I pull out the parentheses and count parentheses, incrementing by 1 on an open ( and decrementing by 1 on a close ), you should end up with a count of 0: 0 (1 (2 )1 (2 (3 )2 )1 But the problem is that you end up with 1, not 0. Corrected, your line should be: print(random.randint(1,4) + random.randint(1,4)) It looks like each subsequent line has a similar issue. I'd like to note that this question should be asked in /r/learnpython like the rules mention, however, and it would be helpful to post the actual code rather than a screenshot, like their rules mention
It's mostly Python with some DevOps.
You have me thinking now. I came across this with a quick Google search: https://wonderful-wrappers.readthedocs.io/en/latest/string_wrapper.html A possible workaround could be have: if sys.version_info &lt; (3, 6) from ww import f This would make it run across both versions (as long as I install the module onto the 3.5 venv's of course)?
Simply having lots of lines isn’t the problem. It’s all s about the degree of coupling and how well things are documented and tested. You really gotta test the buggy module, but the super robust one that has no user interaction...meh...
/r/learnpython
OH SHIT!
Instead of berating the users, I'd recommend berating the module maintainers who haven't upgraded to 3. That's the main reason users are still using 2.
Thankfully it's planned to move to 3 in 2020
There were a few things. One I discovered just yesterday. I was comparing networks and it turns out that `ipaddress` module in 3.6 has no baked in way of comparing subnets, but 3.7 does. (sure, it's a 1 liner when you look for it on StackOverflow.) Data Classes! OMG. we model our data in and out all the time. And Data Classes are a boon. Looking forward to this. We use Type Hinting a lot in our shop. Type Hinting enhancements: https://realpython.com/python37-new-features/#typing-enhancements My shop is also looking into implementing `async` and `await` in our codebase, so it's nice that both are formalized keywords now: https://realpython.com/python37-new-features/#async-and-await-are-keywords Looks like there are other optimizations, too: https://realpython.com/python37-new-features/#optimizations Honestly, it looks like a no-brainer to upgrade to 3.7 from 3.6
i looked at it quickly and i didn't see it. i apologize a lot. thanks for nothing my mistake... i am very thankful for you all.
NHF, but I see no Python there, just some shell scripting.
I hate to judge but when it is about Python 2.x I can relate lol
Companies don't understand that if they don't switch from python3 quickly, not only they will get code that is officially unsupported, but won't be able to find anybody willing to keep working on a language version which is technical suicide for a professional.
1. /r/learnpython 2. `subprocess.call` doesn't normally do shell redirection like that, but you can use `subprocess.PIPE` to get the data directly into your script, which is probably what you wantt.
ah fantastic, thank you. Sorry i'm still pretty new to python.
Complain not! Think of all those people still programming in COBOL!
No problem, just use r/learnpython next time and do not post image of your code. Regards!
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [Why study programming when you can just play an RPG?](https://np.reddit.com/r/learnpython/comments/aw0au0/why_study_programming_when_you_can_just_play_an/) \#2: ["Automate the Boring Stuff" author refactoring beginner's code on a live stream Wed 4/17 at 7pm pacific](https://np.reddit.com/r/learnpython/comments/bdzedl/automate_the_boring_stuff_author_refactoring/) \#3: [Al Sweigart, author of the legendary 'Automate The Boring Stuff' book (and many others) now streams beginner-friendly live coding on twitch!](https://np.reddit.com/r/learnpython/comments/ao3zq2/al_sweigart_author_of_the_legendary_automate_the/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
NHF? https://github.com/testdrivenio/spark-docker-swarm
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
*Beep boop* I am a bot that sniffs out spammers, and this smells like spam. At least 100.0% out of the 2 submissions from /u/IshanFreecs appear to be for courses, coupons, and things like affiliate marketing links. Don't let spam take over Reddit! Throw it out! *Bee bop*
Well if it were up to me... Very little software in my field support 3+
And I am going to explain why I don't care: &gt; Format agnostic. You can use DepHell with your favorite format: setup.py, requirements.txt, Pipfile, poetry. DepHell supports them all and much more. I don't want something format agnostic. I want one and one solution which is the standard and everything else is deprecated. I don't want to depend on a tool to address deprecated tools. Deprecated tools must die. &gt; Use your favorite tool on any project. Want to install a poetry based project, but don't like poetry? It's not about liking or not liking. I want one solution. I want to learn it well, I want to be able to use it. I generally have 20 minutes in my day job to learn and become proficient with a tons of new technologies that keep creeping up and I frankly don't give a damn about most of them because they try to solve a problem that is not even there, but are decided by whatever moron is above me or that decides to pick their own pet solution and now I have to deal with it. &gt; Easily extendable. Pipfile should be just another one supported format for pip. However, pip is really old and big project with many bad decisions, so, PyPA team can't just add new features in pip without fear to broke everything. This is how pipenv has been created, but pipenv has inherited almost all problems of pip and isn't extendable too. DepHell has strong modularity and can be easily extended by new formats and commands. It's the damn numpy numeric shit all over again. &gt; Developers friendly. We aren't going to place all our modules into _internal. Also, DepHell has big ecosystem with separated libraries to help you use some DepHell's parts without pain and big dependencies for your project. Do you think I have the time or the inclination to bet on something that may or may not solve a problem that should not be there in the first place if I just pick one and stick with it? &gt; All-in-one-solution. DepHell can manage dependencies, virtual environments, tests, CLI tools, packages, generate configs, show licenses for dependencies, make security audit, get downloads statistic from pypi, search packages and much more. None of your tools can do it all. And make coffee and call 911 in case of emergency. Have you have ever known the Unix philosophy https://en.wikipedia.org/wiki/Unix_philosophy#Do_One_Thing_and_Do_It_Well &gt; Smart dependency resolution. Sometimes pip and pipenv can't lock your dependencies. Try to execute pipenv install oslo.utils==1.4.0 . Pipenv can't handle it Why? Because it's buggy, because its dep resolver is crap? WHy your works? are you using a different algorithm? What if pipenv just reimplements your algo instead, so it works, negating the need for your tool. You could have implemented your algorithm in pipenv instead. &gt; Asyncio based. DepHell doesn't support Python 2.7 And that's already a disqualifying point in my opinion. A _LOT_ of companies still rely on py2 and py2 dependency management, and that's not going to change for at least ten years. Companies don't want to upgrade. because it costs money, a lot of money, that they don't have to fix a problem they don't want to have. &gt; and that allows us to use modern features to make network and filesystem requests as fast as possible. And that's a problem how? First, I resolve dependencies from a local pypi. Second if I use continuous integration, I can use caching. &gt; Multiple environments. You can have as many environments for the project as you want. like pipenv. like conda, like edm. &gt; Separate sphinx dependencies from your main and dev environment. Other tools like pipenv and poetry don't support it. Don't support what? doc dependencies? they are dev dependencies. So? Personally, I think what you did is a technical feat, but the reason is that _THERE_IS_ALREADY_ENOUGH_CHAOS_. Don't make it worse, because tomorrow I'll have to deal with your tool as well, which you will stop updating, and now I have even more annoyance to deal with.
i will learn from my actions, i promise.
EPEL has 3.6 for both Cent/RHEL 6 and 7.
For one example, asyncio has been changing all over the place. You can go through the lists of deprecated, changed, and removed features if you like. It's a maintenance headache to share scripts with colleagues who may have different pythons set up, with their own versions of compatible libraries and so on.
I use a range of 3D software that is all scripted using embedded python 2.7 interpreters. I have no option but to use python 2. Also, I have to maintain **decades** worth of software development that was all done in python 2. The switchover in syntax from python 2 to 3 isn't the hard part, it's the forced simultaneous upgrade of many libraries that don't have equivalent api's available in python 2 and python 3 binaries. Granted, it's the 3D industry's fault for waiting this long, and allowing such a large gap to grow between python 2 and 3 libraries. But also, to be fair, python 3 wasn't production ready until at least 3.5, and there was spotty library support up until 3.6 unless you wanted to fork, maintain, and complile dozens of third party python packages yourself. So, at most, the 3D industry is like only a year behind.
Apple does release most of the non-GUI stuff in OS X as open source (Darwin). It's more of a "throwing it over the wall" kind of open source, though, so there's probably no good way to send patches.
Eh....technically that would work, but the syntax is different and makes ALL of your strings dependent on that library being correct. Not to mention the note they have at the bottom of the page regarding code injection. Depending on what your app does, that could be a real security concern. If you can't go the separate process route, probably best to just stick with `format()`.
Write an editor snippet (or TextExpander, etc. macro) to replace `print ` with `print(`.
We use pyenv on CentOS. I don’t know and don’t care what the system version use because we don’t touch that steaming pile.
&gt; I want one and one solution which is the standard [Obligatory XKCD](https://xkcd.com/927/)
&gt; I don't want something format agnostic. I want one and one solution which is the standard and everything else is deprecated. I don't want to depend on a tool to address deprecated tools. Deprecated tools must die. I think that's unrealistic. I can't think of anywhere that has happened, both inside and outside of programming.
Yeah. The Titanic is stable in much the same way: it’s not moving, but parts are starting to flake away.
Whatever is in the standard library and in the PEPs is the standard. There should be one, and possibly only one, obvious way to do it.
You mean like minidiscs, VHS, Betamax, laserdiscs, CORBA...
Yes
1. /r/learnpython 2. Sounds like you're reading the wrong file.
\&gt; NHF? Yes, I want to reveal in a civilized manner why you think this blog post deserves place in r/python. \&gt; [https://github.com/testdrivenio/spark-docker-swarm](https://github.com/testdrivenio/spark-docker-swarm) I still don't get it, I'm afraid. What qualifies your post more to this sub than, for example, [this](https://help.instagram.com/155940534568753) or [this](https://www.linode.com/docs/databases/postgresql/use-postgresql-relational-databases-on-ubuntu-12-04/) or you just think they both should be posted here?
May the force be with your long and prosperous life!
I see what you're getting at, but those are physical objects that require an expensive factory to produce. Software doesn't have that, nor do propgramming techiques, and even COBOL and Smalltalk are still around.
Argh....figured it out...one of my unit tests provides a zip file instead to ensure that it DOES fail, but I forgot to assert the failure.
Brackets: {} Parentheses: ()
I have a similar repo on github: [https://github.com/neozhaoliang/pywonderland](https://github.com/neozhaoliang/pywonderland), it's also aimed for "showing math by code". It's not so intuitive as 3b1b's videos, but the math involved there are much more complicated than manim and it can produce better videos/animations/images. For example here are some video made by the \`polytopes\` project: [https://commons.wikimedia.org/wiki/User:Neozhaoliang](https://commons.wikimedia.org/wiki/User:Neozhaoliang)
&gt; I want one solution. One size fits none.
Software definitely has that, and is as expensive. The amount of legacy we have to deal with is immense. What OP did was basically a movie player that plays dvd, bluray, vhs, betamax and minidisk, all in one. What the community needs is a bluray player that works.
Brackets: [] Braces: {}
One thing I was surprised I needed in 3.7 was specifying a multiprocessing context for a processpool. Didn't realize it was 3.7 specific til it wouldn't run on the server hah
I went ahead and deleted it.
Packaging stuff should be a solved problem at the level of language. Packaging has a handful of use cases that should be simple, easy, straightforward, and not require you to pay for things you don't need. This is not currently the case. Python in particular has been overwhelmed with this mess for years. zc.buildout, scons, distutils, setuptools, distutils2. It was a shitstorm, and still is. People can't do anything productive having to follow the trend of the day in packaging. And if you claim "well just pick one and stick with it" obviously you have never worked in consulting, or in large companies where there's no coordination in these kind of choices. The amount of productivity that is wasted to deal with these turf wars is depressing.
This kid must be a freshman because MIT didn’t switch to teaching python 3 until 2 years ago.
Bra: &lt;| Ket: |&gt;
I think of all the money they earn because they program in cobol
Asyncio saved my life. My company wanted to migrate every python application to Java because of some slow response times (which were caused by an external API who sometimes is unstable and have high response times). \`aiohttp\` with `asyncio` save us from rewriting everything in Java just to have the same problem. Now our python application is outperforming most of our Java applications. hehehe
And now my nick is changed to Boogie Man...
Maybe the majority of the API data is about people documenting API's. Some people are really bad at documentation.
No worries. :)
All the packges the project supports, I can easily build today if I need to. There is some very old code I can't build on modern linux (like ancient C files) but I can install an older linux distro in a VM and build it there. Maybe I can't build B code that was supposed to run on a PDP-11 but I'm not dealing with that, neither is this project, and it was never a universal standard to begin with. I just don't understand your analogy or why you treat the OP's software like a physical object.
Obviously, your workplace promotes racism
I feel your pain, brother.
Round brackets: () Square brackets: \[\] Curly brackets: {} Angle brackets: &lt;&gt;
It took time, and time is money, but I've done exactly that. 600k loc not counting comments, blanks, etc.
All the jews there are racist. The more you learnTM.
&gt; There should be one, and possibly only one, obvious way to do it. Yeah, when angels dance on pinheads. That's not how ANYTHING works in the real world, not even in Python. Religious adherence to the Cult of the Pythonic does not solve problems, it only gives you excuses.
Maybe you should quit your job at the KKKernel Dev Team.
Well, it looks like you're into DnD. What about creating a script that prompts a player for values and populates a character sheet?
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programmerhumor] [Python 2 == racism](https://www.reddit.com/r/ProgrammerHumor/comments/bgvwdb/python_2_racism/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
This is the first one I've liked! I posted some sample code and, after fixing a minor formatting issue with the code, it worked! Everything else I've tried wants me to install libraries, but I'm a noob. Eventually I'll get into installation, but for now I just want to be able to write, edit, and run, and this site made that easy for me. Thank you!
At least it wasn't python 1 as was [proposed for the james webb space telescope](https://www.reddit.com/r/programming/comments/bglvey/the_9bn_james_webb_space_telescope_will_run/ellybii?utm_source=share&amp;utm_medium=web2x).
Visual studio code is the future
What’s your recommendation for macOS users then, virtualenv + pip?
This is an excellent analogy! I love good analogies, and what you've got here is a good analogy.
&gt; having a ridiculous amount of Python versions installed back when I used a Mac This is where I’m at right now. Like 7 python installations, multiple pip’s, home brew, anaconda stuff, it’s crazy. It’s been getting very messy ever since I started learning Python. I would like to clean it up, finally, and make it more simple and efficient. Do you have any suggestions on how to do this or how to keep it organized, simple, etc?
3pm ET happens when this comment is 3 hours and 27 minutes old. You can find the live countdown here: https://countle.com/AxBHDLPd7 --- I'm a bot, if you want to send feedback, please comment below or send a PM.
I use conda. It makes it very transparent which Python I'm running and easy to switch without the need to set up a virtual environment.
Not even 10.6?
*laughs in geopackage*
Why do people care so much about whether or not someone is using Python 2?
Maybe their well-being in life depends upon everybody using Python 3?
Source?
That escalated quickly well.
Line brackets: '' Double line brackets: ""
Thanks, what OS are you on? Do you use it in conjunction with Anaconda or without it? I am not a fan, personally, of Anaconda/Miniconda so I am curious if you **just** use conda by itself as a package manger.
At work we're currently switching to asyncio from [`asyncore`](https://docs.python.org/3.3/library/asyncore.html), and it's **much** better. Personally I prefer gevent because threads make more sense.
Same here. &gt;=3.6 forever!
The variable explorer is huge. That'll be great for helping RStudio users make the transition to Python, and helpful for teaching beginners too.
We are having our CentOS customer use Anaconda for 3.7, so far so good.
At this point, I don't know what the advantages of Python3 are, and I'm afraid to ask...
Sorry, I meant Anaconda as a whole, and I use macOS with it.
I'm still new to Python, but have been programming in other languages for awhile now. Decided to give it a go, and it's amazing how diverse and straight-forward the language is. I'm impressed. Anyways, I'm working on a password encryptor/decryptor. It's a personal project for myself.
You don't really need one, except to wrap a single call to `sd_notify` at startup (and even then, only if you aren't using a `.socket` service, which is normally what you want). Just write an ini-compatible unit file and drop it in `$XDG_DATA_HOME/systemd/user` (which is technically optional, but otherwise you have to specify the full path - maybe useful if you use `--runtime`), then call `systemctl --user enable`. See [`systemctl(1)`](https://www.freedesktop.org/software/systemd/man/systemctl.html) and [`systemd.unit(5)`](https://www.freedesktop.org/software/systemd/man/systemd.unit.html) (and other pages as referenced) for a *lot* more details. That reminds me, I've always wanted to write a `make(1)` replacement using runtime units ...
This makes it cumbersome to use all the features of the library. It's better to abstract on the level of domain functionality, with methods like `save_customer_info` whivh you can implement to persist in a PostgreSQL, MongoDB or even flat files on disk. If you abstract on the level of technologies, you only get to use the lowest common denominator.
Near sighted vision! I see this all the time in industry and not just with programmers. If a shop is totally directed at Windows software for internal use they will have a very biased opinion of other technologies. Further they will freely express those opinions even if a rational view of the industry indicates that they are mistaken. I’m not saying this is right but it is extremely common for people to look down upon others working even slightly outside of their little niche. Sometimes this is associated with what I would call extremely insecure individuals that take other technologies as a threat.
In for results
This was the text book for their introduction to computer programming course. Published late (too late for fall semester maybe?) 2016, the first time they updated for Python 3. https://www.amazon.co.uk/Introduction-Computation-Programming-Using-Python/dp/0262529629
Whilst Python 3 has been out for that long, Python 3.3 was the first version that was really viable to port to, and third party module support has only reached critical mass in the last couple of years. It's also, frustratingly, proved quite hard to "start" upgrading. The only real viable way to port to Python 3 is to port to the intersection of 2 and 3 (so-called Python 6), which is a terrible language, so in practice you spend a few months (or at least that's what we reckon it'll take for the codebase I'm currently working with) making your code worse before you can start making it better again. You definitely shouldn't start unless you've got the momentum to finish!
It's said that Python3 is faster than Python2. Also, you can press `f"To pay respects"` to Python2.
Do you approve? The other guy is too hipster for me
Yes he's way tooooooooo hipster
I'm utterly surprised you haven't pulled the trigger yet.
I use Python Sheetfu (I'm co author). Easy, intuitive and clean syntax at your service: [https://github.com/socialpoint-labs/sheetfu](https://github.com/socialpoint-labs/sheetfu)
how does it compare to docker?
huh, I must have missed that. Thank you
Wow, I'm pretty shocked that this book was published in 2016 and they're still using Python 2. The author did state in the preface that the back half of the book was converted to Python 3, however.
I'm ok with people just moving to py3 but wtf is this person on?
Just for another random Python 2 usecase, I do competitive programming on Codeforces and such and you pretty much have to use Python 2 for a lot of problems. It's about 2-3x faster than Python 3 for most applications, because if you're using integers under 2^63 - 1, then Python 2 will use C-style long longs, while Python 3 uses its poorly-optimized arbitrary precision integers for any value above 255. But yeah, if you're writing production code in Python 2 then you're a racist.
The tool I use for work is 2.7 =_____=
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Yeah that’s why I linked that book. That was the source I could find for when they switched from 2 to 3. I remember being bummed when I took that course about 2.5 years ago, and feeling like I was learning outdated material even though learning Python was not the purpose of the course.
Thanks. I have seen his talks and have them to be very informative.
F
_You_ try to convince the 5-deep double desk row of artists who only know 3DS Max to do that. Real talk though: As a Tools engineer it was part of my job to help their tech artists to help them do the things they needed to do. We actually didn't restrict them from using 3DS Max, but if they wanted to they'd have to do another export/import step and make sure it looked good in Maya so we could pipe it from there. Maybe could have set something up with Blender? But my knowledge in that area isn't as deep as our tech artists was.
Fuck, I STILL do this. Just with print though, idk wtf it is 😩
Yeah it hurts. A lot.
This seems like the easiest solution. How exactly did you do it? Did you follow any tutorial you would recommend?
Thanks for the comments. I just have a few more questions regarding the compiler course: 1. Did you actually write a compiler from scratch (ie. starting from an empty folder)? or was it more like a coding walkthrough where Dave would explain various parts of a partially completed codebase and just have the students fill in the blanks? 2. Given your experience with the course, do you think it would have helped if one took a high-level online course on compilers before hand? 3. Do you think the reason why you did not get more out of the course arises from you already having a CS background? For example, were you already somewhat familiar with the Practical Takeaways described on the course page: [https://www.dabeaz.com/compiler.html](https://www.dabeaz.com/compiler.html)
Don't use codecademy
See the [rationale](https://www.python.org/dev/peps/pep-3105/#rationale). The only reason for `print`'s having had no parens is that it allowed `print "Hello world!"` to be shown off as an example of "Python is simple!!!!"
I will check it ty
Because you should use a virtual environment for every python project anyway...
Awesome!.. Inter process communication's can also be done well.
I moved to python after something I made in VBA did not scale. I do respect it too but yeah I still don't want to ever deal with it again.
Its not even that painful of a transition honestly. But [here](https://docs.python.org/3/whatsnew/3.0.html) is the official guide. It doesn't cover any features that were introduced after 3.0, but it gets you to python3 compliant code at least.
This will never raise an exception, those are two different strings, so they'll return False. You either want to make left part of the equation a variable, or use != operator, so the equation will return True and raise an exception. Sorry for lack of formatting, I'm on mobile and have no idea how to do it.
You'll fare a lot better if you force yourself to read the package documents. I know not so if them are written well but beautifulsoup docs for instance looks intimidating but very rich in info. However if your looking into Stack Overflow answers they're usually Py3 questions. Most Python blog are also written in 3.
I do use venv for every project.
Heck yeah. Looking forward to it.
Interesting. I would've had the same thought. Thanks for sending source!
I source as much material as possible be it official docs, stack ovetflow, random forums and also git repos and their wikis. In a lot of cases official documentation is not written with real world application in mind. I have always understood better from a real example and how its used than a document explaining a function and its arguements. So I disagree with that for myself personally.
Me too, it's infuriating. Why they couldn't have kept print as an alias for print() to help out new people is beyond me.
You must've seen one of the very few sensible mnemonics it has then
Why not manage everything from Anaconda? You can manage each project with its own virtual environment, python version etc. from there and forget about everything else you may have installed.
Very different tools. You could use this inside docker though.
I just tried this on the random json in this post: [https://www.reddit.com/r/learnpython/comments/bgwor1/iterating\_over\_jsonloads\_dictionary\_to\_change](https://www.reddit.com/r/learnpython/comments/bgwor1/iterating_over_jsonloads_dictionary_to_change/elo8p4x/?context=3) It works great! I can see myself calling on this, as I do a lot of this sort of thing with API's at work! My colleague has written something similar to generate dataclass models from swagger specifications, but this will be a great tool to add to the arsenal, thanks!
1. Sort of. Depends on your expectations. It’s been a long time but I can say for sure there was a lot of code involved, so much so that some people did not finish. IIRC, some code was provided but there is no shortage of writing your own. 2. Again, I think this depends on what you want to get out of the course. If you want to know how to use libraries in python to build a custom compiler this course is fine. If you want to get more into the details of the individual stages of the process you may be a little let down. Some of the more interesting (to me) parts were abstracted away with libraries because there just isn’t enough time to cover everything. You will definitely learn to appreciate the concepts from this course. 3. I think I must have been expecting too much. My gut feeling when I left was that it was interesting but I really wished less of the process was done in the libraries used. I don’t think my CS background ruined this course as this was all new information to me. I never had any sort of formal coursework on compilers. Again, please take all of this with a grain of salt. It has been quite a while since I took the course so some of this may have changed and some may be my mediocre memory. All that being said, if you have specific questions I would strongly recommend reaching out to Dave. He is super helpful and I’m sure he wouldn’t hesitate to answer any of your concerns.
MIT Confessions hijacked by Vegans
I'd suggest the new Panel library (panel.pyviz.org), which builds on Bokeh but gives a much simpler approach for data analysts than either Bokeh or Dash.
Rogan?
Yes. You use venv for every project. (Note: That "personal practice stuff" can easily be one project.)
I'm trying to decide on a library for retrying execution of code. # https://pypi.org/project/retrying/ last updated 2014 # https://pypi.org/project/tenacity/ still active in 2019 Have you used any of these libraries before? Or perhaps you have a recommendation for another library? The only requirement is that it works for python 2.7.x
Now with Walrus (:=) operator^* ^^^* ^^^does ^^^not ^^^include ^^^Guido ^^^as ^^^BDFL
If you use redhat/centos, take look at https://ius.io you can use different versions and even have multiple versions installed side by side. I would recommend to create virtualenv from selected version and install application there.
Ironically that would be a very non-sexist thing to do :)
Good to know. Thanks for taking the time to answer my questions. Sounds like the course would still be useful for me given my background. If I can come way with even just a high level understanding of what my computer is doing when I run my python script I think would still be worthwhile.
Of course a student posts this. I love Python 3 as much as anyone but if you actually work in the real world the reality of having the business bandwidth + budget + leverage with management to justify porting a robust, critical, and above all WORKING system can be tough at best, impossible at worst, especially if critical packages are not compatible. For reference, I remember Instagram talking at Pycon a couple years ago about their change to Python 3 and the cost in developer manpower was in the order of millions, on a scale that took nearly a year. That’s nearly a year of stuff developers could be working on instead being pushed back, and without a clear deliverable to present to management or stakeholders. Of course, the argument is to prevent catastrophe before it strikes, and eventually those who lag behind will suffer some sort of business setback as a result. Tl;dr, just start work in Py3 if possible, port your apps if it is easy and compatible with your package list, and if not, keep on trucking.
You seem to be confusing between Python and its ecosystem. As this [tweet](https://twitter.com/theavalkyrie/status/996286596847624192) from a PyPA member points out the *Zen of python was written for the language itself NOT the ecosystem*. Package dependency resolution is a hard problem especially for a language like python which is used extensively together with other languages. Vast number of packages have C/C++ library dependencies (even Fortran for Scipy) which is very hard to address using a source based package management system. This is a problem that is yet to be solved completely which is why we people are still trying to put forward their own solutions. That is the whole point of open source after all. So instead of being a d\*ck to someone who spent 8 months on developing something and complaining about things, maybe try to be more constructive and help others who are actually trying to solve this difficult problem?
Well, for how much detail you've given us to work with, all I can say it that this should be very possible but obviously you are doing something wrong.
Good. You should! makes life much easier. I'm rereading your question and am afraid I didn't answer it right. Both MacOS and some older versions of Linux ship with older python versions. These python versions typically support the install / setup / maintenance programs of the OS. They just didn't upgrade that part of their software for a long time. (Figuring that developers would use a venv anyway...) Ubuntu finally did. I expect Ap[ple to follow before EOL of 2.7xx
https://xkcd.com/927/
Sorry, this is the code I've written. Sorry I'm on my phone and had to type this out import pandas as pd import urllib.request path = 'random path' dest = 'random destination' data = pd.read\_csv(path) links = data.iloc\[:7\] file\_names = data.iloc\[:8\] names =\[\] for name in file\_names: names.append(name) i=0 for link in links: urllib.request.urlretrieve(link, path2+names \[i\]) i=i+1
Ok
But it isn't an invalid argument for package/app/project management. I would really like to _not_ have to choose between Pipenv and Poetry - it would be really nice if we all could agree on one of them.
This I can really love
1.Are you sure this is for macos ? 2.I've tried to get IDLE's pid through other ways but i couldn't get anything, are you sure it would work with this ? And if yes, what should I pass in os.getppid() ?
Just to be clear, this class isn’t about compiling python. You actually write a compiler for a brand new language your through the course of the class. I know it says that right in the description but I would feel uncomfortable not reiterating that fact.
The problem with old print was that it was a statement not a function, it was processed by the parser. You could actually use the new print() function via future since python 2.6 that was released over 10 years ago (2008) and EOL in 2013, so I don't think you have any excuses.
Yes I understand. I suppose I meant understanding what my computer is doing when I run "a" script, not necessarily python. Thanks again for your comments.
I don't think so. There isn't a way to do that with Scipy, skimage, or cv2 either. Though, to your credit, [it isn't that no one else wants to do this](https://stackoverflow.com/questions/55788027/scipy-signal-filter-an-image-with-radially-symmetric-bandpass) - it's just that there isn't open source tooling for it (that I can find).
It is invalid for the same reason I mentioned in my original comment, it is no longer a problem at the level of the language itself. Dependency resolution is a higher order problem and has to do with not only a specific programming language but also on the organization of the programs themselves and their dependencies. There cannot be a single way that works for all kind of projects, there is just too much heterogeneity in any large scale project. Pipenv and even poetry does a great job in managing some of it but they can (and does fail) on many instances.
Damn. Guess I’ll just have to research it and see if I can create something of my own; this should be an adventure
Why not?
Signal processing like this is *really* hard. You can find the relevant equations to modify the (easily found) low pass filter equations for different filter types (butterworth, chebychev, bessel, linkwitz, [...]) in this PDF - https://www.analog.com/media/en/training-seminars/design-handbooks/Basic-Linear-Design/Chapter8.pdf Then you just need to replace the frequency variable with the radial frequency variable for the image. The Naive approach you can find in a lot of tutorials is to just punch out an annulus in the frequency domain, but this has two (very large) problems: 1. The image is not padded, or is padded with zeros - this puts an edge at the boundary between the padding (or end of array) which creates high frequency data along the Cartesian axes of the DFT. The correct padding is subject dependent, but linear_ramp from numpy.pad is (probably) the optimum general choice. 2. By just punching out some frequencies by setting them to zero, you create a new edge in the frequency domain that will result in ringing in the spatial domain due to the gibbs phenomenon. This is why you need to use a real filter like butter, cheby, etc; they are designed to have certain properties w.r.t these things. The topics you need to dig on are signal processing/filtering, FIR filters, IIR filters, causality in filter design, phaes shfit/group delay, passband ripple / impulse response ripple. If you have time to kill, in a month or so I will end up implementing these things in my open source optics package (probably - they're on the v16 todo list).
Sweet thanks for all the info; I might also try implementing it myself even just for the challenge. Thanks again!
Hacking together a program to run and get the local weather as well as a quote of the day. I'm doing this for the 3rd time because the first time I made it I lost it before I could upload it to github. The 2nd time I lost it because I upgraded from python 2 to 3.7 and it broke a lot of my code. I ended up restarting from mostly scratch so I can learn to us more logging features from the ground up. Still, haven't uploaded it to github but at least I have off-site backups now.
&gt; You seem to be confusing between Python and its ecosystem. There's no confusion. These directives are safe directives for any circumstance and at every level. It is about guarantees about team knowledge. &gt; Package dependency resolution is a hard problem especially for a language like python which is used extensively together with other languages. Vast number of packages have C/C++ library dependencies (even Fortran for Scipy) which is very hard to manage in a system independent way using a source based package management system. This is completely orthogonal to the tool in question. &gt; This is a problem that is yet to be solved completely Both Enthought and Anaconda have compiled, platform dependent dependencies and solvers to perform effective lookup of the dependencies, but again, this is unrelated to the topic. &gt; So instead of being a d*ck to someone who spent 8 months on developing something and complaining about things, maybe try to be more constructive and help others who are actually trying to solve this difficult problem? It happens that I did (not anymore, I changed job). but aside from that, the point remains. If the guy really wants to help, what he should do is not create just another tool. He should help those which exist, and possibly write a good overview of what's currently the best practice, as of this day, on how to manage packaging and distribution. We don't need more tools. We need clarity.
You may as well ask "Why are we still using teletype simulators? "
You will need to simulate the login and store the session cookie where your script has access. I use the requests module that is based on urlib to do it. something like this: import requests url = "" headers = \[\] auth = (user,password) cookiejar = requests.cookies.RequestsCookieJar() r = requests.get(url, verify=False, headers=headers, auth=auth, cookies=cookiejar) print(r.text) # this is the served page
So I listen insecurely on port 80 and securely on port 443 with the middleware redirection. The advantage I'm after is the termination of HTTP/2 within Hypercorn as this lets me send push promises from Hypercorn (with time I hope to have Hypercorn manage the priorities as well). On a more minor note it is also a simpler deployment, as I no longer also need to deploy nginx.
I am not sure it will work for you. It worked for me on my Macbook. But it seems relatively cheap to try, just open IDLE and paste in the commands. Like, it would have been easier for you to try it than to ask me if I was sure. You do not need to pass anything to os.ppid(). Also, is there some reason you have to run the script from IDLE, instead of running it directly? If you did that, exit() would probably work better for you.
Using await/async extensively.
If you want to kind of bullshit it, I did have a few ideas for how to round off the filter edges effectively: 1. Make the mask (1 or 0, binary) for the kspace domain. Convolve it with a gaussian (or other blur kernel) of some width to round off the edges. 2. Use a flat top window function with reasonably sharp edges (such as welch) to create the mask for the kspace domain. You can find an implementation of the 2D Welch window in my library here - https://github.com/brandondube/prysm/blob/master/prysm/interferogram.py#L217 You would need to modify this to make anything other than a lowpass, using the info from my last comment. GH_FFT is a great reference for the FTs of windows - https://holometer.fnal.gov/GH_FFT.pdf Since your window is in the kspace domain instead of spatial, "frequency bins" is really "pixels"; you want to see an absence of content, aside from the 'main lobe,' close to the origin (say, within 5 bins). Ex, the bartlett window has first sidelobes at ~-30dB vs ~-15 for the rectangular window (that punch our idea that I said was bad). So you want to simultaneously optimize PSSL from Table 2 in GH_FFT while also maintaining a good flatness within the bandpass (the upper-left hand plot on each window's summary page).
It’s exactly what you suspected, I looked at the file path of the Python.exe run from the straight program and it was running from a different location! Problem solved Thank you
I think they meant keeping the statement as an alias for the pure function call. Though that might complicate syntax analysis (both a keyword and a name) and introduce ambiguities.
Thanks ! I'll try it later once i get on my computer, but what do you mean by running it directly ? Like on the terminal ?
Great info! I will try that ASAP!
&gt; These directives are safe directives for any circumstance and at every level. No they are absolutely not, it life (and programming) was that simple then we would be in a different place. You cannot be this simplistic. &gt; This is completely orthogonal to the tool in question. Did you even look at what the tool is about? Dependency resolution is one of the key thing it (and other systems it aims to replace like Pipenv, Poetry etc does). Dependency is a higher order problem and when a tool made today depends on a library made 10-20 even 30-40 years ago coming from a different part of the world all bets are off. The reality is that many of the tools today depend on libraries packaged in different way which was standard at that time/place. So there cannot be a single solution. &gt; We don't need more tools. We need clarity. That's true, but when a problem doesn't have a clear solution and existing tools don't work for a particular case, developers will build new tools that take care of that problem. If they are good and extensible enough then they will become the standard (for a while) until someone comes up with something better. That's how software has evolved since the beginning. There is no written constitution that specifies how everything is to be done in software, that's not how it works.
&gt;I want to work with the tech I enjoy &gt;Start a business so now you have to manage a fucking business and never do anything with tech gtfo of here with that shit
Just worry about the tech side of it. Create a product that people want, and the business side will handle itself.
Extended line brackets: ||
Throwing my hat into this ring as well. TIA
Any luck? I'm also looking for one last minute.
Wow I didn't know about these. They seem pretty convient, intuitive, and look nice. I've also read that they are faster than the alternative methods. Thanks!
¿query brackets?
&gt; Did you even look at what the tool is about? Dependency resolution is one of the key thing it (and other systems it aims to replace like Pipenv, Poetry etc does). Ok, why should I care about his tool vs instead poetry? or pipenv? There are at least 10 projects doing the exact same thing. I am _tired_ of spending my evenings trying to keep up with every new fad about packaging that may or may not become "the way" tomorrow or may or may not be thrown in my face tomorrow by someone. I literally _can't_ code anymore to just keep up with all this shit. &gt; We don't need more tools. We need clarity. &gt; &gt; That's true, but when a problem doesn't have a clear solution and existing tools don't work for a particular case, developers will build new tools that take care of that problem. If they are good and extensible enough then they will become the standard (for a while) until someone comes up with something better. That's how software has evolved since the beginning. There is no written constitution that specifies how everything is to be done in software, that's not how it works. You know what would work? When the PSF decides "this is how we do this. Period" when it comes to packaging. Exactly what worked when we stopped having hundreds of linux distributions all incompatible among themselves, or having numeric vs numpy. I am not willing to participate in a "format" war. Pick _a_solution_ and let people do their work. I don't have time for this.
Another problem is that system tools *must* deal with strings of unknown encoding. Python2 easily handled this with byte strings, but python3 removed/broke many of the APIs that took/produced byte strings and doing it with unicode strings is *really* ugly and incompatible with python2 (the `surrogateescape` handler does not exist). Python3 was a *huge* step backward for string support for people in the real world.
I heard that GSM module few years ago. That's crazy, wow!
&gt; DepHell doesn't try to replace your favorite tools. It extends them. Do I need to extend them? &gt; It allows you to have smart resolver in pipenv Do I need a smart resolved in pipenv? &gt; converting in setup.py for poetry Do I need to convert setup.py in poetry (whatever that means)? &gt; smart lockfile for pip Do I need a smart lockfile for pip (whatever that means)? &gt; install projects in any format without having poetry/pipenv/etc on your system. This is already like this. I never needed any of that stuff to install anything. I need pip and venv. &gt; And also it makes much other cool things Which I don't need. &gt; like download stat for package Who cares? &gt; licenses overview I go to pypy and check the license. &gt; outdated packages check. pyup. &gt; None of existing tools can do it. Maybe because nobody needs it.
You'd be surprised what you can do on it.
I wish I could, yet it's pretty expensive and hard to register imei in Turkey. If I can clone imei to it, then there's hope for me :)
Thx. I'm going to watch how this pans out... \- for now I'm learning by redoing a Flask project on digitalocean using hypercorn/nginx/quart/letsencrypt \- nginx can do http/2 terminations &amp; push promises now as well as other stuff \- but I really hope hypercorn grows &amp; thrives \- scuse the bad pun
More on the topic, by Nick Coghlan http://python-notes.curiousefficiency.org/en/latest/pep_ideas/core_packaging_api.html
When there's only one python guy, you only need one version
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Yep, and if you understand how red hat does their releases you would know that they won’t update the version. So if 8 releases with 3.7, and 3.7 is eol’d the next day, guess what, you get 3.7 for the entire life cycle of 8 with security patches back ported.
If you're talking about CentOS 6, there most certainly is a way.
Sure, here is another way to use defaults: s = [('color', 'blue'), ('color', 'orange'), ('color', 'yellow'), ('fruit', 'banana'), ('fruit', 'orange'), ('fruit','banana')] d = {} for k, v in s: d.setdefault(k, []).append(v)
At one point FreeBSD got rid of all scripting languages (except for /bin/sh) so all tooling in the base doesn't rely on any scripting language. IMO that was a very good move. That way when you install for example Python from ports you know it's separate from the system. You can also install multiple versions and they can happily coexist together. Though I don't think python was ever part of FreeBSD system, I remember there was a bit of code in perl that was rewritten in C. So any Python 2 in OS X is most likely created by Apple.
Mustaches: { }
That wouldn't be possible without reworking the parser entirely
Read our sidebar /r/learnpython
Read our sidebar /r/learnpython
Ok thanks
frick
Given that I didn't mention "lots of lines" or "user interaction" I think we agree...
&gt; You know what would work? When the PSF decides "this is how we do this. Period" when it comes to packaging. Exactly what worked when we stopped having hundreds of linux distributions all incompatible among themselves, or having numeric vs numpy. PSF already has an [official recommendation](https://packaging.python.org/tutorials/managing-dependencies/) which is `pipenv` the point is that making something "official" doesn't mean that it will solve all problems. As the Poetry [README](https://github.com/sdispater/poetry#what-about-pipenv) shows that pipenv fails in many situations which cannot be fixed without major redesign, so we need alternatives. Regarding Numeric vs Numpy (rather Numarray) no one declared how we should do things. This dispute was resolved because Travis Oliphant managed to somehow port Numarray's feature into Numeric thus ending the dispute. Similarly if someone manages to create a tool that successfully unifies all the existing disparate tools it would solve the packaging problem too, but it is more difficult.
Can't wait for this change at work in...2 years.
F
I don't think so, just some people are lazy and some are bitter. The later I think switched to Go and is praising it. BTW: I've been using Go for few months now, and I don't understand these people. Go is not that fun to program in and even though is statically typed, the way types are (some equivalent of duck typing, no classes or inheritance) makes typing not that much better than what I already had in Python. I would risk saying that Python + mypy offers better type checking than Go. Ultimately the only benefit Go has is that it produces a single file, but now for the very simple application that I'm writing it is already 15MB (a hello world program is about 1-2MB). It's mind blowing especially that you could write an entire [OS with GUI and a network stack, web browser and few games in just few MB](https://kolibrios.org/en/).
&gt; PSF already has an official recommendation which is pipenv the point is that making something "official" doesn't mean that it will solve all problems. Ok, then I'll use pipenv. &gt; As the Poetry README shows that pipenv fails in many situations which cannot be fixed without major redesign I don't care. It will be fixed. &gt; so we need alternatives. No we don't. We need one that works. If pipenv is the recommended one, whoever started poetry should have fixed pipenv, instead of coming up with yet another tool that does the same except that it doesn't. &gt; Regarding Numeric vs Numpy (rather Numarray) no one declared how we should do things. This dispute was resolved because Travis Oliphant managed to somehow port Numarray's feature into Numeric thus ending the dispute. Exactly. The dispute existed and was a battleground that generated a mess that at least was solved quickly because at the time the penetration of python in data science was minimal. Today, a similar scenario would be a complete and obscene disaster. Imagine some numeric libraries supporting one, some supporting the other, some supporting both but with the added burden and a plethora of bugs due to their incompatibilities. It would be a total shitshow. Today with packaging is the same situation. Except that today everybody and his dog is on with python, and people like me that have to deal with all this uncertainty waste hundreds of hours dealing with "the cool new packaging system of the day", like a few years ago everybody was creating his own web framework. So, can we please instead of creating just another tool, make the ones that we have working, documented, and clear? The documentation on the topic is horrifying. I am spending _all_ my evenings trying to put some order in the current state of the thing, scouting PEPs, blogs, tools, tons and tons of documentation to understand what the fuck they decided it's the cool new packaging system of the week. I am not angry at OP for what he coded. Props to him. I am angry that he solved the wrong problem without making anyone's life easier. He thinks he did, but he didn't. He just introduced more noise for people to sift through.
Not sure what you mean doesn't scale, but I would recommend https://ius.io it contains all versions of python you would want and all packages are designated so they don't conflict with the system ones.
Docker solution to this problem: - oh I run into issues because I used python that comes with the system - no problem, let's just bake the entire system into your application
I wish
Thanks for the reply. I do always explicitly state my columns, I only wrote it that way for the example.
Oh god, are you my coworker?
Use https://ius.io and then you will have whichever python 3 version on both platforms. The key is to not tie your application to the OS. If you use something like IUS, and use it together with virtualenv you will have full control over the python version and all dependencies. By using system python you are locked in until you make migration to never version (7 in your case) you can only use the version of packages that come with your system and if you decide to upgrade these packages you're risking breaking system applications.
Does visual studio cost? Mine asked me for a license recently and said my 30 day trial was up
oof
"Visual Studio", with the year number as part of the release name is different than "Visual Studio Code" that's being referenced in this post. VSCode is free and (mostly, if not completely) open source. Studio is traditionally a paid tool, though they've made slimmed down "community" versions available for quite some time, which don't have all of the enterprise integrations, and often only support one language or workflow (they've have community versions focused on "web" vs "C#" in the past)
Adonde estan las communidades de Python mas fuertes in LatAm?
In general I think those will be: Argentina, Brazil, and Mexico. But still there are a lot of communities around the region (a very big an diverse region). We hope that the event gives more visibility to the region.
Think of the person who posted this being happy their online banking works with COBOL and Java
Almost new to coding and Python. Currently using QPython3 in a cell phone to write a simple script during commutes. It should calculate the volume of different geometric bodies selected by the user. I keep making dumb mistakes that I avoid when coding in my laptop , but the practice is great and keeps me busy and far from Twitter.
I think aio is the good shit, but fucking add some file asyncio to stdlib. JFC
Checkout [this](https://www.reddit.com/r/learnpython/wiki/books), and there is also r/learnpython for questions.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Are you using [Variable Annotations](https://www.python.org/dev/peps/pep-0526/) in your 3.6 code base?
What system utilities are written in Python2 on any current OS?
If the professor expects you to do your project with Excel then I would definitely do it with Excel. Learn python without stress during free time in spring/summer.
That escalated exponentially.
Hey guys, sounds like your professor is aiming you at a pandas and numpy style python program. Pandas is the library that can do pretty much everything you mentioned here. It will import from excel, build you a data frame (thought of as an excel sheet for python) then you can use pandas to give you pieces of the sheet for you analyzer. Finally it can send back to excel in the form of sheets too. Here are some links, in the order I think you should learn them. Otherwise, consider signing up to lynda or scouring youtube to learn how to write minimal code that does what you want. pro tip, get an independent coding environment (thought of as a programmers dashboard) I like pycharm community because free but it give you a lot of assistance as you program specifically with 'intellisense'-google it and see what I mean. Good luck [https://data36.com/pandas-tutorial-1-basics-reading-data-files-dataframes-data-selection/](https://data36.com/pandas-tutorial-1-basics-reading-data-files-dataframes-data-selection/) [https://www.youtube.com/watch?v=sspFLy0ju8E](https://www.youtube.com/watch?v=sspFLy0ju8E) [https://www.datacamp.com/community/tutorials/pandas-tutorial-dataframe-python?utm\_source=adwords\_ppc&amp;utm\_campaignid=898687156&amp;utm\_adgroupid=48947256715&amp;utm\_device=c&amp;utm\_keyword=&amp;utm\_matchtype=b&amp;utm\_network=g&amp;utm\_adpostion=1t1&amp;utm\_creative=255798340456&amp;utm\_targetid=aud-299261629574:dsa-473406573835&amp;utm\_loc\_interest\_ms=&amp;utm\_loc\_physical\_ms=9071823&amp;gclid=Cj0KCQjwkoDmBRCcARIsAG3xzl-qawiAhFWWh6rY5YK6bO8MEnumj70CnG0kP\_fnQpz8M6vWamG091EaAlXgEALw\_wcB](https://www.datacamp.com/community/tutorials/pandas-tutorial-dataframe-python?utm_source=adwords_ppc&amp;utm_campaignid=898687156&amp;utm_adgroupid=48947256715&amp;utm_device=c&amp;utm_keyword=&amp;utm_matchtype=b&amp;utm_network=g&amp;utm_adpostion=1t1&amp;utm_creative=255798340456&amp;utm_targetid=aud-299261629574:dsa-473406573835&amp;utm_loc_interest_ms=&amp;utm_loc_physical_ms=9071823&amp;gclid=Cj0KCQjwkoDmBRCcARIsAG3xzl-qawiAhFWWh6rY5YK6bO8MEnumj70CnG0kP_fnQpz8M6vWamG091EaAlXgEALw_wcB)
no the output/deliverable from the project need to be transferred into a python file from PyCharm. So, we have to write the code that creates an excel workbook and then send all the code into excel.
Thanks, we have pandas and numpy already installed and imported, we just don't know how to code.
I understand where you're coming from, I too had numerous problems with many different packaging systems, but unfortunately the reality is that there is no solution as yet that is mature/good enough to be a de facto standard. Also it seemed that I was misguided like many about the "official recommendation" of Pipenv. It turns out that it was recommended by PyPA initially and Pipenv used that to (incorrectly) market itself as the officially recommended option. This generated huge controversy. See [this thread](https://np.reddit.com/r/Python/comments/8jd6aq/why_is_pipenv_the_recommended_packaging_tool_by/) on reddit (which has comments from [PyPA team](https://np.reddit.com/r/Python/comments/8jd6aq/why_is_pipenv_the_recommended_packaging_tool_by/) as well as [core developers](https://np.reddit.com/r/Python/comments/8jd6aq/why_is_pipenv_the_recommended_packaging_tool_by/dz0hbuj/) in Python and respective maintainers of [Pipenv](https://np.reddit.com/r/Python/comments/8jd6aq/why_is_pipenv_the_recommended_packaging_tool_by/dyzamlk/) and [Poetry](https://np.reddit.com/r/Python/comments/8jd6aq/why_is_pipenv_the_recommended_packaging_tool_by/dyzc6er/)). `Pipenv` later [removed](https://github.com/pypa/pipenv/commit/5853846f5da171bf29a303f6b545b0a8918958e7) the official tag. It has known [issues](https://hynek.me/articles/python-app-deps-2018/) especially in a non-Linux environment like Windows so probably won't become the de facto standard. &gt; whoever started poetry should have fixed pipenv, instead of coming up with yet another tool that does the same except that it doesn't. It can't be done like that. Again see the [comment](https://np.reddit.com/r/Python/comments/8jd6aq/why_is_pipenv_the_recommended_packaging_tool_by/dyzc6er/) from `poetry` maintainer above. Pipenv is based on pip and virtual env while poetry has its own dependency resolver which is more efficient. It is a completely different approach to solving the problem and does get a lot of things correct that poetry doesn't. In the end I think what matters most for these hard problems are not the actual tools but the ideas. If OP has something new in his package that overcomes a known problem in existing tools then there's a chance that it can be used to develop a more unified tool that can become the de facto standard. it is important to keep looking for alternative solutions and not just get fixated on one (especially when you don't have any other solution that is mature and good enough).
But isn't as well supported.
Weird that he request a python project from absolute beginners without even introducing it to them. Search for pandas tutorials.
I would most likely use a dictionary with each student as a key, and a list of the students they are not allowed to sit next to as the values. You could import the dictionary from a file, extract the student names from the dictionary keys, and create permutations. Assuming you can model the seating as a long line, I'd loop over the permutations, checking each student and their neighbours using the dictionary. Disclaimer: the following snippet is for Python 3, and is entirely untested import yaml from collections import permutations with open(students.txt, 'r') as f: student_dict = yaml.loads(f.read()) valid_perms = set() for perm in permutations(student_dict.keys()): for i in range(len(perm) - 2): if perm[i + 1] in student_dict[perm[i]]: break else: valid_perms.add(perm) Note that the else clause is part of the inner for loop, and only gets triggered if the inner loop finishes. I leave it up to the reader to extend the code to check for students during further apart, and for doing more complex arrangements of seats. Feel free to message me if you want more help.
We're using Class and Function Annotation. We only use Variable Annotation where we have to (when PyCharm isn't properly picking up the type hinting from the class and function annotation.)
**I am v new to python so this is v likely to be incorrect or not the most efficient way. Please don’t hate on me, but I am equally curious of the resolution.** As a beginner, I would assign each name a number, then use randint and create if loops to prevent certain numbers being produced in consecutive turns. However, as to how you present that, I don’t know. Nor how to factor in the physical layout of the seats e.g. if 6 and 7 can’t be drawn consecutively, unless 6 is at the top of the column, so 7 would be at the back of the next column and not next to one another.
What inputs does the VR app take, are they purely hardware or can you hook into them with software? Simply put, your first step is making sure you can pass input to the app. Your second step is getting output from them app. Validation (testing) is pretty far down the line unless you find a pre built python library that can interact with both input and output.
A blacklist us one way, but you might want a more flexible approach. What if you let the user assign a "talking score" to each pair of students (1 for no interaction, 10 for constant interactions). Then, you could look at all the different arrangements of seating, and assess the score for each position ( the sum of talking points with each neighbor) . This lets you rank the arrangements by the lowest average score, to present the teacher with the best arrangements in case they don't like the one you pick. Either way, take some time to get the seating arrangements right, and try to decouple that from the people. For example, if you represent the arrangements as an array of adjacency matricies, you can quickly decide what needs compared. Then, iterate over each adjacency matrix and each column; the column is 1 person so you can quickly generate a per-person score without lots of bounds-checking. This is a fun problem, please post whatever you come up with!
Your project description link is password protected. You will likely have better luck if you ask specific questions here. What do you want to do, what have you tried, what didn't work, what are you struggling to understand. Want someone to do it for you? $250 for 8 hours, $125 minimum up front.
folderName = ‘newDir123’ command = ‘adb blah blah &gt; REPLACEME’.replace(‘REPLACEME’, folderName) subprocess.call(command) This isn’t valid python, but you get the point, just format the string with replacement BEFORE executing it. No need to mess with pipes if you dont want to.
I’m afraid YOUR pants are on your head sir
Found the liberal.
Start with nothing. Eventually you’ll find basic tasks like doing math fast (numpy), plotting (matplotlib), 3D rendering (vtk) that libraries are a lot better for.
I personally like asyncio and never understood FUD about it (it reminds me of the FUD python 3 was getting). Perhaps the problem is that asyncio provides low level framework and you should understand how it works to use it well and those people prefer things to happen behind the scenes with some magic? In that case they should use some kind of framework that abstracts it. For example if you use `aiohttp` to create a web service, you no longer need to worry about setting it up, and when request arrives it is already asynchronous all you need to take care of is making asynchronous calls.
Yeah, but in a crappier less elegant way.
&gt; Honestly, it looks like a no-brainer to upgrade to 3.7 from 3.6 Unless you are into AWS lambda. Being able to almost instantly run a piece of code on 1000 instances is pretty amazing.
I would suggest "Think Python" (Downey, Green Tea Press). It's a free and open source book. Well written, kept it simple. https://greenteapress.com/wp/think-python-2e/
Django is my baby. Once you learn it, web development as a whole starts to make sense :)
Oh yeah this is a really good point.
What do you mean?? We’ve been using 3.7 in our Lambda functions since late last year… https://aws.amazon.com/about-aws/whats-new/2018/11/aws-lambda-supports-python-37/
Oh damn, I didn’t even notice this. TIL.
Never forget the NTARS (Never Touch A Running System) rule!
Correct me if I'm wrong but is this what Docker containers are useful for?
I use pipenv. It's kind of like a marriage of pip and virtualenv.
Countdown until Calibre falls over and catches on fire.
 I agree, it would be a fun project to practice ML and it's probably going to be the best solution. I was hoping someone experienced would answer and give a high level overview of how to do it with PyTorch a similar package :)
I've had to use it in the past couple of weeks on random servers with no intention of ever using python but I had to process large data files there.
I think what the poster is describing Is probably too much work and hassle for your use case. Just replace the f-strings.
There are good enough documentation online for you to get started. Just google a bit and you'll be set. But basically there were a couple of things i wanted to automate in my home or checkin remotely. So i IOT for sensors to things i wanted to check in on. They would then be connected to a central hub that an always running script of the bot listening for my command texts (would just be it extracting key questions from raw requests). The rest is just mapping those requests to other python scripts modules to do the stat i wanted and respond with something i could view
I'm pretty sure it's *technically* possible, at least on the GE/HE-910 (which has a Python 2.7.3 firmware and uses 3G), and the 864 shares most of its command-set. But don't quote me on that, and you'd probably need to spend a few hours on the phone with people in Italy and California who are far less up to speed on the chip than even I am.
For the most part it's pretty amazing. I did have some issues getting pipenv to work properly, changing venv folder and getting it to find the right interpreter. But otherwise it's pretty nice to use.
Thank you, great article.
Umm yeah, do you guys not have a compiler? An altinstall really solves all of your issues...plus I would never use the system python. It supports the operating system, not your applications. The one issue I encountered doing this myself was the need to also compiler a newer version of OpenSSL to support the newer pip versions. Pass the right ./configure params with some make magic and you now have a shiny new python interpreter. Also pro tip if your system is that outdate just use a known vulnerability to gain root access and patch up your system. I doubt your security team will even notice.
Not a deal breaker, but will Django let me work easily with MongoDB? (I'm not set on a DB, it's just that I have some data already there and heard that flask would be a better choice then).
lol when I read death clock I thought you made a program like the device in Futurama that tells you how long you have to live.
I guess the question should be what are your goals with learning software? If you are looking to go into industry with it I would say learn Java. However, I think for you're current role python would be a great language to learn for managing data. Also look at MATLAB
Python 2 death clock, written in jQuery. Here come the downvotes.
I’ve still got some 9.3 disks if you’re looking for a good time.
Apparently there's no way of doing it in a platform independent way without using threads. There's a package that does that, but of course it is not stdlib: https://github.com/Tinche/aiofiles I remember it linking to this explanation, but can't find that place anymore: https://blog.libtorrent.org/2012/10/asynchronous-disk-io/ It kind of makes sense, but on the other hand I remember Tcl/Tk supported async for files, and Tcl works on many platforms so I'm curious how they did it.
All I'm seeing is possible jobs
This is about the `python` being used; so install an alternate one, like from home-brew, Python.org or anaconda; and make sure it's on your PATH so you're not still using the system one.
So I assume you're also stuck on CentOS 6?
30? Jesus. May as well start picking out caskets. I went back to school to get my MS in CS when I was 38 and graduated when I was 41. No 30 isn't too old to learn how to program.
Do it. Grab a copy of *Automate The Boring Stuff* by Al Sweigart and work through it. By the time you finish, you may come up with a real world project idea to start. If not, go to the Django site and work through building their demo app. By this time, you should really find your own pet project to work on and learn about banging your head against the dumb little problems that happen as you go. Six months to a year from now, you will be able to solve lots of useful problems, and if you think it's something you feel good about, you would be able to look for positions in the field. It's a little tougher to get that first position without the degree, but it's just a matter of luck finding the right place for you and it won't take four years to find it. P.S. At 30, you're probably not even 20% of the way through your adult life LOL chill
I'm 32 and just started a month ago, with never programming anything beforehand. Do it.
You will find ways to use it and make yourself more productive, yes. Same would be true for learning Java, Excel, or BASIC. If you are looking at a career change to programming then Python is a great place to start. However you need to realize it's a professional position, and like any profession it takes years to get good enough to be hired at the bottom, and many more years to get back to what you probably earn now.
All anyone needs to do to maintain python 2.7 past next year is *import antigravity*
I don’t have any personal experience, but it can use SQL server so I’m sure it can :)
Does the language server support .pyi files?
you can right off sir 2.7 4lyfe
*..·. py2 user print angrily in ASCII*
Maybe I'm ignorant as to what project managers at oil and gas companies do, but why would you recommend MATLAB to /u/Agape825 ? I was under the impression MATLAB was heavily focused on statistical programming, for math-y sorts of professions.
$ooph
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Don't be too proud of this technological terror you've created. And maybe don't make upgrading such a colossal pain in the ass next time.
r/teenagers is leaking. This sub should ban pictures.
I don't get it
I beg to differ. It doesn’t take years of learning programming get hired as a dev. I started learning and got a job in less than a year. Depends on how much effort and time you put into it.
Wut
Ok, thanks! I'll dive into it then
Fair enough; good for you. For me it took years to be employable, but then I was learning on the side while I had a job, which I think will be OPs situation too.
I’m offended as a teenager #gamersriseup
I'm 34. Started my BS at 31 and i am currently interning with Machine learning. My first useful line of code was 3 years ago
[Context](https://i.redd.it/5h0bkjewp4u21.jpg)
This post from a few days ago: https://i.redd.it/5h0bkjewp4u21.jpg
I’m 29 and just started a couple weeks ago. I started with Colt Steele’s Python 3 course on Udemy ($10 for new students). I grabbed that due to overwhelming recommendations, and I thought it was a great value. I’ve seen DataQuest.io popping up in Python threads more and more. From a beginner’s perspective, I highly recommend it. The beginning portions of it are free, but as you progress, you’ll have to subscribe to access the advanced sections. Don’t get me wrong, Colt Steele’s class was great too for the sections I’ve worked through, but I wish I had known about DataQuest earlier. All depends on how you prefer to learn.
that's hilarious coming from MIT because I would be willing to bet a whole crapton of numerical analysis code they are using over there is still py2-only.
Inb4 Py3 users pressing `f"To pay respects"`to Py2
just stop
Considering r/teenagers is one of the nicest, funniest, and friendliest subs out there, you should be happy it’s coming here.
Naw Chief
It's never too late!! Python is a great language to start with. Maybe take a couple community college classes, and you'll be a programmer in no time!
why are eggs grouped with dairy?
In my work I use none of those. I use bazel. Why doesn't python use bazel as the official package management and dependency resolution tool? &amp;#x200B; (hint: its because bazel is a terrible idea for ad-hoc dev and interactive use)
&gt; Inb4 Apparently it's 4chan leaking into r/python, not r/teenagers.
 f"To pay respects to {legacy_python}"
You know format string os on py3 right
Ssh, don't snitch us out...
Look out for monsewer blobby...he’s gonna. Tell you this joke is old news.
I'm an engineering lecturer, and MATLAB is quite commonly used for non statistical things in engineering just due to familiarity from graduates who used it in university.
use scrapy everything you doing by hand is build in there
My school teaches python 2.7. F in the chat boyz
I mean the original post is an MIT student complaining about MIT students and faculty using Python 2
[removed]
Just had a read of the article and it looks good. What I would like to know is how far can you integrate it will Alexa? . Can you only run the python script or are you able create values using voice command. Or can you have Alexa say a return result. I’m going to have to have a look into this
it's really not. it's teens on Reddit and it's about as absolutely average as you'd expect
If you're only dealing with raw bytes, there's few issues unless you're also dealing with a lot of formatting or templating which is also like rare I feel, and even then not that gross.
The deliverable is security updates and up to date infra.
The original is clearly an MIT student making a joke.
I'm not talking about raw bytes, though. I'm talking about pesky things like stdin, filenames, and user input.
brb gonna go study easy ways to convert Python 2 code to Python 3.
Filenames, for example are treated by the os as raw bytes (least on Unix). You can too, or you can treat them as utf-8, like glib does. On Linux, assuming utf-8 (the default Python encoding) is a fairly safe bet. If you're taking in user input, it's your program: you can require utf-8, or you can guess based on the locale. None of those are particularly gross, they only require a bit of handling at the entry points. I work with those things too. They're not pesky.
Then you haven’t met the new sorters. Here’s some of our epic members that will prove you wrong u/Rickyontheradiator: gives out fun facts and comments on everything u/Sketlord: gave out pictures of animals with hats u/Im_Tsuikyit: Has a fun liking of Disney Princesses, and can replicate their autographs u/mynameistsp: is awesome and funny. There was a running joke about his eye being stabbed out for a while, and he loves houseplants Me: I’ve been told I’m wholesome, and I also draw dinosaurs and stuff for people on the sub ~~Avengers~~ Teenagers ASSEMBLE!!
Yeah they're complaining in a jokey way
Yeah, comedy bad
Only people with giant pee-pee can switch from python 2 to python 3.
Sure, MATLAB, if you're keen on spending thousands of dollars on licensing and a language that is all around worse to work with than Python... MATLAB has its merits with tools like Simulink for drag-and-drop based mathematical modelling (another couple of thousand dollars for this lisence), but for someone just starting? I'd recommend Python 100% of the time if the time if I didn't know exactly what they wanted to do. The python scientific stack can do just about anything , here's a small, nonexaustive list of the tools I use or have used: Linear algebra: NumPy, SciPy Stats: Statsmodels, sklearn, SciPy, pandas Dataviz: matplotlib, seaborn, pandas Machine learning: sklearn, pandas, TensorFlow, Keras ODEs: SciPy PDEs: FEniCS Optimisation: SciPy, cvxpy Graph theory: SciPy, networkx, ++ Image analysis: skimage, OpenCV Symbolic maths: SymPy I can't say that I have ever missed anything from my MATLAB days.
wait, is that sub serious? i assumed it was a sub making fun of stupid things teenagers do, but it seems to genuinely be stupid teenagers being stupid teenagers
This sounds fun. Now I'm considering becoming a teenager. Do you have more info?
Well, what kind of info do you need? If you’d like you can join the sub, just be sure to use the “OLD” user flair!
must've been a frosh who took 6.00 and then got a job in someone's lab at some point and got a rude awakening to reality :D
I’ve only been at the company a week and was given explicit instructions to use python2.6. Once I’ve been here a while I’m definitely going to see what I can change.
Docker containers are indeed extremely useful for things like this and honestly might be a solution!
It has nothing to do with nice or funny or whatever. It's a low effort meme sub. r/python has historically been a sub dedicated to content about python. Low effort memes tend to get drastically more attention due to how easy they are to consume and upvote and thus tend to dominate genuine content.
I've been using await/async extensively since 3.5. Has anything noteworthy changed for you in 3.7?
Quality shitposting. Now give me some real discussion about legacy code.
this is really cool, thank you
I've been working with legacy code from a long time. All we've learned about legacy code is that we should strictly follow the NTARS rule lol
Just put () around print commands and you're good :P (I'm kidding)
You can just give youtube-dl all the links at once and it will download and convert them one after another. `youtube-dl &lt;url_1&gt; &lt;url_2&gt; ... &lt;url_n&gt;` Or from a file: `youtube-dl --batch-file urls.txt` Or using the library: `python -m youtube_dl &lt;url_1&gt; &lt;url_2&gt; ... &lt;url_n&gt;`
It's great for Spyder users like us as well. Variable explorer is the only reason I use spyder
I think there's a brave soul working on porting the flaming mess of Calibre to Python 3.
I don’t know why you got downvoted. That second sentence is 100% true.
You can use random.choice and pass a list to choose a selection from list, you dont need to map them to numbers
Ooh, dibs on his cd player!
Absolutely no reason to break print
Pydantic produces very weird error messages for complex schemas.
Yes. But, it would have been too late if you had asked this question 10 years ago or if you will ask this question 10 years from now. However, it has nothing to do with Python, or programming in general. It has everything to do with how you think about learning something new. This type of questions is unfortunately one of the most popular. I don't mean to sound presumptuous, but it does seem to me that you are either expecting someone to tell you that it is very late so you don't have to feel sorry for not trying and failing and trying and failing and trying and learning from failures, or to be told that it isn't too late so you get a momentary boost of motivation (which is not going to last you the months of grinding you need to get better at something). There's no perfect way to go about it, no perfect time to start, no perfect language to learn FIRST, and the chances to be an expert in a small amount of time are close to 0. As far as I can see on Reddit at least, everyone who wants to start learning python or some other programming language always want to get a good measure of how they will compare in a few years to people who are fluent or have decades of experience... It's unreasonable and self-defeating. All in all, if you start on this journey with a fear of missing out because you didn't pick the "perfect language" or the "perfect course" at the "perfect time" in your life then I don't think you'll enjoy the ride or get anything worthwhile out of it. My advice: if you like doing it and reading about it and finding interesting solutions to problems (trivial or not) through programming, then definitely commit more of your time and attention to it and embrace the grind because that's what will give you satisfaction. You may never be "the best" at it, but that's not really the point of it all in the end.
Who else would it be written for?
It’s great to cause awareness for such a excellent library, but honestly, it’s not exactly new, and if you do machine learning or data science, you should really know about this already.
https://snarky.ca/why-print-became-a-function-in-python-3/
I really like that line "first useful line of code".
It works well enough for me as it is, so if no more updates were forthcoming it'd be fine; but obviously i hope they get it updated soon to Python3.
You mean print statements
nice!
I'll take your word for it. Everything I know about coding I learned by trying things and seeing what worked.
Get the same Python version on your local machine, `pip wheel pip pandas`, copy the `.whl` files over to your locked down box, `python pip-$version-py2.py3-none-any.whl/pip install *.whl`.
Super Python 3.3 · 5th Edition Based on author Mark Lutzs popular training course. Download from [http://xfmro77i3lixucja.onion/book/N81ojQObpOYxng0q](http://xfmro77i3lixucja.onion/book/N81ojQObpOYxng0q) The Imperial Library of Trantor (also known as Galactic Library).
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Yep , for instance if you want to run a 2.7 program `pipenv --python 2.7`
Just c/p an excerpt, first few rows of your file, people don't like adding emails. Btw, [pandas](https://pandas.pydata.org) csv capabilities is probably what you need if you have large datasets there.
i changed the link to an image of the csv it should gie you an idea of how it looks and thanks for the pandas suggestion gonna give it a go!
Started to learn at 34 on codecademy.com. Just turned 38 and I'm a data engineer in a team that takes me seriously. I used to work in online marketing (nearly 10 years). Built a few python libraries already. Here is the last one: [https://github.com/socialpoint-labs/sheetfu](https://github.com/socialpoint-labs/sheetfu) &amp;#x200B; It is never too late.
if ; is found, rm -rf it
If only Spain did something like this 😓
Trying to hone my skills in selenium via python. Last weekend I built an Instagram bot that likes and (optionally) comments. This weekend I will add functionality to scrape hashtags and possibly build logic around what to comment based on keywords. I feel dirty just saying that out loud.
I had that little glimmer of hope that somehow he made a countdown timer until he ended the world
Building DistKV, which is a distributed key-value store based on Serf's chat protocol (eventually-consistent, tolerates lots more failure cases than etcd-or-whatever), and rewriting hbmqtt so that it stores its retained messages there. https://github.com/smurfix/
If your file isn't too large, then try the following code. It will extract those dates and print count of lines, the first and the last date. csvfile = 'myfile.csv' column2 = [] with open(csvfile) as csv: line = csv.readline() while line: column2.append(line.split(',')[1]) line = fp.readline() print(len(column2)) print(column2[1]) print(column2[-1])
Don’t be too confident python 2 will be dead on its end of support. Windows XP was EOL 5 years ago and I still see those systems around.
Yes it's terrible. The main reason for that is describer here: [https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/](https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/) Use Trio instead. [https://github.com/python-trio/trio/](https://github.com/python-trio/trio/) If you're stuck with the asyncio mainloop, use anyio ([https://github.com/agronholm/anyio](https://github.com/agronholm/anyio)) to keep your sanity.
Nice
This looks very good. I wonder if it will work with better-exceptions. :)
Does it not support tweepy and textblob?
Do you happen to know how to get tweepy and textblob to work in PythonAnywhere? I'm trying to follow the directions I found, but trying to install them through Bash is giving me error messages such as pip and pip3.7 aren't valid commands.
Our robot overlords
+1 for pandas! The pd.read_csv functionality also lets you define how you interpret your data types, so your dates will actually be read as dates etc.
I've seen the rationale and I get it but I still miss just being able to super quickly type "print" to output a variable instead of having to deal with the ()
Still using Python 2 after that date? Hindsight is 2020.
I'm really happy to hear that the suggestion was helpful. It has a full python interpreter. But you will have to install tweepy and textblob as they are 3rd party packages. Open a terminal from the menu and do: pip install tweepy pip install textblob Let me know if anything else...
"Die! Why won't you die?!"
Bad mobile games are bad because it's a BAD mobile game and criminals are bad because they do bad things. With the logic of that guy or girl if you do something and that is good bad or in this case outdated it's direct links. It's still not a good comment
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
It works, thanks! Now I need to figure out what the code is doing....
Well 8 months is a long time.
I just turned 44 and only started a few months ago...
I'll be 39 in June and currently just starting to learn how to program with Python. I look at programming as a kind of mental jiu jitsu. I know it will take years for me to reach a point in which I'd be considered proficient but it's all about the process of learning a new technique and seeing how that then fits into a potentially bigger jigsaw puzzle. Maybe in future it will improve my job prospects but if it doesn't, at least I have a great hobby that keeps my mind sharp and I can still enjoy the process. I wish I'd have started when I was 30! The reason I chose python is there is are many resources for it and many people say it's a great language to begin with due to its syntax and versatility. Further down the line you could transition to other languages. Unless you need a certain language for work maybe just enjoy the process of learning and improving and just see where your curiosity takes you.
You are probably looking for `ncurses`.
Yeah, I was thinking similar. There is a lot of opportunity for auto-generating content for YouTube. DM me if you want to team up on this.
thanks, but i'm looking for something really simple, such as "if key pressed: print("a")"
Uh, so, using Python 2.6 is racist now? Sure, why not, everything else is🧐
Right now I’m using Pythonista on my phon e because I also need to go to school and the school computers don’t allow downloads of any run files. How would I use dict() to match values so people who don’t get along well won’t get seated next to each other
Python 3 is the technological terror? Or 2?
A guide for python written in python...
I used this book to learn the basics of python. The first half I find was very good for teaching you the concepts. The projects part I personally find not as
Does this kenneth reitz guy sleeps? Is it a company?
Better watch out with that "for humans" bit. That's a Kenneth Reitz tag line.
Is it really a good idea to have classes inside classes?
No, no, it’s “for humans” which means it *must* be good.
I call dibs on the stereo!
Here's a Python for Robots workshop: https://www.hackster.io/sanyaade1/python-for-robots-august-december-workshops-series-1-3d2e65
I've done python freelance/contract work for years, you should definitely charge around 100/hr or more. I suspect that overseas devs, or local amateurs, who charge 20/hr is how they ended up with the messed up code base they are asking you to fix, in the first place.
I *think* he's okay with it: [https://github.com/realpython/python-guide/graphs/contributors](https://github.com/realpython/python-guide/graphs/contributors)
Not that death clock. [THIS Deathklok](https://www.youtube.com/watch?v=7W35dyPTh6o)
pyautogui?
How would i use that to check for keypresses?
perl users
For small classes it works fine and I use it time to time without any problems. Anyway you could use `-s flat` flag to generate flat classes structure.
I have sinned, brother, for this was created in JavaScript. (Although, the saving grace is that it the *data* was scraped using Python.)
🙌🙌🙌🙌✌🤓👍
Pretty sure he started this and handed it over to RP
It's really interesting, off the tip of my head I can think of a bunch of things that I could do with this. If it does have the ability to create values for example Alexa set temp to x and be able to parse those values from the command, or output/return results as you say, that would incredibly powerful!
It's a really bad practice.
You already have connexion for swagger.
I am a bit shocked at dataclasses, for two reasons: 1. we are giving annotations language meaning with logical implications, which goes beyond the initial idea of annotations being "parseable" documentation. 2. we had the concept of dataclasses using descriptors since at least 10 years (traits, traitlets, atoms), but everyone's acting like their mind is blown by them.
“Humans” here means “fans of Kenneth Reitz”.
What's the deal with Kenneth Reitz?
He’s bipolar and has manic bouts, so i guess the answer is “he doesn’t sleep much”. Also, he’s built a network of friends and acolytes who will lap up anything he starts.
ok, so how did someone like him managed to get this network?
I care about GCHQ and NSA bots more. Russians won't be arresting me in France.
&gt; he has manic bouts More seriously, he made his name by building a library (requests) that made other libraries easier to use. He is very image-conscious and not scared of trumpeting and marketing his stuff at every turn. &gt; What does he do for work? I think he was at Heroku for some time, no idea now. You can probably ask him, unsurprisingly he is /u/kennethreitz
This is a great analysis. I hope that also post on [r/dataisbeautiful ](https://www.i.reddit.com/r/dataisbeautiful)
Working on a web scrapping script to fetch all the music posted under the [Kotaku Soundtrack](https://kotaku.com/tag/kotaku-soundtrack) tag on [Kotaku](https://kotaku.com) and search the music on Spotify to automatically create a new playlist with those musics. Once that is done I will maybe try to have some sort of way to update the playlist rather than creating a new one each time I run the script. I will probably publish the code to github later if some people are interested.
All his projects are summarized as "for Humans". Kind of a marketing gimmick.
tcod has a good keypress toolkit. It's a library made for ASCII games, but it has a ton of useful tools that I use for other purposes
He made requests, probably the single most popular python library.
Ok but if someone is a prick he doesn't keep people around no matter how popular your libraries are.
Who said he was a prick?
I am unable to install ncurses on windows, is there a fix?
With the exception of Tablib for some reason. It’s one of his most “for humans”projects too. It’s really great. I’m gonna open a PR to add it in the readme just to see what happens.
He said he's bipolar, generally bipolar people are not particularly pleasant to interact with
Learning to program is the sort of thing that you do over a weekend. I read the [online tutorial](https://docs.python.org/3/tutorial/) and basically got the language. The hardest part is to figure out a project that you like to keep you working on something.
I use connexion a lot, but it doesn't help you generate models from the swagger specification. Swagger-codegen can do that, if you like that heavy Java style getter/setter-tastic stuff. Connexion handles running the server and validating requests against the schema.
So you are telling me there's nothing out there to convert openapi to a python module class without going through swagger tools? I know what to do during the weekend...
I'm just saying it's not what connexion does.
Bravado is useful for dynamically generated clients
So what are the Russian bots saying?
[https://docs.python-guide.org/](https://docs.python-guide.org/)
I was hoping that there was some module as part of connexion that did that service, in addition to flask integration.
They wouldn't use Python, but serialized DNN models.
https://www.reddit.com/r/AskReddit/comments/bgrpd9/how_do_you_feel_about_the_recent_youtube_videos/
yes but what if you want to generate the model classes not dynamically? I am always very cautious about model classes that are generated dynamically. They are very hard to debug and to use, because when the yaml file changes, now all your program falls to its knees and finding out what has changed becomes hard.
I use Anaconda and I've found the only way to consistently get VSCode to play well with conda environments is to launch it from the Anaconda Navigator. None of my mucking about with PATHs or whatever seems to get the job done satisfactorily.
I haven't had a great experience with Pipenv. Some discussion over here: https://www.reddit.com/r/Python/comments/a3h81m/pipenv_promises_a_lot_delivers_very_little/
be quiet already! you are supposed to talk about bad russians, not real shit like governmental repression, corporate influence on elections, american war crimes, etc. etc. Uhh sorry no what I meant to say is, found the russian bot lol lmao
I want to be positive about it but...I'm somewhat concerned its being sold in book form for $25, regardless of where the money is going. Most of the topics seem really shallow (if it was just a growing online resource, I wouldn't otherwise fault it for that). From what I can tell, I would be severely disappointed buying this book for myself. While it self-identifies as **opinionated,** I dont know that I would call the majority of the "Structuring Your Project" section "best practice". And throughout the rest, I see a mixture of oddly specific advice that could be useful, vague overviews of topics without actual recommendations that would be useful to newcomers, and yet more odd advice that I wouldn't recommend to newcomers. I wouldn't mind if it ultimately recommended Pipenv, if it gave a brief overview of options/pros/cons like it does in the testing section...but then in the testing section it doesnt appear to give a clear recommendation to pytest (which is much more universally adopted). Overall, it seems to be very inconsistent.
Yeah there isn't that many good excuses these days.
WayScript here! You can't yet pass arguments to your script with Alexa, but that functionality is in the pipeline, as is the ability to have Alexa speak a custom return value! You can [Create a Variable](https://wayscript.com/documentation/logic/create_variable) within your WayScript program and pass it to the [Python Module](https://wayscript.com/documentation/module/python), then pass the output of your Python script to another WayScript module, [such as Slack](https://www.youtube.com/watch?v=DJo1uCyNWKE&amp;t=3s).
That's literally your projection
Hey thanks for the reply, it sounds amazing and I'm excited to hear about arguement passing in the future. I'm definitely going to look into this and see if I can get it working with a project I'm working on!
Watch out, we got a couple of bad asses over here! #staywoke #iamthematrix am I right?
Have you heard of Linus Torvalds?
Yeah, it's pretty weird to be opinionated about some stuff and then *not* be opinionated about pytest. It's a complete revolution in unit testing paradigms in python.
Just started learning the language a few weeks ago and am looking to tackle a decent sized project to test my skills. &amp;#x200B; I'm thinking of recreating the Black Mirror movie, Bandersnatch, using some of the flowcharts I've found on reddit as a pretty simple choose-your-own-adventure style project but its looking to be a bit longer than expected. The majority of it is probably going to be conditionals but I'm trying to write it in a way that's concise and "Pythonic" rather than just a bunch of spaghetti.
It is ALL based on "official" list of bots made by Reddit itself, with their own biases. Garbage in, garbage out.
I would do my best to avoid the system python at all. You don't have to install anything when it's in your userspace. A python distribution like anaconda would do this, or you could use windows subsystem for linux and use pyenv (this would be my choice).
You would define a dictionary something along the lines of: student_dict = { 'bob': ['dave'], # bob shouldn't be near dave, but is fine near the others 'charlie': ['dave'] # charlie shouldn't be near dave either 'dave': ['bob', 'charlie'], # dave shouldn't be near bob or charlie 'ethan': ['noel'], #ethan shouldn't be near noel 'jack': [] #jack is always quiet, so can be near anyone 'noel': ['ethan'] } Then, when you create your seating arrangement, you'd loop through each one, and use the dictionary to check which students they can't sit near. for perm in permutations(student_dict.keys()): for i in range(len(perm) - 2): if perm[i + 1] in student_dict[perm[i]]: break else: valid_perms.add(perm) In the nested loop, the outer loop creates a set of permutations from the keys of the dictionary, i.e. it takes the student names, and loops over the set of all possible orderings of the students. The inner loop then loops across each student, and checks if th next one along is in the black-list For example, if the ordering is: bob, dave, ethan, charlie, noel, jack, the inner loop would start with bob, and perform the following check: if perm[i+1] in student_dict[perm[i]] This resolves to: if 'dave' in student_dict['bob'] Which further resolves to: if 'dave' in ['dave'] This would resolve to True, thus skipping the rest of the check, and would move onto the next possible ordering.
Publishing it?
Yeah soon I am going to publish it. You like it?
&gt;python -m youtube\_dl &lt;url\_1&gt; &lt;url\_2&gt; ... &lt;url\_n&gt; Thank you. What it that ''m'' in phyton? What does it mean? Also this command: `youtube-dl --batch-file urls.txt` what should I write instead of ''batch-file''?
Yes man. Its amazing and really really helpful. If u have the skills i think its gonna be an amazing app for chemistry students using mobile
Check u/hvrc23 profile dude. He made a web application on this.
How do I make it detect proximity
If you don't want a dependency as heavy as pandas (which also may behave unexpectedly as it tries to infer column data types), use the built-in CSV module. ```python import csv with open("my_file.csv") as f: reader = csv.reader(f) headers = next(reader) data = list(reader) ``` It will do data type inference on a per-cell basis (I think). You can also try the `csv.DictReader`; it's a little more sophisticated.
You should really rethink this. How many bipolar people have you truly interacted with? And how many people have you interacted with that you didn't know were bipolar?
Torvalds is not a prick. Torvalds is strongly opinionated ;)
Plenty, trust me.
Yeah, it would feel less biased if the data/OP wasn't focused on "Russians." Bots are everywhere, and easily obscure their source location. The question isn't one of origin (masked or otherwise), it's one of whether a human is behind an account. I would love to see actual data analysis that can categorize human/not-human in reddit behavior. Note: This is **not** a criticism of the OP -- I think the work done was interesting, and lays the groundwork for some real analysis, but I can't find any sources that cite how the suspicious accounts ( [https://www.reddit.com/wiki/suspiciousaccounts](https://www.reddit.com/wiki/suspiciousaccounts) ) were identified for inclusion/exclusion.
Something about Trump, Sanders, cops and cryptocurrencies, it looks like.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
The latest episode of the Talk Python To Me podcast, "Packaging, Making the most of PyCon, and more", had him featured as a guest. He mentioned that he now works at Digital Ocean rather than Heroku.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I took humans as non-programmers, but that's because I used to say "human-music" for stuff that is simple and entertaining to most, but obvious and disinteresting to a trained musician.
Its easy to quickly dismiss any opposition to prevailing narratives, I'm just saying the mainstream crusade against supposed russian influencing democratic elections (in the US) is for the most part unsubstantiated and vastly overblown. If you were genuinely troubled by malicious third party influence on democracy, instead of parroting the prevailing mainstream narrative, you would recognize the vast disconnect of the actual, provable, quantifiable influence that corporations have on US elections. But hey, if it makes me a laughing stock to agree with [Noam Chomsky](https://www.counterpunch.org/2017/03/03/most-of-the-world-is-just-collapsing-in-laughter-on-claims-that-russia-intervened-in-the-us-election-an-interview-with-noam-chomsky/) and [actual journalists](https://theintercept.com/staff/glenn-greenwald/), then fine.
No, it doesn't lay groundwork for anything. It's circular. He took a database of "known bots" and analyzed their posting patter, but those bots were detected as bots by analyzing their posting pattern. Any pattern he finds is just a mirror reflection of the original algorithm that identified those accounts as bots. Now, they could be detecting bots based on their ip data and such, but then again, it's pretty much garbage because only the most simplistic bot will get caught by such crude methods.
Ok, sorry that’s not really answering my question. I’d like to know if they’ve actually got anything like a political message
Here are some ideas: &amp;#x200B; * Put #!/bin/env python3 at the top so it can be executed directly from the shell * Consider a PID based feedback loop for smoother transitions. Definite overkill but would be a good learning experience. * Add support for multiple GPUs/fans perhaps by using classes? * Be able to set parameters with command line arguments or a config file &amp;#x200B; My GPU fans always spin (slowly). According to the box they're supposed to be 0 rpm when the card is idle. Using the /sys/ interface I could jack up the speed but could not lower it :(
Yeah, I'd like to try the Python language bindings. Right now learning GDScript, since there are a lot of learning resources available.
Do you need to test your code on different versions of Python, or do you just use virtual environments for isolation? If it is the latter I would say stick with what you are doing, as it does not require installing any extra packages outside of the virtual environment to get the environment up and running.
Great job! 👌
Good job buddy! Keep at it:)
Nicely done
It looks like a high school project anyways, not to be too mean, but russian bots is a serious topic, but this is just like he copy pasted from the first beginner-level scikit-learn tutorial he could find and made some pretty graphs. This is pointless at best, but at worst, deceptive.
I am not aware of any Articles or Video tutorials, but the original documents for them are quite readable and public. Googles Docstring standards are part of their Python Style Guide and can be found here: [https://google.github.io/styleguide/pyguide.html](https://google.github.io/styleguide/pyguide.html). The section 3.8 and following are about Comments and Docstrings specifically. Flake8 just enforces the usual standards like [PEP8](https://www.python.org/dev/peps/pep-0008/) and [PEP257](https://www.python.org/dev/peps/pep-0257/) which are a must read for any Python developer in my opinion.
Cool.
Wow! Fantastic job! May I ask, what did you use to create GUI and buttons etc... I have so far only written CLI programs in Python.
Okay, this seems pretty awesome. The temptation to hook it to my garage door opener is strong... I mean... what possibly could go wrong? ;-)
Are you trying to detect key presses in console, or a windows api?
I think it’s a really cool project, but not much more than that. There are massive databases that contain much more information and aren’t any harder to use.
Ahhh, whataboutism. WHAT ABOUT CORPORATIONS!?!?! No shit dumbass, multiple things are fucking up your shitty country.
Thank you
Thank you man!!
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Thanks!!
I used Tkinter for creating the GUI. I am not sure about the linux thing coz i dont have a linux machine to test it.
Insane dude! Nice work!
thanks!!
Unless I'm missing something, pyautogui doesn't receive key events. `Keyboard` appears to: https://github.com/boppreh/keyboard
&gt; ncurses on windows I can't help you here mate, I don't use windows.
No clue.
&gt; Do you need to test your code on different versions of Python Sometimes. Mostly what I need is the virtual packages to prevent dependency issues.
That is so cool!
...built in python
That's an amazing job man! I'm gonna give this to my old chem teacher as soon as you publish it, he will love it!
Привет, я люблю Трампа, Путина, питон и фласк
Poor ruby.
The fall of C#
i'll inform you as soon as I publish it😁
&gt;The latest episode of the Talk Python To Me podcast, "Packaging, Making the most of PyCon, and more", had him featured as a guest. He mentioned that he now works at Digital Ocean rather than Heroku. Huh. I wonder if that's why their Python deployment docs were so good the last time I needed them.
Thanks dude!!
Its incredible to suggest that the billions corporations are investing to influence elections with malicious intent is anywhere near comparable to the amount of influence russia has on the election with a few social media bots. People voted for Trump because of the systemic failure of the democratic party and the broken electoral system, not because some foreign government convinced millions of people to vote for him with some imaginary large scale bot psyop attack for which there doesn't even exist any evidence.
Any program written in Python runs on Linux if Python is installed Tkinter is part of Python. So it surely works for Linux
Python is awesome!!
do you have the project on GitHub?
The program should work with the correct Python interpreter on any machine.
Currently i didn't upload my project files on Github...i'll do that in few days probably tomorrow
Man I love python.
How does it do it? I feel like it pings a Chemistry API or something? Either way its a really great project I'd love to use and contribute to.
Fellow TK fan! This is proof that Tkinter can actually look nice. This project looks awesome and mixes my two favorite things, chemistry and programming. &amp;#x200B; Hijacking the comment for a sec: &amp;#x200B; Just a note to aspiring GUI devs - start off with TK then (if you must) go to PyQt. Tk is *vastly* easier to learn than Qt. My logic is that it is better to learn GUI principals with an easy to use package so that you are not learning both a difficult to use package *and* gui principals. Tk is more like software lego than Qt.
Snaking it's way to the top
Besides being incomplete, it also seems out of date. For example, the [page about speed](https://docs.python-guide.org/scenarios/speed/) tests speed in python 2.7.
I am basically scrapping PubChem website which has a large database and also they are supporting API (which i came to know only after i finished half of my project).
Thanks man!!
I'm waiting for the PR.
How did you create this animation?
I totally agree!!! When i learned tkinter, I searched the internet to learn some good looking Modern GUIs but got no useful result so i decided to make GUI better with the existing tkinter. I think I succeeded a little. PyQt is more complex than tkinter.....
Well, Tk is actually a Tcl language (Tickle) package which is generally not preinstalled on Linux systems. It's actually not even installed through pip, but through apt and is a stand-alone system. Python interacts with it in a way *similar* to api calls, except instead of an API, commands are passed directly into the python-to-tcl interpreter. &amp;#x200B; Python is just *really good* at interfacing with the TK interpreter, which is embedded in the Tk package. Tk is a cross language package which works with about 5 or 6 modern languages.
this is the internet. You're grasping for the type of data that doesn't exist, eg, finding someone online, and confirming whether or not they're a bot by going to their house and asking them. All of the propaganda filtering through the internet by media managers, bots run by media managers and bots in general, all have the same set of realities. This is the internet and we live in a society.
It's not really popularity. Noobity.
Actual URL to the thing: https://www.humblebundle.com/software/full-stack-webdev-bundle Quit the referral ID, spam facade bullshit.
PyQt has the *one* advantage of having Qt-Designer, where you can drag-and-drop elements an have it auto-generate the code structures for them. That (I have heard) is very handy for massive GUIs with lots of panels and windows.
oh I didnt know so thank you
Also written "with ♥️"
I like you suggestions thank you. The shebang has not been added yet because I am still testing. I looked at the PID and I LOVE it except in my case I only get integer values on the temperature so the response of a PID I feel would still be stepped. I hadn't thought of a multi-gpu scenario because I don't have them but I will investigate that. I don't really want the variables to be user set. They are conservatively set right now but if you modify them to be more aggressive you could easily burn your GPU right out of the socket. Did you try my program to see if it would allow your GPU fan's to work more effectively? I found on mine if the fan is 0 it will temp creep and eventually go critical. To hold a solid 45-47 degrees I found about 1700 RPMs was good for me. Thats really the only setting a user could or should change in my program.
Wow even i didn't know that!!.thanks for teaching something new!!
Not really. What this really shows is the transformation of Stack Overflow from being a mostly C#-oriented site (which is what it was first built for) to being a much more general programming site.
thats true.....but it generates an .ui file which we have to convert into .py file with command prompt then have to search for a certain element and the most annoying thing with Qt(my opinion) is it puts all the elements in a single class which makes it hard to debug or alter the UI manually
Only the parts designed for human programmers to interact with.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I dont want to sound purist but why is sql there?
The bundle is centered around JS and various front/backend libraries and frameworks built with it. There are also a book or two each around html, css, git, and aws.
There are windows specific libraries and commands in Python vis a verse for Linux too, so the cross-compatibility is not 100%
You can use [pynput](https://pypi.org/project/pynput/) and import the keyboard module to listen to key presses. You can also use this to listen to mouse clicks as well.
I don’t interpret the description that way. He says that he took known bots and random users, and used a word corpus to try to accurately detect the bots. He isn’t very clear , or I skimmed over it, where the word corpus came from. This seems very much like a sentiment analysis that I did in my BI program.
you're a good bot
Very cool. Good job.
To me it seems like Ruby's popularity in the West was heavily tied to Rails. As the Rails fad declined, so did Ruby.
Yeah, I agree. It was the cool thing to learn in early 2010s.
that moving scale on x axis is pure evil, whoever did this needs to stop
My friend Jordan is good at R.
Not sure what that means.
It's not exactly "stubbornly maintained", it's consistent with how the rest of the language works, and you can't break it without releasing a Python 4.
Yep, the only place Ruby has stayed strong is Japan
Interesting the big rise of SQL and R. Big data is big.
Could you give an example of some other part of python3 relying on this or sharing the same mechanics?
Did this module work for keystrokes as well or just clicking/mouse movement?
Does it accept IUPAC/SMILES labels as input? I tried to make something like that a while ago minus the visualization, but the scale of how many combinations I needed to account for in my project was overwhelming, I wish I had known about that PubChem API Pretty awesome though
Waiting for the source code so I can fix the bugs in the almost exact same thing I'm working on for a school project lol
Nice. Use alexa to order you a [pizza](https://github.com/gamagori/pizzapi) lol. As simple as "Hey alexa, I want pizza" .. responds with "Comin right up!"
Absolute unit you are Carl.... Cheers on the stellar work
i have a rough copy of the program which does not include the gui part...you want it?
I'm a tad late, but I'm continuing work on a script that's designed to make API requests to my company's backend server for some automation tasks. I finished the primary function which was creation of what we call "sites", now I have to work on adding a function that will add exceptions to those sites as well as enable and disable the sites.
Thanks Mate!!
Everything in Python is evaluated at definition time. There's no mechanism to defer initialization like this.
That's my challenge right now. The script I've been working on works, and my PM and manager are happy with it, but I know it's not nearly as pythonic as it could be which severely bothers me when I'm working on it.
If it is needed then i can add them to the application. Since i focused only on basic information of give compound or molecule i didn't think about the IUPAC names....
This is HUGE! As an engineer who uses MATLAB and Sypder, this makes my life so much easier. VSC all the way!!
also if you need reference for your project check [u/hvrc23](https://www.reddit.com/u/hvrc23) . His work inspired me to do this project. Also he have his source code in Github
No Perl? :(
Ever try Mint.com? I’m making a lot of assumptions here, but I think they already support all the functionality you’re looking to get out of your script.
Creating a windows chaosmonkey service using Transponder and Subprocess. A powershell wrapper via restapi with simple token-authenticating for filtering services/processes/iis app pools/sheduled services with start,stop and show status. It is used for testing server side failover and redunancy.
r/learnpython
I kinda liked it. It was pretty elegant, with those =&gt;
The creator has said in the past that they believe it would be easier to maintain Python 2 themselves, as well as all the associated libraries, than port to Python 3. :-(
You're not creating/suppressing creation of a new *class*, rather *instance*.
Interesting. The creator previously said ... &gt;1) Waaaaay too much work -- calibre has half a MILLION lines &gt;of python and python extension code &gt; &gt;2) calibre has lots and lots of code that deals with bytes -- &gt;network protocols, binary file formats, etc. Python 3 is simply &gt;worse than python 2 for this use case. It has a crippled bytes &gt;type among other unfelicities. &gt; &gt;3) calibre has lots and lots of native code that interfaces with &gt;external native code. On windows, all this code uses UTF-16 &gt;encoded strings. All that interface code would need to be re- &gt;written and would also become less efficient since in python 2 &gt;string are stored internall in UTF-16 whereas in python 3 they &gt;would need to be cross-converted. &gt; &gt;4) There is absolutely nothing in python 3 that makes it worth &gt;the effort. If python 3 ever grows something that makes it &gt;worth the effort, I will simply backport it to python 2. I already &gt;maintain my own python 2 fork for windows (see my github &gt;repos). &gt; &gt;The only case in which I will accept patches for python 3 is if &gt;they have: &gt; &gt;a) negligible runtime cost &gt;b) minimal code complexity/maintainability cost &gt;c) Low probability of breakage -- either the patches are dead &gt;simply or they come with lots of tests in 2015. I think he's a die-hard. :-(
Do the words "infinite loop" sound familiar?
I think it was built WITH c sharp, but not necessarily for c sharp.
I just started learning like a month ago, what steps did you take before you were ‘good enough’ to get a job? My goal is to basically do what you did. I’m working through “Learning Python “ (5th Edition) by Mark Lutz while working on a full craps game project with betting and npc’s atm. I’m wondering what your earlier projects looked like lol
I used Ruby for a while, but then I really hated the Rail's convention over configuration philosophy. The micro frameworks available in Python like Tornado, Flask, CherryPy, etc. convinced me to pivot towards Python. And I never turned back, because there were even more awesome stuff in Python, including its community, support on Windows (needed for the businesses that I work with), etc.
Both, really. It was (and is) written in C#, but more than that, when it originally launched, while it wasn't restricted to C#, C# overwhelmingly made up the bulk of the discussions there. You can see that on the video, too. Think of it as more of a "C# Q&amp;A site with areas for other languages" than what it is today. I don't think it was ever officially a C# site, but the userbase and content VERY heavily leaned that way for the first couple years.
Are you using the correct version of python?
I don't see the advantage? `f(:a =&gt; 1, :b =&gt; 2)`, `f` is called with one argument
I am using 3.7. I also tried to run the code straight into python instead of through geany and it worked. Also my other exercises that I’ve saved work still.
1. /r/learnpython 2. When you say you "execute it", what are you doing? What command are you running?
Your code is definitely valid python code, but it looks like it's not running. By the sounds of your error, you are on Windows? Your machine does not recognise the commands that you have given to it. How are you trying to run the file? Try: Python myscript.py
Because it's frequently used in programming.
I am using Geany and there is a button that says execute or I can press f5. This tries to run it in a command window
r/iwasverysmart
Are you running and windows and trying to run it like ./program.py?
Exactly, just depending on management at your company, that can be a justifiable use of developer time and resources to be proactive, or a punt to the "backlog" until it actually starts affecting their bottom dollar. Either could be viable depending on the specific situation.
Like running it straight through the command window? I've done that and it works. Not sure how to get it to work through geany. I made sure my python was up to date as well
&gt;Python myscript.py Like naming the file that? Sorry if that's a dumb question. I am like just starting today new. haha
Sounds like you need to update Geany's settings to point to the Python interpreter. Can read [here](https://stackoverflow.com/questions/2094105/how-can-i-configure-geany-to-compile-and-run-my-python-programs) to see if that helps.
I'm having problems with the GUI as well as the code. An extremely misplaced and weirdly misproportioned bond length appears :((
Thanks I’ll read over that now!
Actually my program doesn't calculate the bond lengths and display the image structure. It just scraps a website's data and display them in the application
Gimme your email address I'll send you a file. Use it as reference. Everything will be fine.
It’s Python doesn’t it work like import pyBestPractices?
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
:D Author here! This warmed my heart, thank you! It's hard to tell if people actually use birdseye, virtually no one interacts on GitHub, even to raise an issue.
I’ve never used pyautogui before, but briefly looking at their docs I see they have: &gt; size() - Returns tuple of integers: (width, height) for size of the main monitor. TODO - add multi monitor support. Maybe you can use this to grab and store the user’s monitor resolution. If you know where the thing you need to click is located on all monitor sizes then you can then write a function that will calculate where the target is located on the users screen?
Im sorry, i don't know then
Thank you for trying!
It's not a dumb question! I meant 'myscript' to be whatever you have named your file, it can be anything. I have read your other replies, and if it works by running on the command line, but not in geany, then it must be your geany settings. Your actual python script is fine!
You'll love PHP then, it uses =&gt; for arrays and -&gt; for accessing methods and properies \*ducks\*
The real move would be to write the python 2 death clock in python 2, that'd be some existential stuff
Thanks! Yeah, I checked the geany version and I’m up to date. All previous exercises work but this one. I believe it’s because I’m trying to create a list in geany but I don’t know what to do to fix it. Still looking though!
I think you're looking at it wrong. You're question is like someone asking "Whats a first wrench job like?" or "What's a first hammer job like?" Python just a tool that's to be utilized as a solution. The tool, is not the focus. It's how you use the tool to make something else.
Hah, I'm actually in a slightly different boat. I like Python over Ruby, but prefer Rails over Django, as Django gets into my way too much. Flask is really cool, and Nameko is great for building microservices.
I was curious what best practices it would give regarding testing. Here's the section: [https://docs.python-guide.org/writing/tests/](https://docs.python-guide.org/writing/tests/) It basically presents 6 different ways of approaching unit testing . That's fine, but I'd rather have the author be more opinionated. I.e. if 90% of people use the built-in unittest, tell people that's probably what they should use unless they have a good reason not to. That section, at lest, looks more like a list of common practices rather than focusing on best practices.
...with python probably.
It’s more of a project that I’m doing for fun and I don’t think ill actually use it to manage my budget. Mint does a superior job haha. What I’m really trying to do is just make my own banking application that grabs data from my branch using plaid.com’s api. I know it ain’t practical but nonetheless I’m having fun attempting to make it :).
Impressive! Waiting you to publish it. Will you add other characteristics like molar weight, electronegativity...
I mean it's all a work in progress right? Even with my very rudimentary understanding of programming, its evident that this is a constant learning process. I know it's going to be slightly messy but I'm hoping its the start to cleaner projects down the line. &amp;#x200B; Plus shorter code is not necessarily more legible code. I've been working on list comprehensions and while they consolidate multiple lines, I can' t help but feel that it would be tedious to understand the more complex cases as a reviewer. I'm also new to all this so maybe that's just my current view.
Sorry - I can't find the link to your code or a page for the app? I'd love to see it / check it out.
Share code pls
Thanks! I didnt plan to display any more data but if everyone wants some data to be shown then i will have to add some more data. Maybe in the future
You can find the code here: https://github.com/ABSanthosh/Chemical-Structurer-
you can find the code here: https://github.com/ABSanthosh/Chemical-Structurer-
Another thing you can do is to set the default as an immutable counterpart (like tuple), and convert inside the function.
code : [https://github.com/ABSanthosh/Chemical-Structurer-](https://github.com/ABSanthosh/Chemical-Structurer-)
Not to piggyback on a popular response, but I have a genuine question. I've seen decent Tkinter GUIs in the wild. Is there an abstraction library out there somewhere for people who want an attractive UI but also *don't* want to decrease the collective intelligence of mankind by creating yet another Electron app? My personal forays into the world of TCL/TK tend to make people nostalgic for the days of Geocities.
code : [https://github.com/ABSanthosh/Chemical-Structurer-](https://github.com/ABSanthosh/Chemical-Structurer-)
I'm more of an r/gatekeeping man, myself. A real redditor would have picked up on that
Here's a sneak peek of /r/gatekeeping using the [top posts](https://np.reddit.com/r/gatekeeping/top/?sort=top&amp;t=all) of all time! \#1: [On a post about their dog dying](https://i.redd.it/yoxbfwh3nm921.png) | [1198 comments](https://np.reddit.com/r/gatekeeping/comments/aeky3m/on_a_post_about_their_dog_dying/) \#2: [Unsure if this belongs here](https://i.redd.it/aqmqzr1bxvd21.jpg) | [673 comments](https://np.reddit.com/r/gatekeeping/comments/alyba8/unsure_if_this_belongs_here/) \#3: [Anything &lt;$5 isn’t a tip](https://i.redd.it/s8ulclj18cq11.jpg) | [5553 comments](https://np.reddit.com/r/gatekeeping/comments/9lktoe/anything_5_isnt_a_tip/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
Pick something that you really want to do and learn how to do it piece by piece. Stack overflow will be you friend once you learn how to google the right terms.
/r/learnpython read the sidebar
bitspleaseimtryingtocode@gmail.com