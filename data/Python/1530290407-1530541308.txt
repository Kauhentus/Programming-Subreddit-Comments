[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [guyskk/validr/.../**benchmark** (master → 1bcced6)](https://github.com/guyskk/validr/tree/1bcced669a28834455cd75ae7c558e113ad92ff8/benchmark) ---- 
Measuring software completeness with lines of code is like evaluating a plane by weight. Yes, a finished plane weighs more than a plane under construction, but that’s not the point. On a good day, I can delete a couple of thousand lines of code from a repo, but usually I end up adding a few dozen instead. 
Are you in North America? Europe? Asia? Does it need to be a phone call, or can it be a text?
This would be great for machine learning. You can down sample that stuff so much now. Ignore certain things like clouds, etc. etc. Way more efficient than training a CNN on the raw pixel output.
North America it has to be phone call but doesn't need to say anything
So, how many lines in your repo currently? 
I have like 50 different open source repos and I’ve worked on dozens at different companies. No idea how many lines. 
There is the Django Con which is a success happening every year with talks about architecture, infrastructure, extensions etc. Do you think it is "light in content"? For Flask Conf we are expecting a Keynote from core-dev, talks about architecture of Flask projects, use cases, infrastructure running Flask on "new developments" as you said, like Kubernetes, Docker, Serverless and all those stuff. Also talks about flask extensions and applications. That is not "light in content" there is a lot of things to do with Flask and its ecosystem! There will be also a whole day of Flask "deep dive" tutorial 
Poetry is a tool to manage any Python project, being an application or a library, while pipenv is built around application development. It also removes a lot of clutter that comes with traditional Python packaging: you no longer need setup.py, setup.cfg, requirements.txt, MANIFEST.in. Instead you only have one file `pyproject.toml` which is the new standard (PEP 517 and 518). Also, `poetry` also comes with a resilient and exhaustive dependency resolver that can resolve dependency sets that tools like pip-tools or pipenv aren't able to (see https://github.com/sdispater/poetry#dependency-resolution).
find . -iname '*.py' -exec cat {} \; | wc -l divide by two for an extremely rough estimate. (the insertion of a call to sed can remove blank lines, by the rough estimate is good enough to satisfy my curiosity - and that is all this is...curiosity. I am not trying to make some kind of weird profound statement regarding completeness, etc.) And, I am only talking about current work that one is actively responsible for.
Django is nice. user.redirect([https://2018.djangocon.us/](https://2018.djangocon.us/))
It is hard to take into account an opinion coming from someone who is apparently not able to understand a simple question. This is not about PyCharm Pro. 
Not sure what free voice calling services out there. You'd probably need to do some research. If you can live without it being an actual phone call, and a SMS message could do the trick, you could use an SMS gateway which wouldn't cost you anything and is relatively to code. If I was going to do something 'free' where I was to utilize my home landline, I'd probably go through some of my old parts and hook up an old external serial modem to a Raspberry PI. Then write some code to utilize the modem to make the calls. 
Working !!! Thanks you so much
Really quick... how much of your stuff is wrapping other old codes? I find as an aerospace engineer an absurd amount of my code is making better input and output stuff but that the core logic to solve most problems (trajectory analysis, propulsion modeling, etc ) exists as a legacy tool - far too often a legacy Fortran tool. So my mountain of code is largely wrappers, GUI's, output parsers, and plotting routines.
Theming the GUI itself or just the syntax highlighting? For the GUI itself and for any pyqt GUI, Look at https://github.com/ColinDuquesnoy/QDarkStyleSheet. This is mostly a solved problem, though a lot of work is currently happening with Qdarkstyle to make it easier to use across all the Qt flavors. There are also some threads somewhere about how to implement qdarkstyle in Spyder, which you should be able to find now that you know what to search for.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
Not written by me. Also, don't know the author. However, the post seemed interesting and worth-sharing.
I've taken to writing the underlying methods myself so all "original" code, very likely I'm rehashing work that's already been figured out, although not a lot of opportunity to actually see the source code out there for the things I've been doing. I'm finding the software in my area of practice to be very closed down with the open source options few and far between. It's more a self learning opportunity for me that just happens to end up producing stuff that is useful. Even with doing my own methods I'm also finding that a big chunk of it is rehashing ways of accessing those methods in an easy and meaningful way, which as my knowledge in Python grows that easy and meaningful is a constantly moving target.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Try /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. You may also want to try a website like pythontutor.com which allows you to visualize your code step by step. 
I am not sure what you mean by ForEach, but I wrote my own tool that mimics both `multiprocessing.imap` and `multiprocessing.dummy.imap` (for threads). It allows you to split a function up via threads and/or processes very easily. It also can show the progress as it completes the processing. Finally, while the arguments of the function must be pickleable, the function itself doesn't have to be. This makes it so you can use lambdas to wrap the function and add additional arguments. I should note that this probably has more overhead than other methods, but I like the added features. Anyway, without further ado: [`parmap.py`](https://gist.github.com/Jwink3101/494e741f07d33edea47d369bcfc4a54a) 
How much weight does your repo lose when you drop a couple thousand lines from it?
I think your better of in this subreddit: https://www.reddit.com/r/datasets/
I spent entirely too much time trying to figure out what Oreturn was
It flies 300 miles further on a tank of gas. 
That will get my virtual environments, so it’s not a guide to anything. 
Your solution seems quite well thought out. Lots of checks to safe-guard against possible failures (probably personal experience in each line of if-else, lol). I'll keep this in mind if I have any problems, as are likely to happen when involving multiple threads. To answer your question, in C#, there is a static library of methods in a class called "Parallel". One of the most commonly used methods in that class is "ForEach", since C# differentiates between a classic For-Loop: `for (int i = 0; i &lt; myList.Count; i++) { /* do something */ }` ...and the more useful but slightly less performant ForEach -Loop: `foreach (var item in myList) { /* do something */ }` Thus, the Parallel.ForEach method call allows you to take a sequence and pass its elements to a provided function, whether as an anonymous function of a method from a class. The syntax generally looks like this: `Parallel.ForEach(myList, x =&gt; x.DoSomething());` Since I couldn't "parallelize" my collection in Python, the only other way was to do so to the function, and so you have what I provided.
I would give it a second try but does it work with anaconda Python or pyenv yet?
That seems to be pretty much the reason behind half the languages that were “invented” over the last couple of years.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^^(This bot is currently under development and experiencing changes to improve its usefulness)
I've read this book and did a course based on it in my University! It is a amazing book indeed 
Using python to compile your language doesn't change de binary performance, only the compiler speed. I've used LLVM as IR to make sure the final binary is well optimized.
*sneks 
What I think you're ignoring is the fact that some people feel comfortable with certain languages. Python is one of the most used languages especially for beginners. I'm aware it is not ideal to create a production level compiler, but as I said earlier, this guide does not focus on creating a language on this level, just a personal project to learn a new topic that is really difficult to get into. If python is not a language that you feel comfortable using, I'm sure you can adapt what is shown on the post with other languages and libraries.
I know it works with pyenv on MacOS. I am not sure about other systems, I got reports that there are some issues with pyenv on Linux that are currently investigated. About anaconda, I am not sure since I have never used it.
cxfreeze is a way to distribute apps, and not really a compiler. It competes with pyinstaller and others. I personally recommend pyinstaller.
That's very cool. I think the coolest part for me is finding out that there is an excel table with all the standard shape dimensions. Have you considered adding things like AISC buckling?
This is not _guaranteed_ to work and may break unexpectedly e.g. if you do an update. If you want a robust solution, json only guarantees the order of list items, or you can encode the ordering into the data by adding an index field.
You’re supposed to walk us through how to install it in excruciating detail with a microphone that sounds like it’s in the bathroom down the hall.
I may be able to point you in the right direction if you give more detail as to what type of ATC data you want.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Somewhere between 0 and positive infinity.
this might be what you are looking for [**https://openflights.org/data.html**](https://openflights.org/data.html)
You're right. I knew something was missing!
Life need not be so serious. Play a little. How many lines of python would you consider to be “a lot” for a single programmer to manage alone? Common. Play. 
&gt; I thought Anaconda Prompt was a modified command terminal, not a Python interpreter. You're right: The Anaconda Prompt is a command terminal that adds the Anaconda installation path to your PATH environment variable. But I was not talking about it, but about the Anaconda *Python interpreter*. Look, ArcGis comes with its own Python (from what I've heard) and that Python is different from the Anaconda one. So you need to be sure to install `spyder-kernels` in your ArcGis Python (using pip, I'd say, and not conda because conda ins only available in Anaconda). &gt; if there is a possibility of conflict between the bit rate of the Spyder installation and the installation of ArcGIS, would I need to reinstall a matching bit rate Spyder program or is there some way I can emulate the proper bit rate? Yes, both have to 32 bits or 64 bits to avoid ugly problems.
Find a project. Do it. What are you excited about? Why did you learn python? What would make your job easier? Pick something, then make the shittiest possible version of it. Then make it again, but a little less shitty this time.
it does even more: the same works for any string statically entered in the source code, as well as for identifiers used: &gt;&gt;&gt; "foo" is "fooo" True &gt;&gt;&gt; class foo: pass True &gt;&gt;&gt; name(foo) is "foo" True only when forcing python to construct a string at runtime, this intern-ing process does not get triggered any more: &gt;&gt;&gt; "foo" is "f" + 2 * chr(111) False if you're feeling like exploring exotic features, you can even tap into the process, eg. if you receive a string from a database and you know that you'll need it often: &gt;&gt;&gt; "foo" is sys.intern("f" + 2 * chr(111)) True
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I'm sure there's a Google voice API, everytime I've called myself with it has been free. If there's no API, you could always use selenium.
for a single person on single proejct, it can get up to thousands i'd say across multiple files. This can work ok if there is good documentation but often there is nothing because it was just 1 person coding under some insane deadline. i actively work on multiple codebases spanning some insane number of lines, it's hard to measure but i'd guess 10 to 100s of thousands of lines. 
So, when does it cross the line from “meh” to “a lot” to “Holy #%%}”? I would say “meh” to “a lot” at ~50,000 “A lot” to “Holy ^%}}}{“ at -250,000 
How it compares to conda? Has it greater or lower number of packages? Can it create virtual environments?
this thing inspired me to learn tkinter and now I know it.
Dell Precision Laptop M3800 Kubuntu 18.04 (Bionic) Way prefer this to Mac or Windows. Closer to the metal. Everything just works. Don't need to do extra setup for development like my Mac and Windows friends do. Vim &amp; tmux within Konsole - gets stuff done quickly especially when working with lots of different repos at the same time like our current microservices based project.
That sounds like a more complicated way to do things than py2exe or it's cohorts.
Ahhh thanks mate
Benchmarking just with pystone is really silly, as it only tests integer arithmetic. The vast majority of people are not doing just integer arithmetic. Pystone is a port of the old dhrystone which is decades old at this point. There is an [authorative benchmarking suite for python](https://github.com/python/performance) for a reason: benchmarking is a lot harder than it seems. For example, here PyPy can do some really great optimizations on the code because integer arithmetic is pretty straight forward to optimize. Now this benchmark might make you thinkg PyPy will be 10x faster than Python with numpy, because this is all numbers, right? Wrong PyPy cannot do as many optimizations with numpy since significant portions of numpy are native code. So while I'm almost certain PyPy will be faster than CPython, this benchmark is pretty misleading on how much faster. This is to speak nothing of differences in server workloads, data processing, quick scripts, etc.
I like this. As a teacher this seems like a neat way to save sessions and share for later. Is there a way to affect the timing (e.g. Pause, stop, or continue)?
Sorry, I did actually mean py2exe. I have no idea how that happened, and I will edit the post.
Oh, I meant the cxfreeze thing more. If you're distributing some bytecode that needs python plus the framework, and the performance is the same as CPython, it sounds just like source-code hiding. Doing the py2exe thing, you just have one binary and you don't have to worry about dependencies, versioning, or as smart of an end user.
This interview with Trey Hunner discusses his use of automated tests to help teach programming. Automated testing is a huge part of developing great software. But many new developers don't get exposed to testing for quite a while. But this is changing. New ways to teach programming include automated tests from the beginning. Trey Hunner is a former PSF directors, a Python and Django team trainer, and he has been using automated tests to help people learn Python.
Translation: you should not do this. Future you will hate you if you do.
&gt; Demo code, not production ready in any meaningful way :) When has that ever stopped anybody? In 6 years time this will be some giant app used by half the world, it will break spectacularly and we'll track the error down to this single snippet, still in use.
immortality comes in different forms i guess 
No, SVG doesn't support this, for your purpose it's easier to use asciinema
https://blogs.msdn.microsoft.com/ericlippert/2009/09/28/string-interning-and-string-empty/
That's a paradox. Imagine a heap of sand. You carefully remove one grain. Is there still a heap? The obvious answer is: yes. Removing one grain doesn’t turn a heap into no heap. That principle can be applied again as you remove another grain, and then another… After each removal, there’s still a heap, according to the principle. But there were only finitely many grains to start with, so eventually you get down to a heap with just three grains, then a heap with just two grains, a heap with just one grain, and finally a heap with no grains at all. Now think of the grains of sand as being lines of code. It's the [Sorites paradox](https://en.m.wikipedia.org/wiki/Sorites_paradox)
Non-Mobile link: https://en.wikipedia.org/wiki/Sorites_paradox *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^195850
**Sorites paradox** The sorites paradox (; sometimes known as the paradox of the heap) is a paradox that arises from vague predicates. A typical formulation involves a heap of sand, from which grains are individually removed. Under the assumption that removing a single grain does not turn a heap into a non-heap, the paradox is to consider what happens when the process is repeated enough times: is a single remaining grain still a heap? If not, when did it change from a heap to a non-heap? *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Writing your own language can give you insight into the choices existing languages make and possibly lead to ways to improve existing languages, such as Generic Java leading to generics being added to the Java standard. Conversely, one may want to take the lessons they learned from an existing language and create something new without all the historical baggage like Martin Odersky did with Scala.
Yeah AISC and The American Wood Council have some great free resources. Eventually yes, right now the steel_calculator.py file contains the 15th edition database and performs the chapter F, flexure and G, shear calculations for everything except angle and double angle shapes.
Then I suppose it is a good thing I have a paradox machine (http://tardis.wikia.com/wiki/Paradox_machine) to cancel out the effects. So, where would you draw the lines? 
I can program in Python better than you can. It's not a matter of comfort. What I'm saying is that when you don't know the subject well, but rush to publish a manual on a subject that has this particular nature where overwhelming majority of programmers will almost never have to deal with it, but on a very rare occasion that they might, they'll reach for the first result in web search and copy the garbage from the browser verbatim into their project. This is how we have languages like Python, C++, or Protobuf, Thrift, JavaScript etc. Languages that are full of basic stupid and painful mistakes which should have never gotten past a basic code review, if their designers had anyone to review their code. You just contributed to the bunch of nonsense in this world. But, you don't even understand that.
What libfreejaeg pointed out was/is a lot of what I was looking for. Very cool. Very. But, beyond that and asking too much I'm sure; what about a history [slice of] of logged flight plans too. Is that out there somewhere? Something? sort'a kind'a? 
Yes. i keep forgetting about that avenue. 
I would to it like this: import csv import sqlite def load_csv(): """Converts the csv file into a list of lists.""" with open("data.csv", "r", encoding="utf-8") as temp_file: return list(csv.reader(temp_file)) if __name__ == "__main__": rows = load_csv() print(rows[0][0]) # Prints the first column of the first row. print(rows[1][1]) # Prints the second column of the second row. The idea is that once you convert your csv into a multidensional List, it would be easier to get exactly the value you need. 
I wrote my own because I needed the ability for old versions of an object that had been serialized into a db to be brought out and deserialized and upgraded to the current code bases version of the object. When I wrote it there was nothing to do this
I do know whatever you make at work on their time and computers is considered their property so if that was true they could fire you and keep using it.
Maybe [planefinder](https://planefinder.net) has an api. Haven’t looked into it, but I know the platform allows you to see real time plane data
I'm not going into details of all the logical fallacies in your argument, nor your arrogance when talking about other people and topics in general. I think the main problem here is discouraging people to learn something based on a programming language. This agressive mindset can discourage people around you, not only with compilers and programming languages. If someone was encouraged to learn and research about the topic I wrote after reading my post, my task was fulfilled. I'm not here to judge what's best to the community, that would be too authoritarian, but I think this is not a problem for you.
500 lines per week × 40 weeks per year × 30 year career = 600,000 lines. 
If you can automate your job well, then it should show your employer you are talented and they should find a way for you to continue to improve things and compensate you accordingly. If they don’t, it’s time to move on.
A porn app
Care obviously has to be taken with these features. It is all fun and wonder that you can build dynamic code. Analyzing this particular use, notice that the stock quote is loaded at import time and then kept for the duration of the run. In most situations this is certainly not what you want. And this is likely to tempt you into using inline imports which certainly has longer line length and subverts expectations for imports, than importing the stock symbol builder and calling the appropriate property when a value is required. Good experiment; not for production.
Came to say the same thing find a project that is dedicated to stuff you think is cool and contribute to it. They prolly have a github repo with issues that are labeled good for beginner
You would automate yourself out of a job
There is no one right answer for everyone. Atom works fine for me. 
Heard good things about pycharm
I’ve been impressed with VS Code. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Atom is not an IDE
What in the name of... Impressive. Very impressive.
I remember once automating a job that was expected to take me 40 hours, where 8 had to format a text file with a bunch of text into an Excel file with different attributes of a person. I was payed the same amount. It took me 30 minutes to write the program and run it
If they get rid of you for doing your job well, you are better off somewhere else. A good employer will see that you save them money by doing things efficiently. Automating something doesn’t mean that the task will run forever by itself either.
Very cool stuff... I am a civil engineer who uses a lot of open source Python libraries to automate tasks in the water resources field. It's great to see other civil engineers using Python, 
Pycharm is the right answer. All other python ides are cheap imitations.
Jesus fucking Christ man... Do you need a hug? 
The tooling integration and new options are very good. Like the new addition of Black.
Pycharm or VScode.
How good is it in handling other file formats? Most people also write code in other languages. 
Just a question, why py2exe instead of pyinstaller? I’ve used both, and I preferred pyinstaller, mostly because of some issues I had with with getting py2exe to work with PyQT5. 
Yeah but your still unemployed till you find that place that's better.
Very good. PyCharm basically supports every language that JetBrains has an IDE for plus some. However I'm a little unclear how that doesn't cannibalize sales of their more expensive products, so there got to be some sort of limitations...i just haven't run in to them and I use a lot of languages. 
I’ve used [voluptuous](https://github.com/alecthomas/voluptuous) in the past. 
I haven't done this, but I saw a story of a guy on reddit years ago who worked from home in some kind of data entry job that was pretty high paying, and his entire work day consisted of running a script and making sure it didn't crash. He just never told his employer about it.
What if you require a password to be entered to run the program? Could they force you to either remove the password or tell them what it is?
Also this though I can't speak to how it's progressing as I stopped following after the first couple of weeks https://github.com/pervognsen/bitwise
If someone misses the joke in this comment they are going to hell
Ah, so guessing Flask is the beginner alternative to Django?
Nope, you would be fine
It supports all languages I have ever heard of. Jet brains \[the creators of pycharm\] also have dedicated ides for many many languages. It supports languages inline too so you can switch from python to HTML to java to java script over to CSS throw in some SQL no problem. In my opinion pycharm is the ONLY python ide. Nothing even comes close.
Our farms are heavily automated using Python. Water and light cycles, nutrient dosing, water management.... In addition in a similar spirit, we automate as much of the labor as we can by making better tools (kind of like a script, it prepares 169 plants at a time to transplant instead of 1 at a time.). I am working on making similar improvements to the cleaning and sanitizing process. We find things for our team to do and still get their 40 hours, but you could easily argue without these advancements we would have more workers. For reference we are currently harvesting over 41,000 plants a month every month. My philosophy that is shared by our "software engineer" is to continuously improve, but we are fortunate enough to work for people that value the process more than the weekly labor so we don't have to worry about working ourselves out of a job.
Vscode
If only python was an interpreted language, so they could get access to the source code and comment out your password requirements ;)
Goat book guy?
What if you just worked on the automation at home on your own machine during your off hours?
weren't you just saying the numpy developers needed a hug?
That is what amazon is doing everyday. They get into a business, automate the hell out of it, then they can use their experience to get into another business and automate the he lol out of it. They did that to online shopping, then they did it to warehousing, then they used the technological expertise they gathered building all those servers and built AWS. Then they went on to build on that tech knowledge to build their tv business, music business, and then they combined the two with Alexa. Now they are setting their sights on health care which is an area that is sorely lacking in automation and they can do a lot there. By automating insurance claims, prescription delivery, and other things they can easily save the US the massive overhead wasted in those areas. If you automate your job and they take that and fire you instead of promoting you and giving you a bigger challenge, they would be idiots and you can just go consulting with their competitors on how to automate the same job in other places. 
Define logged. In aviation we use the term "filed." There are two kinds of flight plans, the VFR "SAR" plan which is used rather infrequently and the typical IFR one which everyone thinks of as a flight plan. The one that is filed is often modified in flight. There are certain open services that will give you what is filed and then the routing that the flight takes. So it depends on which you want, if you'd be willing to scrape (which is pretty easy to do in Python or any language), and what purpose the data is going to be used for (some services require payment to be used commercially).
No, that's [Harry J. Percival](http://www.obeythetestinggoat.com/) 
Dictionaries are ordered in PyPy and CPython 3.6+. 
No, I wasn't. Do try to pay attention and keep up.
This sounds insanely cool. You should really write a blog post on the subject :-)
Sorry, i apologise 
One should not automate their job away. One should automate a 40 hour/week job down to a 10 hour/week job, and use the extra time to pretend to work and/or learn more python
I don't think it supports the big langauges that have other entire IDEs for, such as C or Java, but the professional edition has the entirety of their web focused IDE WebStorm built in, as well as other languages. 
I wouldn’t say either one is easier than the other. Both will be about as difficult in different ways. I’d say if you just want to build something fast Django would be best but if you want to learn more Flask could be a better option. 
I'll send you a message sometime
only if somebody else there also understands what you did to automate things. Automation doesn't work perfectly forever. platform/code updates can easily mess with your automation to the point where you have to fix/do it again. 
That's a great way to learn and earn promotions, or find new jobs with new challenges. No matter what you're doing, try and find a better way to do it, make it simple, and move on to the next challenge.
The only reward for working too fast is more work.
How long?
Voting for vscode. Not really a fan language specific IDEs
I did it in my previous job, and they immediately broadened my Scope of Work.
Pelican is another good option for a simple project. 
But we’re all friends. :) Harry was on http://testandcode.com/9 
This is seriously cool. Good stuff, man.
I don't know why you're getting downvoted-- this is unfortunately true. Back in my Junior year of high school, my physics teacher hooked me up with an internship at this new startup (I'm redacting some details just for privacy). For those who think this sounds familiar, this is the data entry story I like to tell. I was hired, 60 hours intern, then I'd be compensated with "equity". This should have been a red flag to me, but I was young and stupid. First thing they had me do was manual data entry along with some other folks. Each group of data being entered took anywhere from 8 - 16 hours most of the time, but it could take even more. I wasn't having any of it, so I wrote a script to do it for me, in seconds. They fired everyone else who was doing this job. Red flag #2 (of many, some of which I'm not saying). Then I automate it even further and parallelize the script, so thousands upon thousands of groups of data would be automatically scraped and entered in the matter of a few hours, with less than 1% needing human intervention due to the system not handling some characters correctly. Oh by the way the system was a a bunch of excel spreadsheets, because who needs a database like I wanted when you can use excel, right? Red flag #3-- they kinda just stopped needing me after that. Eventually they called back, but because of red flags 4-23 (which I kept being reassured by teachers were normal), I quit soon after that. Oh and never actually got anything-- they got free labor bar the fact that I somehow managed to keep the copyrights legally speaking of all the code I wrote according to a lawyer friend off of some technicality. So that's cool because with a few modifications it can be useful for a variety of applications. The company went bankrupt less than a month later, because the co founder and lead dev never wanted to actually get anything done and was a lazy drunk who actually lived in the office following his less than mutual divorce. And then I get a call (the number of which I didn't recognize so I didn't pick up) and a text from the other co founder years later, literally while on the bus to college for the first day, because he has some new project he wants me to work on for them and "only you [I] have the skill and motivation to do it!". Yeahhhhhhhhhhh, no. Morals of the story-- * always get paid, don't take "equity" for an answer. The shittiest code you write is more valuable to a company than the manual solution. * quit when you have red flags/bad experiences * once you automate your job they won't care about you, unless they can dump other things on you to automate. And eventually that will run out, and so will your party.
Except the fact is unfortunately many managers aren't smart enough to realize this. "Works now, works forever, no way anything can break due to things out of our control, now gtfo"
Depends on how much money your employer spends on lawyers https://www.quora.com/Can-a-company-claim-ownership-of-a-personal-programming-project-that-you-only-work-on-at-home-outside-of-work-hours-What-if-its-an-idea-that-you-quit-your-job-to-pursue
Freeze it with pyinstaller/cxfreeze/py2exe-- problem solved. Unless of course those can be easily reversed, but I don't recall this to be the case.
While funny that's highly unethical to hide from your employer, and can easily get you fired.
Never seen so many features, congrats. Just wondering why it's all in 1 package and not broken down in multiple packages? 
Is it? They paid you X dollars for Y amount of work. I'm sorry that someone else doesnt know how or want to learn new tools. 
Except that's not true. Many times you aren't payed for the work you do, but for the time you are spending. Easiest example is a by the hour job-- in the eyes of your employer you did 8hrs work in 1 hour. Thats impressive, for sure, but unfortunately this doesn't mean you get to slack off in your remaining hour. It means you should be asking for a significant raise, and keep asking for more and more difficult work to fulfill the time. However if you don't get the increase, fuck them and quit.
In this case, learning python furthers your job. It is not wasted time. ;) 
Just because you automate your work in Python doesnt mean that all remaining jobs can be automated in Python, thus it is wasted time to the employer, unless it is a software dev position
Welcome to marxist theory of values
Ah alright. Will Sentdex do for learning Flask?
So break it and quit 
Isn't that good though? When it comes to salary review you have more stuff to say you deserve paying for 
This is a worthless benchmark written by someone who is ignorant of the tools he's using. It's literally less than useless, it's a disservice to anyone who reads it.
I remember a post about someone automating their job a while back. He would then play league of legends every day until some networking guy caught him. Not sure what ever happened to the guy. 
I'd read it.
Yes. It did happen though, was rewarded with a nice performance rating.
I don't get why this article is upvoted, it's very misleading.
If you do, tell everyone you will be working from home. 
Try /r/learnpython, this question is better suited for that subreddit.
What pyinstaller does is it collects all the files used (including libraries installed through pip) and python executable and packs it into one exe file (if you select `--oneline ` option, otherwise it's in a separate folder) . When you run it, it actually first unpacks everything to a temporary location (if it was packed into single file) and then execute it. Some libraries have hidden imports, and you'll need to specify explicitly you want to import some part of it! You can read more about it in the documentation : https://pyinstaller.readthedocs.io/en/v3.3.1/operating-mode.html TLDR: yes, it'll work. 
Highly unethical, for reasons I really don't think need to be spelled out.
Completely wrong. You're payed for the value of your labor. If you automate your job, you're creating the same value, but faster. There's nothing wrong at all with benefiting from your own ingenuity in that way.
Check out [this article](https://www.businessinsider.nl/programmer-debate-secretly-automating-their-jobs-2017-7/?international=true&amp;r=US).
If there's anything I've learned from reddit you charge 10 times your salary for consulting. 
This sounds pretty similar to the story you're talking about: [https://workplace.stackexchange.com/questions/93696/is-it-unethical-for-me-to-not-tell-my-employer-i-ve-automated-my-job](https://workplace.stackexchange.com/questions/93696/is-it-unethical-for-me-to-not-tell-my-employer-i-ve-automated-my-job). Personally, I think the employee should have come clean about it to their employer, and adding extra bugs was a little questionable. But basically they put a lot of work into automating their work in the first place, and having an employee with those skills should be useful to pretty much any company these days.
ideally you’d do only validation in the getattr, see if the symbol actually exist. then in the data class, use lazy loaded properties
[Code](https://github.com/lduck11007/doublependulum/blob/master/main.py)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [lduck11007/doublependulum/.../**main.py** (master → c4884ca)](https://github.com/lduck11007/doublependulum/blob/c4884ca2c2bd9a13940a26e88827cd78fc988c83/main.py) ---- 
I remember reading some years ago about a guy who “automated” his job by outsourcing it to China. Like he was paid say 100k by his US employer and he just hired some dude in China to do the work for 20k. 
Probably the only time this would be a problem is if there was some sort of intellectual property involved or you were trying to resell the software as a commercial product. Without those things it's probably a gray area at best and heavily reliant on your employer and relationship with your employer.
I mean sure, you'll probably get better performance, but a big area of research is in how to deal with noisy environments
Hadn't seen that thread before. I kinda have a feeling his coworkers would be pissed at him if they found out. Not because of the wages he collected though. If he came clean and tried to pitch it as a good idea, he may create a job for himself but he would be automating his coworkers who check the results out of their jobs.
i've fixed a few small things so view the most recent version at https://github.com/lduck11007/doublependulum/blob/master/main.py
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [lduck11007/doublependulum/.../**main.py** (master → 85ab899)](https://github.com/lduck11007/doublependulum/blob/85ab8994cd6198b42136d688ce0aa76a07118e79/main.py) ---- 
My brother in law works from home and has automated about 70% of his job. He hasn't told his employer but instead profits off his free time to run another small online business and plays a lot of video games. 
My grandpa used to say if I worked hard and put in the effort for 8 hours a day, one day I could be a boss and work for 12 hours a day.
I'm in the process of doing this. I work for a video on demand site and have to take in a lot of content from various sources and encode them and put them on a CDN. The videos require lots of processing - manual processing. I'm looking into automating as much of it as I can but it's challenging, because some of the problems are actually difficult, and the content is so varied that there's no one size fits all solution. I've almost reached the limit on what I can do without spending significant time on this, and unfortunately I don't have the time to write the automation because I'm too busy doing the work that needs automating. I've thought about looking at machine learning for this as I have a feeling it might be the way to tackle this successfully, but I don't know enough about it, and it's possibly beyond my abilities. My employer knows all about my aims, and is actively encouraging it. I won't be fired. I'll be given more interesting work to do, plus a pay rise.
This is awesome! Nice usage of the new @dataclass decorator and im relatively new to programming and is interesting to see __getattr__ used! 😀
Rating with more money?
They'll sue you for extortion. They might not win but you'll be fighting a lawsuit while unemployed.
Yes, obviously! No one is going to be content with "wow, you did great" unless it is followed with "Here is your revised compensation".
Haha, I ask because I’ve seen it happen at work. Glad you paid for the work you did!
What do you grow?
More work without any monetary benefit. It sucks!
If a colleague needs the 40 hours, I deserve the payment.
works even outside of IT. My dad worked as an auto detailer for a dealership, and they refused to give him raises even though he was the best in the area, and had been there for years. He quit, got a loan for his own equipment, and worked on his own. Same company gave him work 3-4 days a week, except instead of $15/hour, he was making $75. 
pycharm?but i'm using vscode pycharm is free for students,i get an account just now
My job is writing software to automate things, so....no.
Oh okay, goat book is nice so far
That's cool, I've not come across curses before. It looks a bit naughty in your function to use the global variables, the function should really have access to them some other way, such as enclosing the whole thing in a class instance and doing self.terminal etc..
This highly depends on the project you want to do. My advice, figure out what you want to make. Then make a list of all the components/technologies you would need to make such a thing happen. For example: say I wanted to make an ecommerce website. I know that I need a front end, a backend, probably a database to keep the relation of the items I want to sell, a way for the backend to communicate with the front end and vice versa, a way for the backend to hook on to data from the database. If you’ve never done it before, don’t worry about the *right* way to do it; spending the time learning how technologies fit together even if it’s not what you end up using is invaluable. Then slowly add things. Say I want to integrate authentication, so I look up how authentication might work with the foundation I’ve already built. Then i want to work on payment, so I add that to the mix, seeing how it would work with what I have. You’ll quickly find that some things have synergies with each other. Other things will introduce limitations that force you think about the architecture you’ve chosen. Don’t try to avoid picking the wrong thing all the time because the knowledge of limitations is almost, if not more, valuable then knowing one correct way to solve a problem. Think about it like an engineer would and add a feature at a time on foundations that you’ve tested. Real production doesn’t follow a set guide, it’s usually a step wise process trying to find the best possible solution with the information you have. “Best” might mean different things depending on the situation, whether it’s if you want to prioritize scalability, speed, or even creating quick solutions to meet a deadline. If you don’t have any idea of what technologies are out there or how they interact, start making a concerted effort to learn the words and the vocabulary of dev speak. Look up developer road maps on github. Understand the strengths and weaknesses of different technologies. Good luck, and just keep working.
The company Palantir co founded by Peter Thiel uses a mixed approach of computer automation and human assisted work for data analytics. If its in your budget and the cost benefit/work/time analysis makes sense, see if you can delegate the manual work that you can't code yet into an Amazon Turk job or Fiver. If the manual work is streamlined enough, you might be able to delegate the task out and free your time for other work.
We almost automated an entire team out of a job for data entry, only problem was the input needed to be checked manually to make sure it was formatted correctly, because characters other than English.
A project that involves all elements of a real production system will be difficult to build as a single spare-time developer. If you want to build an industry-relevant portfolio I would do it like this: * Create multiple smaller projects, each focussing on different aspects of real-world production settings. Precisely define your scope and leave out things that are beyond it (e.g. "I'm going to create a real-time Flask app based on Websockets"). * Instead of adding a ton of features, make sure that you use professional software development practices (coding style, tests, continuous integration, automated deployment) 
You can either do that yourself and reap the rewards (promotion, recognition, etc) or let someone else do it while you're made redundant.
That's a lot of weed
Lol
Automate yourself out of a boring job with Python
Thanks for the thought and encouragement. To start here is a [shameless plug](http://www.tigercornerfarms.com/) for our website which does read pretty good. The more software focused part of the business has started expanding into [craft breweries](https://www.boxcarcentralllc.com) as well. Same concept of monitoring parameters (temperature and other things) and controlling something in the real world (moving a solenoid change the coolant flow to bring temperature up or down) And we grow wholesome lettuce, arugula, and other leafy greens here. No reefer
I wish there was a feature (and there may be - if there is let me know) where you can "star" a post like you do a github repo. If so I would star this post and monitor the replies. I too would like to see a guide on setting up a production project. I feel most of dev work is preparing for dev and staging environments and use so why not start thinking that way early?
Good read!
I haven't automated my job completely, but my job is based on automating things that need to be done which are currently being done by hand. Thankfully all of my colleagues have too many things to do, so no-one will get fired because I automated their job away.
This. Is. True. Happened to me once I automated my daily BAU (main aim initially was to ensure I went home on time). Had to tell my boss, to be fair. So now I'm stuck with a lot of ad-hod projects that's causing me knock off later. The irony.
Wow, I'm impressed
&gt; highly unethical to hide from your employer Found the Japanese or US American. 
Kinda depends on who you work for and how strict they are with their charge codes. So while you might be paid for the value of your labor, your employer might charge your work to different contracts.
If no one else there understands how complex and valuable the work you produced to automate your job is then there’s a risk it is hugely undervalued. I’ve learned this from experience. I automated overtime calculations and produced an application that could map overtime productivity against overtime spend for a very big organisation, broken down to individual staff members (over 50k staff) about 10 years ago when I was doing basic admin work as a teenager. It took me a lot of my own time to develop and maintain this application and add additional functionality as requested by management, I did all this in addition to my day job admin work. It probably saved around $20k per month in man hours, plus provided management with new data that allowed them to strategically prioritise the work for overtime workers, and identify slackers that just turned up for the money and did nothing as well as the high performers to reward them appropriately/give them more opportunities to work overtime. I got a $50 gift card and was knocked back when I applied for promotion about a year later. The organisation in question is full of middle aged people that don’t understand technology too well. (I’ve had 4 promotions since then and am now at the upper end of middle management, for anyone questioning my suitability/capability for more senior roles)
Automate what you don't enjoy, then focus on driving more company value in areas you do enjoy, then you get more involved in projects which interest you and you will develop a better skill set as result. I have done that for the past few years and now enjoy my job significantly more and get paid significantly more also.
Generally people put the type annotations like `symbol: str` not `symbol :str`
&gt; with less than 1% needing human intervention due to the system not handling some characters correctly. Out of curiosity did OCR play a role in the automation? 
I'm aware, but this sucks because it looks confusingly like dicts { hello: world } vs hello :str = "Greeting" In functions it's even better def hello(world :str) -&gt; str: ... colon before means input type, colon after means return type
hashlib.sha256.digest(input) = HASH
What is unethical about it? If you're getting the job required of you done then there's absolutely nothing wrong with it.
I love this! I'm brand new to python. Could you add a version with comments explaining it?
Awesome!
Work smarter, not harder. If you can get the job your employer expects of you done with a script, then congratulations. Any employer that expects you to do something manually that can be done to the same standard automatically is simply inefficient and it's only a matter of time before someone, perhaps a competitor, takes that job away from them. You can't run from automation, it is going to happen. It's better to ride the wave than fight against it. On the flip side, if you have completely automated your job then what use are you to the company? Some companies will kick you out, some companies will recognise your ingenuity and help foster it. It really depends on the company and people you work for. Personally I automate as much as I can and the company I work for encourages it, but if you're not sure then tread lightly.
Factor in benefits and he might not be making as much as you think. Self employment isn't just bank rolling. You need to pay your own insurance, retirement, etc. 
Neither.. you would quit and sell your software. 
It's supposed to look like dicts
That's probably pretty intentional that they're similar, since they're just stored in the `__annotations__` dict exactly like that.
When I first read about module-level `__getattr__`, my first thought was how this will be abused. But I wasn't prepared for THAT. Oh God. Somehow, the most offensive part of that to me is actually throwing an `ImportError`. 
what would be appropriate?
Not if you get paid in piece rates like in agricultural labor markets....
This should be the top comment 
You can save the post and monitor it from saved posts.
I hope you moved on. Or, get out of admin roles on the business side and see whether you can shift to an internal software development role.
Its perfectly appropriate 
just curious what his job?! what kid of joy ou can automate 70% of it from home and pay decently?!
Working fast is scabbing on the unemployed
Latter, but yeah, that's just how how work works here mostly.
The application wasn't querying stocks but rather querying something that's static and doesn't change often, i dont see why this is a bad solution. Client side code looks pretty natural to me and you get free caching. 
That's not true in any line of work in the US-- do it and see how quickly you get canned.
It could probably use some refactoring. Most of the variables I had to declare as global were done more as an afterthought to print positions and angles at the bottom of the screen. The program would still work if they were removed.
That's not how a lot of work in the US works, unfortunately. Enjoy trying and getting fired.
I moved to a different part of the business (and from a small town to a big city), this was 10 years ago and I’ve had multiple promotions since then but my career changed direction towards policy/legal work. Software development is still a hobby though and I use it for data analysis/visualisation in my current role. 
No, webscraping sites of varying formats that change slightly page to page due to the extensibility given to the inputter. The issue was there are some unicode characters that are just strictly not allowed in XML documents like excel files, and while in most cases they could be stripped out, rarely they were used in a modifying or meaningful manner to the data, such as bolding the text or adding an accent mark without actually being an accent mark. Which didn't make sense to me. OCR would also have be done at some point, but, well, you see how the whole thing went.
The more downvotes and replies I'm getting, maybe it's a strictly American concept, but you're paid not for the job but for the time, and if you finish the job in less time you're supposed to notify for more work. There was one guy who completely automated his job a while back who then did whatever he wanted on company time and got fired and blackballed soon after for "ethical concerns" or some shit. You have to understand, my personal code of ethics, I don't agree. But the code of ethics of the society around me does, because extreme penny pinching capitalism is bad and what we have even if capitalism is fine. That's what I mean by unethical, and why you'd get canned.
Trey Hunner had a great [list comprehension/generator](http://pycon2018.trey.io/index.html) class at PyCon2018
That's not true. I'm in the US and my comoany just want the work done well. We are paid for 8 hours a day working remotely. If we finish all of our work we can do what we want as long as we can answer our phone. They know and don't care. Some weeks I am done with my work in a day. I'm going on 5 years at the company.
Primarily that you can run python in mako where in jinja you would have to introduce new syntax with macros. mako requires discipline on the developers part to not put all logic in the templates where jinja somewhat enforces keeping no n-view code out of the templates. Here's a thread where this has been discussed previously... https://www.reddit.com/r/Python/comments/ktjm2/jinja2_or_mako_templating/
Thats the first time I've heard of such. Not caring, say, for 6/8 hours, understanding, but less than that, in all cases I've seen they just want you to do other things in that free time instead, so they find it worth it for the fact that they are paying you.
It’s pretty easy.
**Why** is the order so important? If you're just storing in a DB...DBs don't care about order!
Then one day a competing company will go full automation and blast the company you work for out of the market. Good riddance.
Really? Haven't used those utilities before but there's been people I've seen ask the "help me unpack this" question and not getting to a solution.
Pretty cool! You are doing very well, I especially liked the diagrams/graphs! Glad to see other civil engineers working with python!
My job is to Automate things that aren't already automated. I prefer to use python where I can but I also use EEM, TCL, bash, JavaScript and html. The web stuff is just to show the progress of the automation. I have the best job ever, wouldn't change it for anything.
It's not his job to make sure that his coworkers continue to have a job. This might sound harsh but that's how it works. If your job can be done by a computer, I would start to look for a plan B. Again, that says nothing about yourself or your qualifications, you could be amazing at your job, but if the computer is better, you are gone. It's the reason nobody employs lift operators anymore, elevators have been automated completely. 
[This](https://interestingengineering.com/programmer-automates-job-6-years-boss-fires-finds) guy did. 
Ah sorry, my post wasn't meant negatively. I thought your idea was pretty interesting, and you mentioned yourself that this isn't meant for production. But generally, not having an `import` statement fire HTTP requests in the background would be appropriate. As a user of the "stocks" library, you would probably want to call it somewhat like `aapl = Stock('AAPL').load_stats_from(Stock.ALPHAVANTAGE)`. 
It sounds like you are referring to what Shapely calls a Collection. If you refer to the [Shapely Use Manual](http://shapely.readthedocs.io/en/stable/manual.html), there is a section talking about Collections. Below is an example showing how to access individual items in a collection. `from shapely.geometry import LineString` `a = LineString([(0, 0), (1, 1), (1,2), (2,2)])` `b = LineString([(0, 0), (1, 1), (2,1), (2,2)])` `x = a.intersection(b) # Returns a collection of points and lines` `for feat in list(x):` `print(feat) # Prints individual items in a collection` Your question would also probably have been answered more quickly under r/gis. Hope that helps.
This is cool. You should check out py.processing.org if you like making graphics/animations like this. 
agree, it was the first thing that came to mind when thinking about what would be something that you would not want to explicitly list in your module. the main issue with this approach happens when something changes after import. short lived processes are the target
Send them your resume.
In the office if you get things done fast you just get more work handed to you. There is no escape from work unless you are lying about how much work you are doing. 
Only when the part of the group project feels tedious for me. 
&gt; in this case If only I had provided some context to do just what you said.
Why should I? I'm from Germany and am glad that you don't get fired from one day to the other. Gl hf
This helps narrow my query. I don't need real-time or ATC/CC. No. But, am now curious'er about just information there is out there. It is quite a'lot.
Then, good luck to you. And unlucky us :/
Very interesting. I will look into this or something similar. 
Sorry, what is "this case"? Because unless you mean the OP, I don't get it.
Less _hiding_ and more _self-extracting zip of a virtualenv_.
This, also Linux \^\^
what are the chances that an automotive detailer earning $15 / h are getting quality insurance and a pension? But yes, I get your point entirely. 
[here](https://pastebin.com/xk0eHpYH)'s a slightly modified version with comments, instead of using curses to refresh the terminal, it uses os.system("cls")
[removed]
Very cool. Out of general interest, how is termtosvg and asciinema better than just seeing a log of the command line session directly? I am just trying to figure out where I can use something like this. For instructions, it's always easier to look at a full log rather than have to wait for the command to show up, and then wait all over again if you missed it and it restarted. 
If you manage people with that attitude, what do you think who will stay in your company and who won't? Who will advance your business with innovation?
IMO, the employee signs up to execute on the responsibilities of their job. They get promoted because they go above and beyond, which may mean automating their existing responsibilities and taking on extra ones. However, the game they’re playing is to optimize for themselves, not the corporation. So the choice becomes: 1) tell employer, potential promotion, shoe horned into 3% - 4% raise and automate my buddies out of work OR 2) spend extra time developing myself — furthering my value and competitive advantage in the workplace — and/or taking on freelance gigs to maximize my $ income #2 seems way more capitalistic to me than #1.
Spyder. It is a very clean crisp editor.
This should be the top comment on the top comment.
I need to start automating my top comment comments. It might put my account out of business though. 
Thank you!
Well as long as you still manually post about 10% of the time you'll stay relevant.
I'm talking about ethics, not practicality. The post I responded to said people should feel bad about trying to do that but no, they absolutely shouldn't.
I've seen processing before and it looks pretty interesting, I ended up using curses instead I think because I enjoyed trying to figure out how to implement such a simulation with just the terminal, and also as a learning excercise for curses
It's not lying. "I finished all my data entry for today" is true whether you did it manually for 8hr or with a script in 10 minutes.
A janitor is paid to clean, not to build a giant six armed cleaning robot. The robot is the janitor's tool, just like a mop. If the employer wants to hire an engineer to build a giant cleaning robot, that's a different job at a different salary. IOW, no.
I'm not saying it's a good attitude to have. Just that it unfortunately happens.
Like when RBS I think it was got rid of a couple of guys paid six figures to maintain a legacy app. It failed and because none could fix it for days they lost nine figures. 
And I fully agree, but employers don't see #2 that way in far too many cases. They see it as laziness where the employee should have jumped to accept more responsibilities
It's not part of *my* personal code of ethics. But it is seen as unethical in the view of the employer in society, apparently mostly in the US rather than not (as someone even mentioned "found the Japanese/US American worker").
&gt; Now that I have some experience with Python, I want to do some projects that may get me out of my job. But I don't know what path I should follow. I can build something in local with Flask, Docker etc ... But when it gets to payment, or using services like S3, server security etc, I get lost... Technology is irrelevant. Users don't pay you for your technology choices. Users pay you because you solve a problem for them. Find a problem, solve it, and you'll handle technology choices along the way as a side effect.
If you play your cards right you get paid 2x as much to automate everyone else's job too.
Arbitrage!
_won't somebody think of the shareholders??_
Ladies and gentlemen, welcome to *"Should": The thread*. 
I see what you’re saying, but that assumes the employee tells the employer. It’s not too hard to obfuscate what you’re doing as long as you get your stuff done and you’re low enough on the totem pole. Without the employer knowing it can’t be construed as laziness — rather a reliable employee who delivers. I’d also argue that it isn’t unethical to the employer, because of my previous definition of what the expectations are on both sides. Now, if you start slipping on your responsibilities because of all your side projects, then you’re in breach of contract so then it crosses the threshold to unethical (in my mind). 
Maybe, I'd look into Greensock.js with the output svg.
You're totally right! But mind your wording when talking to people not working in IT/programming! With years to come there'll be thousands of jobs to be ~90% automated. In fact it's my job to identify these stupid tasks and I'm actually glad no human has be bothered with them anymore. Bots and automation are my personal favourite argument for a general basic income. This and just working 20hours instead of 40
It's just more interactive and engaging better, feels like someone personally shows something to you. I guess it just depends on personal way to learn.
How much time would be spent splitting the models into a different package and setting up all the necessary build infrastructure. How much time would be spent moving to Flask right now? The real problem is Apistar, maybe you just want to move to Flask now.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
You need to calm down if you're going to continue posting here.
I have no real idea what his job is. I've asked him about 10^10 times and it still goes in one ear and out the other. I believe it's along the lines of programming for telecom companies, but it's a specific language that very few people in the world know. And yes, his life is a joy. Just the fact that his income is reliable, nothing beats having more time to yourself. And he uses that time to make even more money on his own terms or to just sit down and enjoy a video game. Also, he travels a lot. 
Author of termtosvg here. Thanks! Sure, textual instructions are much more usable than animated ones. That's why I have detailed the usage of this tool in the README and use the animation as an example. I think animations are useful for showing either visual features, or a workflow. Maybe you've written a SQL database client and want to show how fast and dynamic auto completion is. An animation is great for that, it shows that the completion list updates quickly and dynamically with each letter typed. Or maybe you've written a tool to install software on your computer that is not part of the Linux distribution you're using (think [AUR helpers](https://wiki.archlinux.org/index.php/AUR_helpers) for Archlinux). An animation could easily convey that your tool is faster and easier to use than other tools.
The simple answer is don't answer the questions with google. Bing apparently has a decent search API, Google discontinued their and now offers only Custom Search API, which can do full web searches if you configure it correctly, but will always be somewhat less than the Google page itself. DuckDuckGo has a useful API for answers to single questions, but frankly isn't as smart as Google. When it comes down to it Google doesn't benefit from you being able to use it for searches, which is why they work hard to keep you from doing so via script (and doing so can get you banned); they've slowly diminished the ways you can do programmatic search on their engines (as have Yahoo and Bing), and even the paid endpoints aren't what they used to be. In the end whatever your script is doing isn't as valuable to them as your user just going to the page or their phone and running a search, with all the lovely ads and cookies that come with.
Powerful templates are bad. Smart models, thin controllers, dumb templates is the ideal. 
I don't understand what you mean. Let me just give this generic example-- you get a standard temp/secretary position for 20 bucks an hour, expected to work 40 hours a week, and are put on some menial tasks-- data entry, making letter heads, whatever. If you automate your tasks such that your expected 40 hours of work, which as it is statistically you're doing 1-2 less a day, so actually 30 hours of work 10 hours of "being lazy" while leaving and getting in (in the eyes of the employer, not the employee), suddenly turns into 8 hours of work a week, just hitting "go" on your automations, you are expected to jump and ask for more work, because you are getting paid for 40 hours l, 32 of which you are sitting on your ass. Sure, the actual tasks are being completed, but in the eyes of the employer they aren't paying for any few sets of tasks' completion. Rather they are paying for you, to complete as many tasks as possible in that time frame, with some minimum amount, regardless of what tasks or how many they give you (assuming they fit the job description). That's why it is unethical in the eyes of the employer-- they expect you to be working for the entirety of the time that they pay you.
Take your pick: User agent based logic to determine if ajax-y features should be included, not executing JavaScript so it isn't pulled and Google doesn't want you to scrape data without looking at ads or paying for API usage so they aren't going to be helpful(you will eventually start getting captchas for every request from your IP if you are not careful). Selenium and headless chrome is the easiest/dirtiest way to get around it for free. Throttle your requests though to a reasonable level unless you want to build a captcha defeat feature as well.
Again, this isn't against my personal code of ethics. But the society around me seems to hold this view.
it seems like a small project, so i dont see how moving models around would change portability or maintainability. it sounds more like over engineering to solve the wrong problem. if you arent happy with apistar i would freeze the version that works and work on replacing it with flask
You're discussing hourly work, not salaried work, for starters. Secondly, again, there is no moral obligation to *do the maximum work possible.* This moral obligation doesn't exist and is an artifact of very recent corporatism where the individual has heavy moral obligations to the corporation, but the corporation has few or no moral obligations to the employee.
But you're assuming that the manager has to be told to figure out you are "slacking off", which isn't the case. IT exists. The occasional walk by does as well. So does the "wait, every time Joe has been near you he hasn't seen you enter a single thing, how do you do it?". Just because you aren't forthcoming, doesn't mean you won't be found out. And in the eyes of the employer not being forthcoming for longer is even less ethical than telling your employer, just after milking it. And in your definition of expectations, I agree. But to the employers I have seen most have the expectation of "I have hired you at $jobtitle, at $rate for $time per week. I will give you these $minimumstartingtasks that have to be completed to keep your job. But I am not paying for the tasks themselves, rather your time doing them, I have plenty of other work I can delegate to you just don't expect to do so immediately, only asap". By automating, you free up "asap". Which is why employers I've seen treat it as unethical.
I absolutely am! Nothing in this post made the restriction that this was salary work. And with the wording that was given, it seemed like hourly work! Is it not? There is no moral obligation by the employee. And apparently by the employer in places outside the US. But in the US, in the by the hour jobs that I and others have worked in, the expectation is to jump at the opportunity to do more work because you are being paid for your time, not for your completion of tasks. It is a horrible practice, I agree, but it is one that exists nonetheless.
dream life...
&gt; , the expectation is to jump at the opportunity to do more work because you are being paid for your time, not for your completion of tasks. It is a horrible practice, I agree A manager can have an expectation or hope, but that doesn't force a moral obligation to the employee. The janitor who invents a better mop has no obligation to mop that much harder.
And there's a rather steep tax on the self employed for some reason
Click, report, breaks subreddit rule, belongs in learnpython, send. Please help the moderators to maintain the quality of the subreddit.
Could you link me the duckduckgo api please? I think I'll take that route
I’ll ask him more about it because I’d like to have the same quality off life. But the key takeaway is the fact that his position is VERY specialized, less than 100 people in the world does what he does. So, specialize, keep your tools to yourself, and get the job done. 
What hardware are you using that allows for python to control all those things? Specifically nutrient dosing and water management? Also, what tools are you using that allow for batch transplanting of plants? I’m also in the automated farming industry and would like to get involved in more efficient and reliable (key word here is reliable) processes and systems but I’m having a lot of trouble finding the right equipment that would allow it to happen. 
Couldn't it be implemented in Javascript? Then you could not only have Pause, stop etc, but also "Next line", "download .py file" etc? That would be even cooler (and it already very cool as is :-))?
Well, now you have a case where it exists. It was sold to me for this perk. My company started because the owners don't like busy work and reporting to an office. I think they value what we bring to the table and use the free time as an incentive. Often when we work it can be really hard and we do great work.
This sounds pretty funny
I'm not saying that this kind of thinking doesn't exist in the US, just that based on mine and others experiences it seems to be rare.
I keep repeating, of course they don't. But in the manager's eyes, they do. That's the issue.
A lot of the time that data is from Wikipedia, which has a pretty good api. I'd suggest using that instead of scraping the search result page.
&gt;Bing apparently has a decent search API OP: Nope.
That's why it's critically important for the employee to not tell the manager. The level of corporatism in America is such that a management expectation, or even an expectation of profit, or even the expectation of *potential* profit, is enough to be perceived by all parties as a "moral obligation" on the employee and consumer. 
I tried the DuckDuckGo one and it’s not good so I’ll try the bing one lmao
SoapySDR offers bindings for Python [here](https://github.com/pothosware/SoapySDR/wiki/PythonSupport). With that, you can receive samples and other information.
Try [ADSBExchange's Data Archives](https://www.adsbexchange.com/data/). It's probably what you want, but you have to contact them to get access.
A walkthrough for putting together my submission for this month's /r/dataisbeautiful competition.
I have been programming since before Linux was invented, and the person above accused me of being a 'Linux newbie', but you didn't tell him to calm down. He hijacked the thread with off-topic ranting about "the license gives them the right to blah blah", but you still didn't tell him to calm. So much for your ability as a moderator.
BeautifulSoup is a parser. It does not communicate over the internet, thus, there is no user-agent. 
If it does not communicate over the internet how does it get data from a website
We propagate in a Proptek 338 tray. To transplant these into our vertical grow panels, old way was to pluck each growing plug with a cocktail fork to be able to put it into the panel. I made a tool that pops up 169 (every other row) so they can easily grab and move them, then move the proptek over to pop up the remaining 169. Cut their transplanting time down tremendously. We use a raspberry pi to collect data from sensors and control relays as a PLC. Our system is pretty reliable. When going from 100% the software world to interacting with the physical world stuff happens (someone shuts off your water supply, a breaker trips, a power surge messes things up...) I believe you can make anything more robust to withstand these things, but its a financial equation. Do I need to spend a few grand in surge protectors so that I might have to replace $100 of equipment later, probably not. Do I need to spend $30 to add a flowmeter and know if some jackass destroys my water line and prevent damage to $600 worth of pumps and jeopardize 16,000 plants? Yes we went ahead and installed that. We incorporated real time power monitoring to know if something is not using enough power (a burned out bulb or breaker tripped) or is using way too much power (potential short or other issue with my HVAC) Remember, the Titanic was unsinkable. The learning process of finding the things that need to be addressed are part of the continuous improvement mentality. Of course, everything is web based with real time alerts on user configurable points. Both these PLCs and plug popping designs are for our own farm manufacturing process and potentially for sale to other farmers if you are interested. I have the benefit of greatly enjoying my job so its kind of like they pay me to come experiment and build stuff, I wouldn't consider it "work." I have the flaw of greatly enjoying my job so if I'm not careful I could easily share my excitement and inadvertently give away our industry secrets over Reddit to someone also in the automated farming industry ;)
Aha, I got it now. I have used urllib2 for opening the websites. Sorry for being a idiot lmao.
Or you could use `requests` like most other devs. 
But what about the original question about the user agent?
How can only answer that if you don't specify which library you're using to make web-requests?
I just told you im using urllib2?
You keep assuming that the only way for the manager to find out is if you tell them directly. Which isn't the case at all.
Definitely dont need a dev position for that. I've written a cost estimator for our cloud infrastructure, and Im currently writing a tool to simplify support investigating our application. Yea its not applicable everywhere, but I read a comment earlier about someone automating plant growing. You dont need a "python dev position", but the point is that "learning python" is something that is applicable to doing the job better. 
Use requesrbin! Make a request to requestbin and it will reveal everything
Technically yes. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
If you are a contractor, yes. Most 9 to 5 jobs are paid for time worked, which is explicitly stated in the contract. 
&gt; immutablity ^^
Does this have any benefit for those of us who don’t use Unicode at all? I usually provide the `# -*- coding: &lt;spec&gt; -*-` with either ascii or latin-1. And I have my editors to save/create files in those formats. 
Found my solution, thanks anyway :)
Ahh, you found [the api](https://duckduckgo.com/api) ... yeah it's not exactly general text search.
Just because it can apply doesn't mean it will, and at that point to your higher ups you are just wasting time for them.
I did not. The manager may have a moral obligation to maximize productivity, the employee does not. If the manager manages, that's fine. If the employee feels they have to go tell someone about their new tool, that's just unwise.
Now youre getting into semantics. Not being able to make the judgment call on what specifically would be valid is not a fault of python, its the fault of the individual. I have someone at work that started using their free time to learn python, made the judgment call it was ultimately a waste of time, and learned some other things about how our infrastructure works. Thanks in part to what he's done, we've been able to expose some ways we could do things more efficiently, and he's actually implemented some of them. 
You might want to reduce the size of the logo a bit – currently the PyPI page is impossible to view on mobile (the tab crashes), and is extremely memory-hungry and slow to load even on desktop. If you're worried about it looking sharp, you'd be better off using an SVG.
What? Semantics? It was recommended to use the free time to learn Python instead of get nee responsibilities. Plain and simple. And python may or may not be beneficial. Plain and simple. Therefore, it may be a waste in the eyes of the manager, which is the entire point.
No one disagreed with you that that's unwise, but if you are found out that this is what you are doing, it is seen as malicious negligence, for you gained time at work to do whatever you wanted instead. Again this isn't a good practice, but it is the catch 22 of automating your job in many positions in the US
Yeah sorry about that. I didn't realize the image was that big. I spent enough time fussing around with PyPi trying to get markdown working (it doesn't and I had to use x-rst) that I didn't even think of that. All good now though, from ~700kb to &lt;4kb.
Yes, you can embed JavaScript code in the SVG animation to control the playback. I don't know if GitHub preserves the JavaScript code or if it strips it for security reasons though. 
Wow. Python 2, beautiful soup and urllib2 is such a strange combo in 2018, because it’s soon to be unsupported, slow to parse and complex to develop. Seriously, is there any reason you’re not using python3, lxml and requests? If you are following a tutorial from 2008, you had better look for a more recent one.
Well i learned in python 2 and its still being used on macs, and all my code is in python 2. lol
Also ive never even heard of lxml. (Started doing this web scraping thing yesteday but been doing abit of research beforehand ofcourse. (Ive been trying my best to avoid any type of programming that has something to do with the web, as I heard its hell)) Everyone says requests is this godsend and savior, so I will move to that soon. But you know, I just wanted a working fking few lines of code first, to you know, really understand how this works. 
anyway to try it out first ?
There is a video that shows you how it works let me add it below: https://youtu.be/bo9oH6PpAuk
Do yourself a favor and use the combo I suggested. There are really good books about it like Web Scraping with Python: https://www.safaribooksonline.com/library/view/web-scraping-with/9781491985564/ requests is order of magnitude easier to develop (especially when using cookies, user-agent, etc) Python2 is end-of-life. Don’t use it except if you have no choice. lxml is generally faster than beautiful soup, and if you work with severely broken html, you can still use beautiful soup with the lxml API.
Are this still available?
Will look into it. Thanks.
I've never encountered a good cross-platform solution to this problem. I ended up with three different solutions, one for each platform. It's better to ditch the idea of distributing an executable. With Windows you can just install your modules into the portable python distribution and distribute that instead. Ship it with a batch file to run *python -m myapp*
I started as a helpdesk tech in a small company that had a documentation problem. (There was none). After learning the tasks I was responsible for and creating SOPs for them I started trying to make the SPOs more streamlined... then I was like wait, I can just script this. Then once I scripted it, I fully automated it. Like a new user ticket would come in, I’d need to make 5 different accounts for them, AD, email, apps, etc. Was pretty cool to see what I used to do to what I do now. I was open with my boss about it though and being a good boss he encouraged me to learn me and keep automating.
This is a cool project. This line caught my eye. grid = [[' ' for i in range(121)] for j in range(61)] You can replace it with a much simpler (and it appears much faster) equivilent grid = [[' '] * 121] * 61 Additionally, you could construct the grid once and them make a copy when you need it. This was the fastest in my setup. current_grid = copy.deepcopy(original_table) By fastest on my setup, I mean the times reported by the timeit.timeit() function. Another change could be to only call terminal.addstr() on lines that changed. This would require saving off the last grid painted to the screen and comparing it with the new values. This could also allow you to avoid clearing the screen. On a locally run application, this really isn't concern. On a slow connection, it could be helpful. 
I'm using Beautiful Soup in a different parser, why do you think it's old? Why do you think lxml is better? Thanks
I'm in need of a better parser than Beautiful Soup, how does requestbin! work? 
It’s not old, it’s just slower than lxml. 
Little more info would be helpful. Like what kind of data is in these files? Just a bunch of floating point numbers? Does your visualization have to be very scientific, or just look pretty?
Says change interpreter by modifying python path. Does it understand hashbang notation? (`#!/usr/bin/env pythonX`)
Yes, on a python forum. Where the OP mentioned scripting. Which covers "in this case". The general concept is using employment time to make your job easier, which is not theft of employer time.
Definetly possible. You'd need a pdf parser, and a graphing library like matplotlib. Without any prior knowledge, it'd be a bit hard though.
You can do it that way or use the preferences window to set the interpreter.
They can see it however they want, perhaps as an opportunity to promote you, perhaps to make your job one in janitorial engineering, but also they might decide (and this is more common than not) that you are either a threat or "did not maximize profits", take your improvements and fire you. That's the most common outcome typically.
You keep going in circles repeating things I already said I agree with. Yes, the employee has no moral obligation. Yes, the whole razor's edge from slavery. Yes, the employer can find out in different ways and see it as different intentions. But from experience most of the time it's "you slacked off, and had the responsibility to tell me that you automated your tasks" and fire you. *I* don't think the employee has such responsibility. But *many employers* ***do***.
You can't assume that Python covers his entire job scope-- just what he said, which was that he automated one part of his job using python scripts.
I know you want to probably do all this in Python but I think I read somewhere that you can wrap a python script inside a JAR/JRE binary which any OS with the Java runtime would be able to run. I don’t know how it would be done (something about cython and stuff) but it’s an option.
Asking 5$ to execute python on mac 
I'm assuming matplotlib can also be used to make the percentage increase calculations or commonly known ones such as ROI (return on investment) because they would require fairly basic code from what I currently know about Python? Also, is it possible to code something that automatically downloads the annual reports, parses the files and then begins doing the analysing or even all in the same program? I get the feeling that separate programs would be simpler and just as effective for me since i'm new. Specifically a web app for the downloading part? Sorry if i'm bombarding you with questions, i'm just trying to get an idea of the limitations of Python. There doesn't seem to be much about this type of program online.
Is it just me or is the author comparing apples and pears? A Python implementation VS. C extensions for Python VS. a "freezer"?
Looks fine on mobile, even under a limited connection. Not sure what nonsense OP is on. It’s fine.
See https://www.python.org/dev/peps/pep-0441/ I should have landed in 3.7
That was hilarious...I wonder how he's doing now.
in my experience this is not worth the effort. extracting data from pdf documents is unreliable and unpredictable. you will be able to make a program that works for one particular document, but it will then fail (or worse, give mangled numbers) on another. and if you've never programmed before then you're not just fighting the problem, but also the language and your own lack of experience. i would start by cutting and pasting the table from that document into a text file and making a program that parses (reads and understands it and extracts the values you want) that text. if you do that, you've got something that will do most of the task without having anything to any programming with pdf files. and if you then do want to continue with the pdf files themselves you will likely be able to reuse much of the work. finally, to answer some q in your other comment: percentage increase or roi calculations can be done directly in python. you just program the standard formulae or find a library with them already in (those are so simple it's probably not worth finding a library). matplotlib is for plotting graphs. not sure why the other answer mentioned it. downloading over http is fairly easy. combining things in one program is fairly easy. you can have one program that does each step separately, or does them all together, depending on what arguments you give. that kind of thing is easy to do. 
There are a bunch of services, most notably flightaware and opensky-network, that provide paid for and free-for-noncommercial APIs to get this information; some of it is historical and some of it is real time. Which of these you would choose to use depends on which you want. I am primarily interested in realtime position data for a limited number of aircraft so I use one of the two APIs to get that. 
I fixed it almost right away, so you are probably seeing the updated version.
You're copy/pasting the source to Atom... why wouldn't you just hit Run there? What's the advantage of this?
You can always look at the source as well https://github.com/enthought/Python-2.7.3/blob/master/Lib/urllib2.py#L309 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [enthought/Python-2.7.3/.../**urllib2.py#L309** (master → 69fe0ff)](https://github.com/enthought/Python-2.7.3/blob/69fe0ffd2d85b4002cacae1f28ef2eb0f25e16ae/Lib/urllib2.py#L309) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e1kpmuu.)
You can hit run right from the tool, I had to copy from atom just to get a sample source code.
Beautiful soup can use lxml as its parser. 
So like F6 in https://atom.io/packages/atom-python-run ?
Yes that is another option but I am not offering atom I am offering a new app. Not everyone likes atom. 
I'd be curious what pdf parser you are using. Never had luck with my own attempts.
Try [Obpsy](https://github.com/obspy/obspy/wiki) for reading seismograms.
Does this include an interpreter in the zip app? If not, it isn't an alternative to something of the likes of PyInstaller/py2exe/cxfreeze-- it just zips up your python application without an interpreter to run it in (which has always been the major issue, we could create zipped apps since 2.6, but nobody would have the interpreter already installed to open them).
Pyinstaller is quite mature and has a lot of documentation so if you go through the daunghting task of reading it all (hard) plus all the prerequisit knowledge (harder) you might get something hacked together. Really its kinda annoying how much sheer reading their is before you can actually distribute a Python package. But it is managable, if you'd like I can curate a list of things you should learn and resources to read from if you want to distribute stuff. Anyway if your on Windows and you keep getting inexplicable Path issues which no one seems to talk about, my recommendation is install Visual Studio 2017 command line crap if you don't already have it and use one of the developer command prompts which is in StartMenu/Visual Studio 2017. You aren't supposed to build from the regular command prompt on Windows it lacks all of the Path information which is a pain to manually add.
Any particular reason you’re not using seaborn for visualization instead of Bokeh?
Feasible maybe, advisable no. The reason I am saying that, is that were pdfs can be parsed, they are far from a good interface. My gut feeling is that the data could be pulled from somewhere earlier in the process.
&gt; Smart models http://blog.joncairns.com/2013/04/fat-model-skinny-controller-is-a-load-of-rubbish/
A few problems: Globals are very bad. I usually try to make an entire class and store all the variables as self.&lt;whatever&gt; Use the wrapper() method! It's specifically designed so if something fucks up, it won't fuck up your terminal. You must have a huge monitor, because this code would not run for me until I made the font *tiny*. You don't need to make every point correspond to one character on the terminal. You can squeeze things down to fit in the alloted space. And you can figure out the alloted space on the fly, even! Also, lastly, on monospace terminals, a character is as high as two characters wide. So if geometry is important (and it is here), you can simply add a space between each character. This makes it so the circles are actually circles and not ovals. I redid some of the code--I didn't change everything, just tried to fix the problems I saw above. I know that the status code is now incorrect, but I'm not concerned about it. https://pastebin.com/29qLeTtb
&gt;I can program in Python better than you can... &gt; &gt;You just contributed to the bunch of nonsense in this world. But, you don't even understand that. r/iamverysmart
^The linked tweet was tweeted by [@theneocoder](https://twitter.com/theneocoder) on Jun 30, 2018 15:48:19 UTC (3 Retweets | 0 Favorites) ------------------------------------------------- Which python web framework do you prefer? And why? \#100DaysOfCode \#Python \#webdeveloper ------------------------------------------------- ^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •
you can use `pyenv`
r/learnpython 
Like I said, semantics. The general concept of spending employer time to learn how to do you job more efficiently is not theft 
I'm new to python, on day 25 of a #100daysofcode challenge. Over the next undetermined amount of days I would like to create a blog and personal web page using a python web framework. I've never worked in web development at all and I'm trying to decide which way to go. Any opinions or advice would be highly appreciated. Thank you. 
Well, seaborn won't let you hover over each symbol and see who it represents...
I'd definitely recommend pyenv, especially on a Mac. Use the virtualenv plugin also.
Django
flask. Because you can only use what you need. But it is powerful enough for any web application. And it is very fast to get started.
Thank you u/hellupline. I am a n00b to installing &amp; configuring Python. Reading up on `pyenv`, I see that it allows you manage multiple versions of Python. I installed it on my Mac, and it shows the below: `Johns-MacBook-Air:helloworld john$ pyenv versions` `* system (set by /Users/john/.pyenv/version)` `3.6.5` If I do `python3 --version` from the Terminal, it returns: `-bash: python3: command not found` Does `pyenv` require further configuration after installation? I am following a book that uses Python 3.6.5, so managing multiple versions of Python is probably out of my league at the moment. I like to have a simple install of 3.6.5 (homebrew preferred).
I've played with Django a little bit. I do like it so far, especially the pre-built admin features. Is it more customizable than it initially feels? I find myself feeling walled into a corner of a specific feature set. 
python2 is builtin on MacOS also, python3 is available on brew Anaconda is free, and include more tools Nope.AVI
I think are you paid by time or by job, totally depends of what kind of job or deal you have. In many jobs its true that you are paid by time, but does paying by time encourage the worker to reduce the time spent doing some task? Doesn't it exactly encourage the worker to spend as long as possible on the task, and do it inefficiently? For example the price of a product often doesn't have anything to do with time or material cost, it is totally the market that defines the price. The producer wants as high price as he can get while the buyer wants as low price as he can get. If the price is too high, the producer probably won't sell many. If the price is too low, he probably will sell a lot but with only a small profit so overall income might be low. For best profit it is about finding the sweet spot where you get enough volume and enough profit from each sale, to make best total profit. Also the competition matters. If there is little competition, you can have higher price and vice versa. Only then when the competition is tough, the price begins to approach the cost of the actual work in time and materials. It's true that it is not good for the company to hide from your employee how are you actually doing your work. If you get a good idea how to boost productivity massively, it could help the whole company. Of course it then depends of the culture in the company, are the employees interested to boost productivity. If the company is very keen to layoff people, probably productivity improvements are not the highest priority for individual workers. In the other hand if the company has good atomsphere, the workers might be very interested to help improve the process and productivity. Like in many Japanese companies, where you get the job for life, people have very low barrier to improve the process and efficiency.
I dont have my Mac with me ( its on my office :( ) you just need to add this to your shell: ``` if [ -d "${HOME}/.pyenv" ]; then path=(~/.pyenv/bin $path) eval "$(pyenv init -)" fi ``` and use ```pyenv global 3.6.5``` 
Thanks, this looks pretty cool. I put this project together pretty quickly and it could definitely use a refactor. I'm fairly new to curses, so i'll look to incorporate wrapper. I have put the main loop in a try except loop to safely exit if an error occurs, but this does not always work. I'll try to incorporate your suggestions if I get around to redoing this. 
Thank you! I will try this. This is not going to break the existing macOS dependencies on 2.7 is it?
If you were not new to python, I'd say flask. But there are boatloads of plugins and tutorials to help you tweak Django to your liking. 
From what I've read about flask so far I am very intrigued. Is it really possible to basically have 5 lines of flask to host a single static HTML page? Can it really be that simple?
its enable on my MacOS, didn't saw anything broken so far
Beyond improving readability, it can tell your IDE what object a parameter is when it other wise wouldn't know. This allows you to view the objects methods without looking at the code. I use pycharm and always annotate for the sole purpose of being able to scroll through an objects function. I feel it's improved my work rate.
I've always preferred the 'legit' installers. You'll be wanting https://www.python.org/downloads/release/python-365/
You can really really get into the nitty gritty with Python, like writting individual bytes to disk and seriously screwing around with networking by writing raw packets without TCP headers, so its safe to say that you won't be limited by Python. Thats in the standard library too, not some package you have to install. Anyway [urllib](https://docs.python.org/3/library/urllib.request.html) is a library with a module called request which could fetch the pdfs at the very least, it is easier depending on how structured the site is. I recommend you be patient and take it slow though, Programming isn't learned in a single day and there is a lot prerequisite knowledge you need to learn before you can take on something like this.
Would you accept any patches for this type of functionality? I've might start tinkering with this, and if I see any way to improve the playback I can contribute that in the form of documentation and/or code...
Curses is a bitch of a framework. I've been messing around with it for years, and I more or less get it now. But I think there are other frameworks that do similar things without needing to be so specific all the time.
Not easily. You'll have to render it to a static image on the server side, or look into WebGL for rendering it on the client. 
How about I give flask a shot, and if I feel in over my head just bounce back to Django? What about Pyramid? It doesn't appear that many people use Pyramid, or perhaps I have just yet to come across anyone who does other than Michael Kennedy from "Talk Python To Me". 
That pybitcoin library you're using hasn't had a release in two years. There seems to be a bunch of other, more actively maintained Bitcoin libraries on PyPI. Why not try one of those? 
That's right, I don't think seaborn has interactive features. I could be wrong.
The rule of thumb is to always look for a Python 3 alternative. Chances are that if some lib is still stuck in Python 2, then it's not being maintained anymore and you'd be better off looking for a more up to date and maintained one instead.
This isn't semantics-- you're making an assumption. And when you assume all you do is make an ass out of you and me.
I mean you only need 0 lines of python to host a single static HTML page, but if you want: from flask import Flask app = Flask(__name__) @app.route("/") def hello(): return "Hello World!"
Oh ok 
Doesn't seem to add any value to just running python off a terminal It doesn't even have syntax highlighting! 
That article is like replying to “the Earth is round” with “no, it’s not! It’s an oblongated spheroid!” The basic ideas still apply; there is just some nuance about what it actually means in practice. 
WARNING: the 2D array isn't the same! This is because how python does aliasing. 
I use a Chromebook and remote into a beefy dual socket workstation. Best of both worlds. 
Can’t do remote interpreter. 
I can't help much on the specific problem, but some commentary on your dillemma in the last paragraph-- you will never be guaranteed. I'll preface this with I love Py3 and wish to use it whenever I can, but I also concede the fact that Py2 will never die. On [PyPI alone](https://pypi.org/search/?q=&amp;o=-created&amp;c=Programming+Language+%3A%3A+Python+%3A%3A+2+%3A%3A+Only), there are 585 packages (at time of writing) that are explicitly marked as Py2.7 only. There's probably even more marked as Py2, just not "only", by incorrect classification (its Py2 only but only listed as Py2 compatible and not listed as Py3 compatible). Among more that just don't use such classifiers. And these aren't old-- some have been updated as recently as yesterday, and some of those haven't even hit v1.0 yet. PyPI is not the only distribution network that developers use. Some use a custom index server, others only use Github / their own project's site for downloads (easiest way to handle license issues, to an extent). In some cases, third party tools, like React for example, will require Py2 to build because they include Py2 only libraries / scripts in their build process. Companies will continue to use Py2 far past it's EOL/EOS date of Jan 1 2020, because to them it costs more to upgrade than it does to keep trucking along with Py2 and if some critical vulnerability is found, patch the Python VM rather than update your scripts. Educational institutions will stick with older technologies for potentially decades, because they are fine with older systems in their CompSci labs, and for the non CompSci students, it doesn't matter. At most only 1 or so class in CompSci is taught in Python in most colleges anyway, in other majors maybe a few but they aren't learning programming, rather just specific solving of their problem using libraries like numpy scipy sympy and more. There's even a fork of Py2 that brings all Py3 syntax to Py2 and just mutates it in the background. And more and more Py2 packages will continue to be made because that's what some people/parties are just used to. So unfortunately, Py2 will not die, but one can hope that all packages you encounter have a Py3 equivalent by the time you need them.
You should pick a (small) problem and try to solve it. One of the first things I did at a new job was write an infrastructure cost estimator. 
I like how you take for granted that someone bothered to open source a library for you in the first place. Why don’t you buck up and write one yourself if you are so distraught about it.
We do at work, it's unfortunate it has been less well marketed, because for complicated apps with sophisticated architecture, it's the bees knees. The ZCA makes many advanced design patterns easy to implement, and it's extension story is second to none.
Do something full stack as a portfolio, it can be a link to web page which you can in the future use to introduce yourself. Also if you start this right now it can undergo a lot of chopping and changing along the way and people can see that progress on your git repo. Since you’re interested in python It’ll be easy, you can use flask or any of the above . 
I think you can't create cross platform with interpreter (as it is the difference of platforms) but it should give all the dependencies in clear structure
You're kind of right, it is nuanced. The problem is a lot of less experienced developers take this 'fat model/skinny controller' thing as a infallible law not to be broken and then proceed to go build huge piles of unmaintainable garbage if the system had any legs in the first place. The profession of developing software systems of at least moderate complexity benefits from all developers understanding that nuance rather than blindly following the ideal you(and many others) propose.
Interesting. The way it was described in a pod cast I was listening too, I just assumed it was the ideal framework to use for any scale of project. After purusing the documentation I was drawn to using it. Now after receiving feedback, I'm hesitant to use it primarily for the fear that being new to web development, there may not be enough public knowledge about the framework to allow for me to tackle what I would like to. Perhaps I'm being overcautious.
It's illegal to criticize the language or something?
What frameworks are similar to curses? The closest I've seen is old ANSI art stuff.
Flask, simple easy and powerful, gets the job done and tons of resources out there. 
Found the story https://edition-m.cnn.com/2013/01/17/business/us-outsource-job-china/index.html &gt; Bob had hired a programming firm in the northeastern Chinese city of Shenyang to do his work. His helpers half a world away worked overnight on a schedule imitating an average 9-to-5 workday in the United States. He paid them one-fifth of his six-figure salary, according to Verizon. &gt; And over the past several years, Bob received excellent performance reviews of his "clean, well written" coding. He had even been noted as "the best developer in the building." Ok sounds good … here’s what he did every day &gt; A forensic image of Bob's workstation revealed his true work habits and typical day: 9:00 a.m. -- Get to work, surf Reddit, watch cat videos 11:30 a.m. -- Lunch 1:00 p.m. -- Ebay 2:00 p.m or so -- Facebook and LinkedIn 4:30 p.m. -- Send end-of-day e-mail update to management 5:00 p.m. -- Go home He was fired for breaching security among other things. 
Sorry to say it but pyinstaller is **the** suggestion. 
Sounds like I'm using flask. :) ... Thank you everyone for your input so far. 
&gt; if you finish the job in less time you're supposed to notify for more work Imagine believing this
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I've got a project I can give you, feel free to open source the code you write also. PM me and I'll set you up.
Yes, please, open a pull request if you've written some code or doc for a feature that you would like to see implemented, even if it's not complete yet or can not be merged as is. A new flag for the command line such as --js-controls that would add a play/pause button and a timeline could be a really nice addition. However, as stated above, I have not yet researched if GitHub and other platforms keep the JavaScript code or strip it. If they do strip it it would reduce the interest for this feature, but I think it's still worth considering.
You may not enjoy projects that other people give you but you'll definitely enjoy working on a tool that you'll use yourself. For example I built a timer application in C for timing the amount of time it takes for a command to execute and I use it every now and then. If I need to add a feature then I go on ahead and add it, test it, then commit the code for a new version. It's a great feeling. Also, you can always contribute to existing projects. It's more fun at times because it's more than just writing code as you become part of a community and people begin to know your name. Btw, if you're in the UK wouldn't you normally call it GCSEs and not IGCSEs? I was out of the UK and we called it IGCSE.
Pyenv + pipenv == python environment heaven. 
Yes. Better than html.parser but still 25% slower than pure lxml. Indeed, if you prefer the API and it’s fast enough for your needs, suit yourself. But I’d still recommend lxml for being faster and having more features.
He's not criticizing the language, he's criticizing one package and it's maintainer(s) and construing their not being very active as a fault of the language itself.
Lemme see if I get this straight; after being away from Python since 2013 you return and try to use a seemingly abandoned package that was last committed to in 2016 and decide that it, alone, defines the state of the entire ecosystem in 2018?
Neat
First of all i'd recommend you to check what field you may want to work in. Just check some job postings and look at the requirements. It may not be python you want to focus on. I've only limited work experience and i am mostly developing backend functions. Almost exclusively C and C++ programmers in that field. Our GUI Team mostly works with Java because apparently it is just easy to port the interface from one operating system to another (i have 0 experience on that field) and i have seen lots of Qt (C++). A friend of mine develops web application and he says Javascript is the must know language. I have yet to meet the person who says Python is the language you must know. But i have heard that it is rather popular in data science. To be honest encryption is something you have to be very careful with and is the job of well educated people, my recommendation is don't touch it you'll get it wrong. Other than that my experience with applications (probably even more so at your age) is that a portfolio doesn't really matter. The amount of people who really enjoy coding isn't too high, you probably won't have trouble finding a company that will give a motivated young man a great job with great training. And again it's probably more important to hit the right points, if the job posting mentions image processing and c++ mentioning your python chat app probably won't make the guy who hires you too excited. So pleas do your research before you run head first against a wall for no good reason. You also might want to check the difference between a programmer and an engineer.
Anyone looking this is the best I could find: https://www.youtube.com/watch?v=g_D862rGFgY&amp;t=242s
I agree the first point entirely. What do you see yourself doing as a career? Tailor your code to your aspirations. Data science? Software dev? Job ads are a great idea for where to start!
I would probably use something like x3dom. https://www.x3dom.org
Install as sudo, i.e use the sudo command, or add a virtual environment and install it to that instead of polluting your system installation
Jinja is a template renderer, and it doesn't do anything fancy. It just statically replaces template tags with your variables.
Yeah tried that. Not working either. [https://pastebin.com/kBz2s6rc](https://pastebin.com/kBz2s6rc)
 &gt;&gt;&gt; grid = [['.'] * 12] * 6 &gt;&gt;&gt; grid[0][1]='a' &gt;&gt;&gt; prettyprint(grid) .a.......... .a.......... .a.......... .a.......... .a.......... .a.......... 
There are two ways to do this, make small/medium things in your own or get involved in a large active project. I would find a large project and join the community
May not be a perfect fit, but the job of a mainframe administrator is very similar. Mainframes are just really big powerful servers. The gist is that most modern companies would use a cluster of say 50 servers, while you could use a single mainframe for the same task. Those things are used pretty rarely nowadays and when they are used it's usually in a boring sector (banking/erp stuff), do boring things(handle transactions). Most mainframes you will find in the wild are made by IBM and are ridiculously backwards compatible. So basically if you want to be a mainframe administrator you have to know some ancient languages and the OS, which is really... unique. It's a really specific niche, but it pays really well. 
22 Gordian emperors? How are you getting that number? There were only three.
Find a project you agree with, maybe their code has been "done before", but probably you can improve it. Do this for many projects, until you are an advanced programmer. Now you can do the things that were too hard.
&gt; other leafy greens Are you sure that's not a euphemism? 
Is the software strictly for your own use or do you (plan to) sell or even open-source your software? Just curious, not a farmer myself. 
https://stackoverflow.com/questions/34819221/why-is-python-setup-py-saying-invalid-command-bdist-wheel-on-travis-ci
We sound very similar.
I've had best luck running the PDF through tabula first. That will only help you if the data is stored as text in the PDF though. If they are image (scanned) you have to resort to OCR and that's too unreliable for my needs [Tabula](https://tabula.technology)
Try and co-operate on a project then!
When you say cost simulated are we talking about a ‘till’ in a shop? Which you ring costs into?
So you would recommend making a website for my portfolio? Thanks for the suggestion. Would you r F.C. omens I upload projects onto here or onto GitHub? 
I would like to be a free lance developer. At the moment I have been working a lot with the discord.py API wrapper. I have done 2 paid projects in the last 2 and a half months. I see what you mean though and appreciate your opinion. Although everything that I have been told by relatives and teachers in similar jobs has indicated the need for the portfolio due to the lack of work experience available. Also, I will be learning C. I started learning C a while back and can code in it. From time to time I do need to look up some of the syntax and I don’t know the whole language. My reason for focusing on python for now is my A Levels will be done in Python. I would also just like to learn python ‘fully’ or to a good degree then move back to finishing learning C. 
Awesome idea! Your right I should try and find some projects that interest me. About the GCSE’s and IGCSE’s. UK citizens are allowed to sit International GCSE’s if they wish. They are generally seen as a better thing to have by employers are if you look at results and paper difficulty they payers tend to be harder due to the fact that ‘elite’ students across the globe are competing instead of just be children in the UK. 
How would you recommend approaching this? 
Haha, are you looking for projects too? 
Githubs a great place to put a software dev portfolio
I’ve been using GitHub for a long time. It’s a great place. Although a lot of the smaller projects I though weren’t ‘good enough’ to go on there and the bigger projects were generally paid so wasn’t allowed to put them online. Your right though I should use it a lot more. Appreciate the advice. 
https://github.com/danistefanovic/build-your-own-x is what you're looking for. :) 
Awesome. I’m taking a look at it at the moment. That’s for linking me this! 
Hey man, you could contribute to my project! I'm making an IDE written in python to edit python files, using the pyqt5 library. https://github.com/Fuchsiaff/PyPad Check it out! 
Np. Good luck with the portfolio.
Idk if you'd be interested but I worked at Google for a couple of weeks on their education team and helped set up an apprenticeship scheme for people not going to university who are good coders. The website for that may have some useful ideas of what to expect in that kind of interview so you could start your portfolio with a specific goal in mind. 
Wow! This is an perfect idea! Thank you so much! I will definitely take a look! Appreciate that you took the time to tell me this! 
He's taking about the cost of storing and transporting things in a business. For example, producing a widget might cost 2 quid, but storing 2000 might cost £20, transport per 5 £1 and man power costs £5 per 6000. You need to work out from that the true cost per unit so that you can calculate the required selling cost
You're welcome mate - there's got to be benefits to having Computer Science teachers on Reddit :) 
Amazing. Thanks for explaining it to me! Really appreciate it. 
Write your own personal webpage. It's usually a good place to start. Doing your own encryption project probably isn't the best idea, you could reimplement RSA or something for your own understanding. Alternatively, you can start learning a new language if you want to expand your skills. Probably Java or C# since those are probably the two biggest for getting a job.
Thanks for the input. At the moment I have found that often I bridge out to another language but then feel that I haven’t fully explored python. I need to fill explore it and build a portfolio first before moving back to C. I will The the website idea on board. Will do it for sure. 
That's the simple explanation. I'd recommend getting a few books on business analysis, that can give you insight into the types of problems business's want solving, that's how you'll make a fortune and be hugely employable. 
Big project with an active team, you will learn more when surrounded by people who know more. Learning to work on existing code is a good thing. 
Any book recommendations? :) 
If Steve Irwin taight us anything it's to use the tip of the tail.
learning new paradigms and writing idiomatically in another language will make you a better developer overall. you should look forward to this opportunity rather than fretting it sloppy coding is what leads to errors, not the language. just relax, be pragmatic, and you'll be fine. millions of people use python without issue. there's nothing to worry about as far as IDE support goes, pick up pycharm (or if you already use intellij, install the python plugin) or visual studio. use type hints, and though not as solid as for a typed language, it takes you pretty far this is a bit old, but it's a good starter: https://dirtsimple.org/2004/12/python-is-not-java.html dont skip this: http://docs.python-guide.org/en/latest/writing/gotchas/ 
You don't need to fully explore a language before using another. You can always come back to ones you already know. If you're interested in web development, check out one of the many web frameworks like pyramid, flask or bottle. Also learning numpy is a good idea. It gives fast array operations and implements lots of useful but annoying to write functions, like rotating arrays etc.
Can you suggest me any open source project related to humanitarian aid? please.
Hey! check out r/learnpython This question is about learning, which should go there :) If you want to automate stuff, I recommend "automate the boring stuff" by al sweigart https://automatetheboringstuff.com/
Agile and business analysis 978-1780173221 Business analysis 978-1780172774 Business analysis techniques 978-1780172736 The PMI guide to business analysis 978-1628251982 Business analysis, software testing, usability. 978-6056606113 Many would also recommend Business analyst body of knowledge (babok) but I feel you need at least some experience before driving into that. Additionally I'd recommend - Our iceberg is melting 978-1509830114 Requirements gathering for the new business analyst 978-1520450292 Visual models for software requirements 978-0735667723 Software requirements 978-0735679665 Data modelling, a beginners guide 978-0071623988 User story mapping 978-1491904909 The rational lens 978-1107155763 The power of saying no 978-1505526431 Control self assessment 978-0471986195 Governance, risk management and compliance 978-1118024300 Not everyone will agree with me, or will have their own personal favourites.
Raymond Hettinger, one of the Python core developers, has an excellent presentation for experienced C/Java/etc programmers coming to Python, [Transforming Code into Beautiful, Idiomatic Python](https://www.youtube.com/watch?v=OSGv2VnC0go). 
This is indeed the most straightforward path, it also reduces the number of 'effects' due to packaging. We use the Qt installer framework (cross platform) to distribute and update our applications this way.
urwid and blessed
For a few small projects I wrote, CherryPy was really great! I don't see it mentioned often, but I think it is definitely worth a try!
Try reading about many in the posts [here](https://opensource.com/tags/humanitarian) to find for yourself. One idea that I've no experience with but sounds promising is this [matchmaking service](http://codealliance.org/) that's specifically trying to match technical volunteers with FOSS projects that are looking to do social good.
As someone who used to interview programmers, I always loved it when they had github portfolios of completed personal projects they could explain in a couple sentences and contributed work to a project elsewhere. Personal projects don’t have to be overly complicated as it just demonstrates motivation for self and personal growth, especially if you coded something to challenge yourself. Contributions to complicated projects is great for knowing you can pick up other people’s code, understand it, and improve. Good luck!
Are you interested in some paid work? I got started as a programmer in my mid teens because someone gave me a chance and I'm always looking to pass the favour on. We need a Python script for www.chooseholly.com to gather statistics for posts we send out. Send me an email on scott@chooseholly.com if you're interested. 
`fuzzywuzzy` works reasonably well.
Free your mind from the need classes like AbstractSingletonProxyFactoryBean and use declarative, functional and procedural patterns.
Thanks for your suggestion.
&gt;[https://stackoverflow.com/questions/34819221/why-is-python-setup-py-saying-invalid-command-bdist-wheel-on-travis-ci](https://stackoverflow.com/questions/34819221/why-is-python-setup-py-saying-invalid-command-bdist-wheel-on-travis-ci) I tried every single solution on that page. None worked Could not install wheel `sam@sam-H81M-S ~ $ pip install wheel` `Could not install packages due to an EnvironmentError: [Errno 13] Permission denied: '/usr/local/lib/python2.7/dist-packages/wheel-0.31.1.dist-info'` `Consider using the \`--user\` option or check the permissions.` Could not check version of sudo pip `sam@sam-H81M-S ~ $ pip --version` `pip 10.0.1 from /home/sam/.local/lib/python2.7/site-packages/pip (python 2.7)` `sam@sam-H81M-S ~ $ sudo pip --version` `Traceback (most recent call last):` `File "/usr/bin/pip", line 9, in &lt;module&gt;` `from pip import main` `ImportError: cannot import name main` Imported set up tools, but `sam@sam-H81M-S ~ $ import setuptools` `sam@sam-H81M-S ~ $ from distutils.core import setup` `from: can't read /var/mail/distutils.core` \&gt; if I were you I'd download [http://virtualenvwrapper.readthedocs.io/en/latest/command\_ref.html](http://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html) as it handles the installation of the basics when making the virtual env so you don't get these errors. Tried this as well but getting this error `sam@sam-H81M-S ~ $ mkvirtualenv [-a project_path] [-i package] [-r requirements_file] [virtualenv options] ENVNAME` `mkvirtualenv: command not found` `sam@sam-H81M-S ~ $ workon` `workon: command not found` `sam@sam-H81M-S ~ $ sudo workon` `sudo: workon: command not found` `sam@sam-H81M-S ~ $ pip install --upgrade pip` `Requirement already up-to-date: pip in ./.local/lib/python2.7/site-packages (10.0.1)` `sam@sam-H81M-S ~ $ mkvirtualenv` `mkvirtualenv: command not found` `sam@sam-H81M-S ~ $ mkvirtualenv mynewenv` `mkvirtualenv: command not found` `sam@sam-H81M-S ~ $ mktmpenv` `mktmpenv: command not found` `sam@sam-H81M-S ~ $` Sorry I am new to Python and linux in general. First week both on Linux and Python. 
Jython I guess
I would highly recommend you seek normal stable employment, and then begin freelancing while working. While working, build an income that suits you via freelancing. Either for extra money or enough to leave a full-time position. 
Sure. I am more than happy to help out. I would even be willing to work for free. Any project helps. 
I see. Thanks for the advice. I will definitely take that onboard. 
Thanks so much for your advice. It’s great to see what interviewers are looking for. Thank you for your insightful view. I will take that on board and begin to build up my portfolio on GitHub! 
I see. That’s very true. I will be sure to check out flask later on today! Appreciate the help! 
Awesome idea! I will be sure to do that! 
&gt; Could not install wheel You need to activate your virtualenv, and install it on that. You can tell if you're in a virtualenv when you have the name of the virtualenv enclosed in () as seen below: (env) sam@sam-H81M-S ~ $ Your problem with using mkvirtualenv is that you have not installed virtualenvwrapper, see here on how to do this: http://virtualenvwrapper.readthedocs.io/en/latest/install.html Use this command I think: pip install --user virtualenvwrapper or sudo pip install virtualenvwrapper but I think the last one won't work because the python installation might be messed up. You might have to reinstall it: https://mintguide.org/other/794-python-3-6-install-latest-version-into-linux-mint.html I think you might need to learn a little more about Linux before this will make much sense to you. You're also using Python 2.7
Thank you so much! Appreciate the time you put into compiling this!
Note: It wasn't my main job and I'm a networker. but I know what to look for in a good hire in terms of skill. :)
There is nothing wrong with the language, even according to your own post. Your complaint is regarding the perceived state of the Python 3 available libraries, as if your specific use case is a major failure on the community’s part. You know what other people do in this situation? They build(or fork) and open source their own library that meets their use case. My comment is regarding the lack of respect for the people’s hard work that you believe should just be freely available to you.
It's so specific and built for the hardware that I wouldn't see separating the software.
/r/LearnPython
Wow these things are really complicated. I was under the assumption that python would be much simpler on Linux, atleast the installing modules etc. I am learning python on codeacademy right now and it is great for learning things AFTER everything is set up. I'm struggling to find the resources with this kind of stuff related to modules and installing virtual environments. Also does everyone have to go through this much trouble to install a module? Or is this because my installation is messed up? Anyways. I activated virtualenv and installed wheel. Tried installing textract `(env) sam@sam-H81M-S ~ $ python -m pip install textract` `Collecting textract` \#skipped to stay within wordcount `creating build/temp.linux-x86_64-3.5/deps/sphinxbase` `creating build/temp.linux-x86_64-3.5/deps/sphinxbase/src` `creating build/temp.linux-x86_64-3.5/deps/sphinxbase/src/libsphinxad` `x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DSPHINXBASE_EXPORTS -DPOCKETSPHINX_EXPORTS -DSPHINX_DLL -DHAVE_CONFIG_H -Ideps/sphinxbase/include -Ideps/sphinxbase/include/sphinxbase -Ideps/sphinxbase/include/android -I/home/sam/env/include -I/usr/include/python3.5m -c swig/sphinxbase/ad_wrap.c -o build/temp.linux-x86_64-3.5/swig/sphinxbase/ad_wrap.o -Wno-unused-label -Wno-strict-prototypes -Wno-parentheses -Wno-unused-but-set-variable -Wno-unused-variable -Wno-unused-result -Wno-sign-compare -Wno-misleading-indentation` `swig/sphinxbase/ad_wrap.c:147:21: fatal error: Python.h: No such file or directory` `compilation terminated.` `error: command 'x86_64-linux-gnu-gcc' failed with exit status 1` `----------------------------------------` `Failed building wheel for pocketsphinx` `Running` [`setup.py`](https://setup.py) `clean for pocketsphinx` `Successfully built textract` `Failed to build pocketsphinx` `Installing collected packages: pocketsphinx, textract` `Running` [`setup.py`](https://setup.py) `install for pocketsphinx ... error` `Complete output from command /home/sam/env/bin/python -u -c "import setuptools, tokenize;__file__='/tmp/pip-build-3g573ruf/pocketsphinx/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))" install --record /tmp/pip-0ordcai_-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/sam/env/include/site/python3.5/pocketsphinx:` `running install` `running build_ext` `building 'sphinxbase._ad' extension` `swigging swig/sphinxbase/ad.i to swig/sphinxbase/ad_wrap.c` `swig -python -modern -Ideps/sphinxbase/include -Ideps/sphinxbase/include/sphinxbase -Ideps/sphinxbase/include/android -Ideps/sphinxbase/swig -outdir sphinxbase -o swig/sphinxbase/ad_wrap.c swig/sphinxbase/ad.i` `creating build` `creating build/temp.linux-x86_64-3.5` `creating build/temp.linux-x86_64-3.5/swig` `creating build/temp.linux-x86_64-3.5/swig/sphinxbase` `creating build/temp.linux-x86_64-3.5/deps` `creating build/temp.linux-x86_64-3.5/deps/sphinxbase` `creating build/temp.linux-x86_64-3.5/deps/sphinxbase/src` `creating build/temp.linux-x86_64-3.5/deps/sphinxbase/src/libsphinxad` `x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DSPHINXBASE_EXPORTS -DPOCKETSPHINX_EXPORTS -DSPHINX_DLL -DHAVE_CONFIG_H -Ideps/sphinxbase/include -Ideps/sphinxbase/include/sphinxbase -Ideps/sphinxbase/include/android -I/home/sam/env/include -I/usr/include/python3.5m -c swig/sphinxbase/ad_wrap.c -o build/temp.linux-x86_64-3.5/swig/sphinxbase/ad_wrap.o -Wno-unused-label -Wno-strict-prototypes -Wno-parentheses -Wno-unused-but-set-variable -Wno-unused-variable -Wno-unused-result -Wno-sign-compare -Wno-misleading-indentation` `swig/sphinxbase/ad_wrap.c:147:21: fatal error: Python.h: No such file or directory` `compilation terminated.` `error: command 'x86_64-linux-gnu-gcc' failed with exit status 1` `----------------------------------------` `Command "/home/sam/env/bin/python -u -c "import setuptools, tokenize;__file__='/tmp/pip-build-3g573ruf/pocketsphinx/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))" install --record /tmp/pip-0ordcai_-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/sam/env/include/site/python3.5/pocketsphinx" failed with error code 1 in /tmp/pip-build-3g573ruf/pocketsphinx/` `You are using pip version 8.1.1, however version 10.0.1 is available.` `You should consider upgrading via the 'pip install --upgrade pip' command.` &gt;pip install --user virtualenvwrapper Alright this worked but still unable to `(env) sam@sam-H81M-S ~ $ workon` `workon: command not found` `(env) sam@sam-H81M-S ~ $ mkvirtualenv` `mkvirtualenv: command not found` `(env) sam@sam-H81M-S ~ $ sudo mkvirtualenv` `sudo: mkvirtualenv: command not found` `(env) sam@sam-H81M-S ~ $ mktmpenv` `mktmpenv: command not found` Thank you for your patience so far. I know I am really bad with this stuff
The source dataset might be wrong but it lists those Gordian emperors.
Please read my edit, you need to install sphinxbase and then try again with installing textract with pip.
Can I install wheel, virtualenv through the software manager?
Your advice to an eager 16 year old willing to learn encryption is: Don't try, you might fail? ¯\_(ツ)_/¯ 
You dropped this \ *** ^^&amp;#32;To&amp;#32;prevent&amp;#32;anymore&amp;#32;lost&amp;#32;limbs&amp;#32;throughout&amp;#32;Reddit,&amp;#32;correctly&amp;#32;escape&amp;#32;the&amp;#32;arms&amp;#32;and&amp;#32;shoulders&amp;#32;by&amp;#32;typing&amp;#32;the&amp;#32;shrug&amp;#32;as&amp;#32;`¯\\\_(ツ)_/¯`&amp;#32;or&amp;#32;`¯\\\_(ツ)\_/¯` [^^Click&amp;#32;here&amp;#32;to&amp;#32;see&amp;#32;why&amp;#32;this&amp;#32;is&amp;#32;necessary](https://np.reddit.com/r/OutOfTheLoop/comments/3fbrg3/is_there_a_reason_why_the_arm_is_always_missing/ctn5gbf/)
I love this community.
Exactly what i thought.
oh not just to an eager 16 year old, i'd say that to anyone. Of course i'd be wrong once in a while but in general it's pretty good advice. Using encryption libraries, yeah no problem do that. Implement anything yourself - there's very little chance you'll get it right and not cause major security problems for everyone involved. If you're interested in that go to university, study math. 
Use pycharm. Use type hinting. Name your parameters according to the type of it expected. Instead of Words[]; 
&gt;If you get an error you might have to manually install sphinxbase: &gt; &gt;Download sphinxbase from here: https://cmusphinx.github.io/wiki/download/ &gt; &gt;Run: &gt; &gt; tar -xvzf sphinxbase-5prealpha.tar.gz cd sphinxbase-5prealpha sudo ./configure sudo make clean all sudo make check sudo make install &gt; &gt;Run in your virtualenv: &gt; &gt;pip install pocketsphinx pip install textract &gt; &gt;At this point textract installed fine for me. At pip install pocketsphinx, I am still getting failed building wheel for pocketsphinx. The commands above it worked perfectly though without any error :|
Can you paste the error here?
pip install pocketsphinx error: https://pastebin.com/VreHtfdU tar ... sudo make install: https://pastebin.com/H7B0Xp74
Dude, you're 16, you have years before you need to decide what job you want to settle on, play with everything. See what you like. I didn't even get into IT until I was 28. Secondly, if you're still at home, freelance the crap out of yourself, go nuts with it, and then mop floors on the side when money is tight. Once you've got a wife and family to worry about ~~you'll be an extraordinarily successful freelancer~~ you can think about doing what you have to to provide.
Can you run this: sudo apt-get install python-dev libxml2-dev libxslt1-dev antiword sudo apt-get install unrtf poppler-utils pstotext tesseract-ocr sudo apt-get install flac ffmpeg lame libmad0 libsox-fmt-mp3 sox libjpeg-dev swig 
That’s pretty cool. 
Where you put it doesn't really matter, you can keep it locally until you decide to throw it out there. Unless you want the help of the community, you can put it literally where they will ask you. You should learn git by the way, don't try to understand everything (it's impossible) instead use some workflow and get used to it, then expand.
Well, you could use python to create a network crawler that goes across data bases and finds the best results due to popularity
While having your own projects can help, part of how you stand out to a prospective employer is in showing your ability to create/add value. Finding professional opportunities to contribute your technical skills to will give you great experience and show that you’re capable creating real value through software. Pet projects are fine, but contributing to well regarded open source projects or finding internships / apprenticeships in a professional setting are going to be much more convincing on a CV. Employers could care less how much of a code wizard you are, it’s in how you apply those skills towards creating real-world value that they will take notice. Good luck!
As a freelancer choosing your field is probably even more important. At least the freelancers i know found themselves a niche in the market. That usually means doing some very specialized work. That's why i'd say unless you need C for what you want to do i wouldn't spend too much time on it. Learn Python and all the libraries you need to get your work done first. Learning a second language is usually not too complicated, but it's a waste of time if you don't need it. There's always going to be another language you feel like you should learn but it's important to focus on the important things first. In addition to that you really have to start dealing with licenses, intellectual property, contracts and networking. Usually you can find courses about that kind of stuff if you look for startup/IT/founder Conference, Fairs, Meetings and Get Togethers. In a perfect world you would find a mentor there. Somebody who is a free lancer and well established who you can call if you don't know what to do and who you meet once or twice a month to talk about things. 
This is literally just the code from [https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/) with a file dialog
I just had a look. Sorry to say but it's really flawed. - Galba, Otho and Vitellius were not Flavian. - Pertinax and Didius Julianus were not Severan. Neither was Macrinus but we can let that one slide. - Everyone listed as Gordian emperors except for Gordian I, II and III were not Gordian. Valerian and Gallienus can be considered the Valerian dynasty, and if you wish, several emperors between Claudius Gothicus and Probus can be considered a dynasty too. - Many of the emperors listed as Constantinian weren't. I'd put them down as tetrarchs instead.
Pick up PyCharm and remain the "I don't know even Java" kind of programmer. Why create any more competition? PS. Experience starts after first decade at doing something, if you make progress, and you are lucky, and that progress is encouraged and rewarded. If you did something for several years, you are still a noob, sorry.
For requests your default UA will be 'python-requests/2.19.1'(requests version) so probably similar, can change it to whatever though
Bottle, simple, good documented and fast. Other advantage is can use many wsgi servers with differents options, forked, multithread, async, etc. 
You're young and sharp enough to give COBOL a look. There is big money in thaf these days.
My wife recently came back from working with a humanitarian mission in refugees camp in Greece. She's an emergency doctor. She says that one thing that is desperately needed in terms of IT of these places is EMR (electronic medical record). Refugees who wash up ashore in Greece rarely carry any medical records at all. Physicians from different humanitarian missions are poorly coordinated and don't really share any medical information between groups. In fact, you are lucky if they keep any records at all. I wouldn't try to do the entire project myself. Time constraints... also I'm not into crypto and not into interfaces, so I wouldn't do it. This would probably be overwhelming for you to do it alone too. But, saying this just in case there might be already a project doing something about it, and you could contribute your efforts to.
Nothing that concerns medical software, in particular imaging (DICOM format etc.) Works with Python 3. Welcome to the club. On the other hand, I have a dream, that Python will die soon. I know it's not meant to be, but I don't see Python 3 as an improvement, so I don't really care if there ever will be a port of DICOM-related stuff to v3 or not.
https://www.youtube.com/watch?v=OSGv2VnC0go is a useful talk introducing python idioms for iteration (and other stuff).
Jython is just a python interpreter on the JVM, I don’t think it helps someone move from being a Java dev to being proficient in Python - as they’re still writing python syntax.
Dont work for free.
I think with typehinting the `list_of_words` example is a little redundant and locks in an implementation detail to the caller. `words` captures that the function expects some iterable of words - not necessarily just a list.
I wouldn't worry about framework choice too much. For what you are wanting to do, any of them are fine. IMO, pyramid has the most flexible routing facilities of any of them. In that sense, it is a web framework framework since one of the defining characteristics of a web framework is how it routes a request to your code. In fact, here's a very old video of how to do a flask like framework in bfg(which was re-named pyramid later) http://static.repoze.org/casts/videotags.html 
Looks great. I'd add 2 more features to it however. 1) clearing the form once submitted; this is so to prevent duplicate records. 2) message / notification to the user to confirm it has been successfully registered. 
thanks for suggesting !!
damn they didn't give his real name. I would love an update on his life. 
80&amp;#37;+ of data analysis is data cleaning. So that's not an excuse. Rather, the fact you didn't assess the reliability of your data makes the analysis even worse.
I'll check it out. Thank you. I was also just reading about falcon which is built from whiskey (sounds like most frameworks are built from whiskey?) And intended on being a "bare metal" web framework meant for low latency applications. Just sounded interesting, I'm sure it's over my head at this time. 
I doubt that a language is perfect. You also assume too much about a post. Then again it's really not surprising you people always seen to get offended when your "toys" are insulted. 
Sorry for the slow reply; I didn't see that you'd commented. Here's my take on pygsheets relative to datasheets. The long and short of it is that the development practices behind is aren't very strong. To be more specific: * Their builds are failing and have been for over 2 months) * Their development practices aren't very solid at all, which makes me concerned about how bug-free their code would be / how well implemented things are. As a few specific examples from looking around at pygsheets for a few minutes: there's less documentation on contributing, strange artifacts exist like an unused requirements.txt, both production and test requirements are undocumented like oauth2client and pytest-cov, some .py files have execute privileges granted to them (which is sloppy and unnecessary), most tests hit APIs directly vs. mocking endpoints, and there is exposed functionality that doesn't exist (i.e. the method body is just `pass`). * They have low test coverage. I could be wrong since I struggled to get the tests to actually run, but it looks like test coverage is only around 23% vs. datasheets which has around 96% test coverage On the plus side (maybe), they have two first-class concepts that datasheets does not: ranges and cells. I personally don't like the mutable way they're implementing cells since you can just re-define what a specific cell is / points to, but it could still be a helpful concept depending on people's use case. And perhaps that gets to a larger idea (though I'm kinda just guessing at this point): datasheets exists to allow pulling data from or pushing data to Google Sheets. It's not meant for surgical changes, e.g. update the value in cell B27. datasheets could definitely be generalized to that, but that's an approach to data modification that is really easy to screw up. Instead, we opted for the idea of updating the entire tab or appending new data. For what it's worth, this is pretty similar to how you see modern dataflow tools work, since in-place updates are pretty fraught. With that said, if you're looking to modify a specific cell and not do bulk inserts (i.e. over-writes) or appends, then pygsheets offers something there that datasheets currently does not.
you could use try/except to handle the missing fields.
I ran the above, no change. All of them were installed correctly first time itself. I installed through the software manager python-pocketsphinx, python-virtualenv, python-wheel and python-sphinx. Restarted the pc and yet im getting the pocketsphinx errror
Write a BBS system
By "2D arrays", do you mean lists of lists? If so, it's because Numpy matrix operations are hardware accelerated, and the values are stored in a way that's easy for your CPU to use in vector instructions to facilitate that.
Oh far from perfect for sure, or we wouldn’t see updates on the regular cycle. The language is independent from the run time also. No, the attitude you demonstrated here carry’s across languages or implementations. It wouldn’t matter if we were talking about C, Go, or Rust. I’m calling your bullshit because like I said you don’t want to put in the hard work to fix what you think is broken. This isn’t about python, this is about you bitching about not having a 3rd party library that you like and not stepping up to release your own.
No, I mean rank 2 ndarrays
That's just a convenience thing - `numpy.matrix` objects are subclasses of `ndarray`, and define some operations like multiplication that have a specific definition for matrices, but don't have a consistent definition for arbitrary n-D arrays.
Well you still get to import all of the libs you know and love
If all you are doing is matrices, it's more convenient to be able to say `A * B` than `np.dot(A, B)` or `A.mult(B)` or whatever. That said, even for heavy-linear algebra situations I've decided to use arrays only. Reason: Vectors are a **major hassle** in matrix-land. It still wants them to have 2D, even when you explicitly pull a row or column vector out. Supermega annoying.
FYI you can get all that strict typing fun back with MyPy
The python kafka libraries are all just pokey c bindings.. That needs fixing (but this is basically impossible because of the GIL) Seriously tho, on top of your portfolio you should also invest in learning some stuff you'll encounter in the wild.. So with that I propose digging into some of the stuff like docker api, kubernetes (maybe make an operator or custom scheduler etc) or something that does acme just for fun I'm an opensource geek so I'm mostly concerned with my daily woes that I don't have time to fix.. Devops by day, been running servers since the 90s (somehow) So mostly backend poop that i focus on but another thing I'd strongly recommend is getting a little golang and vue skills in there.. Maybe even scala A tool that I'm convinced there is a massive market for is something like drone.io but specifically targeted at making batches of templated jobs (containers) from a git branch.. (for running things like ansible/terraform and stuff for us crusty ops people).. Also.. Make sure u get a little oauth2/oidconnect in there wherever you go.. And learn the mini io/s3 api too, it's been invaluable to me. Asyncio, conda, numpy and corenlp is good to know for machine learning too.. I worked at a start-up where they were all Linux users coding py and it rocked.. Despite the businesses plan to market the themselves as doing "AI" lol. God there's soo much I want to learn in this list already. For context, I just hired/interviewed a permie to help me at my current contract, guy is "at the top end of their budget" and doesn't have any programming skills and has been in his last place for 10 years (ye gads, give me a young person who's brain is still alive and malleable any day.. ) Anyway... Never stop learning! Dive into open source, I mostly do stuff like packaging for arch, stray fixes or just raising issues if something is borked Hope this helps, DM me if you want a private (professional geeks) slack with a code review channel that needs more love.
I think this YouTube video does a good job of explaining it. (How To Write Python In 3 Easy Steps)[https://youtu.be/Dts_yOZSpwU]
For two rank 2 ndarrays A, B, A @ B is the same thing as np.dot(A, B). To overload the @ operator, one defines the attribute \_\_matmul\_\_. 
I dont know much about falcon, but in general when you have a slow web endpoint it's usually the database side where you need to optimize and will get the biggest speed gains, it's hardly ever the web framework. Optimize for development speed first.
You went with Cookiecutter, right? :) Great idea! 
Yea, cookiecutter. It's quite thin, info on Python packaging. The official documentation can be quite "technical" from noobs like myself
I think you need to build some experience. You can do that by collaborating with other people on real world projects. Message me, i got some somenthing that I needs to be done. 
Try Fortran then! No, seriously. Wait, why are you leaving?!
Use Classes to store data, and when appropriate, functions that act only on that data. Don't make them too abstract, and don't use them too much.
You should implement a block chain. Basic blockchains are super easy to understand. It's one of those "so simple it's beautiful" sort of things. Get a couple raspberry Pis and then you'll have a little "swarm" going. It will teach you networking and encryption.
The `@` operator is a really new addition. `numpy.matrix` is way, way older. 
I don't know who you are referring to because I didn't create the original post and I didn't criticize anyone's library or anything. However the OP makes a valid point about Python's version issues, it is a mess. Yeah you are right about attitudes carrying across languages, I bet if this post were made in any of those other subreddits, someone would take issue with his "toy" being criticized. I think in general it just shows the utter lack of social skills and emotional intelligence in this industry. 
Start with HIGH level libraries/frameworks encapsulate most of what you're trying to do. For example, my choice was metasploit on kali linux. Originally, I began learning how to use nmap to scan networks/find vilnerabilities. With metasploit and other apps, 90&amp;#37; of the code is reduced to a few commands. Once you learn to use the framework (in networking, web apps, GUI's), you can then learn to modify the scripts you're running - because you know exactly what your end goal is and how it's suppose to flow - and most importantly: **You have access to the source code behind the framework /library/module you choose.** Contrarily, I spent my first 6-8 months learning trying to build projects from "scratch." For me, it was impossible not to get lost in the details. There are a million ways to code the same program but only a few ways to code it *well.* I found myself wasting hours taking all the approaches that were *almost* the right way - only to hit dead ends that killed the projects. Find what you want area you want to code in (networking, pentesting, native apps, web front/back end, etc). Find the highest level frame work you can in that category and take tutorials. Ås you learn more about a frame work and it's capabilities, **you will inevitably be hit by inspiration for a project and know exactly where to look for example source code**.
I agree with you. I don't use matrixes even when explicitly wanting to use matrix multiplication because it's too easy to make a mistake because you expected the * operator to do one thing and it did another.
Interesting. Didn't know this. 
/r/gatekeeping
Here's a sneak peek of /r/gatekeeping using the [top posts](https://np.reddit.com/r/gatekeeping/top/?sort=top&amp;t=all) of all time! \#1: [Rob Zombie Shooting Metal Gatekeeping Down.](https://i.redd.it/ukt58tn5q8n01.jpg) | [2779 comments](https://np.reddit.com/r/gatekeeping/comments/868t7d/rob_zombie_shooting_metal_gatekeeping_down/) \#2: [Because heaven forbid non-vegans eat vegan foods](https://i.redd.it/6cjxhg3v6c901.jpg) | [3080 comments](https://np.reddit.com/r/gatekeeping/comments/7pkc25/because_heaven_forbid_nonvegans_eat_vegan_foods/) \#3: [Refreshing](https://i.redd.it/0wn0g8wf5od01.jpg) | [529 comments](https://np.reddit.com/r/gatekeeping/comments/7um5q9/refreshing/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
What do you mean by 'revise'? Do you mean "relearn"?
Revisit :)
Same. 
Thanks for the advice. Already doing the freelancing. Hard to find work but it comes by. 
I appreciate your advice. Will definitely learn git. 
Great idea! Been added to my list! 
That’s an amazing idea. I will do my best to work on open source projects! Thanks for your help! 
That may be a little over my head. Maybe in another week I can look bottle. I certainly want to learn about asynchronous processes, I'm just not quite ready for that yet. 
I think `numpy.matrix` is a mistake. It looks like an attempt to make numpy arrays look like matlab arrays, but the result is just confusing and error prone, particularly given python's approach to typing. The fact that `*` has completely different behaviour for `ndarray` and `matrix` is enough of a reason to avoid it.
As you can see [in the PEP](https://www.python.org/dev/peps/pep-0465/), it was only added in Python 3.5.
Thanks. I’ll take that onboard. My main goal is to explore all the libraries as you said. I want to make sure that I know python in and out. 
Sure. I will take a look at it. Appreciate your help! 
That’s a good point. Really appreciate the advice. 
BSS? Sorry. 
Oh, sorry I was responding through a third party reddit app. The coloring through me off and I mistook you for OP... and this is the second time this has happened in that app. Apologies. 
Sure. Appreciate your help. I am so glad that you commented. I will message you if I need help. Appreciate the time you took to message me and help me out. 
Sure. I will drop you a message! 
Such a good idea. Blockchain is so important at this stage! Crypto currency and delocalised networks are incredibly important! 
What do you think will be a better candidate language/implementation? 
That’s in incredible idea. I have added this to my list of things to do! Thanks for telling me. I’ll definitely take another look into Kali
If this is a question about which you should, numpy recommends that you to use the arrays and say they intend to deprecate matrix eventually. See https://www.numpy.org/devdocs/user/numpy-for-matlab-users.html#array-or-matrix-which-should-i-use.
IMHO Pyramid is ideal for any *scale*, but that doesn't mean it's ideal for any set of priorities. Personally, having used all of Django, Flask, Pylons, CherryPy, and Plone, I think it's the best for any project where you want to prioritize the framework helping good architecture and enabling a maximum of flexibility, extensibility, and loose coupling. But if your priority is to just get something up quickly that is fine for most developers and accessible to new developers, then Django really shines. It's out-of-the-box experience is fantastic. But I don't like the ORM at all compared to SQLAlchemy, and it very much pushes you into an app who's architecture revolves around Django, as opposed to a Python app that happens to get delivered to the web. (IE Onion or Ports &amp; Adapters architecture) There is definitely more of a learning curve for pyramid. But every team I've introduced Pyramid + SQLAlchemy + DI with the ZCA has really liked it once they really got into it. These days my preferred python stack is the above plus Marshmallow for serializing and deserializing. I build my apps now so that the backend layer is usable outside of a web context just as easily, allowing service requests to come in as easily over rabbitmq messages as http, and it's fantastic for building that kind of very loosely coupled onion architecture app. HTH!
This is true. None of the others support hybrid routing graphs of traversal and URL dispatch, and that can lead to some very elegant solutions, especially in the area of hierarchical permissions.
Well it's being phased out and the documentation encourages people not to use it. So give it time! :)
At a very quick glance there already are some FOSS projects out there for this area, though some seem to be fairly region-specific; examples include [openehr](https://www.openehr.org/), [openmrs](https://openmrs.org/), and [open-emr](https://www.open-emr.org/). There is also [GNUHealth](http://health.gnu.org/) (seems to be more for overall clinical management) and [GNUMed](http://www.gnumed.org/) (a more narrow-focus EMR), both of which have the advantage of being both Python and actively developed. Not being someone with any health background, I'm in no position to judge any on their merits, but this seems like a very worthwhile project for which a fair amount of back end footwork appears to already have been done. 
I would switch focus from Python to something that's more attractive among employers such as a full-end web skill set, learn PHP and node. I would suggest making a project that uses several systems and languages, for example a web application that requests server-side C code and returns something to the browser.
&gt; especially in the area of hierarchical permissions Yep, traversal helped me a lot a few years back on a project that required very sophisticated permissions. It also needed to run on App Engine, so at the time, Django was out because the ORM was not compatible with big table. That left me with flask or pyramid and I could not imagine how those permission policies could be written cleanly without traversal. Pyramid was and still is the right choice for that app. 
print locals() Or print globals() Those should be all the variables of any type that are being worked on. Also, this question should be in /r/learnpython or on stackoverflow. 
&gt; These days my preferred python stack is the above plus Marshmallow for serializing and deserializing. Same here, currently replacing a very messy ruby app with pyramid/sqla/marshmallow json api. I actually devised a way to generate the serializers dynamically from the models and their relationships(also generated from the db) so now I feel like I could do the same for graphql etc if and when the kids ever get around to ditching ember and moving to react. The actual pyramid code for this is very minimal, it just gets out of my way. 
No not explicitly. You can find this information by examining the variables defined in the global environment: [name for name, item in globals().items() if isinstance(item, pd.DataFrame)] If you need to create multiple DataFames and keep track of them, I would recommend putting them inside some container: data = dict( data1 = pd.read_table('data1.txt'), data2 = pd.read_table('data2.txt'), ) 
Yay! Didn't know that.
So put in patches to improve the startup speed, problem solved for the entire Python world. Oh, but you can't because of... So yes you are a whiner.
Plenty isn't a list so please give the list.
Excuse me? My apologies that this isn't *my* problem nor do I have enough C experience to make such patches. If there are major issues with the Python VM it is not the problem of any one user of Python to solve the problem, it is a problem the CPython core team need to fix.
Nutika is a compiler. Like all compiled programs, it is platform specific.
I did give a list. Did you just read the first word?Also, here's an automated [extensive list](https://pypi.org/search/?q=&amp;o=-created&amp;c=Programming+Language+%3A%3A+Python+%3A%3A+2+%3A%3A+Only) of the projects that are public on PyPI alone (not those that aren't, which contain a decent amount). You can't force some narrative that there is no justification in using Py2 just because you don't agree. I don't want to use it either, but I concede it won't die.
This [Python Is Not Java](http://dirtsimple.org/2004/12/python-is-not-java.html) and [Java is not Python, either...](http://dirtsimple.org/2004/12/java-is-not-python-either.html) should be linked on the sidebar as this gets asked so often.
Nice. :-)
I have a 120k line open source project. I could fairly easily split out 1/3 of it into a separate package. It would then require two packages that must be more or less in sync. That seems like a bad idea.
Ayyy nice man!
Thanks
If it is open source or something low key or non-profit, sure. Don't be out here looking for someone to work for you for free or 'for exposure'. 
As a noob, I have no idea how this is your first attempt and you managed to build a package. I admire you.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thank you for the reply, as a note for others this worked once i imported gc. It was so hard to find this solution! If i tried to search for list dataframe object etc it always bright up those searching for ways to manipulate or create data frames in Panda. 
Agreed 
I'm no expert and don't claim. [The Wikipedia page on Roman emperors very clearly lists 22 emperors under the heading of "Crisis of the Third Century and Gordian dynasty (235–285)".](Crisis of the Third Century and Gordian dynasty (235–285)) If that page is wrong I encourage you to correct it with your own sources.
This is explicit and clear! Oh yeah, it works :) After the other reply below, i went to read the documentation, and noticed the isinstance but didn't realize it would would work your way to pull the pandas dataframe out. This is very helpful. 
Where?
*The Government are extremely fond of amassing great quantities of statistics. These are raised to the nth degree, the cube roots are extracted, and the results are arranged into elaborate and impressive displays. What must be kept in mind, however, is that in every case, the figures are first put down by a village watchman, and he puts down anything he damn well pleases. \~*Sir Josiah Stamp I don't necessarily disagree with the sentiment but you need to trust some things to do any thing, no?
If you're a Matlab user in the 2000s and you're not sure about this whole Python thing.
https://github.com/numpy/numpy/blob/v1.14.5/numpy/lib/arraysetops.py#L388-L497 I mean, you see it everywhere in NumPy. 
I see. Did not know that. Thanks. 
here's a start: http://ecomunsing.com/build-your-own-blockchain
So obviously there are some things here that I lack a clear understanding of. That will soon change, however this is what I am taking from your comment: If my primary goal is to work with something that can scale well and be nimble/customizable enough to work with my needs as they change, learn pyramid. The down side may be a slower development process for a "newbie", however there is a larger pay off in the end. So, at the least, you would suggest avoiding Django due to its long term structure? As it forces the use of their specific framework choices? I'm certainly not married to any stack yet, though I did start some basic development with flask just last evening. So far it feels more "pythonic" than Django, I'm sure Pyramid would similar. What are the major differences between flask and pyramid? Are their specific app types that are better for one vs the other? 
I couldn't agree more with the first sentence! 
That's just how NumPy chooses to do things. There is no fixed syntax for type annotation in docstrings. Many other projects use the Sphinx syntax: `:type foo: int`, and that's what PyCharm uses by default too. Google's style guide used to recommend `foo (int): some description of what foo is`, but now recommends the official `typing` module and Python 3 type annotations. The official `typing` [PEP](https://www.python.org/dev/peps/pep-0484/) uses `foo: str` directly as a function annotation.
Shut your soft ass up
When you put projects on github, take pains to show good software development practices -- proper use of branching; each commit addresses just one change and has a clear commit message; each package has a doc and a tests folder (that actually contain some doc and some tests); use of unit test code. Showing that you grasp how software maintenance is done right, is a big job skill to display, more than any single language. Also, [PyInstaller](https://github.com/pyinstaller/pyinstaller/issues) -- like many other open source projects -- has a number of issues tagged "help wanted" and "good first issue".
If you use the Spyder IDE you can see all the current objects in the Variable Explorer panel. 
&gt; digging into some of the stuff like docker api, kubernetes This. 
Started with Python 3-4 months ago. Lots of googling plus seeking help on stackoverflow, reddit as well as IRC. I started a blog to document my process by using Python for finance as I was in MBA programme: https://medium.com/python-data. It takes time but the key is "persistence"
Actually you can do that in matplotlib so it should work with seaborn too... But it's super ugly code and just generally not as nice as the bokeh hover.
Since you used keyword "package" I'll concentrate on that :) So your setup.py looks well, but there is a room for improvement. * setuptools is evolving to use [declarative syntax](https://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files). There are a lot of benefits to it, standardization and a huge one that allows extracting values by other tools without having to run setup. * You can use ~= comparison for versions, this reduces chances of things breaking up when package changes its api. `requests ~= 2.19.1` is essentially equivalent to `requests &gt;= 2.19.1, &lt;2.20.0` * You should always use pinned versions in `requirements.txt` (or just not use `requirements.txt`. `requirements.txt` is meant to reproduce the exact same setup as you used for development. You have unpinned versions in setup, so why duplicate it with requirements. It's much easier to actually use `pip freeze &gt; requirements.txt` or if you want to use a better tooling, use `pip-compile` from `pip-tools` package (it's better at resolving dependencies). * instead of hard-coding version like [here](https://github.com/PyDataBlog/Coinsta/blob/master/coinsta/__init__.py#L3) you can use `get_distribution()` from `pkg_resources`. The `version` attribute will contain version of the package. e.g. `from pkg_resources import get_distribution; __version__ = get_distribution('Coinsta').version` * you can use `setuptools_scm` package to provide version directly from git (whenever you create a release tag that's the version you will have) * you can configure testing so you can run it directly through `setup.py` through `tests_require`, `setup_requires` and `aliases` (BTW: your tests work without `pytest` (so you probably don't need it, it's just that the output is uglier) Here are files after changes: setup.py: #! /usr/bin/env python from setuptools import setup setup() setup.cfg: [metadata] name=coinsta version=0.1.1 url=https://github.com/PyDataBlog/Coinsta author=Bernard Brenyah author_email=bbrenyah@gmail.com description=A Python package for acquiring both historical and current data of cryptocurrencies long_description=file:README.md license=BSD classifiers= Development Status :: 4 - Beta Programming Language :: Python Programming Language :: Python :: 3 :: Only Programming Language :: Python :: 3.6 License :: OSI Approved :: BSD License [options] zip_safe=true setup_requires= pytest-runner install_requires= pandas ~= 0.23.1 lxml ~= 4.2.2 requests ~= 2.19.1 packages=find: tests_require= pytest [aliases] test=pytest
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [PyDataBlog/Coinsta/.../**__init__.py#L3** (master → ec037ba)](https://github.com/PyDataBlog/Coinsta/blob/ec037bac181c7524f648e811af9d1038776eff86/coinsta/__init__.py#L3) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e1m1x8n.)
If it makes you feel better, I've been publishing packages for several years and I still routinely muck it up.
Yes, I understand that persistence is the key. I have been persistent too. Hopefully, I will have the ability to pull off a significant project like you did. I will make sure to read your blog later today. Thanks!
r/learnpython
Yes. If you have a working example somewhere I'd appreciate seeing it. Thanks!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I still feel "inferior" that "imposter syndrome" still persists. The only way I think you can learn is to do something you actually like. I like Finance so I tried to translate financial theories and calculation with Python. It helped me to not lost interest in my python journey.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
because they don't have an employer paying their social security and medicare taxes.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I tried doing that. I am interested in building a game using Python and I don’t really think what I want is requires a lot. But I have decided that I need to do a lot of small and manageable tasks that I can reasonably accomplish using Python to build up my confide. I am working on a course that claims to do help me exactly do this. Once I complete it, I hope that I will not only feel confident but also capable of building the game. Then, I’d also like to start combining python and my field of interest. 
Thanks for sharing your knowledge. I'm still trying to understand the whole "packaging" sequence. I only knew about it some few days ago when I "googled how to make a python package". Any references other than the official python packaging docs that I can read into to understand the various components? 
Trust, but verify. It would have taken 5 minutes to see that the dataset being used bore no relation to reality.
&gt; Install as sudo, i.e use the sudo command **NO NO NO NO NO NO NO NO NO NO NO** Do not ever do this, especially if your level of expertise on this matter is "I gotta go ask reddit for help" (e.g. OP) &gt; add a virtual environment and install it to that instead of polluting your system installation **YES YES YES YES YES YES YES YES YES** - use your system's package manager to install the library dependencies (e.g. apt-get install python-dev libxml2-dev libxslt1-dev antiword unrtf poppler-utils pstotext tesseract-ocr \ flac ffmpeg lame libmad0 libsox-fmt-mp3 sox libjpeg-dev swig) - create a python virtual environment specifically for textract - activate that virtual environment - pip install textract inside of that virtual environment --or-- do what the error message says and use the --user flag, but IMHO that is less preferable to a venv
A couple of notes on your packaging: You're open in the setup.py will fail for source installs since the readme won't be included in the manifest. You need a MANIFEST.in file as well that contains: include README.md I've been doing this several years and still fuck up my package data. Your find packages call is way too permissive, if I install your package I'll not only get coinsta but this mysterious tests package as well. Add `exclude=["tests"]` to the call. Finally, you might've noticed you have raw markdown on your pypi page. If you add long_description_content_type="text/markdown to your setup call, it'll get rendered. 
https://en.m.wikipedia.org/wiki/Bulletin_board_system 
When you run python --version inside your venv, what version does it tell you that you have?
Non-Mobile link: https://en.wikipedia.org/wiki/Bulletin_board_system *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^196304
All the best and I'm sure you will get to that level you dream of. Just keep at it and have fun googling and 'youtubing'. You can check this youtube list: The Ultimate List of Python YouTube Channels 
yo man this sounds like a dope ass project... im still learning python and im super into crypto.... but i open my python 3.6 and run the codes and nothing pops up in my shell.....?
I saw that list. Thanks though.
This is one of those silicon valley solutions that will cause more problems because they didn't care about the details.
Yeah I have used it for those purposes I was just wondering if that was the tip of the iceberg sort of thing
Yeah, I consider myself to master the packaging, but it was a really steep learning curve. It's hard to know what is essential and what's optional for a package. Since setuptools is an extension of the distutils package that comes with python. Some documentation is in multiple places. What makes it worse is that Python already accepted setuptools as the way to go, so it stopped maintaining documentation for distutils. So when you go there it sends you back or you can look at the legacy documentation, which has many sections missing, and you need to look at source code to understand it. There are also some options that are left for historical reasons, but should never been used they are not clearly marked, etc. It's a giant mess. Stuff like that also encourages people to think that setuptools is only good for packaging libraries, and if you are writing an application you should package some other way i.e. things like PipEnv which creates even more confusion. It doesn't help that many members of PyPA are also confused about packaging. I am hoping that the declarative syntax (i.e. through `setup.cfg`) will clear confusion up.
Yep I will look into it, I was planning on rendering it as a video but it doesn't seem like there is any way to reference it through jinja? I have seen code where there are imports made through the templating language, but they were only importing local html files presumably within the same durectory. Do you think the import only works locally like that? Just looked into WebGL, looks like what I was looking for! Thanks! Still would appreciate your thoughts on the paragraph above
That's not a good sign. Lemme run the codes and check. UPDATE: It runs just fine here. Which commands are you running?
Still, this kind of level of programming currently goes *wooosh* right over the top of my head.
But that doesn't really answer the question of learning python, that's just finding interop. They probably want to learn about `list/dict/etc` vs `Array/Map/etc`.
/r/learnpython search for "project" Read the sidebar
I know exactly what you mean but take it from me. A week ago I didn't even know what "markdown", "setup tools", "unittesting" were. The good thing is that after things start making sense, it's relatively easy to understand WHY you need to do ABC before DEF. All of a sudden after watching that amazing Youtuber Corey Shafer on "unittesting", I knew exactly why it was needed and the general approach. I still got stuck with it and resorted to reddit to help me out but. It's easier to add these tips when things start to make sense. I stumbled on this package idea after I submitted my thesis and was like "why not use this to understand OOP" with Python. This is my first class EVER made!
Thanks for getting back to me, I’ll certainly give it a look
Do you cover packaging in there somewhere? That's the only hang-up I have before submitting my library upstream...
I've done something similar to the example in this link: [https://stackoverflow.com/questions/7908636/possible-to-make-labels-appear-when-hovering-over-a-point-in-matplotlib](https://stackoverflow.com/questions/7908636/possible-to-make-labels-appear-when-hovering-over-a-point-in-matplotlib)
Cool thanks!
Sadly, no! But I plan on making a post about my experiences with this package in the next post. I'll definitely add that section now
I primarily use the setuptools documentation: https://setuptools.readthedocs.io/en/latest/index.html The issue (which I wrote in another comment) is that setuptools was extending distutils, so sometimes it is missing some terms that originate from distutils. You can find some missing attributes here: https://docs.python.org/3/distutils/index.html#distutils-index But you should use setuptools as the main source and distutils as a backup. The documentation is not as good if you also plan to do something more advanced like building binary modules, or extending setuptools etc. There is also https://packaging.python.org/, but I don't agree with many things there mainly stating that there is difference between packaging application and libraries and pushing pipenv for the former. In reality setuptools does just fine for application. You use `entry_points` to create executables that will run your code, and use `pkg_resources.resource_*` to access any embedded data files. When deploying in devint, qa, staging, prod. You can generate requirements.txt in devint and then deploy it in other environments so you make sure you are using the same versions. I highly recomment using `pip-tools` package and `pip-compile` to generate pinned version and `pip-sync` for deployment. By packaging application the same way as rest of libraries, you have one consistent way to package everything and in a company sooner or later you will have another application that will rely on function(s) from your application. If your application is packaged properly then can easily be imported and its code reused. The https://packaging.python.org/tutorials/packaging-projects/ looks like a good starting point, but you're already past that part, besides it should be updated to use declarative syntax.
I mean, you and the other user claim this dataset is flawed but haven't actually cited anything corroborating it. For all I know you could just be people who enjoy being difficult on the internet. Relevant xkcd: [https://xkcd.com/386/](https://xkcd.com/386/)
As much as I personally like GNU products (long time Emacs user), medical doctors tend to be a little on the erm... less technically savvy side. But then, I didn't really look into either of those, maybe they aren't as scary. One particular aspect of the software is that it absolutely must run on mobile phones: often this is the only computer there is. Another important aspect is that it should be able to automatically translate stuff, at least to / from English (often times refugees speak some minority language, which needs a chain of translation, eg. Kurdish -&gt; Arabic -&gt; English). Though, to be honest, I don't think people actually tried any of the programs you mention. Like I said, they aren't very technological people. But, I just assumed somehow they would... thus I didn't even search for any. Well, I'll have to take a closer look. 
The `@` operator currently returns a `matrix` right? Will that get changed to output an array?
Something like OMeta? I'm not sure about the "O" in OMeta, but I definitely think that other aspects of this idea are valid.
I'm not sure. Sorry :-/.
sweet that worked ... great work man... at some point in the future i may have some questions for you.... this really motivates me ..... keep it up
You could go to Wikipedia right now and verify what has been said, but the face that you did this work without checking your sources already speaks volumes to your work ethic as well as your ignorance of Roman history. I mean, seriously - Otho and Vitellius as members of the Flavian dynasty? - Otho committed suicide after defeat by forces loyal to Vitellius and then Vitellius was executed on the orders of Vespasian; that would be Titus Flavius Vespasianus, emperor and founder of the Flavian dynasty? I suppose you think Donald was a member of the Duck Dynasty too.
Cool!
Thanks @pvkooten - yes, there is a lot of functionality to cover pretty much any API integration needs. There is one installation package because this is the most productive way to use the platform - you just install it and everything can be used immediately, there is no need to deal with lower-level things such as packaging, everything is ready for higher-level business integrations.
No worries mate
And I think they were added specifically so that A * B would do matmul. 
That's so-called numpy style docstrings, you just have to follow this rule if you want to generate documentation from it with sphinx and numpydoc. I don't know the history behind this choice, but it is that it is.
The documentation thing is a sore spot for sure. If you see someone using `package_dir` in their setup script and read what setuptools has to say on it, here's what you get &gt; find_packages() takes a source directory and two lists of package name patterns to exclude and include. If omitted, the source directory defaults to the same directory as the setup script. Some projects use a src or lib directory as the root of their source tree, and those projects would of course use "src" or "lib" as the first argument to find_packages(). (And such projects also need something like package_dir={'':'src'} in their setup() arguments, but that’s just a normal distutils thing.) No links to this "normal disutils thing", just a short sentence. You can kind of gleam what it is through context clues. But for a full understanding, [you have to find the distutils documentation on it](https://docs.python.org/3/distutils/setupscript.html#listing-whole-packages) 
It's a math notation. If you see discussions on types in discrete math books, they use the `x : A` notation to say that `x` is of type `A`. The same way one would use `x ∈ S` to say that `x` belongs to the set `S`.
Python has excellent IDE support, in PyCharm. I myself transitioned from Java to Python several years back, and to begin with, I found it frustrating not having a good IDE, as I was very used to Eclipse. But finding PyCharm was like coming home. It's great. Try it. I have the professional edition at work, but the CE version is almost as good.
Most of those are meant for laptops; basically all the EMR does is provide a somewhat standardized database and some means of transmitting the information within them. These typically have a server component and a client that runs on a laptop or desktop machine, usually (but not always) via a web browser. A mobile client probably wouldn't be that hard to write. The GNU ones I point out mainly because they're Python, most of the market seems to be Java enterprise. They don't offer on the fly translation, but they do have some means of internationalizing the interface of the client itself. I think the heavy lifting of the problem is that semi-standardized format (the US uses a totally different electronic medical record format than the EU, the EU is standardized (except perhaps in Britain), and everywhere else is its own crapshoot. Honestly this is a problem that a lot of people would be happy to contribute to solving, it's just that the tech people tend to be a couple steps removed from what the medical people are doing in the squishy gory bits.
What was your initial learning process? You took some course on Udemy or just started messing around while googling stuff?
FWIW, if your working session is in IPython and you're open to an IPython-specific method of retrieving the variable names, you can use %whos DataFrame to print a summary of all names bound to a DataFrame object (plus some additional info), or %who_ls DataFrame to return a Python list of variable names bound to a DataFrame object.
BTW looking at the GNU ones at a glance they seem to have done the typical FSF thing and focused more on freedom than on fully functional or even remotely useable... so they've eschewed things like Docker and AWS and what have you that could get a useable EMR system up and running fast in an edge environment like that in favor of not using *anything* that isn't part of the GNU project. It looks like it could be wrapped up into a much more easily deployed system which would still be GPL, though.
Started with udemy but I never actually managed to finish a course. I always learn best by doing so I learn from bits and pieces. Udemy, YouTube, IRC, stack overflow etc
Awesome. I'll look into these magic variables. I'm in these environments often. 
Thanks for linking me!
8 spaces for a tab is not okay.
I use sublime. How do I fix this?
All their platforms support all their plug ins for all their languages. 
https://www.sublimetext.com/docs/2/indentation.html
**a @ b** only returns a matrix is either of a and b is a matrix (and not some other custom array type with a higher __array_priority__ value). If a and b are ndarrays, an ndarray is returned (or a scalar).
Whoops. Just realized I had tab size set to 8 on github. my bad.
Isn't setup.cfg now being replaced with Pipfile/pyproject.toml? Honestly, as I much as I love Python and respect the work of the PyPA, I really *hate* the way new packaging tools have ended up. Thank the pythons for tools like Poetry and Flit, because I'd be totally lost otherwise...
Historical reasons.
&gt; but it is that it is. Truer words have never been truer :-)
It's one big fat mess for noobs like me as well. I really expected that to be the least of my worries. Just expected some fill some forms, generate some output, and upload kinda elegance Python usually delivers
A few tips: * Pycharm. * You can translate most of your knowledge of OOP to python... * ...but you can also use other paradigms like structured programming, which will allow you to write less verbose solutions. * Learn idiomatic python, list comprehension, the zen of python.
No worries mate!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I’m basically working 20 hours right now instead of 40 since I’m an engineer and basically just need to be in for meetings and get my work done. Some weeks it works out ok, but it’s pretty hard to get a lot of work done in 20 hours a week. There’s definitely a massive drop off in what you actually accomplish so I’m not sure if it will work out. I definitely think that after you work a certain amount of hours per day your work is going to slow down a lot and adding more time is going to not accomplish all that much. I think 6 hours a day would be significantly more realistic than 4. You could definitely work like 25% faster everyday (at least many people could).
Yeah, I always use downtime to try to get better at a marketable skill. For a while it was learning python. At the very least it’s more fun than just sitting on Reddit all day.
Python is still a nice language to learn and I'm still having a good stab at it when I can. If I was you I'd also plan to get a good grasp of C and C++ too. Java is horrible. I was only considering that because of Android development but they now have Kotlin which you can use. The thing with COBOL is it's very old and is still used in banking, finance, retail and insurance. So the code they still use these days are decades old because it works. But the original developers have probably retired a long time ago and there is a shortage of COBOL experts hence the demand and good pay.
Do you use python at work? What is your current toolset? I always say if you aren’t working with databases, especially as a data analyst, you should check it out. Also, who consumes you data analysis? Are they python programmers? If not, I think getting started with building web applications are the way to go, although that’s yet another skill set to adopt (not bad from a resume perspective) and kind of completely chaotic, but you probably should start sooner than later. 
No offense but it just seems like an incredibly stripped down ide for $5? Maybe if you add syntax highlighting and some debugging features people would enjoy it. But I don’t see a reason to pay $5 for a lesser version of many free tools out there.
Can you elaborate, or point me to a source elaborating on this?
You can check the commit history. Those functions were added 20 years ago, back when consistency wasn't exactly a priority. 
I am doing this course on Udemy right now. Basically working towards building a web scraper and some simple algorithms: https://www.udemy.com/the-complete-python-course/learn/v4/overview It has nice practice projects and simple exams, and it does not treat you like an idiot. Really enjoying it so far. About 60% in or so. 
Well.. I work for a start-up so I'm pretty much doing this all on my own at the moment. Just to try and lay some foundations. We don't have large amounts of data to play with so I generally use public data sets. By building web applications you mean using a framework like django? I am open to learning anything, but I'm finding it so hard to lay my finger on anything as there's so many packages and add ons and applications I don't really know where to focus. I was thinking about trying to make a basic game in pygame just for something to do. My problem is I have nothing I am particularly set on building? I want to find that project which I can't stop working on. But I just haven't found it? Any suggestions on where to start on web apps? 
awesome, really glad that helped! For me, it took a while to land on kali/pentesting (metasploit). I tried several different genres of programming (a gui for mac, web hosting, web scraping/data analysis, and several others) before I knew that's what I wanted. I got (seemingly) nowhere for months. Felt like I was wasting so much time without results. Very discouraging. BUT what I found is that no matter what type of program you try to write, the principles are the same each. They're the same for any language you write in as well. I didn't know it, but I was learning a lot. If you find yourself getting nowhere and lose interest, it's not a bad thing to find another project to give a go at. Definitely not wasting any time. Once you find what you want to do with code, you won't lose interest. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I've never understood the difference between an Array and a Matrix. Keanu was in one of them. 
From what I recall `pkg_resources` can be unbearably slow and would have to execute upon import from his package, so he may want to keep hardcoding the version, as many do. If the version attribute existed in it's own module, I'd agree with you though.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I was initially PO'd at /u/CSI_Tech_Dept for a seemingly overly pedantic answer. Even though this is /r/python and not /r/learnpython **and** OP asked for feedback it seemed with the slightly messy state Python packaging is currently in it was a bit nit picky. Second reading I recognized how much time and effort the post and follow up probably took--even if you know this crude inside out providing that sort of detail and instruction--and then on top of that actual code is amazing. (As a side note I was probably pre-disposed to being ornery (and defending the little guy) because of a rough weekend traveling.) Anyway--you deserve more up votes.
If you aren't reporting to your lead that you're sitting around for 90% of the day then that's lying.
Plumbum has been great at path handling, among other things, for a long long time, btw: from plumbum import local local.path('\~/makeme').mkdir()
So, maybe this is just me projecting, which is my fear whenever I respond to these somewhat opened ended questions, but one of the biggest challenges I see is the ability to help businesses and organizations arrive at a clear path to building a system of system design for capturing and persisting data and allowing “easy” enough CRUD capability. And of course there’s the business logic piece that needs to be figured out. Since there is no one way to do it, I think you’ve got to start working the issue any way you can. That’s a long way of saying that I did some cargo culting working through some Django tutorials, but I don’t get it yet. I’m sort of going really old school with client js/jquery code as front end and cgi scripts to $.get data from database or run code using python. So, first think of a non-trivial database idea (tables storing movies, actors, directors, reviews) and some interesting user interface (tables, stars, links, pictures ) and how you could use python to take user requests and parameters and render something interesting. Start small. Start ugly and work up from there. Install postgresql and Apache, run everything locally. That should help point you to some learning g paths. 
I guess it all depends on individual needs, in my experience code that returns package version is rarely called so it is not a big deal, but if that's not the case probably there's no faster way than using __version__.
After 2 years in JNBs, there's something I didn't know.
I've basically done the same thing myself, but in much more lightweight way and not organized as a package: [https://github.com/DrAlgernopKrieger/cryptodata](https://github.com/DrAlgernopKrieger/cryptodata)
You might find something here that's useful - [sentdex](https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ) &gt;Description &gt;Python Programming tutorials, going further than just the basics. Learn about machine learning, finance, data analysis, robotics, web development, game development and more. &gt;I have ~1000 videos, all of which do not fit on the front page. Try searching on the channel page, or via https://pythonprogramming.net. If you cannot find something, just ask! 
Well normally I'd say yes but since Python executes module level code, even if not directly imported, if someone imports anything from a module that declares the version in the same module via `get_distribution` it could be a bit of a bottleneck, depending on the end user's machine/installed packages/whatever.
Thank you so much for this detailed response 
Thanks, maybe I should emphasize more that his setup.py was good on its own. The thing is that setuptools is evolving so it's good idea to make use of new features. The stuff that I mentioned wouldn't work in 2016 for example. I feel that maybe I should write my own documentation about packaging, the problem I'm having is that I suck at documentations, but on the other hand I already had few people asking where they can read more and I can't point to anything else besides setuptools documentation which is probably best right now, but is missing many advanced details.
I think he's referring to the fact that autocompletion and static analysis in python is poor compared to what's available in a statically typed language, even with type annotations.
I'm pretty much an advanced python programmer, after ~7 years programming with it, and I started with Zed Shaw's LPTHW, which I honestly don't recommend any more -- I've found that "Python Crash Course" (no starch press) is a much better introduction when I've had to train people at work who are new to python. Plus it comes with 3 "intermediate" projects to build upon once you've finished the learning part of the book. Have you tried it? Other than that, back in my day what I did was dive head-first into what was my graduation thesis, which involved programming several non-trivial algorithms for filesystem structure parsing and file-recovery algorithms around them. Which forced me to learn new parts of the language so I could express them efficiently (rinse and repeat). But I don't think that's a good way, just what I had to do. Nowadays there are better ways to learn the more advanced stuff, like following Raymond Hettinger on twitter, checking PyCon talks and workshops, and going over a few intermediate books and tutorials.
Make a package containing all the stuff that you use a lot or need to rename, and just import it in any of your packages. That won't help you work on other people's code, but it at least makes things easier for your own.
Yeah, packaging is one thing I think that Python messed up from the start. An example of doing it great IMO is Rust and their cargo tools. `cargo new somepackage` generates everything you need which is very minimal, a Cargo.toml where you list dependencies and they can link to github easily, and everything just works. `cargo new somepackage`, edit code, `cargo build`, and that's that. Upload that repo to github and people can add a line to their Cargo.toml to have it as a dependency. Really wish python was that easy. I actually just ended up writing my own package generator that templates in variables I pass in, and I still use it to this day. 
You might want to start here: https://stackoverflow.com/questions/24129253/screen-capture-with-opencv-and-python-2-7 (the first result of google "python cv2 screen capture"). Following that, you'd need cv2, numpy and PIL/Pillow. I don't really get the rest of your question. You wrote it in a confusing way, and with 0 formating.
I wouldn't worry about it. Clean or not, you usually just template everything out once and that's that. New version, just update the version string and the dependencies, and that's all you need to do. It's one of the harder things about the python environment, and what matters is that it works and someone can pip install in the end. It really doesn't matter too much beyond that. 99% of the point is that pip install and version tracking and it really doesn't matter where you put your variables, in the setup.py or a config, as long as pip install works. Nice to follow modern conventions but most people will never know which way you did it as long as they can pip install it.
In bash, the command to make a directory is mkdir directory_name. That’s why it is that. 
It's also stuck in Python 2 land. There's work on Jython 3.5 but it stalled due to lack of corporate funding.
To be honest, if you're using flask or pyramid with SQLAlchemy+Marshmallow, they will both be fine and switching would not be hard. I'm not a huge fan of flask's plugin approach, and prefer pyramid's extend-through-component-architecture style, but they are much close to each other than they are to Django or Rails. You could add ZCA Dependency Injection to a flask app, use marshmallow and SQLAlchemy, and have not a whole lot of difference. I'll prob do that for my next project just to get to know flask better. Pyramid has more to help you if want a DI system (very nice when projects get really big), or building a heavily customized auth &amp; auth system (the pyramid authors wrote repoze.who actually), and feels natural to people who like the kind of design patterns associated with more heavy weigh enterprise architecture. They built it out of their experiences writing complex enterprise applications. Flask has more plugins and there's less to understand if you're into looking under the hood. The way I write apps these days, with an onion/port&amp;adapters architecture means I could trivially port my apps from Pyramid to Flask. I still prefer Pyramid, but I'd happily do a flask gig, while I'm not interested in doing Django anymore. SQLAlchemy is really the big deal. It kicks ass over everything else for dealing with databases by miles.
No it is unrelated. I'm not involved with PyPA but to me it looks like a group of people interested in packaging and each of them have their own idea how things should be done. Pipfile I think is approach connected with Pipenv and trying to make packaging similar to nodejs. Pipfile supposed to replace requirements.txt which I personally don't think it is needed, unless you want to pin versions (e.g. you have multiple environments: devint, qa, staging, prod etc and you make sure that production uses exactly the same code that you tested earlier in your pipeline) I wasn't aware of pyproject.toml, but from searching around looks like most likely it was adopted to be inside setup.cfg without having to have one extra file.
Yeah sorry I think I’ll delete the rest of it :)
Pybees Framework (https://github.com/pybee) seems to be very useful for that. You can either compile python yourself, or use a prebuild version (via cookiecutter). However, non-pythonic libs are not easy to include and naive datatypes need to he cast heavily. 
Last I heard, iOS doesn't allow embedded runtimes (like Python in an objc app) for security reasons. You should probably rewrite the script in objc, or create an API for it.
In my experience, Java is more error prone due to having lots of lines of code with sometimes unnecessary "redirection" just for the sake of modularity, which might not even be necessary. This issue does not exist ini Python because it is very easy to keep things simple. Typeness might be a bit unnatural at first but you will get used to it very fast. Since Python 3.5, there is also [type hints](https://www.python.org/dev/peps/pep-0484/). However, I haven't used them; so, can't comment on them.
I'm aware of this. Actually, the question was why it is makedirs rather than mkdirs. As in, why Python _actually spelled out_ 'make' rather than didn't, as with the 'mkdir' command. 
Anyone else find NumPy's docstrings kind of annoying. There is a lot of wasted space and visual noise. 
As far as I heard, the type of packaging was problematic but was addressed by pybee/Python-Apple-Support/ #26 pybee really does a great job and is worth a shot.
But why you would need that, it's gonna slowdown your app...
In some cases business logic is already present written in python.... an inclusion with slight adjustments would be favorable.
&gt; really new addition 3 versions and nearly 3 years old. It's closer to EOL versions of python than it is to bleeding edge.
lmao
Really? I didn't know this. Which book(s) are you thinking of?
Thanks so much for sharing!! I am sorry I can’t give any feedback yet but I am looking to do a python project like this for my “ learn a new skill every year” and this will be a great reference to come back to!! I am more looking to do a simple fiat currency converter as a test app but this will come in very handy! I am still on the Udemy courses though :-) Ta! 
I believe that restrictions were removed by Apple recently. Pythonista app already is able to execute python scripts on their iOS app so it must be possible somehow. I am curious how Pythonista embedded Python in their app. 
Isn't pybee to build the entire iOS app with python and not just to be able to run a simple script from an Objective C app?
Jsonschema has the advantage of being based on an official spec, with support beyond a single library and indeed beyond Python, and the schemas themselves are serializable as json, meaning it's quite easy to use (validate) from both server and client side in a REST context. But I haven't tried the others you mention. The json schema spec is a bit complex and funky in places which often results in cryptic errors, as well as difficulties composing schemas without special tooling.
Can you give us a quick rundown on how to get the two working together? Or is it simply a matter of running pipenv within a pyenv-managed python install?
http://www.math.mcgill.ca/triples/Barr-Wells-ctcs.pdf (search for the colons until you find a type signature, technically it doesn't have a space before it, but that's just because of the typeface) It shows up a lot in books about category theory, and a lot of functional programming languages use this syntax or a variation of it (Haskell uses `::` for example).
Exactly. Python is embedded within the app and can he interfaced at runtime.
Just as a note, that's only one specific type of docstring. This isn't dictated by PEP 8 or any other PEP, and there are many different and *good* ways to write docstrings.
I see. Could you point me to an open source repository where this is not the case? (This is not a challenge, I really just want to see some other styles. I'm kind of looking for a standard style for myself, so the more the merrier). 
The big ones I know of are Numpy, Google, and reST. Off the dome I don't know anything that uses reST but Google code is easy to find. I personally use Google but am not super strict with it. I used to religiously document every argument, and types within types, etc. This *can* be useful but I found it unnecessary in a lot of cases, so now I just use the level of detail that seems necessary.
My first big project is similar to yours. Do you know of any exchanges with prices similar to CoinMarketCap's prices?
Seriously. His problem is an easy one to fix. Just choose a framework that's in python 3, if you want to code in Python 3? Especially since he's coding for himself...
If you are about to ask a "how do I do this in python" question, please try r/learnpython 
If you are about to ask a "how do I do this in python" question, please try r/learnpython 
For their primary languages (C/C++, Python, Ruby, PHP, Go) the plugins are only available for IntelliJ Idea.
I don't understand what the issue is. Is it supposed to print something other than the final print line? Do you know how long your operations are supposed to take? Have you tried putting more print commands in the middle of your code so you can see which parts might be taking long? By "bobbing" you just mean the program is running but not printing?
Thank you very much! I was able to use Pybee to get Python to be added to my app and my python script to at least be executed. However I am unable to figure out how to pass arguments to the script. Any idea? I added more details here: https://stackoverflow.com/questions/51127168/ios-iphone-app-is-it-possible-to-pass-arguments-and-get-output-from-a-python-s
It's good advice; you should also know that open source projects are all different, and some are easier to get started contributing to than others. You should look at their documentation for developers on how to contribute, and see if they have something specifically for first-time contributors. Two Python-related OSS projects I know of that welcome new contributors: * Beeware: https://pybee.org/contributing/how/first-time/ * Django: https://docs.djangoproject.com/en/dev/internals/contributing/new-contributors/
It is only supposed to print the new list. I have tried doing that; since there are more than 10 stocks and each has its information stored as a csv file, which is called upon and used, its taking very long. I cannot find a way to make any part of it faster. However, considering its Python, it definitely should be able to process it. By bobbing, I do mean that its running but not printing.
Nvm, I was able to get this to work. The python_argv and PySys_SetArgv can be used to pass arguments! Amazing! Thanks for the Pybee suggestion! :)
Really the problem is there is too much "drama" with python packaging right now. You could write the best totally unbiased tutorial and you'd potentially have pyenv, virtualenv, and envyenv people all nitpicking it. (And yes--I'm writing a python packaging tool called EnvyEnv (no I'm not).) You did say it was good in your first sentence--you didn't blow smoke up a butt--but you then took a crud load of time to actually give great info. I hope when I post something like this someone like you is around to criticize my work.
Good work! may I ask where you go to school?
Great idea, the portfolio will help learn new skills and demonstrate those skills for university applications and for employers when you're ready. Apart from the technical skills, your ability to communicate clearly and your entrepreneurial skills are also very important. You come across as very articulate for a 16 year old, and very few people your age can say they've already sold freelance projects. Continue to build on those skills as well, they're much rarer than you think, and together with technical skills they make a killer package. Whatever projects you try, if you can clearly explain the real world benefits to a non technical audience, you're on to a winner. So, back to python. Some projects that you might like to try: Web development is a major area. Try flask (easier) or django (more powerful, more complex) and build yourself a webapp. Cloud is a big thing these days and skills are in low supply, though whether they will still be rare when you graduate is a different question. AWS will give you free servers to practice on, and their boto3 python SDK is pretty powerful. Put your webapp on the cloud. Try pandas and numpy for data analysis. Find an open data feed that gives you interesting real data to analyse, and see what you can work out from it using those two libraries. With a bit of luck you might be able to reuse some of what you do as A Level projects, depending on what subjects you take. Use your serverless cloud webapp as a front end interface There are plenty of financial toolkits out there, and banks make for lucrative employers when you're older. Use python to build and track a mini portfolio, as another flask/django webapp. You'll do it better the second time Crypto: the other poster is right, it's really hard and surprisingly easy to screw up. But that means if you can do it (and enjoy it) you have an impressively rare skillset. If you are able to persevere and have reasonably good maths understanding, go for it. I found the book Applied Crypto by Bruce Schneier a really accessible explanation, but that was a long time ago and there might be better books now. Encrypt the data you're storing in your webapp and only decrypt it for the right person. If you can do any of that, you'll have some great skills and a great portfolio. Good luck! 
Oh jeez. I totally read the question wrong. My apologies. I do not know. 
No worries. 
It will make it statically typed, but ultimately it won't have a performance impact (AFAIK). It's still a Python object under the hood. It can be good for ensuring that you don't make mistakes, but otherwise doesn't serve a lot of purpose. Although, I believe there may be optimizations for lists, as sometimes they can be converted to arrays instead, but that a fuzzy memory that I would need to validate by combing the docs and doing some tests. 
Any time I thought of something that would be cool, I went and made it, and the more I made things the more cool ideas I had. Now my github and gist are full of neat scripts and projects, and your mileage may vary on this, but a recruiter from FB Dublin emailed me for an interview, so tech companies are definitely looking.
&gt; I'm writing a python packaging tool called EnvyEnv You just gave me heart palpitations for a second there, holy shit.
That's great. I would definitely love to check it out.
From my literature review, CMP was quite popular within the crypto space. You can check their FAQ for their methodology
I'm in Denmark. 
Agreed. To add, I think the NumPy team is also moving away from the explicit Matrix object type due to the addition of the “@“ operator. It acts as you would think “*” acts between two matrices. Specifically, it takes the inner product. 
If you have pyenv installed and configured, pipenv will use it to install the desired python version automatically. 
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thank you for the response. I had a chat with him and we decided to do just that. 
Appreciate what you accomplished, but checked your finance stuff, it's hundreds of years old stuff floating all over, goog practice though, oh u were in an MBA programme I guess
Dammit. Now I have to do it. 
Install 3.7 instead!
I think this would negate the principal reason why people use python: wealth of third party libraries, especially when the most useful among them are in C. 
SciPy has stated that they intend to deprecate numpy.matrix. They advise setting up a 1-d array with the same number of elements that you intend to convert to a matrix, then reshaping it into whatever matrix you desire. For example: x = np.arange(8) x = x.reshape((2,4))
Because "makedir" is what youre doing. Some of the old APIs suck. Just because they are historical does not mean we should keep using them.
This fits better in /r/learnpython. You may have more luck there
I dunno, I never use this in practice. With arrays, we already get data structures that loosely implements some linear algebra operations plus broadcasting that make them useful in applied scenarios. The numpy.matrix is pretty much the same. I think in order to define a niche where it could be useful to e.g., implement this data structure as an educational tool and to be more strict and disallow invalid linear algebra operations like ``` A = np.matrix([[1, 2], [3, 4], [5, 6]]) v = np.matrix([[1], [2], [3]]) A + v ``` or `A + 4` etc. And also don't call it `matmul` or so instead of `dot`
Yes, this is 100 percent. Make repos for anything you ever want right see in the future. Learn the command line calls. Set up ssh keys.
Thanks for making me aware of this. I had no idea such a thing existed. 
Matrices behave like Matlab, to the point that small amounts of Matlab can be copied to Python using numpy matrices with just a few mechanical changes like changing parentheses to square brackets. In Matlab matrix * matrix uses matrix multiplication. But numpy has evolved a lot since then and became more powerful than Matlab's clunky syntax.
http://www.obeythetestinggoat.com/ is a TDD book, but it teaches you Python and Django well. Is free online now so is worth a look at. 
Maybe because `os.mkdir` and `os.mkdirs` are so similar it was deemed more readable to use `os.makedirs`?
Oh yeah
NoOoOoOoO^ooo
Thanks
3d fluid dynamics is really complex. Like really really complex. I think numpy and scipy might have some pde solvers but in general people usually use a cfd module of some sort. It has been awhile since I've done this but I don't know if any that have good python wrappers. There might be some simple packages with python wrappers but these might not be applicable to your problem.
You are looking for someone with experience with computational fluid dynamics. Your choices are to hire a full time aerospace or mechanical engineer for 80k+ a year to do this, or to get an undergrad to do it for free. 
Can't you do matrix multiplication and methods on numpy arrays, though? It's like a multidimensional array is just that, and has the option of being treated like a matrix if the user wants. Which makes it strange that matrices themselves exist.
Except for the fact that you have to realizs a lot of educational institutions and majors still stick with Py2.7, for their own (weird or not) reasons.
Just be happy it is not os.MakeDirectories(...)
Well the license for one IDE is $200 and the license for all of them is $650. I’m going to assume that the people who were only going to buy one license for $200 weren’t going to buy the others to begin with so there’s no cannibalization there. And the ones who were buying the $650 license most likely don’t care about the price at all because it’s not coming out of their own pockets. Students get the $650 license for free too so it’s not like they were ever expecting students to pay, just professionals. 
You mean like Python 2.7?
But the autocompletion and static analysis of PyCharm isn't poor. It's really, really good. Surprisingy so. 
Sounds like you're not really using any CV functionality. I'd just use any of the more fully featured UI frameworks. Maybe try kivy. There's a bit more of a learning curve but it'll scale better and look more professional.
!!!!!!!!!!!!!!!! Wow. Finally it worked. Both textract and pocketsphinx installed. I cannot thank you enough. I couldn't have done this without your help
All I've read about protecting the source with pyinstaller is this https://pythonhosted.org/PyInstaller/usage.html#encrypting-python-bytecode That seems to imply that pyinstaller just uses the bytecode when making an exe. What I've read around here is that if you want to compile to machine code you should use http://nuitka.net/
A. I don't think Google has any desktop applications written in Python, B. Google does release much of its code and applications as open-source. PyInstaller doesn't obfuscate code beyond compiling it to Python byte code. Proprietary Python tends to be on the server-side, as the community doesn't really take well to closed-source. 
For most Western languages, trigram similarity is unreasonably effective as a fuzzy-matching approach. Postgres understands how to do it (via `pg_trgm`), and also supports index types which make it fast.
\`numpy.matrix\` was (mainly) meant to be a quick and dirty way of entering matlab-like arrays in (and only in) 2D and use \`\*\` for matrix multiplication. Similar to \`matplotlib.pylab\` story, this turned out to be making life more difficult instead of easier for maintenance. Hence now it is being phased out. But as is with any code that goes out in the wild, once you put something in, it is extremely difficult to take it out, since people would start using it and backwards compatibility becomes an instant issue. Here it is even funnier because what you want to phase out is a part of your heavily used module, \`scipy.sparse\` internals which is the main reason why \`np.matrix\` still is not deprecated, but hey, you can't foresee everything from a decade ago and it served well until now :) Hence, please don't use \`numpy.matrix\`, it is going to be deprecated, Also with NumPy 1.15 you will start seeing related warnings [https://github.com/numpy/numpy/pull/10142](https://github.com/numpy/numpy/pull/10142) (By the way, 1.15RC1 is out!) There is quite some activity on the \`pydata/sparse\` repository and you can read more about it in this SciPy PEP for the roadmap [https://github.com/hameerabbasi/sparse-ndarray-protocols](https://github.com/hameerabbasi/sparse-ndarray-protocols) and the related links therein. Disclosure: I am a member of SciPy team but these are my own opinions and not the team's per se.
there is xfoil, or tornado. typically these programs are used earlier in the design process before more advance methods like CFD. how these programs work is you enter in your wing geometry, and their relative positions. the program will give you an things like the coefficients and control derivatives. then if you wanted a structural analysis of the loads on the hull you would use a finite element analysis program like abaqus, where your forces and moments are calculated from the coefficients and control derivatives. I personally don't know of any way to do this in python but this is the way I was taught while at university. 
You asked for examples of other styles in a response somewhere, so here are some examples! As you know, the "default" style is the so-called numpy style. I say "default" because it's not really a standard, or stated anywhere that you must write docstrings like this, but this is the way that numpy has standardized it to, and this is the default style that the document generator Sphinx supports. :param path: The path of the file to wrap :type path: str :param field_storage: The :class:`FileStorage` instance to wrap :type field_storage: FileStorage :param temporary: Whether or not to delete the file when the File instance is destructed :type temporary: bool :returns: A buffered writable file descriptor :rtype: BufferedFileStorage The deal with this documentation style is that it's not really meant for human eyes. It was meant to be parsed by some external tool, such as Sphinx, which takes this and generates good or decent looking documentation with it. An alternative is the guide that [style guide that Google uses](https://github.com/google/styleguide/blob/gh-pages/pyguide.md). Again, I want to stress that neither of these guides are official in any capacity. The numpy style is used for numpy and official numpy derived/related projects, to keep a consistent format. The Google style is presumably what Google the company has decided that Google engineers would follow, also to keep consistency. I don't work for Google so I don't know how much of it they follow. The same example above is written like so in the Google style Args: path (str): The path of the file to wrap field_storage (FileStorage): The :class:`FileStorage` instance to wrap temporary (bool): Whether or not to delete the file when the File instance is destructed Returns: BufferedFileStorage: A buffered writable file descriptor Both styles tell the same stories, but you can immediately see that the Google style is much more easier to read by human eyes. This is great for if I'm looking at the documentation inside source code. When you run your document generator, like Sphinx, on this though it will reproduce the exact same thing that the first style produces. So in the end this style is only really important for reading inside source code, not for external documentation like a html page. Sphinx is built to read the numpy style by default, but you can use [napoleon](http://www.sphinx-doc.org/en/stable/ext/napoleon.html) to parse google style as well.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [google/styleguide/.../**pyguide.md** (gh-pages → ab48617)](https://github.com/google/styleguide/blob/ab48617e00be9d111804bd3715dd7b5f5732c9a3/pyguide.md) ---- 
It is a good reason. Like, everyone is used to it and understands it perfectly.
This is my first PyQt5 application. It's very basic at the moment but it plugs into my Arduino via serial and lets me toggle 2 pins. There's some errors in there atm but I'm very proud of what I've done. Feel free to point out anything that looks a bit off. I'd love the feedback!
&gt;Because you can only use what you need. This stands for all frameworks ;)
Not sure if this implemented in practice, but in theory, it may make a difference. Here's why: Python has more general and more specific C API for iterating over container-style objects: `PySequence_XXX` and `PyMapping_XXX` vs `PyList_XXX`, `PyTuple_XXX`, `PyDict_XXX`. In particular, this would matter in case of `PyMapping` vs `PyDict` because `PyMapping` doesn't have a way to iterate over keys and values other than first obtaining all of them as a list of tuples (which will have to allocate the whole list and a bunch of tuples), whereas dictionaries can be iterated using `PyDict_Next()`.
r/learnpython, read the sidebar, and don't post screenshots of code. 
People will suggest all kinds of solutions, you have a lot of options. First, don't use PyQt if you aren't going to open source - it doesn't sound like that's an issue, so I'd suggest starting there for its user-friendliness. They apparently have a wysiwyg style gui designer too, which must be really convenient. My only experience is with tkinter/ttk which are standard libraries for tcl/tk in python. I love what I've built, but it was gruesome - I removed all basic tk.Tk() (root) settings on my first go in order to customize every aspect of the interface. Documentation is scarce, and what documentation you can find is often incomplete or just straight up incorrect. (What many guides fail to acknowledge is that the theme you enable with ttk styles changes the individual built-in object style attributes and methods available to you. It's a little baffling how a standard library for python can have no comprehensive guide on the different methods available to the common themes - the web is littered with "*The *For Real* **Complete** Tkinter Guide of Corrected Inaccuracies 2017™®©" inevitably filled with inaccuracies due to an overlooked and massively influential feature of the ttk styles.) I don't have experience streaming video files for a gui, but I do have experience using opencv to stream cameras to a ttk label inside of a canvas (not to a cv2 frame) - which uses the same cv2 cam capture commands as you would want for a file. I would suggest using a multiprocessing.process object to handle any frame capturing / preprocessing, and then sending that frame to a queue (multiprocessing.queue) in which a separate threading.thread object consumes the queue items placed by the camera subprocess (the previously mentioned multiprocessing.process) and places the most recent frame into a local process queue (queue.queue) for a self-persisting root.after(frame_delay, this_frame_update_method) method to consume the most recent frame and update the display. Recording clicked locations is pretty easy, but it sounds like you just need the clicked widget - which is surprisingly well documented! Anyways, if you're making a gui, you'll need the multiprocessing and threading libraries in your toolkit unless you have a library handle that for you - but, for me, getting deeper into the python specific challenges was really helpful.
Google Drive (backend) and the client (windows specifically, on Mac it was Objective C) was written in Python (before they deprecated the client in favor of the new sync tool they are making/made).
I would definitely use a database in this case. Sqlite3 is the one I always recommend
Screw this title and article. There is no such thing as a "best" anything for anything in this industry. And this is coming from someone who prefers PyCharm over all else. Use the right tool for the job, right brand for the job. Sure, I need a hammer, but I the contractor prefer Stanley hammers. Other contractors may prefer other brands. And that's fine. Because generally speaking you can get the same features regardless of which brand you choose, you may just need to install something, like a grip sleeve.
I'm not the OP, but instead of getting defensive you could've read your source more carefully: the header of the wiki table is "Crisis of the Third Century **and** Gordian dynasty (235–285)." Under that header there's a link to [Crisis of the Third Century](https://en.wikipedia.org/wiki/Crisis_of_the_Third_Century#Emperors), which has only three Gordian in their dynasty, and also lists Decian, Valerian and Caran dynasties. AFAIK the crisis was a very chaotic time of random guys becoming emperors for a short time, quickly dying and getting replaced by another random dude, who sometimes was related to them. Three Gordian guys were probably the most dynasty-ish out of them all, which is why the wiki author put them into the header. Having all 22 emperors come from one family would be a way more bloodier mess even by the Roman standards.
Because it makes the directory as well as any and all directories in the path provided, recursively, unlike `mkdir`. To quote the docstring of `os.makedirs`, &gt; """makedirs(name [, mode=0o777][, exist_ok=False]) &gt; Super-mkdir; create a leaf directory and all intermediate ones. Works like mkdir, except that any intermediate path segment (not just the rightmost) will be created if it does not exist. If the target directory already exists, raise an OSError if exist_ok is False. Otherwise no exception is raised. This is recursive.""" The one thing I don't like is that this is a recursive function rather than an iterative one, which means if you go past the system recursion limit, which may be low because you set it to be so for whatever reason, this function will blow up. In general in Python iterative solutions are better and more performant, and don't have a limit like recursive solutions do.
The same question am I facing at the moment. I would recommend "a database" to. First look was something like mongodb. But multiple blogs are saying mongodb is not efficient. Often recommended is an SQL database like postgresql or mariadb. But I'm quite interessted in an 'profed' solution that acualy is used by many scrapers too.
Or instead of the expensive computer work: build a model and test it in a wind tunnel?
Which editor is this? Looks good. 
`M-x all-hail-emacs` 
Can someone help me with the code that can print only numbers when you type an alphabet import random p = random.randint(1000,9999) g = int(input('Guess the password')) attempts = 0 while p != "g": if len(str(g)) != 4: print('4 digits only') attempts = attempts+1 g = int(input('Try again')) elif g &lt; p: print('Too small') attempts = attempts+1 g = int(input('Try again')) elif g &gt; p: print('Too Big') attempts = attempts+1 g = int(input('Try again')) else: print('Correct,it took you',attempts,'times!',p,'is the password.') break
notepad
VS Code. This is just a plugin called "Polaroid" that let's you export snippets of code as a nice image 
Lol
What theme?
I recommend first just scraping the downloading the web pages. Once all of the web pages (HTML) are on disk, then figure out which data format you wish to use. If the data is relatively relational (table-like), use something like SQLite3. If your data is pretty unstructured or irregular (which is obvious if it is difficult to parse), maybe use JSON and a JSON store like MongoDB. You should be fine using SQLite3 or MySQL though.
I don't see anything about not posting code in the sidebar? I would post it in /r/learnpython but I'm not asking for help. I specifically said feel free to toos any advice but I didn't specifically "ask" for help. Thanks for the warm welcome though. 
Your else statements look messed up, you getting 'g' consistently instead of 'r'/''g'?
What's your color scheme in VS Code?
Are you sure mate? Vim seems pretty much to top all IDEs. I hear that Vim users are even flame retardant.
Yeah I'm still learning a bit about the elif and else statements. I'll ask on /r/learnpython and get some input on how to correct it
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
Depends entirely on the platform. Also, why?
PyInstaller does not, and cannot, protect your source code from being viewed or decompiled. It can't. At best it can obfuscate it. And the only way it can do so is by only shipping pyc files (readily decompiled) that optionally may have been encrypted (which only works if the encryption key is inside the bundle and easily readable, so trivially decrypted). No one should ship a bundled exe made with PyInstaller (or any other bundling app) and expect that their source cannot be read. That said, closed source doesn't really mean that the source cannot ever be read (or decompiled), but that the source is *legally* closed, IE even if you've somehow gotten the source you aren't legally entitled to use it. Just disclosing the source code doesn't mean that it's suddenly an open source work.
It's not a colorcheme specifically to vs-code. I use a program called "PyWal" to generate my systems color scheme from a imgage. There's a plugin called "vscode-wal" that pulls the colors from pywal and makes that your color scheme 
I can try to help you real quick, though I'm not familiar with the Adriano (pi guy). You're to if statement run back to back, like if green, then if blue. So since blue always occurs last if it doesn't match either of them it overwrites on the second one. Elif however is if red or if blue, and picks whichever one it gets a match on. If you have any questions let me know.
noted
Linux
I actually have a pi right here actually. Would probably be best to use that since I can run the code natively on there. What module do you use? What I want it to do is have 2 if else satements. One for each color. Right now it's a bit sporatic with 2 outputs.
Then you'll have to learn to speak X11. Start [here](https://www.x.org/archive/X11R7.5/doc/x11proto/proto.pdf).
How long have you been learning python?
You clearly don't read talesfromtechsupport. About 10% of the stories there were "I wrote a script while you were paying me. Now it's 5-10 years later and you're not paying me, and you want me to update it?"
 I went ahead and exported the colors and uploaded them to [pastebin](https://pastebin.com/zJ63Gs6i) for you. Enjoy!
The module depends on what I'm doing but I mainly use Rpi. What is the difference between "R" and "r" and "G" and "g"?
The key part of the admonition is "screenshots", and it's not in the sidebar, it's just considered courteous. Code is text, so if you want to share it, share the text. If someone wanted to run this, they'd have to type it themselves. In my mind it's a bit like when someone takes a picture of an email, prints the picture, and faxes it.
I'll look into that after class tomorrow. So basically it sends "R" to set the respective pin on the arduino to HIGH and "r" to set it to LOW. Same for "G" and "g". 
here's the [pastebin](https://pastebin.com/5WxLTc1e) link so you don't have to stare at the picture. Sorry
Oh, I didn't think about that. My apologies then. It's actually the first time I've posted code anywhere and that went over my head.
In and outs with python say 4-5 months. But I played with the "use python as a calculator" tutorials before that 
Your fine, umm give me a second so I can get my laptop around, I think I understand what your trying to do now.
Hey, don't feel too bad! Plenty of other people liked it, and luckily your file is short enough that a screenshot is manageable.
Thanks allot bro. Means allot to have someone go out of their way to help a newbie. Also basically the r's are for the red and the g's for green if that helps. I'm sure you can figure it out by looking at the code
Yeah I just took your fist post as in, "Don't post your code" so I was a lil confused. I'll make sure I post in text next time!
Yes definitely save the webpages in raw format on disk so you can fine tune your extraction without hammering the source server.
Here I think this is what you are trying to do, I only commented on the red side but it's the same on both. https://paste.pound-python.org/show/IjBpReSvMUtUrNuE9TJS/ 
I'm looking to learn pyqt5, which resources do you recommend?
I started today by going over the documentation [here](https://pythonspot.com/pyqt5/). I've found I learn best by going over the basics and then googling everything else I want to do. But udemy has a great PyQt5 course I just bought that's teaching me allot. I highly reccomend them
Thank you. I ask because I've seen too many poorly written tutorials on the matter. Is the serial package called serial on you? You've raised my interest in interfacing my Arduino nano with python
Hey no problem, your code actually looks super nice for a beginner. Pyqt5 can be a pain in the ass trying to learn, especially if you don't know c++(I'm working on that a bit). But I'm always happy to help (when I can, I'm just a hobbyist). There is a great community here for learning and I love it! Hope your experience is similar with your coding and learning pi/adrino :)
the specific pip package is called "pyserial". Nd yes most of the video tutorials I find hard to follow so I usually go off of books. "Python Crash Course" and "Learning Python the Hard Way" are heaven sent books if you get the time . I'll get you the arduino part of my code after class tomorrow so you can have a starting point ok
Hmm. We're in the right direction now. The green button toggles on and off perfectly. It's just inverted (i can fix that) but the red button will turn on once, then off and then stay off. 
Thanks buddy, very helpful
Thanks man this actually really means allot to me coming from someone else. Good to meet another hobbyist. I'll be sure to stick around here and learn a bit. I'm learning python for school and the potential jobs after but right now I find the best way to learn to by doing so I'm letting my inner tinkerer out. When this is dont I'm planning on moving it to a web app. Either Flask or Django I havent decided yet. I just want to be able to access it from my phone.
Best running time for a reasonable implementation of quicksort is actually O(n), O(n log n) is only if you do a really, really naive version which is used only as an introduction to the general idea of this algorithm, but not in real world applications. Also, the author is stupid af because he or she believes that somehow academics don't know how to design or measure speed of an algorithms, but the "real and true" coders somehow magically do have this ability.
Ohh I see what I did, look at line 62 I mixed up red/green there
no problem bro have fun with your coding! I went ahead and just pastebinned the code for you real quick. Here's the [python](https://pastebin.com/mwWe5zpi) part and heres the [arduino](https://pastebin.com/FKf0vJvX) portion. Let me knwo if you need some help understanding it
You to need to thing not only on the volumen or data structure. Also you need to take in account how are you going to consume this data. [https://academy.datastax.com/resources/ds220](https://academy.datastax.com/resources/ds220)
Yup everythings all good now thanks allot! I'll make sure to study over how your handled the if else statements and added in the BState variable. This will come in handy with other scripts later. You the real mvp
That's actually about the point I'm at, I've just been using ssh to access my pi and would like to make it look a little bit nicer. I've used flask in the past and it seemed fairly straightforward, but I don't know about Django outside of a lot of people seem to like it. 
No problem, you could do this a little bit shorter, but it'd be more confusing for trying to understand how it works. Also remember I used True/False for AState and BState, but you could use "UP"/"DOWN" to make it easier to understand looking back at it.
Yeah having a front end would be the nicest part. It's actually why I started this project but didn't know where to start. From what I hear flask is pretty easy to get started with compared to Django but Django has more built in down the road when you get there. What;s your pi setup to do?
Excelent opportunity for learning sqlalchemy and how to correctly perform bulk inserts! 
Ah, right. Wings and sails are slices of 2d but the assumption doesn't hold up for much else. Your best approach would probably to export the hull into openfoam (https://www.openfoam.com/) and have that do the work for you.
I have one running RetroPi, one running Mate(I've been playing around with everything one this one), then have another one ready to go into a smart mirror but I've been a bit lazy lol. It doesn't help I've been trying to avoid the google/amazon API's for voice, plus want to use pyqt5 for my own widgets.
Thanks for this, i'll try them out :)
tkinter all the way man!
Ah a little bit of everything I see. Mines been running as the middle man for my syncthing server to keep my linux configs in check on both of my machines. [(here's what my linux setup looks like)](https://www.reddit.com/r/unixporn/comments/8uq1ti/bspwm_daft_punk/) A smart mirror would really come in handy come to think of it. Lemme know when you get around to it. I'm sketchy about google and amazon having access to my voice data as well lol. See that's the think I'd like to stick tp python, html and css if I can. Hopefully I'll be able to do that with one of the 2 
It's making me feel like an artist with a blank canvas! 
PyInstaller has a built-in extractor, it's very easy to extract Python bytecode.
Ooohhh you brave soul, running arch? I'm a little bit jelly, I've been using Ubuntu Mate for so many years it's rediculous lol. It's not even them having my data it's the fact that you have to register a CC and they charge between 1 hour and half a million (literally) hours per month. I could just see shit going wrong with that..
Would you be willing to post the image? Thanks. 
Yeah definitely I can understand that. When. You ask for CCs I gotta go ahah. As for arch people seem to fall for the memes of it. Xorg crashing and all that. I've used it on the testing repos for over a year now and have yet to have a problem dude to "arch being unstable" every time something has broken has been from me configuring something wrong. I've actually had more trouble with other distros tbh. I like arch mainly that it's bare bones so my system and configs are all my personal creations and literally every program known to Linux is either in the official repos or in the aur. Smexy af
https://imgur.com/a/CWnrCcE
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/zqpKxJO.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
You’re awesome. Thanks so much. 
Enjoy
You have some cfd subreddits that will be able to answer your questions. Moreover, you will need specialized cfd tools, or more generalized pde solvers using finite element or finite volume to compute such things. 
Or if only parts of your objects are unstructured, use Postgres with it's JSON columns and enjoy the best of both worlds. https://blog.codeship.com/unleash-the-power-of-storing-json-in-postgres/
Yeah that's one of the reasons I like Mate it's fairly light weight. I'm almost back to give me an firefox, discord, and steam occasionally and I'm set lol. I have open box installed but can't ever quite make that jump so arch seems out(at least for now)
If you need help with pyqt5 definitely check out the IRC for it, not a ton of people on it but the ones that are there are pretty top notch and nice. You can message me too if you have any questions, but I don't work with it nearly as much as I used to so Im more likely to have to find how I did something in the past.
Lookinto document storage databases like MongoDB or CouchDB. They are great for scraping, though querying is a bit harder.
What's the point when you have `pathlib` since python3.5 that does exactly this?
Another package you might be interested in is \[cryptory\]([https://github.com/dashee87/cryptory](https://github.com/dashee87/cryptory)). I quite like it, mainly because I made it.
I saw it yesterday. I'll dive into the code and maybe port some functions.
Yes it's good for Python. But compared to what it does in Java, it's very poor.
Hello blogspam 
Off topic: Microsoft should ship VS Code with Windows ♥️
I didn't get the impression that anything bad was being said about academia. 
It is even written in the video: 
&gt; How does PyInstaller protect the Python source codes when turning it into a binary executable? It doesn't. Nothing does. Dropbox tried to make an encrypted interpreter but they failed. The only thing you can legally do is sue people.
Here's the source: https://github.com/lduck11007/doublependulum One complaint that I got was that the size was too large, leading to it not fitting normally on many terminals, and so size has been adjusted, similarly, I have added spaces between each grid to stop the line from appearing warped due to being taller than it is wide. The main improvement i've made is by placing a line between the nodes by using the [bresenham's line algorithm](https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm), and so it looks a lot neater now. I haven't gotten around to refactoring and removing global variables, but i have (somewhat) improved the curses implementation by adding another try except block to stop it from crashing unsafely. There's probably more options than that given by curses, but i'm happy with it for the time being.
**Bresenham's line algorithm** Bresenham's line algorithm is an algorithm that determines the points of an n-dimensional raster that should be selected in order to form a close approximation to a straight line between two points. It is commonly used to draw line primitives in a bitmap image (e.g. on a computer screen), as it uses only integer addition, subtraction and bit shifting, all of which are very cheap operations in standard computer architectures. It is an incremental error algorithm. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
This belongs in /r/learnpython. Please see the subreddit rules in the sidebar.
You can help us help you if you posted readable, formatted, python code that we can read and run. Either read the sidebar FAQ or use the app code format button.
I'm guessing something like this: def main(): try: g = int(input('Guess the password: ')) except ValueError: print('\nERROR: invalid input, try again.') main() else: print('Rest of code goes here.') finally: print('Finishing touches go here.') main()
Well, you open the article, and the first line reads: &gt; Timsort: A very fast , O(n log n), stable sorting algorithm built for the real world — not constructed in academia. The second line says exactly the same: &gt; Timsort is a sorting algorithm that is efficient for real-world data and not created in an academic laboratory. The question thus, did you go as far as reading the article?
I read those words. The statements are both true and do not contain opinion.
I'll third SQLlite3. File based, so you're not having to setup a DB server, not to say that's difficult but it's most likely overkill, especially if you just have one worker writing then later accessing the data. I'll second the SQLAlchemy recommendation as well. If you go the database route, take the time before hand to see if you can normalize the data, it's really easy to fall into the trap of treating the DB like a flat file and really lose the power of a DB. It's worth spending the time up front to design the table(s) structure because I assure you you're going to run into something that'll you forgot initially to put in. Having a fairly normalized DB makes it a bit easier to handle that case.
pyautogui
Replace Notepad
I use visual studio but damn vs code looks beautiful. 
The largest problem is that the matrix class is infectious. This means that if you are using both matrices and arrays, you need to be *very* careful to make sure that a function that expects an array (e.g. it does `a * b`) is only ever given arrays. Even before the `a @ b` operator was introduced in 3.5, I always used `a.dot(B)` or `np.dot(a, b)` instead of the matrix class, to avoid really hard to track bugs.
The reason I pay for the professional version of PyCharm is to run remote debugging on RPi targets. I use tons of them for various embedded hardware testing systems. I'm actually debugging on one now, remotely through VPN, then SSH. 
Tkinter is making me look like I'm in the 80s. Correct me if I'm wrong, tkinter is pretty limited in terms of design and new functionalities, isn't it? Do professional web developers work with tkinter in their day to day work?
Pycharm is probably the best full fledged IDE but VS Code will have everything you need in plugins and be much lighter
Have a look at pycharm!
I'd lile to know this too, from utils, to libs, to blogposts, references.
Of course they contain an opinion. It's like saying that whoever claims that "white lives matter too" isn't voicing a racist sentiment because the statement is in some sense true. There is no way to interpret "constructed in academia" as not a combination of condescending and misplaced pride in one's ignorance. Essentially, it's like trying to defend the use of the word "gay" when it was clearly used as an insult, by claiming that it actually means "happy".
I actually do not understand what you are saying or why you feel insulted. I accept that you are, but I don't understand why. All I see is the statement that the algorithm was not created in academia, which I find interesting, because I believe most famous algorithms are.
I use Pycharm primarily however there are quite a few good ones out there. Some of the ones I have used and like include: Komodo IDE (one of my fave IDEs after Jet Brains stuff) Atom (nice, free and light, but still a bit young and buggy at times) Visual Studio (and VS Code for non-windows is quite nice) As far as I have seen, PyDev is about as good as it gets for python in eclipse. I am not a huge fan of eclipse though so my opinion is based on limited experience. 
100% go check out PyCharm by JetBrains. I regret none of the money I spent on the licence for that. Actually so good. It’s cross platform (mac, windows and Linux), there’s syntax and semantic highlighting, the best auto-completion I’ve seen so far and zero-latency input, there’s community and paid versions as well. Literally more features than I can list.
Tk looks like trash, but Ttk makes modern-looking, system-themed applications
I literally just opened the PyQt docs and started hacking away with great success. I'm entirely self-taught on python and PyQt. 
A bit of unsolicited advice time, mainly because it took me sooooooooooo long to break this habit when doing qt. Try your best to keep your business logic and interface out of the Qt widget classes. It will save you so much headache. class App(MainWindow): def __init__(self,): super().__init__() .... def buttonClick(self, pressed): source = self.sender() source_text = source.text() def arduino_write(text): if text == 'Red': arduino.write('R'.encode()) else: arduino.write('r'.encode()) doing something that simple then makes it really easy to reuse that widget without copy pasteing the same code and imho most importantly, allows you to test your GUI and your hardware code separately. 
You cannot do a comparison based sort in O(n)...
You'll likely have better luck asking this in /r/learnpython Unfortunately I can't help because I don't use Atom and I'm not on Windows. I'd definitely be wary of any tutuorial that's on Python2 these days unless it's for something very niche.
Hey thank you I actually meant to post over there, don't know how I screwed this up.
I dont like most microsoft-related but VS code team did a really good job, especially with making it cross platform. It used to be really bad but now with all of those plugins it’s useful
i suggest to never use geometry, colors or manual positioning. use layouts and if something looks off (e.g. the wrong widget starts to use space that another should use), start using [QSizePolicy](http://doc.qt.io/qt-5/qsizepolicy.html). This will create a well-looking and behaving application.
Yes, it's definitely worth learning how to use libraries like Paramiko and Passlib and Cryptography. But designing your own cryptographic algorithms at 16 is like starting your juggling career with flaming chainsaws.
[`https://www.edyoda.com/resources/videolisting/98/`](https://www.edyoda.com/resources/videolisting/98/)
You can actually do this via the browser instead, for example on [Firefox](https://blog.nightly.mozilla.org/2016/11/07/simulate-slow-connections-with-the-network-throttling-tool/). Chrome has something similar.
[alot](https://idasbo.files.wordpress.com/2013/02/alot-3.jpg)
I use atom and some of the plug-ins are easy to install. For others, you have to install other packages say in Python, to work. Is installing plug-ins in VS code easy? 
I haven't used this addon, but python 2 is the default because a lot of people still use 2. In general, you would need to tell the addon where the py3 interpreter actually is. There is likely a setting within the addon to adjust this.
Think first about how you're going to use the data. If you expect to do much in the way of complex dicing and slicing, use a relational DB. There's little reason to use NoSQL for the small number of rows you're dealing with. As to the schema, consider again how you intend to query the data. There are a number of options. You can denormalize the data to make some kinds of queries easier, or you can store the data in a normalized form, which might be slower but is far more general-purpose if you want to explore the data. In terms of the effort involved, it's not much more difficult to set up PostgreSQL than it is MySQL or SQLite. Using an ORM like SQLAlchemy is definitely worthwhile if you want to do your reporting in Python. Another alternative is to slam it into Pandas and work on it that way. It's a data analytics toolkit in Python. A bit more effort to set up, but you get a lot of number-crunching and visualization out of the box that makes it a nice choice. Note also that you can use Pandas without a DB behind it. 
Yeah. But does it support all of them. I used ttk.Button and it looked much better but I couldn't use ttk for some of the other things tk supports. 
Hey there. How do I authenticate using Scrapy or even Scrapinghub(It should be stored in the project itself)? Where do I put secret json and how do I let the module know where to look for it? Thanks.
What theme are you using?
This definitely isn't done yet, but It's usable lol. I've seen a lot of people posting their projects here so I figured I'd share! Criticism and suggestions definitely welcome :)
Do you write the comments on a separate piece of paper?
No, maybe my use of words was wrong, sorry, not a native speaker. If you use Django, you get a lot of stuff, i.e., it is installed and loaded, even if you don't need it. E.g., authentication.
[occ_airconics](http://occ-airconics.readthedocs.io/en/latest/) implements a scripted aircraft geometry package for Python, powered by Open CASCADE and [PythonOCC](https://github.com/tpaviot/pythonocc-core/).
Like what???
&gt; DropBox and Google You should ask yourself: How are these companies making money? Hint: It's not their desktop apps. They don't care about the security of their desktop app code. Their products, among other things, are cloud services.
Really like what you've ended up with here, an interesting animation that's none to simple accomplished with what can only be called one of the most painful possible interfaces possible in which to do animation. Then I saw the code. Oy. *Please* refactor this... please, please, pretty please. My career trajectory has involved positions where I've had hire or evaluate coders with animation experience, and animators with coding experience... the GIF of this would get you a toe in the door, and I'd be excited, but by the fifth global I'd have to move your resume to the "check back in 2-3 years pile". Make this maintainable. Then put a CLI interface on it that lets people set starting values (and maybe curses hotkeys to change them on the fly), and it's a great calling card.
Looking at the docs you linked to for the `script` package, it explicitly suggests a solution for your issue in the *Script: Configure Script* area of the **[Usage](https://atom.io/packages/script#usage)** section: &gt; Also, in this dialog you can save options as a profile for future use. For example, you can add two profiles, one for `python2.7` and another for `python3` and run scripts with a specified profile, which will be more convinient [sic] than entering options every time you want to switch python versions.
I'm sorry, I didn't know that these global variables are such a big deal, I'm getting a lot of grief over them. they were mostly a last minute case of printing coordinates for debugging, I could probably get rid of most of them for no loss. Having to declare `terminal` as a global is definitely bad design, if I get some free time i'll make it all class based and have all the variables I had to make global as self.whatever. I definitely will make an interface to let you change starting angles/lengths. Thanks for the feedback 
I also used atom but I would highly recommend you to try VS Code
https://vaurien.readthedocs.io/en/1.8/
VS code _ is based on Atom_ yet I fell it's a bit faster to load and all. I too used Atom before