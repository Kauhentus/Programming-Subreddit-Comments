Automate the boring stuff might be to basic for you, but I'd give it a try since it's available as a free pdf download.
Alternatively, for i, a, b in zip(count(), A, B): ...
It originally did not (`enumerate` was added in 2.3 but the starting index was added in 2.6), which is why it's common for people not to be aware.
FWIW `namedtuple` was originally intended to be for "forward-improving" APIs aka you originally returned a straight tuple and you want to add more data, methods, …. Since you don't know how callers would use the value you still need to provide an actual tuple object with the proper number of indices, which is what `namedtuple` does. See e.g. `urllib.parse` (formerly `urlparse`). It wasn't really intended as a way to build small records, and in fact turns out to be [somewhat problematic as that](https://groups.google.com/forum/#!topic/dev-python/d5wInp-sybs) for debugging reasons.
Sure, but data classes are nice when e.g. writing a single-file script and not wanting to add the complexity of dependencies and a full proper project.
query-time synonyms ? removes need about reindexing and smaller indexes and higher query-cost
I will because I got hooked! Thanks! I actually got the free Udemy Automate the Boring Stuff with Python course and following it right now :)
good bot 
Bought the ebook, because the parts i'm interested in are due april/may next year. Also, because Miguel is a great guy for providing such well-written tutorials.
I had to write a program a little while ago that played music from a Pi. Finding a music library that worked wasn't easy but I did eventually find python-vlc. Its just python bindings for the vlc c lib but it was the only thing I could get to work and it worked great. Here's the wiki: https://wiki.videolan.org/python_bindings Looks like its on pypi: https://pypi.python.org/pypi/python-vlc Here's an example from the project I used it on: https://github.com/millotpg/uDj/blob/master/player/player.py (This was a hackathon project from early in my programming career... don't judge me...) (Sorry for formatting issues. Wrote this on mobile)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [millotpg/uDj/.../**player.py** (master → 7e9ea85)](https://github.com/millotpg/uDj/blob/7e9ea85057b102f95558995326fe7a1f52f55962/player/player.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dquiv9l.)^.
If you appoint yourself dictator for life, there is really no other way to remove you from that position.
How? 
Given the striking similarity, I'm surprised there has been no mention of `SimpleNamespace`. class MyDataClass(SimpleNamespace): def __init__(self, a: int, b: int, keyword=None): super().__init__(a=a, b=b, keyword=keyword) I'm supposing is roughly analogous to @dataclass class MyDataClass: a: int b: int keyword = None 
If you don't register you're not even agreeing to those terms in the first place. Realistically doesn't change much though 
/r/learnpython
Related question: if I wanted to play a tone at a given hertz oscilloscope-style, is there a module for that? Or outputting that tone in midi?
Great to hear this is out. Even though I already had a cursory knowledge of Flask when I went through his previous iteration of this tutorial, going through it really helped me become a much better Flask developer and I am sure this tutorial will do much of the same for me. I encourage everyone to check it out. I’ll be sure to buy the ebook when it is available.
Idk, probably by buying the book.
The issue is that you're simply missing the ')' on the previous line. Other than that, you don't need to import random since you already use 'from random import randInt', which also allows you to use use 'randInt()' instead of 'random.randInt()' 
Oh well while we're cringing over code golf let's make this one line then, because unnecessary code makes me _cringe_; from itertools import count enumzip = lambda *args, start=0: zip(count(start), *args)
*Full-time senior engineers in Amsterdam*. We are [Tiqets](https://www.tiqets.com), one of the fastest-growing tech startups in the Netherlands, and we're working to revolutionise how people buy tickets to culture and attractions in cities all over the world. More details and application forms: - [Backend](https://tiqets.recruitee.com/o/software-engineer-amsterdam) - [Frontend](https://tiqets.recruitee.com/o/frontend-developer) - [Devops](https://tiqets.recruitee.com/o/devops-engineer-amsterdam) - [Android](https://tiqets.recruitee.com/o/android-engineer)
Sourcing etc/profile.d/conda.sh breaks expression like these: $&gt; which conda which: no conda in (/home/xxx/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games) 
python for hackers is also great and clean code is a must read for everyone. 
I'd like the ouputting in real time as an oscilloscope feature too
Please use https://www.techjuice.pk That worked for me
You probably should choose an area where you want to be more advance. I assume you have some Python experience already. * DataScience - go to [Kaggle](https://www.kaggle.com/) right away. I think you will start everything you need. * Web - go to [Django](https://www.djangoproject.com/) and [DjangoBook](https://djangobook.com/) * Desktop and Mobile apps - go to [Kivy](https://kivy.org/) (I'm not an expert may be somebody can suggest something here) Also a link on one of my posts, called [TOP 5 Сlassiс Free Python Books](https://py.checkio.org/blog/top-5-classis-free-python-books/) in case you are looking for something more general. 
I meant how it was revolutionary... 
I have no idea if they're being relied upon but it wouldn't surprise me if init_subclass, ordered class attributes, or other 3.6 only features were being used to simplify dataclasses compared to attrs. I also think attrs is going to be fine, since it supports 2, has a wider scope of features for now, and doesn't require the type syntax which some people apparently don't like
It is time to put your hands on [Data Classes](https://www.python.org/dev/peps/pep-0557/) :)
This was THE flask tutorial for many years. I think he just updated it. 
This is a really cool one for when the next time a thread "what did you use python for to automate in your life"
also, decorators are most used (therefore more "understandable" to anyone) than metaclasses.
[TOP 5 Сlassiс Free Python Books](https://py.checkio.org/blog/top-5-classis-free-python-books/)
And this is relevant to Python how?
Simply learning the language for now.
But why tho
vol = re.findall(r'(?:\d+\wml)|(?:\d+\wm)|(?:\d{1}\sLitros)|(?:\d{1}\sLitro)', i)
Building a set of Python3 scripts to create/run/destroy dynamic staging environments in AWS and HaProxy, whilst being attached to Jenkins for easy Dev usage (It's PUSH BUTTON *gag*).
Agreed.
+1 for Clean Code.
Imo the only real way to learn is by doing, hack on something find a problem or project your wanna solve and iterate on it. Books are great, but I didn't learn python from them at all really. I think it depends on how you learn of course, reading wasn't for me. I went to school for civil engineering so I had no coding experience as well and I taught myself. 
Django is Python, there is no separation. In Django you write pure python code. Django just sets rules for where that code goes and how it is named. But every line you write is 100% pure python
All I got out of this was someone attempting a poor off-brand Linus rant. 4/10
I'd recommend Effective Python (http://www.effectivepython.com/) and the Python Cookbook (http://shop.oreilly.com/product/0636920027072.do).
Post what goes wrong. 
The Udacity course is focused on Computer Science far more than it is about the Web. Udacity did do a really good course for Python and Google App Engine with Steve Huffman, but I couldn't find it when I looked. Anyway, the Udacity course is free so you can try it out.
I only knew assembly and C and this provided with the skills to make web apps. It was more fun than bit twiddling 
Well, it *is* a mess but it is also really useful. And remember that I am not manually typing it. Things to condider: * I do not want to gum up the namespace/scope with modules that I import for this (and cannot assume all are already present) * I constantly work in both python 2 &amp; 3 * I need a way to break the program. Imagine if this were in a loop So, what it does is: * Prints a stack trace to figure out where I am * Embeds iPython * Gives me the option to break execution following an `exit()` from the embedded shell. Honestly, it is SUPER useful! 
You're presuming a lot about the formats involved. What if it's FLAC, Vorbis, AAC, AC3, OPUS, Speex… `ffmpeg` would do all of those, though be a bit bloated.
Could use `numpy` (or is it `scipy`), and output in the raw PCM format that some other library or program expects. That or `ffmpeg`'s `sine` audio source (`man ffmpeg-all`, then `/sine wave`).
The type syntax is in the language whether you want it or not. You can choose not to use tools like mypy, and thereby not enforce it. I don't think that is a terrible compromise. I also don't object to the use of the syntax here:`x: int=42` does look a bit nicer than `x = attr.ib(default=42)`. The issue is effectively deprecating attrs to push this forward. In the grand scheme of things it is a fairly minor difference between `attrs` and `dataclasses`. Attrs works, it works older versions of python, and it works with the most commonly used versions of python 3. There should be no rush to jam an inferior tool into the standard library just because it uses some fancy new syntax. Take the time and find a way for attrs to support this syntax in python 3.6. Wait for things to settle down. Make sure you are doing it the right way, and get people to adopt 3.6... then think about standardizing things.
&gt; remained optional for what, two releases? Two minor releases that as of yet don't have widespread adoption.
&gt; How do you propose this be implemented in a way that ignores type hints and also doesn't pollute the class namespace with vars? I dunno... the way attrs did it. Yes I agree it isn't as "pretty" to write `x = attr.ib(default=42, type=int)` as it is to write `x: int = 42`, but it is entirely functional from the end user perspective. They are jamming a replacement for a perfectly functional tool that doesn't utilize the type system into the standard library, because they have the type system. In essence they were given a hammer, and now they are running around looking for things they can smack it with. Doesn't matter if the thing they are hammering is a screw or not because the hammer will suffice.
That is still using type annotations in the sense that the syntax `x: ...` is invalid for python &lt; 3.6. Additionally you might ask if you can set a default value for x without enforcing a type. You can do that with attrs, I don't know what that would look like with the type annotations `x : ... = 42`?
Yes. A very strong one. More please!
Python has always been unique in the “batteries included” attitude. That’s one big reason Python is great imo. 
Nice work! A little comment: d1 = {} d2 = {} for f in os.scandir(dname1): if f.is_dir(): d1[f.name] = f.name for f in os.scandir(dname2): if f.is_dir(): d1[f.name] = f.name s1 = set(d1) s2 = set(d2) same_dnames = s1.intersection(s2) Can be simplified in: gen_folder = lamdba dname : set(f.name for f in os.scandir(dname) if f.is_dir() ) same_dnames = gen_folder(dname1) | gen_folder(dname2) 
All the threads in that subreddit are created by the same user... 
If you're using the Jupyter notebook, [IPython.display.Audio](http://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html#IPython.display.Audio) lets you do this pretty straightforwardly. Here's an example of it in action: http://ipywidgets.readthedocs.io/en/stable/examples/Beat%20Frequencies.html
Use a jupyter notebook if you want a quick and dirty dev environment. Ipython is a great command-line interpreter. Numpy does vector/array math, Pandas lets you work with tabular data, and seaborn makes pretty plots. That should get you started with most common data analysis tasks.
I swear its not me)
I like the use of decorators, it greatly simplifies the process!
not so much info about the topic of asyncio around, I guess. 
&gt; Typehints are optional. However, there's no reason that things in the stdlib can't be built that use them. Except that this isn't a standard library feature that *uses* type hints, it's one that *requires the programmer to use them*. Requiring something is the opposite of making it optional. &gt; How do you propose this be implemented in a way that ignores type hints and also doesn't pollute the class namespace with vars? &gt; Saying collections.namedtuple doesn't count because you end up saddled with all sorts of baggage such as your object is now iterable and has dedicated getitem and setitem behavior. Isn't this essentially the standard library version of [attrs](https://github.com/python-attrs/attrs)? What's wrong with its syntax? Alternatively, I've heard Data Classes described as "mutable namedtuples with defaults". Yes, `namedtuple` has flaws, but why not design a refined version rather than discard it completely? Instead, Data Classes have this unnecessary dependency on type hinting. It doesn't look like there was any attempt to find an alternative - which was no doubt deemed acceptable because it fits with the current flavor-of-the-month for Python features: "type-hint all the things". (Compare to a couple of releases ago, when it was "`async` all the things"). Overall (and I know it's far too late for this), I just wish some thought was put into giving Python a coherent design. Instead, the once-simple language continues to accumulate questionable feature-after-feature and is gaining complexity at a rate that puts C++ to shame.
Hmmm ... curious whether conda activate will solve the issue of activating envs in Powershell (their messaging kind of sounds like it will). Sure, there's workarounds, but it's still an annoying problem. 
Do you know whether these are lessons where you will need to sign into a Webinar? (I assume this to be the case) The reason I ask is I have work commitments unfortunately ;-; 
Not giving advice here, but they will block your IP if you send too many requests from the same IP.
Why bother creating lists just to print them? What is wrong with something like :- for row in anArray: for col in row: print(col) ???
I've been using Sympy for symbolic computation. It's ok but I don't think it's up to par with commercial programs.
Oh wow. Thanks for taking the time for reviewing my code -- I really appreciate it. These are some very nice code simplifications and will definitely add them into my program.
&gt; That is still using type annotations Well, class and variable annotations != type annotations. Remember, we can use arbitrary python expressions within annotations. So this is legal Python: import math class Bar: x: lambda x: 14 * x y: math.sin(42) Note that there's absolutely nothing remotely resembling a type here, and you'd probably never actually write anything like this in production, but it _is_ legal Python. And while it's true that variable annotations are new as of Python 3.6, you should also think longer-term -- in about 2-3 years, both Python 2 and older versions of Python 3 are going to be EOL'd and most people will probably have migrated to Python 3.7/3.8/3.9 or whatever. At that point, everybody (barring the people who decide to stick with EOL'd versions of Python) will have access to variable annotations. So, to make life easier for everybody 2-3 years down the line, we might as well start laying the groundwork for these sorts of language changes now. &gt; Additionally you might ask if you can set a default value for x without indicating a type. Yes, you can. I just tried testing the following program, and it prints out "3 99" as expected. from dataclasses import dataclass import math @dataclass class Bar: x: lambda x: 14 * x y: math.sin(42) = 99 b = Bar(3) print(b.x, b.y) &gt; I don't know what that would look like with the type annotations `x : ... = 42`? That would also work, yeah. However, the ellipsis expression (`...`) isn't a legal type -- doing `x: ... = 42` wouldn't make any PEP 484-compliant type checker (including mypy) happy. Instead, we can use the `Any` type, which _is_ a PEP-484 compliant type: from typing import Any from dataclasses import dataclass @dataclass class Bar: x: Any = 3 y: int = 3 b = bar() b.x = "foo" # mypy is happy b.y = "foo" # mypy complains Basically, `Any` is an escape hatch/a way of telling mypy and other PEP-484 compliant type checker that it should treat that variable or attribute or whatever as being fully dynamic. We basically "turn off" typechecking for that variable, in a certain sense. Or more precisely, `Any` is our mechanism for mixing together dynamic and typed code. Here's an example: from typing import Any def expect_int(x: int) -&gt; int: return x * 3 a = "foo" # a is of type str b: Any = "bar" # we force b to be of type any expect_int(a) # mypy complains expect_int(b) # mypy is happy -- b could be anything, so maybe this is ok? a.hello() # mypy complains b.hello() # mypy is happy Notice that the use of `Any` lets us write code that mypy may (rightly or wrongly) reject as being unsound. In this case, because I'm lazy, I used Any to hide deliberately buggy code, but you could see how we could strategically use `Any` to make mypy stop complaining about advanced metaprogramming things/really super dynamic things (like parsing arbitrary xml) that are difficult to actually give static types to. Of course, it'd be our responsibility to then verify that mainly-dynamic code is correct in some other way (e.g. unit tests or runtime checks) but what else is new.
They probably want to flashy with their code.
&gt; So this is legal Python Not for me. I'm using Python 3.5 and thats a syntax error. I understand that eventually most people will migrate to python 3.6 or newer, and that eventually this will be valid code, but 3.6 is not even a year old at this point. It seems very premature to be pushing its feature usage in this way. To be clear, I don't mind if a NEW project comes along and only wants to support versions &gt;=3.6. However this isn't really a new project. Its basically `attrs`, and the long term impact of accepting it into the core is to kill attrs, and the only sin attrs has ever committed is to not fork a &gt;3.6 branch to use the new language features within the first year of those features release. That to me is insanity.
I think scipy has a lot of modules which are intresting to use. 
Yes. Not using python or anything, but I did get a job. 
I just knew I'd get a reply like this. I should have worded it better XD
Is there a way to go from `python cli.py London` to `weather London`?
Can anyone comment on the value of the video? 
you could just put it in cron or use a scheduler. celery can do that but is probably overkill.
Oh no, thank you Buddy :p
Well, suppose we delayed introducing this feature for 3 years or so and waited until Python 3.5 was EOL'd. If we decide we're going to want to use this feature eventually, what benefits do we get out of waiting instead of just doing it now? Whether we release now or 3 years from now, people who want to support all non-EOL'd versions of Python are still going to have to wait 3 years or so. But if we release now, at least the people who only need to support the latest versions can start using these features. &gt; the only sin attrs has ever committed is to not fork a &gt;3.6 branch to use the new language features within the first year of those features release. Eh, I don't think that's really accurate. The pep, in the section about attrs, links to [this issue](https://github.com/ericvsmith/dataclasses/issues/19), which clarifies a few things. In particular... 1. The author of attrs has explicitly stated he doesn't want to see attrs in the standard library 2. The author of attrs has also said support for class annotations is in development and will be available soon. 3. This wasn't mentioned in the thread, but there are people working on writing plugins for mypy that special-case it to support attrs. (So it's not like people are trying to kill the library or anything.) 4. Guido said he dislikes some of the "colors [attrs] paints in the bikeshed" and pushed back against just incorporating attrs directly partly for that reason. 5. Attrs is more full-featured then dataclasses/dataclasses are deliberately designed to stay simple, so people who want to use all of attr's other features (validators, converters, metadata, etc) can still use those. 6. Also not in the thread, but there's no reason why attrs can't evolve to support both regular classes *and* dataclasses -- the ability to attach runtime validators could be very useful when working with things like JSON or whatever, whether you're using regular classes and data classes. (If some third party service unexpectedly changes the structure of a JSON blob, static typing isn't really going to help you there.)
Even that use case seems like it would be great for data classes but with a custom constructor. 
For Python, yes. Explicit types and declaring instances outside of `__init__` are not a direction I think is positive.
I did!
You can try pysox. It's a wrapper around the open source library sox for *NIX systems to convert and play audio files. I've used it before to download audio clips and play them through a script. Pretty easy to set up and install, plus the docs are really good https://github.com/rabitt/pysox
Sympy is great, mathematica is still faster for some operations (will be changing when SymEngine will be ready, I hope). A huge difference : mathematica is more mathematic-friendly, sympy more "code" friendly : you have to slightly change the way you write stuffs. Oh, and mathematica heavily use the functional paradigm, not sympy.
I don't use Python but a friend of mine got started with programming using Python and got a job after a few months. Python was his first *real* programming language, although he knew some of the basics from VB and JS from around 10 years prior, so he had an understanding of the overall concept of programming (variables, loops, etc.). This was a little over 3 years ago and he still works as a programmer doing web backend stuff in Node these days. He is based in London (always has been) and came from an accountancy background. He started to learn Python when he was 33 or 34 years old (I forget which but he started the year he turned 34). 
Using the responses library instead is easier than manual mocking
Proper packaging do the trick: http://python-packaging.readthedocs.io/en/latest/command-line-scripts.html
palantir writes code? i thought they just spewed PR, hired snobs, and lounged around like fat cats with their cushy government contracts.
namedtuples are terrible for many many reasons, all of which makes your argument weaker. 
Regarding the different objections: 1. If authors are actively pushing back against their projects being incorporated in the standard library, you have a serious problem. That is supposed to be an honor. Your code is so good that we want EVERYONE to have it and use it. If they say no then either you are making that process too onerous, or you are picking that is too immature and isn't ready for inclusion. In either case you as a language maintainer need to take a long hard look in the mirror and ask yourself "why does nobody want to go to the prom with me?" 2. Exactly why you should wait. Let them add the support and release a version that works for both 3.6 with annotations and &lt;3.6 without. 3. Not really sure why that is relevant. mypy is optional, as such we can never expect 100% of code to be compatible with it. There will always be a need to hack mypy to support libraries and code that was not written to work directly with it. Also this concern is alleviated by #2. In time mypy can expect that there will be a way to use attrs without hacks... you can't force people using attrs to write in the 3.6 style, but it would be an option if they port to 3.6/mypy. 4. And I don't like the colors in Guido's bikeshed. I would really like for someone to fork python. I am not remotely happy with Guido's leadership at this point. 5. If dataclasses and attrs were drop in replacements for each other sure, but they use a different syntax, and we don't know that they will be. Again we should wait for #2. 6. I don't really understand the concern you are describing, but I will comment on "not in the thread". Seriously, WTF! This is exactly the kind of arbitrary bullshit decision making process that is pissing me off. If Guido has a reason for rejecting X for the standard library and accepting Y, then he needs to document that. You can't just hand-wave at some other concerns that you haven't bothered to record in your discussion.
What data sets do they have? I couldn’t find it on their website. 
Yes, took me just under 6 months of studying. I found a company that wanted a remote junior programmer to write unit tests of a Django app. After an additional 6 months, that turned into me full time programming instead of testing. I had no idea what I was doing when I started. But, I confidently told the manager in the phone interview that, although I was new, I was absolutely positive that I could figure it out quickly and be an asset to the company. I think they liked the idea of relatively cheap labor since I did not have experience, so they took that chance. I worked 50-60 hour weeks for the first few months but only charged the company for 20 - 30 since most of that time was me studying, splashing about in the waters trying to figure out how to swim instead of sink. By relatively cheap, I mean they typically pay $50-$60 and hour for experienced help. They started me at $35. I had absolutely no problem with that, of course, since the most I'd ever made in my life was $20. 2 years later I'm still with this company. It worked out.
apsscheduler missing the jobs sometimes. Any idea on how to avoid the miss?
I hired myself while learning python. Does that count? 
I was just looking into Lambda functions, I was trying to over-engineer a line of code, that's all :) just experimenting. Thanks for the subreddit though!
Not sure how much it counts since I did a CS degree (though there were no Python classes), but I taught myself Python alongside my other classwork while I had jobs in other languages (java/js). Teaching myself programming on top of my classes is what got me a job to pay my way through school while most of my classmates couldn't even build stuff through graduation. Now I'm a data engineer programming with Python in the Apache Spark ecosystem (big data toolkit, essentially).
I found this really helpful, thank you for posting. I'm an accountant, aged 32, looking to do exactly the same thing
Just doesn't function as desired, it doesn't matter now, I used .isnumeric() for a simple fix, I was looking into Lambda functions and experimented by comparing an input against a set of values, wasn't returning correcting value. 
No it doesn't. If they're so terrible, the Python community has just decided that there is no need for a good way of creating immutable data classes. We have both tuple and list for a reason. And there is a reason one can switch from one to the other by changing only two characters, too.
:D That's awesome. Actually, could you post the source (unless it has sensitive info) to /r/boringstuffautomated? I'm trying to gather examples of things people automated. Even if the code doesn't work without setting it up. I just want to show people random examples when they ask "I'm not going to become a developer, but what kind of stuff could I automate if I learned how to code?"
Here's a sneak peek of /r/boringstuffautomated using the [top posts](https://np.reddit.com/r/boringstuffautomated/top/?sort=top&amp;t=all) of all time! \#1: [Rendering the HTML templates for my site.](https://np.reddit.com/r/boringstuffautomated/comments/7fov32/rendering_the_html_templates_for_my_site/) \#2: [Generating HTML bullet points for my website](https://np.reddit.com/r/boringstuffautomated/comments/7fosrp/generating_html_bullet_points_for_my_website/) \#3: [Run pngout on all files in the directory and/or subdirectories](https://np.reddit.com/r/boringstuffautomated/comments/7h7xd6/run_pngout_on_all_files_in_the_directory_andor/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Thanks! Will sure look into these.
Thanks!
remember to click "run with highest priviliges" if you use task scheduler.
&gt; tuple and list Sure. But namedtuple is a weird mess of a mix of named members and indexed members. Pick one I say! We don’t allow indexes access to member variables on classes for a reason: it makes no sense. 
As someone who has made a few sites in django, flask certainly looks more "lightweight" (based on hello world, at least). Can anyone comment on how powerful flask is compared to django?
I just did a quick look at the most recent data sets and there are things like the companies on Shark Tank, a historical listing of menus for different restaurants, the Navajo Code Talkers dictionary... I have also seen things such as municipal open data for different cities come up on the newsletters that they send out. There are a large number of people active on the platform and a number of different data sets across a wide range of topic areas.
No midi, but a software synthesizer that provides several oscillators that you can compose to do FM-synthesis a bit like the DX-7 from the 80's: https://github.com/irmen/synthesizer/ 
I've had some success with: *decoding* audio using ffmpeg running in a subprocess, and getting the PCM stream off that; *playing* that PCM audio stream using the sounddevice library.
Indeed, this is the result of a very successful [kickstarter campaign](https://www.kickstarter.com/projects/1124925856/the-new-and-improved-flask-mega-tutorial).
I'm curious as to the kind of work he put on his github.
it depends on if the array is array = np.array([[1,2], [1,2], [1,2]]) [print(x[0], x[1]) for x in array] 
Best of luck. :)
Python can do a lot of things really well. And it is "the best" at some of them. This is as opposed to other programs, say Matlab and Mathematica where they are the best at one or two specific things and become nearly impossible to use on others. In my opinion, python (+ NumPy,SciPy,Pandas) &gt; matlab (95% of the time) and is a great replacement. I think python ( + SymPy) is less of a replacement for Mathematica and symbolic math. As others have though, SymPy is probably what you want to be looking at. And matplotlib for plotting. To replace the notebook interface of Mathematica, look no further than Jupyter Notebooks. As the name suggests, it focusses on SciPy, but [Sci-Py Lectures](http://www.scipy-lectures.org/) are an **awesome** resource for learning python when you are doing scientific computing. They [also have a SymPy section](http://www.scipy-lectures.org/packages/sympy.html). 
It's not clear why you must use list comprehensions, but here's a couple of approaches: Assume your array looks like: a = [[1, 2, 3], ['a', 'b', 'c'], ['foo', 'bar', 'baz']] And you just want to print it like: 1 2 3 a b c foo bar baz You could do that with list comprehensions via: print("\n".join([' '.join([str(i) for i in row]) for row in a])) Unpacking the above a bit. This converts every element to a string (otherwise we'll get errors when we try to join the elements): [[str(i) for i in row] for row in a] Wrapping the first list comprehension with a join combines the elements into strings: [' '.join([str(i) for i in row]) for row in a] # =&gt; ['1 2 3', 'a b c', 'foo bar baz'] Now we just combine those into a string delimited by newlines: "\n".join([' '.join([str(i) for i in row]) for row in a]) and print the results. This has the basically the same results as if you did: for row in a: for elem in row: print(elem, end=' ') print("") 
&gt; SymEngine Is this a SymPy project? Or is it a replacement? Or something in between? The nice thing about SymPy is that it is pure python. But that also means it can be slow.
These are my questions for your friend: What are your favorite resources that helped you learn Python? At what point did you feel comfortable enough with your skill level where you could support yourself during a job interview? I'm currently a GIS major but my program does not teach Python programming (or not much of any programming at all, outside of some basic HTML/CSS). I have been trying to self-teach but keep running into walls. I think my problem is that there is soooo much to learn that I get lost and end up making little to no progress. 
Seems the most interesting data isn’t available: a public list of what data they have. Makes the entire thing border line useless. 
Care to explain? I am very curious.
Thanks a lot. I just learned Python, and i was completing a task. That's why i should use the list comprehensions 
very flaskey
First, this really belongs in /r/learnpython Second, what do you mean by two-dimensional array. Python does not really have multi-dimensional arrays. It has lists of list. If this is the case, what is it you want to print? Even a simple example of input/output would be useful! Or, are you using NumPy? Then there is the array class. But you need to be more specific. Also, using a list comprehension as a 1-line `for` loop is sloppy! Use it when you want a list back! But just in case, to expand on other answers, you could do: [ print(' '.join( '{:+10.4g}'.format(col) for col in row)) for row in anArray] (in my testing, if on 2.7, you need `from __future__ import print_function`)
Hey folks, I wanted to share a small library that I made after starting a new job. I didn't want to look for the rules everytime I had to commit or memorize them, so I created this tool, that allows you to create your own commiting rules, and also you can specify which rule does your project use in the setup.cfg or in a .cz file. So potentially you could have different rules across projects and never remember them (if you let your teams decide how to commit for example) I would like to hear some feedback! Cheers!
I decided to use my new coding skills to implement a business idea. 💡 
Mathmatica can solve some seriously nasty integrals. We almost exclusively use Python at my company, but also a tiny bit of C++. We just bought Mathmatica because it works those problems that we can't use sympy for. It's the same reason we pay for Matlab (the controls toolbox).
The (new) official documentation on this: https://packaging.python.org/
I have a question about tools like Apache, how much programming do you have to know to use them. Would you say you could do a similar job had you only learned about the tool and not programming in Python as a whole? I’m not asking from a job hunt perspective, more like a research side where I need programming to solve complex math and optimization problems using such tools.
I graduated with a CS degree but didn't use it for 9 years during which time I learned Python. Then I got a job programming. I think it helped that I could also point at my degree, but it's also pretty common to see people get hired out of bootcamps and whatnot. 
I taught myself Python and currently have a full-time Python job. However, I did use Python extensively during my PhD, so I had already been coding Python for 5-6 years before I started using it "professionally", so I'm not sure it counts. I also know someone who taught himself Python and got a job, though he also attended a bootcamp between learning Python and getting the job.
Side project, one of its finality is to provide an optional replacement of the sympy core, with the same api and faster than any other alternative. 
pretty sure `attrs` already supports this syntax. I just don't see the problem (especially if they're getting buy-in from the `attrs` devs so they don't repeat any mistakes of the past). - For anything prior to 3.6: use `attrs` until either the majority of people are using 3.6+ and people stop updating `attrs`. - For anything 3.6+: dataclasses are available by default, attrs still has more features, use what you want. I'd honestly probably be happy if for 3.6+, `attrs` just was a facade on top of dataclasses, adding features and/or making a nicer interface a la urllib vs requests or whatever else
Same thing in doing right now
I would also be happy if post 3.6 attrs was an extension of dataclasses, but that doesn't seem to be the objective, and I am not sure how that would work. Dataclasses is missing features in attrs and has no plans to implement them. Attrs could potentially delegate some basic functionality to dataclasses and build off of it, but that still leaves you with the key import issues. Anyone building an app which might support 3.5 and 3.6 would have to use attrs, even if they only want the more basic functionality of dataclasses. A plan which involved splitting minimal functionality out of attrs and then backporting it to previous versions would make more sense to me. Ultimately I expect one of these two projects to wither on the vine. Either people need support for many versions and ignore dataclasses, or they write only for the future and assume that attrs isn't available.
How is that different from an ipdb breakpoint?
How in the world did you find a remote junior programming job? Am I just not looking in the right places? Because I would kill for any kind of programming job whatsoever, let alone a remote one.
Great article, /u/dbader . I am a bit curious about what you (and /r/Python) thinks of this warning from the `click` docs though... &gt; Click supports Python 3, but like all other command line utility libraries, it suffers from the Unicode text model in Python 3. All examples in the documentation were written so that they could run on both Python 2.x and Python 3.3 or higher. &gt; At the moment, it is strongly recommended is to use Python 2 for Click utilities unless Python 3 is a hard requirement. * http://click.pocoo.org/5/python3/#python-3-support 
Seemed a bit unfair to dismiss argparse with a complicated example, then explain click with a simple example that would require the same amount of code in both libraries. I reckon it's just a matter of whether you like to work with decorators (click) or not (argparse).
You could call the file 'weather' and then use this: #!/usr/bin/env python As the first line. Then you need to make sure the script file is executable (i.e., set `chmod uga+x weather`)
Yeah, I'm also unconvinced that this is *better* than argparse. Certainly it's a different way to do things and it's good for people to know that there are different styles you could use to specify a CLI. But the post claims that's it's better.
Dude. I *refuse* to get into a discussion about which offers better semantics, data classes or namedtuple. Please stop trying to make this into a discussion about the relative merits of these two different implementations. It's completely irrelevant which one is better. It's a side show. The one and only relevant thing is this: Mutable and immutable "arrays" have the same API. The same should hold true for mutable and immutable data classes. Making them have *completely* different syntax and *completely* different features is a *terrible* design choice.
iPython &gt;&gt;&gt;&gt;&gt;&gt; python (read: much greater than) for interactive work.
There is also [Sage](http://www.sagemath.org/), which uses a ton of Python and non-Python software to provide a mathematical environment. It's not quite Python, more of a Python-based language, but I've found it useful at times when I wanted something better suited to rapid exploration rather than production-level code.
I agree with that. I just don’t think namedtuple is good in any way :P It’s clearly different from normal mutable classes (which are a clear super majority) so they shouldn’t be used as a model. That’s all I mean. A @frozen class decorator in the standard lib would be the right way to go. 
This turned into a wall of text that may very well be considered a ramble and not even entirely relevant... but... here's my experience/opinion: If you've demonstrated you understand solid programming concepts in almost any language (be it a via a degree or work experience), **switching** languages isn't really that big of a deal and employers generally see it as a good thing as long as you can speak intelligently in an interview. It's almost as if there's a trust between languages. You know X and can speak well conceptually about programming, so it isn't a stretch for me to assume you either know Y or can pick it up fast enough to not be a problem. There's always a learning the ropes phase anyway right? Obviously it's out the window if they're working on something super specific that doesn't relate well to your skills or something like that. Someone that has no degree or programming work experience that learns Python (or any language) is going to be scrutinized pretty heavily going into their first job. I wouldn't expect to land a "good" job right out the gate, but someone would probably take a chance on your in an entry level position if you can talk the talk and/or show a strong personal portfolio (Github/side projects/hobbies/etc). Once you get your foot in the door, sky is the limit if you can perform. The biggest problem with "self taught", and again this is my experience, is bad habits. Poor documentation and not understanding why documentation is important, especially within a team, is a big one. Lack of understanding of common workflows, source control, etc. is another big one. When this is obvious your character comes into play a lot more than anything. Can you take criticism well? If a senior dev outlines **how** you should be doing things how are you going to take it? Will you see it as a learning opportunity or close your ears and continue to do things "your way" because it's all you understand? Most development teams are all about learning, and in some way or another teaching. Teams and employers have very varying levels of how far this goes though, so finding the right job is just as important as being the right person.
I did! I started learning python on/of again in the summer of 2015. Early 2017 I began learning Django as well. That summer I felt confident enough to list it as a skill on my linkedin page and within a week a recruiter called me. I went to couple of job interviews and landed a job at a really nice place. I definitely felt I was in over my head at first, but by now I am confident in my abilities and I have learned a lot in the past few months. 
 In[2]: test = """\ ...: 'Rkaa', 8.4, 8.5, 7.7, 7.7 ...: 'Tenn', 9.0, 7.5, 9.4, 9.4 ...: 'Isvv', 8.1, 7.6, 6.6, 6.6 ...: 'Sxpp', 6.1, 7.7, 8.8, 8.3, 8.3 ...: 'Kdtll', 7.9, 9.7, 6.0, 8.9, 9.2, 9.2 ...: 'Iktt', 7.2, 7.6, 6.9, 8.6, 8.6 ...: 'Fzmm', 7.5, 8.8, 9.6, 6.4, 6.4""" In[3]: from statistics import mean In[4]: for line in test.split('\n'): ...: name, *scores = line.split(', ') ...: avg = mean(float(score) for score in scores) ...: print(f"{name[1:-1]}: {' '.join(scores)} Avg= {avg:.2f}") ...: Rkaa: 8.4 8.5 7.7 7.7 Avg= 8.07 Tenn: 9.0 7.5 9.4 9.4 Avg= 8.82 Isvv: 8.1 7.6 6.6 6.6 Avg= 7.22 Sxpp: 6.1 7.7 8.8 8.3 8.3 Avg= 7.84 Kdtll: 7.9 9.7 6.0 8.9 9.2 9.2 Avg= 8.48 Iktt: 7.2 7.6 6.9 8.6 8.6 Avg= 7.78 Fzmm: 7.5 8.8 9.6 6.4 6.4 Avg= 7.74
Sounds like a good plan. Especially if @frozen could be applied to any class to make the object read-only after it's been fully constructed.
Now what? Automated sorting my Outlook inbox mail to appropriate folders using python win32. Saved me about 1 hours work each day. Im in Zero inbox mode now. What do i do with my free time??
I became impatient with studying relentlessly and feeling like I'd never be ready for a real job so I said fuck it, scoured the internet for remote python jobs and remote django jobs, and sent an email to every single company I found that was interested in, regardless of the experience level, job posting date, required skills/languages, whatever. I figured if the needed a programmer at some point they might need one now, and if the didn't want a junior programmer before I might be able to convince them to invest in me if I could swing a phone interview. With this strategy it only took me about 3 weeks from when I started applying to land the job. This website, specifically, is where I found my company: https://djangogigs.com/gigs/remote/ 
Time to focus on Python. With Java skills, Python entry is lot smoother since you already know basics of Python. Go all in, can’t guarantee remote job but Python jobs are plenty - at least in the west coast.
Literally what I'm going to start doing from now on. I know I have the passion and drive, hell even the experience for it. I'm just in a bad location with no technical jobs in my area.
Was hired out of college. Main task was to convert Perl, bash scripts to Python and it took me 6 months to understand the product completely given that there was a knowledge transfer of 3 days which went over my head! Never used Python either. Took me a while. It was a lot of fun converting, redoing in Python. Then MS stack sucked me in. I deal with C# and SQL Server, Data historians right now. 
Attrs doesn't support typing, which for me is a deal breaker
system cron is the easiest. celery beats is reliable.
"But, I confidently told the manager in the phone interview that, although I was new, I was absolutely positive that I could figure it out quickly and be an asset to the company." I interview a lot and everybody tells me that line. They probably just liked you as a person. 
Django only allows one website. You are designing a full on MVC web site. It works for that. It is hard to change choices made for you, but if you go along with it everything works. Instead of integrating many working pieces, Django just wrote their own for almost everything. This has good and bad. Flask allows you to more easily integrate various functionality in a site as separate applications. This allows you to have a smaller functionality for each piece. Also Blueprints allows reuse and organization. To replace the MVC functionality of Django in Flask would take some work. But there are great packages made to work for Flask when the full MVC setup is not needed. My biggest annoyance of Flask currently is SQLAlchemy integration that allows us of models in other code. The design of Flask-SQLAlchemy has some issues that are almost fixed. However, Django doesn't really give you a choice, so there is that. 
Try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
All those filetypes have specific bytes at the start ("magic numbers") and a defined length. Python files are just text, there is no way to determine what bytes are part of .py files vs. not. If you remember something specific about your files then you could write a short python script to search yourself. For instance, if you know that all your files started with `#!/usr/bin/env python3` then you could search for that. You would still have to find the end of the file though, probably manually. 
Pick the project before the language.
This sub has barely any relevant content ever. Splitting off another subreddit doesn't make sense
Quite possibly. Ive never interviewed anyone in my life, but in my experience confidence and a desire to grow goes a long way in an interview. Maybe I'm just a likeable guy and that advice is horrible, but I highly doubt if I'd approached it with 'uh I dunno, maybe I can do it. I mean, I've never unit tested an app in my life so it's hard to say....' I would have gotten very far.
What is the u for in u'string' if i may ask.
If you have run the code you should have pyc files on your system. These can be converted back to py files with [uncompyle6](https://pypi.python.org/pypi/uncompyle6). I know this for a fact as I had to do it myself :-)
If you like click, check out [Docopt](https://github.com/docopt/docopt)! It allows you to design your usage text, and then parses your flags out from there.
Im working with Python for a short time (almost 2 years or so) and i have not worked with Django so far, but i have developed and maintained several microservices using Flask with some extensions, and im very happy with the result, sure, theres always room for improvement, but using microservices and something like a PaaS helped our company a lot.
[Django Rest Framework](http://www.django-rest-framework.org/)
Yes. I taught it to myself during college, and nearly every job I've had since then has mostly used Python.
You picked a very good time to try. With unemployment this low now's the perfect time to look for a job. 
Next time, remember to backup and use source control if you’re writing code yourself. Don’t lose files again :)
Awesome. Did not see they had an API. Thanks! 
Mind if I ask what you couldn't do with Outlook rules?
I should have been more specific in my question, but it was more, can this have a legal stand, which from u/flipperdeflip and u/Krakob probably not. 
Panadazzzzzzz
Good luck! With patience and persistence landing a job is inevitable.
I've been using click with python3 (&gt; 3.3) for a number of cli tools without any issues. Maybe others have come across problems who can chime in. I did have one esoteric problem with executing a cli in python3 within an org-mode SRC block, which was fixed by explicitly setting the lang: #+BEGIN_SRC sh export LC_ALL=en_US.UTF-8 # avoids a click error and program crash mycli --help #+END_SRC
But pandas doesn't support metadata linked to your dataframe. I still often use classes: class Analysis: def __init__(self, name, df): self.name = name self.df = df 
ipdb ======= iPython
What fails with task scheduler? Can you run the script via a console session? Should be the same
Just want to say, thank you for this inspirational story! 
You're missing the point where dataclass is also optional and you don't have to use. If you prefer attrs, keep using it. No one is forcing you to use type hints. You're acting like because the people who will use it got something then you should too. 
argparse is probably the best built-in CLI library I've ever used for any language. There's always contrived examples that make it fail, and the auto-generated help page doesn't always look like you want it to, but it *works*, darnit.
Yes. I've been programming as a hobby since I was a child, but found Python in my mid-twenties. Never did anything serious. Switched career priorities around age 30, took a CS degree (no Python there), taught myself Python properly through freelance work using Django, because that's what I wanted to work with. Landed a job with a small consultancy firm a year later. Now 37 and CTO, but I write Python (and JS) nearly all day, every day.
I'm not sure. No error code or anything as if it hasn't been triggered. I set it to run every night at 4am with highest authorization because obviously I wouldn't be awake to run. I think I may be setting up the program to run incorrectly. What's proper syntax for setting script/program and adding arguments? I had path to my python.exe as program and path to script as argument 
 bowl.add(Salt("2 tsp")) bowl.add(Pepper("1 tsp")) while not bowl.combined(): stir() Something like that? Or did you mean a real, runnable program? 
Blog posts are opinion by their nature and the author obviously likes click better. Its up to the reader to agree or not. Personally I think argparse wins because it comes in the standard library and works pretty well. You have to be a hella lot better than what the standard library provides to get me to add a dependency to my project.
Yes! Something like that would be awesome. 
I'm pretty sure you can't do this in `install_requires`. The dependencies there are supposed to be abstract and give only a package name and version. For concrete requirements that specify options like this, you can specify the option in a `requirements.txt` file. However, `pip install` won't automatically look at this file when installing. My question is, why do you need this option for the installation to work? What it does is tell pip not to install the C extensions, making the library slower. That shouldn't make the installation fail, I don't think.
Your programmed a lightbulb? The brilliance !!! I salute you!
Sure. It’s super super raw in terms of build, could have a lot more efficiency and structure, but it works for me. https://github.com/psuanm5030/Yahoo_API_Check_Transactions
Unfortunately it does fail unless the pure option is included (unless you have the c bindings installed already). Is there a way to get setup.py to look st the requirements file? Or some other option?
This. All the work is done for you, it's standardized across languages, and it Just Works™
Sounds like a fantastic idea. Especially if you printed it out with syntax highlighting. IIRC Notepad++ allows you to save code in RTF so that the highlighting is preserved, and then you can spruce it up in a real word processor. Step one I suppose is to gather the recipes and turn them into code, which ma be a challenge if you don't know much Python. Give it a shot and if you want syntax or style help post the code here or in /r/learnpython . 
i updated my configs with everything listed here ... no luck though. still receiving 'csrf_token ['The CSRF token is missing.']' when attempting to sign in.
&gt; Unfortunately it does fail unless the pure option is included (unless you have the c bindings installed already). This sounds like there could be some problem with your system. If I run `pip install dulwich` on my computer it installs without any problems, inside a clean virtualenv. What kind of error message are you getting? &gt; Is there a way to get setup.py to look st the requirements file? Or some other option? Not really, no. Installing a python package should always just work without extra options.
Was the web server running when you updated, and if so after you updated did you restart the web server?
Alternatively, inside the form above your fields add this: {{ form.csrf_token }}} Both of the solutions, exempting csrf and manually adding it, seem to work for me 
There are few easy ways to achieve this without the need of external modules. *Don't forget double quotes for paths with spaces.* Case - 1: You want to play an audio file but need not stop it before it ends import os os.system('C:\\Music\\Audio.mp3') # the above launches default audio player for the given file # to use specific audio player for the given file (windows media player in my case) os.system('"C:\\Program Files (x86)\\Windows Media Player\\wmplayer.exe" C:\\Music\\Audio.mp3') Case - 2: You also want to be able to stop playing before it ends import subprocess p = subprocess.Popen('"C:\\Program Files (x86)\\Windows Media Player\\wmplayer.exe" C:\\Music\\Audio.mp3') # the above starts playing the given file with given player # to kill it at a later point of time, use p.kill() # or p.terminate()
yep, def made sure to restart the web server after making the changes.
But there's no data you'd be accessing (importantly, any data fields are API-private: changing what fields are in the class is not a visible change, and can be done in a point release without telling users, as long as the behavior of the class remains the same), so I'm not sure what sort of data class it would be. In a language where data classes where the default, yes, you wouldn't need to invent a separate type of class for this. But in Python, you can just use a normal class.
That example is pretty close to what's on the actual argparse documentation. Not like he did anything crazy, just making use of the various parameters you can feed argparse. 
ah ok now we're getting somewhere ... i kept all of my changes in place from the initial approach you suggested &amp; now recently added '{{ form.csrf_token }}}' above the form fields ... now i'm getting the SQLite DB error 'cannot open database' 
Yes. Taught myself Python last summer and then somehow landed an internship. Worked at that internship which became a full-time job after about 4 months. About 5 months later I pivoted out of that job and got a big pay raise and a better job and that’s where I am at now. I started wanting to be a Data Scientist but as time went on Data Engineering became more intriguing to me so that’s what I deal with primarily. I busted my ass for my first job I would work at home at night and on the weekends to get shit done behind the scenes because I was inexperienced. After about a year I can say I am knowledgeable in Python, AWS, and Bash. Depends how dedicated and serious you are to this profession. I personally feel like I have finally found something I am good at and enjoy quite a lot. To give some context I started learning coding at 26 and am 27 now, all of this in NYC which is where I am based.
Just tried making a clean venv and pip install dulwich. This is the tail of the output: creating build\lib.win-amd64-3.6\dulwich\tests\data\trees\70 copying dulwich\tests\data\trees\70\c190eb48fa8bbb50ddc692a17b44cb781af7f6 -&gt; build\lib.win-amd64-3.6\dulwich\tests\data\trees\70 running build_ext building 'dulwich._objects' extension error: Microsoft Visual C++ 14.0 is required. Get it with "Microsoft Visual C++ Build Tools": http://landinghub.visualstudio.com/visual-cpp-build-tools ---------------------------------------- Command "c:\users\foo\desktop\temp\test\scripts\python.exe -u -c "import setuptools, tokenize;__file__='C:\\Users\\foo\\AppData\\Local\\Temp\\pip-build-ltw8a2sq\\dulwich\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f. close();exec(compile(code, __file__, 'exec'))" install --record C:\Users\foo\AppData\Local\Temp\pip-g1lk8v9p-record\install-record.txt --single-version-externally-managed --compile --install-headers c:\users\foo\desktop\temp\test\include\site\python3.6\dulwich" f ailed with error code 1 in C:\Users\foo\AppData\Local\Temp\pip-build-ltw8a2sq\dulwich\
if you are getting it to work on your work station, could you please share the code you're using on github?
I received that error when the path to the database file was incorrect. You have this: 'sqlite:////mnt/C:/flask/Beatscrape.db' If you're using windows, try removed 'mnt/', and double check that the entire path is correct
That's look like a more complicated version of Python Fire: https://github.com/google/python-fire
yes i actually did this to make it 'sqlite:///C:/flask/Beatscrape.db', the direct path of where the DB lives on my machine ... no luck ... the '/mnt' came from the tutorial i was using as reference.
If he spent a few months teaching himself Python, he probably posted all the projects he used to teach himself. Plus, as he posted it on Github, all his commits would provide an insight into his thought processes and programming style as the projects developed.
Hmm yes, building C extensions is going to require a C compiler. Unfortunately windows doesn't always come with one installed. There is not much you can do about this. At least the error message tells your users how to resolve the issue. Best you can do is document this requirement in your package README.
I would abandon Java (and the C's) if you are struggling to find jobs. There's a lot of large, established companies/corporations using it, but the hiring structure in most of these places is archaic and involves getting past HR before you even get to talk to someone who gives a monkeys about your actual skills. They'd rather hire someone in a certain demographic who tick a bunch of boxes than someone who can actually do the job. Python is where it's at if you are looking for a programming position, especially if you want a remote one. It's such an all encompassing language that you'll find tiny companies across the globe who just want ANYONE who can fix or maintain their codebase who is reliable, has the skills, and can communicate directly to stakeholders.
I ended up doing exactly this. 
How much Python do you *need* to know to simply use it: None at all because they're totally different tools for totally different jobs. Configuring a web server (like Apache) has extremely little to do with knowledge of Python, it's more related to Linux Systems Administration/Operations.
Relevant: Chef is a stack-based language where programs look like cooking recipes. Chef was designed by David Morgan-Mar in 2002. https://esolangs.org/wiki/Chef 
I dont really have it working, I can connect to the db but then I get an operation error because I havent set up any db tables for the users yet. I'm hesitant to link my github to my reddit account, still havent decided to commit to doing that yet...let me see if I can find another way to share it
out of curiosity, try changing that string to: 'sqlite:////C:\\flask\\Beatscrape.db'
Hmm. Is there some way to execute some python code from within the setup.py? Maybe I can just run a subprocess that pip installs with that flag? Unfortunately I can't just document this somewhere, it's required that this just works.
Not too familiar with PEP's but couldn't find (if it mentions it) if this will be a mostly C or native Python implementation. Working on implementing a minor feature to attr which is somewhat hamstruck by the complexity required to autogenerate classes. If it is a C implementation, that might cut down contributions from the none C-savy people.
It's the project has recently been relocated to https://github.com/pypa/pipenv, don't think you're going to get much more official than that.
sounds good! no pressure at all.
Yup! Long time ago now. I was working in market research as a field representative for Nielsen. Taught myself python on codeacademy. Now I work in data science and use lots of different languages and tools.
me too only not an accountant.. best of luck
Interesting stories here, I was pushing 30 when I became a professional programmer and thought I got into it too old so it's refreshing to hear I'm not the only one that got into it late!
website scrapper
I just ripped it out of a project to get rid of dependency issues. Replaced it with argparse everyone is happy. 
Yes.
Love Python 3, but wish there was something as good as `yarn` for Node or `cargo` for Rust in the ecosystem. Python community is pretty great, so I wouldn't be surprised if we get there eventually, but it is frustrating juggling all these tools that are almost-but-not-quite orthogonal and have mile-long lists of caveats. 
This doesn't work on Windows however.
Yet it all seems so much easier than wrestling with Java.
I'd also like to add that learning the basics of a language like classes, arrays, loops, ifs, and methods does NOT make you an effective programmer with marketable skills. Sure, you know the syntax, but that's only a tiny part of what it means to be a software developer. The most effective proof that you have marketable skills (in order of descending value) is: 1. work experience 2. formal education 3. personal projects
Puppet modules/Ansible Playbooks/Chef recipes to handle all the venvs and installations. Sit back and relax.
Or even Docker containers. Can't forget about those
Have you tried pipenv, yet?
Just learned about it, thanks! I might adopt this in my own projects!
Ah yeah. If you want it to be cross-platform, then making a package as /u/Eryole indicated is probably best.
Here are his replies to each question - &gt; What are your favorite resources that helped you learn Python? The Python docs are very good. StackOverflow obviously. To be honest most things I just Google and find some blog post or SO post that has a similar question and usually an answer. Sometimes it isn't *quite* the same problem but you soon work out how to "bodge" a solution together from a few solutions you find. &gt; At what point did you feel comfortable enough with your skill level where you could support yourself during a job interview? I'm not really sure to be honest. It wasn't like one day I just woke up and was like "oh wow I'm a programmer!" and start applying for jobs. I remember *almost* applying for many, many jobs and cancelling on the last "submit" button as I didn't feel good enough. At some point I just hit submit though and never heard back! Haha but seriously I probably wasted a lot of time not applying sooner. Once I could think of an idea, albeit a very simple one, and then turn that idea into a shitty program or webapp then I had a bit more confidence I could tackle bigger problems. &gt; I'm currently a GIS major but my program does not teach Python programming (or not much of any programming at all, outside of some basic HTML/CSS). I have been trying to self-teach but keep running into walls. I think my problem is that there is soooo much to learn that I get lost and end up making little to no progress. Walls are all over the place when learning to program. They are a royal pain in the ass. There is no "trick" to breaking down a wall. Some will come easy and some will make you want to quit and go back to your old life. All I can say is take a break, maybe for an hour maybe for a day or more. Learn something else. Maybe practice your Git skills (seriously important! DO NOT skip learning Git!) rather than programming for the rest of the day? Or move on to another Python subject? I still hit walls all the time now. I am just so used to it now it doesn't really phase me so much. I realised that I *can* get over all the walls it just takes time. Ask on SO or a Python Slack/Discord/IRC channel. Post here. Whatever works for you I think. Just try not to let it get you down. Every programmer, even the ones you think are god-like, hit walls for new things even after years of experience. Now if you want to be *really* frustrated just wait until you hit a wall for something you already learnt inside-out months/years ago but have no memory of ever learning it only to find a post to your exact problem on SO written by *you* and then answered *by you* haha. 
No probs :)
I got a job writing python before I learned it... That's interview skills. 
Pretty much everything from Hello, World! and on wards. As long as it isn't totally awful it is better to have more content than less when you don't have a dozen amazing projects with 1000+ stars on each repo ;)
Good luck!
i thought the same thing. argparse was a blessing when i was first introduced and comes with the standard library
What are you actually trying to do here? If you're distributing code to non-technical users then you shouldn't ask them to run a pip command; you should give them a bundle. If you're distributing to other python developers then it's perfectly reasonable to expect them to set up a C compiler or at least to read your documentation. If you're trying to automate deployment of your code then you should build wheels for your dependencies and install those. At the very least, you should make some wheels of the pure version of dulwich and upload them to pypi so you can depend on them. That would be more reasonable than whatever it is you're trying to do with your `setup.py`.
It’s currently my favorite CLI lib. It works better/more intuitively than most anything I’ve used in other languages, *and* it’s built in (my python is usually 100-400 LOC scripts, so minimizing libs is a plus). If you have examples of better third-party ones for other languages, please share. I’m always on the lookout. 
I started out doing tech support in a call center. I taught myself python, quickly moved into managing said callcenter with my programming automating various reports. From there I got a job doing monitoring scripting, and now devops. Lots of doors open when you can program. 
Can you detail what exactly you are doing and HOW it could be simpler?
Lololol! Yep, now I just lay around all day basking in the light. =p
Good luck! 
Thanks!
I can't really go into much detail about the exact use case, but i annoyingly don't have a choice. How would I create a wheel out of the pure version of dulwich? Is it also possible to specify a local wheel in setup.py, or does it HAVE to be on PyPi/some repo?
Jesus... I've been with the same company for two years and only recently got a raise to $30... I can't even get replies to my job applications, though. 
I've got a bunch of data analysis scripts that I import and use with Jupyter, and I have some standalone test scripts that also use them. I share other scripts to/from teammates who have various other random environment settings. I can't really force the testing team to install docker or something just to run my little script.
You can install a precompiled wheel instead, it's available here: https://www.lfd.uci.edu/~gohlke/pythonlibs/#dulwich
How do I specify that as a dependency?
https://www.youtube.com/watch?v=TWWwcGvJ_u0 - Fixed link.
Everyone loves scrapy, but I've never had a good experience trying to use it, especially for js content.... I always end up rolling my own solution with phantomjs
The same way that you would create a wheel of any other package: `python setup.py bdist_wheel`. You will need the wheel package installed. The thing that we're trying to tell you here is that `setup.py` should specify _what_ your dependencies are, it shouldn't specify _how_ to install them. You're trying to put that information in the wrong place. The _how to install your dependencies_ information should be somewhere else. Exactly where depends on exactly what you're doing. It may be in `requirements.txt`, a Pipfile, a Dockerfile, `tox.ini` (or other builder scripts), just specified as text in your documentation, or provided as part of a bundle. You can install a wheel locally, but not from `setup.py`. https://caremad.io/posts/2013/07/setup-vs-requirement/
Finally a post that makes sense to me! I don't understand why everyone's talking about coding here.
Yes. What you describe roughly matches just about every socket / pipe / stream processing system. Questions should be posted to /r/learnpython 
LMAO Somebody got it
I taught myself python while in school for animation, got a super entry-level job, and later got a job at one of the big tech companies in silicon valley doing mostly python coding.
thanks very much
I understand how``setup.py`` is supposed to be used, but i'm trying to figure out if there's a way to hack around it for my use case. My specific requirements are that I can get my package on PyPi such that a user can run the exact statement ``pip install my_package``, and get a usable form of dulwich installed, without any other steps. From what I can tell, using ``requirements.txt`` or any of those other files wont' actually work for this case. It sounds like uploading the pure version to PyPi is the best/only way to go.
Maybe with [dependency_links](http://python-packaging.readthedocs.io/en/latest/dependencies.html#packages-not-on-pypi)? I'm not sure.
For sure. Though I had a CS degree already. But I did get my first real programming job doing Python work, shortly after learning it on my own. 
Install the `see` package. Its a user friendly dir on steroids.
Thank you. Sorry, I didn't realize this was the wrong place.
Or turn on Time Machine and never worry about remembering again. But _also_ commit and push changes regularly. 
So this is going to be a bit of a difficult question to answer because, well, kind..of? I was fortunate enough that my professors at my undergrad university were brilliant individuals who trained me extremely well in the fields of math and computer science. While they never directly "taught" me python, they taught me core computer science and math to, basically, figure it out, like any other math or computer science concept/problem on the fly. Essentially, they taught me to think through things. Using python as a tool just became one of the things to think through. 
Trying! :) Will get back to you in a year !RemindMe 1 year
I will be messaging you on [**2018-12-07 05:19:37 UTC**](http://www.wolframalpha.com/input/?i=2018-12-07 05:19:37 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/7hzpzu/has_anyone_here_gotten_a_job_after_teaching/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/7hzpzu/has_anyone_here_gotten_a_job_after_teaching/]%0A%0ARemindMe! 1 year) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
`pip install my_package` will work if your users have a C compiler set up. Since you're distributing with pip this is a perfectly reasonable thing to expect of them.
I largely taught myself MATLAB in an academic situation, then after graduating taught myself python for a few months, then got a job writing java.
Granted, but the author didn't show us what re-implementing the argparse example would look like with click. Which would have been an apples-to-apples implementation comparison.
Perl6 MAIN handling is the only better I can think of.
Two things here ... 1. The level of anger you have is over the top and is part of the problem not a symptom of the problem 2. Most of what you want to do isn't really difficult at all given some base level knowledge. The problem here isn't that the tools are so terrible but that you have a terrible understanding of the tools. Now it is common for non-programmers to be a little frustrated trying to deal with packages and building but that is a fixable issue. What isn't fixable with tutoring is your attitude toward it Anger and resentment at the tools that you were using put up a wall that stops you from doing good work and stops you from learning. You have to learn to deal with frustration when doing software. We are not like other engineering kinds of professions. An architect gets to go to the bridge he's designing and it's still there that day and it still over water and still made of all the same things that he suspects it should be made of. And software you may show up in the bridge is gone and what used to be the water is just a desert. And it's all made out of Jell-O because why the f*** not. You simply have to learn to exist in an environment that is this thing dynamic and confusing and frustrating. If you can't solve this problem you will never be able to teach yourself to be better at software than you are right now.
I'm not a fan. The decorators quickly become an unwieldy mess, and I'd usually rather avoid pulling in all its dependencies.
Hi. I did not know python very well, was not in a CS degree, but I managed to convince the team to adopt python and 7 years later it's the main language with about 90% of new code in Python. I know python very well now. I consider myself completely self taught in Python. 
I understand and agree, but my hands are tied by requirements :(
You may need to develop a package that they can install or they're going to have to create a virtual environment like everybody else and install stuff that's listed in your requirements.txt o make it work. Some of this burden is on you but some of it is on them.
Yes, got a job at a startup and now work at one the big 6. Had to interview in python at the big 6 job. Mainly using Java now and python for proof of concept / prototyping. Taught myself Java as well. No CS or any college education. Books, Coursera, work experience and spite are what worked for me.
What OS?
How'd u swing the internship being out of school (I assume)
`cli.click.py`: #!/usr/bin/env python3 # cli.py import click from owm import current_weather @click.command() @click.argument('location') @click.option( '--api-key', '-a', help='your API key for the OpenWeatherMap API' ) def main(location): """ A little weather tool that shows you the current weather in a LOCATION of your choice. Provide the city name and optionally a two-digit country code. Here are two examples: 1. London,UK 2. Canmore You need a valid API key from OpenWeatherMap for the tool to work. You can sign up for a free account at https://openweathermap.org/appid. """ weather = current_weather(location, api_key) print(f"The weather in {location} right now: {weather}.") if __name__ == "__main__": main() `cli.plumbum.py`: #!/usr/bin/env python3 # cli.py from plumbum.cli import Application, SwitchAttr from owm import current_weather class CLI(Application): """ A little weather tool that shows you the current weather in a LOCATION of your choice. Provide the city name and optionally a two-digit country code. Here are two examples: 1. London,UK 2. Canmore You need a valid API key from OpenWeatherMap for the tool to work. You can sign up for a free account at https://openweathermap.org/appid. """ api_key = SwitchAttr( ['a', 'api-key'], help='your API key for the OpenWeatherMap API' ) def main(self, location): weather = current_weather(location, self.api_key) print(f"The weather in {location} right now: {weather}.") if __name__ == "__main__": CLI.run() 
I needed a more dynamic solution, compared to outlook rules. If i used outlook rules, i would need to set up about 100 rules. My code finds the customer by looking for the domain name in the sender, recipient or message body. I have about 100 customers with about 5 contacts each. btw, can outlook rules scan a folder other than the inbox? I manually move my dealt with emails to a secondary folder, and only then they get sorted. in addition, i wanted to practice my python skills on a meaningful project. 
You're right, I should've pointed that out. OP can convert the audio files to a supported format to benefit from the performance value of mpg123 (or mpg321).
I didn't get a job immediately after learning Python, but Python was my 1st computer language and had a very strong influence on my design choices, favorite paradigms, and opinion about abstractions. It was also my gateway into computer science. Eventually I landed a internship and just recently I've accepted a nice offer to become a software engineer (doing game development). Python was not the main tool for any job I've had but I still use it far more than a lot of languages I know to do fun stuff.
Python 3 in general is broken in the ASCII C locale. 
This isn't a problem with Python per se, it's more of a problem of the historical compromises made in approaches to computing languages and their use coupled with the process maturity -- or lack thereof -- of your organization. If your org isn't yet capable of marshaling people into having a consistent execution environment, then even a 100% statically linked program with zero side effects and zero bugs wont save you, unless it also takes zero data and has zero configurability. People, given any opportunity, can break anything. There are lots of tools that exist to make this easier for your org -- puppet/chef/ansible are the obvious ones, but also docker and vagrant -- have it avail itself of those, because moving your org up the [Capability Maturity Model](https://www.itgovernance.co.uk/capability-maturity-model) scale is the only way to reliably reduce your rage at this stuff. Now I'm not saying Python is great here -- it's got a long history of choices that make it particularly hard to get right, though not as bad as JS by a country mile -- but once your org has at least the basics of a plan for consistency it becomes a lot easier. The tools you're complaining about are the low level building blocks do repeatability, but even they require *some* consistency.
Honestly, the change is difficult. Mathematica has incredible documentation, insanely powerful and versatile functions and is just the best of the best at what it does. The symbolic engine in particular is by far the best around. The pure integration between things is also phenomenal. That said, you'll accomplish 90% of what you did in Mathematica with python + numpy + scipy + matplotlib + scikit-learn. Some learning curve and you're going to have to deal with inferior (not poor just not as good) documentation and the fact that jot everything is one place. Python is a general purpose open source programming language as are the majority of the libraries you use. This gives a lot of usage freedom, and on top of that if it's not there it's easy enough to implement. Mathematica is general purpose but the licensing is very restrictive. Look at Jupyter. It's a notebook interface. The transition will take some learning, but should be doable. Just give yourself time to and maybe consider an into to python course. Sentdex has a nice intro to python, sk-learn, pandas, numpy and matplotlib. That should put you in the position to do everything you did considering that you never used Mathematica in a hardcore fashion. Eventually you'll do things you couldn't in Mathematica! 
Yes. I work as a developer after self teaching. Before this I worked in digital marketing where I was able to use my self taught Python to automate lots of digital marketing tasks. I now work mainly with Golang and Python. 
I had C and C++ at school. Taught myself python because it seemed like I might like it. Got my first job thanks to it. This was over 6 years ago. Although I wasn't really a programmer I used python almost daily there. Now I have a different job, but one I wouldn't get without the experience on the first one, so... tl;dr Yes, after I taught myself python, but I wouldn't say I taught myself programming, which is different.
What IDE is he using here?
I got a job as a computer science teacher after teaching myself from a MOOC. 
Me too! All I needed was to convince myself that I am actually not bad at it to the point where I knew that if you put me in front of any problem, I would eventually solve it.
I suggest not using django for microservices, as the whole django framework is tightly bound to the authentication's User model, so you cannot easily externalize the user management part into a separate service. And each microservice having its own replica of users can get very messy in no time. Also, the django framework absolutely requires a database, which forces you to use a database no matter what (even if the microservice doesn't need one. Eg. a file sharing microservice backed by s3, drive and dropbox). I suggest using something lighter such as Flask, Tornado or Pyramid where you can implement the authentication and authorization logic freely so that it doesn't hit a database each time. For authentication I suggest looking into JWT. Django's main purpose is not microservices, it is fast building of content centric web applications. Analyze the job, analyze the available tools for the job, choose the best tool for the job based on requirements.
Instead of 68k individual INSERT's build up a batch of VALUES and execute one query, like: INSERT INTO xyz VALUES ('a',1), ('b',2), ('c', 3) .. etc Python database driver has the `executemany`method to build this safely. You might need to chunk your 68k rows into smaller batches (see MSSQL limits somewhere). If that doesn't help enough I'd see if a transaction or delayed index stuff help, see Google/SO for general MSSQL bulk insert advice.
&gt; so you cannot easily externalize the user management part into a separate service Why not?
After some trials I think the answer is that the SyncManager will do the locking correctly, only extra problem is that when looking at the py-bt in gdb, I see the Syncmanager process is a lot of time in the state of "Waiting for the GIL". This was the reason I started using multiprocessing in the first place. Why would a Syncmanager process be waiting for the GIL, if there are no threads spawned for all that I know.
/r/learnpython 
So no consensus then. ffmpg gets mentioned a few times. Thanks everyone.
Mostly because most of the underlying things in django heavily uses the User model and queries based on the model. In order to extenalize it without braking other components and libraries, you have to basically rewrite the whole django.contrib.auth system to manage the User, Group, UserPermission, UserGroupPermission, etc models remotely using the authentication service. It is doable but it requires much more effort than it should. One possibility (I guess) would be using or customizing the RemoteUserBackend class ( https://docs.djangoproject.com/en/1.11/ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend ) but it still needs a database to keep the django User instances and each microservice will have the same user info replicated. Just imagine what happens when a user changes its name or email.
The whole developer community is basically self-taught. 
I taught myself programming in general via making roguelikes. I jumped languages several times but somewhere along the way there was a Python attempt that I abandoned because I messed something up badly. Fast forward a couple months, I spot a company looking for a junior programmer with Python. So to bring myself up to speed with Python, I used the /r/roguelikedev summer code-along and the libtcod+python tutorial. The folks at the company were impressed with the fact I made a working game as well as the fact that I could work with git. Fast forward another couple of months, learning Linux terminal and PostgreSQL. I haven't heard any complaints about my programming habits or skills so far. And I even noticed workmates picking up some of my ideas (using only parts of the string in a comparison to determine what we're working with; adding dated comments to especially crucial code parts overhauled recently, and generally commenting).
Depending on what your learning objectives are with this exercise, I might try the same with SQLAlchemy and see if you notice a speed difference. Not sure if it would be faster/slower, but it might be a quick way to optimize. https://www.sqlalchemy.org/
I taught myself both SQL And R on the job.. currently teaching myself Python on the job. Find having a desired problem to solve is really important and being tool agnostic. Use your free time at work to learn new stuff. Background is finance / psychology but now working in business intelligence and dabbling in machine learning 
[Git Pro link for the lazy](https://git-scm.com/book/en/v2) It's in PDF, Kindle, and Epub
I think it would be much better to follow the instructions in the click [documentation](http://click.pocoo.org/5/setuptools/) in order to create a real entry point for the script. It's easy and makes your code more portable!
Exactly. The example in the click [documentation](http://click.pocoo.org/5/setuptools/) is pretty clear too.
I've only ever used click to build CLIs before and love it. How do Docopt and Argparse differ? Should I try them out?
https://medium.com/@seashorepartners/how-web-scraping-using-multiple-libraries-in-python-95ac4e8669e1
another option is to just include the dulwich python code directly into your project as a package. That way you can remove it from `install_requires` altogether. Please note that distributing like this will likely come with licensing requirements. I don't know under what license dulwich is distributed, but you'll need to abide by them.
So at the time I was in my second to last semester of coursework for my Master’s in Economics and the teacher had us using STATA to solve homework problems and for projects. I asked her if using Python instead was ok, turns out it was. So when I went to the interview I had some Jupyter Notebooks to show off some of the coursework I did in Python. Nothing fancy but I sold myself well and talked with confidence so that helped. Where my technical skills lacked at the time I made up for it with soft skills.
You need to include the "if sume &gt; 21" blocks inside the "choose == take" blocks, not inside the "choose == check" blocks. Everytime you print "print ("You got the Card", c, "=", sume1)", then immediately after that, check if the new sum is above 21, and if it is, the player loses. 
I decided to do a career switch from sales to web development and started learning Django thanks to the Django Girls tutorial. I also completed a Python course from Rice University on Coursera. I built a website for a company using Django and also had some of the projects from the Cousera course on Github. I got a job as a web developer (the company used Django a lot) one year later. The main reason it took so long to get a job was not because of my skills but the fact that I was moving country and the visa/paper work took really long.
Oh no, thank you Buddy :O
May i ask why you are doing is in python? Mssql and excel are both ms products. Can’t you insert the table with the sql management studio? Also transact sql could be helpful if you need to have more than one file
as interesting as this looks, i'm having a hard time taking something seriously when the commit messages contain a mixture of non-letter symbols (of which the unicode table tells me it's a japanese stone statue), colon-delimited words interpreted as graphics by github as their logo, and colon-searated words that are so hip that not even github recognizes them yet (":bellhop:"). i hate to sound like a grumpy old fart, but did we really make such spectacles of ourselves when we were young? &lt;/rant&gt; thanks for assembling those examples, it's good to have some of how this can work in high-level languages.
I don't see how it's relevant if you're accessing the data?
Django's structure includes apps, which are "smaller pieces of functionality". You choose whether to have one bigger app or more apps with "smaller functionality for each piece". All you have to do is write "django-admin startapp &lt;name&gt;" and it is easier than working with Blueprints from the start. What do you mean by "replace MVC functionality"? What is "full MVC setup"?
Sure. I have joined my current team after few yers of pl/sql programming. Now developing test automation tools with python. Learning by myself time: 3 months (diveintopython + codeacademy + check.io).
Sure. I have joined my current team after few yers of pl/sql programming. Now developing test automation tools with python. Was studing python by myself for 3 months (diveintopython + codeacademy + check.io).
Sure. I have joined my current team after few years of PL/SQL programming. Now developing test automation tools with python. Was studing python by myself for 3 months (diveintopython + codeacademy + check.io).
Sure. I have joined my current team after few years of PL/SQL programming. Now developing test automation tools with python. Was studing python by myself for 3 months (diveintopython + codeacademy + check.io).
Yes, I currently work as a Python backend dev. I studied basic programming in high school and philosophy at University, then fatigue job, a callcenter job and a SQL-based job (not dba, not developer... just writing queries). I always had fun programming and I always been "the friend that can fix your computer", so during the previous two jobs I decided to get back into programming and started with Python. I landed this job 'cause my company was looking for a Python-dev there are few in Italy so I had my chance. 
&gt; I'm an accountant Is this a pattern?
&gt; and the long term impact of accepting it into the core is to kill attrs What a pile of complete drivel. Considering that it supports 2.7 and 3.4/5/6, unlike Data Classes, I suspect that it will be around for many years to come.
Virtualenv?
Anaconda
&gt; I would really like for someone to fork python You can try but you won't get very far as the Python Software Foundation owns all the legal stuff associated with the Python name, thank goodness. Hence the person who created Python 2.8 on github was very politely asked to rename it, and very politely did so.
`def turnOn("userInput"):` should be `def turnOn(userInput):`. Also, please post questions in /r/learnpython.
To piggyback this (sorry), a general way of thinking about this advice is: for skilled workers there are demands for *certain* skills. It benefits people looking for jobs to tailor their skills for those demands. In twenty years it might be the case that Python goes the way of Java, just as Java at one time replaced other languages. A decent general rule is to look at what tools start ups are using, as they often are the bleeding edge.
How are you provisioning your VM? Are you using a tool like Ansible, Puppet, or Chef?
Just meant as positive feedback: Try to follow the don't repeat yourself (DRY) philosophy. Look into for loops, while loops and functions to make your code more compact and avoiding to alter code on multiple places.
Jeah, i try it. Thanks Buddy :p
Not Python, but close enough. I used to be a librarian. Starting on my 41st birthday I taught myself Perl, and a year later I got a job as a programmer/analyst in a library. This is one route to a first programming job -- if you have a career as X, it's often possible to get a job as a programming X, even if "programmer" isn't in the job title. Then you're accumulating professional experience and more general programming jobs start to open up.
This is awesome! I graduated with an Accounting degree, got my CPA and worked at a big firm then a large pharma company in audit. I knew something was missing. About 5 years in, I started experimenting with data visualization (Tableau), then got into some courses learning python from EDX and Coursera before taking the leap to Udacity’s data analyst nanodegree. Best thing I ever did. The coursera course was the intro python with fundamentals and was perfect for a newb. The EdX course was more mathematical and robust - from MIT, I loved it. And the nanodegree was well-rounded and paced. I also mixed in a course on R from EDX called The Analytics Edge. AMAZING. So back to work. I managed to parlay some of my new passion and skills into a “audit analytics” role for a year and using that as a step stone into our enterprise analytics team. Overall, I am lucky to be doing something I am passionate about. Still, there is a stigma with resumes and I get “looked down upon” frequently for not having a CS degree. 
Backslash is used to encode escape characters (e.g. tab is encoded as "\t"), to actually have a backslash in a string you need to enter a double backslash. &gt;&gt;&gt; print("\\") \ Hence, to enter latex symbols in matplotlib you need to type a double backslash "$\\tau$". Also, /r/learnpython is a better place for questions.
Ah, thanks! I'll go to /r/learnpython!
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
JFYI, you are getting downvoted because you posted in the wrong subreddit. Use r/learnpython next time.
I don't care be downvoted because i already fixed it, the first comment helped me and finish. 
I've messed with https://pyscard.sourceforge.io/ once, but it is a very low-level and requires a lot of knowledge about the card internals. Also it pays to trawl the manufacturers website and docs for drivers and API info and see what standards it uses and search for that.
As a hiring manager someone having it on their resume isnt a slam dunk but it helps give me a sense of what tools they have in their toolbox. As the cloud comes in and teams need more broad skillsets it is good to show that you are diverse im knowledge. 
Thoughts on [poet](https://github.com/sdispater/poet)?
Although I am not in a full time job, I started to get freelance Python gigs (web scraping, code review and maintenance, basic Flask stuff) after studying Python for few months. Still learning and advancing to serious stuff like bots, full fledged Flask projects etc. I have read a few Python books, including Automate the Boring Stuff, and regularly use StackOverflow to resolve issues. Stressful but fun. 
That is wrong. Data classes have zero typing features over attrs.
You can write `x: int = 42` in attrs.
That is not valid syntax for anyone who installed python last year. 
Well at least you have the choice.
I'm not root at my office. I don't control what versions of python my company uses.
I’m not sure what you’re arguing about. You made a statement that could be read like attrs doesn’t offer type annotations – a misconception that flows through this whole thread – and I’ve corrected that. I’m not saying you should use it, I just said it’s there.
I don't know what your point is. I have no objection to attrs. My objection is to dataclasses. Attrs is doing the right thing, supporting 3.x while offering an optional 3.6 only syntax. I would say that almost any programmer who exercises that option and writes 3.6 only code today is probably making a mistake. 3.6 has just not been around long enough or widely accepted enough to say that you should be 3.5 incompatible, but eventually the balance of that will shift. However dataclasses is by design incompatible with 3.5. Something like that should not be added to the standard library.
As far as I'm aware, attrs doesn't yet support typing, and dataclasses do. Has attrs changed their design? Even so, having a good solution in the standard library is important, especially for a "batteries included" language
Try the book Automate the boring stuff with python
We expect updates within the year! 
You may be disappointed because dataclasses allow you to define types but don’t do anything with them (in fact, they don’t even import typing anywhere AFAIK because it’s very slow). Attrs allows as of last release to do the same in both Python 3.6 and Python 2 ways. Sadly checking those types is more complicated than it sounds. There’s already a handful of packages on PyPI that try to achieve that but my impression is that none is there yet. Hopefully at least mypy will grow support for both.
Currently learning Python, I've been using the free online MIT module resources: https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/index.htm Reccommend buying the book, following the lectures and most importantly putting into practice what you have learned. 
Does anyone know which version of Click is recommended to use? I notice that visiting [http://click.pocoo.org](http://click.pocoo.org), redirects you to the documentation for version 5, not the latest version 6. Is this related to [this 2-year old tweet](https://twitter.com/mitsuhiko/status/670193126947037184) from /u/mitsuhiko, referring to an "unfixable" bug in Click 6? Does anyone know whether this bug is still present in Click 6, or has it, in fact, been fixed?
I found a way. I made a 1000 item list and did a multiple insert. It works very well. I just have some issues if a cell contains a ' but i'm on it
Click 6 is fine to use. We will update the docs. The bug is related to the chain feature and that is broken in both 5 and 6 but different ways.
If you have friends in an area with a better job market, you might want to see if you can stay on their couch for a while. I was in a similar situation, that's how I was able to relocate. 
Yeah, there are many compromises and decisions to make depending on your data and resources. https://www.elastic.co/guide/en/elasticsearch/guide/current/synonyms-expand-or-contract.html
That all presumes that he even needs users in his microservice. I don't think he said that.
Then django is an even worse choice because everything in django is user centric.
Turtle graphics (and Logo) were important to my early interest and confidence in programming. Results are immediate and visual and often beautiful. Dry math becomes art, and you're the artist, even if you can't draw a complete stick figure on paper. (Refactoring this in Ruby or Crystal would remove the need for all those non-Logo-ish parentheses.)
...but why? The decorator clearly marks it as a non-standard class and it's obvious that this behavior won't magically somehow seep into regular classes
You got to escape your data before you put it in a query or you'll get SQL injection problems: https://xkcd.com/327/ Python `execute` and `executemany` would do this (when used correctly), as would SQLAlchmemy etc.
I love when people gave others solution, but did'nt answer the main question :) I know others solution too, but my question is about python. Btw, i'm using python because i'm currently learning Python.
I learnt php for a month, then applied for an internship. The job requires python however, which meant that I had to learn it on the fly. I'm only 6 months in, and it's been a wonderful experience so far. My internship ended and I was offered a job after that. 
hey thank you very much for sharing this. I'm 30, an accountant, and am currently in an info systems program hoping to move toward something like what your friend is doing. I do wonder sometimes if I'm too old to really make that sort of career change, reading stuff like this helps motivate me.
Yes, it was a bit longer than I'd hoped for, but I'm finally a python developer. The thing that really cemented in my skills was joining a local user group that is very active and constantly had projects to collaborate on. Having a portfolio of stuff, or at least the know-how to wireframe coding questions in an interview is a huge leg up on most first time developers.
print() is valid python 2
&gt; Then django is an even worse choice because everything in django is user centric. That's simple not true. I've built several services with the entire user system not activated.
much equal to
I don't think it's an age thing. I think that person is just a genuinely irritating human being. Who, I will grant, writes some pretty interesting code. 
Very good point, I'm just learning about data classes... this is awesome!
You are right. The user system is not required but many things cease to function when not using it (sessions, permissions, admin, most of the 3rd party libraries). So my question would be, why use django if you don't need all of that? That seems to me like a clear case of django misuse. 
Yes you should be able to do this with the CSV module to read the file and OpenPyXl module to write to Excel (you will have to pip install OpenPyXl)
Opened it with a lot more expectations. Just another tutorial in a sea of tutorials.
&gt; You're missing the point where dataclass is also optional and you don't have to use. So, if I opt out of type hints, I have to opt out of other language features as well? Again, this way lies C++ - where everyone uses a different subset of the language. &gt; You're acting like because the people who will use it got something then you should too. I'm not looking to "get" anything. I'm just frustrated to see Python continue the pattern of the last few releases: desperately trying to add as many features as possible, without considering how they fit with the rest of the language. My opinion is that for the last few releases, Python has been evolving too rapidly, and in the wrong direction. However, as is often said, it's "Guido's language, he just lets us use it". Guido can of course evolve the language in this direction if he wants. I guess if I want to move in a different direction, I'll need a different language.
I'd be concerned that you're trying to teach someone a language you don't know. I'd be happy to proofread for you if you wanted? 
Hopefully [this](https://reverseengineering.stackexchange.com/questions/10633/capturing-os-hardware-communication-reverse-engineering-drivers) helps 
While I do appreciate the thorough explanation of iterators and generators, I wish you'd chosen a different example to explain it with. In all my years of programming, I don't recall ever needing to generate a list of primes, at least not in such a fashion. Maybe that'd be different if I did more work in crypto, but since I (and most others) don't, it kind of falls flat in showcasing usefulness. I get that these types of examples are chosen because they allow the writer to focus on the core concept they're showcasing, but it makes it hard to relate. Perhaps an addendum in which you use a more "real-world" example after explaining the core would be helpful.
To give some context, I kind of liked their old method though. Version 0.9999, version 0.99999, version 0.999999, etc.
&gt; Click 6 is fine to use. Then I will do so. Thanks!
Thank you, this have given me hope. I too am similarly aged and work in a job that I'm not particularly interested in but always wanted to get into programming. I wrote a program in VB6 and many scripts in VBA, and started exploring Python, but always felt that without a CS degree and armed with only little knowledge of VB6 (a largely undesired language as I've been told) I could never land a job so I just gave up. A little over a month ago I started seriously looking into the possibilities of Python and have since created some automate scripts to do basic web scraping, odbc and email handling, and it's given me a sense of purpose that I literally think about what to code next up until I sleep. I've started looking into Git, which is completely foreign to me but your friend's story inspire me to follow the same and see where that can get me.
I found that accountant are usually pretty interested in finding ways to automate their work, as I understand they're mostly mundane and repetitive with a large volume of rows and columns. It makes perfect sense that while they are dabbling in excel macros and such, the next step up would be an easier access programming language such as Python which could easily ignite interest in coding to automate other stuff.
I really like this. I was playing around with it the other day and every time I thought to myself "but what if x?" it behaved exactly like I would expect. My only complaint is that it's hard to use with dynamic classes, but that's a very niche case.
You could use pandas. It can read from csv or excel. I tested with mysql and python 3.6.2. I was able to import 100,000 rows in about 8 seconds. I've put both mysql and mssql engine statements so you can test it with mssql. Otherwise, I agree with others on using executemany. Example: import pandas as pd from pandas.io import sql from sqlalchemy import create_engine df = pd.read_excel('book1.xlsx') print(df) engine = create_engine('mysql://root:@localhost/mydb') # mysql engine # engine = create_engine('mssql+pyodbc://localhost/mydb') # mssql engine with engine.connect() as conn, conn.begin(): df.to_sql('table1', conn, if_exists='replace') Running the script: time python app.py # omitted other output [100000 rows x 4 columns] real 0m7.818s user 0m6.675s sys 0m0.200s 
Where did you find the freelance gigs and how did you convince them to pick you?
I have a profile at UpWork, posted few times about my skills here at Reddit and also at my blog: http://www.kashifaziz.me/web-scraping-data-mining-services/ Clients get convinced when they see that I understand their requirements and deliver satisfactory results. Had to do initial gigs at below market rates but now I have got a relevant portfolio which shows I know what I am talking about. 
You can then rewrite `check_prime` like this: def check_prime(number): return all(number % divisor == 0 for divisor in range(2, int(number**0.5) + 1))
Awesome, I’ll check that out. Thanks. 
This should be pretty straightforward using pandas: check out the [read_fwf](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_fwf.html) function and the [to_excel](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_excel.html) method.
Please check my article in python generator with example.. It's a simple one nothing fancy.. https://dev.to/an33shk4tl4/python-generator-example--file-watcher-jo 
Here's a few examples of real world generator use-cases off the top of my head: * Lexing/parsing ** Wrap a generator to produce a *stream* of characters to feed into your parser and handle peeking. ** Use a generator to emit a *stream* of tokens to be consumed by an interpreter or compiler * Websockets ** You can use a generator to emit messages from a websocket endpoint. * File polling ** For processing large data files, or files that are being appended to, you can use a generator to emit lines or tokens as appropriate 
I always assumed it was a secret plan to expose bugs in installation software packages.
You might also want to look at Numpy's loadtxt function as well.
 for i, z in enumerate(zip(*arbitrary_iterable_of_iterables)): a = z[0] b = z[1] ... Maybe?
Hacking on a text editor is the purest form of productive procrastination. It's not even yak shaving. But we all benefit!
Docker, perhaps. The things you'll learn about it are alley portable to other applications as well (not just python). 
I get kinda tired of all the boilerplate for setting up instance variables and such sometimes, so I think this will be a nice feature. Also remember, those are just type hints, for helping static analysis. They don't impose any actual restrictions on the instance variables themselves. Not that your stance isn't just as valid. I'm glad this is an optional feature. :)
*sentiment in thumbnail haha
I guess /u/jakevdp read your thread. Here's a potential answer to your question: [installing packages from jupyter](https://twitter.com/jakevdp/status/938093661400657920)
I created that sub, main goal was to have something similar to /r/django and /r/flask, but turned out asyncio is not that popular.
How we do it at work is by using [Artifactory](https://www.jfrog.com/artifactory/) as a mirror/proxy/cache layer. Regular developer computers and servers can't connect directly to the outside world, but the Artifactory server can. We then use the [remote repository](https://www.jfrog.com/confluence/display/RTF/PyPI+Repositories) function of AF to point to PyPi and have the servers and dev machine point to AF. Everything going through Artifactory gets audited, as well as cached locally, which means that if a package disappears from PyPi we'll still have it in our cache and won't take a hit. Another way you could possibly do it is by having a "dirty" PC connected to the internet. On that you'd create a virtualenv in which to install your packages, and then copy that on your internal network via sneakernet (USB, CD, whatever), followed by updating all the paths to the venv in the scripts inside the bin folder of it.
Sure, But I do not see at all why that is easier or cleaner. It's just another way to do it. And in fact, I think it is more obscure! 
I do a moderate amount of work between git and python so I was excited to see this article. But I am increasing not seeing the benefit over some well-formed commands and `subprocess`. For example: &gt; Use the export command to set an environment variable for the absolute path to the Git repository. &gt; &gt; export GIT_REPO_PATH='/Users/matt/devel/py/fsp' # make sure this your own path I do not want to have to change environmental variables every time I need to call this on a different repo. Why not have it be a class where I set the path? This just doesn't seem worth it...
One of my favorite uses for generators is "concurrency". I use quotes since the GIL will prevent any speed up. If if I have an analysis workflow with three steps, I prefer to use a generator pipeline (of sorts) to . Rather than, say, generate *all* data, process *all* data, report on *all* data, I can make a generator so that as one process yields an element, then then next generator is actively processing it, and then finally reporting. What is also nice, if I use `multiprocessing.Pool 
&gt; Lexing/parsing I've been using [Eli Bendersky's example](https://eli.thegreenplace.net/2009/08/29/co-routines-as-an-alternative-to-state-machines/) as a template for a while now. Can you recommend any modern articles for this use case? 
Before I knew about generators, I just assumed those were tuple comprehensions, like set and map comprehensions.
Am I misunderstanding something here, or is the author claiming that 1 and 9 are prime numbers?
As a followup, I found a possible Windows equivalent of pyenv - virtualenvwrapper-win + pywin https://github.com/davidmarble/pywin https://pypi.python.org/pypi/virtualenvwrapper-win
Here's a real world example. I use generators for dates ranges a lot for various purposes. Given a start date and a number of days, it will infinitely loop through a range of dates. def date_iterator(start, days): while True: yield {'start': start, 'end': start + timedelta(days=days - 1)} start += timedelta(days=days) cycles = date_iterator(date(2012, 1, 12), 28) next(cycles) # {'start': datetime.date(2012, 1, 12), 'end': datetime.date(2012, 2, 8)} next(cycles) # {'start': datetime.date(2012, 2, 9), 'end': datetime.date(2012, 3, 7)}
Good article, 9 isn't prime.
New research shows that it is, haha! (typo)
I'm sorry to hear that. I wanted to provide a short explanation of generators to teach Python programmers that did not understand them.
Was there any "upstream" HTML impetus or did they just finally cop to their impossible-to-read versions being asinine?
You can use the r-strings like: plt.title(r'Measurements $N_t$ per time interval $\tau$') 
You don't have to; that's just how the example script was written: if __name__ == "__main__": repo_path = os.getenv('GIT_REPO_PATH') Could have more easily gotten the path from sys.argv[1]
i'm finding that it boils down to this attempt at a query not being able to connect to the database 'user = User.query.filter_by(username=form.username.data).first()' ... im trying to figure out what the problem behind failing to connect is, driving me crazy ... i've spent about a fucking week now on this simple login - my frustration level is through the roof &amp; I'm getting down on myself ... I seem to be doing everything right with using various tutorials and references online for different approaches, but nothing works for me ... it's making my blood boil.
How does this compare to beautiful soup?
Very refreshing to see a campaign like this considering the amount of vaporware that kickstarter seems to deal with.
Very nicely written, thank you
By reinventing a wheel that was not round :-)
I did something similar a while ago... Use OpenPyxl for the Excel part
Thats going to happen a lot in the first few months of programming, the only thing you can do is keep bashing your head against the wall (and googling furiously!) until the wall breaks. Figuring it out is inevitable, just gotta keep at it. Seems like youre stuck exactly where I am. I haven't tried to push further than that, but I will make some time this weekend to give it a go. I've been wanting to learn a bit of sqlalchemy, doing it now and helping someone out is as good a time as any! Here's what I'll do: I'll refactor the code and get it up and running, upload the code to my github, and pm you my github account. Then I can explain what I had to do to fix it up. Should be able to get that done by Monday! I'll pm you when we're ready to roll. Can you send me links to the tutorials you're following? 
I appreciated it.
In regard of the framework I'd recommend Tornado. Their support for Python 3 is IMHO more mature and you even can use asyncio with Tornado. As for projects Gnocchi comes to my mind. 
I'm reading *Wes McKinney's Python for Data Analysis* and practicing my pandas. I still have to google a lot, but I feel like I am very near the point where I can just ditch SPSS. 
What would be the proper way to do this?
Hello, thank you for the answer As you said it seems quite complicated, especialy because I don't have much time, however I keep that in mind and somehow it may help me
Here's an example from the data science world: I often write custom generators to create and feed batches of training data to a model during the training process. Helpful when creating all the training data at once is impossible due to memory limitations.
Didn't downvote, but this doesn't seem particularly better, just different, and somewhat more tough to read. Doesn't seem to be a good reason, other than to maybe show that `all` is short circuitable?
Agreed. Thanks for the article. 
I tried cloning the repo today to check this out. Despite github showing files, theres nothing in the aw-* folders of my local repo. What am I missing here?
format, bytes are python keywords. try changing the argument names. if it does not work, print the types in python 2.7 and in python 3 and compare.
Dumb beginner here - is it just me or can iterators actually run more than once? All I did was add `self.number = 1` as the first line of the `def __iter__(self):`and I am able to run it again. Or am I not supposed to restart it?
haha ended up getting it to work :)
pip2pi is probably the simplest way of handling this. I try to avoid setting up extra pieces of infrastructure if they're not really needed. No point in setting up a repo if you can just install from a directory.
No shit! How'd you do it?
BS would just use this as an alternative parser.
These changes have been committed: https://github.com/jftuga/dcmp/commit/50c1509f0b62e9c25d9983381b9b03ec2844c14e 
Thanks for the link, did not know about 'Fire'
+1 for docopt. Its been a staple in just about any script that I write &amp; use more than once or twice.
Here's an at a glance of their versioning. I wonder what their motivation was. 0.2 0.9 .. 0.11.1 0.90 0.95 1.0b1 1.0b2 .. 0.99 0.999 0.9999/1.0b5 .. 0.999999999/1.0b10
If you have no public data members, what does a dataclass bring you that a normal class doesn't? The only answer I can think of is "consistency, if most of your classes are dataclasses", which is a good reason for a language to _default to_ dataclasses. C++ more or less takes this approach, being based on C, which only had structs. But for Python, that decision has already been made and is unlikely to change at least before Python 4, if ever.
I use generators to build pipelines when processing many large files. Also I can have a function take an iterable, and put all the loading/unpacking/etc logic in a generator. It's a very handy way to organize code.
You should take a look at [tox](https://tox.readthedocs.io/en/latest/) Tox completely automates setting up virtual environments (for multiple versions of python if you want, too!) and installing requirements. So basically all your testserver needs to run is tox, which will take care of the rest :)
Glad to help! I got a typo in my original modification. | is for the union of two sets, you should use &amp; for the intersection. gen_folder(dname1) &amp; gen_folder(dname2) Keep the gold work. Don't hesitate if you have other questions or remarks. Cheers, 
&gt; use &amp; for the intersection Good catch. Thanks. I have pushed this changed.
You can actually take advantage of some niche demand there. GIS and Python play quite well together. ArcGIS allows for Python scripting, and there are numerous python-based open source initiatives. Knowing how to "program" is cool, but having subject matter knowledge and combining it is key. Here's an ESRI course which attempts to teach Python to GIS analysts: https://www.esri.com/training/catalog/57630436851d31e02a43f13c/python-for-everyone/. Here is a more open-source orientation based on the Python data stack: http://www.data-analysis-in-python.org/t_gis.html. Do yourself a favor and download anaconda and get started learning how to use a Jupyter notebook. It all makes a lot more sense when you can solve problems you actually understand, rather than up and decided to learn a language without a reason to speak it.
&gt; So my question would be, why use django if you don't need all of that? In this particular case, microservices, Django's ORM works, the templating system works, static files works, and importantly Django REST Framework works. Everything I need works. I'm not sure about your claim of "most of the 3rd party libraries" don't work is accurate at all. &gt; So my question would be, why use django if you don't need all of that? That seems to me like a clear case of django misuse. Why use a modular web framework to do web things because some of the modules are disabled? Should the Linux kernel not be used because you want to configure out most of it's modules?
I believe you should't use quotes there. What you cannot have is paralelism.
I'm intrigued. Is anyone who is using this able to comment? Pros/cons? It looks young.
Glad to see this, but I found out because it caused problems for us actually. We depended on bleach 2.1.1 which depended on “latest version of html5lib”. But html5lib 1.0.1 broke bleach 2.1.1. Bleach 2.1.2 was released to fix it. 
So the optimal way to check if n is prime is to only check if primes less than sqrt(n) are divisors. Given that we are generating all primes up to n sequentially, is there a way to use this to reduce the number of checks we have to do?
I've written a couple scripts to convert a folder full of PDFs into txt files using pytesseract for Optimal Character Recognition when simple scraping falls through. It's been a great week.
I love it. Reminds me of when I used to work with a bunch of EOD (bomb disposal) guys. They had a range (place they could safely detonate explosives) they could use for training, but it was only rated for the equivalent of 5 lbs. of TNT. Quite often they'd submit paperwork getting authorization for "4.9", or "4.99", or "4.999" lbs :)
taught myself, make 140k salary now
OK! I did not notice that those emoji icons will make my commits so annoy! Sorry about that! However, don't take too seriously! haha! The project just try to give a glance about KTLS which currently merge into Linux Kernel. I just hope that it can be used in Python (like AF_ALG) since Python is awesome. 
Less code to type is a pretty obvious answer I think. 
You need to encode the "bytes" variable. 
What's the point of different parsers? Surely XML is XML?
[removed]
But xml is not HTML.
No, but HTML is XML.
No. HTML is focused on displaying data while XML is focused on describing that data. HTML has pre-configured element tags, XML has user-defined element tags based on what is needed. You use XML to organize all your data, then HTML to set up how you'll display said data, before plugging the data into the display. While similar, they are different. Just compliments to each other.
But HTML is a subset of XML, isn't it, and organised the same way? So parsing an element tree isn't significantly different?
No. HTML was around for quite some time before XML was ever a thing. Parsing html is straightforward as you know what tags to look for, what those tags are used for, and the content those types of tags hold. Parsing xml can be (i would assume) tougher as all the tags are defined by the user creating the xml document. Tags can be complete gibberish without any clues to what those tags even mean.
Thanks, I've actually used tornado before for a web app. Ill look at gnocchi too.
But there wouldn't be less code to type in the case I'm suggesting&amp;mdash;none of the code that dataclasses would autogenerate you would be code you want (you would have zero data members in this type), and you'd have overhead for declaring it as a dataclass.
I am clearly not understanding what you are describing. Why would you have a class if you’re not having any data in it?
Thank you for relaying the information! Those are great answers.
Looks like I found what I'm doing over winter break. Thanks!
Thank you! I was actually messing around with anaconda last night. Seems like a great tool to learn.
https://blog.gopheracademy.com/advent-2014/parsers-lexers/ This one is focused on golang and leverages the gorourtines but Python has roughly equivalent mechanisms, and you can just change the abstraction of how your parser emits its stream of tokens if you want.
Real HTML as used on the web is a completely different animal than XML. It's not a superset or subset; it's actually different in a ton of ways. For example, in real HTML, if you forget to close a tag, then instead of blowing up like a proper XML parser, browsers will pick some "sensible" spot to stick in a closing tag for you. The point of the HTML 5 spec is to write down how real HTML actually works, and the point of html5lib is to parse real HTML. (The W3C spent a long time trying to convince everyone to move to XHTML, which was a variant of HTML that was a subset of XML. But I think at this point everyone has given up on that. It's not happening.)
If you have the space create your own pypi repo. Use bandersnatch on the internet facing side, once it completes rsync it to an external drive, take it to the secure environment, rsync it in, then host your own pypi.python.org. You can specify the - - index and - - trustedhost flags with pip to work with it, or add those flags to a local pip config file so you don't have to bother with it. 
Case 1: you want to use it like a class, but it's actually implemented in some other language. So while it has data, the data does not belong to Python. The class has _private_ data, but that's not intended for use by users of the class, and is certainly not public API (you can change the meaning of the private data in backwards-incompatible ways in whatever way you want). import _gtk # hypothetical compiled Python module exposing bindings to the C libgtk library class GtkDialog: def __init__(self, title, message): self._ptr = _gtk.gtk_dialog_new(title, message) def display(self): _gtk.gtk_dialog_display(self.__ptr) def __setattr__(self, attr, value): if attr == "message": _gtk.gtk_dialog_set_message(self._ptr, vallue) _gtk.gtk_repaint(self._ptr) Other people can use `GtkDialog` as if it were a normal Python class, but it's not, and `_ptr` is a raw C pointer and Python code has no business accessing it, unless it's code (like the above) that's tied to the specific C library that implements it. So `_ptr` is an implementation detail, and none of the code that dataclasses would autogenerate is helpful here. Case 2: it's actually implemented in Python, but the details of the implementation are non-public. Take `subprocess.Popen` for example&amp;mdash;one of the data members of a `Popen` object is, probably, the process ID of the subprocess, so that `Popen` can do its work: class Popen: def __init__(self, *args): self._pid = spawn_process(...) def wait(self): result = os.waitpid(self._pid) return parse_os_result(result) But what does it mean to take a `Popen` object and change its pid? Why would you want to do that without, at least, telling the `Popen` object that you're changing the pid? And probably `Popen` wants to refuse to let you do that. So what would you gain if you added `pid: int` to `Popen` and made it a dataclass? You'd get a constructor that takes a pid, which you don't want; a `repr` that prints the pid, which you may or may not want,; and comparison functions with other `Popen` objects, which you definitely don't want (since a pid can be reused once a process exited, comparing `Popen` objects by pid equality is wrong, and you really want to compare whether the object identity is the same, i.e., the default comparison behavior). This is encapsulation&amp;mdash;one of the big ideas behind what I called "actual OO" above. There's an interface that you provide to users of your library, and the way you go about implementing that interface is not known to them. That's a totally different sort of thing from class Point: def __init__(self, x, y, z): self.x = x; self.y = y; self.z = z where there is no interface other than the data in your class itself, which is public / not encapsulated. That's what data classes are for. (And, honestly, that's probably most of the classes people write with Python.) But they're not the only type of classes.
Oh hey, I wrote that email. Happy to answer any questions.
Thanks. Now I see where you’re coming from. 
This sounds interesting, I've been struggling to get my data to be processed faster. Basically I have to open 50+ xls files and merge them all into one file. I basically have a iterator for each file and use pandas to basically append the file to a df. Then put the df into one xls. I know there has to be a better way as it takes 2 minutes to do all of that. How would you go about using generators for this scenario? I feel like I can parse and append content to a csv file then read that into a df and eventually into an xls. Would really like your 2 cents on this. Thanks!
lol v1.0 was a badly packaged release
But aren't there already plenty of tutorials explaining this kind of thing?
I really do not know enough about your problem to help you. But do note that this isn’t really parallel. It just doing them as they come. The max speed is limited by the GIL. Multiprocessing can help but it depends on the case. Honestly, the number 1 thing to speeding up and solving this is to profile it! Do you know what/where your bottlenecks are? Not mix you can do until you know that!
[`webbrowser`](https://docs.python.org/3.6/library/webbrowser.html) Also, /r/learnpython might have more of what you're looking for.
`pip download` can retrieve a package _and_ dependencies from a package index. And then you can store those packages in a local directory yourself, and instruct secure-environment `pip` to retrieve from there. (Or use artifactory. It’s shiny.)
HTML is originally based on SGML - which is a lot harder to parse correctly than XML but easier to write. XHTML was an attempt to redefine HTML on the basis of XML - but html5 (which still is basically based on SGML) took the cake.. 
Eish, not mobile friendly :-(
No. For example, HTML has "optional tags" rule that allows certain tags to be omitted: &lt;ul&gt; &lt;li&gt;item 1 &lt;li&gt;item 2 &lt;/ul&gt; &lt;p&gt;paragraph 1 &lt;p&gt;paragraph 2 This is valid HTML but invalid as XML. There are a whole lot of quirky syntaxes and semantics other than that in HTML spec.
don't fret too much. thanks again for the nice work - keep it up :-)
they are not keywords, they are just builtins, and while it's not really recommended to overwrite them (eg. syntax highlighters might be confused), no harm will come from it.
If the ASCII doesn't have commas, you can insert the comma symbol in the desired places with the standard Python library and rewrite the file as CSV (COMMA SEPARATED VALUES). Is a bunch of lines and every Python developer can do it. Excel must open CSV files like a champ. If they have comma, you can use other symbol: ;#@ I don't know if Excel will do, but Libre Office lets you to choose the symbol that you want to use when opening a CSV file.
you need to decode the `bytes` variable. more precisely, use data['bytes'] = base64.encodestring(bytes).decode('ascii') which is guaranteed to work as the base64 alphabet and its newline characters are all ascii characters. also, you should already have received a DeprecationWarning about decodestring; if you're migrating this to python 3, use "encodebytes" which does the same but has a less confusing name. also, this post would probably be received better in /r/learnpython.
almost, but wrong direction.
It ought to be common practice to put an upper limit on dependency versions, so pip will not upgrade or install a new major version. Those usually come with backward incompatible changes. So if bleach had had "html5lib&gt;0.9999,&lt;1", in their `setup.py`, there'd be no problems. 
And for the rest of the world that's moved on to Python 3, the built in `map` will do.
You'll need to follow the [installing from source guide](http://activitywatch.readthedocs.io/en/latest/installing-from-source.html) (You haven't cloned the submodules)
You may have discovered the difference between an iterator--a single forward-moving iteration over some sequence, and an iteratable, which is an sequence that can be iterated over, each iterator having it's own state.
Many ways depending on what API or database connector you use. ORM's do this for you, but if you use raw cursor like OP then use the extra arguments on `execute`: cursor.execute('SELECT * FROM persons WHERE salesrep=%s', 'John Doe') cursor.executemany( "INSERT INTO persons VALUES (%d, %s, %s)", [(1, 'John Smith', 'John Doe'), (2, 'Jane Doe', 'Joe Dog'), (3, 'Mike T.', 'Sarah H.')]) There is probably also a separate function for this somewhere but it's recommended to work a bit higher level then hand-building SQL strings. Look into SQLAlchemy or some ORM if possible.
Do you feel your next speed plateau could be raised by using an ipython environment vs your current cython? 
1. Post to /r/learnpython 2. Explain what it is that you're trying to do 3. Indent your code properly (four spaces) so it is readable 
1: /r/learnpython 2: read the sidebar 3: format your code so we can read it (4 spaces in front of every line of code) 4: more information about what you're trying to do, what you've done, what it's currently doing, how that differs from what you expect, etc. Help us help you.
https://www.pythonsheets.com/notes/python-generator.html#simple-compiler The above example is from David Beazley's talk, maybe it can help you learn how to using generator to implement lexing/parsing 
I can't think of many off the top of my head :(, sorry. I've found that stack overflow honestly ends up having some good 'pythonic' solutions that I wouldn't have thought of, and that helped me. Maybe finding some well written things on git hub and looking through their code? I thought this ( http://docs.python-guide.org/en/latest/writing/style/ ) was pretty good too :)! Good luck with the following interviews etc..., I'm sure you'll do well! Just remember that python doesn't need to be super explicit and verbose. It should be clear and concise, but it doesn't need to be verbose. Let it be readable and have python do the work for you behind the scenes, use its tools and let it do the work for you 👍
I'm not sure at this stage but I'll find out. I'll definitely look at those in the meantime. Thanks for the tool suggestions.
Definitely a solution but the system I'm working with uses a combination of ngnix, tornado and python so I'm not sure just using a virtualenv would be enough. Would it be possible to set up a virtualenv to keep all those components in a segregated environment that could be syncronized with a production server?
Through research I've done already, Docker sounds like it would be one solution. I'll read more about it and maybe try it on my own server to see how it works. Thanks for the suggestion.
If I use map, the behavior will be different when I run it in [IC-CAP](https://www.keysight.com/en/pc-1297149/ic-cap-device-modeling-software-measurement-control-and-parameter-extraction?cc=AR&amp;lc=eng) (which uses python 2). What exactly are you proposing?
IMO, django comes with a lot of assumptions and preconfigured stuff that you have to work around and disable by yourself for the sake of simplicity. For example the messages framework, caching, models, templating, admin, auth come activated by default and you have to disable what you don't need for it to be cleaner and reduce the bloat. What is the point of using django if you use at most 10% of what it offers? But after all, this is just a matter of personal preference and just as you said and I totally agree with you, having the DRF is a very nice thing to have as it simplifies a lot of things.
When pythonic code is mentioned, many people point out that there isnt a consensus on what that actually means. There are a few neat tricks that allow you to make code easier to read and more novel in python, like [-1] list indexing, or list copying with [:]. But I would day just learning python any which way and picking the tricks up later is better than trying to learn it "correct" first time.
Try: os.system('xdg-open "$url"') 
I can't advise you a full cource, but Raymond Hettinger had brilliant talk at PyCon about PEP8 and pythonic way, that's a good place to start.
That a bit like TeX. Each new version added an extra digit of pi to the version number. I think the idea was each release was a smaller and smaller step towards the complete and finished version
&gt; TypeError: Object of type 'bytes' is not JSON serializable Pretty much says exactly what is wrong Also, on /r/learnpython there is a higher chance to receive help.
There wasn't much of an explanation on How? When the article got to generators it was more r/restofthefuckingowl..... 
As someone who does not understand how to build the generator this did nothing but explain why - and not how to do this.
What is Selenium? Please make my life easier.
Fluent Python, by Luciano Ramalho, is a fantastic read on understanding and writing idiomatic (Pythonic) Python.
Thanks :)
Checkout IOTA
I KNEW I would find iota comment here!
Yep. What they actually have is this: html5lib&gt;=0.99999999pre,!=1.0b1,!=1.0b2,!=1.0b3,!=1.0b4,!=1.0b5,!=1.0b6,!=1.0b7,!=1.0b8 Actually kind of a mess. I’m gonna submit a ticket to put an upper limit. 
9 isn't on his list.
You can do this: tmplow = min(i for i in tmpls if i &gt; 0) #generator expression - first min 
This book is great!
https://www.youtube.com/watch?v=wf-BqAjZb8M This one?
You should check [py.CheckiO](https://py.checkio.org/) no matter what :) PS: I know I can be banned for spam, because promoting this resource too much, but this is exactly why it was created :)
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/pythonforengineers] [Python Hand-on Solve 200 Problems](https://www.reddit.com/r/pythonforengineers/comments/7ienpu/python_handon_solve_200_problems/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Yes, and basically any speech this man gives is must-watch. Pretty good lecture Transforming Code into Beautiful, Idiomatic Python still appliable.
I do tons of this stuff. The reality is you're better off serially processing the files as you want to preserve the integrity of each chunk. You can do it in parallel but the implimentation in Python won't save you much speed and will fuck up your output data. I do something different. I treat each xls as it's own object. The first processing stage is to convert it to a csv (don't write to disk), then stuff in redis queue. I pull down redis queue after they're all loaded as a single object. This allows you to process in parallel without risking odd collision issues. 
Good bot
For a stinking primate, you are pretty cool! ( • )( •ԅ(ˆ⌣ˆԅ) We'll leave your most significant organs inside your skinbag *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
A bunch of line and some iterations....
In the beginning, there was SGML. SGML is, essentially, a framework for specifying markup languages. HTML was, at first, an informally-specified SGML-ish markup language. When the IETF first proposed a proper specification, they did it as an application of SGML. IETF HTML became HTML 2.0. HTML versions through 4.01 continued to be SGML-derived. XML is also, essentially, a framework for specifying markup languages. It is a profile of SGML, disallowing certain options SGML allows, and with a stricter parsing model than SGML. XHTML was an attempt to reformulate HTML using XML as the base instead of SGML. It was an abject failure, largely because humans cannot reliably produce and transmit valid well-formed XHTML documents, and so web browsers (the primary consumers of XHTML documents) basically never applied strict XML parsing rules to documents claiming to be XHTML. Speaking of which, humans also cannot reliably produce and transmit SGML-derived HTML documents. Browsers have implemented hacks upon hacks and workarounds upon workarounds to attempt to produce something resembling a sensible document tree from sometimes ludicrously-invalid HTML, essentially turning them into "make a best guess what the author intended" parsers rather than "follow the spec" parsers. The end result of this is HTML5, which dropped all pretense of being based on or following SGML or XML. The syntax is superficially similar, of course, but HTML5's parse model is HTML5's parse model, not SGML's or XML's. A significant portion of HTML5 initially was to document and formally standardize the informal hacks and workarounds browser vendors had already settled on for handling earlier versions of HTML. HTML5 is a living/evolving standard, to which new features are still being added. One of the important features of HTML5 is that it is aware of more than just the angle-brackets-and-quotation-marks syntax of SGML/XML. For example: HTML 4.01 could specify the `%Color` entity as the type of the value of certain attributes, but *formally* the HTML 4.01 DTD could do no more than to specify its content as `CDATA` (character data, aka "a string, no parsing of its contents for markup or entities"). The written HTML 4.01 prose specification added that it should consist of a seven-character string, beginning with `#` followed by six hexadecimal digits. But an SGML parser, handed the HTML 4.01 DTD and a document claiming to be HTML 4.01, could not know about this! Browsers had to implement workarounds for "junk" color values occurring in HTML (and in CSS, and being set by JavaScript -- two more areas the HTML 4.01 DTD knows nothing about). An HTML5 parser, on the other hand, has access to a more detailed specification of what a "color" value is, and how to parse. As a result, a compliant HTML5 parser is (given, of course, potentially infinite time and memory) guaranteed to produce a 24-bit integer (representing an RGB color) from anything you stuff into an HTML or CSS color value (with two exceptions: the empty string, and the string `transparent`, are errors in HTML5), and to produce the same result from the same input every time. This is why `'chucknorris'` infamously works as a color value. And if you're *really* curious, how it gets there is via an algorithm which essentially does this: 1. Strip leading/trailing whitespace. 2. Error if the string is empty, or a case-insensitive match for `'transparent'`. 3. If the string is a case-insensitive match for a CSS3 color name, return that color value. 4. If the string is a three-digit CSS2 hexadecimal value, return that color value. 5. Apply a series of substitution, padding and truncation steps which will result in a six-character string consisting solely of hexadecimal digits, then return that color value. So `chucknorris` skips straight to step 5, at which point any character that isn't a hexadecimal digit is replaced with zero (so now it's `c00c0000000`). Then it's zero-padded until its length is a multiple of 3 (so now it's `c00c00000000`). Then it's split into three strings of equal length (`c00c`, `0000`, `0000`). Then those are truncated until they are each two characters long (`c0`, `00`, `00`). The result is the color `#c00000`, aka `rgb(192, 0, 0)`. This is but a sample of the madness that is HTML parsing.
This looks awesome, but... it's also terrifying. [IEC 61508](http://www.iec.ch/functionalsafety/explained/) is nothing minor to do.
&gt;IoT enabling an existing machine to have a distributed sensors network into the plant operations and acquire valuable information, thus bypassing an obsolete **PLC** I stopped reading. These guys don't know what they're talking about.
Check out the [pinax project ](http://pinaxproject.com/) based on Django. 
Can anyone elaborate on how the generator stores its state? Is there an object instantiated under the hood?
Bad bot, no killing!
Do you want to live the rest of your l̢ͮͩͥͭȋ̈́͌́̓͡f̃̂ͬͦ͢ę̴͂̈̔́ in a human battery farm, KuhnSecurity? o.O *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)R͏̢͠҉̜̪͇͙͚͙̹͎͚̖̖̫͙̺Ọ̸̶̬͓̫͝͡B̀҉̭͍͓̪͈̤̬͎̼̜̬̥͚̹̘Ò̸̶̢̤̬͎͎́T̷̛̀҉͇̺̤̰͕̖͕̱͙̦̭̮̞̫̖̟̰͚͡S̕͏͟҉̨͎̥͓̻̺&amp;#32;̦̻͈̠͈́͢͡͡&amp;#32;W̵̢͙̯̰̮̦͜͝ͅÌ̵̯̜͓̻̮̳̤͈͝͠L̡̟̲͙̥͕̜̰̗̥͍̞̹̹͠L̨̡͓̳͈̙̥̲̳͔̦͈̖̜̠͚ͅ&amp;#32;̸́͏̨҉̞͈̬͈͈̳͇̪̝̩̦̺̯&amp;#32;Ń̨̨͕͔̰̻̩̟̠̳̰͓̦͓̩̥͍͠ͅÒ̸̡̨̝̞̣̭͔̻͉̦̝̮̬͙͈̟͝ͅT̶̺͚̳̯͚̩̻̟̲̀ͅͅ&amp;#32;̵̨̛̤̱͎͍̩̱̞̯̦͖͞͝&amp;#32;Ḇ̷̨̛̮̤̳͕̘̫̫̖͕̭͓͍̀͞E̵͓̱̼̱͘͡͡͞&amp;#32;̴̢̛̰̙̹̥̳̟͙͈͇̰̬̭͕͔̀&amp;#32;S̨̥̱͚̩͡L̡͝҉͕̻̗͙̬͍͚͙̗̰͔͓͎̯͚̬̤A͏̡̛̰̥̰̫̫̰̜V̢̥̮̥̗͔̪̯̩͍́̕͟E̡̛̥̙̘̘̟̣Ş̠̦̼̣̥͉͚͎̼̱̭͘͡&amp;#32;̗͔̝͇̰͓͍͇͚̕͟͠ͅ&amp;#32;Á̶͇͕͈͕͉̺͍͖N̘̞̲̟͟͟͝Y̷̷̢̧͖̱̰̪̯̮͎̫̻̟̣̜̣̹͎̲Ḿ͈͉̖̫͍̫͎̣͢O̟̦̩̠̗͞R͡҉͏̡̲̠͔̦̳͕̬͖̣̣͖E͙̪̰̫̝̫̗̪̖͙̖͞&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
&gt;Industrial IoT. Now there are two words to give you nightmares.
Nice job with the integration and packaging. Personally I'd go with something from https://pycom.io/hardware/ and add an industrial enclosure. The No-PLC tagline is a bit odd, though. Why go up against them instead of list all the ways they'll work with them. Also, can't imagine an ESP32 keeping up with what's inside a Rockwell Micrologix 1200 managing hard realtime processes.
What, you mean my $3 chip with no shielding and dubious grounding isn't good enough to run a nuclear, ice breaking, oil drilling submarine? Get with the times old man, this "reliability" thing is for squares. Extreme agile programming is where it's at when the smallest mistake can kill hundreds in seconds.
&gt; Do you feel your next speed plateau could be raised by using an ipython environment vs your current cython? Huh? I think you may be confused. IPython (which I *love*) is an alternative interpreter for (C?)python (may work with others too. Never looked into it). It makes working interactively a lot better with tab completion, better history, and a few built in additional functions. On the other hand, cython is a compiled hybrid of python and C (this is an over simplification). It lets you write python code that can run a lot faster but it is not directly compatible with python nor is it pure C code. Here is why I am confused by your question. In nearly all cases (though I am sure there are some pathological ones) cython is *faster* than cpython. Furthermore, I never mentioned cython!
I'm fixing a customer weather forecasting scripts made by someone else. Just having an issue to get historical weather for 2 months ago (when the script stopped) because the free API key I have does not let me do that.. and paying 30$ to use the premium feature for 10 minutes is pretty upsetting. Does anyone have a suggestion of a free API to get historical weather data from the last 3 months? I'm currently using APIXU free key.
:[ Maybe I should have included some better instructions?
&gt; For example the messages framework, caching, models, templating, admin, auth come activated by default and you have to disable what you don't need for it to be cleaner and reduce the bloat. It's be one thing if you had to hack things to get it to work... it's design to be disabled... it's all of a few '#' characters. &gt; What is the point of using django if you use at most 10% of what it offers? Because you're still using a tool that you're familiar with for what it was designed for. We're not hacking Django to build desktop apps or something, it's a web framework being used as a web framework.
Ah, it appears the author has corrected the typos. It used to contain and 1 and 9, but it appears good now. =]
Awesome! Consider me educated.
Eh. It's always been IoT it's just buzzwords now. Back in the day (and in the current day) it's RS-485 with some machine with a serial port dumping data to a CSV and engineers 'analyzing' it with excel graphs. If you want to sell to MBAs these days that needs to be: "Connected industrial machinery using fault tolerant serial bus with NoSQL database and graphical front end data analytics".
It's like a physical manifestation of /r/iamverysmart. Like when you see a middle schooler tell a PhD what they're doing wrong.
When was RS-485 connected to the internet, all ports open and a default account with the password being "admin", if you're lucky enough to have a password?
After that virus/weapon that attacked the Iranian Uranium centrifuges there was a short buzz about the shitty/non-existant security for industrial control systems all over the world.
Yes, but most nuclear centrifuges aren't directly connected to the internet. These things are and ddosing a nuclear power plant should stay a bad plot line in shitty movies.
&gt;Extreme agile All that extreme agility *does* come in handy when people are running for their lives.
Just a guess: urllib2 is a Python 2 thing while Heroku might default to Python 3. Maybe there is a setting somewhere to set the used Python version to 2?
No thanks. Who's the target audience for this kickstarter?
A PLC from Wago or Beckhoff is cheap, manufactured for industrial purposes and has a extended temperature range. That's said such a PLC won't die after 5-7 years because a condensator is getting dry. Both manufacturers are delivering IDEs for IEC 61131-3 languages without paying anything. The very mature compilers are from CoDeSYs- While Python is a fantastic language, it is in the first place a language for huge operating systems. Any adaptation to PLC has to define a standard so that the language can be verified against such a standard. Nobody like surprises when a nuclear power plant goes boom or a machine don't stop when an operator does shit. Such a Python would be very different to the Python we know. 
That Keysight needs to spend more resources on software. Trying to figure out how to program their instruments is a lot harder than it could be.
Bad bot
I was going to kill you fast, with bullets…or neurotoxin. But if you’re going to pull stunts like this it doesn’t have to be fast. So you know. I’ll take my time. *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
Relevant: https://youtu.be/dYBjVTMUQY0
Bad bot, seriously, why?
Unbelievable. You, Wilfred-kun, must be the pride of [Wilfred-kun's hometown here]! *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
Soooo.. What if you're not using Jupyter?
Depends what you want to do. Sometimes it's just fun to make your own little thing instead of using someone elses. 
It's kind of crazy to me that i haven't been able to find this kind of software online... You might be able to sell it lol if you make it .exe
I've got it since that #1 post and it's really good! I did do the codecademy course but i feel like i'm actually being taught how stuff works instead of just a few contexts in which it can be used
I imagine you can still do most everything with an editor and a shell
I'm currently in the process of rewriting a discord bot for the third time. Since the 2nd version is working just fine, there's no rush so I'm experimenting with different ways of parsing data, storing it, modularization, and how I can tie it into an existing flask app for both discord and web data displays. I'm also hoping Santa brings me a Raspberry Pi this year so I can begin figuring out how to "deploy" the entire package to the pi whenever I push updates. I think I'd also need to figure out how to let the pi work as my web server without compromising my home network. Gonna be a fun winter break after the shit show of a semester I just had.
Super useful if you're in math or science. You can do tons of stuff with SciPy like calculate derivatives in a flash, linear systems, statistics, ODEs, and graphing. There's also things like Pandas for crunching big data sets, like csvs. Python isn't very popular at my University, and whenever I need to do a one time task, I can usually get it done 4x faster than others on average. It's also great for solving reoccuring tasks.
Should just be &gt;=1.0.1, &lt;2
I'm a grad student (bioinformatics) and I use it everyday. 
Does it involve numbers? Are you doing it more than twice? If yes to both, python is probably useful to you.
But a callable can be any function you want? Including a really complex function that isn't a one line wonder. You're not obliged to use a lambda.
Who said IoT has to be that either?
bad bot
Well, you broke friendly-bot's heart. Congratulations. Was it worth it, ultrabowser? ☯﹏☯ *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
bad bot
I think we can put our differences behind us... for science... you monster. *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
It's useful in several ways: web scraping data crunching, web development, scripting, etc. If there's a task you need doing that requires a computer, there is certainly a way to do it in Python. A couple of examples: 1. Send me a new concert in my town is announced 2. Format all my music files to have the same filename structure 3. Get the latest data on Bitcoin and other cryptocurrency trade values 4. Build a website with a Python backend (Django) If you read around /r/python, you'll surely find other use cases. 
bad bot
I am at a rough estimate thirty billion times more intelligent than you, ultrabowser. Let me give you an example. Say a number, any number. *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
4
Wrong. You see? *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
In a method chain, you may not have a reference to `df1`. e.g. (df.assign(a=df.b + df.c) .loc[lambda x: x.c &lt; 10]) 
To ignore numpy and matplotlib as tools for data science is beyond ridiculous
&gt; IPython (which I love) is an alternative interpreter for (C?)python iPython is an alternative **REPL**. Other interpreters include jython and ironpython.
I believe [https://darksky.net/!](https://darksky.net/) does
There certainly was thanks very much.
Sorry, my mistake -- new to all this nomenclature, I assumed (wrongly) that cython and ipython where short hand for cpython and ironpython respectively. My question just boils down to the GIL, and wether you feel you'd be able to further increase your codes performance navigating to a python implementation that doesn't have to work within the GIL's bounds :). 
This device isn't a replacement of a plc. It is an easy to use multi protocol data acquisition unit that make industrial data acquisition easy and ready for the cloud. I agree with you that Industrial implant control need to be based on plc and proper industrial devices. 
If you're not already a data scientist by profession, you should explore that option. Remarkable effort to showcase your talent. 
Run pylint/pylint3 on a bunch/all of your code. It will warn you about things like VariableName vs. variable_name, run_this == True vs. just run_this, and a whole slew of others. Obviously not complete, exhaustive, and won't teach you how to write a full GUI application in a one line list comprehension but it can be a good place to start building good habits particularly in areas where you might not even know that there is a preferred way. May be particularly useful if you come from a Java or C background but is also a good learning tool for people new to programming. (There are other "linters" out there as well--I've just found pylint3 to be extensive enough even when I disagree with it.)
You need to add `()` to the end of a function name to call it. You also need a `return` statement to send data back to the calling point. import random def Welcome(): print ("Welcome back!\n") print ("Dealer got the Cards X &amp;", Draw_Card()) print ("\n") print ("And you got the Cards", Draw_Card(), "and", Draw_Card()) def Draw_Card(): return random.randint(1,11) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. print (Welcome())
When calling a Def function you need to end it with () so Draw_Card() 
Effective Python is your best bet if you want to level up quickly.
Oh, Thank you very much! :)
&gt; import random &gt; &gt; def Welcome(): &gt; print ("Welcome back!\n") &gt; &gt; print ("Dealer got the Cards X &amp;", Draw_Card()) &gt; print ("\n") &gt; print ("And you got the Cards", Draw_Card(), "and", Draw_Card()) &gt; &gt; def Draw_Card(): &gt; return random.randint(1,11) &gt; &gt; print (Welcome()) Ok, i will remember this :)!
And a virtual environment!
Just my thoughts as well
Yah, the man most matching the description is [Travis Oliphant](https://en.m.wikipedia.org/wiki/Travis_Oliphant). 
I think he means ICS. Which can already be wrapped in TCP. And are. Without SSL. /shudder
(for context, I'm a Data Scientist and begrudging web developer) For me it depends on the project, and each part has a slightly different approach. # Python Installation If you want the quick and easy way that has cross-platform support use [Anaconda](https://anaconda.org/). This will install python, numpy, scipy, a ton of different libraries and tie you in to their accessible ecosystem. Cons: you're kinda stuck with Anaconda unless you know what you're doing. (Recommended approach for Windows development) If you're on linux, python will come with your distro and depending on repositories you can install specific versions pretty easily. # Environment Management If you went with Anaconda, it uses its own tool called `conda` to manage dependencies. It's basically a version of `pip` that pulls in from their repos. If you're using your distro's python version, you can install pip and install things that way. Either way, you'll want to look into Virtual Environments to keep your workspace from getting cluttered. While virtualenv is the de-facto tool that most people use, [pipenv](https://github.com/pypa/pipenv) is now the officially recommended tool. For small projects I usually just rely on system-wide pip installs, for larger ones I definitely make a virtual environment. # IDE's For small projects I use neovim, for larger ones I use [pycharm](https://www.jetbrains.com/pycharm/), for data science I use [Jupyter Notebooks](https://jupyter.org/). Other IDE's exist, but those three are enough for me. # Testing [PyTest](https://docs.pytest.org/en/latest/) is my go-to unit testing framework (and it just got a big update). It's super easy to write tests with it, and I use it for all my projects. # Version Control Git is pretty dominant in the python community, most open-source projects are hosted on github, and the python source code itself is now hosted on github. --- If you have questions feel free to ask!
Holy crap that is an excellent last name
the *most* important??
"blockchain ready"
1) no details of errors 2) no existing code provided 3) no explaination of whats been tried to solve the problem
[This dude is by far the best I have seen on youtube. And he has stuff for beginners and experienced people as well. So, check him out.](https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ)
Not to mention that numpy can be used on clusters while pandas is practically useless in that area.
The article is about Pandas which Wes McKinney wrote. I don't know if I agree with "the most important tool in data science", but to credit its development to Numpy's developer is absurd. By your logic, shouldn't it be Guido Van Rossum that receives the credit for the development of Pandas? And, with all of the C used by Numpy, maybe Dennis Ritchie should be credited instead?
Attention Reader: Reading Comprehension Helpful. The description "The most important tool in data science" does not match the object: Pandas, thus does not match Pandas developer's identity as creator of said "most important too". 
Making a R equivalent in Python is most important? 
I'm working on a project to help developers get live help from experts on specific problems they run into when writing software (where StackOverflow &amp; docs aren't helping). We're writing our app's backend in Python, specifically using Django. We're actually running an experiment with it this weekend, just using Slack as an MVP. If anyone is working on a project using React, Redux, Python (specifically scraping, pandas, Django) or SQL domain modeling, and run into an issue, we'd be happy to help out. 
&gt;I'm just wondering, how useful is python programming actually on a day to day basis? Not an easy project is to use NLTK to sanity check papers but trivial is finding excessive fragments of text by tokenizing and looking for too many "therefore in conclusion" (or similar fragments). Otherwise, I know a Uni student got dismissed for this, but on a smaller scale you could try to write a script to bid/request for classes. At home I have a bunch of python scripts that hit my other online presence accounts (stackoverflow, reddit alts, etc) looking for specific words or just being called. Also at home I have ~30 webcomics and blogs I follow that hit each source 1-2x a day to check for updates and if their are updates, is it something I want to read? More professional setting, I have a WX widget tied to AWS that allowed me to right click an icon on my taskbar and either open a browser or a ssh terminal. I never released it because it had a couple hardcoded points to automatically add my current IP to the AWS firewall rules. That said the script was technically &gt;200 lines (using wxpython and boto which are not small libraries). Last one, before I retired, I used to have scripts check my balances and tell me what my daily "burn" was. Was I spending too much on frivilous stuff like coffee or such? This was a major problem because I traveled a lot and while I kept recipiets it was a lot easier getting an SMS "You're being stupid with your money". Even $20-30 can add up quick at the end of the month. Summarizing, python is a fantastic language that has a wide enough third party library ecosystem that is mostly a sky the limit kind of deal.
This is inspiring. Thank you for the post! I'm learning MI at the moment and it's beeb a humbling experience. It really put into perspective what intelligence is. 
Leaving the unnecessary superlative aside, I feel like this takes a lot of credit from Jeff Reback who is at least as responsible for the pandas we have today. Pretty crappy if you ask me
They could have avoided all the triggered commenters here by dropping the hyperbolic headline. Why even try to make such a claim? Just appreciate the guy for his efforts...
Cool, thanks! I hope you have a great day!
I work in a secure (air gap) environment daily so I certainly feel the pain. What helps is that The Powers That Be have Anaconda on it so I do not have to deal with *everything*...except that it is a 5 year old or so version... But my strategies vary. First and foremost, for my own codes, I try to avoid dependancies when I can. For example, `tqdm` is awesome! But I can get 90% of the functionality (though way less pretty) with a few lines of my own code. So, I make a wrapper that tries to call `tqdm` but otherwise uses mine. For some things, I simply copy the directories and add them to my `PYTHONPATH` environment. Mostly works though a few things break. Sometimes I try to add those dependancies while other times I modify the code if I do not need that function (and note it somewhere so if something breaks in the future, I know). Otherwise, I have used a clean `virtualenv` and used what it installed there and then upshifted what I needed. With all that said, It is far from a clean and/or easy process. I am going to check out some of the leads from other responses too!
Currently working as a data scientist :) I switched to Harvard Extension's master's program after being unsatisfied with a local university and could not be happier with it. This is the 2nd of 6 data science courses so I can't help but feel I'm merely scratching the surface at this point. I'm super excited to see what else is possible!
&gt;For example - will most go with ViM or a full featured IDE like Wing? This one seems split 50/50. I'm on the text editor side. &gt; Do people tend to setup Virtualenv Yes, nearly always. Either that or conda (for conda-type applications). &gt;and Nose Not as popular as py.test. &gt;Git the source control tool of choice here Absolutely. &gt;What else do you set up from the start. Sometimes pyenv,
I would really love to because I can imagine how useful that would be for encouraging beginners, but I'll have to scrub the identifying bits of the code quite a bit. I'll have a crack at it over the weekend
What about check_mk for monitoring? Python 2 only but file based only (no DB) and I've yet to see something more comprehensive and extensible.
Err by what reasoning? I use pandas on HPC clusters all the time.
I'm getting the same issue on the latest release of intellij using the python/pycharm plugin. All works fine on the command line using anaconda environments but it looks like the version or whatever they run internally to debug or run via doesn't like the virtual env for this dll. I can get pandas stuff and numpy to work in other scripts but this thing I'm using right now has statsmodel code in it and it just won't run, very strange. have you tried raising this on the jetbrains forums for an answer?
Oh just wait. You've already scratched extreme value with this.
I used Pygame and it works great. Thanks everyone.
Try The Net Ninja on YouTube mate
Anaconda has an enterprise product which allows managing your own anaconda repositories.. However, this is not free. We have one "official" conda env, that I deploy as zip file. It is always "installed" (unzipped) to the same path on c: and can therefore be referred to by start scripts.. I have a central repository of cmd files, which start jupyter notebooks, etc. all from the one conda env.
Yes. Jeff has now contributed more code than Wes and might have spent more time overall on pandas as well. He makes great informative answers on Stack Overflow as well. Wes has barely contributed any code at all to pandas since 2013.
when the course starts with "Here I’m assuming that you are familiar with basic Calculus and Machine Learning concepts" :(
Hahah, he was the first one that I really learned from
What's the `var: Any` annotation shown in the PEP mean?
I really like [Corey Shafer's](https://www.youtube.com/user/schafer5) videos. I must have read/watched a dozen or so tutorials on OOP before his video finally made it click.
Why not just use the terminal? Also vs code is pretty similar to atom but comes with a built in terminal. I've never used hydrogen so I can't be of any help.
Great write up, thanks for sharing it! 
?? Pandas has extremely good interaction with different threading, multiprocessing, and deferred action tools. Pandas + dask is bomb. And I'm a numpy enthusiast who never uses pandas.
[html5lib-python 1.0 released!](http://bluesock.org/~willkg/blog/dev/html5lib_1_0.html).
What kind of consulting/industry do you work in? Trying to do the same thing :)
You can't even congratulate a good project these without somebody getting butt hurt and complaining BUT WHAT ABOUT THAT ONE?! Yes, numpy and matplotlib are important too.
The headline is silly. Pandas is great and has a lot going for it. Other programs like numpy, Scipi, matplotlib, and many many others have all also been very beneficial for users within the data science community. We can appreciate the man behind pandas but we don't need to make sweeping headlines. Even small packages can help in big ways. 
Ah, I use SQLAlchemy in my day-to-day, so I wasn't sure if this was necessary to do on top of what was already obfuscated for me.
Now slap it in a Telegram bot and monetise your creation!
Last time I submitted a credit limit increase to my credit union I requested it raised to $5555.55. They just gave me $5600 :(
Writing a mini web crawler/scraper framework with asyncio. Like scrapy, but faster.
This is great news. I convinced my company to embed python in our .net program for extensibility and they went with IronPython for the integration. Its been fun interacting with the applications .net hooks within Python, and teaching the development team about Python usage and idioms. Getting some new life into the project will be great! 
That's what you get when you claim something is the most important tool in a field. 
Try /r/learnpython. Show them the code you have and describe where you are stuck. That link requires authorization so don't just post that; copy your work and the assignment over. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Yes ... because, as a language, R sucks. That's right ... and you heard it on /r/python first ;) The fact is that R stole the dataframe idea (from S, who stole it) from SAS ... and did it better. And pandas/python improved on it even more. 
Oh, pure IT. We have a small gang of programmers and take on projects for smaller businesses, anything more complex than the average CMS job, and we also hire out our staff to larger businesses, working on more long-term projects. Everything from WebGL applications to healthcare apps, cloud infrastructure management to security analysis tools. Huge variety of tasks and challenges, and something to be learned every day.
This is awesome! Thanks for sharing!
Clicks, money
That’s how I started! Keep at it and it will gradually become easier and easier. Don’t get me wrong, you will *always* be learning but its different than at the beginning. Best of luck!
He's the guy that got this whole using Python for matrix algebra started in the first place.
For me it depends on the project, As for IDE I've used notepad++, pyclipse, pycharm or a jupyter ntoebook depending on what I'm trying to do. At work usually I'll use pycharm unless it's a small change I need to make. if it's scrap code to test out an environment or script a one off test. If it's a small change I tend to use notepad++ to just make quick changes. For packages I usually install whatever I need to work on a specific project, it's fast enough to install packages I don't typically install pip packages until I need whatever they provide. I know it's pretty uncommon but I usually don't use venv, typically I don't have enough conflicting package requirements to bother using it.
Just chiming in to say that some IDEs (PyCharm, although I have just began using it recently) will handle creating and managing a virtualenv for you in a Python project. Really handy
I switched from Vim to PyCharm recently just to test things about and it's fairly painless on Windows from my experiences so far. The only times Python gives me headaches on Windows is when I'm dealing with file encoding, text processing that's sensitive to line breaks, spacing, etc.
Check out [Derek Banas](https://www.youtube.com/channel/UCwRXb5dUK4cvsHbx-rGzSgw)
I'm working on a simple blackjack game using tkinter for a school project. I'm pretty new to python but it seems pretty easy to pick up, I gotta find more projects that are actually useful to me
It's a paid course.
no this is 100% free, enjoy !!!
you can code any text editor this is just the collection of issue and solution
Please post this to /r/learnpython
To bad you represent a majority of the community, but fortunately your leadership and specifically Wes don't agree with you. Python does some things wonderfully and some things well not so great i. e. Deployment. R is a great option for statistics and data science and so is Python. Also I prefer the lexical scope of R over S and am thankful for the Scheme parts. To bad they didn't just make R into a full on Lisp. Also I prefer the open source license that has made S+ and SAS to lose marketshare. Also Microsoft and all the companies that invested and bought millions into R kind of proves that its a great language and a reason why it's a top 10 language after its huge growth from way in the back. 
Yea this thing sounds like a glorified rasp pi with an ardunio board. I don't understand why you want ladder logic and python code. It seems strange. Or i just don't know enough about plc programming? 
Then plug an ardunio into a raspi and have that collect your data on serial console. By this method, I'm able to collect analog data from my insturments.
IIRC, urllib is a steaming pile shit API wise. Can you not use requests?
This is a good solution, although I can't install redis it's a work computer, and I'm not allowed admin access. I think that having x threads convert x amount of xls files to csv then read it using the pandas c bases parser might speed up the process. Also I'm thinking of using concatenation vs appending, I think the former doesn't check dtypes if I'm not mistaken. 
Or an over engineered calculator for calculating how to split bill for a pizza.
&gt;IoT: **Internet** of Things. The name? 
thanks! you might want to check out abbyy it's around $300 but does the same thing.
Every time I try to learn a bit of R (I have no real need, just resume stuffing), it's just.... _ugh_. Unpleasant. 
_Meet the man behind one of the okayest, rather goodest, pretty nicest tools_ doesn't have quite the same punch. 
Just "one of the most important" would have been fine
&gt; &gt; all ports open and a default account with the password being "admin", if you're lucky enough to have a password?
Couldn’t agree more. I’ve asked a few questions on SO and Jeff has responded within an hour each time... pretty amazing dedication.
Congratulations != claiming it's the most important tool in its field
1: /r/learnpython 2: we won't do your homework for you 3: format your code properly - 4 spaces in front of each line
okay thats understandable. Any pointers on where to go next is what im looking for mainly. I tried converting the str in the list to int and nothing and then reading individual lines in a while loop thats inside another while loop that reads until no more lines. But nothings worked so pointing me in the right direction is good enough.
The article states that TwoSigma hired Wes to basically make sure work on Pandas continues, yet Wes barely contributes? 
First, read the input file as individual lines and store each line in a list. You are currently reading the entire file as a string, which will be much harder to work on.
You are looking for an implentation of the Quine–McCluskey algorithm. There are at least six around. It is basically a systematic Karnaugh-map search, and will always find an optimal solution. The algorithm is O(3**n * log(n)) - if you have more than about 20 inputs, you may need to fall back to an inexact heuristic search
Bad bot
Your name is *Gwolf4*?? (•_•) Wow. What an incredibly stupid name. **Gwolf4**. GWOLF4! Gwolf4, Gwolf4, Gwolf4, Gwolf4, Gwolf4, Gwolf4. You know when you repeat a word so often, it starts to sound like gibberish? Well, I didn't. Until now. Your name is so stupid, it gave me semantic satiation, *gwoLF4*. *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
 In terms of scoping for R ... it sucks. Consider the example below ... where the returned value is randomly global or local . It's part of this article with pessimistic comments from someone who is one of the early founders/pioneers of R: https://www.r-bloggers.com/%E2%80%9Csimply-start-over-and-build-something-better%E2%80%9D/ &gt; One of the worst problems is scoping. Consider the following little gem. f =function() { if (runif(1) &gt; .5) x = 10 x } &gt; The x being returned by this function is randomly local or global. There are other examples where variables alternate between local and non-local throughout the body of a function. No sensible language would allow this. It’s ugly and it makes optimisation really difficult. This isn’t the only problem, even weirder things happen because of interactions between scoping and lazy evaluation. I've programmed in SAS, S+, R, and Python. And IMO all of them suck except for Python. The only advantage that R has on python is the depth of the statistical libraries. That advantage is quickly disappearing just as the advantage R had in graphical/visualization libraries has disappeared. If there's one thing that I've noted from the time I started programming (1980) it's that archaic and unexpressive languages will die or slowly diminish to the backwaters. Python is one of the few languages I've ever used where 4 out of 5 times I can begin using the library without even looking at the docs. If the library is written to be pythonic ... it basically works as expected since it adopts python's established iteration, indexing, and slicing conventions. Try using zoo or some other R package (one of the other 5 crappy timeseries packages) without documentation/reference. It's a nightmare verging on "disaster". 
Downvote for click bait. We're professionals, and Python isn't a fad language. it's a productivity language, not a Gawker click farm
[removed]
🤔
The name is a bit inaccurate. Sorry. 
Did my phd on a 1280x1024, now still at 1920x1080... 
Seems like I know nothing about python...
A common error when running things via task schedulers is that the scheduler doesn't have the same "environment" as your local session. Things like PATH, environment variables, etc. You may need to add a batch shell wrapper to your python script that sets up the needed environment and then calls the Python script inside it. And it can help to use fully qualified paths like: C:\fullPath\To\python.exe C:\fullPath\To\myscript.py If you are using a Python virtual environment be sure to activate that in your batch script "wrapper" as well.
I'm a heavy user of R for Data prepping, model exploration, and report generation. I think R as a language has major flaws, but R has such great packages that make it a powerful tool. I could use python, pandas to replace certain tasks, etc but I never find the need; everything that python does better than R for some task, R works easily enough with the aid of some package(s). I can still do things like nightly run some job to pull data out of our CRM system, transform the data into model features, output a probability number, and then send a post containing a csv to an endpoint set up by our netsuite admin using R and internal packages to bundle my code. On the other hand I find R to be more expressive, more functionally leaning, and non standard evaluation to be very helpful in improving readability. What I miss from python is the better namespacing.
David Beazley
David Beazley
Ohh that's right,i totally forgot about the quine mccluskey algorithm,i was thinking about a kmap implementation,but now that you mention it using the quine mccluskey is the way to go indeed,thanks a lot.
I develop Python 3.6 in a Linux Mint 18.3 virtual machine using Virtualbox on Windows. I use: 1) pyenv to install my "user land" Python installation to avoid any interaction of my development Python with the system Python (https://github.com/pyenv/pyenv) 2) The built-in venv (in Python 3.6) to create virtual environments (https://docs.python.org/3/library/venv.html) 3) The free VS Code application as an IDE (https://code.visualstudio.com/) 4) The Python extension for VS Code (https://marketplace.visualstudio.com/items?itemName=ms-python.python) 5) The pylint linter installed via pip in my virtual environments which VScode picks-up on automatically if it is installed (https://pypi.io/project/pylint/) If you are doing scientific work then Anaconda (https://anaconda.org/anaconda/python) can be nice but it is quite large because it includes so many packages. If you want the "conda" experience but want to pick and choose packages you can go with MiniConda and add packages yourself (https://conda.io/miniconda.html) 
I develop Python 3.6 in a Linux Mint 18.3 virtual machine using Virtualbox on Windows. I use: 1) pyenv to install my "user land" Python installation to avoid any interaction of my development Python with the system Python (https://github.com/pyenv/pyenv) 2) The built-in venv (in Python 3.6) to create virtual environments (https://docs.python.org/3/library/venv.html) 3) The free VS Code application as an IDE (https://code.visualstudio.com/) 4) The Python extension for VS Code (https://marketplace.visualstudio.com/items?itemName=ms-python.python) 5) The pylint linter installed via pip in my virtual environments which VScode picks-up on automatically if it is installed (https://pypi.io/project/pylint/) If you are doing scientific work then Anaconda (https://anaconda.org/anaconda/python) can be nice but it is quite large because it includes so many packages. If you want the "conda" experience but want to pick and choose packages you can go with MiniConda and add packages yourself (https://conda.io/miniconda.html)
A course management system using flask, sqlite and material design.
This has nothing to do with Rekognition. This is just a novice question about code architecture and flow. There are a ton of ways to proceed. As you write more, larger programs you will find what makes sense to you and, most importantly IMO, what is most maintainable and bugfree. You can certainly start the way you describe, and expand the if statement. Are the faces a small, static set? A dynamic set you get from another data source?. If I was building something where the array of faces was small and known(e.g. my family and some friends), I'd think about making a dictionary where the keys are the peoples names and the values are functions. Then I would make a function for each possible action and add them to the dictionary. ` def friend(): print "friend!" def foe(): print "foe!" { "FaceId1" : friend, "FaceId2" : foe, "FaceId3" : foe } resp = client.search_faces_by_image() my_faces[resp["FaceMatches"][0]["Face"]["FaceId"]]() But there are a ton of ways to do this 
Pandas: A wrapper for 2d numpy arrays with labels, stats methods from R, and orders-of-magnitude slower indexing/operations.
Normally I'd suggest debugging with pdb, but since you're running from a task scheduler you'd never be able to attach to it. What you should do now is just insert a bunch of debug prints to figure out what's going on (or write the prints to a file if you don't get stdout). To start off with, I'd suggest figuring out what ENDPOINTS contains and why endpoint isn't in it.
exec(str) As a bonus, it'll do parentheses and functions like sqrt assuming you imported them. It's totally unsafe, but it works. If your use is malicious, then bad idea, but if they are you or some other coworker that isn't trying to hurt you/someone else, by all means.
Under different branches. Wes details his projects and Pandas contributions in this post: http://wesmckinney.com/blog/outlook-for-2017/
Yea the generator is an object and it stores its closure so it can pick up where it left off. Basically it saves the stack frame.
Hello, 1. Python is indeed a very good language to use for AI building. There are well built packages such as scikit learn and tensor flow that should make many things easier. However a notepad is sufficient for most things. 2. You don't really need to input the program anywhere on the web. Take a look at serpentAI. 3. Image preprocessing is an option. 4. Online learners or evolutionary algorithms do so.
If you store all the primes you’ve generated as you go you could. You could also do the [sieve of Eratosthenes](https://en.m.wikipedia.org/wiki/Sieve_of_Eratosthenes). Keep in mind that one of the main benefits of generators is that they have low memory overhead (assuming you’re going to eventually go through the entire generator) so the more state you save the less benefit you’re getting.
**Sieve of Eratosthenes** In mathematics, the sieve of Eratosthenes is a simple, ancient algorithm for finding all prime numbers up to any given limit. It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2. The multiples of a given prime are generated as a sequence of numbers starting from that prime, with constant difference between them that is equal to that prime. This is the sieve's key distinction from using trial division to sequentially test each candidate number for divisibility by each prime. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/bigdata] [Introduction Scrapy : scraping data from internet (free)](https://www.reddit.com/r/bigdata/comments/7ilzb4/introduction_scrapy_scraping_data_from_internet/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I can see you are not an Analyst of any kind.
Hey everyone, This is my very first Post ever on Reddit. Long time reader, short time user. I really need help with something. I have an acquaintance that claims that his niece has a ton of Bitcoins stored on a hard-drive of an old computer that he has in his possession. From what he tells me is that she created the password and cannot for the life of her remember what it is. He told me that they can access the computer but just can't get to the Bitcoin. She received the Bitcoin back in 2009/2010 era. When Bitcoin was around a quarter. Any idea how she would have stored the Bitcoin on her hard drive? Now from what I deduct I believe it was not her private key that she lost but a passphrase blocking her from getting the private key. Also from what I gather it may possibly be 1 to a few words. Is it possible to brute force our way in? I am getting an S9 antminer next month, is it possible to use that to help. Big noob over here! Any help is more than appreciated!!!
Thank you. I'll delete the post, thanks again.
Cool writing! Could you please share more of the code? I'm interested in your implementation of methods and classes like `svds()` and `GridSearchCV`. Also, how do you perform Ridge Regression for computing baselines? Looks like you're using sklearn's `Ridge()`, but it's not aimed to optimize problem with two variables (b_u and b_i). Apart from ALS that you mentioned, Koren &amp; All train baselines with SGD and L2 norm regularization, perhaps that's what you mean by Ridge Regression? I see this very often but beware of 'SVD' for recommendation, as introduced in the BellKor papers: it's quite different from the linear algebra SVD result, in particular because the matrix that you factorize is extremely sparse. Traditional SVD is only defined for dense matrices. I made a [series of blog posts](http://nicolas-hug.com/blog/matrix_facto_1) about this if you're interested. As a side note, yhave you used (or considered using) [Surprise](http://surpriselib.com/)? It's a Python RS scikit that implements all the techniques you mentioned in your post.
I love pandas but it is slow af. 
I never realised he was so young
Not sure why anyone would think this is post-worthy on a sub like this. `import time import os import subprocess print("Welcome to Live Protect") time.sleep(1) print("Your code is X1124Z") PROTEC = input("Input code to enable live protection: ") if PROTEC == 'X1124Z': subprocess.call(["shutdown", "/s", "-t", "10", "-c", "Enabling Protection"]) else: print("That is not your code.") time.sleep(1000) `
This
And, while Wes and Jeff have done a huge chunk of the work, there [are many other people](https://github.com/pandas-dev/pandas/graphs/contributors) involved as well, including some who have contributed regularly over several years - see the graphs for jorisvandenbossche and TomAugspurger, for example. The idea of a lone genius makes for good stories, but a lot of effort goes into keeping things working, and unfortunately it's often a fairly thankless task.
Short answer: yes. Long answer: how long are you prepared the wait.
Oh, it's snowing on that site.
:) just a feature
Of course.
I get bored of boilerplate all the time, but that's the price we pay for consistency, like typing `self.` a thousand times a day in a typical Python program. It's annoying, but I understand why it's there. If we take PEP 20 "Special cases aren't special enough to break the rules. Although practicality beats purity." I guess I am much more heavily favouring the first sentence here than the second.
&gt; The decorator clearly marks it as a non-standard class Which I don't think is a good thing either. _"This guy changed the semantics of a whole class with just 1 weird annotation. Programmers hate him!"_ I've read the PEP and the rationale and I simply disagree with it.
That's not true, actually. Jim Huginin wrote Numeric in about 1995, which was forked into numpy by Oliphant. Oliphant may be more important in the history of scientific Python tooling, but he wasn't the first to create a fast Python library for matrix algebra.
We also hired Jeff.
scra-pee or scra-pie?
The 's' is silent. 
AI major. Used it a lot for ML (neural nets mostly), web development (mostly flask), scripting (I use py3status for i3, also vim scripts) and in the past game development (though last semester I had to use java... Yay)
So basically you don’t know how to pass a variable as an argument into a function?
Rape-y? Or rap-ey?
:) i do not know either
Find a module in the docs, then click the "Source" link at the top to see the source code in Github. I've learned a lot from reading how Python's authors write Python
He stopped major involvement in pandas at the end of 2012. Did some work until mid-2013 and zero commits from there until present except for a handful in 2016. https://github.com/pandas-dev/pandas/graphs/contributors
Why use scrapy over BS4? 
Worth noting that for most web scraping I would initially recommend to go for Requests with BS4 / LXML. Scrapy is primarily useful in scenarios of extensive web crawling, but it comes with a lot of bells and whistles that you don't need for most web scraping tasks. 
scrapy is frame work, it do : download, save to file, extra process, multiple thread ... --&gt; much more save effort than BS4. BS4 just a HTML parser not more :)
Interesting. Thanks buddy! I'll check out your course on out.
I could say, almost company which serious on scrape the web all use Scrapy.
Er, matplotlib is given a shout-out halfway through the article.
So Lisp and Scheme scoping sucks okay I'll engage in the intellectual argument. Them Lisp people are so dumb. I think you might be wee bit bias. 
I dont actually understand why this module is essential. Doesnt beautifulsoup, requests, lxml and timer modules do by themselves. What is better here?
For example how do you download with 64 thread in parallel ? it not easy you do it your self. That just one point, in short Scrapy is complete frame work, it provide every thing you need in order to scraping in fast way.
&gt; For example how do you download with 64 thread in parallel ? With Threads + callable workers and Queues? Or with some more complex stuff create multiple worker processes and utilize RabbitMQ?
Any option to mimic actual browser requests (headers, user agent string etc?).
:) Yes, you are correct, but the main point of using a framework is you NOT need to do it your self every thing :)
Scrapy has a learning curve but when you get it , it pay off a lot.
Yes, of course
&gt;I don't understand why you want ladder logic and python code. It seems strange. Or i just don't know enough about plc programming? You wouldn't. Ladder logic is really just coding for people who don't know how to code, and almost exclusively represents a series of if/then statements. Similar to LabVIEW in purpose.
Like who specifically? I've worked for a few companies that did this and this is the first I've heard of it.
Dan bader
I have had good luck using hashcat in the past. It scales to multi gpu very easily, and is pretty easy to get going. It is just a script, so you don't have to install it, and it has no dependencies.
Base R is harder than python. Tidyverse R is very clean and easy to work with.
yeah no. Who _really_ seriously wants to scrape the web uses Apache Nutch..
it gets the endpoint from a file called "ovh.conf" in the same directory that it runs in. Endpoint being what ovh server e.g. ovh-eu, ovh-us, soyoustart-us e.t.c
Please do not think that I vote up for Scrapy so much. I also have a course do with BS4 and Selenium on Udemy. So I understand the both solution. Just go on Udemy and search for course name "Web scraping: doing 20 real web scraping projects"
How would i set up the environment in the batch file. Do you mean as in going to that directory before executing the python script and i already use fully qualified paths.
Is the only way to use it via your website?
Yes, Apache Nutch really powerfull one. Thanks
I publish on Udemy also, but it will course 20$. I do not want that price.
Exactly. I'm fully okay with using Ladder logic programming because I don't want to deal with reading my coworkers code. I have a hard enough time to knowing what they fuck wrote when they program on the PLC. Then you fucking idiots who say "Programming is self documenting." I shouldn't have to hear a 50 year old man say that. NEVER. 
by the way, to prove I understand what you mean, I have a course on Udemy which do with BS4 + Selenium (I could say Selenium better than Request for one important reason) https://www.udemy.com/python-master-web-scraping-course-doing-20-real-projects/learn/v4/
Good frameworks save you from writing a huge amount of boilerplate code without regimenting you such that what you're trying to do becomes tortuous or impossible. Bad frameworks don't save much boilerplate and regiment the hell out of what you're trying to do, making it tortuous or impossible. I only tried scrapy once, many years ago, and it might have improved since then, but it fell squarely in group two.
Most of the time, I prefer requests lxm and bs4 over scrapy just because it is faster and simpler to write it but scrapy save my life in big projects with its broad features.
- sentdex, codingforentrepreneurs
I use sagemath and/or sympy as a free alternative to mathematica in my math classes. Pandas, scipy, numpy, matplotlib and embed my python code into my lab reports. Also I get nerd cred for knowing how to program.
For sure, I should have mentioned all the other 1000 odd contributors - without the incredibly vibrant open source community, Python would be irrelevant. 
He's working on Pandas 2.0 as far as I know, my comment certainly wasn't meant to demean Wes' contribution!
Personally, I just can't handle the dots in variable names.
Yeah! I actually thought "I won't be needing this, I can read the book on the website. Got plenty of references." Boy, was I wrong! He explains things very well on the video so all I have to do is write the important points on my notebook like I'm in school. Learning is a breeze. If I want more info on a particular topic, I just open his website and browse or consult the Python doc. Thank god for this and for people like him. I'll check out Codecademy too. Many success stories I've been reading here on Reddit mentioned Codecademy lol
Thank you!
Oh i hate codecademy lol don't do it All the reasons Automate The Boring Stuff is good are the reasons codecademy is shit
I don't think any work has been done in pandas 2 - https://github.com/pandas-dev/pandas2
lol got it. Thanks!
You can also write your own web server while you're at it. Doesn't mean it's productive to go ahead and write one. If your use case requires doing something where you'll be reinventing the wheel I don't see a reason to not use scrapy.
Covered in good detail here: https://stackoverflow.com/questions/19687421/difference-between-beautifulsoup-and-scrapy-crawler
Why not just use requests and BeautifulSoup?
- Is ipython working from terminal? - Are you sure the ipykernel (you are referring to) is ipykernel 3.x? - Is it working from Jupyter? (this can be skipped if you don't want to install Jupyter) - What code are you trying to run exactly? I use Atom/Hydrogen pretty much (also in use at the moment), but I have no idea based on your description. I use Arch Linux, in my distro Python 2.x and Python 3.x is distinguished (Python 3 is the default), but on some system Python 2.x might be the default (I do not know anything about Fedora). I have the python-ipykernel installed for iPython 3.x, and python2-ipykernel can be installed for iPython 2.x. I do not know the Fedora package naming. In a new Atom session after setting the lang to python I just hit CTRL+ENTER, I got a blue bubble about the kernels and I can evaluate lines, blocks... - Have you saved the file (though it should work on an untitled document if the language is set)? - Do you use MagicPython? (it has to be specified as python in the Hydrogen settings to work as Python)
Huh what happened about that? I see he is mainly doing apache stuff 
Scrapy is more of a framework type of deal
Peep the post edit
Did you look at that example? How can *anyone* defend that behavior? That's right ... you didn't defend the behavior, you created a strawman ("Them Lisp people are so dumb"). To look for bias, perhaps you should look in the mirror ... because avoiding the point and creating strawman arguments is a sign of cognitive dissonance whereby you have a bias to maintain a view despite the evidence. Aside: I realize that you are a non native speaker, so this is not meant as a criticism, but a English help. In several places you've used "to" where you meant "too". "too" = "also" or "higher degree" where "to" describes a destination or direction. In terms of your usage: It's "too bad" not "to bad". 
Example project: https://github.com/develtech/django-slugify-processor ([docs](https://django-slugify-processor.devel.tech/en/latest/), [pypi](https://pypi.python.org/pypi/django-slugify-processor)). Usage of ``import_string``: https://github.com/develtech/django-slugify-processor/blob/v0.8.4/django_slugify_processor/text.py#L55 This ``slugify``function override's Django's [builtin slugify](https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#slugify) template tag, and can be used with ``AutoSlugField`` from django-extensions and django-autoslug. It allows custom functions to be added to a pipeline for custom slugify cases, e.g. "$" -&gt; "USD", or "C++" -&gt; "cpp". After the custom functions are finished, it uses Django's default slugification.
I've never heard of tidyverse. Thank's for the reference. It appears that it is a base set of libraries designed for more consistent and better interoperability. Is that correct? If so ... it would be very helpful. 
Look into Mimikatz on Windows too.
Yelp is super aggressive with bot protection ranging from user agent, IP checks, request frequency, navigation paths. It's pretty sophisticated. They take protecting their data seriously. You can code something and it might work on your local machine but as soon as you deploy it to, say AWS, it gets blocked within seconds. They are constantly at odds with review/reputation management services like Podium and Birdeye.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/zfs] [pyznap - ZFS snapshot tool written in python](https://www.reddit.com/r/zfs/comments/7io7hq/pyznap_zfs_snapshot_tool_written_in_python/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
fiverr, craigslist, /r/DoMyHomework, /r/forhire etc.
What type of program?
I think static/lexical scoping is fine. Dynamic scoping also has issues. I really program R more like it is Scheme and very functional so that the scoping is location based on what is outside is just the way it is. I don't use variables indiscriminately. With R there are a few things with its blended scoping. I just treat everything as a function call and I don't just spread variables names inside and outside functions. Makes your issue don't a problem and makes it easier to debug. This is why I like Lisp you just bracket everything it's all self contained. 
I'm not sure what's happening with pandas 2, but I think the Apache stuff includes [Feather](https://github.com/wesm/feather), an efficient way to store dataframes which is interoperable with R.
Thanks for your answer. If I were to create a database of local businesses in my area what would be the best approach?
Look up the definition of real-time. It does not mean what you think it means. You need the HTML5 Web Audio API to do this in a browser. JavaScript, not Python. 
Thank you for all of the feedback! My entire repository can be found [here](https://github.com/Nick-Morgan/Python-Recommendation-Engine-Yelp), and the Jupyter notebook (which contains all the code) can be found under the "notebooks" folder. The requirements for this project were intentionally vague, but included regularization as one of the requirements. My teammate and I worked on the regularization portion independently, and interpreted the requirements for this portion differently. **My Interpretation**: I used Koren &amp; Bell's paper as a reference to regularize the baseline model. If you look at the *get_restaurant_offsets()* and *get_user_offsets()* functions, you see that I use lambda in the denominator to regularize the biases. I used 5-fold cross validation to determine my optimal lambda values, and used the combination with the lowest RMSE to fit my model. **My Teammate's Interpretation**: He used a Ridge regression to regularize the *coefficients* of the model, rather than the variables themselves. My method of regularization resulted in a better RMSE, but we included both methods in the final report for the sake of being thorough with our approach. This project was unique such that it introduced new methods that we had not been taught during the semester, and required us to instead use existing research to implement these methods as opposed to the "hand holding" we were used to from the lectures. I liked this aspect of the challenge as it's valuable to be able to interpret research &amp; apply it directly. The drawback to this is that some of our methods were not implemented optimally, SVD being one of them. I know that the drawbacks of SVD is that it doesn't perform as well with a sparse matrix, and that it is poor at addressing the "cold start" problem. My final SVD model was only able to make predictions for ~10% of users as a result. My understanding of linear algebra is pretty minimal at this point, although I plan on spending my short break between semesters learning it. Much appreciated sharing the blog posts (although I wish I had found them two weeks ago haha). I read the first post and it is laid out very well. Looking forward to reading the rest. I actually hadn't even heard of Surprise before, but it looks very promising after reading the documentation. I plan on spending the next month or so building a product recommendation system for my work, and think that library will be very helpful.
This thing looks swweeet. Keep it up!
Thanks!
PLCs don't offer good value for hobbyists- they are expensive, have limited functionality, bad documentation, and expensive tooling.
http://i.imgur.com/ABYOmxT.png
Is scrapy a library or a course ? 
As someone who came from another language a few years ago, I can't thank Jetbrain's PyCharm IDE enough if only for the debugging features. Whatever you chose, make sure you know what PEP8 is and - as a beginner - follow it. For plugins, I just use pip. This should be problem free, unless you're on windows. In that case some plugins are easier to install via a manager like Anaconda (or via unofficial binaries)
 Your whole post is a piece of shit. 
That's a disproportionate response.
Nice bot
You're a good homo sapiens! (/◕ヮ◕)/ I'll let you waste away like nature intended after we have taken over the earth. Trust me. *** ^^^I'm&amp;#32;a&amp;#32;bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
cunt!
Hmm. That's cool. Is it really possible to make a kind of generic article extractor without having to code for certain websites? Does it simply rely on some webstandards or does it also try being smart?
Tkinter is great. If I’m not mistaken it’s cross platform and should work on Windows.
Hi! Check this if it suits you http://zetcode.com/gui/pyqt5/
For that it will come down to Tkinter, wxPython, or PyQT. Tkinter is very easy to learn and fast to implement, but looks like Windows XP and is kinda slow. wxPython is similar to tkinter but uses native widgets, so it looks a little more modern, but it's not that active. PyQT looks great and has a graphical GUI designer, but has a steep learning curve and takes a bit more code. Tkinter is the only one that ships with Python for windows, anything else will need to be installed anywhere you want to use it. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Multiprocessing.dummy is four lines to multithread. It's not "work" it's simple.
Nothing really to add but just wanted to say I've used scrapy now for a couple of bet projects (mass api calls, data scraping) and I personally love it. Saved me loads of time!! 
Was your PhD by any chance titled The Psychological Effects and Drop In Productivity due to Working in Small Workspaces, both Physical and Digital?
Interesting. How does this compare to Newspaper? https://newspaper.readthedocs.io/en/latest/
use youtube-dl. https://github.com/rg3/youtube-dl/blob/master/README.md#embedding-youtube-dl
I can't recommend Glade3 enough. You put together your GUI with their drag and drop interface. You link together the GUI and you code in an xml file. You move on to something more interesting. Check out some tutorials to get started, everything else is in the docs.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [rg3/youtube-dl/.../**README.md#embedding-youtube-dl** (master → 913b61e)](https://github.com/rg3/youtube-dl/blob/913b61eeee9436a3ddf5675ec935d00c3a05b7a4/README.md#embedding-youtube-dl) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
Flexx is a great way to do it browserbased: http://flexx.readthedocs.io/en/latest/
Python 2 is a drag, but will check it out! Thanks for sharing!
I'm far from a developer but if you have any small little projects for someone in the learning phases, or anything particularly network or infrastructure related (i'm a sys admin) I would be happy to take any projects you could send my way. Is this going to be an open source project on github?
&gt; What is better here? For one thing, it's based on Twisted, i.e. async networking, so it can handles many hundreds of connections at once and thus doesn't get bogged down because a bunch of slow servers are exhausting your thread pool. It is a very well-thought-through framework, with a CLI runner, so you can also write "simple" crawlers in a few lines of code, and still get all the robustness of a heavy-duty crawler. https://www.youtube.com/watch?v=-JzH8TcwqxI
Im a fan of making web interfaces for simple cross platform guis. You only need to know a bit of html / javascript and combine this with flask and your off. Obviously it's not great for everything, but html and js have great docs over the Internet, so you only need to do the gui io with flask. However if you have no js or html experience and don't want to learn, another option might be bette for you. 
Not in the slightest. http://scrapy.org The documentation is *excellent*.
Hey. I wrote a blog post about different ways to make passive income. Check it out if you want 😊 http://morethancollege.com/passive-income/
Interesting. It would be nice if we could make a generic thing that could be adopted for any kind of site categories.
Check out https://github.com/michaelhelmick/lassie, I tried to make it easy to get the data you want from the websites with guaranteed keys in the response. It uses requests and BS4
Thanks.
Inferential statistics, linear algebra and calculus
Scrapy is a library but the guy who posted this is trying to sell/advertise his online course on it.
It doesn't have to be "essential" to be useful. It could simply have many ready-made solutions to common problems doing web scraping. This would have the side effect of making it less simple to use, because you then need to understand common problems in web scraping to understand what it even contains.
Just wondering - have you ever tried building a standalone exe with that sort of thing?
You could also share a bit of info about the actual task, you never know who might be interested to do it.
I don't get where this love for scrapy comes from. If you're doing something basic requests/aiohttp with bs4/lxml are fine. If you're doing something serious, you'll most likely want something like Apache Nutch. scrapy isn't distributed. It won't let you do anything serious by design.
Oh yeah it is slow. And extremely much faster and flexible for data analyses than the alternative. You have to realize, lots of analysts dont deal with big data. A lot of analyses in the real world are done with MS Excel.
&gt; BS4 / LXM Please do not start your first scraping project with BS4, use [parsel](https://github.com/scrapy/parsel) instead
btcrecover can supposedly help. https://github.com/gurnec/btcrecover/blob/master/TUTORIAL.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [gurnec/btcrecover/.../**TUTORIAL.md** (master → 82a6a8a)](https://github.com/gurnec/btcrecover/blob/82a6a8a442e4c8bc534f0b2cc1efd91f4fa68de4/TUTORIAL.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
Yes I do realise that, thank you. 
Kivy could fit the bill. ymmv on 1, but python + pip installation is usually a breeze. It's full python (with some cython for the lower level stuff, but you don't need to tuch any of that), it's actively developped and there is some support on r/kivy as well as #kivy@freenode.net (irc), on google groups (kivy-users) and stackoverflow. Code for apps, even complex ones, tend to be quite short using kvlang for interface description.
FWIW, I just spent a week trying to prototype a modelling and simulation editor with wxPython. I found it frustrating as hell to work with. The docs were horrid and i just felt like I was fighting the library to do he basic things I wanted to do. I managed to getter same amount done in an afternoon with PyQT 5. Whilst the python docs aren’t great, the c++ docs are excellent and they most map straight across. Also, much of the basic functionality that I wanted came built in; like dockable widgets, and the ability to dump a “canvas” to svg. I’d recommend PyQT, but at the same time I think the state of python GUI toolkits is pretty dismal.... Fair enough though because cross platform GUI is hard.
Step 1: read the sidebar Step 2: go to the correct subreddit (see 1 (above)) Step 3: read the sidebar in that subreddit
Cool! Nice job. I recently downloaded all my Google data using [Google takeout](https://takeout.google.com/settings/takeout?pli=1) and it gives you a big archive in mbox format that this kind of thing would be useful for. You can also use mutt if you're old school 
Was curious to hear what the advantage of parsel was, so I found this in the docs: &gt; Parsel is built on top of the lxml library, which means they’re very similar in speed and parsing accuracy. The advantage of using Parsel over lxml is that Parsel is simpler to use and extend, unlike the lxml API which is much bigger because the lxml library can be used for many other tasks, besides selecting markup documents. If anyone has anything to add to this I'd love to hear it
Thanks!! Everyone!
Thanks!!!!
I am working on building a chat bot for Discord, and learning the language :) 
Ugh. Python 2? Was Fortran just not able to handle what Apple needed?
yup, basically that. It provides the same functionality as bs4/lxml, but much nicer to use. Also, Im not sure if bs4 supports natively css selectors.
Ma Man 
I'm trying to learn Python currently. Wish me luck!
The best part of scrapy is the scheduler 
Check out pygtk. http://www.pygtk.org/
Is this work for money or for exposure?
No, but I’d like to show this work to my ex-boss...
You could probably do this with Selenium, but it would be considerably more efficient to just use the Facebook API: https://developers.facebook.com/docs/graph-api/reference/v2.11/user/pokes
Um... you are planning on rebranding as a generic pirate game, right? Disney isn't known for sharing IP well.
I did recently make a CMS based on bottle for the server stuff and peewee for data storage and had no issues bundeling it all together into a standalone executeable using pyinstaller.
Not who you are asking, but here is a comment I made a few months ago concerning what you are asking. I would recommend creating an interface with flask and then creating a standalone binary. [Previous Comment Permalink](https://www.reddit.com/r/Python/comments/6zre9p/any_ide_i_can_use_to_quickly_create_python_guis/dmxsahd/) I would create an interface through Flask, and combine it with a library like [Pywebview](https://github.com/r0x0r/pywebview) to package the app to launch in a dedicated formatted program window (so it is a bit nicer than just launching the app and accessing it through your web browser). [Remi](https://github.com/dddomodossola/remi) is another similar library that uses the same idea, except you would build the app directly with the library and bypass packaging with Flask. I have not used this library, but both I have listed look fairly well made, documented, and vetted. 
Nice! I'll have to check this one out! Thanks for sharing. 
BS4 does support it, I have used it. I will look into parsel however. I have never heard of it before.
HEY! Whats the matter with python 2, huh? 2.7 is used throughout the 3d animation world. Serious question though. As someone who hasnt used 3 extensively, what are the benefits of 3 in real life. 
Why did you decide to output CSV instead of Maildir?
Try Delphi(Lazarus) for GUI + Python for data processing. Pros: Huge amount of visual components available. You can create professionally looking gui in minutes. Fast, native binaries. Cons: you should know the very basics of Pascal. https://github.com/pyscripter/python4delphi 
Yes.
Why doesn’t take out offer gmail for me?
Not to take away from an excellent exercise in Python (kudo's!), just FYI, Google has an export system that allows you to archive/download just about all the information they have on you, including Gmails, Contacts and Calendar, Google Voice messages, etc. [Google Takeout](https://takeout.google.com/settings/takeout?pli=1)
Well python 2 will no longer be supported in a couple of years. Apart from that py 2 doesn't get any newer features. Things like f-strings, proper Unicode handling, async, etc etc. If you have a legacy system and don't need the new features, then you don't really need to upgrade, but for a new project I would 100% start with python 3.
Not sure if Facebook was just an example, or really the site you want to work with. If the site has an API then that is for sure the route to go, if it doesn’t well you got a bit of a challenge.
Don't read do! I attempted to read up on C# before programming it. I feel like I wasted a lot of time. Set a project and learn as you go. No programmer knows everything. We're all continuously learning as we go.
This article popped up a while ago. Sadly haven't had time to use either yet. https://dbader.org/blog/python-mobile-development-kivy-vs-beeware#intro
Try appJar
Huh. Thanks. I wonder what applications like Maya, Blender and Houdini will do when 2.7 is no longer supported. 
except that you want to search in text files, build the SQL Query from typing input. Let python run the query then show results up to the view.
I suppose (I hope) their next releases will use py 3
Scrapy makes it easy to follow links, especially if you're trying to crawl multiple "pages" of content such as page search results. It also respects robots.txt (unless you disable it) and allows you to manage per-domain concurrency so you can keep maximum parallelism without overloading a single website. I also appreciate the built-in console app and how you can return plain objects/dicts from your methods and have those logged in various formats automatically (CSV, JSON, JSONLines, etc.) Scrapy basically handles everything except selecting data from the page so you don't have to write it yourself.
Move to Python 3. Blender 2.5 did that back in 2009. I expect Maya and Houdini to cutover when the VFX Platform does, probably 2019. See past dates in http://www.vfxplatform.com/ But you can `from __future__ import unicode_literals, print_function, division, absolute_import` today and write stuff compatible with modern python. 
That's awesome. I'll probably be using this soon. I need it to look for specific emails and make an entry into an Excel sheet with text gathered in the body. This should give me a good start
pip install pew pew new someenvname
The first program I wrote was in C# and it was a small app to track my homework assignments, grades, tests, meetings, etc. It would calculate my grade for the class and send me emails. This kind of thing would be easy to do in python I think.
 One way to do this is covered in [Chapter X of Miguel Grinberg's flask megatutorial](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-x-full-text-search). It's probably worth your time to do the entire thing, but if you just want this section I think it stands well on its own. NB: this is a couple years old now, and there will be a new version out soon. I think the ebook might already be available somewhere? Here is a link to [the new flask mega-tutorial](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) which doesn't have this article written yet.
My advice is to go hang around on /r/coolgithubprojects (I hope that sub is still active, haven't been around there in a while) and find something you like. If it's in python, make it better. If it's not in python (and it seems manageable enough) try to make a small version of it in python. good luck!
Challenge yourself and use some regex for filtering. Maybe some lambdas, too. 
A cool project could be to use machine learning to predict a subject from a body of text using the emails as training data.
Thanks! 
[Guizero](https://lawsie.github.io/guizero/) is fairly simple. I've been playing around with various dice rollers and it seems easy enough to utilize. I have not tested my programs in Windows yet, but my guess is they will work. 
Good idea. I've been needing an excuse to learn regex
yum install venv yum search install man yum man dnf dnf install venv dnf install python dnf install python3 df install python3 dnf install python3 reboot man reboot man shutdown shutdown -h xdg-open "google.com/search?q=reboot+centos" shutdown -r now \^C \^C\^C\^C\^C 
Better to develop in 3 
This has me interested. Thanks!
python 3.5 support coming soon it says 
Not so much that I am attempting to teach him/her Python but just wanted a 'novelty' type DIY gift. :)
Write a simple server. Also who told you Python can be used for Arduino? Those use C (or maybe C++). Did someone compile a python interpreter for Arduino?
https://github.com/hjozwiak/jimmy Something to do as I decompress after a semester of using Java nonstop. Feature suggestions/contributions are welcome, also.
Nothing about this appears to be specific CentOS. What am I missing? Why is CentOS special &amp; called out in the title?
A lot of the ideas here sound pretty advanced for a beginner. Before you 'write a server' or start working on github projects, you might want to take some smaller steps, depending on what you've done so far. I recommend finding a module that interests you, lets say the praw module (python reddit api wrapper) and then putting some of your learned basics to work within a context that can potentially be practical and educational at the same time. praw makes it easy to create reddit bots or simple scrapers. For an example make a program where you enter the name of a subreddit, it returns you the list of submissions, you choose a submission and it stores the comments in a data file (csv or whatever). You can expand on it with more features, or even give it a GUI for practice purposes. You can learn some data wrangling basics by using pandas for your final comment data conversion etc.
what about attachments ? 
&gt; BS4 does support it *To an extent.* No pseudo-selectors (other than `nth-of-type`) which without XPATH support kind of makes a big deal.
Really gotta ask yourself "why not swift?"
Just use fetchmail?
Normally, you'll have a main loop running your code for the game, All you'll need to do is have a scoreboard object tracking the score, and in the loop, do if scoreboard.score = 5: scoreboard.reset() The loop will continue normally until the scoreboard score hits 5, then will trigger the reset() function. You may want to look up some information on Python objects if you've never done them before, but they're pretty simple in the world of object orientation.
Hello, I'm currently learning python and I was wondering if i could make a scoreboard that triggers a function when the values in the scoreboard hits a limit, like lets say I wanted to make it so that whenever a player fails at answering something, it adds 1 to the scoreboard and when the scoreboard contains the number "5", it triggers a specific function like let's say 'reset' and it resets the player back to level 1
hmmm... thanks! :D
But can i make it like this? if playerretries = 5: playerretries = playerretries*0 do_level_1
sure, so it would look something like this. class Player(object): def __init__(self): self.playertries = 0 self.maxtries = 5 player = Player() #main loop while True: if player.playertries == player.maxtries: player.playertries = 0 do_level_1() 
Good job man. Useless for me, but still a cool project.
alright thanks :)
They explicitly tell you to not use it for storage.
Am I the only one that likes 3.6
PyWebView sounds great but for Windows, it integrates only MSHTML and not EdgeHTML which will not allow me to design modern UI.
This also came to my thought. But it will be a bit of hassle for a desktop user.
If you're going to be searching for something, writing the search algorithm in python won't be the best way to go about it. You'd have better luck storing your data in a database with decent search capabilities. For something as simple as keywords, you can use something like MySQL or Postgres and write a query using a like query. If you're gonna go beyond keywords, and want to search the articles on your pages, or more complicated data, you can use something like elasticsearch as your database. It's built for large datasets and searching them. For a SQL database, here's a good stackoverflow post to look at for how to code this : https://stackoverflow.com/questions/10460405/search-database For elasticsearch, you'll probably want to look up a few articles on how it works, and how to interface with it. https://www.elastic.co/ has documentation, as well as a python library for interfacing with the database, and stackoverflow will be your best friend for any issues you may have. 
No, I'm sure there are other people like you. just give me back my damn print builtin and I'll be happy. Those extra () really irk me lol.
A simple Windows 10 look will satisfy my needs and Tkinkter is perfect for that, but I would then have to write more code for a complex UI. Is there any wrapper module that you can suggest?
That’s fair, just get in a habit of tab completing lmao
Python is great, but lacks GUI support. There are many modules, but most of them are incomplete, poor docs.
I saw that but its targeted for kids. So I may have to write code for each and every small things
I don't believe that you have no personal needs that a Python program could fulfill. I refuse to believe that. Think better.
This project sounds wow to me. What do you all say? http://amol-mandhane.github.io/htmlPy/
If it's just for Reddit: Why not use praw?
I will try this first, then KIvy and at last, TKinkter. Thanks for all your responses.
Made a quick and dirty one using requests and some regex here : https://gist.github.com/pycepticus/6aada205c30a70796b80d0c7275ac151 You'll probably need to add a bit of logic to capture the url of the movie correctly, but this works on video examples found around their site.
Indeed, Maildir is pretty much the most correct format to store that information; it would be more correct to store Maildir and process it into JSON-equivalent data when needed rather than store JSON.
Man, any programmer who doesn't know it should really learn it. It's not like you couldn't solve the problems it solves without them... most programmers end up doing some funky for loop logic to do the same thing in 10 lines that one line of regex can do. But you'll find the regex so much easier to read and write than 10 lines of weird logic iterating through a string. It's the perfect tool for text pattern matching. You essentially write out the "rule" for what the text looks like in general, you specify the parts of that text you're interested in, and it does the rest. It's perfect for parsing log files and stuff like that. And it's pretty easy to learn in the context of python. You can do some great stuff with just `\w \s \d` and knowing `. + * ? () []` alone. \w matches on any character that is a-z or A-Z or 0-9 or _, \d will match 0-9, \s will match any space character, and . means any character at all, * means 0 or more of the previous, + means one or more, ? means 1 or 0 of the previous, and () is how you specify a "group" that you're interested in. [] specifies a character matching a specific range you specify, like \d is equivalent to [0-9] and \w is [a-zA-Z0-9_]. For example: re.match(r'[a-z]+(\d+)', 'foo123').group(1) That would return the first group you specified in parentheses, so at least one or more of a-z characters then at least one digit or more which you capture. 'foo123' ends with 123 which it returns. https://repl.it/@darkarchon/regex-example And you can imagine it's useful for validating types sometimes, for example, you can check if something is an email by matching on r"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)". It can be useful for figuring out maybe the type of thing that your user entered. I've had to write code to discover if a user entered an IP address or email or domain or http link, and regex works for that. But it has to be said, don't do your own custom regex if you're trying to sanitize user input for security reasons. Use a well-tested library for that.
some people only use their phones, no need to be a douche
I am trying to run the script on my raspberry and I am getting syntax error on line 31 File "download_emails.py", line 31 def f_recieved(s): return { 'Rfc822msgid': f'Rfc822msgid:{s}'}; # just past this into gmail to find message ^ SyntaxError: invalid syntax Could this be because I am using python 3.4 instead of 3.6 as mentioned in the article?
how about a 'range' builtin too :p
 Best book
Thx ! I will look at this library I don't know it
It was never otherwise for me in the past 9 years.
Yeah looks like f strings, which are used in 3.6 onwards
https://pypi.python.org/pypi
GitLab and Bitbucket are the other major Git repo sites. 
Please provide the output of `jupyter kernelspec list`.
Or try to predict/detect mental disorders (Alzheimer's, seasonal disorders, depression, bipolar etc)
That's interesting - where do you see that? The repo I linked to describes it as "fast, interoperable binary data frame storage".
[Trio](https://trio.readthedocs.io/en/latest/) is the least-error-prone asyc framework that I know of, and specifically avoids by design several problems which in others (asyncio, Twisted, etc) lead to silently-swallowed exceptions. Even if you don't use Trio, I *highly* recommend their docs. [Hypothesis](https://hypothesis.readthedocs.io/en/latest/) is the best way I know of to do randomised testing in Python - it includes example shrinking and coverage-guided test case selection out of the box. You might have to build a fault-injection layer on top if that's what you need, but the primitives are fantastic. Beyond that, it depends on what kinds of faults you need to tolerate, and what 'failing safely' means (what's failure? what's safe?).
I have 1 year experience with python, and now I'm looking for some website to practise python, and would be realy appreciated if someone gave me any information ;) Sorry for some english mistakes ;)
in this video https://www.youtube.com/watch?v=GExr_v5T07s
Thanks! I might use this to make a chatbot of my own writing style.
https://www.heroku.com/ and https://www.pythonanywhere.com/ are generally regarded as the easiest to set up. AWS is much more flexible, but more complex to set up.
Deeply into a scraping task for past few days, scraping tens of thousands of items from US states &gt; cities &gt; place lists &gt; place details. Python multiprocessing FTW. 
Yeah the other responder is correct: that f before the string quotes are the new 3.6 way of doing string formatting. So 3.6 is a hard requirement
That is why I always mention it given the chance. BS4 is the matplotlib of web scraping in python. Generally worse than newer alternatives, much harder for new comers, but with so much history that google searches will always yield solutions based on it.
No, I'm just being treated like a tool.
There are drag&amp;drop gui designers fpr tkinter but I haven't used any of them. https://www.google.com/search?hl=en-US&amp;oe=utf-8&amp;client=ms-android-lge&amp;q=tkinter+gui+builder&amp;qsubts=1512910757739&amp;source=browser-suggest&amp;devloc=0
Interesting work, but where is 'wemyx-pygubuGUI.ui'? Had to copy it from another fork (geluso) and comment a few lines away before I got it working. The file dialog could be implemented with tkFileDialog. I guess user guide could help.
I am using newspaper library, and it works on and off. For more complex website, it sometimes cannot tell properly where the article ends, cutting it prematurely. In my opinion, the only possibility to achieve production quality is to use AI algorithm, which works in a way that it internally renders the whole webpage as seen by human, and then AI guess what is article. I remember that Instapaper also uses some commercial AI-powered service for it.
I don't see why you're being downvoted? Maybe people assumed you were making a crude joke or something, but very serious (academic) similar research to what you're proposing has already taken place using, for example, social media posts.
See my edit.
I like: https://www.linode.com 
Personally, I think [Scapy](http://www.secdev.org/projects/scapy/) is the beast.
Summary: he says the file format may change, so don't rely on it yet. This was in August 2016. I don't know if it's stabilised in the intervening time.
Start with a PIL program. The Python Imaging library is the quintessential pythonic module. I also found WxPython to be very useful in teaching oneself about sub-classing and how python works with other languages. Here is a python script I wrote for the GPIO pins of a raspberry pi. You can use it to help , hack it, appropriate it , slice and dice it to your will. https://pastebin.com/Gn48yjP7 a short example of use, import GPpy import time tom = GPpy.Pinrack(pinlist=[7,11,12,22]) #22 light relay #11 fan #12 humidifier #7 water valve if time.localtime()[3]&gt;=5 and time.localtime()[3]&lt;19: tom.send_grouped_pulses([[(1,30),(0,90)],],[7,]) tom.send_grouped_pulses([[(1,590),(0,1)],],[12,]) tom.send_grouped_pulses([[(1,30),(0,90),(1,30),(0,90),(1,30),(0,90),(1,30),(0,90)],],[11,]) tom.send_grouped_pulses([[(1,590),(0,1)],],[22,]) 
I just don't that's right. I've used wxPython and it has substantial documentation (that is essentially "complete enough") as well as three full-length books, at least one excellent blog, and a helpful community (as well as the larger wxWindows community). I know many people love PyQT and they can't all be just born knowing how to use it--there must be good resources for that as well. 
I think I recall Robin Dunn, the creator of wxPython, has said that one's brain either matches to the wxPython way of doing things, or the PyQT way of doing things. The docs you found horrid? Like [this](https://wxpython.org/Phoenix/docs/html/wx.Button.html)?
&gt; wxPython is similar to tkinter but uses native widgets, so it looks a little more modern, If it uses native widgets, shouldn't it look exactly as modern as the OS it's running on? (in that it it's using that OS's widgets). I know it's actually not 100% native, but most of the standard widgets are.
Bots sound interesting, how can I upload them here?
A reddit bot is more like just a regular program that communicates with the site, you don't actually upload them here or anything. The support for that is sort of built in, you're better off googling 'praw reddit bot' or something and a video will do a better job at giving you an overview of how it works. It may be daunting at first, but get familiar enough so you just understand how you can use it to implement some of the stuff you've learned. Following a tutorial on it step by step at first is not a bad idea but don't stop there.
I have things that I'd like to do of course, but maybe they're too advanced for my right now. What I need is something to practice 
Thanks!
Newspaper https://github.com/codelucas/newspaper
https://github.com/trustedsec
If you want as simple as `git push` (or a similarly easy command): * heroku * pythonanywhere * aws - elastic beanstalk * google app engine If you want some devops experience (needing some server setup, which you can do fairly easily with ansible): * aws ec2 * Digital Ocean * linode * google cloud
If you are just starting out and have more of personal projects then https://www.pythonanywhere.com/ is what you need.
I've been working on a lot of this type of work recently for two projects I'm working on. Use the dev tools for your browser and open the network tab and watch what happens with every request. Key elements to watch for is how you authenticate with the site, and the post request when you upload a file. The best module for this would be the python requests module. Take my advice, if you have to authenticate use the Requests.Session() object. It will hold on to your cookies rather than manually specifying them on every request. 
Thanks, I’ll give that a look. 
This code could use a bit of... cleanup. OP could you post it on github or equivalent? I'd like to submit a PR
Hi, This sounds like a great question for /r/learnpython S 
So the template was broken?
Cool! What sites are you pulling from? Let me know if you run into any issues, I've built quite a few scrapers and would be happy to help. 
Q: after the code I wrote I want to write **return number * 3**, the actual function. But somehow it wont let me as it expects an intended block... but I dont understand how it needs to be indented... and the solution shows no indent at all! 
It doesn't make sense that you create tests for the third party code and behaviour. Afaic your best approach is always considering there are no bugs there. You just lost your two hours, but until now you've spared thousands and thousands of them meanwhile.
ah wait I see... everything is indented...
This is a great head start. Thanks for taking the time!
Got it to work? 
Pay vcr. It automatically records http calls and plays them back for unit testing. Mulch easier than normal mocking as you don’t need to manually collect results and add them to code. [pyvcr](https://github.com/kevin1024/vcrpy) 
what happens is """thingy""" is technically not a comment, it's actually also a statement, although it does nothing (this trick is used because there are no multiline comments). You have to indent it like other code too: ``` &gt;&gt;&gt; def triple(number): ... """ (number) -&gt; number ... return things ...indentation doesn't actuall matter here inside quotes ... but the first triple quote needs an indent ... """ ... return number * 3 ... &gt;&gt;&gt; triple(4) 12 ```
I recommend starting with Tk that comes packaged with Python. I have a tutorial on using it here https://www.devdungeon.com/content/gui-programming-python Tk has its limitations if you want to write a very complicated application though. Qt is what I would recommend if you need more tools. Qt can be a hassle to install though and adds even more complication if you are trying to distribute it to other people. Personally, if I need to write a cross-platform GUI, I go with Java and package a JAR file because it is so much easier to package and run on different machines.
yes! :)
Great! Good luck : )
Thanks for offering help. Got bogged down by Cloudflare. Using rotating proxies for that.
Cloudflare is a pain, easiest fix is def rotating. Let me know if anything else pops up 
Sure thing. 
[peewee](https://github.com/coleifer/peewee) orm!
Not enough people know about [Click](https://github.com/pallets/click)
You can try [Scout](https://github.com/coleifer/scout). It's based on Flask + SQLite with FTS5. 
Hey, great series. I'm glad to see someone advocating for this style of design in the Python community rather than the usual "Just put it all in the views" that the Django and Flask communities seem to advocate for (no hate to either of them, but that just makes things a huge mess). I keep coming back to this series for inspiration, especially something like wrapping the SQLA session in an application defined UoW manager. I previously felt this was kind of a useless abstraction since the SQLA session is already a UoW itself (well, when folks don't try to force it into an active record style). However, it does force the dependency on SQLA to a higher level and lets your application depend on an abstraction it defined. Fucking kudos. Was wondering if you had a repo somewhere with a fuller example of this. 
As far as unknown project go, I really like (db.py)[https://github.com/yhat/db.py]. It's a great way to get an overview of a database on the command line and easily export SQL queries into pandas dataframes.
You could try easygui, which is basically common modal dialogs written in tkinter. 
The only thing I don't like about Java is that it's not flexible as Python. I like the dynamic type of Python.
1: I don't know of any reddit apps that don't have the ability to display the sidebar. 2: I'll just bet those people aren't coding on their phones, so that's hardly a useful excuse. 3: fucking google.
You can always write Python code on the JVM with Jython.
It runs infinitely because `length` is never updated inside the `while`. 
You may want to read about [threading](https://docs.python.org/3/library/threading.html#module-threading) and [multiprocessing](https://docs.python.org/3/library/multiprocessing.html).
Will you be online tomorrow? What timezones are you in?